active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AMzMzMzPjv8DMzMzMzAzAQDMzMzMzA0AAmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:50:01.459374
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__6
  params: {}
hash: 7831d6374bfa3940b1e6aaddc6e49a27b45841a0745b8a4f0243661a61ebcac7
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7831d63_20231221T064934300296_embedding__6_VirusGO.yml
results:
  fit_time:
  - 17.6358859539032
  - 17.523982763290405
  - 17.630537033081055
  - 17.60410714149475
  - 17.962509632110596
  score_time:
  - 2.420609474182129
  - 2.486910104751587
  - 2.70047926902771
  - 2.623264789581299
  - 2.7044050693511963
  test_average_precision_macro:
  - 0.947409003196085
  - 0.9894040871982049
  - 0.934429882665644
  - 0.9878880631145702
  - 0.9193356576142042
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9081887949007804
  - 0.9107017667106729
  - 0.9364678632681125
  - 0.9431458477693005
  - 0.8932377430613825
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9145833333333332
  - 0.9380952380952381
  - 0.9462962962962962
  - 0.97008547008547
  - 0.9105691056910568
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9444453211117771
  - 0.9788612028996645
  - 0.9510924028147844
  - 0.9752916487537232
  - 0.944973836236812
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9041666666666667
  - 0.9206349206349206
  - 0.9481481481481482
  - 0.905982905982906
  - 0.9146341463414633
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9041666666666667
  - 0.9206349206349206
  - 0.9481481481481482
  - 0.905982905982906
  - 0.9146341463414634
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9041666666666668
  - 0.9206349206349207
  - 0.9481481481481483
  - 0.9059829059829061
  - 0.9146341463414634
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8831632653061225
  - 0.9084249084249083
  - 0.9537777777777778
  - 0.8871794871794872
  - 0.9062649450023913
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8271999633315571
  - 0.854679032217057
  - 0.9030427388346643
  - 0.8305788763506586
  - 0.8435504352592319
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8250950570342205
  - 0.8529411764705882
  - 0.9014084507042254
  - 0.828125
  - 0.8426966292134831
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.85
  - 0.8718820861678005
  - 0.9126984126984127
  - 0.851037851037851
  - 0.8681765389082462
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7913656808397915
  - 0.8337276926115856
  - 0.9137732919254659
  - 0.8005927220329547
  - 0.8293943018679829
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9145833333333332
  - 0.9380952380952382
  - 0.9462962962962963
  - 0.97008547008547
  - 0.9105691056910568
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.39289513596940745
  - 0.416185501934564
  - 0.5752464521719343
  - 0.4393770798738377
  - 0.45317924018006983
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6835202137065177
  - 0.7445379237378642
  - 0.8210881625933893
  - 0.7021946324134651
  - 0.7247944542656825
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.61625
  - 0.6943399442897233
  - 0.7488303688022451
  - 0.6494826186701206
  - 0.6564933601467522
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6050327546016289
  - 0.6565136247403939
  - 0.7967919190672588
  - 0.6226256057657752
  - 0.6623603704174795
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9395628656478745
  - 0.9585875789221528
  - 0.9615581808082171
  - 0.9790148793920795
  - 0.9327358452668684
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.45
  - -1.5
  - -1.3111111111111111
  - -1.358974358974359
  - -1.5609756097560976
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09583333333333333
  - -0.07936507936507936
  - -0.05185185185185185
  - -0.09401709401709402
  - -0.08536585365853659
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09583333333333334
  - -0.07936507936507936
  - -0.05185185185185185
  - -0.09401709401709402
  - -0.08536585365853659
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09583333333333333
  - -0.07936507936507936
  - -0.05185185185185184
  - -0.094017094017094
  - -0.08536585365853658
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.11683673469387755
  - -0.09157509157509156
  - -0.04622222222222222
  - -0.11282051282051282
  - -0.09373505499760881
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03937500000000001
  - -0.04041005291005291
  - -0.03666666666666667
  - -0.013461538461538462
  - -0.06463414634146342
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9041666666666667
  - 0.9206349206349206
  - 0.9481481481481482
  - 0.905982905982906
  - 0.9146341463414633
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9041666666666667
  - 0.9206349206349206
  - 0.9481481481481482
  - 0.905982905982906
  - 0.9146341463414634
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9041666666666668
  - 0.9206349206349207
  - 0.9481481481481483
  - 0.9059829059829061
  - 0.9146341463414634
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8831632653061225
  - 0.9084249084249083
  - 0.9537777777777778
  - 0.8871794871794872
  - 0.9062649450023913
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9041666666666667
  - 0.9206349206349206
  - 0.9481481481481482
  - 0.905982905982906
  - 0.9146341463414633
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9041666666666667
  - 0.9206349206349206
  - 0.9481481481481482
  - 0.905982905982906
  - 0.9146341463414634
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9041666666666668
  - 0.9206349206349207
  - 0.9481481481481483
  - 0.9059829059829061
  - 0.9146341463414634
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8831632653061225
  - 0.9084249084249083
  - 0.9537777777777778
  - 0.8871794871794872
  - 0.9062649450023913
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9802057028619529
  - 0.9918091866376181
  - 0.9789673250558247
  - 0.9915329768270945
  - 0.9685078986549577
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9740356875734587
  - 0.9707692307692308
  - 0.9738181818181818
  - 0.9826086956521739
  - 0.9572649572649572
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.960625
  - 0.959589947089947
  - 0.9633333333333334
  - 0.9865384615384614
  - 0.9353658536585366
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9700834879406307
  - 0.9836217948717949
  - 0.9751210342930497
  - 0.9827272727272728
  - 0.9763305693236489
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9845583325421724
  - 0.9845608495341333
  - 0.9879099346731407
  - 0.9893389898054789
  - 0.9910255710244581
  train_average_precision_macro_oob:
  - 0.9291825852049169
  - 0.9239919635792848
  - 0.9502708141243543
  - 0.9425920539537381
  - 0.9475302247932897
  train_average_precision_micro:
  - 0.9649047655212951
  - 0.9636244939805242
  - 0.9593458515134312
  - 0.9701854271390299
  - 0.9727112372823797
  train_average_precision_micro_oob:
  - 0.9170761931554406
  - 0.9068276270556991
  - 0.892243152831114
  - 0.9122446192985308
  - 0.9249454593472202
  train_average_precision_samples:
  - 0.9805389221556886
  - 0.9782828282828282
  - 0.9722222222222222
  - 0.978670634920635
  - 0.9849397590361446
  train_average_precision_samples_oob:
  - 0.949500998003992
  - 0.9240404040404039
  - 0.9246913580246914
  - 0.9239087301587302
  - 0.9424698795180723
  train_average_precision_weighted:
  - 0.986890306693509
  - 0.9866344454905609
  - 0.9868411225185948
  - 0.9898504401677729
  - 0.9899500330757307
  train_average_precision_weighted_oob:
  - 0.9425547508084581
  - 0.9350548460662199
  - 0.9366365045490194
  - 0.9486811669620019
  - 0.9496199195483661
  train_f1_macro:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238096
  - 0.9467871485943774
  train_f1_macro_oob:
  - 0.9151696606786427
  - 0.9202020202020202
  - 0.9176954732510287
  - 0.9146825396825397
  - 0.9176706827309236
  train_f1_micro:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238095
  - 0.9467871485943775
  train_f1_micro_oob:
  - 0.9151696606786427
  - 0.9202020202020202
  - 0.9176954732510288
  - 0.9146825396825397
  - 0.9176706827309237
  train_f1_samples:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238095
  - 0.9467871485943776
  train_f1_samples_oob:
  - 0.9151696606786426
  - 0.9202020202020202
  - 0.917695473251029
  - 0.9146825396825397
  - 0.9176706827309236
  train_f1_weighted:
  - 0.9499129819179376
  - 0.9406969696969698
  - 0.9286150837305953
  - 0.9358203677510608
  - 0.9489000779236348
  train_f1_weighted_oob:
  - 0.9125984484233504
  - 0.9154545454545455
  - 0.9097604204864931
  - 0.9090641206977841
  - 0.9049331654978122
  train_jaccard_macro:
  - 0.8979110878038504
  - 0.8863844036615061
  - 0.8785734981100061
  - 0.8776226119150162
  - 0.8992681294196915
  train_jaccard_macro_oob:
  - 0.844379543177589
  - 0.8528861372401675
  - 0.8485764201017659
  - 0.8436501352301518
  - 0.8492491211308978
  train_jaccard_micro:
  - 0.8977272727272727
  - 0.8857142857142857
  - 0.8782608695652174
  - 0.8770949720670391
  - 0.8989513822688274
  train_jaccard_micro_oob:
  - 0.84360625574977
  - 0.852198316183349
  - 0.8479087452471483
  - 0.8427787934186471
  - 0.8478664192949907
  train_jaccard_samples:
  - 0.9133162246934702
  - 0.901154401154401
  - 0.8956496178718402
  - 0.8938492063492063
  - 0.9133677567412506
  train_jaccard_samples_oob:
  - 0.8631308810949527
  - 0.8714285714285713
  - 0.8686067019400353
  - 0.8626700680272108
  - 0.8680436029833619
  train_jaccard_weighted:
  - 0.9047389703286657
  - 0.8883468679991816
  - 0.866940706727416
  - 0.879589140795049
  - 0.902946358859522
  train_jaccard_weighted_oob:
  - 0.8396305030013914
  - 0.8442499648956832
  - 0.8347333686170542
  - 0.8335335562938625
  - 0.8276172258431069
  train_label_ranking_average_precision_score:
  - 0.9805389221556886
  - 0.9782828282828281
  - 0.9722222222222221
  - 0.9786706349206347
  - 0.9849397590361446
  train_label_ranking_average_precision_score_oob:
  - 0.949500998003992
  - 0.9240404040404041
  - 0.9246913580246913
  - 0.9239087301587302
  - 0.9424698795180723
  train_matthews_corrcoef_macro:
  - 0.6097165427536877
  - 0.512683286096112
  - 0.585615612936478
  - 0.4918302380401442
  - 0.6028490008519697
  train_matthews_corrcoef_macro_oob:
  - 0.3652983942098596
  - 0.3870126273429344
  - 0.4295885163992925
  - 0.3623120773441382
  - 0.455137040830133
  train_matthews_corrcoef_micro:
  - 0.8274728613170435
  - 0.8043235148712133
  - 0.794929594894498
  - 0.7868717481995793
  - 0.829066447249004
  train_matthews_corrcoef_micro_oob:
  - 0.7208131203232416
  - 0.7379087547317442
  - 0.7357622495707842
  - 0.7166299941290913
  - 0.7286927499023668
  train_matthews_corrcoef_samples:
  - 0.7806392277691975
  - 0.7470552583851939
  - 0.7579872824795784
  - 0.7160244035018041
  - 0.7897383925637991
  train_matthews_corrcoef_samples_oob:
  - 0.6417984754465499
  - 0.6658431371730725
  - 0.6715919127625934
  - 0.6234727172038843
  - 0.6715176019062518
  train_matthews_corrcoef_weighted:
  - 0.799003157782196
  - 0.7459360797978353
  - 0.756467443973438
  - 0.7286042655855952
  - 0.7986925076455343
  train_matthews_corrcoef_weighted_oob:
  - 0.6295105104546597
  - 0.6481189925467555
  - 0.658580015739508
  - 0.6256838112618911
  - 0.660720140458695
  train_ndgc:
  - 0.9862257414520952
  - 0.9847048956687737
  - 0.98045390076821
  - 0.9846765312061191
  - 0.9896559119381348
  train_ndgc_oob:
  - 0.9646708163918492
  - 0.9460372268210594
  - 0.9466229527827525
  - 0.9455660630014229
  - 0.9592039871522807
  train_neg_coverage_error:
  - -1.2754491017964071
  - -1.2727272727272727
  - -1.3271604938271604
  - -1.2619047619047619
  - -1.2530120481927711
  train_neg_coverage_error_oob:
  - -1.3892215568862276
  - -1.4848484848484849
  - -1.4876543209876543
  - -1.4702380952380953
  - -1.391566265060241
  train_neg_hamming_loss_macro:
  - -0.05389221556886228
  - -0.06060606060606061
  - -0.06481481481481481
  - -0.06547619047619048
  - -0.053212851405622486
  train_neg_hamming_loss_macro_oob:
  - -0.08483033932135729
  - -0.0797979797979798
  - -0.0823045267489712
  - -0.0853174603174603
  - -0.08232931726907632
  train_neg_hamming_loss_micro:
  - -0.05389221556886228
  - -0.06060606060606061
  - -0.06481481481481481
  - -0.06547619047619048
  - -0.05321285140562249
  train_neg_hamming_loss_micro_oob:
  - -0.08483033932135728
  - -0.0797979797979798
  - -0.0823045267489712
  - -0.08531746031746032
  - -0.0823293172690763
  train_neg_hamming_loss_samples:
  - -0.05389221556886228
  - -0.06060606060606061
  - -0.06481481481481481
  - -0.06547619047619048
  - -0.053212851405622486
  train_neg_hamming_loss_samples_oob:
  - -0.08483033932135728
  - -0.0797979797979798
  - -0.08230452674897118
  - -0.0853174603174603
  - -0.08232931726907632
  train_neg_hamming_loss_weighted:
  - -0.05008701808206248
  - -0.05930303030303031
  - -0.07138491626940471
  - -0.06417963224893918
  - -0.051099922076365156
  train_neg_hamming_loss_weighted_oob:
  - -0.08740155157664967
  - -0.08454545454545455
  - -0.09023957951350689
  - -0.09093587930221594
  - -0.09506683450218788
  train_neg_label_ranking_loss:
  - -0.010545575515635395
  - -0.011060606060606062
  - -0.014197530864197533
  - -0.01130952380952381
  - -0.007078313253012048
  train_neg_label_ranking_loss_oob:
  - -0.029923486360612105
  - -0.04878787878787878
  - -0.04257544581618656
  - -0.04828042328042328
  - -0.0319946452476573
  train_precision_macro:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238096
  - 0.9467871485943774
  train_precision_macro_oob:
  - 0.9151696606786427
  - 0.9202020202020202
  - 0.9176954732510287
  - 0.9146825396825397
  - 0.9176706827309236
  train_precision_micro:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238095
  - 0.9467871485943775
  train_precision_micro_oob:
  - 0.9151696606786427
  - 0.9202020202020202
  - 0.9176954732510288
  - 0.9146825396825397
  - 0.9176706827309237
  train_precision_samples:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238095
  - 0.9467871485943776
  train_precision_samples_oob:
  - 0.9151696606786426
  - 0.9202020202020202
  - 0.917695473251029
  - 0.9146825396825397
  - 0.9176706827309236
  train_precision_weighted:
  - 0.9499129819179376
  - 0.9406969696969698
  - 0.9286150837305953
  - 0.9358203677510608
  - 0.9489000779236348
  train_precision_weighted_oob:
  - 0.9125984484233504
  - 0.9154545454545455
  - 0.9097604204864931
  - 0.9090641206977841
  - 0.9049331654978122
  train_recall_macro:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238096
  - 0.9467871485943774
  train_recall_macro_oob:
  - 0.9151696606786427
  - 0.9202020202020202
  - 0.9176954732510287
  - 0.9146825396825397
  - 0.9176706827309236
  train_recall_micro:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238095
  - 0.9467871485943775
  train_recall_micro_oob:
  - 0.9151696606786427
  - 0.9202020202020202
  - 0.9176954732510288
  - 0.9146825396825397
  - 0.9176706827309237
  train_recall_samples:
  - 0.9461077844311377
  - 0.9393939393939394
  - 0.9351851851851852
  - 0.9345238095238095
  - 0.9467871485943776
  train_recall_samples_oob:
  - 0.9151696606786426
  - 0.9202020202020202
  - 0.917695473251029
  - 0.9146825396825397
  - 0.9176706827309236
  train_recall_weighted:
  - 0.9499129819179376
  - 0.9406969696969698
  - 0.9286150837305953
  - 0.9358203677510608
  - 0.9489000779236348
  train_recall_weighted_oob:
  - 0.9125984484233504
  - 0.9154545454545455
  - 0.9097604204864931
  - 0.9090641206977841
  - 0.9049331654978122
  train_roc_auc_macro:
  - 0.9951882431335975
  - 0.9953268734791275
  - 0.994846415848763
  - 0.9962497812067217
  - 0.9966645683296803
  train_roc_auc_macro_oob:
  - 0.969960030397405
  - 0.9721771777980898
  - 0.9772052874779016
  - 0.9753933129208839
  - 0.9827585318909945
  train_roc_auc_micro:
  - 0.9882396098571491
  - 0.9884525316455697
  - 0.9873280185161373
  - 0.990946613271749
  - 0.9917707062173411
  train_roc_auc_micro_oob:
  - 0.9710783799946978
  - 0.9679556962025316
  - 0.9682332518966182
  - 0.9689580620593077
  - 0.97616946712976
  train_roc_auc_samples:
  - 0.9894544244843646
  - 0.988939393939394
  - 0.9858024691358026
  - 0.9886904761904761
  - 0.9929216867469879
  train_roc_auc_samples_oob:
  - 0.970076513639388
  - 0.9512121212121212
  - 0.9574245541838133
  - 0.9517195767195767
  - 0.9680053547523427
  train_roc_auc_weighted:
  - 0.9939919453564121
  - 0.9938504844323418
  - 0.9922854166648027
  - 0.9949139941914193
  - 0.9943670446468955
  train_roc_auc_weighted_oob:
  - 0.9716839593682225
  - 0.9697490086276411
  - 0.9664271950786446
  - 0.9715281308721566
  - 0.9754962201977126
start: 2023-12-21 06:49:34.300296
wrapper: null
