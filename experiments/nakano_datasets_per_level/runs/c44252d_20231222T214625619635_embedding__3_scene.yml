active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMDMBAZmZmZmYWwMCZmZmZmRFAAGdmZmZm9j+AMzMzMzMLQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 21:51:38.165886
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__3
  params: {}
hash: c44252d9a1facbe1075c6141be6d7947f2686b0d67ac7d79cf49aaa1b0986238
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c44252d_20231222T214625619635_embedding__3_scene.yml
results:
  fit_time:
  - 176.62608289718628
  - 250.25247311592102
  - 238.9596962928772
  - 181.2819802761078
  - 222.64641308784485
  score_time:
  - 9.279247045516968
  - 8.657630681991577
  - 8.636596202850342
  - 9.104962348937988
  - 8.818520784378052
  test_average_precision_macro:
  - 0.8113597112774807
  - 0.8344371609611305
  - 0.8093977365180335
  - 0.7923663297958025
  - 0.8345957799578901
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8182895198494098
  - 0.8473486274722838
  - 0.8234427775650238
  - 0.7902721705867594
  - 0.8399468771691891
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8622164948453608
  - 0.8825804243668719
  - 0.8666666666666666
  - 0.8558680555555556
  - 0.8784518828451883
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7994240416578792
  - 0.8214218856588461
  - 0.7972175647001555
  - 0.7781454897885396
  - 0.8220884433089416
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8219931271477662
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222223
  - 0.8221757322175732
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8219931271477663
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222222
  - 0.8221757322175732
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8219931271477663
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222224
  - 0.8221757322175732
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.819381443298969
  - 0.8214704165160717
  - 0.8178614730200439
  - 0.8197168284789644
  - 0.8196863546430541
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6983587003470785
  - 0.7013904743085448
  - 0.6966573243806337
  - 0.6986552663012168
  - 0.698604911528571
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6977829638273045
  - 0.7008149010477299
  - 0.696
  - 0.6981132075471698
  - 0.6980461811722913
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6999999999999998
  - 0.702845409210912
  - 0.698662274133972
  - 0.7004464285714285
  - 0.7005379557680811
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6946469773902195
  - 0.6976614891241382
  - 0.6925529447157612
  - 0.6951052738470271
  - 0.695081965922178
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8622164948453608
  - 0.8825804243668715
  - 0.8666666666666665
  - 0.8558680555555552
  - 0.8784518828451884
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.034201012216581964
  - 0.04111486030459134
  - 0.04854704063693908
  - 0.039491473945489845
  - 0.03983658743281227
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.05622313722717405
  - 0.0691442147238803
  - 0.07967554363870134
  - 0.06919945187228847
  - 0.09775401823719183
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.004123711340206186
  - 0.006160164271047228
  - 0.007615210758980453
  - 0.00625
  - 0.011014458293027933
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.03142525898355739
  - 0.03831906147289217
  - 0.04455145825974971
  - 0.03937690084604627
  - 0.040299803565751954
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8980136845578235
  - 0.9137027377457433
  - 0.9017107030626901
  - 0.8935238498215561
  - 0.9105846944301949
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4762886597938145
  - -1.4127310061601643
  - -1.471698113207547
  - -1.4979166666666666
  - -1.4142259414225942
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17800687285223368
  - -0.1759069130732375
  - -0.1792452830188679
  - -0.17777777777777773
  - -0.17782426778242677
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17800687285223368
  - -0.1759069130732375
  - -0.1792452830188679
  - -0.17777777777777778
  - -0.17782426778242677
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17800687285223366
  - -0.1759069130732375
  - -0.1792452830188679
  - -0.17777777777777773
  - -0.17782426778242677
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.18061855670103094
  - -0.17852958348392836
  - -0.18213852697995614
  - -0.1802831715210356
  - -0.1803136453569459
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.08010309278350516
  - -0.06760780287474331
  - -0.07589098532494759
  - -0.08286458333333334
  - -0.06563807531380753
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8219931271477662
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222223
  - 0.8221757322175732
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8219931271477663
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222222
  - 0.8221757322175732
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8219931271477663
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222224
  - 0.8221757322175732
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.819381443298969
  - 0.8214704165160717
  - 0.8178614730200439
  - 0.8197168284789644
  - 0.8196863546430541
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8219931271477662
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222223
  - 0.8221757322175732
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8219931271477663
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222222
  - 0.8221757322175732
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8219931271477663
  - 0.8240930869267625
  - 0.8207547169811321
  - 0.8222222222222224
  - 0.8221757322175732
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.819381443298969
  - 0.8214704165160717
  - 0.8178614730200439
  - 0.8197168284789644
  - 0.8196863546430541
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9379367799645966
  - 0.9415547999080774
  - 0.933333666528973
  - 0.9238523316033479
  - 0.941416138838814
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9419874476987448
  - 0.950099928823333
  - 0.9423069785089474
  - 0.93383279623966
  - 0.9502155513368138
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9198969072164951
  - 0.9323921971252568
  - 0.9241090146750525
  - 0.9171354166666668
  - 0.9343619246861925
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9333635215813844
  - 0.9356845030355251
  - 0.9275130759752723
  - 0.9170261073330697
  - 0.9359170258477482
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9242901879753912
  - 0.9231751766057203
  - 0.9209287762699992
  - 0.9239585249123908
  - 0.9215627774459648
  train_average_precision_macro_oob:
  - 0.8189947322891943
  - 0.8207264983361192
  - 0.8202540951788323
  - 0.8223231426627123
  - 0.8237955303528203
  train_average_precision_micro:
  - 0.9255699110818225
  - 0.92503638835059
  - 0.9211414719794744
  - 0.9245639625742483
  - 0.9225619695800458
  train_average_precision_micro_oob:
  - 0.8277752797906874
  - 0.8297361276074406
  - 0.8265096538985521
  - 0.8296565624363647
  - 0.8299562687419882
  train_average_precision_samples:
  - 0.9308619493583074
  - 0.9341753472222222
  - 0.9259844559585492
  - 0.9317419131638125
  - 0.9260238465526179
  train_average_precision_samples_oob:
  - 0.8661377037807839
  - 0.8658854166666666
  - 0.865073402417962
  - 0.863207057602491
  - 0.8661569034041817
  train_average_precision_weighted:
  - 0.9193228406152538
  - 0.9178430675451182
  - 0.9156902123894591
  - 0.9187111634453053
  - 0.9157112371518682
  train_average_precision_weighted_oob:
  - 0.8071113665084354
  - 0.808972401468759
  - 0.8079728657808133
  - 0.810971677898379
  - 0.812714972832254
  train_f1_macro:
  - 0.8483350676378772
  - 0.8451388888888888
  - 0.8495682210708119
  - 0.8494205154817505
  - 0.8463798168308277
  train_f1_macro_oob:
  - 0.8222337842525147
  - 0.8216145833333334
  - 0.8234024179620034
  - 0.8231274865940149
  - 0.8230516675306722
  train_f1_micro:
  - 0.8483350676378772
  - 0.8451388888888889
  - 0.8495682210708118
  - 0.8494205154817506
  - 0.8463798168308277
  train_f1_micro_oob:
  - 0.8222337842525147
  - 0.8216145833333334
  - 0.8234024179620034
  - 0.8231274865940149
  - 0.8230516675306722
  train_f1_samples:
  - 0.8483350676378774
  - 0.845138888888889
  - 0.8495682210708119
  - 0.8494205154817507
  - 0.8463798168308277
  train_f1_samples_oob:
  - 0.8222337842525148
  - 0.8216145833333335
  - 0.8234024179620036
  - 0.8231274865940149
  - 0.8230516675306724
  train_f1_weighted:
  - 0.8446011897413158
  - 0.8415681918923276
  - 0.8460130185105381
  - 0.845780655771405
  - 0.8428418624334488
  train_f1_weighted_oob:
  - 0.819622921039172
  - 0.818940653207608
  - 0.8208128300979144
  - 0.8204645903998355
  - 0.8203874068834639
  train_jaccard_macro:
  - 0.7380427810846762
  - 0.7331233448820295
  - 0.7397706623655921
  - 0.7395855056445808
  - 0.7349430985847046
  train_jaccard_macro_oob:
  - 0.698703128081183
  - 0.6978361226107741
  - 0.7003962075468174
  - 0.7000207733461122
  - 0.6999078207068612
  train_jaccard_micro:
  - 0.7366162186582336
  - 0.7318099819603127
  - 0.7384777060501426
  - 0.7382545290535969
  - 0.7336728579988017
  train_jaccard_micro_oob:
  - 0.6981298777794139
  - 0.6972375690607735
  - 0.6998165137614679
  - 0.6994194164768134
  - 0.6993099398032594
  train_jaccard_samples:
  - 0.7443511223427974
  - 0.7392485119047618
  - 0.7462620281273129
  - 0.7465589245558107
  - 0.7411686291935123
  train_jaccard_samples_oob:
  - 0.700522768941083
  - 0.6996899801587301
  - 0.7022205773501109
  - 0.7019670348679169
  - 0.7018316917228269
  train_jaccard_weighted:
  - 0.732563071940344
  - 0.7278721246450172
  - 0.7345552769182035
  - 0.7342226315386169
  - 0.729740448845527
  train_jaccard_weighted_oob:
  - 0.6950018771009165
  - 0.6940411712350272
  - 0.6967197712102474
  - 0.696240359172389
  - 0.6961244277004144
  train_label_ranking_average_precision_score:
  - 0.930861949358307
  - 0.9341753472222222
  - 0.9259844559585486
  - 0.9317419131638124
  - 0.9260238465526176
  train_label_ranking_average_precision_score_oob:
  - 0.8661377037807836
  - 0.8658854166666667
  - 0.8650734024179617
  - 0.8632070576024911
  - 0.8661569034041814
  train_matthews_corrcoef_macro:
  - 0.3473662627567132
  - 0.33064067036210615
  - 0.358733849224544
  - 0.3608526603156328
  - 0.3345781139947721
  train_matthews_corrcoef_macro_oob:
  - 0.04911716070029548
  - 0.05338194566887298
  - 0.0711772629614889
  - 0.0662549333311813
  - 0.05989348056284157
  train_matthews_corrcoef_micro:
  - 0.35939390001157173
  - 0.3398911792294637
  - 0.3650194431398394
  - 0.36647450050080216
  - 0.3442151774239165
  train_matthews_corrcoef_micro_oob:
  - 0.07727199174647556
  - 0.07185834472073417
  - 0.09567578076078116
  - 0.09968211638452423
  - 0.09138145652251828
  train_matthews_corrcoef_samples:
  - 0.159343705461156
  - 0.143800168873007
  - 0.16396054084604952
  - 0.1674892288762701
  - 0.14732968255058188
  train_matthews_corrcoef_samples_oob:
  - 0.007421910022927863
  - 0.006579403922934207
  - 0.011155348252919535
  - 0.012210597886940688
  - 0.010695933401780029
  train_matthews_corrcoef_weighted:
  - 0.3355390369246915
  - 0.32046242307042433
  - 0.3480029486868457
  - 0.3502703632562219
  - 0.3246756416537987
  train_matthews_corrcoef_weighted_oob:
  - 0.04722474066181553
  - 0.04914902474537499
  - 0.06769075175277868
  - 0.06319972706528948
  - 0.05678616556798531
  train_ndgc:
  - 0.9492006909209838
  - 0.9513577092663463
  - 0.945474674425844
  - 0.950069770320961
  - 0.9455633259722535
  train_ndgc_oob:
  - 0.9011958159587359
  - 0.901101651048967
  - 0.900279567539259
  - 0.8992453535980586
  - 0.9013599208094394
  train_neg_coverage_error:
  - -1.27159209157128
  - -1.2697916666666667
  - -1.2818652849740932
  - -1.2776336274001039
  - -1.2934162778641782
  train_neg_coverage_error_oob:
  - -1.4672216441207075
  - -1.4723958333333333
  - -1.4678756476683938
  - -1.4737934613388688
  - -1.4650077760497666
  train_neg_hamming_loss_macro:
  - -0.15166493236212278
  - -0.15486111111111112
  - -0.15043177892918821
  - -0.15057948451824943
  - -0.15362018316917228
  train_neg_hamming_loss_macro_oob:
  - -0.17776621574748527
  - -0.17838541666666666
  - -0.17659758203799655
  - -0.17687251340598512
  - -0.1769483324693278
  train_neg_hamming_loss_micro:
  - -0.15166493236212278
  - -0.15486111111111112
  - -0.15043177892918824
  - -0.15057948451824943
  - -0.15362018316917228
  train_neg_hamming_loss_micro_oob:
  - -0.17776621574748525
  - -0.17838541666666666
  - -0.17659758203799655
  - -0.17687251340598512
  - -0.1769483324693278
  train_neg_hamming_loss_samples:
  - -0.15166493236212278
  - -0.15486111111111106
  - -0.15043177892918824
  - -0.15057948451824943
  - -0.15362018316917228
  train_neg_hamming_loss_samples_oob:
  - -0.17776621574748525
  - -0.17838541666666663
  - -0.1765975820379965
  - -0.17687251340598512
  - -0.17694833246932776
  train_neg_hamming_loss_weighted:
  - -0.15539881025868432
  - -0.15843180810767246
  - -0.1539869814894619
  - -0.15421934422859493
  - -0.15715813756655117
  train_neg_hamming_loss_weighted_oob:
  - -0.18037707896082825
  - -0.181059346792392
  - -0.17918716990208558
  - -0.17953540960016448
  - -0.179612593116536
  train_neg_label_ranking_loss:
  - -0.037929240374609784
  - -0.037760416666666664
  - -0.0408419689119171
  - -0.03855734302023872
  - -0.042418351477449455
  train_neg_label_ranking_loss_oob:
  - -0.07645681581685744
  - -0.076875
  - -0.07756476683937823
  - -0.07750389206019721
  - -0.0761793675479523
  train_precision_macro:
  - 0.8483350676378772
  - 0.8451388888888888
  - 0.8495682210708119
  - 0.8494205154817505
  - 0.8463798168308277
  train_precision_macro_oob:
  - 0.8222337842525147
  - 0.8216145833333334
  - 0.8234024179620034
  - 0.8231274865940149
  - 0.8230516675306722
  train_precision_micro:
  - 0.8483350676378772
  - 0.8451388888888889
  - 0.8495682210708118
  - 0.8494205154817506
  - 0.8463798168308277
  train_precision_micro_oob:
  - 0.8222337842525147
  - 0.8216145833333334
  - 0.8234024179620034
  - 0.8231274865940149
  - 0.8230516675306722
  train_precision_samples:
  - 0.8483350676378774
  - 0.845138888888889
  - 0.8495682210708119
  - 0.8494205154817507
  - 0.8463798168308277
  train_precision_samples_oob:
  - 0.8222337842525148
  - 0.8216145833333335
  - 0.8234024179620036
  - 0.8231274865940149
  - 0.8230516675306724
  train_precision_weighted:
  - 0.8446011897413158
  - 0.8415681918923276
  - 0.8460130185105381
  - 0.845780655771405
  - 0.8428418624334488
  train_precision_weighted_oob:
  - 0.819622921039172
  - 0.818940653207608
  - 0.8208128300979144
  - 0.8204645903998355
  - 0.8203874068834639
  train_recall_macro:
  - 0.8483350676378772
  - 0.8451388888888888
  - 0.8495682210708119
  - 0.8494205154817505
  - 0.8463798168308277
  train_recall_macro_oob:
  - 0.8222337842525147
  - 0.8216145833333334
  - 0.8234024179620034
  - 0.8231274865940149
  - 0.8230516675306722
  train_recall_micro:
  - 0.8483350676378772
  - 0.8451388888888889
  - 0.8495682210708118
  - 0.8494205154817506
  - 0.8463798168308277
  train_recall_micro_oob:
  - 0.8222337842525147
  - 0.8216145833333334
  - 0.8234024179620034
  - 0.8231274865940149
  - 0.8230516675306722
  train_recall_samples:
  - 0.8483350676378774
  - 0.845138888888889
  - 0.8495682210708119
  - 0.8494205154817507
  - 0.8463798168308277
  train_recall_samples_oob:
  - 0.8222337842525148
  - 0.8216145833333335
  - 0.8234024179620036
  - 0.8231274865940149
  - 0.8230516675306724
  train_recall_weighted:
  - 0.8446011897413158
  - 0.8415681918923276
  - 0.8460130185105381
  - 0.845780655771405
  - 0.8428418624334488
  train_recall_weighted_oob:
  - 0.819622921039172
  - 0.818940653207608
  - 0.8208128300979144
  - 0.8204645903998355
  - 0.8203874068834639
  train_roc_auc_macro:
  - 0.9694350361629113
  - 0.9685650699965929
  - 0.9683709936489381
  - 0.9676457564082872
  - 0.9673721532516152
  train_roc_auc_macro_oob:
  - 0.9337909743157792
  - 0.9351578731048537
  - 0.9338567538830436
  - 0.93468661465093
  - 0.9368704937817086
  train_roc_auc_micro:
  - 0.9739607265815163
  - 0.9738757151066041
  - 0.9723820048949672
  - 0.9727263334900887
  - 0.9724156780448538
  train_roc_auc_micro_oob:
  - 0.9428101336335649
  - 0.9439339130584257
  - 0.942277127700244
  - 0.9426879691212126
  - 0.9446157030119986
  train_roc_auc_samples:
  - 0.9620707596253902
  - 0.9622395833333334
  - 0.959158031088083
  - 0.9614426569797614
  - 0.9575816485225506
  train_roc_auc_samples_oob:
  - 0.9235431841831426
  - 0.9231250000000001
  - 0.9224352331606217
  - 0.9224961079398029
  - 0.9238206324520478
  train_roc_auc_weighted:
  - 0.9666714671117405
  - 0.9655565821955737
  - 0.9654170888985665
  - 0.9643570746170221
  - 0.9640214709754862
  train_roc_auc_weighted_oob:
  - 0.9281537797222676
  - 0.9295521432923928
  - 0.9278078496727382
  - 0.9289591525395173
  - 0.9314101101228496
start: 2023-12-22 21:46:25.619635
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
