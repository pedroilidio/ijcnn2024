active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMDAmZmZmZkVQACZmZmZmfm/AJmZmZmZ+b8AnJmZmZnZPw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:43:12.397945
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 8008fc363e78a187810e5356ccc145e16a99730f7f7f4bea6b0237882cf26e64
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8008fc3_20231212T154130232046_embedding_weak__7_Gram_negative.yml
results:
  fit_time:
  - 51.62468338012695
  - 57.10581970214844
  - 54.64050841331482
  - 57.99237585067749
  - 60.67665362358093
  score_time:
  - 9.459665536880493
  - 9.018129825592041
  - 9.193327188491821
  - 9.170838356018066
  - 8.343668222427368
  test_average_precision_macro:
  - 0.7614072039462619
  - 0.7845898067786785
  - 0.7649984986130904
  - 0.739944062599049
  - 0.7112509119267962
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9528388605339966
  - 0.9299066195602381
  - 0.9301390668924938
  - 0.9282326491500066
  - 0.9255091871239477
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9832443653618029
  - 0.9807387057387058
  - 0.9693452380952382
  - 0.9754166666666667
  - 0.950004282288455
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9738453468280149
  - 0.9736413491956902
  - 0.9643659327802122
  - 0.9730407560000021
  - 0.9439926800626036
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9759786476868328
  - 0.9656593406593406
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9759786476868327
  - 0.9656593406593407
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9759786476868327
  - 0.9656593406593407
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9865329303368595
  - 0.9627131489200453
  - 0.9775440313111547
  - 0.977884143348061
  - 0.9654379589112214
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9539830224261547
  - 0.9344205621405145
  - 0.9375875453605325
  - 0.9393881604967158
  - 0.9186830814394537
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9530842745438749
  - 0.9335989375830013
  - 0.9360414866032843
  - 0.9385547382085677
  - 0.9172413793103448
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9591502210719292
  - 0.942161542161542
  - 0.942929292929293
  - 0.946103896103896
  - 0.9276796744422644
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.973565275639347
  - 0.9285824108991217
  - 0.9563433230206768
  - 0.9568958845938816
  - 0.9333729989262279
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9832443653618029
  - 0.9807387057387058
  - 0.9693452380952382
  - 0.9754166666666667
  - 0.9500042822884548
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7435818574938076
  - 0.729386620422267
  - 0.7586691531240309
  - 0.6791703370123015
  - 0.6651511376336569
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8991562356698769
  - 0.856573876896029
  - 0.8629225095160267
  - 0.8668030374461706
  - 0.8188296407231073
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.9262751968272076
  - 0.8895154622797632
  - 0.8826744815665128
  - 0.8912855185846276
  - 0.8490451779177337
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9419938816626473
  - 0.8927490784215398
  - 0.9226733301340607
  - 0.9224915421529238
  - 0.8797256506107839
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9880526785072282
  - 0.987058775788982
  - 0.9777178427441979
  - 0.982343114838355
  - 0.9636947011879433
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.096085409252669
  - -1.15018315018315
  - -1.1214285714285714
  - -1.1178571428571429
  - -1.2158273381294964
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.02402135231316726
  - -0.034340659340659344
  - -0.033035714285714286
  - -0.03169642857142857
  - -0.04316546762589928
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.02402135231316726
  - -0.034340659340659344
  - -0.033035714285714286
  - -0.03169642857142857
  - -0.04316546762589928
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.02402135231316726
  - -0.034340659340659344
  - -0.033035714285714286
  - -0.03169642857142857
  - -0.04316546762589928
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.013467069663140449
  - -0.03728685107995453
  - -0.022455968688845397
  - -0.022115856651939124
  - -0.03456204108877846
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.006651415014404338
  - -0.009288330716902144
  - -0.01058673469387755
  - -0.009948979591836734
  - -0.023466940733127783
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9759786476868328
  - 0.9656593406593406
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9759786476868327
  - 0.9656593406593407
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9759786476868327
  - 0.9656593406593407
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9865329303368595
  - 0.9627131489200453
  - 0.9775440313111547
  - 0.977884143348061
  - 0.9654379589112214
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9759786476868328
  - 0.9656593406593406
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9759786476868327
  - 0.9656593406593407
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9759786476868327
  - 0.9656593406593407
  - 0.9669642857142857
  - 0.9683035714285714
  - 0.9568345323741008
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9865329303368595
  - 0.9627131489200453
  - 0.9775440313111547
  - 0.977884143348061
  - 0.9654379589112214
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9847800288121356
  - 0.986223145704364
  - 0.9830141608538605
  - 0.9792316927471839
  - 0.9641418455688577
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9926087976580665
  - 0.9870625933073589
  - 0.9891344476948609
  - 0.9900186720126103
  - 0.9845903044072654
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9933485849855958
  - 0.9907116692830978
  - 0.9894132653061226
  - 0.9900510204081633
  - 0.9767899965741692
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9945667866709639
  - 0.9893560291656347
  - 0.9915351440069966
  - 0.9939444662183923
  - 0.9856629285646697
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7514154760815452
  - 0.7452899897918295
  - 0.753931638645621
  - 0.7479057154811668
  - 0.7626926218273555
  train_average_precision_macro_oob:
  - 0.7432069992334136
  - 0.7348816315815763
  - 0.7451220665924199
  - 0.7385202731456306
  - 0.7541152929653183
  train_average_precision_micro:
  - 0.9480457673500924
  - 0.9431860492311557
  - 0.9481594126205534
  - 0.9372490092804304
  - 0.947460502137157
  train_average_precision_micro_oob:
  - 0.9409046398196034
  - 0.9348920842912861
  - 0.9411011952824692
  - 0.9300449896606152
  - 0.9426005349009544
  train_average_precision_samples:
  - 0.9824482448244825
  - 0.9802651176645814
  - 0.9802158273381295
  - 0.9820893285371703
  - 0.9829443447037702
  train_average_precision_samples_oob:
  - 0.9773413055591273
  - 0.9747404144857226
  - 0.9739080164439876
  - 0.9766347636176772
  - 0.9714616995810893
  train_average_precision_weighted:
  - 0.9758267870972933
  - 0.9726859414632041
  - 0.9768381109680381
  - 0.9703082975841442
  - 0.9801934900861725
  train_average_precision_weighted_oob:
  - 0.9684251961326891
  - 0.9645437391317925
  - 0.9683149065937701
  - 0.9631860470791532
  - 0.9737378875015488
  train_f1_macro:
  - 0.9705220522052205
  - 0.9672698838248437
  - 0.9676258992805755
  - 0.9627922661870503
  - 0.9704892280071813
  train_f1_macro_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877918
  train_f1_micro:
  - 0.9705220522052205
  - 0.9672698838248436
  - 0.9676258992805755
  - 0.9627922661870504
  - 0.9704892280071813
  train_f1_micro_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877917
  train_f1_samples:
  - 0.9705220522052205
  - 0.9672698838248436
  - 0.9676258992805755
  - 0.9627922661870504
  - 0.9704892280071813
  train_f1_samples_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877917
  train_f1_weighted:
  - 0.9822441006987297
  - 0.9811910904277742
  - 0.9826316781626243
  - 0.9798275542656003
  - 0.9829805595580248
  train_f1_weighted_oob:
  - 0.9741719017262552
  - 0.9778609607634848
  - 0.9770567566565305
  - 0.975447710501127
  - 0.9768332806805311
  train_jaccard_macro:
  - 0.9436273690426764
  - 0.9376500788869695
  - 0.9390474583112617
  - 0.929934476785192
  - 0.9439668299914767
  train_jaccard_macro_oob:
  - 0.9414637844677661
  - 0.9380283766836643
  - 0.93796776021377
  - 0.9313043828641205
  - 0.9407003130041478
  train_jaccard_micro:
  - 0.9427322404371584
  - 0.9366143861546782
  - 0.9372822299651568
  - 0.928254037065135
  - 0.9426702997275205
  train_jaccard_micro_oob:
  - 0.9408232339775084
  - 0.9372430209911274
  - 0.9366496135844128
  - 0.9301366890865698
  - 0.9397105234519534
  train_jaccard_samples:
  - 0.9498604405895134
  - 0.9451097209810346
  - 0.9440992660417121
  - 0.936534408836567
  - 0.9493172297481094
  train_jaccard_samples_oob:
  - 0.948271190755439
  - 0.9457452090159864
  - 0.943968461594361
  - 0.9384528740643848
  - 0.9466042834085923
  train_jaccard_weighted:
  - 0.9653065738241156
  - 0.963234933779097
  - 0.9660038779330515
  - 0.9606489938713757
  - 0.9667124310336334
  train_jaccard_weighted_oob:
  - 0.9497861995300708
  - 0.9567995235500667
  - 0.9552918048539616
  - 0.952222998297377
  - 0.9549076450382701
  train_label_ranking_average_precision_score:
  - 0.9824482448244825
  - 0.9802651176645816
  - 0.9802158273381297
  - 0.9820893285371703
  - 0.9829443447037706
  train_label_ranking_average_precision_score_oob:
  - 0.9773413055591271
  - 0.974740414485723
  - 0.9739080164439878
  - 0.9766347636176772
  - 0.9714616995810893
  train_matthews_corrcoef_macro:
  - 0.7233188531611199
  - 0.7236644809658157
  - 0.7514491096726568
  - 0.7226863082430149
  - 0.7530041391756581
  train_matthews_corrcoef_macro_oob:
  - 0.7152524589707929
  - 0.7121388270676376
  - 0.7452582733721329
  - 0.7246551141607388
  - 0.7445641959082498
  train_matthews_corrcoef_micro:
  - 0.8780144919815187
  - 0.8676859325855648
  - 0.8680928052887723
  - 0.8511690255672115
  - 0.8785657613690514
  train_matthews_corrcoef_micro_oob:
  - 0.8706757577874059
  - 0.8649689111433889
  - 0.8638226707599139
  - 0.8516405835125738
  - 0.8700349120493884
  train_matthews_corrcoef_samples:
  - 0.9066647838685392
  - 0.9056402793673543
  - 0.8968401544226345
  - 0.8869750681173578
  - 0.9067481833338159
  train_matthews_corrcoef_samples_oob:
  - 0.8943366079367485
  - 0.8962355148006165
  - 0.889357124593956
  - 0.8834555518922237
  - 0.8941743738303709
  train_matthews_corrcoef_weighted:
  - 0.9321547554982702
  - 0.9296633692334999
  - 0.9383752432939491
  - 0.9258389994567195
  - 0.9392522742424334
  train_matthews_corrcoef_weighted_oob:
  - 0.9120348558621859
  - 0.9194911166105684
  - 0.9238208604263283
  - 0.9152947784519748
  - 0.9229549772549681
  train_ndgc:
  - 0.9874135770450377
  - 0.9857046414039692
  - 0.9858635473389681
  - 0.9870842050348568
  - 0.9881088925609204
  train_ndgc_oob:
  - 0.9837048160347721
  - 0.9818558496508851
  - 0.981345944721704
  - 0.9831654096597724
  - 0.9804411881183976
  train_neg_coverage_error:
  - -1.0963096309630964
  - -1.0956210902591599
  - -1.1007194244604317
  - -1.0989208633093526
  - -1.0915619389587075
  train_neg_coverage_error_oob:
  - -1.1206120612061206
  - -1.1376228775692583
  - -1.1465827338129497
  - -1.1330935251798562
  - -1.1319569120287254
  train_neg_hamming_loss_macro:
  - -0.02947794779477948
  - -0.032730116175156386
  - -0.03237410071942446
  - -0.037207733812949645
  - -0.029510771992818673
  train_neg_hamming_loss_macro_oob:
  - -0.03049054905490549
  - -0.03239499553172476
  - -0.032711330935251796
  - -0.03619604316546762
  - -0.03108168761220826
  train_neg_hamming_loss_micro:
  - -0.02947794779477948
  - -0.03273011617515639
  - -0.03237410071942446
  - -0.03720773381294964
  - -0.029510771992818673
  train_neg_hamming_loss_micro_oob:
  - -0.030490549054905492
  - -0.03239499553172476
  - -0.032711330935251796
  - -0.03619604316546762
  - -0.03108168761220826
  train_neg_hamming_loss_samples:
  - -0.02947794779477948
  - -0.03273011617515639
  - -0.03237410071942446
  - -0.03720773381294964
  - -0.029510771992818673
  train_neg_hamming_loss_samples_oob:
  - -0.030490549054905492
  - -0.03239499553172476
  - -0.032711330935251796
  - -0.03619604316546762
  - -0.03108168761220826
  train_neg_hamming_loss_weighted:
  - -0.017755899301270334
  - -0.018808909572225876
  - -0.01736832183737546
  - -0.020172445734399604
  - -0.017019440441975328
  train_neg_hamming_loss_weighted_oob:
  - -0.0258280982737449
  - -0.022139039236515085
  - -0.02294324334346955
  - -0.024552289498873007
  - -0.02316671931946895
  train_neg_label_ranking_loss:
  - -0.0063006300630063005
  - -0.007074769139112302
  - -0.006958718739294279
  - -0.006680369989722507
  - -0.005995126955629647
  train_neg_label_ranking_loss_oob:
  - -0.009450945094509451
  - -0.012192008170560448
  - -0.012547105173004452
  - -0.01081277834874957
  - -0.01094297683166624
  train_precision_macro:
  - 0.9705220522052205
  - 0.9672698838248437
  - 0.9676258992805755
  - 0.9627922661870503
  - 0.9704892280071813
  train_precision_macro_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877918
  train_precision_micro:
  - 0.9705220522052205
  - 0.9672698838248436
  - 0.9676258992805755
  - 0.9627922661870504
  - 0.9704892280071813
  train_precision_micro_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877917
  train_precision_samples:
  - 0.9705220522052205
  - 0.9672698838248436
  - 0.9676258992805755
  - 0.9627922661870504
  - 0.9704892280071813
  train_precision_samples_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877917
  train_precision_weighted:
  - 0.9822441006987297
  - 0.9811910904277742
  - 0.9826316781626243
  - 0.9798275542656003
  - 0.9829805595580248
  train_precision_weighted_oob:
  - 0.9741719017262552
  - 0.9778609607634848
  - 0.9770567566565305
  - 0.975447710501127
  - 0.9768332806805311
  train_recall_macro:
  - 0.9705220522052205
  - 0.9672698838248437
  - 0.9676258992805755
  - 0.9627922661870503
  - 0.9704892280071813
  train_recall_macro_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877918
  train_recall_micro:
  - 0.9705220522052205
  - 0.9672698838248436
  - 0.9676258992805755
  - 0.9627922661870504
  - 0.9704892280071813
  train_recall_micro_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877917
  train_recall_samples:
  - 0.9705220522052205
  - 0.9672698838248436
  - 0.9676258992805755
  - 0.9627922661870504
  - 0.9704892280071813
  train_recall_samples_oob:
  - 0.9695094509450946
  - 0.9676050044682752
  - 0.9672886690647482
  - 0.9638039568345323
  - 0.9689183123877917
  train_recall_weighted:
  - 0.9822441006987297
  - 0.9811910904277742
  - 0.9826316781626243
  - 0.9798275542656003
  - 0.9829805595580248
  train_recall_weighted_oob:
  - 0.9741719017262552
  - 0.9778609607634848
  - 0.9770567566565305
  - 0.975447710501127
  - 0.9768332806805311
  train_roc_auc_macro:
  - 0.9870023509532957
  - 0.9866490473849083
  - 0.9860024985667182
  - 0.98678493243891
  - 0.9894338064153929
  train_roc_auc_macro_oob:
  - 0.9843151599370967
  - 0.9813183406663145
  - 0.9823150135177228
  - 0.9808371373708166
  - 0.9870436206642148
  train_roc_auc_micro:
  - 0.9935423529286145
  - 0.9927779177914883
  - 0.9932124806445477
  - 0.9919191061236657
  - 0.9936733643536941
  train_roc_auc_micro_oob:
  - 0.9909975112159896
  - 0.9885793056015129
  - 0.9899096093709723
  - 0.9879425289079196
  - 0.9918126413048717
  train_roc_auc_samples:
  - 0.9936993699369937
  - 0.9929252308608878
  - 0.9930412812607056
  - 0.9933196300102776
  - 0.9941331110541165
  train_roc_auc_samples_oob:
  - 0.9905490549054905
  - 0.9878718243329504
  - 0.9874528948269957
  - 0.9891872216512503
  - 0.9894417371975722
  train_roc_auc_weighted:
  - 0.9970306939948403
  - 0.9968199416923357
  - 0.9972969672088734
  - 0.9964897730295381
  - 0.9978598624167908
  train_roc_auc_weighted_oob:
  - 0.9930475814222504
  - 0.9909541385681604
  - 0.9921377481572107
  - 0.9910533124878345
  - 0.9948652023341195
start: 2023-12-12 15:41:30.232046
wrapper: null
