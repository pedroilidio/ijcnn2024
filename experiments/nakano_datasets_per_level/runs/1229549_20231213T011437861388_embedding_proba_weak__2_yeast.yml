active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gGZmZmZm9j8AmpmZmZnZP0AzMzMzMwNAwMzMzMzMBMCAmZmZmZn5vw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMJkBgZmZmZmYWwNDMzMzMzCBAYGZmZmZmEsAwMzMzMzMjwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9oZmZmZmYWQKCZmZmZmfk/0MzMzMzMDEDMzMzMzMwmwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZCcDIzMzMzMwQwODMzMzMzPw/4MzMzMzM/D9wZmZmZmYOQA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ6b8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZAcAAmJmZmZnJvwCYmZmZmcm/ADMzMzMz87+AZmZmZmYOQA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb9oZmZmZmYOQMzMzMzMzBDAMDMzMzMz87/QzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzI8DAmZmZmZkRQJCZmZmZmTHA4MzMzMzMJkDgzMzMzMwmQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 01:19:35.772787
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 1229549882c52b88141473517393a084d6be1c73519a6bdbc8d9759a506bfc20
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1229549_20231213T011437861388_embedding_proba_weak__2_yeast.yml
results:
  fit_time:
  - 165.88226103782654
  - 233.82673263549805
  - 232.5233850479126
  - 234.90427136421204
  - 233.0245006084442
  score_time:
  - 13.155235528945923
  - 10.363409280776978
  - 12.321246147155762
  - 11.10432243347168
  - 12.204360723495483
  test_average_precision_macro:
  - 0.5156108785151876
  - 0.5280798356902034
  - 0.5091252523254474
  - 0.5150918802309351
  - 0.5189407498613104
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.723656239609045
  - 0.7315992525573768
  - 0.7069919765232899
  - 0.7213513292194949
  - 0.7193399920563588
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7574959879793622
  - 0.7753730340829919
  - 0.7555990251260425
  - 0.7709507941539823
  - 0.7627643465534405
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6855056396039526
  - 0.6920624590091758
  - 0.6668271610678785
  - 0.678510859753453
  - 0.6790966434066439
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8031005505650537
  - 0.8124067998807037
  - 0.8073852295409181
  - 0.7973668280871671
  - 0.7979721549636805
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8031005505650536
  - 0.8124067998807039
  - 0.8073852295409182
  - 0.7973668280871671
  - 0.7979721549636803
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8031005505650537
  - 0.8124067998807037
  - 0.8073852295409182
  - 0.7973668280871672
  - 0.7979721549636803
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7515381849318472
  - 0.7643038883089771
  - 0.7564497906494326
  - 0.7504501602405261
  - 0.7487136069966628
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6811106598563935
  - 0.6931001363686814
  - 0.6866532883492278
  - 0.6726086147173718
  - 0.6742234069545466
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.670984142355647
  - 0.6840783525866398
  - 0.6769874476987447
  - 0.6630174908770605
  - 0.6638549666372907
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6987068228108426
  - 0.7104155251552561
  - 0.7040048366523832
  - 0.6924879762280318
  - 0.6931284860198775
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6065170535833737
  - 0.6218495093814789
  - 0.612907121834398
  - 0.6039879581988029
  - 0.6030409180359674
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.757495987979362
  - 0.7753730340829919
  - 0.7555990251260427
  - 0.7709507941539817
  - 0.7627643465534396
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.23745852554400165
  - 0.2638920682337521
  - 0.2434068570754062
  - 0.21914174101699144
  - 0.2347006376829011
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5162712127190607
  - 0.5437932596585031
  - 0.5242949113523787
  - 0.5116918812324968
  - 0.5137944241308596
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5174530632790714
  - 0.5432354577894744
  - 0.5253787534138692
  - 0.514541520636991
  - 0.5190232161075544
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2626989414980129
  - 0.3021208360431344
  - 0.2847732611635841
  - 0.2434076872439024
  - 0.2321290882177713
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8516853541473027
  - 0.8624251752849112
  - 0.8490110636517879
  - 0.8609224727400476
  - 0.8561861451231492
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.064908722109534
  - -6.935281837160751
  - -6.974051896207585
  - -7.169491525423729
  - -7.3940677966101696
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19689944943494636
  - -0.18759320011929614
  - -0.19261477045908187
  - -0.20263317191283292
  - -0.2020278450363196
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1968994494349464
  - -0.18759320011929614
  - -0.19261477045908185
  - -0.20263317191283292
  - -0.20202784503631963
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19689944943494636
  - -0.18759320011929614
  - -0.19261477045908185
  - -0.20263317191283292
  - -0.2020278450363196
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.24846181506815299
  - -0.23569611169102297
  - -0.2435502093505674
  - -0.249549839759474
  - -0.2512863930033372
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1695344909123524
  - -0.15752303831635775
  - -0.1676901592213825
  - -0.16497113451184273
  - -0.17325481007760063
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8031005505650537
  - 0.8124067998807037
  - 0.8073852295409181
  - 0.7973668280871671
  - 0.7979721549636805
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8031005505650536
  - 0.8124067998807039
  - 0.8073852295409182
  - 0.7973668280871671
  - 0.7979721549636803
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8031005505650537
  - 0.8124067998807037
  - 0.8073852295409182
  - 0.7973668280871672
  - 0.7979721549636803
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7515381849318472
  - 0.7643038883089771
  - 0.7564497906494326
  - 0.7504501602405261
  - 0.7487136069966628
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8031005505650537
  - 0.8124067998807037
  - 0.8073852295409181
  - 0.7973668280871671
  - 0.7979721549636805
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8031005505650536
  - 0.8124067998807039
  - 0.8073852295409182
  - 0.7973668280871671
  - 0.7979721549636803
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8031005505650537
  - 0.8124067998807037
  - 0.8073852295409182
  - 0.7973668280871672
  - 0.7979721549636803
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7515381849318472
  - 0.7643038883089771
  - 0.7564497906494326
  - 0.7504501602405261
  - 0.7487136069966628
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7227497915770894
  - 0.7350455825885909
  - 0.7240712053820232
  - 0.7092545728532791
  - 0.7069135187188322
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8463737842750794
  - 0.8514872346634823
  - 0.8442862696139108
  - 0.8444800849553402
  - 0.8407177753606522
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8304655090876475
  - 0.8424769616836422
  - 0.8323098407786175
  - 0.8350288654881571
  - 0.8267451899223994
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7309516450559002
  - 0.7309244614490773
  - 0.7180910193001186
  - 0.7049251022590626
  - 0.7024789525768008
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9530722952451317
  - 0.9538657534410531
  - 0.9579306326777294
  - 0.9516094128295833
  - 0.9433075260304512
  train_average_precision_macro_oob:
  - 0.9062725301549326
  - 0.9118509642224663
  - 0.9139346046004019
  - 0.9101963948172406
  - 0.9103220810949703
  train_average_precision_micro:
  - 0.9893756740710888
  - 0.9902601007761018
  - 0.9912063414248445
  - 0.9906083928071913
  - 0.989462145485875
  train_average_precision_micro_oob:
  - 0.9642088724877957
  - 0.9643109266421666
  - 0.9656238674046169
  - 0.9614974507084937
  - 0.9645737123589943
  train_average_precision_samples:
  - 0.9886890000282857
  - 0.9901107233829204
  - 0.9900979181567927
  - 0.9899319038981177
  - 0.9905846671027997
  train_average_precision_samples_oob:
  - 0.9635840780031485
  - 0.9646003511564933
  - 0.9640650827396683
  - 0.9591518217277796
  - 0.9649997747952822
  train_average_precision_weighted:
  - 0.9873339386750078
  - 0.9891630592250653
  - 0.989866524633054
  - 0.9902921573134394
  - 0.9874870414947138
  train_average_precision_weighted_oob:
  - 0.9652443188373302
  - 0.9666444196167621
  - 0.9671195588565766
  - 0.9649949643228845
  - 0.9649832265968079
  train_f1_macro:
  - 0.9654737154737155
  - 0.9673079758219078
  - 0.9668580375782881
  - 0.9652221814175542
  - 0.966984943077488
  train_f1_macro_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.938077840739636
  - 0.934484024972457
  - 0.9399192067572529
  train_f1_micro:
  - 0.9654737154737155
  - 0.9673079758219078
  - 0.9668580375782881
  - 0.9652221814175541
  - 0.9669849430774881
  train_f1_micro_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.9380778407396362
  - 0.9344840249724569
  - 0.939919206757253
  train_f1_samples:
  - 0.9654737154737155
  - 0.9673079758219076
  - 0.9668580375782881
  - 0.9652221814175543
  - 0.9669849430774881
  train_f1_samples_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.9380778407396363
  - 0.9344840249724569
  - 0.9399192067572532
  train_f1_weighted:
  - 0.9694466061096136
  - 0.9706087668032454
  - 0.9704198725811229
  - 0.9699455128376175
  - 0.9700164475390136
  train_f1_weighted_oob:
  - 0.9433034529082828
  - 0.9416042943351804
  - 0.9418367637763138
  - 0.9383636774015929
  - 0.9432629993861639
  train_jaccard_macro:
  - 0.9335723986519139
  - 0.9369569134767949
  - 0.9361929172922255
  - 0.9331539178930702
  - 0.9363969786702199
  train_jaccard_macro_oob:
  - 0.8847780934744971
  - 0.88380680433116
  - 0.884321651472175
  - 0.877955854400945
  - 0.8876009823588629
  train_jaccard_micro:
  - 0.933251991674442
  - 0.9366858203362004
  - 0.9358423844405153
  - 0.9327820562870426
  - 0.936080201926837
  train_jaccard_micro_oob:
  - 0.883768095671026
  - 0.8829244595579305
  - 0.8833772160786378
  - 0.8770248845384987
  - 0.8866486523938197
  train_jaccard_samples:
  - 0.9398617091728548
  - 0.9426361780024233
  - 0.9422268561308713
  - 0.9395573312534322
  - 0.942581774512899
  train_jaccard_samples_oob:
  - 0.8953155584734532
  - 0.8945357776663071
  - 0.8951141528654828
  - 0.8891578346036472
  - 0.8981344327417852
  train_jaccard_weighted:
  - 0.9410775907666725
  - 0.9431605735135723
  - 0.9428990678607011
  - 0.9420332515640708
  - 0.9421515137808852
  train_jaccard_weighted_oob:
  - 0.8938931048961195
  - 0.8907396379597396
  - 0.891205179042799
  - 0.884863251343609
  - 0.8938544656509855
  train_label_ranking_average_precision_score:
  - 0.9886890000282859
  - 0.9901107233829207
  - 0.9900979181567926
  - 0.9899319038981178
  - 0.9905846671027998
  train_label_ranking_average_precision_score_oob:
  - 0.9635840780031493
  - 0.9646003511564937
  - 0.9640650827396697
  - 0.9591518217277795
  - 0.9649997747952823
  train_matthews_corrcoef_macro:
  - 0.8004390637430451
  - 0.8068097552350801
  - 0.804594300425135
  - 0.8204781854134513
  - 0.824181108629783
  train_matthews_corrcoef_macro_oob:
  - 0.6904422026560004
  - 0.695115382478679
  - 0.6921238105179538
  - 0.6640404802894931
  - 0.7022016933822318
  train_matthews_corrcoef_micro:
  - 0.9180360050214993
  - 0.9221315773836967
  - 0.9215733813890551
  - 0.9170367869591952
  - 0.9210314263970226
  train_matthews_corrcoef_micro_oob:
  - 0.8526297103405414
  - 0.8507771808235159
  - 0.8525305593140694
  - 0.8422775785121329
  - 0.8553178215350432
  train_matthews_corrcoef_samples:
  - 0.9211097410331963
  - 0.9253239572957369
  - 0.9248116323097008
  - 0.9199218733767808
  - 0.9232430740615662
  train_matthews_corrcoef_samples_oob:
  - 0.8522907006747911
  - 0.8508790055051602
  - 0.8507364662372309
  - 0.8389626448166024
  - 0.8553727967211858
  train_matthews_corrcoef_weighted:
  - 0.9099837377999068
  - 0.9125714537476399
  - 0.9134101427931933
  - 0.9106397292710894
  - 0.913217980621627
  train_matthews_corrcoef_weighted_oob:
  - 0.8333664780420693
  - 0.8301920914337071
  - 0.8313247535900851
  - 0.8154444028823411
  - 0.8367143968202108
  train_ndgc:
  - 0.993986638325247
  - 0.9947433597887401
  - 0.99498437458369
  - 0.9947792843643999
  - 0.9948678553970668
  train_ndgc_oob:
  - 0.980104029929389
  - 0.9811541938571982
  - 0.9812749376284959
  - 0.9781713151952983
  - 0.9813296346180926
  train_neg_coverage_error:
  - -4.391891891891892
  - -4.348297213622291
  - -4.407098121085595
  - -4.32904884318766
  - -4.30745501285347
  train_neg_coverage_error_oob:
  - -4.764553014553014
  - -4.723942208462332
  - -4.80741127348643
  - -4.748071979434448
  - -4.676092544987147
  train_neg_hamming_loss_macro:
  - -0.03452628452628453
  - -0.03269202417809229
  - -0.0331419624217119
  - -0.03477781858244584
  - -0.03301505692251193
  train_neg_hamming_loss_macro_oob:
  - -0.061701811701811715
  - -0.06217750257997937
  - -0.06192215926036386
  - -0.06551597502754315
  - -0.06008079324274696
  train_neg_hamming_loss_micro:
  - -0.03452628452628453
  - -0.03269202417809229
  - -0.0331419624217119
  - -0.03477781858244583
  - -0.033015056922511936
  train_neg_hamming_loss_micro_oob:
  - -0.0617018117018117
  - -0.06217750257997936
  - -0.06192215926036385
  - -0.06551597502754315
  - -0.06008079324274697
  train_neg_hamming_loss_samples:
  - -0.03452628452628452
  - -0.032692024178092284
  - -0.0331419624217119
  - -0.03477781858244583
  - -0.03301505692251193
  train_neg_hamming_loss_samples_oob:
  - -0.061701811701811694
  - -0.06217750257997935
  - -0.061922159260363846
  - -0.06551597502754314
  - -0.060080793242746955
  train_neg_hamming_loss_weighted:
  - -0.030553393890386207
  - -0.029391233196754712
  - -0.02958012741887709
  - -0.030054487162382543
  - -0.02998355246098621
  train_neg_hamming_loss_weighted_oob:
  - -0.05669654709171725
  - -0.058395705664819726
  - -0.058163236223686396
  - -0.061636322598406984
  - -0.05673700061383611
  train_neg_label_ranking_loss:
  - -0.005234256470520206
  - -0.004687492712702797
  - -0.0049053650809541055
  - -0.0049441957438652265
  - -0.004299270627768608
  train_neg_label_ranking_loss_oob:
  - -0.020589747203758193
  - -0.020258033896910502
  - -0.021466441567843296
  - -0.023245151836778718
  - -0.019398004880010023
  train_precision_macro:
  - 0.9654737154737155
  - 0.9673079758219078
  - 0.9668580375782881
  - 0.9652221814175542
  - 0.966984943077488
  train_precision_macro_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.938077840739636
  - 0.934484024972457
  - 0.9399192067572529
  train_precision_micro:
  - 0.9654737154737155
  - 0.9673079758219078
  - 0.9668580375782881
  - 0.9652221814175541
  - 0.9669849430774881
  train_precision_micro_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.9380778407396362
  - 0.9344840249724569
  - 0.939919206757253
  train_precision_samples:
  - 0.9654737154737155
  - 0.9673079758219076
  - 0.9668580375782881
  - 0.9652221814175543
  - 0.9669849430774881
  train_precision_samples_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.9380778407396363
  - 0.9344840249724569
  - 0.9399192067572532
  train_precision_weighted:
  - 0.9694466061096136
  - 0.9706087668032454
  - 0.9704198725811229
  - 0.9699455128376175
  - 0.9700164475390136
  train_precision_weighted_oob:
  - 0.9433034529082828
  - 0.9416042943351804
  - 0.9418367637763138
  - 0.9383636774015929
  - 0.9432629993861639
  train_recall_macro:
  - 0.9654737154737155
  - 0.9673079758219078
  - 0.9668580375782881
  - 0.9652221814175542
  - 0.966984943077488
  train_recall_macro_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.938077840739636
  - 0.934484024972457
  - 0.9399192067572529
  train_recall_micro:
  - 0.9654737154737155
  - 0.9673079758219078
  - 0.9668580375782881
  - 0.9652221814175541
  - 0.9669849430774881
  train_recall_micro_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.9380778407396362
  - 0.9344840249724569
  - 0.939919206757253
  train_recall_samples:
  - 0.9654737154737155
  - 0.9673079758219076
  - 0.9668580375782881
  - 0.9652221814175543
  - 0.9669849430774881
  train_recall_samples_oob:
  - 0.9382981882981883
  - 0.9378224974200207
  - 0.9380778407396363
  - 0.9344840249724569
  - 0.9399192067572532
  train_recall_weighted:
  - 0.9694466061096136
  - 0.9706087668032454
  - 0.9704198725811229
  - 0.9699455128376175
  - 0.9700164475390136
  train_recall_weighted_oob:
  - 0.9433034529082828
  - 0.9416042943351804
  - 0.9418367637763138
  - 0.9383636774015929
  - 0.9432629993861639
  train_roc_auc_macro:
  - 0.9953453996311145
  - 0.9958416775156541
  - 0.9961145375873821
  - 0.9954868909575942
  - 0.994725251012097
  train_roc_auc_macro_oob:
  - 0.9767451310563161
  - 0.9784593474624567
  - 0.9773102429837487
  - 0.9771379196846116
  - 0.9780063564967835
  train_roc_auc_micro:
  - 0.9960517928036072
  - 0.9963924598588075
  - 0.996459725181869
  - 0.9962519067206359
  - 0.9962616416732868
  train_roc_auc_micro_oob:
  - 0.9817472471851736
  - 0.9818679108056754
  - 0.9819459646364641
  - 0.9805227517441538
  - 0.982469838281783
  train_roc_auc_samples:
  - 0.9947657435294798
  - 0.9953125072872971
  - 0.9950946349190458
  - 0.9950558042561347
  - 0.9957007293722314
  train_roc_auc_samples_oob:
  - 0.9794102527962418
  - 0.9797419661030894
  - 0.9785335584321566
  - 0.9767548481632213
  - 0.9806019951199899
  train_roc_auc_weighted:
  - 0.9952802930630423
  - 0.9960237280631556
  - 0.9962900261764721
  - 0.9963416519714063
  - 0.9949589367435453
  train_roc_auc_weighted_oob:
  - 0.9802483454882264
  - 0.9808418301179662
  - 0.9812224690958912
  - 0.9797656647027718
  - 0.9805021667816363
start: 2023-12-13 01:14:37.861388
wrapper: null
