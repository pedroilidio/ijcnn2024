active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0DAzMzMzMwMwMDMzMzMzATAgGZmZmZm9j+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 13:11:33.441392
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__9
  params: {}
hash: 5798ab406e959e70fe1bd7dcc9d15e9431920fb46eeb09d8de8b973e238ae2e8
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5798ab4_20231221T125132188392_embedding_proba_weak__9_VirusPseAAC.yml
results:
  fit_time:
  - 1138.280723810196
  - 1142.1396462917328
  - 1169.1104519367218
  - 1185.384980916977
  - 1183.9118356704712
  score_time:
  - 5.733609199523926
  - 5.867799997329712
  - 5.781009912490845
  - 5.893844366073608
  - 5.81005334854126
  test_average_precision_macro:
  - 0.49524144979292034
  - 0.29498544740172045
  - 0.2684285229239178
  - 0.463882790072592
  - 0.30743759510483476
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.45280540614961684
  - 0.33402052309630764
  - 0.35183842295869505
  - 0.49297952193740535
  - 0.40702725231353426
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6552631578947368
  - 0.6151851851851852
  - 0.6140151515151514
  - 0.703125
  - 0.6373611111111112
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5240499533818833
  - 0.3242291560842995
  - 0.3627855232173096
  - 0.48754397601281807
  - 0.4195504914515768
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7850877192982456
  - 0.8037037037037038
  - 0.8106060606060606
  - 0.7833333333333333
  - 0.7916666666666666
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7850877192982456
  - 0.8037037037037037
  - 0.8106060606060606
  - 0.7833333333333333
  - 0.7916666666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7850877192982456
  - 0.8037037037037039
  - 0.8106060606060609
  - 0.7833333333333334
  - 0.7916666666666667
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6668421052631579
  - 0.6944444444444445
  - 0.6920222634508348
  - 0.6644230769230769
  - 0.6714285714285716
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6725909892576559
  - 0.6960458487814111
  - 0.7073666686252619
  - 0.6710120529095701
  - 0.6829320969220402
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6462093862815884
  - 0.6718266253869969
  - 0.6815286624203821
  - 0.6438356164383562
  - 0.6551724137931034
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6541353383458648
  - 0.6761904761904763
  - 0.6850649350649353
  - 0.6511904761904763
  - 0.6630952380952382
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5211332371332371
  - 0.5507509500086072
  - 0.5476702988616564
  - 0.5184059096481385
  - 0.5248364570180156
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6552631578947368
  - 0.6151851851851851
  - 0.6140151515151515
  - 0.703125
  - 0.637361111111111
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.030453209785201885
  - -0.019577978912473534
  - -0.020167733805285262
  - 0.0
  - -0.022944414976636292
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12523106397080525
  - -0.02977812063818903
  - -0.029437500768557206
  - 0.0
  - -0.03276290525493637
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.02631578947368421
  - -0.0044444444444444444
  - -0.004545454545454546
  - 0.0
  - -0.005
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06212454796181184
  - -0.03840295863600578
  - -0.0419818132273285
  - 0.0
  - -0.0477618434207531
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7473261465273007
  - 0.7117589710561122
  - 0.7122545883369948
  - 0.7807491231049146
  - 0.732402731107725
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6052631578947367
  - -2.4
  - -2.25
  - -2.325
  - -2.55
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21491228070175436
  - -0.1962962962962963
  - -0.18939393939393936
  - -0.21666666666666667
  - -0.20833333333333334
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2149122807017544
  - -0.1962962962962963
  - -0.1893939393939394
  - -0.21666666666666667
  - -0.20833333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21491228070175436
  - -0.19629629629629627
  - -0.18939393939393936
  - -0.2166666666666667
  - -0.20833333333333331
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3331578947368421
  - -0.3055555555555556
  - -0.30797773654916516
  - -0.335576923076923
  - -0.3285714285714286
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2506578947368421
  - -0.24944444444444444
  - -0.23011363636363635
  - -0.20590277777777777
  - -0.25763888888888886
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7850877192982456
  - 0.8037037037037038
  - 0.8106060606060606
  - 0.7833333333333333
  - 0.7916666666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7850877192982456
  - 0.8037037037037037
  - 0.8106060606060606
  - 0.7833333333333333
  - 0.7916666666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7850877192982456
  - 0.8037037037037039
  - 0.8106060606060609
  - 0.7833333333333334
  - 0.7916666666666667
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6668421052631579
  - 0.6944444444444445
  - 0.6920222634508348
  - 0.6644230769230769
  - 0.6714285714285716
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7850877192982456
  - 0.8037037037037038
  - 0.8106060606060606
  - 0.7833333333333333
  - 0.7916666666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7850877192982456
  - 0.8037037037037037
  - 0.8106060606060606
  - 0.7833333333333333
  - 0.7916666666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7850877192982456
  - 0.8037037037037039
  - 0.8106060606060609
  - 0.7833333333333334
  - 0.7916666666666667
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6668421052631579
  - 0.6944444444444445
  - 0.6920222634508348
  - 0.6644230769230769
  - 0.6714285714285716
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6262765522875817
  - 0.5666819884178828
  - 0.5258025685794513
  - 0.6012570212538243
  - 0.5792004865694124
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7607865168539326
  - 0.7377381792519407
  - 0.7627906976744185
  - 0.7856996726677578
  - 0.7485842504541084
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7493421052631578
  - 0.7505555555555555
  - 0.7698863636363636
  - 0.7940972222222221
  - 0.742361111111111
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5850367647058823
  - 0.49834232189181893
  - 0.5584857076245431
  - 0.5843362555319078
  - 0.5421824552259334
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7402818286982663
  - 0.744044829613627
  - 0.7513111096748495
  - 0.6974675365577117
  - 0.7073520001313723
  train_average_precision_macro_oob:
  - 0.5820193065217917
  - 0.5752564274632588
  - 0.6591215268627065
  - 0.5974752461046223
  - 0.5783569695961684
  train_average_precision_micro:
  - 0.7614246320881705
  - 0.7888704593311251
  - 0.7921144701605662
  - 0.7723239921317766
  - 0.7508787849556332
  train_average_precision_micro_oob:
  - 0.7030362246358604
  - 0.7210347317100009
  - 0.7339995269265711
  - 0.6982540445356623
  - 0.7024903920130678
  train_average_precision_samples:
  - 0.8041420118343194
  - 0.831738683127572
  - 0.8394683026584866
  - 0.8079840319361278
  - 0.8097804391217565
  train_average_precision_samples_oob:
  - 0.7760683760683761
  - 0.7813786008230451
  - 0.7911383776414451
  - 0.7591816367265469
  - 0.7846806387225548
  train_average_precision_weighted:
  - 0.756442817932509
  - 0.7731103821504496
  - 0.7776713352815031
  - 0.7498372787688807
  - 0.7362940994959516
  train_average_precision_weighted_oob:
  - 0.7001060298056874
  - 0.7181055150210025
  - 0.7412975947140897
  - 0.7096887413133546
  - 0.6844121943203134
  train_f1_macro:
  - 0.8639053254437868
  - 0.8569958847736624
  - 0.8568507157464212
  - 0.8652694610778443
  - 0.8632734530938123
  train_f1_macro_oob:
  - 0.8471400394477318
  - 0.8343621399176954
  - 0.8374233128834355
  - 0.845309381237525
  - 0.8483033932135728
  train_f1_micro:
  - 0.863905325443787
  - 0.8569958847736625
  - 0.8568507157464212
  - 0.8652694610778443
  - 0.8632734530938124
  train_f1_micro_oob:
  - 0.8471400394477318
  - 0.8343621399176955
  - 0.8374233128834356
  - 0.845309381237525
  - 0.8483033932135728
  train_f1_samples:
  - 0.863905325443787
  - 0.8569958847736624
  - 0.856850715746421
  - 0.865269461077844
  - 0.8632734530938121
  train_f1_samples_oob:
  - 0.8471400394477318
  - 0.8343621399176954
  - 0.8374233128834356
  - 0.8453093812375247
  - 0.8483033932135726
  train_f1_weighted:
  - 0.8161579471556624
  - 0.8049074074074073
  - 0.8077306657801687
  - 0.8188323353293413
  - 0.8143712574850299
  train_f1_weighted_oob:
  - 0.7819145819907434
  - 0.7587962962962963
  - 0.7680800265949409
  - 0.7779940119760478
  - 0.7864074806052919
  train_jaccard_macro:
  - 0.7665882680391661
  - 0.756788176160654
  - 0.755996022517325
  - 0.7683774256599203
  - 0.7655155071887458
  train_jaccard_macro_oob:
  - 0.7448199841251172
  - 0.7285406983914188
  - 0.7315838369144553
  - 0.7425275104262546
  - 0.7456329968695142
  train_jaccard_micro:
  - 0.7604166666666666
  - 0.7497749774977498
  - 0.7495527728085868
  - 0.762532981530343
  - 0.7594381035996488
  train_jaccard_micro_oob:
  - 0.7348160821214713
  - 0.7157987643424537
  - 0.7203166226912929
  - 0.7320656871218669
  - 0.7365684575389948
  train_jaccard_samples:
  - 0.7741617357001973
  - 0.7630805408583187
  - 0.7648261758691207
  - 0.775734245794126
  - 0.7727402338180781
  train_jaccard_samples_oob:
  - 0.749366018596788
  - 0.7289829512051734
  - 0.7350277534326615
  - 0.7445109780439122
  - 0.7504990019960082
  train_jaccard_weighted:
  - 0.6928778899233917
  - 0.6776811056502665
  - 0.6813808230959798
  - 0.6965428368965624
  - 0.6908259885078913
  train_jaccard_weighted_oob:
  - 0.6484179269179715
  - 0.6201169620473905
  - 0.631581430011247
  - 0.6436573304470617
  - 0.6541578325266849
  train_label_ranking_average_precision_score:
  - 0.8041420118343192
  - 0.831738683127572
  - 0.8394683026584866
  - 0.8079840319361274
  - 0.8097804391217565
  train_label_ranking_average_precision_score_oob:
  - 0.7760683760683758
  - 0.7813786008230452
  - 0.7911383776414449
  - 0.7591816367265466
  - 0.7846806387225548
  train_matthews_corrcoef_macro:
  - 0.1950049659877738
  - 0.1885844045953884
  - 0.19162778251302415
  - 0.19763973114556302
  - 0.23615943239054035
  train_matthews_corrcoef_macro_oob:
  - 0.16225828986328167
  - 0.14440729224735419
  - 0.1546945645109811
  - 0.1587441376643284
  - 0.16862825480314717
  train_matthews_corrcoef_micro:
  - 0.5203918834399538
  - 0.5083927883269314
  - 0.5126991058039233
  - 0.5274230054528305
  - 0.5268165550816494
  train_matthews_corrcoef_micro_oob:
  - 0.442016032255326
  - 0.401684555733865
  - 0.4240877545022248
  - 0.43423264931417527
  - 0.45943089898704165
  train_matthews_corrcoef_samples:
  - 0.3342242223396688
  - 0.32888041214571656
  - 0.3447788812274383
  - 0.3295609579634974
  - 0.3511922792854702
  train_matthews_corrcoef_samples_oob:
  - 0.2607079541791089
  - 0.21690934187532743
  - 0.24625345634234996
  - 0.2441423288373456
  - 0.2789788406251743
  train_matthews_corrcoef_weighted:
  - 0.3969428078618883
  - 0.38492655854863
  - 0.38789858033639235
  - 0.4032814850231185
  - 0.4272464783053674
  train_matthews_corrcoef_weighted_oob:
  - 0.33009561310661334
  - 0.294981173512801
  - 0.31252843196194113
  - 0.3237178310282468
  - 0.34389808477907075
  train_ndgc:
  - 0.854919274460647
  - 0.8763169936141803
  - 0.883367115230257
  - 0.8583647865712769
  - 0.8606409723695913
  train_ndgc_oob:
  - 0.8342210123063277
  - 0.8386229615243472
  - 0.846798588296264
  - 0.8219863291971055
  - 0.8415992915658307
  train_neg_coverage_error:
  - -1.863905325443787
  - -1.8333333333333333
  - -1.8404907975460123
  - -1.8323353293413174
  - -1.8622754491017963
  train_neg_coverage_error_oob:
  - -1.970414201183432
  - -2.049382716049383
  - -1.9877300613496933
  - -2.0179640718562872
  - -2.0059880239520957
  train_neg_hamming_loss_macro:
  - -0.13609467455621302
  - -0.14300411522633744
  - -0.14314928425357873
  - -0.1347305389221557
  - -0.13672654690618763
  train_neg_hamming_loss_macro_oob:
  - -0.15285996055226825
  - -0.16563786008230452
  - -0.16257668711656442
  - -0.15469061876247506
  - -0.15169660678642713
  train_neg_hamming_loss_micro:
  - -0.13609467455621302
  - -0.14300411522633744
  - -0.14314928425357873
  - -0.1347305389221557
  - -0.13672654690618763
  train_neg_hamming_loss_micro_oob:
  - -0.15285996055226825
  - -0.16563786008230452
  - -0.16257668711656442
  - -0.15469061876247506
  - -0.15169660678642716
  train_neg_hamming_loss_samples:
  - -0.13609467455621302
  - -0.14300411522633744
  - -0.1431492842535787
  - -0.13473053892215564
  - -0.1367265469061876
  train_neg_hamming_loss_samples_oob:
  - -0.15285996055226825
  - -0.16563786008230452
  - -0.16257668711656442
  - -0.15469061876247503
  - -0.15169660678642713
  train_neg_hamming_loss_weighted:
  - -0.1838420528443377
  - -0.19509259259259257
  - -0.19226933421983136
  - -0.1811676646706587
  - -0.18562874251497005
  train_neg_hamming_loss_weighted_oob:
  - -0.21808541800925652
  - -0.2412037037037037
  - -0.2319199734050591
  - -0.22200598802395205
  - -0.2135925193947081
  train_neg_label_ranking_loss:
  - -0.12927350427350426
  - -0.11550068587105625
  - -0.11025903203817314
  - -0.12140718562874253
  - -0.1217065868263473
  train_neg_label_ranking_loss_oob:
  - -0.15093688362919133
  - -0.15893347050754458
  - -0.14330265848670756
  - -0.15830006653359946
  - -0.1502994011976048
  train_precision_macro:
  - 0.8639053254437868
  - 0.8569958847736624
  - 0.8568507157464212
  - 0.8652694610778443
  - 0.8632734530938123
  train_precision_macro_oob:
  - 0.8471400394477318
  - 0.8343621399176954
  - 0.8374233128834355
  - 0.845309381237525
  - 0.8483033932135728
  train_precision_micro:
  - 0.863905325443787
  - 0.8569958847736625
  - 0.8568507157464212
  - 0.8652694610778443
  - 0.8632734530938124
  train_precision_micro_oob:
  - 0.8471400394477318
  - 0.8343621399176955
  - 0.8374233128834356
  - 0.845309381237525
  - 0.8483033932135728
  train_precision_samples:
  - 0.863905325443787
  - 0.8569958847736624
  - 0.856850715746421
  - 0.865269461077844
  - 0.8632734530938121
  train_precision_samples_oob:
  - 0.8471400394477318
  - 0.8343621399176954
  - 0.8374233128834356
  - 0.8453093812375247
  - 0.8483033932135726
  train_precision_weighted:
  - 0.8161579471556624
  - 0.8049074074074073
  - 0.8077306657801687
  - 0.8188323353293413
  - 0.8143712574850299
  train_precision_weighted_oob:
  - 0.7819145819907434
  - 0.7587962962962963
  - 0.7680800265949409
  - 0.7779940119760478
  - 0.7864074806052919
  train_recall_macro:
  - 0.8639053254437868
  - 0.8569958847736624
  - 0.8568507157464212
  - 0.8652694610778443
  - 0.8632734530938123
  train_recall_macro_oob:
  - 0.8471400394477318
  - 0.8343621399176954
  - 0.8374233128834355
  - 0.845309381237525
  - 0.8483033932135728
  train_recall_micro:
  - 0.863905325443787
  - 0.8569958847736625
  - 0.8568507157464212
  - 0.8652694610778443
  - 0.8632734530938124
  train_recall_micro_oob:
  - 0.8471400394477318
  - 0.8343621399176955
  - 0.8374233128834356
  - 0.845309381237525
  - 0.8483033932135728
  train_recall_samples:
  - 0.863905325443787
  - 0.8569958847736624
  - 0.856850715746421
  - 0.865269461077844
  - 0.8632734530938121
  train_recall_samples_oob:
  - 0.8471400394477318
  - 0.8343621399176954
  - 0.8374233128834356
  - 0.8453093812375247
  - 0.8483033932135726
  train_recall_weighted:
  - 0.8161579471556624
  - 0.8049074074074073
  - 0.8077306657801687
  - 0.8188323353293413
  - 0.8143712574850299
  train_recall_weighted_oob:
  - 0.7819145819907434
  - 0.7587962962962963
  - 0.7680800265949409
  - 0.7779940119760478
  - 0.7864074806052919
  train_roc_auc_macro:
  - 0.8549889287435796
  - 0.8471801921563159
  - 0.8588716340554662
  - 0.839111953758176
  - 0.8302911750304585
  train_roc_auc_macro_oob:
  - 0.8132187213857817
  - 0.815470893660386
  - 0.8392113430879472
  - 0.8042793347895866
  - 0.7891162551649048
  train_roc_auc_micro:
  - 0.8925705994244745
  - 0.8971761658031088
  - 0.9002764976958526
  - 0.893572319201995
  - 0.882217303649266
  train_roc_auc_micro_oob:
  - 0.8677693508267083
  - 0.8654922279792747
  - 0.8785507706976005
  - 0.861639650872818
  - 0.8613414551440532
  train_roc_auc_samples:
  - 0.8707264957264957
  - 0.8844993141289438
  - 0.889740967961827
  - 0.8785928143712576
  - 0.8782934131736526
  train_roc_auc_samples_oob:
  - 0.8490631163708086
  - 0.8410665294924555
  - 0.8566973415132924
  - 0.8416999334664006
  - 0.8497005988023951
  train_roc_auc_weighted:
  - 0.8029700974326343
  - 0.8122307681564722
  - 0.8164805450227127
  - 0.7914881887619135
  - 0.7833680153790852
  train_roc_auc_weighted_oob:
  - 0.7879511947463952
  - 0.8057801836493836
  - 0.8024151007015037
  - 0.7806395236611594
  - 0.7716122574236742
start: 2023-12-21 12:51:32.188392
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
