active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMDAmZmZmZkVQABnZmZmZvY/wJmZmZmZFUAgMzMzMzMjwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 19:02:16.258138
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__9
  params: {}
hash: c89170191f84b10262652a566e41f5864d974e311bfed6f7f35791e8b346dd7b
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c891701_20231222T182006382147_embedding_weak__9_scene.yml
results:
  fit_time:
  - 2253.0681767463684
  - 2296.6750593185425
  - 2129.2951703071594
  - 2373.6681995391846
  - 2331.575213909149
  score_time:
  - 17.858676195144653
  - 17.963726043701172
  - 19.909984588623047
  - 17.708982467651367
  - 19.47330904006958
  test_average_precision_macro:
  - 0.8372333925978966
  - 0.8361481852317985
  - 0.8578771334873027
  - 0.8244618136502977
  - 0.844083719463078
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8507935321198778
  - 0.8454104533818527
  - 0.861590730599116
  - 0.8303404585642229
  - 0.8459636556202567
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8779614325068871
  - 0.8724789915966387
  - 0.881111111111111
  - 0.8615896358543418
  - 0.8832145281737949
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8253791289116101
  - 0.8241711477866249
  - 0.8492008428808081
  - 0.811409684179543
  - 0.8358653937602081
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9039256198347106
  - 0.8998599439775911
  - 0.9086805555555556
  - 0.8974089635854341
  - 0.9008825526137135
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9039256198347108
  - 0.8998599439775911
  - 0.9086805555555556
  - 0.8974089635854342
  - 0.9008825526137135
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9039256198347108
  - 0.8998599439775912
  - 0.9086805555555557
  - 0.8974089635854342
  - 0.9008825526137134
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8986606145697055
  - 0.8940704188652204
  - 0.9038961563307494
  - 0.8919608383894098
  - 0.8963627696998586
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.828444860938255
  - 0.821893097196793
  - 0.8357611706311509
  - 0.8175156756194496
  - 0.822390958043231
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.824693685202639
  - 0.8179503500954806
  - 0.8326439707286033
  - 0.8139091775166719
  - 0.8196417541692402
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8413518299881936
  - 0.8352841136454582
  - 0.8483630952380952
  - 0.8303821528611444
  - 0.8362913393463292
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8198805716551352
  - 0.8125491139835411
  - 0.8281003606344782
  - 0.8089257535953529
  - 0.8150567412085522
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8779614325068869
  - 0.8724789915966383
  - 0.8811111111111108
  - 0.8615896358543416
  - 0.8832145281737948
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6404744272782532
  - 0.6266339924072983
  - 0.662489106745524
  - 0.6158317203936052
  - 0.6223684808034895
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6383633083092669
  - 0.6255749733974871
  - 0.6606068874191798
  - 0.6165630062922083
  - 0.6188593269180357
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5166023063606522
  - 0.5066213110180094
  - 0.5379821107752211
  - 0.4912400198965498
  - 0.4981732398096171
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6235901101286607
  - 0.606839683184918
  - 0.6471797992648841
  - 0.5977470561251116
  - 0.6085778439916725
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9100151113804429
  - 0.9061556154569763
  - 0.912761775482911
  - 0.8983873194710618
  - 0.9137320615675669
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4235537190082646
  - -1.4621848739495797
  - -1.4104166666666667
  - -1.4852941176470589
  - -1.3890020366598779
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09607438016528924
  - -0.10014005602240895
  - -0.09131944444444445
  - -0.10259103641456584
  - -0.09911744738628649
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09607438016528926
  - -0.10014005602240897
  - -0.09131944444444444
  - -0.10259103641456582
  - -0.09911744738628649
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09607438016528926
  - -0.10014005602240897
  - -0.09131944444444445
  - -0.10259103641456582
  - -0.09911744738628649
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10133938543029451
  - -0.10592958113477949
  - -0.09610384366925064
  - -0.10803916161059017
  - -0.10363723030014142
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06880165289256197
  - -0.07305672268907565
  - -0.064375
  - -0.07694327731092437
  - -0.06598778004073319
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9039256198347106
  - 0.8998599439775911
  - 0.9086805555555556
  - 0.8974089635854341
  - 0.9008825526137135
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9039256198347108
  - 0.8998599439775911
  - 0.9086805555555556
  - 0.8974089635854342
  - 0.9008825526137135
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9039256198347108
  - 0.8998599439775912
  - 0.9086805555555557
  - 0.8974089635854342
  - 0.9008825526137134
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8986606145697055
  - 0.8940704188652204
  - 0.9038961563307494
  - 0.8919608383894098
  - 0.8963627696998586
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9039256198347106
  - 0.8998599439775911
  - 0.9086805555555556
  - 0.8974089635854341
  - 0.9008825526137135
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9039256198347108
  - 0.8998599439775911
  - 0.9086805555555556
  - 0.8974089635854342
  - 0.9008825526137135
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9039256198347108
  - 0.8998599439775912
  - 0.9086805555555557
  - 0.8974089635854342
  - 0.9008825526137134
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8986606145697055
  - 0.8940704188652204
  - 0.9038961563307494
  - 0.8919608383894098
  - 0.8963627696998586
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9427820945834414
  - 0.943532083456278
  - 0.9508279154252297
  - 0.936158214594793
  - 0.9474543646182639
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.952731021046193
  - 0.9509528423772611
  - 0.956428960243445
  - 0.9442383847858613
  - 0.9531236437852416
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.931198347107438
  - 0.9269432773109244
  - 0.935625
  - 0.9230567226890757
  - 0.9340122199592668
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9368610889233894
  - 0.9383636567128048
  - 0.9461011683186863
  - 0.9303840581094688
  - 0.9432937692600243
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9941081473660472
  - 0.9943739497280372
  - 0.994520792724908
  - 0.9942698064973919
  - 0.9943274100925111
  train_average_precision_macro_oob:
  - 0.8638162103796637
  - 0.8565459532481894
  - 0.856419993461833
  - 0.8631497911898222
  - 0.8584737786418049
  train_average_precision_micro:
  - 0.9940872745281113
  - 0.9941012970372239
  - 0.9940015662529497
  - 0.9937949349889635
  - 0.9937339429602265
  train_average_precision_micro_oob:
  - 0.8674919066777163
  - 0.8639199367798749
  - 0.8626380874655881
  - 0.8677934615884005
  - 0.8657844682711002
  train_average_precision_samples:
  - 0.9879095163806553
  - 0.9890816502675643
  - 0.988367064521709
  - 0.9885206283445539
  - 0.9890396659707724
  train_average_precision_samples_oob:
  - 0.8849670653492806
  - 0.882112031762472
  - 0.8827841203943955
  - 0.8899533920248576
  - 0.8837073764787753
  train_average_precision_weighted:
  - 0.9940533369127802
  - 0.9942598622938131
  - 0.9944117481349485
  - 0.9941352879908031
  - 0.9942181333238426
  train_average_precision_weighted_oob:
  - 0.8551611116390204
  - 0.8474766015836084
  - 0.8470814352680146
  - 0.854903756864827
  - 0.8491104271624951
  train_f1_macro:
  - 0.9556248916623331
  - 0.957103400655964
  - 0.9559764746583636
  - 0.9571897117210426
  - 0.9559846903270702
  train_f1_macro_oob:
  - 0.9005893569076097
  - 0.8978940100120835
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945722
  train_f1_micro:
  - 0.9556248916623331
  - 0.9571034006559641
  - 0.9559764746583636
  - 0.9571897117210426
  - 0.9559846903270702
  train_f1_micro_oob:
  - 0.9005893569076097
  - 0.8978940100120836
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945721
  train_f1_samples:
  - 0.9556248916623333
  - 0.9571034006559641
  - 0.9559764746583637
  - 0.9571897117210427
  - 0.9559846903270703
  train_f1_samples_oob:
  - 0.9005893569076097
  - 0.8978940100120836
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945721
  train_f1_weighted:
  - 0.9538685949953721
  - 0.9554562317798759
  - 0.9542152761387552
  - 0.9554058661960523
  - 0.9541333189308804
  train_f1_weighted_oob:
  - 0.8951364343881931
  - 0.8925688801095505
  - 0.8920308515529237
  - 0.8920552982091143
  - 0.8921956203082663
  train_jaccard_macro:
  - 0.9154810613151326
  - 0.9181364137649295
  - 0.9161357822924517
  - 0.9183463127708961
  - 0.9161541756158597
  train_jaccard_macro_oob:
  - 0.8227308613491703
  - 0.8184053871342728
  - 0.8177338854882313
  - 0.8174578078936258
  - 0.8188168715304659
  train_jaccard_micro:
  - 0.9150207468879668
  - 0.9177356616734255
  - 0.9156656449341397
  - 0.9178943883463003
  - 0.91568071988002
  train_jaccard_micro_oob:
  - 0.8191564840362633
  - 0.8147074947137599
  - 0.8140738997411155
  - 0.8138551859099804
  - 0.8148235851290552
  train_jaccard_samples:
  - 0.9253646336329643
  - 0.9276466671598728
  - 0.9259272987866656
  - 0.9278562797464921
  - 0.9259742519137091
  train_jaccard_samples_oob:
  - 0.833964787162915
  - 0.8289068087100193
  - 0.8287493513233003
  - 0.8281423392764666
  - 0.8298787155780891
  train_jaccard_weighted:
  - 0.9122844582453934
  - 0.9151311541653292
  - 0.9129272526312082
  - 0.9151063096199462
  - 0.9127925004484501
  train_jaccard_weighted_oob:
  - 0.8140343722498841
  - 0.809977429428192
  - 0.8090059553328997
  - 0.8089907874422795
  - 0.8096952512792156
  train_label_ranking_average_precision_score:
  - 0.9879095163806553
  - 0.9890816502675641
  - 0.9883670645217086
  - 0.9885206283445538
  - 0.9890396659707723
  train_label_ranking_average_precision_score_oob:
  - 0.8849670653492806
  - 0.882112031762472
  - 0.8827841203943954
  - 0.8899533920248573
  - 0.8837073764787751
  train_matthews_corrcoef_macro:
  - 0.8475751895656191
  - 0.8522741262599501
  - 0.8487132549456003
  - 0.8527901398232868
  - 0.8496236734741759
  train_matthews_corrcoef_macro_oob:
  - 0.6272692989928953
  - 0.6114405565121147
  - 0.6120647353110298
  - 0.6086030978688427
  - 0.6136444169055686
  train_matthews_corrcoef_micro:
  - 0.8447168336800882
  - 0.8496563798832806
  - 0.8458753527498784
  - 0.8498130543505917
  - 0.8464441565090766
  train_matthews_corrcoef_micro_oob:
  - 0.6271140726563746
  - 0.6142861526714299
  - 0.613215845419537
  - 0.6114945891527463
  - 0.6171187931527491
  train_matthews_corrcoef_samples:
  - 0.7811010143111347
  - 0.7900041603348864
  - 0.7827931979537341
  - 0.7895660195300436
  - 0.7878185340641095
  train_matthews_corrcoef_samples_oob:
  - 0.481144355388285
  - 0.4609893410356327
  - 0.4629792040914055
  - 0.4577113388978105
  - 0.47074990771278125
  train_matthews_corrcoef_weighted:
  - 0.8432877761144665
  - 0.8483504385155287
  - 0.8444261524991242
  - 0.8484280416089142
  - 0.8450561778345949
  train_matthews_corrcoef_weighted_oob:
  - 0.6090686107311688
  - 0.5937318647438222
  - 0.5937209270491329
  - 0.5907040625839264
  - 0.5934263724802507
  train_ndgc:
  - 0.9912415252761777
  - 0.9920815096458853
  - 0.9915326764382402
  - 0.9915997965263592
  - 0.9920545459043327
  train_ndgc_oob:
  - 0.9150956003587312
  - 0.9131918431605464
  - 0.9137050208921254
  - 0.9189040359830908
  - 0.9143045686453223
  train_neg_coverage_error:
  - -1.1029641185647425
  - -1.098394614189539
  - -1.1027503892060198
  - -1.0963231486276541
  - -1.1049060542797495
  train_neg_coverage_error_oob:
  - -1.4149765990639624
  - -1.422578974624547
  - -1.4291645044110015
  - -1.3961677887105126
  - -1.4248434237995824
  train_neg_hamming_loss_macro:
  - -0.044375108337666835
  - -0.04289659934403591
  - -0.044023525341636394
  - -0.042810288278957366
  - -0.044015309672929714
  train_neg_hamming_loss_macro_oob:
  - -0.09941064309239038
  - -0.10210598998791644
  - -0.10249091852620655
  - -0.10262385637838771
  - -0.10203549060542798
  train_neg_hamming_loss_micro:
  - -0.04437510833766684
  - -0.042896599344035904
  - -0.044023525341636394
  - -0.04281028827895736
  - -0.044015309672929714
  train_neg_hamming_loss_micro_oob:
  - -0.09941064309239037
  - -0.10210598998791645
  - -0.10249091852620654
  - -0.10262385637838771
  - -0.10203549060542798
  train_neg_hamming_loss_samples:
  - -0.044375108337666835
  - -0.0428965993440359
  - -0.044023525341636394
  - -0.04281028827895736
  - -0.044015309672929714
  train_neg_hamming_loss_samples_oob:
  - -0.09941064309239034
  - -0.10210598998791644
  - -0.10249091852620654
  - -0.10262385637838771
  - -0.10203549060542798
  train_neg_hamming_loss_weighted:
  - -0.04613140500462786
  - -0.044543768220124
  - -0.04578472386124476
  - -0.04459413380394786
  - -0.045866681069119654
  train_neg_hamming_loss_weighted_oob:
  - -0.10486356561180686
  - -0.10743111989044962
  - -0.10796914844707611
  - -0.10794470179088571
  - -0.10780437969173366
  train_neg_label_ranking_loss:
  - -0.005330213208528341
  - -0.0051009839461418965
  - -0.005591593149974053
  - -0.005075090626618333
  - -0.004893006263048017
  train_neg_label_ranking_loss_oob:
  - -0.06632865314612585
  - -0.0680217503883998
  - -0.068759730150493
  - -0.06328327291558779
  - -0.06698851774530272
  train_precision_macro:
  - 0.9556248916623331
  - 0.957103400655964
  - 0.9559764746583636
  - 0.9571897117210426
  - 0.9559846903270702
  train_precision_macro_oob:
  - 0.9005893569076097
  - 0.8978940100120835
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945722
  train_precision_micro:
  - 0.9556248916623331
  - 0.9571034006559641
  - 0.9559764746583636
  - 0.9571897117210426
  - 0.9559846903270702
  train_precision_micro_oob:
  - 0.9005893569076097
  - 0.8978940100120836
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945721
  train_precision_samples:
  - 0.9556248916623333
  - 0.9571034006559641
  - 0.9559764746583637
  - 0.9571897117210427
  - 0.9559846903270703
  train_precision_samples_oob:
  - 0.9005893569076097
  - 0.8978940100120836
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945721
  train_precision_weighted:
  - 0.9538685949953721
  - 0.9554562317798759
  - 0.9542152761387552
  - 0.9554058661960523
  - 0.9541333189308804
  train_precision_weighted_oob:
  - 0.8951364343881931
  - 0.8925688801095505
  - 0.8920308515529237
  - 0.8920552982091143
  - 0.8921956203082663
  train_recall_macro:
  - 0.9556248916623331
  - 0.957103400655964
  - 0.9559764746583636
  - 0.9571897117210426
  - 0.9559846903270702
  train_recall_macro_oob:
  - 0.9005893569076097
  - 0.8978940100120835
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945722
  train_recall_micro:
  - 0.9556248916623331
  - 0.9571034006559641
  - 0.9559764746583636
  - 0.9571897117210426
  - 0.9559846903270702
  train_recall_micro_oob:
  - 0.9005893569076097
  - 0.8978940100120836
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945721
  train_recall_samples:
  - 0.9556248916623333
  - 0.9571034006559641
  - 0.9559764746583637
  - 0.9571897117210427
  - 0.9559846903270703
  train_recall_samples_oob:
  - 0.9005893569076097
  - 0.8978940100120836
  - 0.8975090814737935
  - 0.8973761436216123
  - 0.8979645093945721
  train_recall_weighted:
  - 0.9538685949953721
  - 0.9554562317798759
  - 0.9542152761387552
  - 0.9554058661960523
  - 0.9541333189308804
  train_recall_weighted_oob:
  - 0.8951364343881931
  - 0.8925688801095505
  - 0.8920308515529237
  - 0.8920552982091143
  - 0.8921956203082663
  train_roc_auc_macro:
  - 0.9985550039097068
  - 0.9985879333996915
  - 0.998647521409806
  - 0.9986193281025132
  - 0.9985399694967819
  train_roc_auc_macro_oob:
  - 0.9527860947895997
  - 0.950167127243592
  - 0.9494282477238404
  - 0.9524355087793013
  - 0.9514789608248888
  train_roc_auc_micro:
  - 0.9986170448664697
  - 0.9986133790348355
  - 0.9986118335929346
  - 0.9986075769424663
  - 0.998519139047522
  train_roc_auc_micro_oob:
  - 0.9573392297736522
  - 0.9557512330838056
  - 0.9554195182459236
  - 0.9575682236220147
  - 0.9567290096006053
  train_roc_auc_samples:
  - 0.9946697867914717
  - 0.9948990160538581
  - 0.9944084068500258
  - 0.9949249093733817
  - 0.995106993736952
  train_roc_auc_samples_oob:
  - 0.9336713468538743
  - 0.9319782496116003
  - 0.931240269849507
  - 0.9367167270844123
  - 0.9330114822546973
  train_roc_auc_weighted:
  - 0.9985225461407368
  - 0.9985253475167991
  - 0.9985952303312446
  - 0.9985580523329811
  - 0.9984790483209877
  train_roc_auc_weighted_oob:
  - 0.94908630434453
  - 0.9460682093243753
  - 0.9451864264107769
  - 0.9485351563047296
  - 0.9474703320294158
start: 2023-12-22 18:20:06.382147
wrapper: null
