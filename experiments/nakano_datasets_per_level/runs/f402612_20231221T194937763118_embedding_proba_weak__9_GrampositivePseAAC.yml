active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmBkAAMzMzMzPzvwCYmZmZmcm/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:09:54.303546
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__9
  params: {}
hash: f4026129ca808e780f36c6aa77332377d0a2689940f9830a2d633d54f2164033
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f402612_20231221T194937763118_embedding_proba_weak__9_GrampositivePseAAC.yml
results:
  fit_time:
  - 1144.9018294811249
  - 1145.4367835521698
  - 1160.341745853424
  - 1181.9637410640717
  - 1194.8061623573303
  score_time:
  - 7.054945468902588
  - 7.285375356674194
  - 6.55718731880188
  - 6.606232166290283
  - 7.0932652950286865
  test_average_precision_macro:
  - 0.4194861326912802
  - 0.41636910701792174
  - 0.43190809814628106
  - 0.3681440161301237
  - 0.42040296832646806
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5628169669958459
  - 0.5334241760197287
  - 0.5004008664358683
  - 0.46070325299072656
  - 0.5133974408813875
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7367986798679867
  - 0.7126984126984126
  - 0.7043269230769231
  - 0.717147435897436
  - 0.7214285714285714
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5397585816289676
  - 0.5109889198869801
  - 0.49254143838580683
  - 0.4584592761730878
  - 0.5188129378085057
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7074447829398325
  - 0.6924263038548754
  - 0.6830621301775148
  - 0.6938644688644688
  - 0.696780045351474
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6510848595848596
  - 0.630336503280192
  - 0.6259142149322743
  - 0.6374384536417685
  - 0.641085122789838
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6323232323232323
  - 0.6122840690978887
  - 0.6061776061776062
  - 0.6186770428015564
  - 0.6216216216216216
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6958038661008955
  - 0.6723809523809523
  - 0.667948717948718
  - 0.6794871794871795
  - 0.6825396825396824
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5540714520522212
  - 0.5351964227320127
  - 0.5255402205628734
  - 0.5355998681924945
  - 0.5433581165392558
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7367986798679865
  - 0.7126984126984126
  - 0.7043269230769231
  - 0.7171474358974356
  - 0.7214285714285712
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.22482606353196863
  - 0.16421836771716491
  - 0.15879294058580587
  - 0.19757038953457712
  - 0.1801172744064688
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3944032370707158
  - 0.33640838925292005
  - 0.3294039229342062
  - 0.3562179376345292
  - 0.3581478822121714
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.38855462312729006
  - 0.3238095238095238
  - 0.3205128205128206
  - 0.3452950346396439
  - 0.3460317460317461
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2968488353625787
  - 0.22577773124966877
  - 0.2163109288789313
  - 0.2609557410686493
  - 0.24316259664817175
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8051544008176602
  - 0.7859016103415795
  - 0.7794737837837176
  - 0.7889353041298323
  - 0.7923447930197913
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7425742574257426
  - -1.7523809523809524
  - -1.7884615384615385
  - -1.7692307692307692
  - -1.7333333333333334
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.22524752475247525
  - -0.24047619047619045
  - -0.2451923076923077
  - -0.23557692307692307
  - -0.2333333333333333
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.22524752475247525
  - -0.24047619047619048
  - -0.24519230769230768
  - -0.23557692307692307
  - -0.23333333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.22524752475247525
  - -0.24047619047619048
  - -0.24519230769230768
  - -0.23557692307692307
  - -0.23333333333333334
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29255521706016757
  - -0.30757369614512475
  - -0.3169378698224852
  - -0.30613553113553116
  - -0.303219954648526
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.235973597359736
  - -0.2507936507936508
  - -0.2628205128205128
  - -0.25320512820512825
  - -0.2444444444444444
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7074447829398325
  - 0.6924263038548754
  - 0.6830621301775148
  - 0.6938644688644688
  - 0.696780045351474
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7747524752475248
  - 0.7595238095238095
  - 0.7548076923076923
  - 0.7644230769230769
  - 0.7666666666666667
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7074447829398325
  - 0.6924263038548754
  - 0.6830621301775148
  - 0.6938644688644688
  - 0.696780045351474
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6832263347631035
  - 0.6932878478116172
  - 0.6516516016091838
  - 0.6727110721008974
  - 0.6645283870790708
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7886858974358975
  - 0.7712169312169312
  - 0.7747781065088757
  - 0.7536365028326443
  - 0.773968253968254
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7640264026402638
  - 0.7492063492063492
  - 0.7371794871794872
  - 0.746794871794872
  - 0.7555555555555556
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6935743454540446
  - 0.6680562865379188
  - 0.6808470032383075
  - 0.6380063155888617
  - 0.6707666095407728
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9512035637332517
  - 0.9482628493297955
  - 0.9601476888323062
  - 0.9538227265180279
  - 0.9573741721989949
  train_average_precision_macro_oob:
  - 0.827622843757092
  - 0.7987671311941709
  - 0.9200793460533858
  - 0.8864634077079263
  - 0.8719363418332609
  train_average_precision_micro:
  - 0.9005755213539695
  - 0.914499457921999
  - 0.9040804824507044
  - 0.9177890011301392
  - 0.9048929503313466
  train_average_precision_micro_oob:
  - 0.8685801184565901
  - 0.87714064351887
  - 0.8756355339986802
  - 0.8862669015533395
  - 0.8687540060149844
  train_average_precision_samples:
  - 0.9557416267942583
  - 0.9643719806763285
  - 0.9590361445783132
  - 0.9590361445783132
  - 0.9603462157809984
  train_average_precision_samples_oob:
  - 0.9507575757575758
  - 0.9528985507246377
  - 0.9550200803212853
  - 0.9532128514056226
  - 0.9545088566827697
  train_average_precision_weighted:
  - 0.9361234406302051
  - 0.9343326476472833
  - 0.9471363145366165
  - 0.9412553546258188
  - 0.9433579267332751
  train_average_precision_weighted_oob:
  - 0.9083187788160257
  - 0.9032106956678045
  - 0.9324997183463716
  - 0.9194426699716526
  - 0.9178204488654177
  train_f1_macro:
  - 0.9665071770334928
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_f1_macro_oob:
  - 0.9605263157894737
  - 0.9613526570048309
  - 0.9566265060240964
  - 0.955421686746988
  - 0.9589371980676328
  train_f1_micro:
  - 0.9665071770334929
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_f1_micro_oob:
  - 0.9605263157894737
  - 0.961352657004831
  - 0.9566265060240964
  - 0.9554216867469879
  - 0.9589371980676329
  train_f1_samples:
  - 0.9665071770334929
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_f1_samples_oob:
  - 0.9605263157894737
  - 0.961352657004831
  - 0.9566265060240964
  - 0.9554216867469879
  - 0.9589371980676329
  train_f1_weighted:
  - 0.9667926596704387
  - 0.9738922404826295
  - 0.9648273284067055
  - 0.9672104686689342
  - 0.9657675149665996
  train_f1_weighted_oob:
  - 0.9584394377133982
  - 0.9591336708041512
  - 0.9517727233516404
  - 0.9505966449530179
  - 0.9536844416707116
  train_jaccard_macro:
  - 0.9369273483815084
  - 0.9468006224468384
  - 0.9339387127065297
  - 0.9370791256640658
  - 0.936762847841686
  train_jaccard_macro_oob:
  - 0.925273701451522
  - 0.9259357463614442
  - 0.9178033186212932
  - 0.9153021678373554
  - 0.921954535106505
  train_jaccard_micro:
  - 0.9351851851851852
  - 0.9459459459459459
  - 0.9324796274738067
  - 0.9358600583090378
  - 0.9357101110461719
  train_jaccard_micro_oob:
  - 0.9240506329113924
  - 0.9255813953488372
  - 0.9168591224018475
  - 0.9146482122260668
  - 0.9211136890951276
  train_jaccard_samples:
  - 0.9521531100478469
  - 0.9597423510466988
  - 0.9505220883534137
  - 0.9527710843373494
  - 0.9533011272141707
  train_jaccard_samples_oob:
  - 0.9448165869218502
  - 0.9462157809983898
  - 0.9415261044176707
  - 0.939277108433735
  - 0.9442834138486313
  train_jaccard_weighted:
  - 0.9380272416151835
  - 0.950248147988708
  - 0.9340179779612173
  - 0.9381048660517153
  - 0.9351325394734227
  train_jaccard_weighted_oob:
  - 0.9217509842290302
  - 0.9219090624171556
  - 0.9090483755730513
  - 0.9065446862355596
  - 0.9123670587059206
  train_label_ranking_average_precision_score:
  - 0.9557416267942583
  - 0.9643719806763285
  - 0.9590361445783132
  - 0.9590361445783132
  - 0.9603462157809983
  train_label_ranking_average_precision_score_oob:
  - 0.9507575757575758
  - 0.9528985507246376
  - 0.9550200803212849
  - 0.9532128514056224
  - 0.9545088566827695
  train_matthews_corrcoef_macro:
  - 0.699810960185037
  - 0.7086989705604276
  - 0.6944679596050507
  - 0.6991903676602713
  - 0.6981227910584551
  train_matthews_corrcoef_macro_oob:
  - 0.6861461063251468
  - 0.6834535699421636
  - 0.67694963053904
  - 0.6739779398974997
  - 0.6817789602887738
  train_matthews_corrcoef_micro:
  - 0.9124491621175161
  - 0.927093111832112
  - 0.9082592799804559
  - 0.9131599585719317
  - 0.912539266147558
  train_matthews_corrcoef_micro_oob:
  - 0.8956396011594081
  - 0.8971494476688592
  - 0.8847259146113656
  - 0.881167499173144
  - 0.8907183801872145
  train_matthews_corrcoef_samples:
  - 0.9223612568990252
  - 0.9363196178291535
  - 0.9174111763343291
  - 0.9228184460592841
  - 0.9188797997632563
  train_matthews_corrcoef_samples_oob:
  - 0.8999335410673008
  - 0.8968248039134871
  - 0.8874925327150807
  - 0.8810668299038358
  - 0.892051693422122
  train_matthews_corrcoef_weighted:
  - 0.8995453063576091
  - 0.9138962348376609
  - 0.8963375034251424
  - 0.8984964083880257
  - 0.8977882427881105
  train_matthews_corrcoef_weighted_oob:
  - 0.8811027213296525
  - 0.8808103366341641
  - 0.8694895021980803
  - 0.8628881376387724
  - 0.8728984849129101
  train_ndgc:
  - 0.9673311025888611
  - 0.97366354989873
  - 0.96976291956971
  - 0.9697629195697097
  - 0.9706728723797515
  train_ndgc_oob:
  - 0.9633695840593213
  - 0.9651236638550739
  - 0.9668795153703789
  - 0.9654616255396287
  - 0.9662463298402041
  train_neg_coverage_error:
  - -1.0909090909090908
  - -1.0845410628019323
  - -1.091566265060241
  - -1.0891566265060242
  - -1.0942028985507246
  train_neg_coverage_error_oob:
  - -1.1267942583732058
  - -1.142512077294686
  - -1.1204819277108433
  - -1.1228915662650603
  - -1.1328502415458936
  train_neg_hamming_loss_macro:
  - -0.03349282296650718
  - -0.027777777777777776
  - -0.03493975903614458
  - -0.03313253012048193
  - -0.033212560386473425
  train_neg_hamming_loss_macro_oob:
  - -0.03947368421052632
  - -0.03864734299516909
  - -0.04337349397590362
  - -0.04457831325301205
  - -0.04106280193236715
  train_neg_hamming_loss_micro:
  - -0.03349282296650718
  - -0.027777777777777776
  - -0.03493975903614458
  - -0.03313253012048193
  - -0.03321256038647343
  train_neg_hamming_loss_micro_oob:
  - -0.039473684210526314
  - -0.03864734299516908
  - -0.043373493975903614
  - -0.04457831325301205
  - -0.04106280193236715
  train_neg_hamming_loss_samples:
  - -0.03349282296650718
  - -0.027777777777777776
  - -0.03493975903614458
  - -0.03313253012048193
  - -0.03321256038647343
  train_neg_hamming_loss_samples_oob:
  - -0.039473684210526314
  - -0.03864734299516908
  - -0.043373493975903614
  - -0.04457831325301205
  - -0.04106280193236715
  train_neg_hamming_loss_weighted:
  - -0.03320734032956115
  - -0.026107759517370505
  - -0.035172671593294416
  - -0.032789531331065894
  - -0.034232485033400366
  train_neg_hamming_loss_weighted_oob:
  - -0.04156056228660173
  - -0.04086632919584865
  - -0.048227276648359546
  - -0.04940335504698219
  - -0.04631555832928831
  train_neg_label_ranking_loss:
  - -0.029505582137161087
  - -0.024959742351046695
  - -0.027309236947791162
  - -0.027309236947791166
  - -0.02818035426731079
  train_neg_label_ranking_loss_oob:
  - -0.04146730462519936
  - -0.04367954911433172
  - -0.03634538152610441
  - -0.038152610441767064
  - -0.04066022544283414
  train_precision_macro:
  - 0.9665071770334928
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_precision_macro_oob:
  - 0.9605263157894737
  - 0.9613526570048309
  - 0.9566265060240964
  - 0.955421686746988
  - 0.9589371980676328
  train_precision_micro:
  - 0.9665071770334929
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_precision_micro_oob:
  - 0.9605263157894737
  - 0.961352657004831
  - 0.9566265060240964
  - 0.9554216867469879
  - 0.9589371980676329
  train_precision_samples:
  - 0.9665071770334929
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_precision_samples_oob:
  - 0.9605263157894737
  - 0.961352657004831
  - 0.9566265060240964
  - 0.9554216867469879
  - 0.9589371980676329
  train_precision_weighted:
  - 0.9667926596704387
  - 0.9738922404826295
  - 0.9648273284067055
  - 0.9672104686689342
  - 0.9657675149665996
  train_precision_weighted_oob:
  - 0.9584394377133982
  - 0.9591336708041512
  - 0.9517727233516404
  - 0.9505966449530179
  - 0.9536844416707116
  train_recall_macro:
  - 0.9665071770334928
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_recall_macro_oob:
  - 0.9605263157894737
  - 0.9613526570048309
  - 0.9566265060240964
  - 0.955421686746988
  - 0.9589371980676328
  train_recall_micro:
  - 0.9665071770334929
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_recall_micro_oob:
  - 0.9605263157894737
  - 0.961352657004831
  - 0.9566265060240964
  - 0.9554216867469879
  - 0.9589371980676329
  train_recall_samples:
  - 0.9665071770334929
  - 0.9722222222222222
  - 0.9650602409638555
  - 0.9668674698795181
  - 0.9667874396135265
  train_recall_samples_oob:
  - 0.9605263157894737
  - 0.961352657004831
  - 0.9566265060240964
  - 0.9554216867469879
  - 0.9589371980676329
  train_recall_weighted:
  - 0.9667926596704387
  - 0.9738922404826295
  - 0.9648273284067055
  - 0.9672104686689342
  - 0.9657675149665996
  train_recall_weighted_oob:
  - 0.9584394377133982
  - 0.9591336708041512
  - 0.9517727233516404
  - 0.9505966449530179
  - 0.9536844416707116
  train_roc_auc_macro:
  - 0.9847618590858057
  - 0.9852300090321632
  - 0.986963998621486
  - 0.985923496670973
  - 0.9862280827316259
  train_roc_auc_macro_oob:
  - 0.9613777380732523
  - 0.9596929989657325
  - 0.9788758655497609
  - 0.9648306818577769
  - 0.9646304369755301
  train_roc_auc_micro:
  - 0.9830897492795334
  - 0.9857174328095167
  - 0.9837512668780855
  - 0.985012212128917
  - 0.9843492745669431
  train_roc_auc_micro_oob:
  - 0.96689377474967
  - 0.9654868556322513
  - 0.9720257933493469
  - 0.9671697909684179
  - 0.9660801106894126
  train_roc_auc_samples:
  - 0.9704944178628389
  - 0.9750402576489532
  - 0.9726907630522087
  - 0.9726907630522087
  - 0.9718196457326892
  train_roc_auc_samples_oob:
  - 0.9585326953748006
  - 0.9563204508856682
  - 0.9636546184738954
  - 0.9618473895582328
  - 0.9593397745571658
  train_roc_auc_weighted:
  - 0.9800009997775896
  - 0.9808419027880992
  - 0.9827077337739698
  - 0.9817757928780984
  - 0.981659586961717
  train_roc_auc_weighted_oob:
  - 0.9730706657276735
  - 0.973834523390069
  - 0.9775777885294308
  - 0.97267583916676
  - 0.9725927574980284
start: 2023-12-21 19:49:37.763118
wrapper: null
