active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZP4BmZmZmZvY/wMzMzMzMDMCAZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzI8BgZmZmZmYSwEAzMzMzMwNA0MzMzMzMIEBAMzMzMzMLQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMDEDMzMzMzMwgwGBmZmZmZva/MDMzMzMzA8A0MzMzMzMhQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            cGZmZmZmDkCQmZmZmZkJwGRmZmZmZiTAnJmZmZmZI0AAmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AmJmZmZnpvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AM3MzMzM/D8AMzMzMzPzvwDNzMzMzPw/gJmZmZmZAcAAmJmZmZnJvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmBkCYmZmZmZkBwMzMzMzMzBTAaGZmZmZmBkDQzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmHsBwZmZmZmYxQEBmZmZmZh7AwJmZmZmZGUAgMzMzMzMhwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 22:57:22.303910
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: cc62acb58260d8eccaa1b1b2b5a2f2daccad34388e1ca783177da1b40869889f
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cc62acb_20231212T224646587054_embedding_proba__7_yeast.yml
results:
  fit_time:
  - 472.411257982254
  - 530.7677433490753
  - 507.58333563804626
  - 527.4959919452667
  - 524.8796110153198
  score_time:
  - 22.933090686798096
  - 22.164055347442627
  - 31.271528244018555
  - 23.099995136260986
  - 23.47977876663208
  test_average_precision_macro:
  - 0.49443818700654946
  - 0.5110351145710795
  - 0.47927292373403285
  - 0.5023821831581766
  - 0.45297145702594704
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6840083858732905
  - 0.7037755848758147
  - 0.6788660182254423
  - 0.7160265448113594
  - 0.6535721012204516
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7450533083747611
  - 0.7597826794286661
  - 0.7462174294063175
  - 0.7700256167879673
  - 0.7297984744948668
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6552749553993833
  - 0.6645222387359246
  - 0.6359776041341143
  - 0.6759917983204915
  - 0.6163898918347112
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7961885365144022
  - 0.79659717964439
  - 0.7906604597032295
  - 0.8086253369272238
  - 0.7820847851335657
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7961885365144021
  - 0.7965971796443899
  - 0.7906604597032295
  - 0.8086253369272237
  - 0.7820847851335656
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7961885365144021
  - 0.7965971796443898
  - 0.7906604597032295
  - 0.8086253369272236
  - 0.7820847851335656
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7372977656496646
  - 0.7505735957027561
  - 0.7424811658394795
  - 0.7581533222430422
  - 0.721731487585146
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6724161704867653
  - 0.6708707389163424
  - 0.6633547059772871
  - 0.6883726581274917
  - 0.6548180688160544
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6613897280966767
  - 0.6619538912240479
  - 0.6537952604354625
  - 0.6787330316742082
  - 0.642150435093575
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6898464986321955
  - 0.6917705685818932
  - 0.686260755230848
  - 0.707332498693695
  - 0.6690630932229447
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5885080763375602
  - 0.6044494154221008
  - 0.5947975207588693
  - 0.6146720741367532
  - 0.5693075947724883
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7450533083747609
  - 0.7597826794286661
  - 0.7462174294063173
  - 0.7700256167879669
  - 0.7297984744948667
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.235932348041805
  - 0.2619207151690472
  - 0.22304702890334796
  - 0.2720853049522513
  - 0.20589092721155525
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5077563965447258
  - 0.521208598892936
  - 0.49982303354631596
  - 0.5390419601158577
  - 0.4757380587994151
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5104397436673234
  - 0.5213645807089268
  - 0.5048861279154927
  - 0.5458050886801965
  - 0.48550543537922725
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.24238380419976205
  - 0.26736626121414925
  - 0.2475891769805916
  - 0.3068385402036478
  - 0.21202474437101798
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8412088772103136
  - 0.8554665234410407
  - 0.842321354213999
  - 0.8614788864414387
  - 0.8346029016258183
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.224032586558045
  - -7.6373390557939915
  - -7.395112016293279
  - -7.119496855345912
  - -7.439024390243903
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2038114634855979
  - -0.20340282035561003
  - -0.2093395402967704
  - -0.19137466307277623
  - -0.21791521486643436
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2038114634855979
  - -0.20340282035561005
  - -0.20933954029677043
  - -0.19137466307277629
  - -0.2179152148664344
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20381146348559787
  - -0.20340282035561003
  - -0.20933954029677043
  - -0.19137466307277626
  - -0.21791521486643436
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26270223435033535
  - -0.24942640429724405
  - -0.2575188341605204
  - -0.24184667775695773
  - -0.2782685124148538
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1781649754409428
  - -0.18384122902439887
  - -0.1901457310025829
  - -0.16634320847034234
  - -0.19019637850212762
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7961885365144022
  - 0.79659717964439
  - 0.7906604597032295
  - 0.8086253369272238
  - 0.7820847851335657
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7961885365144021
  - 0.7965971796443899
  - 0.7906604597032295
  - 0.8086253369272237
  - 0.7820847851335656
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7961885365144021
  - 0.7965971796443898
  - 0.7906604597032295
  - 0.8086253369272236
  - 0.7820847851335656
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7372977656496646
  - 0.7505735957027561
  - 0.7424811658394795
  - 0.7581533222430422
  - 0.721731487585146
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7961885365144022
  - 0.79659717964439
  - 0.7906604597032295
  - 0.8086253369272238
  - 0.7820847851335657
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7961885365144021
  - 0.7965971796443899
  - 0.7906604597032295
  - 0.8086253369272237
  - 0.7820847851335656
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7961885365144021
  - 0.7965971796443898
  - 0.7906604597032295
  - 0.8086253369272236
  - 0.7820847851335656
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7372977656496646
  - 0.7505735957027561
  - 0.7424811658394795
  - 0.7581533222430422
  - 0.721731487585146
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6882844859678803
  - 0.6974446868776776
  - 0.6778093084905331
  - 0.7096957002329224
  - 0.653408743696915
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8211526631329362
  - 0.8252128412126888
  - 0.8175596762678433
  - 0.8330054660775431
  - 0.8108819945209809
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8219014988745131
  - 0.8161587709756013
  - 0.8099264007014225
  - 0.8336567915296577
  - 0.8098036214978723
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.685865574419652
  - 0.6769263296654997
  - 0.6792902635629283
  - 0.7158654997159278
  - 0.6613128684721388
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.995057334189033
  - 0.9930377985775586
  - 0.9942316974172701
  - 0.9930975621327841
  - 0.9947793868021674
  train_average_precision_macro_oob:
  - 0.9710421459503269
  - 0.9638470581198082
  - 0.9542889899755413
  - 0.9642168127292863
  - 0.9655568204915735
  train_average_precision_micro:
  - 0.9981346216458417
  - 0.9983816008032
  - 0.9982549760343846
  - 0.997975513860371
  - 0.9980815211270897
  train_average_precision_micro_oob:
  - 0.9927612568832498
  - 0.9931426727108446
  - 0.992806585914356
  - 0.9920165296181511
  - 0.9920158265151094
  train_average_precision_samples:
  - 0.9977243250072301
  - 0.9977821114971935
  - 0.9972814619963597
  - 0.9977014772021829
  - 0.9970386245840328
  train_average_precision_samples_oob:
  - 0.9903832183635811
  - 0.9914420854243228
  - 0.9922662683724656
  - 0.9898045065689732
  - 0.9900860512337475
  train_average_precision_weighted:
  - 0.9976639770995532
  - 0.997702749146012
  - 0.9975965407421723
  - 0.9972467217437005
  - 0.9976592026015517
  train_average_precision_weighted_oob:
  - 0.9901104726976481
  - 0.9900064821744005
  - 0.9887803442797347
  - 0.9884659245730926
  - 0.9890418021579277
  train_f1_macro:
  - 0.9842011570983535
  - 0.9846964926411365
  - 0.9845349354695151
  - 0.9831737849779086
  - 0.98430426716141
  train_f1_macro_oob:
  - 0.9771547248182764
  - 0.9774840741011934
  - 0.9770434653612224
  - 0.9744477172312224
  - 0.9757699443413729
  train_f1_micro:
  - 0.9842011570983533
  - 0.9846964926411365
  - 0.9845349354695149
  - 0.9831737849779086
  - 0.9843042671614101
  train_f1_micro_oob:
  - 0.9771547248182763
  - 0.9774840741011935
  - 0.9770434653612223
  - 0.9744477172312224
  - 0.9757699443413729
  train_f1_samples:
  - 0.9842011570983534
  - 0.9846964926411363
  - 0.984534935469515
  - 0.9831737849779087
  - 0.98430426716141
  train_f1_samples_oob:
  - 0.9771547248182763
  - 0.9774840741011935
  - 0.9770434653612224
  - 0.9744477172312225
  - 0.9757699443413729
  train_f1_weighted:
  - 0.9852387913563185
  - 0.9868251862332553
  - 0.9868087074081816
  - 0.9852314280366646
  - 0.9860472065102824
  train_f1_weighted_oob:
  - 0.9788620515947044
  - 0.979859004629824
  - 0.9800151123915899
  - 0.9771120705357131
  - 0.9776346733938738
  train_jaccard_macro:
  - 0.9689373354937352
  - 0.9699400442769969
  - 0.9696023667640142
  - 0.9669881086029363
  - 0.9691663818660066
  train_jaccard_macro_oob:
  - 0.9554538578376289
  - 0.9561066177527924
  - 0.9552539982628236
  - 0.9503466732736936
  - 0.9528231378877392
  train_jaccard_micro:
  - 0.9688937568455641
  - 0.9698543199192269
  - 0.969540922537526
  - 0.9669044429155955
  - 0.9690936324115004
  train_jaccard_micro_oob:
  - 0.9553299492385787
  - 0.9559597550932722
  - 0.9551172823840771
  - 0.9501687369857112
  - 0.9526863022135276
  train_jaccard_samples:
  - 0.9717557719559012
  - 0.9728377851090979
  - 0.9723336998350742
  - 0.9699864351600652
  - 0.9719494904819984
  train_jaccard_samples_oob:
  - 0.9599685883717499
  - 0.9607107624943204
  - 0.9597339254515456
  - 0.9553548934495122
  - 0.9574948601450151
  train_jaccard_weighted:
  - 0.9709670512431908
  - 0.9741044501992283
  - 0.974038504916248
  - 0.9710081928333929
  - 0.972545408809069
  train_jaccard_weighted_oob:
  - 0.958765579504817
  - 0.9607075601115281
  - 0.9609903423258849
  - 0.9555363933732067
  - 0.9564007218384962
  train_label_ranking_average_precision_score:
  - 0.9977243250072297
  - 0.9977821114971939
  - 0.9972814619963596
  - 0.9977014772021829
  - 0.9970386245840329
  train_label_ranking_average_precision_score_oob:
  - 0.9903832183635812
  - 0.9914420854243233
  - 0.9922662683724661
  - 0.9898045065689729
  - 0.9900860512337475
  train_matthews_corrcoef_macro:
  - 0.9222719920804475
  - 0.9072238269927905
  - 0.8897383335881689
  - 0.9118826616126114
  - 0.9229045475318516
  train_matthews_corrcoef_macro_oob:
  - 0.8916856979293877
  - 0.8498386776162065
  - 0.8477749044141706
  - 0.8436506270665812
  - 0.889488427771629
  train_matthews_corrcoef_micro:
  - 0.962553050618592
  - 0.963409235083019
  - 0.9633080578677415
  - 0.959987395880929
  - 0.962839084088748
  train_matthews_corrcoef_micro_oob:
  - 0.945774263100678
  - 0.9460822436282534
  - 0.9454506101132986
  - 0.9391072996454546
  - 0.9425333585839482
  train_matthews_corrcoef_samples:
  - 0.9658875357087795
  - 0.9663126600957003
  - 0.9662889686281623
  - 0.9631445573915874
  - 0.9653381169247723
  train_matthews_corrcoef_samples_oob:
  - 0.9494124625273956
  - 0.9505153268687291
  - 0.9496196148428243
  - 0.943433383893382
  - 0.9465218605715683
  train_matthews_corrcoef_weighted:
  - 0.9587454856852802
  - 0.9621429605499612
  - 0.9610099025893521
  - 0.9580887184952015
  - 0.9599559320239555
  train_matthews_corrcoef_weighted_oob:
  - 0.9410782904103239
  - 0.9416074247455303
  - 0.9414116440593415
  - 0.9346073048723735
  - 0.9370596214680513
  train_ndgc:
  - 0.9990972110866211
  - 0.9990081308163158
  - 0.9986724998938679
  - 0.999049325603842
  - 0.9986239655966734
  train_ndgc_oob:
  - 0.9955928606696517
  - 0.9960380568906104
  - 0.9964017325709096
  - 0.9954235655137628
  - 0.9952174107854059
  train_neg_coverage_error:
  - -4.29595015576324
  - -4.2280881599179905
  - -4.288161993769471
  - -4.27319587628866
  - -4.314805194805195
  train_neg_coverage_error_oob:
  - -4.455867082035306
  - -4.373141978472578
  - -4.4179646936656285
  - -4.435567010309279
  - -4.4732467532467535
  train_neg_hamming_loss_macro:
  - -0.015798842901646643
  - -0.015303507358863586
  - -0.01546506453048509
  - -0.016826215022091313
  - -0.015695732838589983
  train_neg_hamming_loss_macro_oob:
  - -0.022845275181723784
  - -0.022515925898806473
  - -0.022956534638777625
  - -0.025552282768777614
  - -0.024230055658627087
  train_neg_hamming_loss_micro:
  - -0.01579884290164664
  - -0.015303507358863586
  - -0.01546506453048509
  - -0.01682621502209131
  - -0.015695732838589983
  train_neg_hamming_loss_micro_oob:
  - -0.02284527518172378
  - -0.022515925898806473
  - -0.02295653463877763
  - -0.025552282768777614
  - -0.024230055658627087
  train_neg_hamming_loss_samples:
  - -0.015798842901646636
  - -0.015303507358863586
  - -0.01546506453048509
  - -0.01682621502209131
  - -0.01569573283858998
  train_neg_hamming_loss_samples_oob:
  - -0.02284527518172378
  - -0.022515925898806473
  - -0.022956534638777625
  - -0.02555228276877761
  - -0.024230055658627084
  train_neg_hamming_loss_weighted:
  - -0.014761208643681514
  - -0.013174813766744502
  - -0.013191292591818312
  - -0.0147685719633353
  - -0.013952793489717693
  train_neg_hamming_loss_weighted_oob:
  - -0.021137948405295592
  - -0.020140995370175864
  - -0.019984887608410086
  - -0.022887929464286836
  - -0.02236532660612602
  train_neg_label_ranking_loss:
  - -0.0012895153026439186
  - -0.001263014055904149
  - -0.001321102005347666
  - -0.001344171394797315
  - -0.0016253327171694518
  train_neg_label_ranking_loss_oob:
  - -0.006632677966678857
  - -0.006050475177113531
  - -0.005504584176146259
  - -0.007078997749100841
  - -0.006965042893614323
  train_precision_macro:
  - 0.9842011570983535
  - 0.9846964926411365
  - 0.9845349354695151
  - 0.9831737849779086
  - 0.98430426716141
  train_precision_macro_oob:
  - 0.9771547248182764
  - 0.9774840741011934
  - 0.9770434653612224
  - 0.9744477172312224
  - 0.9757699443413729
  train_precision_micro:
  - 0.9842011570983533
  - 0.9846964926411365
  - 0.9845349354695149
  - 0.9831737849779086
  - 0.9843042671614101
  train_precision_micro_oob:
  - 0.9771547248182763
  - 0.9774840741011935
  - 0.9770434653612223
  - 0.9744477172312224
  - 0.9757699443413729
  train_precision_samples:
  - 0.9842011570983534
  - 0.9846964926411363
  - 0.984534935469515
  - 0.9831737849779087
  - 0.98430426716141
  train_precision_samples_oob:
  - 0.9771547248182763
  - 0.9774840741011935
  - 0.9770434653612224
  - 0.9744477172312225
  - 0.9757699443413729
  train_precision_weighted:
  - 0.9852387913563185
  - 0.9868251862332553
  - 0.9868087074081816
  - 0.9852314280366646
  - 0.9860472065102824
  train_precision_weighted_oob:
  - 0.9788620515947044
  - 0.979859004629824
  - 0.9800151123915899
  - 0.9771120705357131
  - 0.9776346733938738
  train_recall_macro:
  - 0.9842011570983535
  - 0.9846964926411365
  - 0.9845349354695151
  - 0.9831737849779086
  - 0.98430426716141
  train_recall_macro_oob:
  - 0.9771547248182764
  - 0.9774840741011934
  - 0.9770434653612224
  - 0.9744477172312224
  - 0.9757699443413729
  train_recall_micro:
  - 0.9842011570983533
  - 0.9846964926411365
  - 0.9845349354695149
  - 0.9831737849779086
  - 0.9843042671614101
  train_recall_micro_oob:
  - 0.9771547248182763
  - 0.9774840741011935
  - 0.9770434653612223
  - 0.9744477172312224
  - 0.9757699443413729
  train_recall_samples:
  - 0.9842011570983534
  - 0.9846964926411363
  - 0.984534935469515
  - 0.9831737849779087
  - 0.98430426716141
  train_recall_samples_oob:
  - 0.9771547248182763
  - 0.9774840741011935
  - 0.9770434653612224
  - 0.9744477172312225
  - 0.9757699443413729
  train_recall_weighted:
  - 0.9852387913563185
  - 0.9868251862332553
  - 0.9868087074081816
  - 0.9852314280366646
  - 0.9860472065102824
  train_recall_weighted_oob:
  - 0.9788620515947044
  - 0.979859004629824
  - 0.9800151123915899
  - 0.9771120705357131
  - 0.9776346733938738
  train_roc_auc_macro:
  - 0.9990121900537208
  - 0.999108952726029
  - 0.9990423462925915
  - 0.9988871809549714
  - 0.9990275834295161
  train_roc_auc_macro_oob:
  - 0.9934695199731058
  - 0.9921259152715393
  - 0.9897612522163153
  - 0.9917363563172231
  - 0.9921292871496111
  train_roc_auc_micro:
  - 0.9991750038069847
  - 0.9992943320807954
  - 0.9992227182989702
  - 0.9991059888154515
  - 0.9991440010011101
  train_roc_auc_micro_oob:
  - 0.996256211573899
  - 0.9963067199078353
  - 0.9959646526330745
  - 0.9957340395898042
  - 0.9956278770600694
  train_roc_auc_samples:
  - 0.9987104846973561
  - 0.998736985944096
  - 0.9986788979946524
  - 0.9986558286052027
  - 0.9983746672828306
  train_roc_auc_samples_oob:
  - 0.9933673220333211
  - 0.9939495248228865
  - 0.9944954158238538
  - 0.9929210022508991
  - 0.9930349571063857
  train_roc_auc_weighted:
  - 0.999155579415955
  - 0.9993330872444269
  - 0.9992643598715358
  - 0.9990926879381065
  - 0.9991961740817248
  train_roc_auc_weighted_oob:
  - 0.9958225145399212
  - 0.9962549770645114
  - 0.9958604526252937
  - 0.9954056326728595
  - 0.9952883980487629
start: 2023-12-12 22:46:46.587054
wrapper: null
