active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b+AMzMzMzMDQABnZmZmZvY/gMzMzMzMBMAAnJmZmZnZPw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 18:57:02.697517
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__3
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 896ed8c78df8622fc9ed1ddb39d4c75adc5e2956d922d4c84b967f88f551c028
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/896ed8c_20231212T185400467973_embedding_weak__3_scene.yml
results:
  fit_time:
  - 112.50156259536743
  - 102.77627277374268
  - 131.4381833076477
  - 121.583487033844
  - 125.8404176235199
  score_time:
  - 9.849596500396729
  - 13.15139389038086
  - 8.80355167388916
  - 9.427470207214355
  - 8.794081211090088
  test_average_precision_macro:
  - 0.8291178529767104
  - 0.8114756598702377
  - 0.8428440779008747
  - 0.8264911225539696
  - 0.83146216037006
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.828207228963063
  - 0.8216230530125103
  - 0.8472466188012936
  - 0.832729395872745
  - 0.8370750354429507
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8672532781228434
  - 0.8633263743910926
  - 0.8785069444444444
  - 0.8606404958677686
  - 0.8696812196812196
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8186118185011567
  - 0.7976443386613783
  - 0.8313880057353591
  - 0.816057687203261
  - 0.8202721114964034
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9033816425120773
  - 0.897355601948504
  - 0.9003472222222223
  - 0.9053030303030304
  - 0.8984753984753985
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9033816425120773
  - 0.8973556019485038
  - 0.9003472222222222
  - 0.9053030303030303
  - 0.8984753984753985
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9033816425120774
  - 0.897355601948504
  - 0.9003472222222224
  - 0.9053030303030304
  - 0.8984753984753985
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8977538033967266
  - 0.8913353077308993
  - 0.8951764990328821
  - 0.8995196380900617
  - 0.8921848786713651
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8276256170188195
  - 0.8185646661271696
  - 0.8224833985991399
  - 0.8311992707958354
  - 0.8204287878294446
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8237885462555066
  - 0.8138213947617545
  - 0.8187559204294285
  - 0.8269896193771626
  - 0.8156653035545769
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8412205461894902
  - 0.8308977035490603
  - 0.8339285714285712
  - 0.8429752066115701
  - 0.8326898326898325
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8185444697999553
  - 0.8089500450023749
  - 0.8142943715903964
  - 0.821935675183438
  - 0.810477747681454
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8672532781228431
  - 0.8633263743910923
  - 0.878506944444444
  - 0.8606404958677684
  - 0.8696812196812197
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6389677363210562
  - 0.6091597266534977
  - 0.6224073564864231
  - 0.6439175941662861
  - 0.6102304104611652
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6361021156403902
  - 0.6121663226730499
  - 0.6254586377416816
  - 0.643600219378033
  - 0.6169766434527645
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5268097528792411
  - 0.49442640808091376
  - 0.4929403922934206
  - 0.52292628974416
  - 0.49601704693681115
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6204522215667896
  - 0.5876786268019195
  - 0.6048147493095882
  - 0.6243743860474819
  - 0.5870663348054398
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.902212389280787
  - 0.8997364089700258
  - 0.9102771668053113
  - 0.8968180437099509
  - 0.9043582797631017
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4596273291925466
  - -1.4613778705636744
  - -1.4354166666666666
  - -1.4586776859504131
  - -1.4345114345114345
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0966183574879227
  - -0.10264439805149617
  - -0.09965277777777777
  - -0.09469696969696968
  - -0.10152460152460152
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0966183574879227
  - -0.10264439805149617
  - -0.09965277777777778
  - -0.0946969696969697
  - -0.10152460152460152
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09661835748792269
  - -0.10264439805149615
  - -0.09965277777777778
  - -0.09469696969696968
  - -0.10152460152460152
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10224619660327339
  - -0.10866469226910068
  - -0.104823500967118
  - -0.10048036190993814
  - -0.10781512132863486
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07536231884057973
  - -0.07416492693110649
  - -0.06953125
  - -0.07706611570247933
  - -0.0692827442827443
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9033816425120773
  - 0.897355601948504
  - 0.9003472222222223
  - 0.9053030303030304
  - 0.8984753984753985
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9033816425120773
  - 0.8973556019485038
  - 0.9003472222222222
  - 0.9053030303030303
  - 0.8984753984753985
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9033816425120774
  - 0.897355601948504
  - 0.9003472222222224
  - 0.9053030303030304
  - 0.8984753984753985
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8977538033967266
  - 0.8913353077308993
  - 0.8951764990328821
  - 0.8995196380900617
  - 0.8921848786713651
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9033816425120773
  - 0.897355601948504
  - 0.9003472222222223
  - 0.9053030303030304
  - 0.8984753984753985
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9033816425120773
  - 0.8973556019485038
  - 0.9003472222222222
  - 0.9053030303030303
  - 0.8984753984753985
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9033816425120774
  - 0.897355601948504
  - 0.9003472222222224
  - 0.9053030303030304
  - 0.8984753984753985
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8977538033967266
  - 0.8913353077308993
  - 0.8951764990328821
  - 0.8995196380900617
  - 0.8921848786713651
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9398505426298946
  - 0.9366627669725937
  - 0.9422132682718539
  - 0.9411794214153523
  - 0.9437662932159906
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9460769778801715
  - 0.9455383619017561
  - 0.9478402941544819
  - 0.9464013243884711
  - 0.9506707026766148
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9246376811594204
  - 0.9258350730688936
  - 0.93046875
  - 0.9229338842975207
  - 0.9307172557172558
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9343015456392483
  - 0.9303360150034347
  - 0.9367513339538521
  - 0.9365803540111194
  - 0.9385978142991382
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9771352323834819
  - 0.9720700578663112
  - 0.9741918211371782
  - 0.9767096110307231
  - 0.9773888896353035
  train_average_precision_macro_oob:
  - 0.8605500916020539
  - 0.8581316800639636
  - 0.8565416800996003
  - 0.8592491011427854
  - 0.8608047359734846
  train_average_precision_micro:
  - 0.9728823909168701
  - 0.9662404768680996
  - 0.968621013351982
  - 0.9723150132875669
  - 0.9726906281820561
  train_average_precision_micro_oob:
  - 0.866558727698299
  - 0.8596362394939677
  - 0.8603914806179996
  - 0.8643875427932614
  - 0.8644457574051422
  train_average_precision_samples:
  - 0.9772176022176021
  - 0.9695280082987552
  - 0.9758692267773742
  - 0.9736522794245104
  - 0.97533748701973
  train_average_precision_samples_oob:
  - 0.888231981981982
  - 0.8866787690179805
  - 0.8868361875108112
  - 0.8910383081989947
  - 0.8808930425752856
  train_average_precision_weighted:
  - 0.9771560255015238
  - 0.9724320894780454
  - 0.9745474934630491
  - 0.9769882627950228
  - 0.9775624402118311
  train_average_precision_weighted_oob:
  - 0.8522583446878512
  - 0.850495665814979
  - 0.848670300188326
  - 0.8510413664604451
  - 0.8525460804728184
  train_f1_macro:
  - 0.9536555786555786
  - 0.9519363762102352
  - 0.9507870610620999
  - 0.952764777257757
  - 0.9528383523710627
  train_f1_macro_oob:
  - 0.906878031878032
  - 0.9062067773167358
  - 0.9029579657498704
  - 0.905616224648986
  - 0.9047248182762201
  train_f1_micro:
  - 0.9536555786555787
  - 0.9519363762102351
  - 0.9507870610621
  - 0.952764777257757
  - 0.9528383523710626
  train_f1_micro_oob:
  - 0.9068780318780318
  - 0.9062067773167358
  - 0.9029579657498703
  - 0.905616224648986
  - 0.9047248182762202
  train_f1_samples:
  - 0.9536555786555787
  - 0.9519363762102352
  - 0.9507870610621
  - 0.952764777257757
  - 0.9528383523710626
  train_f1_samples_oob:
  - 0.906878031878032
  - 0.9062067773167358
  - 0.9029579657498703
  - 0.905616224648986
  - 0.9047248182762202
  train_f1_weighted:
  - 0.9520153150472299
  - 0.9502846805941892
  - 0.9490089926414716
  - 0.9509772267099582
  - 0.9510831586303283
  train_f1_weighted_oob:
  - 0.901636711477137
  - 0.901091543010936
  - 0.8977770840715114
  - 0.9002399941258771
  - 0.8992133215374267
  train_jaccard_macro:
  - 0.9117843096037813
  - 0.908674457011427
  - 0.9066846757997724
  - 0.9102619474037666
  - 0.9103952687989677
  train_jaccard_macro_oob:
  - 0.8329547452381348
  - 0.8316773778439375
  - 0.8264401347130037
  - 0.8309979636109118
  - 0.829653919012201
  train_jaccard_micro:
  - 0.9114165079890719
  - 0.9082810953480699
  - 0.9061907509685928
  - 0.9097906149135149
  - 0.9099247996033386
  train_jaccard_micro_oob:
  - 0.8296219985735795
  - 0.8284991701572749
  - 0.8230842005676443
  - 0.827512473271561
  - 0.8260251244370704
  train_jaccard_samples:
  - 0.923967923967924
  - 0.9214458605018769
  - 0.9194281760446783
  - 0.9223064160661665
  - 0.922143104386095
  train_jaccard_samples_oob:
  - 0.8454855954855954
  - 0.8443612922347362
  - 0.8390416882892232
  - 0.8433870688160858
  - 0.8411709439746823
  train_jaccard_weighted:
  - 0.9088155754859498
  - 0.9056772458111534
  - 0.9034601373588106
  - 0.9070284376913074
  - 0.9072064899290315
  train_jaccard_weighted_oob:
  - 0.8244774417873714
  - 0.8234690230846681
  - 0.8181210279343587
  - 0.822368219475555
  - 0.8208455112747283
  train_label_ranking_average_precision_score:
  - 0.977217602217602
  - 0.969528008298755
  - 0.9758692267773741
  - 0.9736522794245102
  - 0.9753374870197298
  train_label_ranking_average_precision_score_oob:
  - 0.8882319819819817
  - 0.8866787690179805
  - 0.8868361875108111
  - 0.8910383081989944
  - 0.8808930425752854
  train_matthews_corrcoef_macro:
  - 0.839273851628597
  - 0.832932144446216
  - 0.8287821755468864
  - 0.8364941180043991
  - 0.8364388062529652
  train_matthews_corrcoef_macro_oob:
  - 0.6557467843159875
  - 0.6530222399048793
  - 0.6371508199143957
  - 0.6498913433446121
  - 0.6448320329475328
  train_matthews_corrcoef_micro:
  - 0.8363533854043488
  - 0.8297402216174652
  - 0.8254866834154604
  - 0.833127311710949
  - 0.8331223161459139
  train_matthews_corrcoef_micro_oob:
  - 0.6530144186957991
  - 0.6493602138657908
  - 0.6355159393427695
  - 0.6478197328988208
  - 0.6434302447334681
  train_matthews_corrcoef_samples:
  - 0.7948267759380021
  - 0.7865849356568969
  - 0.7811179353257304
  - 0.7900632361401555
  - 0.788060087101291
  train_matthews_corrcoef_samples_oob:
  - 0.5290541786215911
  - 0.5248781902136975
  - 0.507810875127084
  - 0.522084895391814
  - 0.5109429448028181
  train_matthews_corrcoef_weighted:
  - 0.8354971200691813
  - 0.8291170536105911
  - 0.8245511038654466
  - 0.8322146575069136
  - 0.8322009469355118
  train_matthews_corrcoef_weighted_oob:
  - 0.6387212953706546
  - 0.6367829729900734
  - 0.6204462583788504
  - 0.6322101956893095
  - 0.6264068235285861
  train_ndgc:
  - 0.9833426213334272
  - 0.977678374509692
  - 0.9823131526337308
  - 0.9806676620354502
  - 0.9818479885312269
  train_ndgc_oob:
  - 0.9176589598049695
  - 0.9164577162812859
  - 0.9165958112196887
  - 0.919699110276236
  - 0.9121092587489534
  train_neg_coverage_error:
  - -1.1252598752598753
  - -1.141597510373444
  - -1.1271406331084588
  - -1.1326053042121684
  - -1.1272066458982346
  train_neg_coverage_error_oob:
  - -1.4017671517671517
  - -1.4024896265560165
  - -1.4063310845874417
  - -1.391575663026521
  - -1.428348909657321
  train_neg_hamming_loss_macro:
  - -0.04634442134442135
  - -0.04806362378976487
  - -0.04921293893790002
  - -0.04723522274224302
  - -0.04716164762893735
  train_neg_hamming_loss_macro_oob:
  - -0.09312196812196812
  - -0.09379322268326418
  - -0.09704203425012974
  - -0.09438377535101404
  - -0.09527518172377984
  train_neg_hamming_loss_micro:
  - -0.04634442134442134
  - -0.04806362378976487
  - -0.04921293893790002
  - -0.047235222742243024
  - -0.04716164762893735
  train_neg_hamming_loss_micro_oob:
  - -0.09312196812196812
  - -0.09379322268326418
  - -0.09704203425012974
  - -0.09438377535101404
  - -0.09527518172377986
  train_neg_hamming_loss_samples:
  - -0.04634442134442134
  - -0.048063623789764864
  - -0.04921293893790001
  - -0.04723522274224302
  - -0.04716164762893734
  train_neg_hamming_loss_samples_oob:
  - -0.0931219681219681
  - -0.09379322268326416
  - -0.09704203425012974
  - -0.09438377535101404
  - -0.09527518172377986
  train_neg_hamming_loss_weighted:
  - -0.04798468495277006
  - -0.04971531940581073
  - -0.050991007358528254
  - -0.04902277329004186
  - -0.04891684136967156
  train_neg_hamming_loss_weighted_oob:
  - -0.098363288522863
  - -0.098908456989064
  - -0.10222291592848846
  - -0.09976000587412277
  - -0.10078667846257336
  train_neg_label_ranking_loss:
  - -0.009875259875259876
  - -0.013433609958506223
  - -0.010651271406331084
  - -0.011362454498179927
  - -0.010669781931464175
  train_neg_label_ranking_loss_oob:
  - -0.06355249480249481
  - -0.06423755186721992
  - -0.06459522573949143
  - -0.061427457098283934
  - -0.06889927310488059
  train_precision_macro:
  - 0.9536555786555786
  - 0.9519363762102352
  - 0.9507870610620999
  - 0.952764777257757
  - 0.9528383523710627
  train_precision_macro_oob:
  - 0.906878031878032
  - 0.9062067773167358
  - 0.9029579657498704
  - 0.905616224648986
  - 0.9047248182762201
  train_precision_micro:
  - 0.9536555786555787
  - 0.9519363762102351
  - 0.9507870610621
  - 0.952764777257757
  - 0.9528383523710626
  train_precision_micro_oob:
  - 0.9068780318780318
  - 0.9062067773167358
  - 0.9029579657498703
  - 0.905616224648986
  - 0.9047248182762202
  train_precision_samples:
  - 0.9536555786555787
  - 0.9519363762102352
  - 0.9507870610621
  - 0.952764777257757
  - 0.9528383523710626
  train_precision_samples_oob:
  - 0.906878031878032
  - 0.9062067773167358
  - 0.9029579657498703
  - 0.905616224648986
  - 0.9047248182762202
  train_precision_weighted:
  - 0.9520153150472299
  - 0.9502846805941892
  - 0.9490089926414716
  - 0.9509772267099582
  - 0.9510831586303283
  train_precision_weighted_oob:
  - 0.901636711477137
  - 0.901091543010936
  - 0.8977770840715114
  - 0.9002399941258771
  - 0.8992133215374267
  train_recall_macro:
  - 0.9536555786555786
  - 0.9519363762102352
  - 0.9507870610620999
  - 0.952764777257757
  - 0.9528383523710627
  train_recall_macro_oob:
  - 0.906878031878032
  - 0.9062067773167358
  - 0.9029579657498704
  - 0.905616224648986
  - 0.9047248182762201
  train_recall_micro:
  - 0.9536555786555787
  - 0.9519363762102351
  - 0.9507870610621
  - 0.952764777257757
  - 0.9528383523710626
  train_recall_micro_oob:
  - 0.9068780318780318
  - 0.9062067773167358
  - 0.9029579657498703
  - 0.905616224648986
  - 0.9047248182762202
  train_recall_samples:
  - 0.9536555786555787
  - 0.9519363762102352
  - 0.9507870610621
  - 0.952764777257757
  - 0.9528383523710626
  train_recall_samples_oob:
  - 0.906878031878032
  - 0.9062067773167358
  - 0.9029579657498703
  - 0.905616224648986
  - 0.9047248182762202
  train_recall_weighted:
  - 0.9520153150472299
  - 0.9502846805941892
  - 0.9490089926414716
  - 0.9509772267099582
  - 0.9510831586303283
  train_recall_weighted_oob:
  - 0.901636711477137
  - 0.901091543010936
  - 0.8977770840715114
  - 0.9002399941258771
  - 0.8992133215374267
  train_roc_auc_macro:
  - 0.9958096395112039
  - 0.9949762874482863
  - 0.9956112651012896
  - 0.9958199350087594
  - 0.9958282688150057
  train_roc_auc_macro_oob:
  - 0.9529269873994671
  - 0.9520607076617731
  - 0.9518414113469973
  - 0.9521168350275399
  - 0.9518150283792663
  train_roc_auc_micro:
  - 0.9953191070916815
  - 0.9943448551044345
  - 0.9948772491554271
  - 0.9953038353836506
  - 0.9953337612981251
  train_roc_auc_micro_oob:
  - 0.9576565922828149
  - 0.9563862920423412
  - 0.9566986010506892
  - 0.957254252970288
  - 0.9566397840128893
  train_roc_auc_samples:
  - 0.9901247401247402
  - 0.9865663900414937
  - 0.9893487285936688
  - 0.9886375455018201
  - 0.9893302180685358
  train_roc_auc_samples_oob:
  - 0.9364475051975052
  - 0.9357624481327801
  - 0.9354047742605086
  - 0.9385725429017161
  - 0.9311007268951195
  train_roc_auc_weighted:
  - 0.9957693738704091
  - 0.9949877359851168
  - 0.9956464665835212
  - 0.9958353703038637
  - 0.995808927121141
  train_roc_auc_weighted_oob:
  - 0.9493282010170631
  - 0.9485159259561854
  - 0.9481371836086591
  - 0.9483117073492856
  - 0.9481170302550845
start: 2023-12-12 18:54:00.467973
wrapper: null
