active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZEUAwMzMzMzMvwEAzMzMzMwtAoJmZmZmZEUBAMzMzMzMLQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzMBMBgZmZmZmYewKCZmZmZmRFAoJmZmZmZEUCAZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmFkBgZmZmZmb2v4CZmZmZmdm/MDMzMzMzA8BgZmZmZmb2vw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZCcCQmZmZmZkJwJCZmZmZmQHAODMzMzMzE0BwZmZmZmYOQA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz87+AmZmZmZkBwIBmZmZmZgZAAJqZmZmZ6T8AmJmZmZnJvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmBkDQzMzMzMz8P8zMzMzMzBTA0MzMzMzM/D8wMzMzMzPzvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzI8CAzMzMzMwEwMCZmZmZmR1AADIzMzMz47/AmZmZmZkVQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 01:23:38.667435
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__3
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 38b18d6160757749d88726ac01e8ff1e254e1c0c4bf64a0719482b4d2aa0194f
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/38b18d6_20231213T011935830024_embedding_proba_weak__3_yeast.yml
results:
  fit_time:
  - 103.78328561782837
  - 175.8653428554535
  - 179.53194665908813
  - 179.69353532791138
  - 178.44266819953918
  score_time:
  - 15.525362730026245
  - 11.567289113998413
  - 11.43770694732666
  - 11.374375820159912
  - 12.025805950164795
  test_average_precision_macro:
  - 0.5035856945582969
  - 0.4830479946489677
  - 0.5106408738241869
  - 0.5006640216699002
  - 0.5392447232586827
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7087693483086317
  - 0.690910659456649
  - 0.7009498948364506
  - 0.7141811171107972
  - 0.7268033514046431
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7575657325398343
  - 0.7476006738637176
  - 0.7600239170551671
  - 0.7526519736741195
  - 0.7747266983586469
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6692005170313378
  - 0.6496160359213977
  - 0.6616433273082833
  - 0.6751574247493465
  - 0.6967743406535469
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8013619240799769
  - 0.7905643738977073
  - 0.7963685474189678
  - 0.8009149940968123
  - 0.8046921697549312
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8013619240799769
  - 0.7905643738977073
  - 0.7963685474189676
  - 0.8009149940968123
  - 0.8046921697549313
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8013619240799768
  - 0.7905643738977073
  - 0.7963685474189676
  - 0.8009149940968124
  - 0.8046921697549312
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7526983247600524
  - 0.7351659755146014
  - 0.7457397342498644
  - 0.7506006268471054
  - 0.7634979734863612
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6766254753901035
  - 0.664472119734172
  - 0.6703402499632691
  - 0.6762841448099849
  - 0.6797955745828315
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6685603771304243
  - 0.6536638716733504
  - 0.66163819972572
  - 0.6679384615384616
  - 0.673209151143893
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6980615436943592
  - 0.6845034447649075
  - 0.6900496018106456
  - 0.6988447898642923
  - 0.6978937477511705
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6072770744378709
  - 0.5855420338404468
  - 0.598689289374945
  - 0.6052156939023369
  - 0.6204841052492215
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7575657325398338
  - 0.7476006738637178
  - 0.760023917055167
  - 0.752651973674119
  - 0.774726698358647
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.26462746239041757
  - 0.22607046618324692
  - 0.2440699285046399
  - 0.2642604393036431
  - 0.2883141933128402
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5188272767234878
  - 0.4942232756723988
  - 0.5114190906437127
  - 0.5129186109692228
  - 0.5313829781751193
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.516937580799781
  - 0.5016109965737182
  - 0.5145496770894921
  - 0.5124289091977234
  - 0.5354074519667887
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2758505946722209
  - 0.2377077721412976
  - 0.2500345677812491
  - 0.28763866241288333
  - 0.3052565223587401
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8473694867631997
  - 0.8460084355527961
  - 0.8548947198867376
  - 0.848327023039612
  - 0.8644777829532859
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -6.9979716024340775
  - -7.397119341563786
  - -7.329831932773109
  - -7.169421487603306
  - -7.094142259414226
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19863807592002322
  - -0.20943562610229277
  - -0.20363145258103238
  - -0.1990850059031877
  - -0.19530783024506876
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1986380759200232
  - -0.20943562610229277
  - -0.2036314525810324
  - -0.19908500590318773
  - -0.19530783024506873
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1986380759200232
  - -0.20943562610229274
  - -0.20363145258103238
  - -0.1990850059031877
  - -0.19530783024506873
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.24730167523994764
  - -0.26483402448539867
  - -0.2542602657501357
  - -0.2493993731528946
  - -0.23650202651363875
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17033517490269157
  - -0.18409992907347406
  - -0.17573685859625238
  - -0.17588098516005837
  - -0.15779090322575076
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8013619240799769
  - 0.7905643738977073
  - 0.7963685474189678
  - 0.8009149940968123
  - 0.8046921697549312
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8013619240799769
  - 0.7905643738977073
  - 0.7963685474189676
  - 0.8009149940968123
  - 0.8046921697549313
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8013619240799768
  - 0.7905643738977073
  - 0.7963685474189676
  - 0.8009149940968124
  - 0.8046921697549312
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7526983247600524
  - 0.7351659755146014
  - 0.7457397342498644
  - 0.7506006268471054
  - 0.7634979734863612
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8013619240799769
  - 0.7905643738977073
  - 0.7963685474189678
  - 0.8009149940968123
  - 0.8046921697549312
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8013619240799769
  - 0.7905643738977073
  - 0.7963685474189676
  - 0.8009149940968123
  - 0.8046921697549313
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8013619240799768
  - 0.7905643738977073
  - 0.7963685474189676
  - 0.8009149940968124
  - 0.8046921697549312
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7526983247600524
  - 0.7351659755146014
  - 0.7457397342498644
  - 0.7506006268471054
  - 0.7634979734863612
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7085881601177614
  - 0.6988648419869001
  - 0.70542648538253
  - 0.698501353330214
  - 0.7315214007529447
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8399360245763622
  - 0.8271122783593879
  - 0.8324353402631289
  - 0.8350600605505676
  - 0.848045679958753
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8296648250973085
  - 0.8159000709265259
  - 0.8242631414037476
  - 0.8241448412862227
  - 0.8422090967742493
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7166100039441459
  - 0.6887928056993247
  - 0.6934773375345991
  - 0.7168747072343845
  - 0.7345565591343387
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9263159419015524
  - 0.9266408311164224
  - 0.9310680526024323
  - 0.9116888873274543
  - 0.9208705096977113
  train_average_precision_macro_oob:
  - 0.9081584772188033
  - 0.9046155993129077
  - 0.9067558711115338
  - 0.8928862246199181
  - 0.9053270972142516
  train_average_precision_micro:
  - 0.9860281091381187
  - 0.9914357319016691
  - 0.9886533696207302
  - 0.9835452247435212
  - 0.9870028694114612
  train_average_precision_micro_oob:
  - 0.9733542881320714
  - 0.9779853013383222
  - 0.9741723506840452
  - 0.9701911377002135
  - 0.974669249136282
  train_average_precision_samples:
  - 0.9918209991945112
  - 0.9918657082013566
  - 0.9914786721715678
  - 0.9915352270317411
  - 0.9926108939246694
  train_average_precision_samples_oob:
  - 0.9775003340015932
  - 0.9769197783422001
  - 0.9755925497670865
  - 0.9742760437084427
  - 0.9783574257938652
  train_average_precision_weighted:
  - 0.9843194318101326
  - 0.9870147166393201
  - 0.9870149492938606
  - 0.9800311882199868
  - 0.9866885237037094
  train_average_precision_weighted_oob:
  - 0.970804832425146
  - 0.9735054203716419
  - 0.9725677298183895
  - 0.9664550846570875
  - 0.9740693298506881
  train_f1_macro:
  - 0.968926343926344
  - 0.9702596730043649
  - 0.9676161036284684
  - 0.9658192299164882
  - 0.9676932144699035
  train_f1_macro_oob:
  - 0.9514775764775764
  - 0.9533550344011247
  - 0.9519761536763081
  - 0.9490798906215356
  - 0.9507109703087011
  train_f1_micro:
  - 0.9689263439263439
  - 0.9702596730043649
  - 0.9676161036284684
  - 0.965819229916488
  - 0.9676932144699035
  train_f1_micro_oob:
  - 0.9514775764775765
  - 0.9533550344011245
  - 0.9519761536763083
  - 0.9490798906215357
  - 0.9507109703087011
  train_f1_samples:
  - 0.9689263439263439
  - 0.9702596730043649
  - 0.9676161036284685
  - 0.9658192299164882
  - 0.9676932144699035
  train_f1_samples_oob:
  - 0.9514775764775765
  - 0.9533550344011246
  - 0.9519761536763082
  - 0.9490798906215357
  - 0.9507109703087012
  train_f1_weighted:
  - 0.9749309450761023
  - 0.9725605673069927
  - 0.9745787293412345
  - 0.9728233795098773
  - 0.9752472992758772
  train_f1_weighted_oob:
  - 0.9567493770348126
  - 0.9560629415432699
  - 0.9574893794157109
  - 0.9559671510211986
  - 0.9586448021071065
  train_jaccard_macro:
  - 0.9400864082449417
  - 0.9424135021305599
  - 0.9376831271958476
  - 0.93445303653722
  - 0.9379864208388434
  train_jaccard_macro_oob:
  - 0.9078587694134983
  - 0.9112662682047656
  - 0.9088017506402473
  - 0.9036805478712272
  - 0.9065497606504529
  train_jaccard_micro:
  - 0.9397256328088431
  - 0.9422372296860406
  - 0.9372638482925786
  - 0.9338978811591095
  - 0.9374085572565393
  train_jaccard_micro_oob:
  - 0.9074460928371632
  - 0.910867644460152
  - 0.9083535236490046
  - 0.9030942334739803
  - 0.9060525207133829
  train_jaccard_samples:
  - 0.9452921723819557
  - 0.9478434792925594
  - 0.9429393191335664
  - 0.9393822927016171
  - 0.9428432339431434
  train_jaccard_samples_oob:
  - 0.9163435702909387
  - 0.9199808156066082
  - 0.9176080600628767
  - 0.9116174170451438
  - 0.9150804117961076
  train_jaccard_weighted:
  - 0.9513317990043703
  - 0.9468409950114697
  - 0.9506979571149331
  - 0.9474081631474032
  - 0.951948612497948
  train_jaccard_weighted_oob:
  - 0.917750950298386
  - 0.9164095047628105
  - 0.9192110420511458
  - 0.9164318379393047
  - 0.9212798433973131
  train_label_ranking_average_precision_score:
  - 0.9918209991945114
  - 0.991865708201357
  - 0.9914786721715684
  - 0.9915352270317415
  - 0.9926108939246693
  train_label_ranking_average_precision_score_oob:
  - 0.9775003340015931
  - 0.9769197783422002
  - 0.9755925497670864
  - 0.9742760437084429
  - 0.9783574257938655
  train_matthews_corrcoef_macro:
  - 0.8601044186958758
  - 0.8593094909498823
  - 0.839709498578494
  - 0.8435533736813926
  - 0.8506770329769122
  train_matthews_corrcoef_macro_oob:
  - 0.7893105657123545
  - 0.7812944192898398
  - 0.7698788014584323
  - 0.78030624239935
  - 0.7833097565198057
  train_matthews_corrcoef_micro:
  - 0.9262234950774262
  - 0.9290362866824711
  - 0.9226862824983841
  - 0.9187441515126851
  - 0.922962321804583
  train_matthews_corrcoef_micro_oob:
  - 0.8842777962166607
  - 0.8882789711526606
  - 0.8848665793475592
  - 0.8782909326848242
  - 0.8818853128288046
  train_matthews_corrcoef_samples:
  - 0.931809336443401
  - 0.9316158237616103
  - 0.9261181301723848
  - 0.9226776752373291
  - 0.9273874096612689
  train_matthews_corrcoef_samples_oob:
  - 0.8914360255297186
  - 0.8911628206231237
  - 0.8859645863260264
  - 0.8816762667612928
  - 0.8876800175074526
  train_matthews_corrcoef_weighted:
  - 0.9300891429267052
  - 0.9245904974354348
  - 0.926875128089236
  - 0.9241568069922147
  - 0.9299954087002301
  train_matthews_corrcoef_weighted_oob:
  - 0.8797383610778509
  - 0.8766247439507368
  - 0.8785815831037402
  - 0.8780067646755293
  - 0.8830617224045745
  train_ndgc:
  - 0.9957949689752242
  - 0.9958481992736492
  - 0.995606149945907
  - 0.995979237637141
  - 0.9962116461296009
  train_ndgc_oob:
  - 0.9883300956249124
  - 0.9881189826566874
  - 0.9870830983451773
  - 0.9865872223397226
  - 0.9887819464674373
  train_neg_coverage_error:
  - -4.365384615384615
  - -4.3329880890730195
  - -4.325090159711489
  - -4.366270046559752
  - -4.323878287777204
  train_neg_coverage_error_oob:
  - -4.600831600831601
  - -4.5784567581563955
  - -4.588356517259145
  - -4.626487325400931
  - -4.560598246518824
  train_neg_hamming_loss_macro:
  - -0.031073656073656076
  - -0.02974032699563513
  - -0.03238389637153161
  - -0.03418077008351193
  - -0.03230678553009651
  train_neg_hamming_loss_macro_oob:
  - -0.04852242352242352
  - -0.04664496559887549
  - -0.04802384632369176
  - -0.050920109378464265
  - -0.0492890296912989
  train_neg_hamming_loss_micro:
  - -0.031073656073656072
  - -0.029740326995635127
  - -0.03238389637153161
  - -0.03418077008351193
  - -0.03230678553009651
  train_neg_hamming_loss_micro_oob:
  - -0.04852242352242352
  - -0.04664496559887549
  - -0.04802384632369176
  - -0.050920109378464265
  - -0.049289029691298905
  train_neg_hamming_loss_samples:
  - -0.03107365607365607
  - -0.029740326995635124
  - -0.032383896371531606
  - -0.03418077008351193
  - -0.03230678553009651
  train_neg_hamming_loss_samples_oob:
  - -0.048522423522423516
  - -0.04664496559887548
  - -0.04802384632369176
  - -0.05092010937846426
  - -0.04928902969129889
  train_neg_hamming_loss_weighted:
  - -0.02506905492389757
  - -0.02743943269300737
  - -0.025421270658765656
  - -0.027176620490122823
  - -0.02475270072412283
  train_neg_hamming_loss_weighted_oob:
  - -0.0432506229651875
  - -0.04393705845673023
  - -0.0425106205842891
  - -0.04403284897880155
  - -0.04135519789289353
  train_neg_label_ranking_loss:
  - -0.004098638301935005
  - -0.00421561219722794
  - -0.004079895187203644
  - -0.004406170058191343
  - -0.0037412615831167364
  train_neg_label_ranking_loss_oob:
  - -0.013337052657107601
  - -0.013914149482322892
  - -0.01458663706124514
  - -0.014761276874202749
  - -0.01271168652642903
  train_precision_macro:
  - 0.968926343926344
  - 0.9702596730043649
  - 0.9676161036284684
  - 0.9658192299164882
  - 0.9676932144699035
  train_precision_macro_oob:
  - 0.9514775764775764
  - 0.9533550344011247
  - 0.9519761536763081
  - 0.9490798906215356
  - 0.9507109703087011
  train_precision_micro:
  - 0.9689263439263439
  - 0.9702596730043649
  - 0.9676161036284684
  - 0.965819229916488
  - 0.9676932144699035
  train_precision_micro_oob:
  - 0.9514775764775765
  - 0.9533550344011245
  - 0.9519761536763083
  - 0.9490798906215357
  - 0.9507109703087011
  train_precision_samples:
  - 0.9689263439263439
  - 0.9702596730043649
  - 0.9676161036284685
  - 0.9658192299164882
  - 0.9676932144699035
  train_precision_samples_oob:
  - 0.9514775764775765
  - 0.9533550344011246
  - 0.9519761536763082
  - 0.9490798906215357
  - 0.9507109703087012
  train_precision_weighted:
  - 0.9749309450761023
  - 0.9725605673069927
  - 0.9745787293412345
  - 0.9728233795098773
  - 0.9752472992758772
  train_precision_weighted_oob:
  - 0.9567493770348126
  - 0.9560629415432699
  - 0.9574893794157109
  - 0.9559671510211986
  - 0.9586448021071065
  train_recall_macro:
  - 0.968926343926344
  - 0.9702596730043649
  - 0.9676161036284684
  - 0.9658192299164882
  - 0.9676932144699035
  train_recall_macro_oob:
  - 0.9514775764775764
  - 0.9533550344011247
  - 0.9519761536763081
  - 0.9490798906215356
  - 0.9507109703087011
  train_recall_micro:
  - 0.9689263439263439
  - 0.9702596730043649
  - 0.9676161036284684
  - 0.965819229916488
  - 0.9676932144699035
  train_recall_micro_oob:
  - 0.9514775764775765
  - 0.9533550344011245
  - 0.9519761536763083
  - 0.9490798906215357
  - 0.9507109703087011
  train_recall_samples:
  - 0.9689263439263439
  - 0.9702596730043649
  - 0.9676161036284685
  - 0.9658192299164882
  - 0.9676932144699035
  train_recall_samples_oob:
  - 0.9514775764775765
  - 0.9533550344011246
  - 0.9519761536763082
  - 0.9490798906215357
  - 0.9507109703087012
  train_recall_weighted:
  - 0.9749309450761023
  - 0.9725605673069927
  - 0.9745787293412345
  - 0.9728233795098773
  - 0.9752472992758772
  train_recall_weighted_oob:
  - 0.9567493770348126
  - 0.9560629415432699
  - 0.9574893794157109
  - 0.9559671510211986
  - 0.9586448021071065
  train_roc_auc_macro:
  - 0.9923700612947891
  - 0.994248088169755
  - 0.9927950577078481
  - 0.9904569603742558
  - 0.9921814206209439
  train_roc_auc_macro_oob:
  - 0.9830651994261007
  - 0.9831194637666323
  - 0.9808058968117115
  - 0.9796548306553746
  - 0.9832951539235922
  train_roc_auc_micro:
  - 0.9955220719157308
  - 0.9965382222386591
  - 0.9960198957704005
  - 0.9944833087988526
  - 0.995305367785889
  train_roc_auc_micro_oob:
  - 0.9881268534916751
  - 0.9888033399398236
  - 0.987415302095885
  - 0.9864159957163395
  - 0.9881168723450727
  train_roc_auc_samples:
  - 0.995901361698065
  - 0.9957843878027719
  - 0.9959201048127964
  - 0.9955938299418087
  - 0.9962587384168833
  train_roc_auc_samples_oob:
  - 0.9866629473428925
  - 0.9860858505176772
  - 0.9854133629387548
  - 0.9852387231257972
  - 0.987288313473571
  train_roc_auc_weighted:
  - 0.9941348290439728
  - 0.996722063871608
  - 0.9956626048479861
  - 0.9946869648558687
  - 0.9958231249780874
  train_roc_auc_weighted_oob:
  - 0.9857980334705195
  - 0.9876713407033635
  - 0.9858170834374564
  - 0.985297544537316
  - 0.9873786835149356
start: 2023-12-13 01:19:35.830024
wrapper: null
