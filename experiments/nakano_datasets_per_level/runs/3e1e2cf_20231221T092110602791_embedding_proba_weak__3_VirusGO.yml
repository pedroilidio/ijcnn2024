active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b+AZmZmZmb2PwCamZmZmdk/QDMzMzMzC0DAzMzMzMwMwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:21:32.183573
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__3
  params: {}
hash: 3e1e2cf79563e72010bb55a7c9d03b88cbc8c47f2a81c4ce008de6a75535c039
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3e1e2cf_20231221T092110602791_embedding_proba_weak__3_VirusGO.yml
results:
  fit_time:
  - 13.543837785720825
  - 13.310364484786987
  - 13.649113178253174
  - 13.972658157348633
  - 13.517355918884277
  score_time:
  - 2.3906595706939697
  - 2.245220899581909
  - 2.416849374771118
  - 2.2391390800476074
  - 2.222562313079834
  test_average_precision_macro:
  - 0.983421702014139
  - 0.8371108868748945
  - 0.958325479458925
  - 0.9581692201453231
  - 0.9592668270110325
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.937049072821795
  - 0.8877574745337045
  - 0.873023947387881
  - 0.9033060564044596
  - 0.9144306687946888
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9399224806201552
  - 0.9395833333333334
  - 0.934959349593496
  - 0.9592105263157895
  - 0.948888888888889
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9843095238095239
  - 0.9093179312879732
  - 0.9320571213828363
  - 0.9470795700758935
  - 0.9364861696875272
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8643410852713177
  - 0.875
  - 0.8252032520325202
  - 0.837719298245614
  - 0.8703703703703703
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8643410852713178
  - 0.875
  - 0.8252032520325203
  - 0.8377192982456141
  - 0.8703703703703703
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8643410852713178
  - 0.875
  - 0.8252032520325204
  - 0.837719298245614
  - 0.8703703703703705
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8116279069767443
  - 0.846078431372549
  - 0.7479674796747968
  - 0.7620614035087719
  - 0.8290598290598291
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7688311708378458
  - 0.7830729656816614
  - 0.7168272188621025
  - 0.7337092750109021
  - 0.7754109281464904
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7610921501706485
  - 0.7777777777777778
  - 0.7024221453287197
  - 0.720754716981132
  - 0.7704918032786885
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.775747508305648
  - 0.8011904761904762
  - 0.7154471544715447
  - 0.7380952380952382
  - 0.7825396825396828
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6874716813525324
  - 0.7395496802146418
  - 0.6088355696084834
  - 0.6248795530710424
  - 0.7110073602650175
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9399224806201549
  - 0.9395833333333332
  - 0.9349593495934958
  - 0.9592105263157895
  - 0.948888888888889
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.18904708467202144
  - 0.22263447583579998
  - 0.12152689185197411
  - 0.1564051394822149
  - 0.1979731772197432
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5067446333773947
  - 0.592127086100309
  - 0.35173144417253166
  - 0.43599560307257407
  - 0.5266132338781206
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3317421177690082
  - 0.5082455532033676
  - 0.18774064868539092
  - 0.27012923852808823
  - 0.3547172813370751
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.38565605273092374
  - 0.46095708287484827
  - 0.24305378370394823
  - 0.32075236315365513
  - 0.39969893345582413
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9567226702902549
  - 0.9596169849414004
  - 0.9517980247386788
  - 0.9711102194812147
  - 0.9617698237321981
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3488372093023255
  - -1.6
  - -1.3902439024390243
  - -1.394736842105263
  - -1.3111111111111111
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1356589147286822
  - -0.125
  - -0.17479674796747968
  - -0.16228070175438594
  - -0.12962962962962962
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.13565891472868216
  - -0.125
  - -0.17479674796747968
  - -0.16228070175438597
  - -0.12962962962962962
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.13565891472868216
  - -0.125
  - -0.17479674796747965
  - -0.16228070175438597
  - -0.12962962962962965
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.18837209302325583
  - -0.153921568627451
  - -0.2520325203252033
  - -0.23793859649122806
  - -0.17094017094017097
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03372093023255814
  - -0.05590277777777778
  - -0.029268292682926834
  - -0.022953216374269007
  - -0.031111111111111114
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8643410852713177
  - 0.875
  - 0.8252032520325202
  - 0.837719298245614
  - 0.8703703703703703
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8643410852713178
  - 0.875
  - 0.8252032520325203
  - 0.8377192982456141
  - 0.8703703703703703
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8643410852713178
  - 0.875
  - 0.8252032520325204
  - 0.837719298245614
  - 0.8703703703703705
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8116279069767443
  - 0.846078431372549
  - 0.7479674796747968
  - 0.7620614035087719
  - 0.8290598290598291
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8643410852713177
  - 0.875
  - 0.8252032520325202
  - 0.837719298245614
  - 0.8703703703703703
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8643410852713178
  - 0.875
  - 0.8252032520325203
  - 0.8377192982456141
  - 0.8703703703703703
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8643410852713178
  - 0.875
  - 0.8252032520325204
  - 0.837719298245614
  - 0.8703703703703705
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8116279069767443
  - 0.846078431372549
  - 0.7479674796747968
  - 0.7620614035087719
  - 0.8290598290598291
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9962232756350403
  - 0.9405937303555589
  - 0.9785247432306255
  - 0.9790095015278837
  - 0.9787050460210075
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9795192307692308
  - 0.9471418196908393
  - 0.9712418300653595
  - 0.9726851851851852
  - 0.9813867325335215
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9662790697674418
  - 0.9440972222222221
  - 0.9707317073170731
  - 0.977046783625731
  - 0.9688888888888888
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9954700854700854
  - 0.9624153247028229
  - 0.9611687812379853
  - 0.9635100015384942
  - 0.960468077244393
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.935683012121106
  - 0.988797930666378
  - 0.946231437753164
  - 0.9418654752915345
  - 0.9584940511848433
  train_average_precision_macro_oob:
  - 0.9075012867555973
  - 0.9733877076436941
  - 0.8946987323411165
  - 0.9039922241949387
  - 0.9274860438983854
  train_average_precision_micro:
  - 0.9176982310633134
  - 0.9527870634166103
  - 0.9414892589261865
  - 0.9203992728431265
  - 0.954507103822826
  train_average_precision_micro_oob:
  - 0.8825637076583095
  - 0.9081808761490346
  - 0.8978212309732464
  - 0.8905282788853619
  - 0.9141979988721772
  train_average_precision_samples:
  - 0.9554878048780487
  - 0.9765469061876246
  - 0.9633534136546185
  - 0.9640039447731755
  - 0.9696502057613168
  train_average_precision_samples_oob:
  - 0.9393292682926828
  - 0.9486027944111776
  - 0.9359772423025434
  - 0.9498027613412228
  - 0.9517489711934156
  train_average_precision_weighted:
  - 0.9389764581564244
  - 0.981031977781427
  - 0.9557295765338732
  - 0.9296384504739627
  - 0.9689435692035324
  train_average_precision_weighted_oob:
  - 0.9147009652445531
  - 0.9619634758729532
  - 0.9188340673643149
  - 0.9073408500482425
  - 0.9415615259463956
  train_f1_macro:
  - 0.8556910569105692
  - 0.8802395209580838
  - 0.8463855421686746
  - 0.8589743589743589
  - 0.8549382716049383
  train_f1_macro_oob:
  - 0.8516260162601625
  - 0.8812375249500998
  - 0.8383534136546184
  - 0.8550295857988166
  - 0.838477366255144
  train_f1_micro:
  - 0.8556910569105691
  - 0.8802395209580839
  - 0.8463855421686747
  - 0.8589743589743589
  - 0.8549382716049383
  train_f1_micro_oob:
  - 0.8516260162601627
  - 0.8812375249500998
  - 0.8383534136546185
  - 0.8550295857988166
  - 0.838477366255144
  train_f1_samples:
  - 0.855691056910569
  - 0.8802395209580839
  - 0.8463855421686746
  - 0.858974358974359
  - 0.8549382716049383
  train_f1_samples_oob:
  - 0.8516260162601623
  - 0.8812375249500995
  - 0.8383534136546185
  - 0.8550295857988166
  - 0.8384773662551439
  train_f1_weighted:
  - 0.8034894952909926
  - 0.8513420919355319
  - 0.7811844392495355
  - 0.8082724213945932
  - 0.8007098765432099
  train_f1_weighted_oob:
  - 0.795127988408597
  - 0.8534572645753269
  - 0.7649403584487204
  - 0.8001508295625942
  - 0.7670061728395061
  train_jaccard_macro:
  - 0.7547358019874237
  - 0.7922719408171055
  - 0.7441926284334497
  - 0.7596261458536938
  - 0.7540877036083362
  train_jaccard_macro_oob:
  - 0.7494553376906318
  - 0.7944277431402499
  - 0.7346984327104841
  - 0.7546590272968032
  - 0.7333927773724822
  train_jaccard_micro:
  - 0.7477797513321492
  - 0.786096256684492
  - 0.7336814621409922
  - 0.7528089887640449
  - 0.7466307277628033
  train_jaccard_micro_oob:
  - 0.7415929203539823
  - 0.7876895628902766
  - 0.7216940363007779
  - 0.7467700258397932
  - 0.7218777679362267
  train_jaccard_samples:
  - 0.762630662020906
  - 0.8021100655831191
  - 0.7475616752725187
  - 0.7665539588616512
  - 0.7623456790123457
  train_jaccard_samples_oob:
  - 0.7549361207897793
  - 0.8038209295694326
  - 0.7350831899024671
  - 0.7597914905607215
  - 0.7354497354497355
  train_jaccard_weighted:
  - 0.6759492385857617
  - 0.7481852139723513
  - 0.6484668463962399
  - 0.6826894081436774
  - 0.6721709264916471
  train_jaccard_weighted_oob:
  - 0.6650876852391122
  - 0.752701972054522
  - 0.6292426266673944
  - 0.6724629875853737
  - 0.6297951100669025
  train_label_ranking_average_precision_score:
  - 0.9554878048780489
  - 0.9765469061876246
  - 0.9633534136546185
  - 0.9640039447731755
  - 0.9696502057613168
  train_label_ranking_average_precision_score_oob:
  - 0.9393292682926828
  - 0.9486027944111776
  - 0.9359772423025435
  - 0.949802761341223
  - 0.9517489711934156
  train_matthews_corrcoef_macro:
  - 0.1808026534475841
  - 0.2254855220350754
  - 0.15901093514686146
  - 0.18333351091714437
  - 0.18475354817623998
  train_matthews_corrcoef_macro_oob:
  - 0.17425221625494522
  - 0.22748388252249999
  - 0.14152014031890633
  - 0.17641806723228273
  - 0.15329332169291832
  train_matthews_corrcoef_micro:
  - 0.4964057344715854
  - 0.5890031862363108
  - 0.44427656021793305
  - 0.4993633693160073
  - 0.4994410895906768
  train_matthews_corrcoef_micro_oob:
  - 0.47915537099656264
  - 0.5930061874456295
  - 0.40484068615792507
  - 0.48229695926156185
  - 0.42268810183354694
  train_matthews_corrcoef_samples:
  - 0.3364640028668088
  - 0.4531830309742946
  - 0.2700115778098662
  - 0.33765602783514675
  - 0.33016563568213053
  train_matthews_corrcoef_samples_oob:
  - 0.3079044160742285
  - 0.4591710549263904
  - 0.2258560228211029
  - 0.30906161640299484
  - 0.23820658261977848
  train_matthews_corrcoef_weighted:
  - 0.3680575885662992
  - 0.4592128284010434
  - 0.32633622712583793
  - 0.3716368460002523
  - 0.37711460210544023
  train_matthews_corrcoef_weighted_oob:
  - 0.35462037087163745
  - 0.4634482794116529
  - 0.2911202326674352
  - 0.3573280294583473
  - 0.3127217634985364
  train_ndgc:
  - 0.9684897704270793
  - 0.9828501549020977
  - 0.9740418302907796
  - 0.9740442326475344
  - 0.9786670364338382
  train_ndgc_oob:
  - 0.958040400858879
  - 0.9625998154281117
  - 0.9552816355417069
  - 0.964918614660431
  - 0.966023035052077
  train_neg_coverage_error:
  - -1.3902439024390243
  - -1.2634730538922156
  - -1.3313253012048192
  - -1.3254437869822486
  - -1.3395061728395061
  train_neg_coverage_error_oob:
  - -1.475609756097561
  - -1.341317365269461
  - -1.4457831325301205
  - -1.4201183431952662
  - -1.4135802469135803
  train_neg_hamming_loss_macro:
  - -0.1443089430894309
  - -0.11976047904191617
  - -0.1536144578313253
  - -0.14102564102564105
  - -0.14506172839506173
  train_neg_hamming_loss_macro_oob:
  - -0.1483739837398374
  - -0.11876247504990019
  - -0.1616465863453815
  - -0.14497041420118342
  - -0.16152263374485595
  train_neg_hamming_loss_micro:
  - -0.1443089430894309
  - -0.11976047904191617
  - -0.1536144578313253
  - -0.14102564102564102
  - -0.14506172839506173
  train_neg_hamming_loss_micro_oob:
  - -0.1483739837398374
  - -0.1187624750499002
  - -0.16164658634538154
  - -0.14497041420118342
  - -0.16152263374485595
  train_neg_hamming_loss_samples:
  - -0.14430894308943087
  - -0.11976047904191614
  - -0.15361445783132527
  - -0.14102564102564102
  - -0.14506172839506173
  train_neg_hamming_loss_samples_oob:
  - -0.14837398373983737
  - -0.11876247504990017
  - -0.1616465863453815
  - -0.14497041420118342
  - -0.16152263374485595
  train_neg_hamming_loss_weighted:
  - -0.1965105047090075
  - -0.14865790806446808
  - -0.21881556075046454
  - -0.19172757860540665
  - -0.1992901234567901
  train_neg_hamming_loss_weighted_oob:
  - -0.20487201159140306
  - -0.14654273542467303
  - -0.2350596415512797
  - -0.19984917043740572
  - -0.23299382716049383
  train_neg_label_ranking_loss:
  - -0.027811653116531165
  - -0.011526946107784432
  - -0.021686746987951807
  - -0.022189349112426034
  - -0.019204389574759943
  train_neg_label_ranking_loss_oob:
  - -0.04137872628726288
  - -0.026497005988023955
  - -0.042453145917001334
  - -0.03579881656804734
  - -0.03132716049382716
  train_precision_macro:
  - 0.8556910569105692
  - 0.8802395209580838
  - 0.8463855421686746
  - 0.8589743589743589
  - 0.8549382716049383
  train_precision_macro_oob:
  - 0.8516260162601625
  - 0.8812375249500998
  - 0.8383534136546184
  - 0.8550295857988166
  - 0.838477366255144
  train_precision_micro:
  - 0.8556910569105691
  - 0.8802395209580839
  - 0.8463855421686747
  - 0.8589743589743589
  - 0.8549382716049383
  train_precision_micro_oob:
  - 0.8516260162601627
  - 0.8812375249500998
  - 0.8383534136546185
  - 0.8550295857988166
  - 0.838477366255144
  train_precision_samples:
  - 0.855691056910569
  - 0.8802395209580839
  - 0.8463855421686746
  - 0.858974358974359
  - 0.8549382716049383
  train_precision_samples_oob:
  - 0.8516260162601623
  - 0.8812375249500995
  - 0.8383534136546185
  - 0.8550295857988166
  - 0.8384773662551439
  train_precision_weighted:
  - 0.8034894952909926
  - 0.8513420919355319
  - 0.7811844392495355
  - 0.8082724213945932
  - 0.8007098765432099
  train_precision_weighted_oob:
  - 0.795127988408597
  - 0.8534572645753269
  - 0.7649403584487204
  - 0.8001508295625942
  - 0.7670061728395061
  train_recall_macro:
  - 0.8556910569105692
  - 0.8802395209580838
  - 0.8463855421686746
  - 0.8589743589743589
  - 0.8549382716049383
  train_recall_macro_oob:
  - 0.8516260162601625
  - 0.8812375249500998
  - 0.8383534136546184
  - 0.8550295857988166
  - 0.838477366255144
  train_recall_micro:
  - 0.8556910569105691
  - 0.8802395209580839
  - 0.8463855421686747
  - 0.8589743589743589
  - 0.8549382716049383
  train_recall_micro_oob:
  - 0.8516260162601627
  - 0.8812375249500998
  - 0.8383534136546185
  - 0.8550295857988166
  - 0.838477366255144
  train_recall_samples:
  - 0.855691056910569
  - 0.8802395209580839
  - 0.8463855421686746
  - 0.858974358974359
  - 0.8549382716049383
  train_recall_samples_oob:
  - 0.8516260162601623
  - 0.8812375249500995
  - 0.8383534136546185
  - 0.8550295857988166
  - 0.8384773662551439
  train_recall_weighted:
  - 0.8034894952909926
  - 0.8513420919355319
  - 0.7811844392495355
  - 0.8082724213945932
  - 0.8007098765432099
  train_recall_weighted_oob:
  - 0.795127988408597
  - 0.8534572645753269
  - 0.7649403584487204
  - 0.8001508295625942
  - 0.7670061728395061
  train_roc_auc_macro:
  - 0.9722009126337215
  - 0.993783334060906
  - 0.9794094364383543
  - 0.9756671302585146
  - 0.9856751934491248
  train_roc_auc_macro_oob:
  - 0.9651574675957281
  - 0.9874252197114913
  - 0.9659388657569629
  - 0.9557682933490415
  - 0.9728913057714136
  train_roc_auc_micro:
  - 0.9745195107746067
  - 0.9896957161756759
  - 0.9813855252041679
  - 0.9794662309368192
  - 0.9836010362694301
  train_roc_auc_micro_oob:
  - 0.9629662454736523
  - 0.9752610232234582
  - 0.9656372226915736
  - 0.9652263374485597
  - 0.9699676165803108
  train_roc_auc_samples:
  - 0.9721883468834689
  - 0.9884730538922155
  - 0.9783132530120482
  - 0.977810650887574
  - 0.98079561042524
  train_roc_auc_samples_oob:
  - 0.9586212737127372
  - 0.9735029940119762
  - 0.9575468540829987
  - 0.9642011834319526
  - 0.9686728395061729
  train_roc_auc_weighted:
  - 0.969857306586875
  - 0.9880693471418419
  - 0.9782520298938209
  - 0.9701488699765894
  - 0.9854597926519726
  train_roc_auc_weighted_oob:
  - 0.9583458519221884
  - 0.9768003340507896
  - 0.9619813002089121
  - 0.9534310039513139
  - 0.9688896778366205
start: 2023-12-21 09:21:10.602791
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
