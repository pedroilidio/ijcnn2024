active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmHsCAzMzMzMwMwMCZmZmZmRFAwJmZmZmZEUCAMzMzMzMDQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 18:50:48.262637
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 12ff74a608a94061874261ba4ae1403d8314678c7b726a58173d5d2e9a733d7a
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/12ff74a_20231212T185019287929_embedding_weak__0_scene.yml
results:
  fit_time:
  - 1.2863965034484863
  - 1.2623984813690186
  - 1.368868350982666
  - 1.406806230545044
  - 1.4073786735534668
  score_time:
  - 3.3244411945343018
  - 3.3103294372558594
  - 3.353278636932373
  - 3.349804639816284
  - 3.348470449447632
  test_average_precision_macro:
  - 0.8582740727281779
  - 0.8739365505591534
  - 0.8645520008317815
  - 0.8176310959985846
  - 0.849176527691613
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8594625538958028
  - 0.8773234658181749
  - 0.8632181318648775
  - 0.8350671024704986
  - 0.8567540338783655
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8742501704158145
  - 0.9021993127147766
  - 0.8916491963661775
  - 0.8629280223619846
  - 0.8821851078636046
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8493082470536157
  - 0.8662057415911364
  - 0.8549465511923697
  - 0.8054747688619839
  - 0.8389986286355545
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9021813224267211
  - 0.9054982817869416
  - 0.902166317260657
  - 0.8993710691823898
  - 0.8990953375086987
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9021813224267212
  - 0.9054982817869416
  - 0.9021663172606569
  - 0.89937106918239
  - 0.8990953375086986
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9021813224267211
  - 0.9054982817869417
  - 0.902166317260657
  - 0.89937106918239
  - 0.8990953375086987
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.896860525368553
  - 0.9005612387055686
  - 0.8971811873303754
  - 0.8943590866513387
  - 0.8936331735603268
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8251319217563405
  - 0.8305643527067099
  - 0.8250869018058432
  - 0.8207940585031871
  - 0.8204940629245111
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8217944737659112
  - 0.8273155416012559
  - 0.821769573520051
  - 0.8171428571428572
  - 0.8166877370417194
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8368390300905638
  - 0.8422680412371132
  - 0.8381251871817909
  - 0.8328341818907854
  - 0.832090665076051
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8167321810582273
  - 0.8224878758283083
  - 0.8170546441815036
  - 0.812701262615391
  - 0.8116966522732045
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8742501704158143
  - 0.9021993127147764
  - 0.8916491963661775
  - 0.8629280223619843
  - 0.8821851078636047
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6261001145413682
  - 0.6466894970669747
  - 0.6369630227097215
  - 0.6224700421625715
  - 0.6191583520505097
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6265388078841224
  - 0.6456589090846487
  - 0.6354474467061519
  - 0.6236336303818267
  - 0.6212209753112995
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.48940549798065197
  - 0.508699563943379
  - 0.5043408914349861
  - 0.4937005461946018
  - 0.48579608400036217
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6077317492668309
  - 0.6312374272545793
  - 0.6209255116968816
  - 0.6062935843818741
  - 0.6014722263800145
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9069934937158618
  - 0.9281267941958224
  - 0.920445262481964
  - 0.8988976518296572
  - 0.9134212283449215
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.408997955010225
  - -1.3567010309278351
  - -1.379454926624738
  - -1.469601677148847
  - -1.4133611691022965
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09781867757327879
  - -0.09450171821305842
  - -0.09783368273934312
  - -0.10062893081761008
  - -0.10090466249130133
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0978186775732788
  - -0.09450171821305842
  - -0.09783368273934312
  - -0.10062893081761007
  - -0.10090466249130133
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09781867757327879
  - -0.0945017182130584
  - -0.09783368273934309
  - -0.10062893081761007
  - -0.10090466249130131
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10313947463144693
  - -0.0994387612944314
  - -0.10281881266962443
  - -0.10564091334866124
  - -0.10636682643967324
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0693762781186094
  - -0.05587628865979382
  - -0.058071278825995803
  - -0.0751572327044025
  - -0.06466597077244259
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9021813224267211
  - 0.9054982817869416
  - 0.902166317260657
  - 0.8993710691823898
  - 0.8990953375086987
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9021813224267212
  - 0.9054982817869416
  - 0.9021663172606569
  - 0.89937106918239
  - 0.8990953375086986
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9021813224267211
  - 0.9054982817869417
  - 0.902166317260657
  - 0.89937106918239
  - 0.8990953375086987
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.896860525368553
  - 0.9005612387055686
  - 0.8971811873303754
  - 0.8943590866513387
  - 0.8936331735603268
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9021813224267211
  - 0.9054982817869416
  - 0.902166317260657
  - 0.8993710691823898
  - 0.8990953375086987
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9021813224267212
  - 0.9054982817869416
  - 0.9021663172606569
  - 0.89937106918239
  - 0.8990953375086986
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9021813224267211
  - 0.9054982817869417
  - 0.902166317260657
  - 0.89937106918239
  - 0.8990953375086987
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.896860525368553
  - 0.9005612387055686
  - 0.8971811873303754
  - 0.8943590866513387
  - 0.8936331735603268
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9528006346468615
  - 0.9572014567494951
  - 0.952652495740223
  - 0.9403263195479113
  - 0.9457438767905898
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9558582862045041
  - 0.9619500652109348
  - 0.9580347052875751
  - 0.9503392130257803
  - 0.9544194871197281
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9306237218813906
  - 0.9441237113402061
  - 0.9419287211740042
  - 0.9248427672955976
  - 0.9353340292275575
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9491609930179371
  - 0.9533765184358579
  - 0.9481191288711102
  - 0.9350377104457253
  - 0.9406134474388823
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9866745259238373
  - 0.9868225921398789
  - 0.9873493935813644
  - 0.9866659077886051
  - 0.9877993880668786
  train_average_precision_macro_oob:
  - 0.8425226560838116
  - 0.8415569680023274
  - 0.8449369192677416
  - 0.856212100184631
  - 0.8481197814177567
  train_average_precision_micro:
  - 0.9851449840573903
  - 0.9852768684964908
  - 0.9862691168605989
  - 0.9855629340407133
  - 0.9863539414982744
  train_average_precision_micro_oob:
  - 0.852364049071708
  - 0.850166493267748
  - 0.8537959093530412
  - 0.8595002871041932
  - 0.8555542967949546
  train_average_precision_samples:
  - 0.9799704553354189
  - 0.980922650017343
  - 0.978454231433506
  - 0.978972366148532
  - 0.9809387966804979
  train_average_precision_samples_oob:
  - 0.8793187347931873
  - 0.8746227887617066
  - 0.8767573402417962
  - 0.8821243523316062
  - 0.8786652835408022
  train_average_precision_weighted:
  - 0.986286840236583
  - 0.9864065712527608
  - 0.9869483768636343
  - 0.9862745344378497
  - 0.9873325652549966
  train_average_precision_weighted_oob:
  - 0.8325897256015408
  - 0.831432972092102
  - 0.8343673288968284
  - 0.8471669907585858
  - 0.8379685500047811
  train_f1_macro:
  - 0.9513381995133819
  - 0.9512660423170308
  - 0.9518998272884284
  - 0.9520725388601038
  - 0.9502939142461965
  train_f1_macro_oob:
  - 0.9003302050747305
  - 0.8991501907734998
  - 0.8993091537132987
  - 0.9023316062176167
  - 0.9006742738589212
  train_f1_micro:
  - 0.9513381995133819
  - 0.9512660423170308
  - 0.9518998272884284
  - 0.9520725388601037
  - 0.9502939142461964
  train_f1_micro_oob:
  - 0.9003302050747306
  - 0.8991501907734998
  - 0.8993091537132988
  - 0.9023316062176165
  - 0.9006742738589212
  train_f1_samples:
  - 0.951338199513382
  - 0.9512660423170309
  - 0.9518998272884283
  - 0.9520725388601037
  - 0.9502939142461966
  train_f1_samples_oob:
  - 0.9003302050747307
  - 0.8991501907735
  - 0.8993091537132988
  - 0.9023316062176167
  - 0.9006742738589212
  train_f1_weighted:
  - 0.9487548481957552
  - 0.948810579207375
  - 0.949412622052154
  - 0.9498439081588679
  - 0.9479195927670812
  train_f1_weighted_oob:
  - 0.8952560291083355
  - 0.8940687288025949
  - 0.8941212119694377
  - 0.8974486625710306
  - 0.8956766615568594
  train_jaccard_macro:
  - 0.9081109001414515
  - 0.9079203699810638
  - 0.9090846187516582
  - 0.909195303574609
  - 0.9060648191871071
  train_jaccard_macro_oob:
  - 0.8220675484486746
  - 0.8201927659193188
  - 0.820531228535593
  - 0.8250325553677224
  - 0.8225373296436169
  train_jaccard_micro:
  - 0.9071925754060325
  - 0.9070613527368944
  - 0.9082145505479113
  - 0.9085290482076638
  - 0.9052952318208021
  train_jaccard_micro_oob:
  - 0.8187277755827737
  - 0.8167782591571485
  - 0.8170406402008473
  - 0.822043898985131
  - 0.8192970040103799
  train_jaccard_samples:
  - 0.9182307959680222
  - 0.9180664981913681
  - 0.9188378978534419
  - 0.9194793979768073
  - 0.9163579332147797
  train_jaccard_samples_oob:
  - 0.8345871195193404
  - 0.8324166295029978
  - 0.8323587466074511
  - 0.8377744880335553
  - 0.8346053151551075
  train_jaccard_weighted:
  - 0.9034832362727685
  - 0.9035304506028046
  - 0.9046322232623419
  - 0.9051917601576293
  - 0.9018289333716247
  train_jaccard_weighted_oob:
  - 0.813898417408509
  - 0.812062053522418
  - 0.8122131999673095
  - 0.817168924878929
  - 0.8145221801756329
  train_label_ranking_average_precision_score:
  - 0.9799704553354186
  - 0.9809226500173428
  - 0.9784542314335058
  - 0.9789723661485316
  - 0.9809387966804977
  train_label_ranking_average_precision_score_oob:
  - 0.8793187347931872
  - 0.8746227887617063
  - 0.8767573402417956
  - 0.882124352331606
  - 0.8786652835408021
  train_matthews_corrcoef_macro:
  - 0.8339095529821802
  - 0.8329660420182167
  - 0.8349928067594709
  - 0.8350040075559604
  - 0.8289923757297694
  train_matthews_corrcoef_macro_oob:
  - 0.6259172883216263
  - 0.6193239265819119
  - 0.6183190097827777
  - 0.6339519432262738
  - 0.6258856212474655
  train_matthews_corrcoef_micro:
  - 0.8292681010949579
  - 0.8287174600293153
  - 0.8306650157821241
  - 0.8311273970285059
  - 0.8248200081638123
  train_matthews_corrcoef_micro_oob:
  - 0.6259112939496578
  - 0.6198751436841334
  - 0.619433237542663
  - 0.632374878380348
  - 0.6257092671778056
  train_matthews_corrcoef_samples:
  - 0.7615030994112267
  - 0.75702702071715
  - 0.7573255903369929
  - 0.762179240320395
  - 0.7511533357297354
  train_matthews_corrcoef_samples_oob:
  - 0.4943848080271513
  - 0.48372481833395276
  - 0.48187381732329443
  - 0.5000812555324813
  - 0.4886938326610436
  train_matthews_corrcoef_weighted:
  - 0.8269891676263034
  - 0.8265156640755994
  - 0.8284213082654815
  - 0.8292949910673779
  - 0.8228288634423133
  train_matthews_corrcoef_weighted_oob:
  - 0.6096215779285408
  - 0.6028957062682553
  - 0.6013899739289446
  - 0.6185224408890532
  - 0.6097114817088968
  train_ndgc:
  - 0.985357939539996
  - 0.9861600742013219
  - 0.9842101411284605
  - 0.9846320534220692
  - 0.9859955935623766
  train_ndgc_oob:
  - 0.911172853264882
  - 0.9075257281381107
  - 0.9092224920656816
  - 0.9131327478586915
  - 0.9105444462391579
  train_neg_coverage_error:
  - -1.1282586027111574
  - -1.1217481789802288
  - -1.1248704663212434
  - -1.122279792746114
  - -1.1182572614107884
  train_neg_coverage_error_oob:
  - -1.4249217935349323
  - -1.4255983350676378
  - -1.4196891191709844
  - -1.4088082901554404
  - -1.4154564315352698
  train_neg_hamming_loss_macro:
  - -0.048661800486618
  - -0.04873395768296913
  - -0.04810017271157168
  - -0.04792746113989637
  - -0.04970608575380359
  train_neg_hamming_loss_macro_oob:
  - -0.09966979492526938
  - -0.10084980922650016
  - -0.10069084628670122
  - -0.09766839378238341
  - -0.09932572614107883
  train_neg_hamming_loss_micro:
  - -0.04866180048661801
  - -0.04873395768296913
  - -0.04810017271157167
  - -0.04792746113989637
  - -0.04970608575380359
  train_neg_hamming_loss_micro_oob:
  - -0.09966979492526938
  - -0.10084980922650018
  - -0.1006908462867012
  - -0.09766839378238341
  - -0.09932572614107883
  train_neg_hamming_loss_samples:
  - -0.048661800486618
  - -0.04873395768296913
  - -0.04810017271157167
  - -0.04792746113989637
  - -0.049706085753803586
  train_neg_hamming_loss_samples_oob:
  - -0.09966979492526937
  - -0.10084980922650016
  - -0.1006908462867012
  - -0.09766839378238341
  - -0.09932572614107882
  train_neg_hamming_loss_weighted:
  - -0.05124515180424483
  - -0.05118942079262501
  - -0.05058737794784595
  - -0.05015609184113208
  - -0.05208040723291893
  train_neg_hamming_loss_weighted_oob:
  - -0.10474397089166464
  - -0.10593127119740514
  - -0.1058787880305622
  - -0.10255133742896945
  - -0.10432333844314068
  train_neg_label_ranking_loss:
  - -0.009723670490093848
  - -0.008857960457856398
  - -0.010246113989637307
  - -0.009844559585492229
  - -0.00899896265560166
  train_neg_label_ranking_loss_oob:
  - -0.06725755995828989
  - -0.06840530697190426
  - -0.06768134715025907
  - -0.06562176165803109
  - -0.06684387966804979
  train_precision_macro:
  - 0.9513381995133819
  - 0.9512660423170308
  - 0.9518998272884284
  - 0.9520725388601038
  - 0.9502939142461965
  train_precision_macro_oob:
  - 0.9003302050747305
  - 0.8991501907734998
  - 0.8993091537132987
  - 0.9023316062176167
  - 0.9006742738589212
  train_precision_micro:
  - 0.9513381995133819
  - 0.9512660423170308
  - 0.9518998272884284
  - 0.9520725388601037
  - 0.9502939142461964
  train_precision_micro_oob:
  - 0.9003302050747306
  - 0.8991501907734998
  - 0.8993091537132988
  - 0.9023316062176165
  - 0.9006742738589212
  train_precision_samples:
  - 0.951338199513382
  - 0.9512660423170309
  - 0.9518998272884283
  - 0.9520725388601037
  - 0.9502939142461966
  train_precision_samples_oob:
  - 0.9003302050747307
  - 0.8991501907735
  - 0.8993091537132988
  - 0.9023316062176167
  - 0.9006742738589212
  train_precision_weighted:
  - 0.9487548481957552
  - 0.948810579207375
  - 0.949412622052154
  - 0.9498439081588679
  - 0.9479195927670812
  train_precision_weighted_oob:
  - 0.8952560291083355
  - 0.8940687288025949
  - 0.8941212119694377
  - 0.8974486625710306
  - 0.8956766615568594
  train_recall_macro:
  - 0.9513381995133819
  - 0.9512660423170308
  - 0.9518998272884284
  - 0.9520725388601038
  - 0.9502939142461965
  train_recall_macro_oob:
  - 0.9003302050747305
  - 0.8991501907734998
  - 0.8993091537132987
  - 0.9023316062176167
  - 0.9006742738589212
  train_recall_micro:
  - 0.9513381995133819
  - 0.9512660423170308
  - 0.9518998272884284
  - 0.9520725388601037
  - 0.9502939142461964
  train_recall_micro_oob:
  - 0.9003302050747306
  - 0.8991501907734998
  - 0.8993091537132988
  - 0.9023316062176165
  - 0.9006742738589212
  train_recall_samples:
  - 0.951338199513382
  - 0.9512660423170309
  - 0.9518998272884283
  - 0.9520725388601037
  - 0.9502939142461966
  train_recall_samples_oob:
  - 0.9003302050747307
  - 0.8991501907735
  - 0.8993091537132988
  - 0.9023316062176167
  - 0.9006742738589212
  train_recall_weighted:
  - 0.9487548481957552
  - 0.948810579207375
  - 0.949412622052154
  - 0.9498439081588679
  - 0.9479195927670812
  train_recall_weighted_oob:
  - 0.8952560291083355
  - 0.8940687288025949
  - 0.8941212119694377
  - 0.8974486625710306
  - 0.8956766615568594
  train_roc_auc_macro:
  - 0.9964281305204655
  - 0.9964343217232092
  - 0.9966106448715625
  - 0.9964442192685974
  - 0.9967725358992169
  train_roc_auc_macro_oob:
  - 0.9466043797367965
  - 0.9470214177627373
  - 0.9472890644541629
  - 0.9503207300892528
  - 0.9492234137256036
  train_roc_auc_micro:
  - 0.996409215896797
  - 0.9963797056402385
  - 0.9966339501883779
  - 0.9964786920888284
  - 0.9967353405273338
  train_roc_auc_micro_oob:
  - 0.9538500823689473
  - 0.9533714080674581
  - 0.9544233562532132
  - 0.9558424520873969
  - 0.9556015982897282
  train_roc_auc_samples:
  - 0.9902763295099061
  - 0.9911420395421435
  - 0.9897538860103627
  - 0.9901554404145078
  - 0.9910010373443984
  train_roc_auc_samples_oob:
  - 0.9327424400417101
  - 0.9315946930280958
  - 0.9323186528497409
  - 0.9343782383419689
  - 0.9331561203319502
  train_roc_auc_weighted:
  - 0.9962418152485981
  - 0.9962505072887944
  - 0.996431824007364
  - 0.996268271698495
  - 0.9965720522622251
  train_roc_auc_weighted_oob:
  - 0.9419041112005722
  - 0.9425107585685392
  - 0.9424872145551202
  - 0.9458966238491788
  - 0.9446853222717263
start: 2023-12-12 18:50:19.287929
wrapper: null
