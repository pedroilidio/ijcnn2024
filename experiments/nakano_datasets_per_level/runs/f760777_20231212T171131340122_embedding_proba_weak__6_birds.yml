active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP6CZmZmZmem/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb8zMzMzMzPzvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mZmZmZmZCcCcmZmZmZnpP5yZmZmZmek/nJmZmZmZ6T+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j/MzMzMzMwEwKCZmZmZmdk/aGZmZmZm9j8wMzMzMzPjvw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:12:13.298560
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__6
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: f760777f72ce578656bd595d96a1444f61ee63380fcf607463ea0ec89e98949a
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f760777_20231212T171131340122_embedding_proba_weak__6_birds.yml
results:
  fit_time:
  - 21.142816305160522
  - 21.172486782073975
  - 22.3366277217865
  - 22.27045965194702
  - 22.38883686065674
  score_time:
  - 6.193807601928711
  - 6.226966619491577
  - 6.20966362953186
  - 6.403664827346802
  - 5.843474388122559
  test_average_precision_macro:
  - 0.30883469979113337
  - 0.3474024511250986
  - 0.32137762440917345
  - 0.3269708177057969
  - 0.3087110418216746
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.2602237985292129
  - 0.24913732515651874
  - 0.24100414968246292
  - 0.26308254480299886
  - 0.1975122234702359
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.25263368723331037
  - 0.2833347337039707
  - 0.24115108399479127
  - 0.25258801512671486
  - 0.22848067248762038
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.43005860211990077
  - 0.4694363729515055
  - 0.4195953314460296
  - 0.42375384387841386
  - 0.34940506228548723
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8849449204406364
  - 0.8694410444716442
  - 0.8963688290493677
  - 0.91187270501836
  - 0.8841289269685843
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8849449204406364
  - 0.8694410444716443
  - 0.8963688290493677
  - 0.9118727050183598
  - 0.8841289269685843
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8849449204406366
  - 0.8694410444716443
  - 0.8963688290493675
  - 0.9118727050183599
  - 0.8841289269685843
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.885141132611397
  - 0.868390605113965
  - 0.8900193798449612
  - 0.9068565591010157
  - 0.8725628376791166
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.795062212210935
  - 0.77081454282275
  - 0.8133812777660325
  - 0.8389176481458921
  - 0.7944450534617435
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7936333699231614
  - 0.7690364489354024
  - 0.8121996303142329
  - 0.8380202474690663
  - 0.7923217550274223
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8190607091584848
  - 0.8005923926952948
  - 0.8304896789920557
  - 0.8568915823718655
  - 0.8164749001788622
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7951584064953167
  - 0.7688876403680851
  - 0.8032578476529031
  - 0.8304524656977939
  - 0.7755131057052651
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7177499663030781
  - 0.7251951988202499
  - 0.7140193010490551
  - 0.7487120461344666
  - 0.631581447681419
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2701873091645652
  - 0.27134811960488214
  - 0.26596134643705227
  - 0.3023378052618456
  - 0.21626778543573125
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.29293328323127554
  - 0.3110013458785747
  - 0.28777375833361507
  - 0.3359224298591413
  - 0.24359602078992343
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.12704327730659637
  - 0.1317034128990231
  - 0.1153514987215885
  - 0.12781051535848997
  - 0.09226464509697099
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.35260506644591294
  - 0.36310360458635704
  - 0.3452869186390716
  - 0.3857934952022429
  - 0.25819303109482367
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.33060644583624904
  - 0.36628485850766945
  - 0.3250080327293982
  - 0.32879548609089915
  - 0.3286081112911236
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.0852713178294575
  - -3.992248062015504
  - -4.116279069767442
  - -3.5736434108527133
  - -4.5271317829457365
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.11505507955936355
  - -0.1305589555283558
  - -0.10363117095063239
  - -0.08812729498164014
  - -0.11587107303141576
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.11505507955936352
  - -0.13055895552835578
  - -0.1036311709506324
  - -0.08812729498164015
  - -0.11587107303141575
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.11505507955936352
  - -0.13055895552835575
  - -0.10363117095063239
  - -0.08812729498164014
  - -0.11587107303141575
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.11485886738860289
  - -0.13160939488603496
  - -0.10998062015503876
  - -0.09314344089898445
  - -0.12743716232088328
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.14195401674881838
  - -0.1330687830687831
  - -0.1339989613416426
  - -0.11312636165577342
  - -0.15941252469980238
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8849449204406364
  - 0.8694410444716442
  - 0.8963688290493677
  - 0.91187270501836
  - 0.8841289269685843
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8849449204406364
  - 0.8694410444716443
  - 0.8963688290493677
  - 0.9118727050183598
  - 0.8841289269685843
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8849449204406366
  - 0.8694410444716443
  - 0.8963688290493675
  - 0.9118727050183599
  - 0.8841289269685843
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.885141132611397
  - 0.868390605113965
  - 0.8900193798449612
  - 0.9068565591010157
  - 0.8725628376791166
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8849449204406364
  - 0.8694410444716442
  - 0.8963688290493677
  - 0.91187270501836
  - 0.8841289269685843
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8849449204406364
  - 0.8694410444716443
  - 0.8963688290493677
  - 0.9118727050183598
  - 0.8841289269685843
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8849449204406366
  - 0.8694410444716443
  - 0.8963688290493675
  - 0.9118727050183599
  - 0.8841289269685843
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.885141132611397
  - 0.868390605113965
  - 0.8900193798449612
  - 0.9068565591010157
  - 0.8725628376791166
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8094239694363713
  - 0.8487391864411905
  - 0.83139346557452
  - 0.8557236347764942
  - 0.8281784611739623
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8510035535667281
  - 0.8612590908212499
  - 0.8558639151958674
  - 0.8801170469189218
  - 0.8267245547323167
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8540759813881723
  - 0.8614745548149432
  - 0.8461717160807226
  - 0.8774552253897862
  - 0.8248852483471684
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.3685808879667018
  - 0.3380373119238176
  - 0.3754788243987526
  - 0.3801779613701333
  - 0.40162339900613575
  train_average_precision_macro_oob:
  - 0.3240672694670048
  - 0.30592051307959117
  - 0.33387678262453985
  - 0.3393616492013437
  - 0.36736941399423106
  train_average_precision_micro:
  - 0.3209784728632982
  - 0.2931325750796679
  - 0.3391714670186295
  - 0.3355254860759509
  - 0.33409699474956756
  train_average_precision_micro_oob:
  - 0.2884929009493814
  - 0.2622783571201991
  - 0.30497065448382177
  - 0.29645219386086435
  - 0.30595660228727845
  train_average_precision_samples:
  - 0.341946518436344
  - 0.3465042944960581
  - 0.3458195493854409
  - 0.3905331832608964
  - 0.31415805340223946
  train_average_precision_samples_oob:
  - 0.30756650815286096
  - 0.2957125336168029
  - 0.3086253357864135
  - 0.33574828690137265
  - 0.28476705512057976
  train_average_precision_weighted:
  - 0.4767571256125623
  - 0.4669715672227411
  - 0.504215061721235
  - 0.5042678010017817
  - 0.5268101731821639
  train_average_precision_weighted_oob:
  - 0.4284648548044655
  - 0.4312771864449622
  - 0.46229063590556674
  - 0.44957249564942214
  - 0.48430599146788506
  train_f1_macro:
  - 0.9036107711138311
  - 0.8954508363933089
  - 0.9074867401060792
  - 0.9135046919624643
  - 0.9099347205222359
  train_f1_macro_oob:
  - 0.9036107711138311
  - 0.8945328437372502
  - 0.9069767441860466
  - 0.9139126886984904
  - 0.9104447164422684
  train_f1_micro:
  - 0.903610771113831
  - 0.8954508363933088
  - 0.9074867401060791
  - 0.9135046919624643
  - 0.9099347205222358
  train_f1_micro_oob:
  - 0.903610771113831
  - 0.8945328437372501
  - 0.9069767441860465
  - 0.9139126886984904
  - 0.9104447164422684
  train_f1_samples:
  - 0.9036107711138311
  - 0.8954508363933089
  - 0.9074867401060791
  - 0.9135046919624643
  - 0.909934720522236
  train_f1_samples_oob:
  - 0.9036107711138311
  - 0.8945328437372501
  - 0.9069767441860465
  - 0.9139126886984904
  - 0.9104447164422684
  train_f1_weighted:
  - 0.906517260290216
  - 0.9018858079904591
  - 0.91196908067321
  - 0.91703211517165
  - 0.9152076093736077
  train_f1_weighted_oob:
  - 0.904582981309381
  - 0.8982110912343472
  - 0.909073157072538
  - 0.913658176448874
  - 0.9137671151504351
  train_jaccard_macro:
  - 0.8248466727511004
  - 0.8112673215924269
  - 0.8311930143789014
  - 0.8411952770060497
  - 0.8355625299713616
  train_jaccard_macro_oob:
  - 0.824902713586003
  - 0.8096373796872085
  - 0.8303111104325124
  - 0.8418425804677475
  - 0.8364448192684821
  train_jaccard_micro:
  - 0.8241696902037399
  - 0.8106935081724997
  - 0.8306413966949865
  - 0.840781073976718
  - 0.834752503041078
  train_jaccard_micro_oob:
  - 0.8241696902037399
  - 0.8091898874331057
  - 0.8297872340425532
  - 0.8414725770097671
  - 0.835611308743681
  train_jaccard_samples:
  - 0.8431328985527758
  - 0.8357637721876534
  - 0.8462614831587323
  - 0.8591561795196618
  - 0.8523688057318917
  train_jaccard_samples_oob:
  - 0.8427910132850396
  - 0.834399670212964
  - 0.8455041808420641
  - 0.8597121976393762
  - 0.8531571307711436
  train_jaccard_weighted:
  - 0.8296323243134732
  - 0.8220321962841204
  - 0.8387186630050617
  - 0.8472169863675602
  - 0.8443444945470213
  train_jaccard_weighted_oob:
  - 0.8265886813942989
  - 0.8157207215955915
  - 0.8338497342092761
  - 0.8414344661661654
  - 0.8419159269578295
  train_label_ranking_average_precision_score:
  - 0.7954348905293666
  - 0.8058066200774531
  - 0.7973699369823399
  - 0.8362696173694232
  - 0.7831503014642546
  train_label_ranking_average_precision_score_oob:
  - 0.7610548802458839
  - 0.755014859198198
  - 0.7601757233833125
  - 0.7814847210098996
  - 0.7537593031825953
  train_matthews_corrcoef_macro:
  - 0.3832976436283361
  - 0.36606493578231103
  - 0.4009957877953621
  - 0.3881482587009099
  - 0.3898594545926246
  train_matthews_corrcoef_macro_oob:
  - 0.36923151149468025
  - 0.34740617346630687
  - 0.3765615430399182
  - 0.35678554167277426
  - 0.3780225713388479
  train_matthews_corrcoef_micro:
  - 0.40986223685039813
  - 0.40513059862213185
  - 0.42485106075268003
  - 0.42610240199405247
  - 0.4263616080615116
  train_matthews_corrcoef_micro_oob:
  - 0.3924595265459911
  - 0.3821255716887633
  - 0.4006121522094137
  - 0.3918586901075436
  - 0.41125786831071687
  train_matthews_corrcoef_samples:
  - 0.2047602045518016
  - 0.20044935462048416
  - 0.21079353385856664
  - 0.21746304390813506
  - 0.19936652534244986
  train_matthews_corrcoef_samples_oob:
  - 0.18994936295595702
  - 0.18544423604402663
  - 0.19094322023561655
  - 0.19330857477632077
  - 0.18182495566814874
  train_matthews_corrcoef_weighted:
  - 0.4744992859491515
  - 0.4730385299132478
  - 0.49514648112637155
  - 0.49091062858483786
  - 0.495107017981078
  train_matthews_corrcoef_weighted_oob:
  - 0.4506957373534494
  - 0.4459150944480637
  - 0.4672590471395824
  - 0.44704631747578555
  - 0.4761700816097037
  train_ndgc:
  - 0.4056325069530204
  - 0.4078418408917749
  - 0.409671150736317
  - 0.44374015195794236
  - 0.3788459031361155
  train_ndgc_oob:
  - 0.3811714418759241
  - 0.3714218060898608
  - 0.3809276975509499
  - 0.40435942523115836
  - 0.3567442331194437
  train_neg_coverage_error:
  - -2.248062015503876
  - -2.3313953488372094
  - -2.1724806201550386
  - -2.0717054263565893
  - -2.24031007751938
  train_neg_coverage_error_oob:
  - -3.143410852713178
  - -3.131782945736434
  - -3.0213178294573644
  - -3.058139534883721
  - -3.056201550387597
  train_neg_hamming_loss_macro:
  - -0.09638922888616892
  - -0.10454916360669113
  - -0.09251325989392084
  - -0.0864953080375357
  - -0.09006527947776417
  train_neg_hamming_loss_macro_oob:
  - -0.09638922888616892
  - -0.1054671562627499
  - -0.09302325581395347
  - -0.0860873113015096
  - -0.08955528355773153
  train_neg_hamming_loss_micro:
  - -0.09638922888616891
  - -0.10454916360669114
  - -0.09251325989392085
  - -0.0864953080375357
  - -0.09006527947776417
  train_neg_hamming_loss_micro_oob:
  - -0.09638922888616891
  - -0.1054671562627499
  - -0.09302325581395349
  - -0.0860873113015096
  - -0.08955528355773154
  train_neg_hamming_loss_samples:
  - -0.0963892288861689
  - -0.10454916360669114
  - -0.09251325989392084
  - -0.08649530803753568
  - -0.09006527947776417
  train_neg_hamming_loss_samples_oob:
  - -0.09638922888616891
  - -0.1054671562627499
  - -0.09302325581395349
  - -0.08608731130150958
  - -0.08955528355773153
  train_neg_hamming_loss_weighted:
  - -0.09348273970978403
  - -0.09811419200954086
  - -0.08803091932678987
  - -0.08296788482834995
  - -0.08479239062639223
  train_neg_hamming_loss_weighted_oob:
  - -0.09541701869061912
  - -0.10178890876565296
  - -0.09092684292746189
  - -0.08634182355112588
  - -0.08623288484956487
  train_neg_label_ranking_loss:
  - -0.05320415907368713
  - -0.05673153305249748
  - -0.05135690407150735
  - -0.044091095989180804
  - -0.05740381796725846
  train_neg_label_ranking_loss_oob:
  - -0.08819075756917755
  - -0.0931573856932954
  - -0.08662717621335952
  - -0.08547366099093184
  - -0.09224809159402182
  train_precision_macro:
  - 0.9036107711138311
  - 0.8954508363933089
  - 0.9074867401060792
  - 0.9135046919624643
  - 0.9099347205222359
  train_precision_macro_oob:
  - 0.9036107711138311
  - 0.8945328437372502
  - 0.9069767441860466
  - 0.9139126886984904
  - 0.9104447164422684
  train_precision_micro:
  - 0.903610771113831
  - 0.8954508363933088
  - 0.9074867401060791
  - 0.9135046919624643
  - 0.9099347205222358
  train_precision_micro_oob:
  - 0.903610771113831
  - 0.8945328437372501
  - 0.9069767441860465
  - 0.9139126886984904
  - 0.9104447164422684
  train_precision_samples:
  - 0.9036107711138311
  - 0.8954508363933089
  - 0.9074867401060791
  - 0.9135046919624643
  - 0.909934720522236
  train_precision_samples_oob:
  - 0.9036107711138311
  - 0.8945328437372501
  - 0.9069767441860465
  - 0.9139126886984904
  - 0.9104447164422684
  train_precision_weighted:
  - 0.906517260290216
  - 0.9018858079904591
  - 0.91196908067321
  - 0.91703211517165
  - 0.9152076093736077
  train_precision_weighted_oob:
  - 0.904582981309381
  - 0.8982110912343472
  - 0.909073157072538
  - 0.913658176448874
  - 0.9137671151504351
  train_recall_macro:
  - 0.9036107711138311
  - 0.8954508363933089
  - 0.9074867401060792
  - 0.9135046919624643
  - 0.9099347205222359
  train_recall_macro_oob:
  - 0.9036107711138311
  - 0.8945328437372502
  - 0.9069767441860466
  - 0.9139126886984904
  - 0.9104447164422684
  train_recall_micro:
  - 0.903610771113831
  - 0.8954508363933088
  - 0.9074867401060791
  - 0.9135046919624643
  - 0.9099347205222358
  train_recall_micro_oob:
  - 0.903610771113831
  - 0.8945328437372501
  - 0.9069767441860465
  - 0.9139126886984904
  - 0.9104447164422684
  train_recall_samples:
  - 0.9036107711138311
  - 0.8954508363933089
  - 0.9074867401060791
  - 0.9135046919624643
  - 0.909934720522236
  train_recall_samples_oob:
  - 0.9036107711138311
  - 0.8945328437372501
  - 0.9069767441860465
  - 0.9139126886984904
  - 0.9104447164422684
  train_recall_weighted:
  - 0.906517260290216
  - 0.9018858079904591
  - 0.91196908067321
  - 0.91703211517165
  - 0.9152076093736077
  train_recall_weighted_oob:
  - 0.904582981309381
  - 0.8982110912343472
  - 0.909073157072538
  - 0.913658176448874
  - 0.9137671151504351
  train_roc_auc_macro:
  - 0.9447497680296661
  - 0.9362308458399645
  - 0.9432500456200489
  - 0.9480082695173385
  - 0.9469740532600648
  train_roc_auc_macro_oob:
  - 0.9061632691232507
  - 0.899697455237771
  - 0.8939187440322524
  - 0.9006223947561228
  - 0.9058730009151311
  train_roc_auc_micro:
  - 0.9379989093447972
  - 0.9309727446723891
  - 0.9416623567587415
  - 0.9430726833248656
  - 0.9425854927883326
  train_roc_auc_micro_oob:
  - 0.905294189510715
  - 0.9039563517051667
  - 0.9077517484838823
  - 0.9084741274459994
  - 0.9129423652750224
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9460419306293597
  - 0.9423644497462358
  - 0.9501245318132306
  - 0.9518949657434809
  - 0.9524346114481456
  train_roc_auc_weighted_oob:
  - 0.9048420449534204
  - 0.9093951544718775
  - 0.9090574743091469
  - 0.9075864128218559
  - 0.9155044016626614
start: 2023-12-12 17:11:31.340122
wrapper: null
