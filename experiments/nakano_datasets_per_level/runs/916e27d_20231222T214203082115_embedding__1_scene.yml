active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJyZmZmZ2T+AMzMzMzMDQACZmZmZmfm/ADIzMzMz478AMjMzMzPjvw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 21:43:26.995979
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__1
  params: {}
hash: 916e27d3523f3972561140883107be12636b0061ace7027afc8f77d7f34a6ac7
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/916e27d_20231222T214203082115_embedding__1_scene.yml
results:
  fit_time:
  - 36.076244592666626
  - 39.355628967285156
  - 37.84429717063904
  - 44.63564682006836
  - 40.679620027542114
  score_time:
  - 5.935227870941162
  - 5.923931360244751
  - 5.725340366363525
  - 5.870258808135986
  - 5.7092814445495605
  test_average_precision_macro:
  - 0.7930782978010086
  - 0.8275592938218658
  - 0.8071139209916972
  - 0.8196932822363535
  - 0.8510700100724354
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8065984614609104
  - 0.8336852891124862
  - 0.813064809027176
  - 0.8254624469427335
  - 0.8570573709590343
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8497920997920998
  - 0.8695894224077939
  - 0.8634920634920634
  - 0.872060857538036
  - 0.8938623789764869
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7786112284808777
  - 0.8151441871644525
  - 0.7949752983604761
  - 0.8073272516924146
  - 0.8407493476825306
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8229383229383229
  - 0.8221990257480862
  - 0.8240165631469978
  - 0.8233056708160441
  - 0.8226141078838173
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8229383229383229
  - 0.8221990257480863
  - 0.8240165631469979
  - 0.8233056708160442
  - 0.8226141078838174
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.822938322938323
  - 0.8221990257480863
  - 0.8240165631469979
  - 0.8233056708160443
  - 0.8226141078838174
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8201743783139134
  - 0.8195502029356279
  - 0.8213945977921132
  - 0.8206256972479273
  - 0.820118438544898
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6997890537189386
  - 0.6986726891929719
  - 0.7013107554164156
  - 0.7002771000524523
  - 0.6992154113333044
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6991463055637327
  - 0.6980797636632201
  - 0.7007042253521126
  - 0.6996767558037026
  - 0.6986784140969163
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7016632016632014
  - 0.701014017297942
  - 0.7034900916888494
  - 0.7022821576763483
  - 0.7008990318118947
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6958437150787506
  - 0.6949265793518982
  - 0.6975919469833466
  - 0.6964774143222162
  - 0.6956745378697875
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8497920997920995
  - 0.8695894224077937
  - 0.8634920634920634
  - 0.872060857538036
  - 0.8938623789764868
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05438798137964531
  - 0.0646200256840619
  - 0.06111136589171876
  - 0.07974966517884129
  - 0.03273037865118677
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.08928175020404014
  - 0.11254304911736826
  - 0.11277677488692019
  - 0.0977268717673654
  - 0.05651673347808496
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.010395010395010396
  - 0.01593414516082187
  - 0.016563146997929608
  - 0.012448132780082987
  - 0.004149377593360996
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.049531520954578884
  - 0.06466656005857296
  - 0.05866580601494786
  - 0.0755047986785929
  - 0.03260259267272907
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8892296783420378
  - 0.9038550565211656
  - 0.8995982306437144
  - 0.9055799238386179
  - 0.9218303230802262
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4885654885654886
  - -1.4572025052192066
  - -1.4658385093167703
  - -1.4564315352697095
  - -1.3651452282157677
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17706167706167708
  - -0.17780097425191368
  - -0.17598343685300208
  - -0.1766943291839557
  - -0.17738589211618258
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17706167706167705
  - -0.1778009742519137
  - -0.17598343685300208
  - -0.17669432918395575
  - -0.17738589211618258
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17706167706167705
  - -0.17780097425191368
  - -0.17598343685300208
  - -0.17669432918395572
  - -0.17738589211618258
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1798256216860868
  - -0.18044979706437222
  - -0.17860540220788668
  - -0.17937430275207267
  - -0.17988156145510212
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.08134095634095634
  - -0.07286012526096033
  - -0.07613871635610765
  - -0.07448132780082987
  - -0.05866182572614108
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8229383229383229
  - 0.8221990257480862
  - 0.8240165631469978
  - 0.8233056708160441
  - 0.8226141078838173
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8229383229383229
  - 0.8221990257480863
  - 0.8240165631469979
  - 0.8233056708160442
  - 0.8226141078838174
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.822938322938323
  - 0.8221990257480863
  - 0.8240165631469979
  - 0.8233056708160443
  - 0.8226141078838174
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8201743783139134
  - 0.8195502029356279
  - 0.8213945977921132
  - 0.8206256972479273
  - 0.820118438544898
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8229383229383229
  - 0.8221990257480862
  - 0.8240165631469978
  - 0.8233056708160441
  - 0.8226141078838173
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8229383229383229
  - 0.8221990257480863
  - 0.8240165631469979
  - 0.8233056708160442
  - 0.8226141078838174
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.822938322938323
  - 0.8221990257480863
  - 0.8240165631469979
  - 0.8233056708160443
  - 0.8226141078838174
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8201743783139134
  - 0.8195502029356279
  - 0.8213945977921132
  - 0.8206256972479273
  - 0.820118438544898
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9320985871717168
  - 0.9373249630244865
  - 0.9341695099008603
  - 0.9366989727035854
  - 0.9449500838129437
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9406510646649004
  - 0.9456410130538477
  - 0.9432497323253627
  - 0.9437670772676372
  - 0.9538604180026222
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9186590436590436
  - 0.9271398747390397
  - 0.9238612836438924
  - 0.9255186721991702
  - 0.941338174273859
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9256681141977665
  - 0.9319170050993394
  - 0.9285844680801546
  - 0.9311766561514511
  - 0.9396304621595664
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9241051057573294
  - 0.9271634260021672
  - 0.9248415646113172
  - 0.9217608478668463
  - 0.9222954860434442
  train_average_precision_macro_oob:
  - 0.8204734425707128
  - 0.8219866401648038
  - 0.817511817096603
  - 0.8177538734738503
  - 0.8167859634537717
  train_average_precision_micro:
  - 0.9233406434097504
  - 0.9275193159684935
  - 0.9246987334140142
  - 0.9221472431468959
  - 0.922438595331406
  train_average_precision_micro_oob:
  - 0.8273878291395211
  - 0.8291080105763863
  - 0.826151818764206
  - 0.8244897414109011
  - 0.8244760350195124
  train_average_precision_samples:
  - 0.9300709588092765
  - 0.9351659751037344
  - 0.9263513513513514
  - 0.9284848484848485
  - 0.929974025974026
  train_average_precision_samples_oob:
  - 0.8632182416060921
  - 0.8687845781466113
  - 0.86505544005544
  - 0.8596796536796536
  - 0.8627229437229438
  train_average_precision_weighted:
  - 0.9185693403144352
  - 0.9223495511275541
  - 0.9203923471941923
  - 0.9169450971788662
  - 0.917056145624127
  train_average_precision_weighted_oob:
  - 0.8076148798221253
  - 0.8109946494977626
  - 0.8062739905066657
  - 0.8059086715446276
  - 0.8045106803697548
  train_f1_macro:
  - 0.848823122187608
  - 0.8469052558782849
  - 0.8456340956340958
  - 0.8463203463203463
  - 0.8432034632034632
  train_f1_macro_oob:
  - 0.8229491173416408
  - 0.8223547717842323
  - 0.8220720720720719
  - 0.8224242424242423
  - 0.8216450216450216
  train_f1_micro:
  - 0.8488231221876081
  - 0.8469052558782849
  - 0.8456340956340956
  - 0.8463203463203464
  - 0.8432034632034632
  train_f1_micro_oob:
  - 0.8229491173416407
  - 0.8223547717842323
  - 0.8220720720720721
  - 0.8224242424242424
  - 0.8216450216450216
  train_f1_samples:
  - 0.8488231221876082
  - 0.846905255878285
  - 0.8456340956340956
  - 0.8463203463203465
  - 0.8432034632034633
  train_f1_samples_oob:
  - 0.8229491173416407
  - 0.8223547717842323
  - 0.8220720720720721
  - 0.8224242424242426
  - 0.8216450216450217
  train_f1_weighted:
  - 0.8452069239482908
  - 0.8432296959667087
  - 0.8417793421421869
  - 0.8427091863648923
  - 0.839556810339419
  train_f1_weighted_oob:
  - 0.8202531861575239
  - 0.8197882732885323
  - 0.8194587352787643
  - 0.8198382275364867
  - 0.8190165004078048
  train_jaccard_macro:
  - 0.7386656965457493
  - 0.7358455697642228
  - 0.733991053347736
  - 0.7348985168301342
  - 0.7302023213701988
  train_jaccard_macro_oob:
  - 0.6997786979605767
  - 0.6988583623576158
  - 0.6984698961369088
  - 0.6989725515176916
  - 0.6978558236245034
  train_jaccard_micro:
  - 0.7373524768849132
  - 0.7344628532873528
  - 0.7325529040972535
  - 0.7335834896810507
  - 0.728912506548911
  train_jaccard_micro_oob:
  - 0.6991618879576533
  - 0.6983043382514864
  - 0.6978967495219885
  - 0.6984045290787442
  - 0.6972814107274063
  train_jaccard_samples:
  - 0.7453889136132125
  - 0.7419482315747874
  - 0.7401123651123649
  - 0.7412492269635126
  - 0.7357328385899813
  train_jaccard_samples_oob:
  - 0.7018122929337882
  - 0.7004174076269509
  - 0.7002772002772001
  - 0.7007668521954236
  - 0.6994805194805194
  train_jaccard_weighted:
  - 0.7333394098804336
  - 0.7304471242091439
  - 0.728331807254747
  - 0.7295828832453788
  - 0.7248676466508285
  train_jaccard_weighted_oob:
  - 0.6959490516963323
  - 0.6952191004897972
  - 0.6947629515623392
  - 0.6953052565538597
  - 0.6941291524307661
  train_label_ranking_average_precision_score:
  - 0.9300709588092763
  - 0.9351659751037344
  - 0.9263513513513508
  - 0.9284848484848481
  - 0.9299740259740255
  train_label_ranking_average_precision_score_oob:
  - 0.8632182416060924
  - 0.8687845781466107
  - 0.86505544005544
  - 0.8596796536796536
  - 0.8627229437229438
  train_matthews_corrcoef_macro:
  - 0.35610162402510065
  - 0.3350639272055888
  - 0.3298055602606555
  - 0.3368739527788524
  - 0.3146012635900564
  train_matthews_corrcoef_macro_oob:
  - 0.06456386596056692
  - 0.03790701222880182
  - 0.053868238020189176
  - 0.048675333705683076
  - 0.03569658073162735
  train_matthews_corrcoef_micro:
  - 0.36253081806462506
  - 0.34692341192195725
  - 0.3406730058556026
  - 0.3454595360354412
  - 0.3241176446751739
  train_matthews_corrcoef_micro_oob:
  - 0.09562621736283541
  - 0.06616314493819865
  - 0.07189577873072964
  - 0.08221063882762723
  - 0.06299645216364043
  train_matthews_corrcoef_samples:
  - 0.16317838326724152
  - 0.1491955968053286
  - 0.1450723952767873
  - 0.1489619449582195
  - 0.1301540141489738
  train_matthews_corrcoef_samples_oob:
  - 0.011941848390446522
  - 0.004752218703406836
  - 0.006565725328499831
  - 0.008067440066563483
  - 0.004431076430199846
  train_matthews_corrcoef_weighted:
  - 0.34564074523864047
  - 0.3234827158700724
  - 0.3165473478970531
  - 0.32627972718671044
  - 0.3032104178360475
  train_matthews_corrcoef_weighted_oob:
  - 0.0604331867384912
  - 0.03785243683158455
  - 0.051254195073258
  - 0.04742336876337255
  - 0.03383612668122257
  train_ndgc:
  - 0.9485768380749608
  - 0.952256702517699
  - 0.945836852128238
  - 0.9474497648610491
  - 0.9485716710173293
  train_ndgc_oob:
  - 0.8992793014074373
  - 0.9032016129023597
  - 0.9006856733347558
  - 0.8966635006700047
  - 0.8986625563482932
  train_neg_coverage_error:
  - -1.2751817237798546
  - -1.2536307053941909
  - -1.2915800415800416
  - -1.2867532467532468
  - -1.28
  train_neg_coverage_error_oob:
  - -1.4730010384215992
  - -1.4559128630705394
  - -1.4745322245322245
  - -1.4893506493506494
  - -1.4758441558441557
  train_neg_hamming_loss_macro:
  - -0.15117687781239184
  - -0.1530947441217151
  - -0.15436590436590436
  - -0.15367965367965367
  - -0.1567965367965368
  train_neg_hamming_loss_macro_oob:
  - -0.1770508826583593
  - -0.17764522821576764
  - -0.17792792792792791
  - -0.17757575757575758
  - -0.17835497835497835
  train_neg_hamming_loss_micro:
  - -0.15117687781239184
  - -0.1530947441217151
  - -0.15436590436590436
  - -0.15367965367965367
  - -0.1567965367965368
  train_neg_hamming_loss_micro_oob:
  - -0.1770508826583593
  - -0.17764522821576764
  - -0.17792792792792791
  - -0.17757575757575758
  - -0.17835497835497835
  train_neg_hamming_loss_samples:
  - -0.1511768778123918
  - -0.15309474412171506
  - -0.15436590436590436
  - -0.15367965367965367
  - -0.1567965367965368
  train_neg_hamming_loss_samples_oob:
  - -0.17705088265835928
  - -0.17764522821576761
  - -0.17792792792792791
  - -0.17757575757575753
  - -0.17835497835497835
  train_neg_hamming_loss_weighted:
  - -0.15479307605170928
  - -0.15677030403329142
  - -0.15822065785781317
  - -0.15729081363510763
  - -0.16044318966058096
  train_neg_hamming_loss_weighted_oob:
  - -0.1797468138424761
  - -0.18021172671146762
  - -0.18054126472123566
  - -0.18016177246351325
  - -0.18098349959219526
  train_neg_label_ranking_loss:
  - -0.03866822429906542
  - -0.03534751037344399
  - -0.04177494802494802
  - -0.04076623376623376
  - -0.039480519480519484
  train_neg_label_ranking_loss_oob:
  - -0.07732346832814121
  - -0.07476659751037344
  - -0.0771887271887272
  - -0.08045454545454546
  - -0.07825974025974025
  train_precision_macro:
  - 0.848823122187608
  - 0.8469052558782849
  - 0.8456340956340958
  - 0.8463203463203463
  - 0.8432034632034632
  train_precision_macro_oob:
  - 0.8229491173416408
  - 0.8223547717842323
  - 0.8220720720720719
  - 0.8224242424242423
  - 0.8216450216450216
  train_precision_micro:
  - 0.8488231221876081
  - 0.8469052558782849
  - 0.8456340956340956
  - 0.8463203463203464
  - 0.8432034632034632
  train_precision_micro_oob:
  - 0.8229491173416407
  - 0.8223547717842323
  - 0.8220720720720721
  - 0.8224242424242424
  - 0.8216450216450216
  train_precision_samples:
  - 0.8488231221876082
  - 0.846905255878285
  - 0.8456340956340956
  - 0.8463203463203465
  - 0.8432034632034633
  train_precision_samples_oob:
  - 0.8229491173416407
  - 0.8223547717842323
  - 0.8220720720720721
  - 0.8224242424242426
  - 0.8216450216450217
  train_precision_weighted:
  - 0.8452069239482908
  - 0.8432296959667087
  - 0.8417793421421869
  - 0.8427091863648923
  - 0.839556810339419
  train_precision_weighted_oob:
  - 0.8202531861575239
  - 0.8197882732885323
  - 0.8194587352787643
  - 0.8198382275364867
  - 0.8190165004078048
  train_recall_macro:
  - 0.848823122187608
  - 0.8469052558782849
  - 0.8456340956340958
  - 0.8463203463203463
  - 0.8432034632034632
  train_recall_macro_oob:
  - 0.8229491173416408
  - 0.8223547717842323
  - 0.8220720720720719
  - 0.8224242424242423
  - 0.8216450216450216
  train_recall_micro:
  - 0.8488231221876081
  - 0.8469052558782849
  - 0.8456340956340956
  - 0.8463203463203464
  - 0.8432034632034632
  train_recall_micro_oob:
  - 0.8229491173416407
  - 0.8223547717842323
  - 0.8220720720720721
  - 0.8224242424242424
  - 0.8216450216450216
  train_recall_samples:
  - 0.8488231221876082
  - 0.846905255878285
  - 0.8456340956340956
  - 0.8463203463203465
  - 0.8432034632034633
  train_recall_samples_oob:
  - 0.8229491173416407
  - 0.8223547717842323
  - 0.8220720720720721
  - 0.8224242424242426
  - 0.8216450216450217
  train_recall_weighted:
  - 0.8452069239482908
  - 0.8432296959667087
  - 0.8417793421421869
  - 0.8427091863648923
  - 0.839556810339419
  train_recall_weighted_oob:
  - 0.8202531861575239
  - 0.8197882732885323
  - 0.8194587352787643
  - 0.8198382275364867
  - 0.8190165004078048
  train_roc_auc_macro:
  - 0.9686740448572903
  - 0.970754294881175
  - 0.9685129145947963
  - 0.9670939689850876
  - 0.9666749619308792
  train_roc_auc_macro_oob:
  - 0.9350818137979476
  - 0.9366850180040687
  - 0.9335887052137538
  - 0.9338178609961466
  - 0.9344804521681912
  train_roc_auc_micro:
  - 0.9728709169980156
  - 0.9751126425108853
  - 0.9720265124859366
  - 0.9716369344012089
  - 0.9716816741066878
  train_roc_auc_micro_oob:
  - 0.9433909789708417
  - 0.9444309681173759
  - 0.9417092557087898
  - 0.9422220948416158
  - 0.9427534193522086
  train_roc_auc_samples:
  - 0.9613317757009346
  - 0.9646524896265561
  - 0.9582250519750519
  - 0.9592337662337663
  - 0.9605194805194806
  train_roc_auc_samples_oob:
  - 0.9226765316718587
  - 0.9252334024896265
  - 0.9228112728112727
  - 0.9195454545454546
  - 0.9217402597402599
  train_roc_auc_weighted:
  - 0.9654869373551818
  - 0.9679760200493878
  - 0.9657751066839366
  - 0.9642311262838014
  - 0.9634577364867664
  train_roc_auc_weighted_oob:
  - 0.9290352213425597
  - 0.9311625709610725
  - 0.9279818783363168
  - 0.9283112803537908
  - 0.9287768263537517
start: 2023-12-22 21:42:03.082115
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
