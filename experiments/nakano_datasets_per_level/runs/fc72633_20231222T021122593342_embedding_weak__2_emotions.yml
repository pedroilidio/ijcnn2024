active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjPzAzMzMzMwPAQDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b9AZmZmZmb2v4AzMzMzM+M/AJmZmZmZ2b/AmZmZmZn5Pw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:11:44.827716
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__2
  params: {}
hash: fc72633d7ee1d07b0153cb4257faf6df534ce71651002bded89b098f5a912cf0
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fc72633_20231222T021122593342_embedding_weak__2_emotions.yml
results:
  fit_time:
  - 8.883296728134155
  - 9.788344144821167
  - 10.242584466934204
  - 10.274859428405762
  - 10.501771688461304
  score_time:
  - 2.099086046218872
  - 2.8030483722686768
  - 2.697972059249878
  - 2.9263625144958496
  - 2.6711535453796387
  test_average_precision_macro:
  - 0.7056089205856395
  - 0.7396585701671755
  - 0.775082228778417
  - 0.6948644108942147
  - 0.713932417264136
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6620220677518336
  - 0.6392052064361754
  - 0.7055147299012736
  - 0.695842535067597
  - 0.678845441981713
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7795284780578899
  - 0.7636805555555557
  - 0.8201035781544257
  - 0.7748832866479926
  - 0.789363722697056
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6958729131907153
  - 0.7257074310581769
  - 0.766831914767848
  - 0.7003946729152607
  - 0.7104255051658407
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8053221288515405
  - 0.7958333333333333
  - 0.8206214689265536
  - 0.799719887955182
  - 0.8105413105413106
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8053221288515406
  - 0.7958333333333333
  - 0.8206214689265536
  - 0.7997198879551821
  - 0.8105413105413105
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8053221288515406
  - 0.7958333333333335
  - 0.8206214689265537
  - 0.799719887955182
  - 0.8105413105413105
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8022358264572799
  - 0.7850301659125188
  - 0.8146564769975788
  - 0.7981672306931824
  - 0.8079436902966314
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6759619552788262
  - 0.6655295696558161
  - 0.7007343915090251
  - 0.6707401480063351
  - 0.6846780717105464
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6740914419695193
  - 0.6608996539792388
  - 0.6958083832335329
  - 0.6662777129521587
  - 0.681437125748503
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7051620648259302
  - 0.6910714285714284
  - 0.7259887005649717
  - 0.703361344537815
  - 0.7104192104192103
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6713949618988164
  - 0.6512501420314751
  - 0.6915974362009976
  - 0.6680227236729726
  - 0.6808565502959812
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7795284780578899
  - 0.7636805555555555
  - 0.8201035781544254
  - 0.7748832866479924
  - 0.789363722697056
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5160930144132044
  - 0.4993065721084773
  - 0.5704297374800124
  - 0.5015870318546285
  - 0.517690522656861
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5225728850912844
  - 0.49655639221769116
  - 0.5706460975069851
  - 0.5163573716055958
  - 0.5425934808735993
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5024482776268797
  - 0.4766695532515207
  - 0.5603506335961282
  - 0.5058568236561453
  - 0.5368374750179626
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5233453894474157
  - 0.49348599444071767
  - 0.5707882620117809
  - 0.5113969329912156
  - 0.5261247074763601
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8472680256967571
  - 0.8347407011430675
  - 0.8782650147183728
  - 0.8425739439146285
  - 0.85801852323908
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.7394957983193278
  - -2.8583333333333334
  - -2.6440677966101696
  - -2.8403361344537816
  - -2.8205128205128207
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19467787114845939
  - -0.2041666666666667
  - -0.17937853107344634
  - -0.2002801120448179
  - -0.18945868945868946
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19467787114845939
  - -0.20416666666666666
  - -0.17937853107344634
  - -0.20028011204481794
  - -0.18945868945868946
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19467787114845936
  - -0.20416666666666666
  - -0.1793785310734463
  - -0.20028011204481794
  - -0.18945868945868946
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.19776417354272025
  - -0.21496983408748113
  - -0.18534352300242132
  - -0.20183276930681776
  - -0.1920563097033685
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.16342203548085898
  - -0.18594907407407407
  - -0.12989642184557437
  - -0.17754435107376282
  - -0.17082146248812916
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8053221288515405
  - 0.7958333333333333
  - 0.8206214689265536
  - 0.799719887955182
  - 0.8105413105413106
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8053221288515406
  - 0.7958333333333333
  - 0.8206214689265536
  - 0.7997198879551821
  - 0.8105413105413105
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8053221288515406
  - 0.7958333333333335
  - 0.8206214689265537
  - 0.799719887955182
  - 0.8105413105413105
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8022358264572799
  - 0.7850301659125188
  - 0.8146564769975788
  - 0.7981672306931824
  - 0.8079436902966314
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8053221288515405
  - 0.7958333333333333
  - 0.8206214689265536
  - 0.799719887955182
  - 0.8105413105413106
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8053221288515406
  - 0.7958333333333333
  - 0.8206214689265536
  - 0.7997198879551821
  - 0.8105413105413105
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8053221288515406
  - 0.7958333333333335
  - 0.8206214689265537
  - 0.799719887955182
  - 0.8105413105413105
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8022358264572799
  - 0.7850301659125188
  - 0.8146564769975788
  - 0.7981672306931824
  - 0.8079436902966314
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8435478939979265
  - 0.8541727273222243
  - 0.8708845748154178
  - 0.8340429949244251
  - 0.8448796262865986
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8603526291153066
  - 0.8515945918987295
  - 0.8743635625737899
  - 0.8483841656494084
  - 0.8543193384822345
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.836577964519141
  - 0.8140509259259259
  - 0.8701035781544255
  - 0.8224556489262371
  - 0.8291785375118709
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8387359423483799
  - 0.844075444449798
  - 0.8670010819311044
  - 0.8375966815775298
  - 0.8426079715463094
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9102652322767311
  - 0.9233416342622522
  - 0.9116665643472092
  - 0.9005234003301705
  - 0.9068056003205501
  train_average_precision_macro_oob:
  - 0.7390967701767767
  - 0.7283331920156432
  - 0.7215073121665078
  - 0.7399000935601453
  - 0.7326717419838401
  train_average_precision_micro:
  - 0.7891219543926368
  - 0.8068209264128225
  - 0.7925310624076037
  - 0.7707196364578459
  - 0.7918944931978561
  train_average_precision_micro_oob:
  - 0.6829303921052299
  - 0.6913070574436094
  - 0.6778109226018194
  - 0.6707794813753638
  - 0.6855890418149492
  train_average_precision_samples:
  - 0.8882794186591656
  - 0.896969696969697
  - 0.8910175438596492
  - 0.8790436005625878
  - 0.8865779645191412
  train_average_precision_samples_oob:
  - 0.7904418659165494
  - 0.7970284237726099
  - 0.7899415204678363
  - 0.7894514767932489
  - 0.7894024276377217
  train_average_precision_weighted:
  - 0.8901929805504286
  - 0.9052454128708839
  - 0.8910612007538719
  - 0.8783152800121308
  - 0.8859372855200839
  train_average_precision_weighted_oob:
  - 0.7327607809041109
  - 0.7243824810232088
  - 0.7159243704827225
  - 0.7302732841702666
  - 0.7253041233578671
  train_f1_macro:
  - 0.8769338959212378
  - 0.8858350951374208
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885154
  train_f1_macro_oob:
  - 0.8087201125175808
  - 0.8114869626497533
  - 0.8021052631578948
  - 0.8108298171589311
  - 0.8084733893557422
  train_f1_micro:
  - 0.8769338959212377
  - 0.8858350951374208
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885154
  train_f1_micro_oob:
  - 0.8087201125175809
  - 0.8114869626497534
  - 0.8021052631578948
  - 0.8108298171589311
  - 0.8084733893557423
  train_f1_samples:
  - 0.8769338959212377
  - 0.8858350951374209
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885155
  train_f1_samples_oob:
  - 0.8087201125175808
  - 0.8114869626497534
  - 0.8021052631578948
  - 0.8108298171589312
  - 0.8084733893557423
  train_f1_weighted:
  - 0.8698119580056989
  - 0.8797214164666514
  - 0.8781590854965469
  - 0.86669615971915
  - 0.876171212566199
  train_f1_weighted_oob:
  - 0.8043659231563276
  - 0.8092556089724491
  - 0.7993022148130507
  - 0.8056978674620278
  - 0.8039870965297055
  train_jaccard_macro:
  - 0.7840908309903316
  - 0.7982668433805458
  - 0.7974198212267355
  - 0.7822338819258047
  - 0.7937645885967691
  train_jaccard_macro_oob:
  - 0.6817150304370965
  - 0.6857730015503383
  - 0.6718691293379869
  - 0.6842412484294406
  - 0.6816508885626936
  train_jaccard_micro:
  - 0.7808390732623669
  - 0.7950664136622391
  - 0.7941454202077431
  - 0.7786116322701688
  - 0.7905956112852665
  train_jaccard_micro_oob:
  - 0.6788665879574971
  - 0.6827749777646013
  - 0.6695957820738138
  - 0.6818450620934359
  - 0.6785189538642374
  train_jaccard_samples:
  - 0.8053747237291541
  - 0.8207892882311486
  - 0.8177844611528822
  - 0.8049226441631504
  - 0.8155962384953981
  train_jaccard_samples_oob:
  - 0.7099357042395017
  - 0.713218564381355
  - 0.6985363408521302
  - 0.7123367490456098
  - 0.7096938775510203
  train_jaccard_weighted:
  - 0.7731665564806355
  - 0.7885897170790688
  - 0.7862914389659037
  - 0.7689049934728392
  - 0.7829465420526688
  train_jaccard_weighted_oob:
  - 0.6753238474204492
  - 0.682149068616615
  - 0.6677018069901675
  - 0.6769150990661164
  - 0.6749120486397279
  train_label_ranking_average_precision_score:
  - 0.8882794186591643
  - 0.8969696969696963
  - 0.8910175438596483
  - 0.879043600562587
  - 0.8865779645191402
  train_label_ranking_average_precision_score_oob:
  - 0.790441865916548
  - 0.7970284237726087
  - 0.7899415204678351
  - 0.7894514767932476
  - 0.7894024276377206
  train_matthews_corrcoef_macro:
  - 0.7185672958647658
  - 0.7385701514041169
  - 0.7365993701191808
  - 0.7198020204976082
  - 0.7326624837704941
  train_matthews_corrcoef_macro_oob:
  - 0.5203585103997251
  - 0.5221311074892043
  - 0.48656815077698257
  - 0.5385040766637715
  - 0.5229003111755239
  train_matthews_corrcoef_micro:
  - 0.7060234760606704
  - 0.727917563913794
  - 0.7254040358682081
  - 0.7039564670849096
  - 0.7201697595572701
  train_matthews_corrcoef_micro_oob:
  - 0.5324794011588599
  - 0.5402094684753836
  - 0.5125808173222448
  - 0.5404664181217603
  - 0.5315677850412931
  train_matthews_corrcoef_samples:
  - 0.6938477464454358
  - 0.7155109979064527
  - 0.7064980749666965
  - 0.6992100117966752
  - 0.7034297427993595
  train_matthews_corrcoef_samples_oob:
  - 0.5212627453316728
  - 0.5244581240253889
  - 0.49568739971495507
  - 0.527739426689954
  - 0.516523983942068
  train_matthews_corrcoef_weighted:
  - 0.7128216407346959
  - 0.7336658431489013
  - 0.7295904778259301
  - 0.7110715905617201
  - 0.7267831233922605
  train_matthews_corrcoef_weighted_oob:
  - 0.5255436091891141
  - 0.5316981740126867
  - 0.49687865921818364
  - 0.543210476160902
  - 0.5276343587968871
  train_ndgc:
  - 0.9195471651974044
  - 0.9264596082562683
  - 0.9215017312097837
  - 0.9135512335371031
  - 0.9182444631922374
  train_ndgc_oob:
  - 0.8553386326344239
  - 0.8613973076187282
  - 0.8546107979010948
  - 0.8545584231765666
  - 0.8537936120316111
  train_neg_coverage_error:
  - -2.1751054852320677
  - -2.1670190274841437
  - -2.1642105263157894
  - -2.19831223628692
  - -2.180672268907563
  train_neg_coverage_error_oob:
  - -2.7721518987341773
  - -2.7568710359408035
  - -2.7578947368421054
  - -2.7447257383966246
  - -2.735294117647059
  train_neg_hamming_loss_macro:
  - -0.12306610407876233
  - -0.1141649048625793
  - -0.11473684210526315
  - -0.12447257383966244
  - -0.11694677871148458
  train_neg_hamming_loss_macro_oob:
  - -0.19127988748241911
  - -0.1885130373502467
  - -0.19789473684210523
  - -0.18917018284106893
  - -0.1915266106442577
  train_neg_hamming_loss_micro:
  - -0.12306610407876231
  - -0.11416490486257928
  - -0.11473684210526315
  - -0.12447257383966245
  - -0.1169467787114846
  train_neg_hamming_loss_micro_oob:
  - -0.19127988748241911
  - -0.18851303735024666
  - -0.19789473684210526
  - -0.18917018284106893
  - -0.19152661064425772
  train_neg_hamming_loss_samples:
  - -0.1230661040787623
  - -0.11416490486257927
  - -0.11473684210526315
  - -0.12447257383966245
  - -0.11694677871148458
  train_neg_hamming_loss_samples_oob:
  - -0.19127988748241911
  - -0.18851303735024663
  - -0.19789473684210526
  - -0.1891701828410689
  - -0.1915266106442577
  train_neg_hamming_loss_weighted:
  - -0.1301880419943012
  - -0.12027858353334876
  - -0.1218409145034532
  - -0.13330384028084996
  - -0.123828787433801
  train_neg_hamming_loss_weighted_oob:
  - -0.19563407684367254
  - -0.19074439102755086
  - -0.20069778518694928
  - -0.1943021325379723
  - -0.19601290347029457
  train_neg_label_ranking_loss:
  - -0.06356071261134552
  - -0.05939041578576462
  - -0.06233333333333334
  - -0.06773909985935303
  - -0.06572712418300654
  train_neg_label_ranking_loss_oob:
  - -0.1637013595874355
  - -0.15832746065304204
  - -0.16429824561403505
  - -0.1610290670417253
  - -0.1596288515406163
  train_precision_macro:
  - 0.8769338959212378
  - 0.8858350951374208
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885154
  train_precision_macro_oob:
  - 0.8087201125175808
  - 0.8114869626497533
  - 0.8021052631578948
  - 0.8108298171589311
  - 0.8084733893557422
  train_precision_micro:
  - 0.8769338959212377
  - 0.8858350951374208
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885154
  train_precision_micro_oob:
  - 0.8087201125175809
  - 0.8114869626497534
  - 0.8021052631578948
  - 0.8108298171589311
  - 0.8084733893557423
  train_precision_samples:
  - 0.8769338959212377
  - 0.8858350951374209
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885155
  train_precision_samples_oob:
  - 0.8087201125175808
  - 0.8114869626497534
  - 0.8021052631578948
  - 0.8108298171589312
  - 0.8084733893557423
  train_precision_weighted:
  - 0.8698119580056989
  - 0.8797214164666514
  - 0.8781590854965469
  - 0.86669615971915
  - 0.876171212566199
  train_precision_weighted_oob:
  - 0.8043659231563276
  - 0.8092556089724491
  - 0.7993022148130507
  - 0.8056978674620278
  - 0.8039870965297055
  train_recall_macro:
  - 0.8769338959212378
  - 0.8858350951374208
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885154
  train_recall_macro_oob:
  - 0.8087201125175808
  - 0.8114869626497533
  - 0.8021052631578948
  - 0.8108298171589311
  - 0.8084733893557422
  train_recall_micro:
  - 0.8769338959212377
  - 0.8858350951374208
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885154
  train_recall_micro_oob:
  - 0.8087201125175809
  - 0.8114869626497534
  - 0.8021052631578948
  - 0.8108298171589311
  - 0.8084733893557423
  train_recall_samples:
  - 0.8769338959212377
  - 0.8858350951374209
  - 0.8852631578947369
  - 0.8755274261603375
  - 0.8830532212885155
  train_recall_samples_oob:
  - 0.8087201125175808
  - 0.8114869626497534
  - 0.8021052631578948
  - 0.8108298171589312
  - 0.8084733893557423
  train_recall_weighted:
  - 0.8698119580056989
  - 0.8797214164666514
  - 0.8781590854965469
  - 0.86669615971915
  - 0.876171212566199
  train_recall_weighted_oob:
  - 0.8043659231563276
  - 0.8092556089724491
  - 0.7993022148130507
  - 0.8056978674620278
  - 0.8039870965297055
  train_roc_auc_macro:
  - 0.9612740084094487
  - 0.9634633351109844
  - 0.9609999911484417
  - 0.9548661371637234
  - 0.9595035188151325
  train_roc_auc_macro_oob:
  - 0.8641347435508558
  - 0.8510786648360402
  - 0.8543197705943558
  - 0.8614751238658286
  - 0.8608296998083937
  train_roc_auc_micro:
  - 0.9476725932232976
  - 0.9512301672833345
  - 0.9493061916839668
  - 0.9418720068853519
  - 0.948748441886444
  train_roc_auc_micro_oob:
  - 0.8643495813888109
  - 0.8630413565269047
  - 0.8610196876309018
  - 0.8627492209908756
  - 0.8663248789151807
  train_roc_auc_samples:
  - 0.9364392873886546
  - 0.9406095842142355
  - 0.9376666666666666
  - 0.932260900140647
  - 0.9342728758169934
  train_roc_auc_samples_oob:
  - 0.8362986404125644
  - 0.8416725393469578
  - 0.835701754385965
  - 0.8389709329582747
  - 0.8403711484593838
  train_roc_auc_weighted:
  - 0.950634387862431
  - 0.9538185248985911
  - 0.9504030105701611
  - 0.9426363054751213
  - 0.9487596647900483
  train_roc_auc_weighted_oob:
  - 0.8601920254477012
  - 0.8493911919882411
  - 0.8513851076625638
  - 0.8559045648426907
  - 0.8570978863070187
start: 2023-12-22 02:11:22.593342
wrapper: null
