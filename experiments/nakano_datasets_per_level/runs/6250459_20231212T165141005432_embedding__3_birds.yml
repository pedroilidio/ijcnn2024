active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            nJmZmZmZ6T+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAADwPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb8yMzMzMzPzv5yZmZmZmek/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j+gmZmZmZnZP8zMzMzMzATAoJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:52:02.453798
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__3
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 62504592f8fe60b6beb6d813556c533fb4f6a3b81314d6e77c0fa225ed402204
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6250459_20231212T165141005432_embedding__3_birds.yml
results:
  fit_time:
  - 8.145461797714233
  - 8.153948307037354
  - 8.214112281799316
  - 8.995970010757446
  - 9.00145673751831
  score_time:
  - 3.0884592533111572
  - 2.9274954795837402
  - 3.304871082305908
  - 3.05409836769104
  - 3.135066032409668
  test_average_precision_macro:
  - 0.505739467910379
  - 0.5344333276847558
  - 0.5306656711006837
  - 0.5971606912186765
  - 0.6184747592631795
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5005729100642683
  - 0.5043335699249494
  - 0.5152351702798181
  - 0.5569414352452743
  - 0.5291202266630606
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3554458784109947
  - 0.350494579709696
  - 0.318651668036073
  - 0.3403935846035709
  - 0.3254396367426463
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5654849034899639
  - 0.5908285891221764
  - 0.5922797444184842
  - 0.639754880338405
  - 0.6403334600350339
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246836
  - 0.9510403916768667
  - 0.9514483884128927
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246838
  - 0.9510403916768666
  - 0.9514483884128927
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246837
  - 0.9510403916768665
  - 0.9514483884128926
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.928850429661679
  - 0.9262969588550984
  - 0.9208029619345137
  - 0.9299389241249707
  - 0.928850429661679
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9106637464778813
  - 0.906284333824177
  - 0.9037085170660605
  - 0.9082240122592463
  - 0.9090971097762196
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9088785046728972
  - 0.9044289044289044
  - 0.9014740108611327
  - 0.9066511085180864
  - 0.9073929961089494
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9139871924502865
  - 0.9098780671075918
  - 0.9078243069142969
  - 0.9128045586589569
  - 0.9122202087318366
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8692791789044647
  - 0.8647814430220041
  - 0.8551856696246649
  - 0.8706549560489711
  - 0.8689702291232168
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7895544055427774
  - 0.7846031068414788
  - 0.8070237610593288
  - 0.8210137396423307
  - 0.7673001018589255
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06873267912958939
  - 0.04350569614881454
  - 0.043437983109056374
  - 0.05721559443881075
  - 0.051318569614017435
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2973225754333953
  - 0.2261331921049461
  - 0.22254048844806945
  - 0.2937035699223821
  - 0.2715515980085394
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.07229592782980622
  - 0.04056032436765543
  - 0.03213296722947928
  - 0.06212626125310375
  - 0.04505044976821283
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.16685075938945296
  - 0.11075061453914936
  - 0.11160285369934739
  - 0.148834517389821
  - 0.13687265409259053
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.4175564420723035
  - 0.41736239520334095
  - 0.3778138699693198
  - 0.398855191423206
  - 0.3902653503612407
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.0
  - -3.0155038759689923
  - -2.992248062015504
  - -2.992248062015504
  - -2.9689922480620154
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04773561811505508
  - -0.05018359853121175
  - -0.05181558547531619
  - -0.04895960832313342
  - -0.0485516115871073
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04773561811505508
  - -0.05018359853121175
  - -0.0518155854753162
  - -0.04895960832313342
  - -0.0485516115871073
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04773561811505508
  - -0.050183598531211744
  - -0.05181558547531619
  - -0.04895960832313341
  - -0.04855161158710731
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07114957033832102
  - -0.07370304114490162
  - -0.07919703806548653
  - -0.07006107587502938
  - -0.07114957033832102
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.08480138825556062
  - -0.08166704666362669
  - -0.07999822668085321
  - -0.07389674215939605
  - -0.09338089141440714
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246836
  - 0.9510403916768667
  - 0.9514483884128927
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246838
  - 0.9510403916768666
  - 0.9514483884128927
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246837
  - 0.9510403916768665
  - 0.9514483884128926
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.928850429661679
  - 0.9262969588550984
  - 0.9208029619345137
  - 0.9299389241249707
  - 0.928850429661679
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246836
  - 0.9510403916768667
  - 0.9514483884128927
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246838
  - 0.9510403916768666
  - 0.9514483884128927
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9522643818849449
  - 0.9498164014687882
  - 0.9481844145246837
  - 0.9510403916768665
  - 0.9514483884128926
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.928850429661679
  - 0.9262969588550984
  - 0.9208029619345137
  - 0.9299389241249707
  - 0.928850429661679
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8934762347703187
  - 0.8838073466022893
  - 0.8966588117095011
  - 0.9274567556444197
  - 0.8816790352074971
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8922640866935081
  - 0.8998840022536704
  - 0.9195176469830391
  - 0.9210801416493526
  - 0.9057214777423899
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8732915168907367
  - 0.890120928181731
  - 0.9033167696543797
  - 0.9193737166310186
  - 0.8928468842378658
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9607445391280829
  - 0.9721969046992753
  - 0.9596028490516598
  - 0.9679805458975542
  - 0.9592246747881691
  train_average_precision_macro_oob:
  - 0.4520611576247505
  - 0.48869192516723065
  - 0.47311532049160543
  - 0.454367710340386
  - 0.4410419422290246
  train_average_precision_micro:
  - 0.9085132120766933
  - 0.9124638519287289
  - 0.9080898045022953
  - 0.9103428967318664
  - 0.9050539769846853
  train_average_precision_micro_oob:
  - 0.5322994970563102
  - 0.5522474433378911
  - 0.5324512563647221
  - 0.5290651222711171
  - 0.5260620477753812
  train_average_precision_samples:
  - 0.5083192598744923
  - 0.5107069798203518
  - 0.5260391288298265
  - 0.525567168081703
  - 0.5038759689922481
  train_average_precision_samples_oob:
  - 0.33008757717317555
  - 0.3355567091235831
  - 0.34200069220375307
  - 0.3352697761418242
  - 0.34052924751801783
  train_average_precision_weighted:
  - 0.9585675488633911
  - 0.9666519502921832
  - 0.9570307414454455
  - 0.966546738376687
  - 0.9592609624383482
  train_average_precision_weighted_oob:
  - 0.567209103494263
  - 0.5949391438509861
  - 0.5673634951131111
  - 0.5697794586591672
  - 0.5571774286883189
  train_f1_macro:
  - 0.9571603427172581
  - 0.9578743370053038
  - 0.9562423500611995
  - 0.956752345981232
  - 0.9566503467972256
  train_f1_macro_oob:
  - 0.951346389228886
  - 0.9506323949408403
  - 0.950734394124847
  - 0.9512443900448795
  - 0.9518563851489187
  train_f1_micro:
  - 0.9571603427172583
  - 0.957874337005304
  - 0.9562423500611995
  - 0.9567523459812322
  - 0.9566503467972256
  train_f1_micro_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.950734394124847
  - 0.9512443900448796
  - 0.9518563851489188
  train_f1_samples:
  - 0.9571603427172584
  - 0.957874337005304
  - 0.9562423500611995
  - 0.9567523459812322
  - 0.9566503467972256
  train_f1_samples_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9507343941248471
  - 0.9512443900448797
  - 0.9518563851489189
  train_f1_weighted:
  - 0.9431967515688447
  - 0.9426334398485117
  - 0.941342426952892
  - 0.9408729097983309
  - 0.9415466961978591
  train_f1_weighted_oob:
  - 0.9294315245478038
  - 0.9265267175572519
  - 0.9274262075134168
  - 0.9286621224271585
  - 0.9304909560723514
  train_jaccard_macro:
  - 0.9187538791854705
  - 0.9201221701250103
  - 0.9171531962049199
  - 0.9181562194729417
  - 0.9179048982760264
  train_jaccard_macro_oob:
  - 0.9088283202835765
  - 0.907749566379183
  - 0.9079112178445239
  - 0.9086943308119161
  - 0.9096537950741844
  train_jaccard_micro:
  - 0.9178403755868545
  - 0.9191543505921503
  - 0.9161536206391088
  - 0.9170903402424716
  - 0.9169029230618829
  train_jaccard_micro_oob:
  - 0.9072074700904581
  - 0.9059097978227061
  - 0.9060950714494022
  - 0.9070219801595021
  - 0.9081354612689763
  train_jaccard_samples:
  - 0.9225222578230668
  - 0.923653569495329
  - 0.9207662899396974
  - 0.9217742753258427
  - 0.9216929514705047
  train_jaccard_samples_oob:
  - 0.9127062952214621
  - 0.911467010127273
  - 0.9115435045237876
  - 0.912373613354402
  - 0.9135438415645696
  train_jaccard_weighted:
  - 0.8930643575855362
  - 0.8922589000531188
  - 0.8899636294134251
  - 0.8891365835753045
  - 0.8902928307760841
  train_jaccard_weighted_oob:
  - 0.869792668539623
  - 0.8651254587793241
  - 0.866801128082903
  - 0.8684534047849257
  - 0.871420485066266
  train_label_ranking_average_precision_score:
  - 0.9695595699520115
  - 0.9719472898978709
  - 0.9737135474344778
  - 0.975179571182478
  - 0.9631782945736433
  train_label_ranking_average_precision_score_oob:
  - 0.7913278872506943
  - 0.7967970192011016
  - 0.7896751108084037
  - 0.7848821792425991
  - 0.799831573099413
  train_matthews_corrcoef_macro:
  - 0.1511255755489191
  - 0.16988090937271694
  - 0.12011530482617783
  - 0.14512291415688786
  - 0.13565401427610138
  train_matthews_corrcoef_macro_oob:
  - 0.07096834874334598
  - 0.0741402783348513
  - 0.05580144476777322
  - 0.06514244457906698
  - 0.07619259021039923
  train_matthews_corrcoef_micro:
  - 0.437423494260735
  - 0.45034021170042005
  - 0.4088046128152282
  - 0.4235440216737411
  - 0.4264680467907353
  train_matthews_corrcoef_micro_oob:
  - 0.29450596473002294
  - 0.2694704557992464
  - 0.26074449993271037
  - 0.28277775345709044
  - 0.30974436529657257
  train_matthews_corrcoef_samples:
  - 0.11924244616080079
  - 0.11347141151150571
  - 0.10935327619792394
  - 0.11074788386007767
  - 0.11607995308691271
  train_matthews_corrcoef_samples_oob:
  - 0.058009525848575084
  - 0.048511718794486486
  - 0.054058589789623954
  - 0.05892469908889497
  - 0.0658627233267119
  train_matthews_corrcoef_weighted:
  - 0.30396052158986886
  - 0.32321587881289193
  - 0.2590628045083304
  - 0.28410999063605075
  - 0.2859318514274584
  train_matthews_corrcoef_weighted_oob:
  - 0.16991166325810436
  - 0.16235138010807235
  - 0.13802880669051562
  - 0.16055759792491736
  - 0.18199864272867808
  train_ndgc:
  - 0.5192396860842338
  - 0.5212635628272493
  - 0.5355212285772909
  - 0.5351622316690825
  - 0.5168634535751188
  train_ndgc_oob:
  - 0.3936627507493102
  - 0.39626113421209236
  - 0.40493614720736926
  - 0.3995031486728774
  - 0.4022871959486166
  train_neg_coverage_error:
  - -1.1647286821705427
  - -1.1686046511627908
  - -1.1356589147286822
  - -1.1627906976744187
  - -1.193798449612403
  train_neg_coverage_error_oob:
  - -3.13953488372093
  - -3.0329457364341086
  - -3.065891472868217
  - -3.1647286821705425
  - -3.050387596899225
  train_neg_hamming_loss_macro:
  - -0.042839657282741736
  - -0.04212566299469604
  - -0.04375764993880049
  - -0.04324765401876785
  - -0.043349653202774376
  train_neg_hamming_loss_macro_oob:
  - -0.04865361077111383
  - -0.04936760505915953
  - -0.049265605875152996
  - -0.048755609955120356
  - -0.04814361485108119
  train_neg_hamming_loss_micro:
  - -0.042839657282741736
  - -0.04212566299469604
  - -0.04375764993880049
  - -0.04324765401876785
  - -0.043349653202774376
  train_neg_hamming_loss_micro_oob:
  - -0.04865361077111383
  - -0.049367605059159526
  - -0.049265605875152996
  - -0.048755609955120356
  - -0.04814361485108119
  train_neg_hamming_loss_samples:
  - -0.042839657282741736
  - -0.04212566299469604
  - -0.043757649938800484
  - -0.04324765401876785
  - -0.04334965320277437
  train_neg_hamming_loss_samples_oob:
  - -0.048653610771113825
  - -0.049367605059159526
  - -0.049265605875152996
  - -0.048755609955120356
  - -0.04814361485108119
  train_neg_hamming_loss_weighted:
  - -0.05680324843115541
  - -0.057366560151488256
  - -0.058657573047107926
  - -0.059127090201669195
  - -0.05845330380214102
  train_neg_hamming_loss_weighted_oob:
  - -0.07056847545219637
  - -0.07347328244274809
  - -0.0725737924865832
  - -0.07133787757284149
  - -0.06950904392764858
  train_neg_label_ranking_loss:
  - -0.005385437319431847
  - -0.005386253338544721
  - -0.004700979974577787
  - -0.005064847942754919
  - -0.006568971257753747
  train_neg_label_ranking_loss_oob:
  - -0.08793431007863292
  - -0.08511264126004206
  - -0.08519421533272423
  - -0.09085315650808126
  - -0.08340842797067148
  train_precision_macro:
  - 0.9571603427172581
  - 0.9578743370053038
  - 0.9562423500611995
  - 0.956752345981232
  - 0.9566503467972256
  train_precision_macro_oob:
  - 0.951346389228886
  - 0.9506323949408403
  - 0.950734394124847
  - 0.9512443900448795
  - 0.9518563851489187
  train_precision_micro:
  - 0.9571603427172583
  - 0.957874337005304
  - 0.9562423500611995
  - 0.9567523459812322
  - 0.9566503467972256
  train_precision_micro_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.950734394124847
  - 0.9512443900448796
  - 0.9518563851489188
  train_precision_samples:
  - 0.9571603427172584
  - 0.957874337005304
  - 0.9562423500611995
  - 0.9567523459812322
  - 0.9566503467972256
  train_precision_samples_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9507343941248471
  - 0.9512443900448797
  - 0.9518563851489189
  train_precision_weighted:
  - 0.9431967515688447
  - 0.9426334398485117
  - 0.941342426952892
  - 0.9408729097983309
  - 0.9415466961978591
  train_precision_weighted_oob:
  - 0.9294315245478038
  - 0.9265267175572519
  - 0.9274262075134168
  - 0.9286621224271585
  - 0.9304909560723514
  train_recall_macro:
  - 0.9571603427172581
  - 0.9578743370053038
  - 0.9562423500611995
  - 0.956752345981232
  - 0.9566503467972256
  train_recall_macro_oob:
  - 0.951346389228886
  - 0.9506323949408403
  - 0.950734394124847
  - 0.9512443900448795
  - 0.9518563851489187
  train_recall_micro:
  - 0.9571603427172583
  - 0.957874337005304
  - 0.9562423500611995
  - 0.9567523459812322
  - 0.9566503467972256
  train_recall_micro_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.950734394124847
  - 0.9512443900448796
  - 0.9518563851489188
  train_recall_samples:
  - 0.9571603427172584
  - 0.957874337005304
  - 0.9562423500611995
  - 0.9567523459812322
  - 0.9566503467972256
  train_recall_samples_oob:
  - 0.9513463892288861
  - 0.9506323949408405
  - 0.9507343941248471
  - 0.9512443900448797
  - 0.9518563851489189
  train_recall_weighted:
  - 0.9431967515688447
  - 0.9426334398485117
  - 0.941342426952892
  - 0.9408729097983309
  - 0.9415466961978591
  train_recall_weighted_oob:
  - 0.9294315245478038
  - 0.9265267175572519
  - 0.9274262075134168
  - 0.9286621224271585
  - 0.9304909560723514
  train_roc_auc_macro:
  - 0.9977294613009756
  - 0.9982519598570978
  - 0.9976817877666441
  - 0.99807476031276
  - 0.9976708688931497
  train_roc_auc_macro_oob:
  - 0.8766416674674176
  - 0.9017162125122006
  - 0.8904459141467422
  - 0.8659119803500228
  - 0.8962771558451055
  train_roc_auc_micro:
  - 0.9941446892368326
  - 0.994282418070545
  - 0.9943471812547642
  - 0.9941079880227953
  - 0.9941982664388096
  train_roc_auc_micro_oob:
  - 0.9071700049779584
  - 0.9156149233350882
  - 0.9069973569084944
  - 0.9044021675867517
  - 0.9117731282619741
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9968764620517795
  - 0.9971762319259426
  - 0.9966280592737775
  - 0.9971081982201596
  - 0.9965368367485754
  train_roc_auc_weighted_oob:
  - 0.898076724104172
  - 0.9113304151053305
  - 0.8959235795121878
  - 0.8941910167192549
  - 0.9012865580327593
start: 2023-12-12 16:51:41.005432
wrapper: null
