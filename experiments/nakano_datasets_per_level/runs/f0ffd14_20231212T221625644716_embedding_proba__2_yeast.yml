active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gGZmZmZm9j9gZmZmZmYawIBmZmZmZvY/QDMzMzMzA0CAZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzC0CAZmZmZmb2PwCamZmZmdk/QDMzMzMzA0BgZmZmZmYewA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBEBoZmZmZmYWQJiZmZmZmRHAgJmZmZmZ2b8wMzMzMzMLwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZJ0AgMzMzMzPzv3BmZmZmZgZAyMzMzMzMEMBkZmZmZmYiwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCYmZmZmem/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AMzMzMzPzv4CZmZmZmQHAgJmZmZmZAcBAMzMzMzMXQA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZAcCgmZmZmZnpP5iZmZmZmQnAaGZmZmZmDkCgmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMKkDAmZmZmZkZQACZmZmZmfm/QGZmZmZmGsAgMzMzMzMnwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 22:19:15.691515
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: f0ffd14462e53ea0ac326239b68c252d8ee14844115393522b4907551fb1494c
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f0ffd14_20231212T221625644716_embedding_proba__2_yeast.yml
results:
  fit_time:
  - 119.62331295013428
  - 116.85922026634216
  - 120.2686595916748
  - 85.97705411911011
  - 119.0468168258667
  score_time:
  - 9.173909425735474
  - 9.101211786270142
  - 8.096244096755981
  - 9.440738439559937
  - 8.508019924163818
  test_average_precision_macro:
  - 0.517766584451501
  - 0.5263802504194175
  - 0.5302217189417735
  - 0.525191829412408
  - 0.4889406091516629
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7349407781463196
  - 0.7310604965751195
  - 0.720748461215377
  - 0.725698529219129
  - 0.6904497748278874
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7758341412213625
  - 0.7752572488210371
  - 0.7646729808310564
  - 0.7700275689042088
  - 0.7488583732307278
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6884786414462071
  - 0.6943971504174965
  - 0.686537997059288
  - 0.6888116155357028
  - 0.6382912837369
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8039513677811551
  - 0.8084755914944596
  - 0.803681885125184
  - 0.8112244897959183
  - 0.7927849927849927
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8039513677811551
  - 0.8084755914944595
  - 0.8036818851251841
  - 0.8112244897959183
  - 0.7927849927849928
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8039513677811551
  - 0.8084755914944594
  - 0.8036818851251841
  - 0.8112244897959183
  - 0.7927849927849927
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7554428256996122
  - 0.75954011416317
  - 0.749956605713999
  - 0.7589981447124305
  - 0.7403947284587751
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6821483711456441
  - 0.6875190834354866
  - 0.6816548767268165
  - 0.6922690463034712
  - 0.6675771328725234
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6721728081321474
  - 0.6785220560512756
  - 0.6717961344330913
  - 0.6824034334763949
  - 0.6567057136026775
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.698977895247732
  - 0.7068119008846788
  - 0.6983367878136637
  - 0.7105625932503228
  - 0.6836719552037491
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6110677740660863
  - 0.6155317111909813
  - 0.6048496333056789
  - 0.6167557593619439
  - 0.5923410234445425
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7758341412213622
  - 0.7752572488210365
  - 0.7646729808310558
  - 0.7700275689042093
  - 0.7488583732307275
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.234086350202579
  - 0.2587581657368601
  - 0.24623049214666612
  - 0.2453150822737161
  - 0.21074150485544024
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5251845772636066
  - 0.5350550943293949
  - 0.5183027281499202
  - 0.5364739131551086
  - 0.48873404622724514
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5274820865336836
  - 0.5345812932885943
  - 0.5197969715717622
  - 0.5366173677217881
  - 0.49226344952292905
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2608533891886036
  - 0.2828491421145534
  - 0.2523176299972489
  - 0.27135329637368627
  - 0.24853742092671297
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.866046888190865
  - 0.8613694038028408
  - 0.8568175718179132
  - 0.8555630753661522
  - 0.8455381223332311
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.025531914893617
  - -7.0083857442348005
  - -7.185567010309279
  - -6.93265306122449
  - -7.151515151515151
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.196048632218845
  - -0.19152440850554056
  - -0.19631811487481587
  - -0.1887755102040816
  - -0.2072150072150072
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.196048632218845
  - -0.1915244085055406
  - -0.1963181148748159
  - -0.18877551020408162
  - -0.2072150072150072
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19604863221884497
  - -0.19152440850554056
  - -0.19631811487481587
  - -0.18877551020408162
  - -0.20721500721500719
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.24455717430038781
  - -0.24045988583682995
  - -0.2500433942860009
  - -0.24100185528756957
  - -0.259605271541225
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1559667451764716
  - -0.15979766423387268
  - -0.16379793296214504
  - -0.16458742626016679
  - -0.1730379316851178
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8039513677811551
  - 0.8084755914944596
  - 0.803681885125184
  - 0.8112244897959183
  - 0.7927849927849927
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8039513677811551
  - 0.8084755914944595
  - 0.8036818851251841
  - 0.8112244897959183
  - 0.7927849927849928
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8039513677811551
  - 0.8084755914944594
  - 0.8036818851251841
  - 0.8112244897959183
  - 0.7927849927849927
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7554428256996122
  - 0.75954011416317
  - 0.749956605713999
  - 0.7589981447124305
  - 0.7403947284587751
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8039513677811551
  - 0.8084755914944596
  - 0.803681885125184
  - 0.8112244897959183
  - 0.7927849927849927
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8039513677811551
  - 0.8084755914944595
  - 0.8036818851251841
  - 0.8112244897959183
  - 0.7927849927849928
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8039513677811551
  - 0.8084755914944594
  - 0.8036818851251841
  - 0.8112244897959183
  - 0.7927849927849927
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7554428256996122
  - 0.75954011416317
  - 0.749956605713999
  - 0.7589981447124305
  - 0.7403947284587751
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7135315511410635
  - 0.7217781431166774
  - 0.7255113487467824
  - 0.7335363027299463
  - 0.6992002788561615
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8531807502841985
  - 0.8530365517704552
  - 0.8461219319813883
  - 0.8514135417187001
  - 0.8326769811566685
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8440332548235284
  - 0.8402023357661274
  - 0.8362020670378549
  - 0.8354125737398332
  - 0.8269620683148822
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7203442041711288
  - 0.7175513141960418
  - 0.7148580479852787
  - 0.7279455778952849
  - 0.700921527609714
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9955246548195609
  - 0.9953072262849229
  - 0.9952247029767566
  - 0.9957338079547231
  - 0.9952075326717981
  train_average_precision_macro_oob:
  - 0.940560094788732
  - 0.9476849444493514
  - 0.9395304394897398
  - 0.9541955261855845
  - 0.946955508472031
  train_average_precision_micro:
  - 0.9929041474447275
  - 0.992983984163201
  - 0.9933998994982622
  - 0.9934674043230238
  - 0.9931039156518547
  train_average_precision_micro_oob:
  - 0.9625333902815892
  - 0.9626143791256764
  - 0.9652699610180956
  - 0.9650750124361982
  - 0.9631757562009775
  train_average_precision_samples:
  - 0.989505191136547
  - 0.989722402995875
  - 0.9916572133080285
  - 0.9913616439994878
  - 0.9915350814039866
  train_average_precision_samples_oob:
  - 0.9599495605169516
  - 0.9618857716635852
  - 0.9642428128849645
  - 0.9620125085541041
  - 0.962842680539652
  train_average_precision_weighted:
  - 0.9960095846102047
  - 0.9958393265168546
  - 0.9957303736228187
  - 0.9961985837825161
  - 0.9958980272719666
  train_average_precision_weighted_oob:
  - 0.9685489960803018
  - 0.9687818836958673
  - 0.9691576000758839
  - 0.9712414664454239
  - 0.9685691848772624
  train_f1_macro:
  - 0.9667987379851786
  - 0.96620029455081
  - 0.9671325051759833
  - 0.9665653495440729
  - 0.9669986621079232
  train_f1_macro_oob:
  - 0.9343678919950108
  - 0.9353460972017672
  - 0.9361135758651287
  - 0.9359478093261175
  - 0.9361899806748922
  train_f1_micro:
  - 0.9667987379851787
  - 0.96620029455081
  - 0.9671325051759835
  - 0.9665653495440729
  - 0.9669986621079233
  train_f1_micro_oob:
  - 0.9343678919950107
  - 0.9353460972017673
  - 0.9361135758651287
  - 0.9359478093261175
  - 0.9361899806748922
  train_f1_samples:
  - 0.9667987379851788
  - 0.9662002945508101
  - 0.9671325051759835
  - 0.9665653495440729
  - 0.9669986621079233
  train_f1_samples_oob:
  - 0.9343678919950108
  - 0.9353460972017673
  - 0.9361135758651287
  - 0.9359478093261178
  - 0.9361899806748922
  train_f1_weighted:
  - 0.9705962106152837
  - 0.9701878498509987
  - 0.9707702996430305
  - 0.9702758368048158
  - 0.9695567855407341
  train_f1_weighted_oob:
  - 0.9401055256965789
  - 0.9403812998348905
  - 0.9420700848137935
  - 0.9417415975984953
  - 0.9415116817496036
  train_jaccard_macro:
  - 0.9360324732865174
  - 0.9349440989585039
  - 0.936690898376896
  - 0.9355806754379826
  - 0.9363701786038633
  train_jaccard_macro_oob:
  - 0.8778806981943938
  - 0.8794506182347794
  - 0.8809246987781242
  - 0.8805597112416466
  - 0.8810701580973198
  train_jaccard_micro:
  - 0.9357312786279871
  - 0.9346107272597763
  - 0.9363568028063142
  - 0.9352941176470588
  - 0.9361059145200749
  train_jaccard_micro_oob:
  - 0.8768203256790719
  - 0.8785447503112463
  - 0.8798999165971643
  - 0.8796070507907755
  - 0.8800349344978166
  train_jaccard_samples:
  - 0.9420874537472115
  - 0.9411676756070488
  - 0.9426054390736717
  - 0.9418836375307961
  - 0.9423591087858186
  train_jaccard_samples_oob:
  - 0.8887346378373298
  - 0.8907814677688765
  - 0.8918742045508771
  - 0.8916224174098667
  - 0.892246409091446
  train_jaccard_weighted:
  - 0.943180750311415
  - 0.9424287353342935
  - 0.9435335249127993
  - 0.9425835069932175
  - 0.9411904111392323
  train_jaccard_weighted_oob:
  - 0.8881940604122284
  - 0.8884141860355611
  - 0.8917271951533188
  - 0.8910598818768153
  - 0.8907637260020626
  train_label_ranking_average_precision_score:
  - 0.9895051911365471
  - 0.9897224029958746
  - 0.9916572133080289
  - 0.9913616439994878
  - 0.9915350814039869
  train_label_ranking_average_precision_score_oob:
  - 0.9599495605169515
  - 0.9618857716635855
  - 0.9642428128849653
  - 0.9620125085541038
  - 0.9628426805396523
  train_matthews_corrcoef_macro:
  - 0.8045244543352089
  - 0.7984883511706297
  - 0.8003889883693286
  - 0.8026197992936038
  - 0.8079098128428275
  train_matthews_corrcoef_macro_oob:
  - 0.6736407494432678
  - 0.6711870734078652
  - 0.6698381014903845
  - 0.6812781505990996
  - 0.6812281656873501
  train_matthews_corrcoef_micro:
  - 0.9208831253272666
  - 0.9194955061536478
  - 0.9218861858089316
  - 0.9207463613820429
  - 0.9217884341607885
  train_matthews_corrcoef_micro_oob:
  - 0.8421645397398776
  - 0.8446775859394362
  - 0.8469781405678003
  - 0.8469602999226064
  - 0.8476165758056116
  train_matthews_corrcoef_samples:
  - 0.9216898346456288
  - 0.9231360638783331
  - 0.9254314531445756
  - 0.9234967481843759
  - 0.9252450267743891
  train_matthews_corrcoef_samples_oob:
  - 0.838477615500288
  - 0.8433885947819492
  - 0.8425908322295064
  - 0.843587703753097
  - 0.8467673530715784
  train_matthews_corrcoef_weighted:
  - 0.9128384319277026
  - 0.9103835835022278
  - 0.9129893947403463
  - 0.9114814296384512
  - 0.9113559122184614
  train_matthews_corrcoef_weighted_oob:
  - 0.8220232377202457
  - 0.8205063491812538
  - 0.8263334021752433
  - 0.8271110963579088
  - 0.8275725496872397
  train_ndgc:
  - 0.9942395285474954
  - 0.9943909192721443
  - 0.9958123841724296
  - 0.9954499036882529
  - 0.995791875681831
  train_ndgc_oob:
  - 0.9776930819126015
  - 0.9799202540054263
  - 0.9807279795068757
  - 0.9796165677805786
  - 0.9801087542142028
  train_neg_coverage_error:
  - -4.33025166923472
  - -4.3391752577319584
  - -4.342650103519669
  - -4.357550596782564
  - -4.36888657648283
  train_neg_coverage_error_oob:
  - -4.749871597329224
  - -4.754639175257732
  - -4.746894409937888
  - -4.772184743124027
  - -4.77783558792924
  train_neg_hamming_loss_macro:
  - -0.033201262014821334
  - -0.03379970544918998
  - -0.03286749482401657
  - -0.03343465045592704
  - -0.03300133789207671
  train_neg_hamming_loss_macro_oob:
  - -0.06563210800498935
  - -0.06465390279823267
  - -0.06388642413487135
  - -0.06405219067388242
  - -0.06381001932510777
  train_neg_hamming_loss_micro:
  - -0.033201262014821334
  - -0.03379970544918998
  - -0.03286749482401656
  - -0.03343465045592705
  - -0.0330013378920767
  train_neg_hamming_loss_micro_oob:
  - -0.06563210800498936
  - -0.0646539027982327
  - -0.06388642413487133
  - -0.06405219067388242
  - -0.06381001932510777
  train_neg_hamming_loss_samples:
  - -0.033201262014821334
  - -0.033799705449189976
  - -0.03286749482401656
  - -0.03343465045592704
  - -0.0330013378920767
  train_neg_hamming_loss_samples_oob:
  - -0.06563210800498935
  - -0.06465390279823269
  - -0.06388642413487133
  - -0.06405219067388242
  - -0.06381001932510776
  train_neg_hamming_loss_weighted:
  - -0.029403789384716168
  - -0.02981215014900129
  - -0.029229700356969607
  - -0.02972416319518432
  - -0.03044321445926589
  train_neg_hamming_loss_weighted_oob:
  - -0.05989447430342138
  - -0.059618700165109534
  - -0.05792991518620641
  - -0.05825840240150483
  - -0.058488318250396264
  train_neg_label_ranking_loss:
  - -0.004780570722679462
  - -0.004804348102396703
  - -0.004002626534791575
  - -0.004072286330978598
  - -0.004314217445999815
  train_neg_label_ranking_loss_oob:
  - -0.02254456366551898
  - -0.02197188550281334
  - -0.020403370619652784
  - -0.021943130777180745
  - -0.021388793226165013
  train_precision_macro:
  - 0.9667987379851786
  - 0.96620029455081
  - 0.9671325051759833
  - 0.9665653495440729
  - 0.9669986621079232
  train_precision_macro_oob:
  - 0.9343678919950108
  - 0.9353460972017672
  - 0.9361135758651287
  - 0.9359478093261175
  - 0.9361899806748922
  train_precision_micro:
  - 0.9667987379851787
  - 0.96620029455081
  - 0.9671325051759835
  - 0.9665653495440729
  - 0.9669986621079233
  train_precision_micro_oob:
  - 0.9343678919950107
  - 0.9353460972017673
  - 0.9361135758651287
  - 0.9359478093261175
  - 0.9361899806748922
  train_precision_samples:
  - 0.9667987379851788
  - 0.9662002945508101
  - 0.9671325051759835
  - 0.9665653495440729
  - 0.9669986621079233
  train_precision_samples_oob:
  - 0.9343678919950108
  - 0.9353460972017673
  - 0.9361135758651287
  - 0.9359478093261178
  - 0.9361899806748922
  train_precision_weighted:
  - 0.9705962106152837
  - 0.9701878498509987
  - 0.9707702996430305
  - 0.9702758368048158
  - 0.9695567855407341
  train_precision_weighted_oob:
  - 0.9401055256965789
  - 0.9403812998348905
  - 0.9420700848137935
  - 0.9417415975984953
  - 0.9415116817496036
  train_recall_macro:
  - 0.9667987379851786
  - 0.96620029455081
  - 0.9671325051759833
  - 0.9665653495440729
  - 0.9669986621079232
  train_recall_macro_oob:
  - 0.9343678919950108
  - 0.9353460972017672
  - 0.9361135758651287
  - 0.9359478093261175
  - 0.9361899806748922
  train_recall_micro:
  - 0.9667987379851787
  - 0.96620029455081
  - 0.9671325051759835
  - 0.9665653495440729
  - 0.9669986621079233
  train_recall_micro_oob:
  - 0.9343678919950107
  - 0.9353460972017673
  - 0.9361135758651287
  - 0.9359478093261175
  - 0.9361899806748922
  train_recall_samples:
  - 0.9667987379851788
  - 0.9662002945508101
  - 0.9671325051759835
  - 0.9665653495440729
  - 0.9669986621079233
  train_recall_samples_oob:
  - 0.9343678919950108
  - 0.9353460972017673
  - 0.9361135758651287
  - 0.9359478093261178
  - 0.9361899806748922
  train_recall_weighted:
  - 0.9705962106152837
  - 0.9701878498509987
  - 0.9707702996430305
  - 0.9702758368048158
  - 0.9695567855407341
  train_recall_weighted_oob:
  - 0.9401055256965789
  - 0.9403812998348905
  - 0.9420700848137935
  - 0.9417415975984953
  - 0.9415116817496036
  train_roc_auc_macro:
  - 0.9981047468585041
  - 0.9980163176250068
  - 0.9979780471211067
  - 0.9981831149821552
  - 0.9980452613858682
  train_roc_auc_macro_oob:
  - 0.9817112520418801
  - 0.9816005604265502
  - 0.9810691033520534
  - 0.9831176710604251
  - 0.9807140540938245
  train_roc_auc_micro:
  - 0.99683845223691
  - 0.9968951356808178
  - 0.9970170785104657
  - 0.9970486144101655
  - 0.9968603617976143
  train_roc_auc_micro_oob:
  - 0.9807082413042874
  - 0.9808460365916446
  - 0.9816665441744212
  - 0.9817564446346648
  - 0.9810868191293921
  train_roc_auc_samples:
  - 0.9952194292773205
  - 0.9951956518976034
  - 0.9959973734652084
  - 0.9959277136690213
  - 0.9956857825540002
  train_roc_auc_samples_oob:
  - 0.9774554363344811
  - 0.9780281144971866
  - 0.9795966293803472
  - 0.9780568692228193
  - 0.9786220461772343
  train_roc_auc_weighted:
  - 0.997929203864534
  - 0.9977877036204941
  - 0.9977796609643916
  - 0.9979716939046952
  - 0.9978472004861144
  train_roc_auc_weighted_oob:
  - 0.9811261944620024
  - 0.9810887683117843
  - 0.9816037190031143
  - 0.9823583445790545
  - 0.9799117850282189
start: 2023-12-12 22:16:25.644716
wrapper: null
