active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZ2b8AMzMzMzMDwAA0MzMzM+M/AM3MzMzMDEAAZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:09:19.995517
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 775ed5597633ec67b7381e790fcf098800c27816fdd25676800169f9df98ba19
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/775ed55_20231212T160757568841_embedding__7_PlantGO.yml
results:
  fit_time:
  - 35.43863558769226
  - 37.55048131942749
  - 40.37995147705078
  - 41.159785747528076
  - 39.4855592250824
  score_time:
  - 8.680088520050049
  - 8.208911180496216
  - 9.333183288574219
  - 9.088821172714233
  - 9.012009143829346
  test_average_precision_macro:
  - 0.7691369239194343
  - 0.7232196977430542
  - 0.8337337515477178
  - 0.742135696970308
  - 0.8044384003182911
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8020544810737661
  - 0.793900834737506
  - 0.8526779318217635
  - 0.8032292956281861
  - 0.8594046913595519
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8498926951733073
  - 0.8530104435407465
  - 0.8857775557775557
  - 0.8615907963564213
  - 0.8866106679558456
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8390563463484826
  - 0.839905940634021
  - 0.8989171488851309
  - 0.8289710931985981
  - 0.8891303812460564
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9464285714285713
  - 0.9478114478114478
  - 0.9470085470085471
  - 0.9440104166666666
  - 0.9488155668358714
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9464285714285714
  - 0.9478114478114478
  - 0.947008547008547
  - 0.9440104166666666
  - 0.9488155668358714
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9464285714285714
  - 0.9478114478114479
  - 0.9470085470085471
  - 0.9440104166666666
  - 0.9488155668358713
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9251700680272107
  - 0.9279650969791814
  - 0.926017742131486
  - 0.918172393364929
  - 0.9284263959390864
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8999995371514058
  - 0.9029246187335062
  - 0.9012351517045812
  - 0.8959485444718823
  - 0.9045762216437555
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8983050847457628
  - 0.9008
  - 0.8993506493506493
  - 0.8939580764488286
  - 0.90261569416499
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9037900874635568
  - 0.9059385059385059
  - 0.9045139475908706
  - 0.8996108058608058
  - 0.9070675517376025
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8623642957432547
  - 0.86833059187741
  - 0.8644681199570821
  - 0.8506309702623432
  - 0.8688577037920467
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8498926951733072
  - 0.8530104435407468
  - 0.8857775557775557
  - 0.8615907963564212
  - 0.8866106679558454
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.24586311700260266
  - 0.2799611190070255
  - 0.254417705044845
  - 0.24749637846482578
  - 0.26094322421203614
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6156211589535184
  - 0.6283377175730643
  - 0.6239100148216622
  - 0.6059070260772075
  - 0.632614445954506
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4838815377835282
  - 0.48553590033176025
  - 0.48274927315737715
  - 0.47845510933833996
  - 0.4588907238057663
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5200918311388737
  - 0.5323461138925738
  - 0.5193163414839216
  - 0.5019322141585931
  - 0.5331475980928797
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8883010526242112
  - 0.8902121183485924
  - 0.9152606338391076
  - 0.8980455222814795
  - 0.9160877629812495
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.596938775510204
  - -1.6818181818181819
  - -1.4820512820512821
  - -1.6770833333333333
  - -1.517766497461929
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.053571428571428575
  - -0.0521885521885522
  - -0.052991452991453
  - -0.055989583333333336
  - -0.051184433164128594
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05357142857142857
  - -0.05218855218855219
  - -0.05299145299145299
  - -0.055989583333333336
  - -0.051184433164128594
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05357142857142857
  - -0.05218855218855218
  - -0.052991452991452984
  - -0.055989583333333336
  - -0.05118443316412859
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07482993197278912
  - -0.07203490302081852
  - -0.07398225786851378
  - -0.08182760663507109
  - -0.07157360406091369
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04568645640074212
  - -0.052080570009862936
  - -0.034452214452214455
  - -0.049337121212121214
  - -0.03897092754960775
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9464285714285713
  - 0.9478114478114478
  - 0.9470085470085471
  - 0.9440104166666666
  - 0.9488155668358714
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9464285714285714
  - 0.9478114478114478
  - 0.947008547008547
  - 0.9440104166666666
  - 0.9488155668358714
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9464285714285714
  - 0.9478114478114479
  - 0.9470085470085471
  - 0.9440104166666666
  - 0.9488155668358713
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9251700680272107
  - 0.9279650969791814
  - 0.926017742131486
  - 0.918172393364929
  - 0.9284263959390864
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9464285714285713
  - 0.9478114478114478
  - 0.9470085470085471
  - 0.9440104166666666
  - 0.9488155668358714
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9464285714285714
  - 0.9478114478114478
  - 0.947008547008547
  - 0.9440104166666666
  - 0.9488155668358714
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9464285714285714
  - 0.9478114478114479
  - 0.9470085470085471
  - 0.9440104166666666
  - 0.9488155668358713
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9251700680272107
  - 0.9279650969791814
  - 0.926017742131486
  - 0.918172393364929
  - 0.9284263959390864
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9737696938191629
  - 0.9541480793388644
  - 0.9857097156110856
  - 0.9563246532957681
  - 0.9803650211557745
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9701369436663554
  - 0.9577877187613275
  - 0.9760829350494971
  - 0.9622506074185448
  - 0.9760578326037936
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9543135435992578
  - 0.947919429990137
  - 0.9655477855477855
  - 0.9506628787878787
  - 0.9610290724503922
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9716859387399924
  - 0.968953442792162
  - 0.9838963965303664
  - 0.9640983429383514
  - 0.98019905797662
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9612899359730153
  - 0.969947394580745
  - 0.9595558731590166
  - 0.9527348443437837
  - 0.9584820653514866
  train_average_precision_macro_oob:
  - 0.7621887861232978
  - 0.7630227805365418
  - 0.7313994488679665
  - 0.7535990345908083
  - 0.7296212856560252
  train_average_precision_micro:
  - 0.9610895565698006
  - 0.961293697482038
  - 0.9546376552966563
  - 0.9608836774180534
  - 0.9576184418971142
  train_average_precision_micro_oob:
  - 0.8438523777628105
  - 0.8304528174000089
  - 0.8247859159993827
  - 0.8307760603068501
  - 0.8309651345029803
  train_average_precision_samples:
  - 0.9635549872122762
  - 0.9629273504273504
  - 0.957960834397616
  - 0.963507209499576
  - 0.9603072983354674
  train_average_precision_samples_oob:
  - 0.8849790377283984
  - 0.8724236874236873
  - 0.8814166109185266
  - 0.8750509915586253
  - 0.8696654675527914
  train_average_precision_weighted:
  - 0.9755347845834553
  - 0.9803602843729275
  - 0.9726505896935526
  - 0.9711656315328702
  - 0.973456725695985
  train_average_precision_weighted_oob:
  - 0.865711209526488
  - 0.8604818799405795
  - 0.8455255086635635
  - 0.8581776715309826
  - 0.8509601165604886
  train_f1_macro:
  - 0.9643009377664109
  - 0.962713675213675
  - 0.9632822477650064
  - 0.9633163698049193
  - 0.964148527528809
  train_f1_macro_oob:
  - 0.9501278772378515
  - 0.9427350427350425
  - 0.9466794380587484
  - 0.9472010178117047
  - 0.9455825864276569
  train_f1_micro:
  - 0.9643009377664109
  - 0.9627136752136752
  - 0.9632822477650064
  - 0.9633163698049194
  - 0.9641485275288092
  train_f1_micro_oob:
  - 0.9501278772378516
  - 0.9427350427350427
  - 0.9466794380587484
  - 0.9472010178117048
  - 0.9455825864276568
  train_f1_samples:
  - 0.9643009377664108
  - 0.9627136752136751
  - 0.9632822477650064
  - 0.9633163698049194
  - 0.9641485275288092
  train_f1_samples_oob:
  - 0.9501278772378516
  - 0.9427350427350426
  - 0.9466794380587484
  - 0.9472010178117048
  - 0.9455825864276568
  train_f1_weighted:
  - 0.9605729505591792
  - 0.9571380717461478
  - 0.9591103605648464
  - 0.9594186775683466
  - 0.9596269386085207
  train_f1_weighted_oob:
  - 0.9328137532347645
  - 0.9172148121079237
  - 0.9266673930017614
  - 0.9281592561774177
  - 0.9248043397555857
  train_jaccard_macro:
  - 0.9313582488698845
  - 0.9285423111799846
  - 0.9295395868112909
  - 0.9295108371153752
  - 0.9311137891086961
  train_jaccard_macro_oob:
  - 0.9062760192746374
  - 0.8941706855445287
  - 0.9007255089882027
  - 0.9013847491216636
  - 0.8984583394095668
  train_jaccard_micro:
  - 0.9310628665500565
  - 0.9281079410855907
  - 0.9291653834308593
  - 0.9292288811617918
  - 0.930778739184178
  train_jaccard_micro_oob:
  - 0.904993909866017
  - 0.8916734033953112
  - 0.898757199151258
  - 0.8996978851963746
  - 0.896782027929569
  train_jaccard_samples:
  - 0.9353981057305866
  - 0.9323696816004509
  - 0.9334652576031887
  - 0.9336297290495763
  - 0.9350339801044028
  train_jaccard_samples_oob:
  - 0.9099350777100137
  - 0.8965004226542688
  - 0.9035717794338485
  - 0.9044375471856388
  - 0.9017996088418622
  train_jaccard_weighted:
  - 0.9245273734301392
  - 0.9183584141320319
  - 0.9218648716854988
  - 0.9222807159910611
  - 0.9227934586733301
  train_jaccard_weighted_oob:
  - 0.8755199315061005
  - 0.8498315685851071
  - 0.8656902276751706
  - 0.8677281007164068
  - 0.8617431191046896
  train_label_ranking_average_precision_score:
  - 0.9635549872122762
  - 0.9629273504273504
  - 0.9579608343976161
  - 0.963507209499576
  - 0.9603072983354674
  train_label_ranking_average_precision_score_oob:
  - 0.884979037728399
  - 0.8724236874236877
  - 0.8814166109185271
  - 0.8750509915586254
  - 0.8696654675527918
  train_matthews_corrcoef_macro:
  - 0.3873950131303301
  - 0.3585125761778794
  - 0.350386652940833
  - 0.35524150363396023
  - 0.4151306459903255
  train_matthews_corrcoef_macro_oob:
  - 0.24145082054832934
  - 0.22344663200175466
  - 0.22296809928614444
  - 0.24986339751777098
  - 0.24050764638891686
  train_matthews_corrcoef_micro:
  - 0.7615388755740107
  - 0.7495651548365465
  - 0.7533377949552267
  - 0.7525801670345452
  - 0.7607882655284066
  train_matthews_corrcoef_micro_oob:
  - 0.6494190690239791
  - 0.5836665253744571
  - 0.6185844599139935
  - 0.6214387023989378
  - 0.610537737888167
  train_matthews_corrcoef_samples:
  - 0.6478034134128565
  - 0.6236293902364812
  - 0.6327147991644259
  - 0.6322567167207636
  - 0.6408535170763823
  train_matthews_corrcoef_samples_oob:
  - 0.5032443351842383
  - 0.4184337977705077
  - 0.4604271654236074
  - 0.4576194984221666
  - 0.4519550443934188
  train_matthews_corrcoef_weighted:
  - 0.6897851654456371
  - 0.6658002557169794
  - 0.6659682225734905
  - 0.6676638917381024
  - 0.6966077899260802
  train_matthews_corrcoef_weighted_oob:
  - 0.538438701510567
  - 0.47711612302036355
  - 0.5041169573019659
  - 0.5214679347695252
  - 0.5087313222597105
  train_ndgc:
  - 0.9732646669700276
  - 0.9726651913711416
  - 0.9690490432940291
  - 0.9730390029917114
  - 0.9708283725632969
  train_ndgc_oob:
  - 0.9148424134744901
  - 0.905244830382824
  - 0.9119665675428301
  - 0.9073750085174722
  - 0.9032588795440005
  train_neg_coverage_error:
  - -1.1662404092071612
  - -1.162820512820513
  - -1.1762452107279693
  - -1.1603053435114503
  - -1.175416133162612
  train_neg_coverage_error_oob:
  - -1.581841432225064
  - -1.6128205128205129
  - -1.607918263090677
  - -1.5737913486005088
  - -1.6338028169014085
  train_neg_hamming_loss_macro:
  - -0.03569906223358909
  - -0.03728632478632478
  - -0.036717752234993614
  - -0.03668363019508057
  - -0.03585147247119078
  train_neg_hamming_loss_macro_oob:
  - -0.049872122762148335
  - -0.05726495726495726
  - -0.0533205619412516
  - -0.05279898218829518
  - -0.054417413572343164
  train_neg_hamming_loss_micro:
  - -0.03569906223358909
  - -0.037286324786324786
  - -0.036717752234993614
  - -0.03668363019508058
  - -0.03585147247119078
  train_neg_hamming_loss_micro_oob:
  - -0.049872122762148335
  - -0.05726495726495726
  - -0.05332056194125159
  - -0.052798982188295165
  - -0.05441741357234315
  train_neg_hamming_loss_samples:
  - -0.03569906223358908
  - -0.037286324786324786
  - -0.036717752234993614
  - -0.03668363019508058
  - -0.035851472471190776
  train_neg_hamming_loss_samples_oob:
  - -0.049872122762148335
  - -0.05726495726495727
  - -0.05332056194125159
  - -0.052798982188295165
  - -0.05441741357234315
  train_neg_hamming_loss_weighted:
  - -0.03942704944082084
  - -0.04286192825385225
  - -0.04088963943515342
  - -0.04058132243165346
  - -0.040373061391479594
  train_neg_hamming_loss_weighted_oob:
  - -0.06718624676523555
  - -0.08278518789207626
  - -0.07333260699823865
  - -0.07184074382258239
  - -0.07519566024441432
  train_neg_label_ranking_loss:
  - -0.00752236775254678
  - -0.007482517482517482
  - -0.008714432533078766
  - -0.007767454014273353
  - -0.008242044861763172
  train_neg_label_ranking_loss_oob:
  - -0.04235922739759057
  - -0.046186437019770356
  - -0.0448634923092139
  - -0.042847688076695714
  - -0.04733894644265963
  train_precision_macro:
  - 0.9643009377664109
  - 0.962713675213675
  - 0.9632822477650064
  - 0.9633163698049193
  - 0.964148527528809
  train_precision_macro_oob:
  - 0.9501278772378515
  - 0.9427350427350425
  - 0.9466794380587484
  - 0.9472010178117047
  - 0.9455825864276569
  train_precision_micro:
  - 0.9643009377664109
  - 0.9627136752136752
  - 0.9632822477650064
  - 0.9633163698049194
  - 0.9641485275288092
  train_precision_micro_oob:
  - 0.9501278772378516
  - 0.9427350427350427
  - 0.9466794380587484
  - 0.9472010178117048
  - 0.9455825864276568
  train_precision_samples:
  - 0.9643009377664108
  - 0.9627136752136751
  - 0.9632822477650064
  - 0.9633163698049194
  - 0.9641485275288092
  train_precision_samples_oob:
  - 0.9501278772378516
  - 0.9427350427350426
  - 0.9466794380587484
  - 0.9472010178117048
  - 0.9455825864276568
  train_precision_weighted:
  - 0.9605729505591792
  - 0.9571380717461478
  - 0.9591103605648464
  - 0.9594186775683466
  - 0.9596269386085207
  train_precision_weighted_oob:
  - 0.9328137532347645
  - 0.9172148121079237
  - 0.9266673930017614
  - 0.9281592561774177
  - 0.9248043397555857
  train_recall_macro:
  - 0.9643009377664109
  - 0.962713675213675
  - 0.9632822477650064
  - 0.9633163698049193
  - 0.964148527528809
  train_recall_macro_oob:
  - 0.9501278772378515
  - 0.9427350427350425
  - 0.9466794380587484
  - 0.9472010178117047
  - 0.9455825864276569
  train_recall_micro:
  - 0.9643009377664109
  - 0.9627136752136752
  - 0.9632822477650064
  - 0.9633163698049194
  - 0.9641485275288092
  train_recall_micro_oob:
  - 0.9501278772378516
  - 0.9427350427350427
  - 0.9466794380587484
  - 0.9472010178117048
  - 0.9455825864276568
  train_recall_samples:
  - 0.9643009377664108
  - 0.9627136752136751
  - 0.9632822477650064
  - 0.9633163698049194
  - 0.9641485275288092
  train_recall_samples_oob:
  - 0.9501278772378516
  - 0.9427350427350426
  - 0.9466794380587484
  - 0.9472010178117048
  - 0.9455825864276568
  train_recall_weighted:
  - 0.9605729505591792
  - 0.9571380717461478
  - 0.9591103605648464
  - 0.9594186775683466
  - 0.9596269386085207
  train_recall_weighted_oob:
  - 0.9328137532347645
  - 0.9172148121079237
  - 0.9266673930017614
  - 0.9281592561774177
  - 0.9248043397555857
  train_roc_auc_macro:
  - 0.9974994204531179
  - 0.9983875712795255
  - 0.9968300283822807
  - 0.9971494434971496
  - 0.9969636256461776
  train_roc_auc_macro_oob:
  - 0.9688696176924491
  - 0.9716950981838034
  - 0.9645376378672795
  - 0.9731374508795908
  - 0.9688827807126729
  train_roc_auc_micro:
  - 0.9961961511782694
  - 0.9964160707045413
  - 0.9957805524275245
  - 0.9962991868958561
  - 0.9958817900397138
  train_roc_auc_micro_oob:
  - 0.9689603774120967
  - 0.9675983065622109
  - 0.9661660031300013
  - 0.9689056922808637
  - 0.9668342050278161
  train_roc_auc_samples:
  - 0.9924776322474531
  - 0.9925174825174826
  - 0.9912855674669212
  - 0.9922325459857265
  - 0.9917579551382368
  train_roc_auc_samples_oob:
  - 0.9576407726024093
  - 0.9538135629802297
  - 0.9551365076907862
  - 0.9571523119233043
  - 0.9526610535573404
  train_roc_auc_weighted:
  - 0.997215703600277
  - 0.9975332560282527
  - 0.9962598338367806
  - 0.9970559474808391
  - 0.9967534225921614
  train_roc_auc_weighted_oob:
  - 0.9753401758277777
  - 0.975415924579717
  - 0.9735592051080347
  - 0.9774560288420238
  - 0.9755340399776876
start: 2023-12-12 16:07:57.568841
wrapper: null
