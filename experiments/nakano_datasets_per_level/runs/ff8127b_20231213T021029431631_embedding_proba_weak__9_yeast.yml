active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            MDMzMzMzIcBAMzMzMzMDQIBmZmZmZvY/QDMzMzMzA0BAMzMzMzMDQA==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gGZmZmZm9j9gZmZmZmYSwIBmZmZmZvY/gGZmZmZm9j8AmpmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzJ8AAMzMzMzPjv9DMzMzMzCBAQDMzMzMzC0AAmpmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzC8DQzMzMzMwMQDAzMzMzMwPA0MzMzMzMBECAmZmZmZnZvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+gmZmZmZn5P5iZmZmZmRHAoJmZmZmZ+T9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            4MzMzMzM/D+QmZmZmZkBwHBmZmZmZgZA4MzMzMzM/D/IzMzMzMwQwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AM3MzMzM/D8AMzMzMzPzvwAzMzMzM/O/AJqZmZmZ6T8AmJmZmZnJvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz87+YmZmZmZkBwGhmZmZmZg5AoJmZmZmZ6T8wMzMzMzPzvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMAAZ2ZmZmb2P+DMzMzMzCpAIDMzMzMzI8CAzMzMzMwEwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 02:26:17.347160
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: ff8127bbd36b6b9b1bcc3291c8666daf9fa2a9a20eff284163162de57b93fc28
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ff8127b_20231213T021029431631_embedding_proba_weak__9_yeast.yml
results:
  fit_time:
  - 615.0318582057953
  - 739.6043157577515
  - 748.8065173625946
  - 728.0779774188995
  - 734.4449052810669
  score_time:
  - 62.66320848464966
  - 49.215688943862915
  - 53.57822942733765
  - 49.1846137046814
  - 45.989537954330444
  test_average_precision_macro:
  - 0.49114865367677496
  - 0.4928286707818829
  - 0.4950401091949031
  - 0.469608833743639
  - 0.466096201029381
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6671271494944883
  - 0.6718252353453358
  - 0.6602893029623116
  - 0.6490613388347055
  - 0.6278624460148894
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7477688320984544
  - 0.743786878378177
  - 0.7560569319851753
  - 0.7334438090805809
  - 0.7346406815145792
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6499414306225818
  - 0.6510580216583202
  - 0.6514729195231683
  - 0.6325645467156826
  - 0.6134378580911354
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7840975896531452
  - 0.782602252519265
  - 0.7858662613981763
  - 0.784265430310055
  - 0.7758671369782482
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7840975896531452
  - 0.782602252519265
  - 0.7858662613981763
  - 0.784265430310055
  - 0.775867136978248
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7840975896531451
  - 0.7826022525192649
  - 0.7858662613981764
  - 0.784265430310055
  - 0.775867136978248
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7390980331287659
  - 0.7489707401171851
  - 0.7479225013585251
  - 0.7438427917129743
  - 0.7316486813802578
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6523269120701791
  - 0.6483270418967885
  - 0.6528228290234976
  - 0.6517681331958972
  - 0.6401503100396024
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6448688504774568
  - 0.6428484479610469
  - 0.6472649893603705
  - 0.6450959361220355
  - 0.6338095809821107
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6762053757796584
  - 0.6737805866532779
  - 0.6776857911316174
  - 0.6747083276129853
  - 0.6639538216637223
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5901826546105409
  - 0.6018381102881746
  - 0.6003903824965776
  - 0.5951990864746836
  - 0.5805913729692003
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7477688320984536
  - 0.7437868783781768
  - 0.7560569319851749
  - 0.7334438090805813
  - 0.734640681514579
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2717358534892374
  - 0.27164392058203635
  - 0.27919794797514413
  - 0.254264312697913
  - 0.25362588439385186
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.49564273541138143
  - 0.4939481104461418
  - 0.4968549433409154
  - 0.491372790086862
  - 0.4789269599382025
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49984344239828155
  - 0.5008651587070715
  - 0.5109289350226004
  - 0.4959348370803828
  - 0.48783798157216923
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2666791155847337
  - 0.29096608023779086
  - 0.3000261564469634
  - 0.28489421529010495
  - 0.24368447351877867
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8458496985902195
  - 0.8434425930850726
  - 0.8542231250160295
  - 0.8347998844823911
  - 0.8378295956716103
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.526748971193416
  - -7.628630705394191
  - -7.5702127659574465
  - -7.440162271805274
  - -7.537037037037037
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2159024103468548
  - -0.217397747480735
  - -0.2141337386018237
  - -0.21573456968994495
  - -0.22413286302175187
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21590241034685478
  - -0.21739774748073504
  - -0.21413373860182372
  - -0.21573456968994495
  - -0.22413286302175192
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21590241034685476
  - -0.217397747480735
  - -0.2141337386018237
  - -0.2157345696899449
  - -0.2241328630217519
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.260901966871234
  - -0.25102925988281494
  - -0.2520774986414747
  - -0.2561572082870257
  - -0.2683513186197423
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19242349483751603
  - -0.19565752860062285
  - -0.1897969448653339
  - -0.1956334350314356
  - -0.19766532295191908
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7840975896531452
  - 0.782602252519265
  - 0.7858662613981763
  - 0.784265430310055
  - 0.7758671369782482
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7840975896531452
  - 0.782602252519265
  - 0.7858662613981763
  - 0.784265430310055
  - 0.775867136978248
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7840975896531451
  - 0.7826022525192649
  - 0.7858662613981764
  - 0.784265430310055
  - 0.775867136978248
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7390980331287659
  - 0.7489707401171851
  - 0.7479225013585251
  - 0.7438427917129743
  - 0.7316486813802578
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7840975896531452
  - 0.782602252519265
  - 0.7858662613981763
  - 0.784265430310055
  - 0.7758671369782482
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7840975896531452
  - 0.782602252519265
  - 0.7858662613981763
  - 0.784265430310055
  - 0.775867136978248
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7840975896531451
  - 0.7826022525192649
  - 0.7858662613981764
  - 0.784265430310055
  - 0.775867136978248
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7390980331287659
  - 0.7489707401171851
  - 0.7479225013585251
  - 0.7438427917129743
  - 0.7316486813802578
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6963021935194398
  - 0.7115484641224231
  - 0.6986598801203626
  - 0.672537201062989
  - 0.6702056389934229
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8097702808889644
  - 0.8126374712296663
  - 0.8119589034699355
  - 0.8029570860061922
  - 0.7947812761886874
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8080233128293094
  - 0.8048496175496768
  - 0.810557665063744
  - 0.8049056311697576
  - 0.8032571036318832
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6983911012190823
  - 0.7011748469725406
  - 0.6904424149992359
  - 0.6816793864262873
  - 0.6544835414558667
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8646324954100804
  - 0.8770167286661145
  - 0.8858612521962018
  - 0.8906006467590507
  - 0.8852748604516008
  train_average_precision_macro_oob:
  - 0.8585458408381653
  - 0.8714482122772985
  - 0.8781840797280813
  - 0.8830681599564503
  - 0.8810097938090156
  train_average_precision_micro:
  - 0.9599476212986782
  - 0.9590385581934504
  - 0.9611151355226761
  - 0.9659489959454948
  - 0.9631293362502704
  train_average_precision_micro_oob:
  - 0.955708950662103
  - 0.9554321544999631
  - 0.9558063569742823
  - 0.9612658378687589
  - 0.9610744178902981
  train_average_precision_samples:
  - 0.9846608776987806
  - 0.982298536888807
  - 0.9844686082718648
  - 0.9888197103970914
  - 0.9826780449803002
  train_average_precision_samples_oob:
  - 0.9790726887802023
  - 0.9766529457712397
  - 0.9795758657567729
  - 0.9835469111980101
  - 0.9785963796598862
  train_average_precision_weighted:
  - 0.9683809167301883
  - 0.9704766566526193
  - 0.9725808400042142
  - 0.9753496995841057
  - 0.9754830321137736
  train_average_precision_weighted_oob:
  - 0.9643647670273378
  - 0.9672399757325076
  - 0.9684157851402158
  - 0.9707897620945983
  - 0.9732997716779835
  train_f1_macro:
  - 0.9706295775689872
  - 0.9682908822443707
  - 0.9712744882236407
  - 0.9720819720819719
  - 0.9717762817193165
  train_f1_macro_oob:
  - 0.9670415032921508
  - 0.9647471391657437
  - 0.967238975713552
  - 0.9685922185922186
  - 0.9685581120071022
  train_f1_micro:
  - 0.9706295775689872
  - 0.9682908822443707
  - 0.9712744882236408
  - 0.9720819720819721
  - 0.9717762817193164
  train_f1_micro_oob:
  - 0.9670415032921507
  - 0.9647471391657438
  - 0.967238975713552
  - 0.9685922185922186
  - 0.9685581120071022
  train_f1_samples:
  - 0.9706295775689872
  - 0.9682908822443708
  - 0.9712744882236409
  - 0.9720819720819721
  - 0.9717762817193164
  train_f1_samples_oob:
  - 0.9670415032921507
  - 0.964747139165744
  - 0.967238975713552
  - 0.9685922185922187
  - 0.9685581120071023
  train_f1_weighted:
  - 0.9827900192769475
  - 0.9803193429850706
  - 0.9830613638006815
  - 0.9823713620630509
  - 0.983269982360176
  train_f1_weighted_oob:
  - 0.978715520271336
  - 0.9761282345500882
  - 0.9785094773846983
  - 0.9785358743133542
  - 0.9792507651678211
  train_jaccard_macro:
  - 0.9441162550916365
  - 0.9398771379382378
  - 0.9455468948686272
  - 0.9466320379253237
  - 0.9463002729450374
  train_jaccard_macro_oob:
  - 0.9372932772185841
  - 0.9331459326670971
  - 0.9378258577463384
  - 0.939999218164807
  - 0.9401046562406637
  train_jaccard_micro:
  - 0.9429351732068421
  - 0.9385308955597695
  - 0.9441532042366535
  - 0.9456804391794279
  - 0.945101989423319
  train_jaccard_micro_oob:
  - 0.9361862130707251
  - 0.9318951684792298
  - 0.9365564278356009
  - 0.9390972572169031
  - 0.9390331372830297
  train_jaccard_samples:
  - 0.9473634508179244
  - 0.9432668716428048
  - 0.9482614446223621
  - 0.9498527373527375
  - 0.9493755853163948
  train_jaccard_samples_oob:
  - 0.9415407863912016
  - 0.9373508123046128
  - 0.9416447538476189
  - 0.9440488476092191
  - 0.9439913781570121
  train_jaccard_weighted:
  - 0.9664264789705532
  - 0.9616701594069241
  - 0.9669215788947211
  - 0.9655774721397478
  - 0.9672944460424474
  train_jaccard_weighted_oob:
  - 0.9586623766148541
  - 0.9537063130407469
  - 0.9582231533803035
  - 0.9582739557052289
  - 0.9595795365422448
  train_label_ranking_average_precision_score:
  - 0.9846608776987809
  - 0.9822985368888072
  - 0.9844686082718653
  - 0.988819710397092
  - 0.9826780449803005
  train_label_ranking_average_precision_score_oob:
  - 0.9790726887802024
  - 0.97665294577124
  - 0.9795758657567736
  - 0.9835469111980106
  - 0.9785963796598866
  train_matthews_corrcoef_macro:
  - 0.8695772582930582
  - 0.8693668477720784
  - 0.8799913270681045
  - 0.8782286317696177
  - 0.8744601195717463
  train_matthews_corrcoef_macro_oob:
  - 0.8573592541545263
  - 0.8574184311051126
  - 0.8664876425297006
  - 0.8669489426415871
  - 0.8645086716408809
  train_matthews_corrcoef_micro:
  - 0.9316112012296717
  - 0.9264175673261923
  - 0.9329382059722223
  - 0.9351613189488536
  - 0.9344889957080491
  train_matthews_corrcoef_micro_oob:
  - 0.9228813263363548
  - 0.9178367075817071
  - 0.9231074723908202
  - 0.9267672423075792
  - 0.9266125388224042
  train_matthews_corrcoef_samples:
  - 0.9360702628853022
  - 0.9301510643529833
  - 0.9373111676496023
  - 0.9388013412527195
  - 0.9383247358290627
  train_matthews_corrcoef_samples_oob:
  - 0.9284027099797023
  - 0.9221004418424392
  - 0.9282739212399193
  - 0.930754139595228
  - 0.9310972873291365
  train_matthews_corrcoef_weighted:
  - 0.9503791990951606
  - 0.945112629521453
  - 0.9518319028445601
  - 0.9503672613596229
  - 0.9518435068086324
  train_matthews_corrcoef_weighted_oob:
  - 0.9402086108426955
  - 0.9347091706834466
  - 0.9401202967439732
  - 0.9408629843983676
  - 0.9419357133927014
  train_ndgc:
  - 0.99259186519095
  - 0.9906053181091382
  - 0.9916340444487814
  - 0.9950090805652582
  - 0.9902318775591571
  train_ndgc_oob:
  - 0.990044496069362
  - 0.9880072757355609
  - 0.989609143739227
  - 0.9926071099449811
  - 0.9887891165764057
  train_neg_coverage_error:
  - -4.396167788710513
  - -4.404651162790698
  - -4.362095531587057
  - -4.403326403326403
  - -4.395132055929571
  train_neg_coverage_error_oob:
  - -4.527705851890213
  - -4.51937984496124
  - -4.473035439137134
  - -4.516112266112266
  - -4.498705334023822
  train_neg_hamming_loss_macro:
  - -0.0293704224310128
  - -0.03170911775562938
  - -0.028725511776359233
  - -0.02791802791802792
  - -0.028223718280683586
  train_neg_hamming_loss_macro_oob:
  - -0.03295849670784937
  - -0.03525286083425618
  - -0.03276102428644802
  - -0.03140778140778141
  - -0.031441887992897835
  train_neg_hamming_loss_micro:
  - -0.0293704224310128
  - -0.03170911775562938
  - -0.028725511776359233
  - -0.02791802791802792
  - -0.028223718280683582
  train_neg_hamming_loss_micro_oob:
  - -0.03295849670784937
  - -0.03525286083425618
  - -0.03276102428644802
  - -0.03140778140778141
  - -0.031441887992897835
  train_neg_hamming_loss_samples:
  - -0.029370422431012795
  - -0.03170911775562938
  - -0.028725511776359233
  - -0.027918027918027916
  - -0.02822371828068358
  train_neg_hamming_loss_samples_oob:
  - -0.03295849670784937
  - -0.03525286083425618
  - -0.03276102428644801
  - -0.0314077814077814
  - -0.03144188799289783
  train_neg_hamming_loss_weighted:
  - -0.017209980723052493
  - -0.019680657014929517
  - -0.016938636199318506
  - -0.01762863793694893
  - -0.01673001763982393
  train_neg_hamming_loss_weighted_oob:
  - -0.021284479728664114
  - -0.023871765449911576
  - -0.02149052261530184
  - -0.021464125686645796
  - -0.02074923483217892
  train_neg_label_ranking_loss:
  - -0.007799308305152797
  - -0.008712780697830533
  - -0.007037067619282015
  - -0.005870154084439799
  - -0.0077770873426344315
  train_neg_label_ranking_loss_oob:
  - -0.01219090057682201
  - -0.012962795684279627
  - -0.010760728273935405
  - -0.009774159671137693
  - -0.011158557253289812
  train_precision_macro:
  - 0.9706295775689872
  - 0.9682908822443707
  - 0.9712744882236407
  - 0.9720819720819719
  - 0.9717762817193165
  train_precision_macro_oob:
  - 0.9670415032921508
  - 0.9647471391657437
  - 0.967238975713552
  - 0.9685922185922186
  - 0.9685581120071022
  train_precision_micro:
  - 0.9706295775689872
  - 0.9682908822443707
  - 0.9712744882236408
  - 0.9720819720819721
  - 0.9717762817193164
  train_precision_micro_oob:
  - 0.9670415032921507
  - 0.9647471391657438
  - 0.967238975713552
  - 0.9685922185922186
  - 0.9685581120071022
  train_precision_samples:
  - 0.9706295775689872
  - 0.9682908822443708
  - 0.9712744882236409
  - 0.9720819720819721
  - 0.9717762817193164
  train_precision_samples_oob:
  - 0.9670415032921507
  - 0.964747139165744
  - 0.967238975713552
  - 0.9685922185922187
  - 0.9685581120071023
  train_precision_weighted:
  - 0.9827900192769475
  - 0.9803193429850706
  - 0.9830613638006815
  - 0.9823713620630509
  - 0.983269982360176
  train_precision_weighted_oob:
  - 0.978715520271336
  - 0.9761282345500882
  - 0.9785094773846983
  - 0.9785358743133542
  - 0.9792507651678211
  train_recall_macro:
  - 0.9706295775689872
  - 0.9682908822443707
  - 0.9712744882236407
  - 0.9720819720819719
  - 0.9717762817193165
  train_recall_macro_oob:
  - 0.9670415032921508
  - 0.9647471391657437
  - 0.967238975713552
  - 0.9685922185922186
  - 0.9685581120071022
  train_recall_micro:
  - 0.9706295775689872
  - 0.9682908822443707
  - 0.9712744882236408
  - 0.9720819720819721
  - 0.9717762817193164
  train_recall_micro_oob:
  - 0.9670415032921507
  - 0.9647471391657438
  - 0.967238975713552
  - 0.9685922185922186
  - 0.9685581120071022
  train_recall_samples:
  - 0.9706295775689872
  - 0.9682908822443708
  - 0.9712744882236409
  - 0.9720819720819721
  - 0.9717762817193164
  train_recall_samples_oob:
  - 0.9670415032921507
  - 0.964747139165744
  - 0.967238975713552
  - 0.9685922185922187
  - 0.9685581120071023
  train_recall_weighted:
  - 0.9827900192769475
  - 0.9803193429850706
  - 0.9830613638006815
  - 0.9823713620630509
  - 0.983269982360176
  train_recall_weighted_oob:
  - 0.978715520271336
  - 0.9761282345500882
  - 0.9785094773846983
  - 0.9785358743133542
  - 0.9792507651678211
  train_roc_auc_macro:
  - 0.9869956500493319
  - 0.98631943029988
  - 0.9885518582110082
  - 0.9894588532546649
  - 0.9886091869857703
  train_roc_auc_macro_oob:
  - 0.9833202415273613
  - 0.9830244829445826
  - 0.9847491568884903
  - 0.9856078727116276
  - 0.9855669497956452
  train_roc_auc_micro:
  - 0.9889612716179574
  - 0.9886114826598736
  - 0.9893667278481946
  - 0.9904744376616071
  - 0.9901280250788216
  train_roc_auc_micro_oob:
  - 0.9868461695465482
  - 0.9867040922823229
  - 0.9873488632514331
  - 0.9883554433039567
  - 0.988468977969969
  train_roc_auc_samples:
  - 0.9923654019773721
  - 0.9913633031379432
  - 0.9930071599673185
  - 0.9942395054002197
  - 0.992430059213554
  train_roc_auc_samples_oob:
  - 0.9883132998950119
  - 0.987304602568999
  - 0.9896232800164674
  - 0.9906956501736721
  - 0.9893659666186854
  train_roc_auc_weighted:
  - 0.994302013715605
  - 0.9927061538232205
  - 0.9940830227949371
  - 0.994207371895173
  - 0.9940568022978021
  train_roc_auc_weighted_oob:
  - 0.9916987332708811
  - 0.9905623804525248
  - 0.9914458239334243
  - 0.9915950435786021
  - 0.9920991544754892
start: 2023-12-13 02:10:29.431631
wrapper: null
