active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b+AMzMzMzMLQAAyMzMzM+O/AJmZmZmZ+b8AnJmZmZnZPw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 19:21:47.050513
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__4
  params: {}
hash: 2602bcc31e1edf5834f349aa83c38142f9e281c6ada84e2a05f2b9cf4a3d3dc7
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2602bcc_20231222T191358874138_embedding_proba_weak__4_scene.yml
results:
  fit_time:
  - 343.0392270088196
  - 357.0376350879669
  - 398.95208978652954
  - 391.587867975235
  - 356.5036506652832
  score_time:
  - 10.835343360900879
  - 11.596503973007202
  - 13.051659345626831
  - 11.833581447601318
  - 11.272051811218262
  test_average_precision_macro:
  - 0.8435566752030269
  - 0.8373581138118666
  - 0.8325317437080071
  - 0.8446901247976025
  - 0.836368516446229
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8439337776269171
  - 0.839637309014977
  - 0.8274157804036658
  - 0.8493861501045161
  - 0.8323198226493589
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8804692891649413
  - 0.877928870292887
  - 0.8842323651452282
  - 0.8891649413388544
  - 0.8798336798336798
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8337307702190672
  - 0.825269839488478
  - 0.8208544505833255
  - 0.8330153819590893
  - 0.8242997801851857
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9251207729468599
  - 0.9187587168758719
  - 0.919432918395574
  - 0.924775707384403
  - 0.9192654192654192
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9251207729468599
  - 0.9187587168758717
  - 0.919432918395574
  - 0.9247757073844031
  - 0.9192654192654193
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.92512077294686
  - 0.9187587168758716
  - 0.919432918395574
  - 0.924775707384403
  - 0.9192654192654193
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9210532626681694
  - 0.9136056242093998
  - 0.9147895672791938
  - 0.9206309082446597
  - 0.9145115953626591
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.862771664810367
  - 0.8532135577301091
  - 0.8536019715470164
  - 0.8622428560253032
  - 0.8536197539773495
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8606741573033708
  - 0.8497258948726217
  - 0.85088
  - 0.8600770218228498
  - 0.850593138826547
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8820861678004535
  - 0.8715879657302251
  - 0.8736415728116973
  - 0.8811495612737849
  - 0.8734778734778735
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8559259335668029
  - 0.8447077644161448
  - 0.8458398266389165
  - 0.8552884360715466
  - 0.8455892465567956
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.880469289164941
  - 0.877928870292887
  - 0.8842323651452278
  - 0.8891649413388543
  - 0.8798336798336797
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7383556920911184
  - 0.7158456218267855
  - 0.7175956013895327
  - 0.7367723305048693
  - 0.7180240286257562
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7316391995514632
  - 0.7078538580224782
  - 0.7100242940427505
  - 0.7288966516584611
  - 0.7101823020090096
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7078099301417385
  - 0.6741108423911292
  - 0.680280416047355
  - 0.7004994004740716
  - 0.6816947204466218
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7268252227800803
  - 0.700716625850107
  - 0.7038334781159414
  - 0.7245431541707616
  - 0.703931814278397
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9116026024674618
  - 0.9101822918305135
  - 0.9145800061883845
  - 0.9183438451357357
  - 0.9113613195327396
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4327122153209109
  - -1.4372384937238494
  - -1.4066390041493777
  - -1.380952380952381
  - -1.4178794178794178
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0748792270531401
  - -0.0812412831241283
  - -0.08056708160442601
  - -0.07522429261559696
  - -0.08073458073458074
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0748792270531401
  - -0.08124128312412832
  - -0.08056708160442601
  - -0.07522429261559696
  - -0.08073458073458073
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07487922705314008
  - -0.0812412831241283
  - -0.080567081604426
  - -0.07522429261559696
  - -0.08073458073458073
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0789467373318305
  - -0.08639437579060037
  - -0.08521043272080617
  - -0.07936909175534049
  - -0.08548840463734081
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07023809523809524
  - -0.0692468619246862
  - -0.0649896265560166
  - -0.060662525879917197
  - -0.06678794178794178
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9251207729468599
  - 0.9187587168758719
  - 0.919432918395574
  - 0.924775707384403
  - 0.9192654192654192
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9251207729468599
  - 0.9187587168758717
  - 0.919432918395574
  - 0.9247757073844031
  - 0.9192654192654193
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.92512077294686
  - 0.9187587168758716
  - 0.919432918395574
  - 0.924775707384403
  - 0.9192654192654193
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9210532626681694
  - 0.9136056242093998
  - 0.9147895672791938
  - 0.9206309082446597
  - 0.9145115953626591
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9251207729468599
  - 0.9187587168758719
  - 0.919432918395574
  - 0.924775707384403
  - 0.9192654192654192
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9251207729468599
  - 0.9187587168758717
  - 0.919432918395574
  - 0.9247757073844031
  - 0.9192654192654193
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.92512077294686
  - 0.9187587168758716
  - 0.919432918395574
  - 0.924775707384403
  - 0.9192654192654193
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9210532626681694
  - 0.9136056242093998
  - 0.9147895672791938
  - 0.9206309082446597
  - 0.9145115953626591
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9450388269807114
  - 0.9441823227655367
  - 0.942252484411723
  - 0.9479040979267678
  - 0.9427158068497968
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9501735829466923
  - 0.9496791449137795
  - 0.946598933751419
  - 0.9541970137790535
  - 0.9474670000073482
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9297619047619049
  - 0.9307531380753138
  - 0.9350103734439834
  - 0.9393374741200828
  - 0.9332120582120582
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9400624575231534
  - 0.9390088001464569
  - 0.9366480453932507
  - 0.9425083293200663
  - 0.9373763003011197
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9857211755653474
  - 0.9896373242108786
  - 0.9862110695042428
  - 0.9881616111039233
  - 0.9867123923630802
  train_average_precision_macro_oob:
  - 0.9613921751055453
  - 0.9661406933725393
  - 0.9602494161247193
  - 0.9635901533473791
  - 0.9640651084048192
  train_average_precision_micro:
  - 0.9846863745628692
  - 0.9887395163955186
  - 0.9845397694444822
  - 0.9872983106180934
  - 0.9857382702973596
  train_average_precision_micro_oob:
  - 0.9593406965010315
  - 0.9640164948759743
  - 0.9581242100225731
  - 0.9618153270645713
  - 0.9624332286300901
  train_average_precision_samples:
  - 0.9830647955647956
  - 0.9858735095904614
  - 0.9831601731601732
  - 0.9842775467775468
  - 0.9844236760124611
  train_average_precision_samples_oob:
  - 0.961088011088011
  - 0.9625540003456023
  - 0.9603809523809523
  - 0.9582813582813583
  - 0.9640186915887851
  train_average_precision_weighted:
  - 0.9848821574785276
  - 0.9891945229856753
  - 0.9855252905342482
  - 0.9876741488233582
  - 0.9861324483945418
  train_average_precision_weighted_oob:
  - 0.9598688192333505
  - 0.9650300779716037
  - 0.9586532337593238
  - 0.9627631724029305
  - 0.9627903345396366
  train_f1_macro:
  - 0.9779106029106028
  - 0.9793502678417142
  - 0.9777489177489178
  - 0.9777373527373526
  - 0.9781066112841814
  train_f1_macro_oob:
  - 0.9609320859320859
  - 0.9622429583549336
  - 0.9619047619047619
  - 0.9609320859320859
  - 0.9649532710280374
  train_f1_micro:
  - 0.9779106029106029
  - 0.9793502678417142
  - 0.9777489177489177
  - 0.9777373527373527
  - 0.9781066112841814
  train_f1_micro_oob:
  - 0.9609320859320859
  - 0.9622429583549335
  - 0.9619047619047619
  - 0.9609320859320859
  - 0.9649532710280374
  train_f1_samples:
  - 0.9779106029106029
  - 0.9793502678417142
  - 0.9777489177489177
  - 0.9777373527373526
  - 0.9781066112841814
  train_f1_samples_oob:
  - 0.960932085932086
  - 0.9622429583549336
  - 0.9619047619047619
  - 0.960932085932086
  - 0.9649532710280374
  train_f1_weighted:
  - 0.9771966060064753
  - 0.9788128639190039
  - 0.9771539152671228
  - 0.9775060315176314
  - 0.9775868146568086
  train_f1_weighted_oob:
  - 0.9598187838391031
  - 0.961353521246393
  - 0.9605996519204066
  - 0.9601435003803297
  - 0.9642932104902676
  train_jaccard_macro:
  - 0.9569004620512516
  - 0.9596190434035625
  - 0.9565765152068398
  - 0.9564737932308861
  - 0.957233295419687
  train_jaccard_macro_oob:
  - 0.924982875579436
  - 0.9273677213391905
  - 0.9268466601692761
  - 0.9249090215857704
  - 0.9323895518088147
  train_jaccard_micro:
  - 0.9567759979659293
  - 0.9595361042918819
  - 0.9564665029219954
  - 0.956444369121261
  - 0.9571513252603946
  train_jaccard_micro_oob:
  - 0.9248020008336807
  - 0.9272333694113729
  - 0.926605504587156
  - 0.9248020008336807
  - 0.9322799097065463
  train_jaccard_samples:
  - 0.9641248391248392
  - 0.966081611493742
  - 0.9636982065553494
  - 0.9635432135432136
  - 0.9643351629332938
  train_jaccard_samples_oob:
  - 0.9363676863676863
  - 0.9377545730578389
  - 0.937773654916512
  - 0.9363305613305614
  - 0.942664293131583
  train_jaccard_weighted:
  - 0.9555279189232856
  - 0.9585825064652886
  - 0.9554326872679777
  - 0.9560290714959121
  - 0.9562347779151358
  train_jaccard_weighted_oob:
  - 0.9229230251764454
  - 0.9257137199902337
  - 0.9244292732640732
  - 0.9234455835387712
  - 0.9311520976948247
  train_label_ranking_average_precision_score:
  - 0.9830647955647955
  - 0.9858735095904613
  - 0.983160173160173
  - 0.9842775467775468
  - 0.9844236760124611
  train_label_ranking_average_precision_score_oob:
  - 0.9610880110880108
  - 0.9625540003456022
  - 0.9603809523809521
  - 0.9582813582813581
  - 0.9640186915887846
  train_matthews_corrcoef_macro:
  - 0.9247760661533256
  - 0.9293125766768083
  - 0.9239264180484228
  - 0.9229657781886563
  - 0.92491331023265
  train_matthews_corrcoef_macro_oob:
  - 0.8646873912673851
  - 0.868646566663395
  - 0.8686470374564091
  - 0.8639475347180694
  - 0.878004038349371
  train_matthews_corrcoef_micro:
  - 0.923635701516199
  - 0.9285726482953643
  - 0.9230326039879924
  - 0.9230576486894297
  - 0.9242675868060811
  train_matthews_corrcoef_micro_oob:
  - 0.8629083239554818
  - 0.8675067147838682
  - 0.8663771875935343
  - 0.8630219141955946
  - 0.8774016439823865
  train_matthews_corrcoef_samples:
  - 0.9164840455990696
  - 0.917211114394993
  - 0.9139856677993747
  - 0.9099982563959581
  - 0.9148916814631494
  train_matthews_corrcoef_samples_oob:
  - 0.8357417088238994
  - 0.8362060394488948
  - 0.8394177519151946
  - 0.8338978836696883
  - 0.8508759463387573
  train_matthews_corrcoef_weighted:
  - 0.9230559303396895
  - 0.9281486996829722
  - 0.9226067098151067
  - 0.9229113499748054
  - 0.9238727220509166
  train_matthews_corrcoef_weighted_oob:
  - 0.8622942990159205
  - 0.8669633428148799
  - 0.8655405467164342
  - 0.8626582751065485
  - 0.8769414305235964
  train_ndgc:
  - 0.9875454082695315
  - 0.989614416001929
  - 0.9876075720778515
  - 0.9884101540781861
  - 0.9885659820221603
  train_ndgc_oob:
  - 0.9717247263133466
  - 0.9726547002307901
  - 0.9709986136835351
  - 0.9696897257067092
  - 0.973812005132023
  train_neg_coverage_error:
  - -1.1091476091476091
  - -1.102125453602903
  - -1.1090909090909091
  - -1.1081081081081081
  - -1.1064382139148494
  train_neg_coverage_error_oob:
  - -1.1902286902286903
  - -1.1902540176257128
  - -1.2005194805194805
  - -1.20997920997921
  - -1.1936656282450675
  train_neg_hamming_loss_macro:
  - -0.022089397089397094
  - -0.020649732158285816
  - -0.022251082251082247
  - -0.02226264726264726
  - -0.021893388715818623
  train_neg_hamming_loss_macro_oob:
  - -0.03906791406791407
  - -0.03775704164506653
  - -0.03809523809523809
  - -0.03906791406791407
  - -0.035046728971962614
  train_neg_hamming_loss_micro:
  - -0.02208939708939709
  - -0.020649732158285812
  - -0.02225108225108225
  - -0.02226264726264726
  - -0.021893388715818623
  train_neg_hamming_loss_micro_oob:
  - -0.039067914067914065
  - -0.037757041645066526
  - -0.0380952380952381
  - -0.039067914067914065
  - -0.035046728971962614
  train_neg_hamming_loss_samples:
  - -0.02208939708939709
  - -0.020649732158285812
  - -0.022251082251082247
  - -0.02226264726264726
  - -0.021893388715818623
  train_neg_hamming_loss_samples_oob:
  - -0.039067914067914065
  - -0.037757041645066526
  - -0.03809523809523809
  - -0.039067914067914065
  - -0.035046728971962614
  train_neg_hamming_loss_weighted:
  - -0.02280339399352462
  - -0.021187136080996195
  - -0.022846084732877185
  - -0.022493968482368676
  - -0.022413185343191307
  train_neg_hamming_loss_weighted_oob:
  - -0.04018121616089686
  - -0.03864647875360709
  - -0.03940034807959336
  - -0.039856499619670235
  - -0.03570678950973244
  train_neg_label_ranking_loss:
  - -0.006964656964656965
  - -0.005909797822706064
  - -0.007064935064935066
  - -0.006587837837837838
  - -0.006477154724818277
  train_neg_label_ranking_loss_oob:
  - -0.02168659043659044
  - -0.022369103162260238
  - -0.024051948051948054
  - -0.02512849387849388
  - -0.022494807892004157
  train_precision_macro:
  - 0.9779106029106028
  - 0.9793502678417142
  - 0.9777489177489178
  - 0.9777373527373526
  - 0.9781066112841814
  train_precision_macro_oob:
  - 0.9609320859320859
  - 0.9622429583549336
  - 0.9619047619047619
  - 0.9609320859320859
  - 0.9649532710280374
  train_precision_micro:
  - 0.9779106029106029
  - 0.9793502678417142
  - 0.9777489177489177
  - 0.9777373527373527
  - 0.9781066112841814
  train_precision_micro_oob:
  - 0.9609320859320859
  - 0.9622429583549335
  - 0.9619047619047619
  - 0.9609320859320859
  - 0.9649532710280374
  train_precision_samples:
  - 0.9779106029106029
  - 0.9793502678417142
  - 0.9777489177489177
  - 0.9777373527373526
  - 0.9781066112841814
  train_precision_samples_oob:
  - 0.960932085932086
  - 0.9622429583549336
  - 0.9619047619047619
  - 0.960932085932086
  - 0.9649532710280374
  train_precision_weighted:
  - 0.9771966060064753
  - 0.9788128639190039
  - 0.9771539152671228
  - 0.9775060315176314
  - 0.9775868146568086
  train_precision_weighted_oob:
  - 0.9598187838391031
  - 0.961353521246393
  - 0.9605996519204066
  - 0.9601435003803297
  - 0.9642932104902676
  train_recall_macro:
  - 0.9779106029106028
  - 0.9793502678417142
  - 0.9777489177489178
  - 0.9777373527373526
  - 0.9781066112841814
  train_recall_macro_oob:
  - 0.9609320859320859
  - 0.9622429583549336
  - 0.9619047619047619
  - 0.9609320859320859
  - 0.9649532710280374
  train_recall_micro:
  - 0.9779106029106029
  - 0.9793502678417142
  - 0.9777489177489177
  - 0.9777373527373527
  - 0.9781066112841814
  train_recall_micro_oob:
  - 0.9609320859320859
  - 0.9622429583549335
  - 0.9619047619047619
  - 0.9609320859320859
  - 0.9649532710280374
  train_recall_samples:
  - 0.9779106029106029
  - 0.9793502678417142
  - 0.9777489177489177
  - 0.9777373527373526
  - 0.9781066112841814
  train_recall_samples_oob:
  - 0.960932085932086
  - 0.9622429583549336
  - 0.9619047619047619
  - 0.960932085932086
  - 0.9649532710280374
  train_recall_weighted:
  - 0.9771966060064753
  - 0.9788128639190039
  - 0.9771539152671228
  - 0.9775060315176314
  - 0.9775868146568086
  train_recall_weighted_oob:
  - 0.9598187838391031
  - 0.961353521246393
  - 0.9605996519204066
  - 0.9601435003803297
  - 0.9642932104902676
  train_roc_auc_macro:
  - 0.9973332195591457
  - 0.9980581720791409
  - 0.9975076451140881
  - 0.9978289436710926
  - 0.9976564088879397
  train_roc_auc_macro_oob:
  - 0.9882371962422315
  - 0.9888010881428944
  - 0.9875889245686672
  - 0.9879499325954156
  - 0.9880474486083536
  train_roc_auc_micro:
  - 0.9973150436426967
  - 0.9980401808312839
  - 0.9973886762250845
  - 0.9977940728252594
  - 0.9976116629862907
  train_roc_auc_micro_oob:
  - 0.9881840071236048
  - 0.9889252152653496
  - 0.9878051835278172
  - 0.9877166515122725
  - 0.9883985084692136
  train_roc_auc_samples:
  - 0.993035343035343
  - 0.9940902021772939
  - 0.992935064935065
  - 0.9934121621621621
  - 0.9935228452751818
  train_roc_auc_samples_oob:
  - 0.9783134095634096
  - 0.9776308968377398
  - 0.975948051948052
  - 0.9748715061215062
  - 0.9775051921079958
  train_roc_auc_weighted:
  - 0.9971699999643824
  - 0.997961882361399
  - 0.9973830799318851
  - 0.9977419115977826
  - 0.997557275339708
  train_roc_auc_weighted_oob:
  - 0.9877154069289248
  - 0.9882163839717464
  - 0.9868861933345264
  - 0.9875601916358678
  - 0.9875052317221947
start: 2023-12-22 19:13:58.874138
wrapper: null
