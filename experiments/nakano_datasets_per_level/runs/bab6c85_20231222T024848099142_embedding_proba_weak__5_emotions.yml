active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T8wMzMzMzMLwKCZmZmZmfk/oJmZmZmZ+T9gZmZmZmb2vw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b+QmZmZmZkRwEBmZmZmZva/AJmZmZmZ2b9wZmZmZmYaQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:50:07.038934
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__5
  params: {}
hash: bab6c85867e40c9bf6cd0f503ba9e66caeb800e836b1d5b336ad4621aab1ea9c
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bab6c85_20231222T024848099142_embedding_proba_weak__5_emotions.yml
results:
  fit_time:
  - 56.71173310279846
  - 56.87063694000244
  - 56.54534673690796
  - 56.01568102836609
  - 60.25963044166565
  score_time:
  - 5.1870646476745605
  - 5.454959392547607
  - 5.110849142074585
  - 5.230749130249023
  - 5.3882341384887695
  test_average_precision_macro:
  - 0.6762669100870511
  - 0.7054156678960511
  - 0.7073297776312718
  - 0.6936739013270229
  - 0.7312535473082717
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6665495429165822
  - 0.6428699122964188
  - 0.6650217692023213
  - 0.7091949463106169
  - 0.7094045081852964
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7785014005602239
  - 0.7874661246612467
  - 0.8147453703703704
  - 0.7794584500466852
  - 0.811830357142857
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.68021373983821
  - 0.6920955779523397
  - 0.6990744740911867
  - 0.705356456427815
  - 0.7233811552528416
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7773109243697478
  - 0.7940379403794039
  - 0.8111111111111112
  - 0.7829131652661064
  - 0.7857142857142857
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7773109243697479
  - 0.7940379403794038
  - 0.8111111111111111
  - 0.7829131652661064
  - 0.7857142857142857
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7773109243697479
  - 0.7940379403794038
  - 0.8111111111111112
  - 0.7829131652661064
  - 0.7857142857142857
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7800676831818699
  - 0.7878952122854562
  - 0.8073484848484849
  - 0.783957219251337
  - 0.7832609395109396
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6390897074150335
  - 0.6626498846737064
  - 0.6870774706021482
  - 0.6475036093073022
  - 0.6537382227438476
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6357388316151202
  - 0.6584269662921348
  - 0.6822429906542056
  - 0.6432681242807825
  - 0.6470588235294118
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6800720288115244
  - 0.6998908950128462
  - 0.717106782106782
  - 0.6770344501436938
  - 0.6868235930735932
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6424677179532039
  - 0.653662342911752
  - 0.681416841156025
  - 0.6485384340153532
  - 0.6495261951118416
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7785014005602242
  - 0.7874661246612464
  - 0.81474537037037
  - 0.7794584500466851
  - 0.8118303571428572
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.48030335922710776
  - 0.5321549810256231
  - 0.5724326111801056
  - 0.5026079804983584
  - 0.5226488509711175
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5008232110784435
  - 0.5397102917177495
  - 0.5795343654371672
  - 0.5139701825074043
  - 0.5356338395642775
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5024286988329879
  - 0.5501335901229626
  - 0.5833902530736402
  - 0.5247985097665772
  - 0.5393359252455944
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.49672221367864494
  - 0.527916373523473
  - 0.5750034342373304
  - 0.514551137189732
  - 0.5245389718418422
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8479224252397632
  - 0.85182022368579
  - 0.870651161153976
  - 0.8480711425005714
  - 0.8733221609432869
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8487394957983194
  - -2.6910569105691056
  - -2.558333333333333
  - -2.7983193277310923
  - -2.8392857142857144
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2226890756302521
  - -0.20596205962059622
  - -0.18888888888888888
  - -0.21708683473389354
  - -0.21428571428571427
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.22268907563025211
  - -0.20596205962059622
  - -0.18888888888888888
  - -0.21708683473389356
  - -0.21428571428571427
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.22268907563025206
  - -0.2059620596205962
  - -0.1888888888888889
  - -0.2170868347338935
  - -0.21428571428571427
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21993231681812997
  - -0.21210478771454383
  - -0.19265151515151513
  - -0.21604278074866307
  - -0.2167390604890605
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1821195144724556
  - -0.16508581752484192
  - -0.14150462962962965
  - -0.17250233426704015
  - -0.1585565476190476
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7773109243697478
  - 0.7940379403794039
  - 0.8111111111111112
  - 0.7829131652661064
  - 0.7857142857142857
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7773109243697479
  - 0.7940379403794038
  - 0.8111111111111111
  - 0.7829131652661064
  - 0.7857142857142857
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7773109243697479
  - 0.7940379403794038
  - 0.8111111111111112
  - 0.7829131652661064
  - 0.7857142857142857
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7800676831818699
  - 0.7878952122854562
  - 0.8073484848484849
  - 0.783957219251337
  - 0.7832609395109396
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7773109243697478
  - 0.7940379403794039
  - 0.8111111111111112
  - 0.7829131652661064
  - 0.7857142857142857
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7773109243697479
  - 0.7940379403794038
  - 0.8111111111111111
  - 0.7829131652661064
  - 0.7857142857142857
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7773109243697479
  - 0.7940379403794038
  - 0.8111111111111112
  - 0.7829131652661064
  - 0.7857142857142857
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7800676831818699
  - 0.7878952122854562
  - 0.8073484848484849
  - 0.783957219251337
  - 0.7832609395109396
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8258274913754282
  - 0.8427107085128474
  - 0.8545930103897961
  - 0.8389802655812043
  - 0.8534731472168199
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8424458252641047
  - 0.8561576781459822
  - 0.868990909090909
  - 0.8521899153478101
  - 0.8727127127127127
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8178804855275441
  - 0.8349141824751579
  - 0.8584953703703704
  - 0.8274976657329599
  - 0.8414434523809524
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8285953082701943
  - 0.8337050430842794
  - 0.8496182819794977
  - 0.8435860486728631
  - 0.8493932984667046
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8092861625647849
  - 0.8215789778896089
  - 0.8120796712949602
  - 0.8260010162356619
  - 0.8101714602079237
  train_average_precision_macro_oob:
  - 0.7932182203146906
  - 0.805472311397895
  - 0.7899074429408969
  - 0.8078313858309976
  - 0.7872878624778994
  train_average_precision_micro:
  - 0.7528385777784375
  - 0.7714930701229221
  - 0.7572501541667123
  - 0.7647898370516316
  - 0.7562598314734963
  train_average_precision_micro_oob:
  - 0.7378781286217904
  - 0.7582356111573634
  - 0.7416577417734418
  - 0.7544271734761451
  - 0.7417291710984779
  train_average_precision_samples:
  - 0.8629278012189405
  - 0.865307328605201
  - 0.8542518205308903
  - 0.8752344116268166
  - 0.8606029106029107
  train_average_precision_samples_oob:
  - 0.8476500234411628
  - 0.8527186761229314
  - 0.836645525017618
  - 0.8603609939052976
  - 0.8501732501732502
  train_average_precision_weighted:
  - 0.7946672694646493
  - 0.8105383869605022
  - 0.7994847875282077
  - 0.8105308804622048
  - 0.7990584256346686
  train_average_precision_weighted_oob:
  - 0.7794583225813583
  - 0.7950086044637094
  - 0.779033693017297
  - 0.7943948248016283
  - 0.7775267903881915
  train_f1_macro:
  - 0.8874824191279888
  - 0.8875886524822695
  - 0.8812544045102184
  - 0.8948663853727146
  - 0.8804573804573805
  train_f1_macro_oob:
  - 0.8709563994374121
  - 0.872695035460993
  - 0.8661028893587034
  - 0.8783403656821377
  - 0.8634788634788636
  train_f1_micro:
  - 0.8874824191279888
  - 0.8875886524822695
  - 0.8812544045102184
  - 0.8948663853727145
  - 0.8804573804573804
  train_f1_micro_oob:
  - 0.8709563994374121
  - 0.8726950354609929
  - 0.8661028893587033
  - 0.8783403656821378
  - 0.8634788634788635
  train_f1_samples:
  - 0.8874824191279888
  - 0.8875886524822696
  - 0.8812544045102185
  - 0.8948663853727145
  - 0.8804573804573804
  train_f1_samples_oob:
  - 0.8709563994374121
  - 0.8726950354609928
  - 0.8661028893587033
  - 0.8783403656821378
  - 0.8634788634788636
  train_f1_weighted:
  - 0.8812571651468231
  - 0.8827931857063686
  - 0.8744405081614384
  - 0.8881333865511082
  - 0.8755977717603
  train_f1_weighted_oob:
  - 0.8656686598261812
  - 0.8682489578564373
  - 0.8594175570919756
  - 0.8718283156574296
  - 0.8591159313506944
  train_jaccard_macro:
  - 0.8003337299491123
  - 0.8004433366133362
  - 0.7912049883450584
  - 0.8126611852612408
  - 0.7892557687704017
  train_jaccard_macro_oob:
  - 0.7740895509108251
  - 0.7772149991290624
  - 0.7676896426298995
  - 0.7864885427649755
  - 0.7629999820667491
  train_jaccard_micro:
  - 0.797724399494311
  - 0.7978960790564233
  - 0.7877165354330709
  - 0.8097359210944957
  - 0.78644382544104
  train_jaccard_micro_oob:
  - 0.7714107754593584
  - 0.774142812205096
  - 0.7638284648850218
  - 0.7830721003134796
  - 0.7597560975609756
  train_jaccard_samples:
  - 0.8219710669077757
  - 0.8216312056737588
  - 0.8126849894291756
  - 0.8311934900542495
  - 0.8101574101574099
  train_jaccard_samples_oob:
  - 0.7968454892505525
  - 0.8000911854103342
  - 0.7918856337460988
  - 0.8069017480409885
  - 0.7862587862587862
  train_jaccard_weighted:
  - 0.7902781919531651
  - 0.792554595773643
  - 0.7802575390194543
  - 0.8017321280072468
  - 0.7813062212564778
  train_jaccard_weighted_oob:
  - 0.7656150377480226
  - 0.769957919866543
  - 0.7571280674003099
  - 0.7760980192411439
  - 0.7559539081649443
  train_label_ranking_average_precision_score:
  - 0.8629278012189392
  - 0.8653073286052001
  - 0.8542518205308895
  - 0.8752344116268156
  - 0.8606029106029093
  train_label_ranking_average_precision_score_oob:
  - 0.8476500234411616
  - 0.8527186761229307
  - 0.8366455250176171
  - 0.8603609939052965
  - 0.8501732501732489
  train_matthews_corrcoef_macro:
  - 0.7608468072872991
  - 0.7619111748422299
  - 0.7466464301591637
  - 0.774258548742459
  - 0.7450628918083465
  train_matthews_corrcoef_macro_oob:
  - 0.7200145891473254
  - 0.7274893311752937
  - 0.7096005898996097
  - 0.7361906032373318
  - 0.7077337673415055
  train_matthews_corrcoef_micro:
  - 0.7590813545378978
  - 0.7607239653013177
  - 0.744527999001518
  - 0.771752201472232
  - 0.7446277963476642
  train_matthews_corrcoef_micro_oob:
  - 0.7198857978325438
  - 0.7266575336402995
  - 0.7078008954651698
  - 0.7337193720195073
  - 0.7081920933388297
  train_matthews_corrcoef_samples:
  - 0.7711473062589622
  - 0.7680730594491422
  - 0.7545965906305199
  - 0.7799256565108408
  - 0.7520770026200596
  train_matthews_corrcoef_samples_oob:
  - 0.7312748697002143
  - 0.7359910434600112
  - 0.7131476748867901
  - 0.7438156145401574
  - 0.7144827043621553
  train_matthews_corrcoef_weighted:
  - 0.7523783182635687
  - 0.7562280518024752
  - 0.7377834068395821
  - 0.7646907952113201
  - 0.7399651285779716
  train_matthews_corrcoef_weighted_oob:
  - 0.7143557838604934
  - 0.7231838533405852
  - 0.7016003109837119
  - 0.7278803813159929
  - 0.7044093779023664
  train_ndgc:
  - 0.90415224159819
  - 0.9060740282018904
  - 0.8973288872799554
  - 0.9130500534365333
  - 0.9027110677886134
  train_ndgc_oob:
  - 0.8936091464456835
  - 0.8979918313982531
  - 0.8853705896712553
  - 0.9033219848693842
  - 0.8956840400472827
  train_neg_coverage_error:
  - -2.308016877637131
  - -2.302127659574468
  - -2.3276955602536997
  - -2.261603375527426
  - -2.288981288981289
  train_neg_coverage_error_oob:
  - -2.419831223628692
  - -2.421276595744681
  - -2.4651162790697674
  - -2.3945147679324896
  - -2.3825363825363826
  train_neg_hamming_loss_macro:
  - -0.11251758087201125
  - -0.11241134751773048
  - -0.11874559548978154
  - -0.1051336146272855
  - -0.11954261954261954
  train_neg_hamming_loss_macro_oob:
  - -0.1290436005625879
  - -0.12730496453900708
  - -0.1338971106412967
  - -0.12165963431786216
  - -0.13652113652113654
  train_neg_hamming_loss_micro:
  - -0.11251758087201125
  - -0.11241134751773049
  - -0.11874559548978153
  - -0.10513361462728552
  - -0.11954261954261955
  train_neg_hamming_loss_micro_oob:
  - -0.1290436005625879
  - -0.12730496453900708
  - -0.1338971106412967
  - -0.12165963431786217
  - -0.1365211365211365
  train_neg_hamming_loss_samples:
  - -0.11251758087201125
  - -0.11241134751773049
  - -0.11874559548978153
  - -0.1051336146272855
  - -0.11954261954261955
  train_neg_hamming_loss_samples_oob:
  - -0.1290436005625879
  - -0.12730496453900708
  - -0.13389711064129667
  - -0.12165963431786216
  - -0.1365211365211365
  train_neg_hamming_loss_weighted:
  - -0.11874283485317691
  - -0.11720681429363147
  - -0.1255594918385616
  - -0.11186661344889193
  - -0.12440222823970003
  train_neg_hamming_loss_weighted_oob:
  - -0.13433134017381873
  - -0.13175104214356279
  - -0.1405824429080243
  - -0.1281716843425704
  - -0.14088406864930567
  train_neg_label_ranking_loss:
  - -0.0841361931551805
  - -0.08033687943262412
  - -0.08788466055907916
  - -0.07467182372245663
  - -0.08465580965580967
  train_neg_label_ranking_loss_oob:
  - -0.10233239568682606
  - -0.098274231678487
  - -0.11051209772140005
  - -0.09607946554149087
  - -0.09998844998845
  train_precision_macro:
  - 0.8874824191279888
  - 0.8875886524822695
  - 0.8812544045102184
  - 0.8948663853727146
  - 0.8804573804573805
  train_precision_macro_oob:
  - 0.8709563994374121
  - 0.872695035460993
  - 0.8661028893587034
  - 0.8783403656821377
  - 0.8634788634788636
  train_precision_micro:
  - 0.8874824191279888
  - 0.8875886524822695
  - 0.8812544045102184
  - 0.8948663853727145
  - 0.8804573804573804
  train_precision_micro_oob:
  - 0.8709563994374121
  - 0.8726950354609929
  - 0.8661028893587033
  - 0.8783403656821378
  - 0.8634788634788635
  train_precision_samples:
  - 0.8874824191279888
  - 0.8875886524822696
  - 0.8812544045102185
  - 0.8948663853727145
  - 0.8804573804573804
  train_precision_samples_oob:
  - 0.8709563994374121
  - 0.8726950354609928
  - 0.8661028893587033
  - 0.8783403656821378
  - 0.8634788634788636
  train_precision_weighted:
  - 0.8812571651468231
  - 0.8827931857063686
  - 0.8744405081614384
  - 0.8881333865511082
  - 0.8755977717603
  train_precision_weighted_oob:
  - 0.8656686598261812
  - 0.8682489578564373
  - 0.8594175570919756
  - 0.8718283156574296
  - 0.8591159313506944
  train_recall_macro:
  - 0.8874824191279888
  - 0.8875886524822695
  - 0.8812544045102184
  - 0.8948663853727146
  - 0.8804573804573805
  train_recall_macro_oob:
  - 0.8709563994374121
  - 0.872695035460993
  - 0.8661028893587034
  - 0.8783403656821377
  - 0.8634788634788636
  train_recall_micro:
  - 0.8874824191279888
  - 0.8875886524822695
  - 0.8812544045102184
  - 0.8948663853727145
  - 0.8804573804573804
  train_recall_micro_oob:
  - 0.8709563994374121
  - 0.8726950354609929
  - 0.8661028893587033
  - 0.8783403656821378
  - 0.8634788634788635
  train_recall_samples:
  - 0.8874824191279888
  - 0.8875886524822696
  - 0.8812544045102185
  - 0.8948663853727145
  - 0.8804573804573804
  train_recall_samples_oob:
  - 0.8709563994374121
  - 0.8726950354609928
  - 0.8661028893587033
  - 0.8783403656821378
  - 0.8634788634788636
  train_recall_weighted:
  - 0.8812571651468231
  - 0.8827931857063686
  - 0.8744405081614384
  - 0.8881333865511082
  - 0.8755977717603
  train_recall_weighted_oob:
  - 0.8656686598261812
  - 0.8682489578564373
  - 0.8594175570919756
  - 0.8718283156574296
  - 0.8591159313506944
  train_roc_auc_macro:
  - 0.9294050912336331
  - 0.9338538051008739
  - 0.9306241457984304
  - 0.9353936344401422
  - 0.9286022890039903
  train_roc_auc_macro_oob:
  - 0.9142361801697193
  - 0.9212802219353513
  - 0.9139190230204722
  - 0.9227769523481086
  - 0.9134690243729505
  train_roc_auc_micro:
  - 0.929398355511594
  - 0.93180426936612
  - 0.9282605682605682
  - 0.9358039020615707
  - 0.9280592550790068
  train_roc_auc_micro_oob:
  - 0.9151016874066384
  - 0.9200144296179016
  - 0.9128387040887042
  - 0.9235690828865676
  - 0.9146893340857787
  train_roc_auc_samples:
  - 0.9158638068448196
  - 0.9196631205673759
  - 0.9121153394409209
  - 0.9253281762775435
  - 0.9153441903441903
  train_roc_auc_samples_oob:
  - 0.8976676043131738
  - 0.901725768321513
  - 0.8894879022785999
  - 0.9039205344585091
  - 0.9000115500115501
  train_roc_auc_weighted:
  - 0.9212648392725041
  - 0.9277708538878551
  - 0.9230747399241093
  - 0.9263476623401535
  - 0.9214104808898561
  train_roc_auc_weighted_oob:
  - 0.9063796466909592
  - 0.9155673400236348
  - 0.9070879241548658
  - 0.9142674803075413
  - 0.9070435937231062
start: 2023-12-22 02:48:48.099142
wrapper: null
