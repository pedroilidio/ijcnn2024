active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzM/D8AMzMzMzPzvwCYmZmZmcm/ADMzMzMz878AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:46:48.630262
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__0
  params: {}
hash: b3c458a375e0a19d1c983effe097a5fcbab2530b2f1e84ae1da3bc7d9865c09c
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b3c458a_20231221T174640819022_embedding_proba_weak__0_Gram_positive.yml
results:
  fit_time:
  - 1.2468712329864502
  - 1.3132476806640625
  - 1.3064260482788086
  - 1.3282854557037354
  - 1.2375643253326416
  score_time:
  - 1.0320825576782227
  - 0.9390449523925781
  - 0.9309370517730713
  - 0.9169185161590576
  - 0.9318637847900391
  test_average_precision_macro:
  - 0.9605526721126336
  - 0.884328620082477
  - 0.886512170660188
  - 0.8782372456085501
  - 0.925485267981236
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9571880265128039
  - 0.9480788850902723
  - 0.9387801810040809
  - 0.9634864214630469
  - 0.9604167484796732
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9493464052287582
  - 0.9444444444444443
  - 0.9302884615384616
  - 0.9666666666666667
  - 0.9571197411003236
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9594814537112478
  - 0.9449756748077726
  - 0.9547894606349712
  - 0.9603691258365449
  - 0.9797696399678705
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.672134238310709
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6738544474393531
  - 0.6695294996265869
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.614350235264661
  - 0.6207709774756927
  - 0.6224964113973193
  - 0.6176403871358
  - 0.6190201012897639
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.59375
  - 0.6
  - 0.6
  - 0.596958174904943
  - 0.5968992248062015
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5947712418300652
  - 0.5999999999999999
  - 0.5999999999999999
  - 0.5974603174603172
  - 0.5974110032362459
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5129336924232528
  - 0.5169160900972294
  - 0.5100143544107231
  - 0.5150097868204152
  - 0.5092665218136275
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9493464052287581
  - 0.9444444444444445
  - 0.9302884615384616
  - 0.9666666666666667
  - 0.9571197411003237
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.96191662248047
  - 0.9582428142191234
  - 0.9480896847109113
  - 0.975534328540011
  - 0.9678137760673258
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1862745098039216
  - -1.180952380952381
  - -1.1826923076923077
  - -1.1333333333333333
  - -1.145631067961165
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2549019607843137
  - -0.25
  - -0.25
  - -0.2523809523809524
  - -0.2524271844660194
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2549019607843137
  - -0.25
  - -0.25
  - -0.2523809523809524
  - -0.2524271844660194
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2549019607843137
  - -0.25
  - -0.25
  - -0.2523809523809524
  - -0.2524271844660194
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32786576168929105
  - -0.3248072562358277
  - -0.3304363905325444
  - -0.32614555256064687
  - -0.330470500373413
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05555555555555556
  - -0.06031746031746031
  - -0.06089743589743589
  - -0.03968253968253968
  - -0.04530744336569579
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.672134238310709
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6738544474393531
  - 0.6695294996265869
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7450980392156863
  - 0.75
  - 0.75
  - 0.7476190476190476
  - 0.7475728155339806
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.672134238310709
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6738544474393531
  - 0.6695294996265869
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9869303707088594
  - 0.985031774719422
  - 0.9821081411887933
  - 0.9903091659931299
  - 0.9867805576506461
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9673899291497977
  - 0.9644142101284958
  - 0.9654215976331362
  - 0.9708869126306935
  - 0.9719655344655345
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9444444444444445
  - 0.9396825396825396
  - 0.939102564102564
  - 0.9603174603174605
  - 0.9546925566343043
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9846649252386956
  - 0.9886305002382325
  - 0.9815919054145137
  - 0.9943045121560673
  - 0.9926454120491488
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.938686309748499
  - 0.9537755659469622
  - 0.9222232684237559
  - 0.9512450183048895
  - 0.9509999241316185
  train_average_precision_macro_oob:
  - 0.8138473133265673
  - 0.8553032884370753
  - 0.7952676261030395
  - 0.8965656448281112
  - 0.8590942988587866
  train_average_precision_micro:
  - 0.9550044420427238
  - 0.9541190270539449
  - 0.9570763425612006
  - 0.9579098771696721
  - 0.9595936614305436
  train_average_precision_micro_oob:
  - 0.9429063466356739
  - 0.948223954252527
  - 0.9494895608945866
  - 0.9522069538051947
  - 0.9513267480191759
  train_average_precision_samples:
  - 0.9488409272581934
  - 0.9436392914653785
  - 0.9471887550200803
  - 0.9516908212560387
  - 0.9489182692307693
  train_average_precision_samples_oob:
  - 0.9420463629096724
  - 0.9404186795491144
  - 0.9419678714859439
  - 0.9468599033816425
  - 0.944511217948718
  train_average_precision_weighted:
  - 0.9740894187631676
  - 0.9720182151816171
  - 0.9699810279404876
  - 0.9762630007910688
  - 0.9728325654514252
  train_average_precision_weighted_oob:
  - 0.943284828976187
  - 0.953788115453547
  - 0.9423067764958004
  - 0.9613875906583182
  - 0.9486126166998327
  train_f1_macro:
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971013
  - 0.7481971153846154
  train_f1_macro_oob:
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971013
  - 0.7481971153846154
  train_f1_micro:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_f1_micro_oob:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_f1_samples:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_f1_samples_oob:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_f1_weighted:
  - 0.6721152910607076
  - 0.6713473406837251
  - 0.6727549817408057
  - 0.6717003209026983
  - 0.6727613824123371
  train_f1_weighted_oob:
  - 0.6721152910607076
  - 0.6713473406837251
  - 0.6727549817408057
  - 0.6717003209026983
  - 0.6727613824123371
  train_jaccard_macro:
  - 0.6199603680221331
  - 0.6183720641180411
  - 0.6179462311943094
  - 0.6191601671882165
  - 0.6188179435353216
  train_jaccard_macro_oob:
  - 0.6199603680221331
  - 0.6183720641180411
  - 0.6179462311943094
  - 0.6191601671882165
  - 0.6188179435353216
  train_jaccard_micro:
  - 0.5984666986104457
  - 0.5969141755062681
  - 0.596921596921597
  - 0.597684515195369
  - 0.5976956313010081
  train_jaccard_micro_oob:
  - 0.5984666986104457
  - 0.5969141755062681
  - 0.596921596921597
  - 0.597684515195369
  - 0.5976956313010081
  train_jaccard_samples:
  - 0.5987210231814547
  - 0.5974235104669885
  - 0.5974297188755018
  - 0.5980676328502413
  - 0.598076923076923
  train_jaccard_samples_oob:
  - 0.5987210231814547
  - 0.5974235104669885
  - 0.5974297188755018
  - 0.5980676328502413
  - 0.598076923076923
  train_jaccard_weighted:
  - 0.512902401286592
  - 0.5119039756471861
  - 0.5136259098268408
  - 0.5123999115978736
  - 0.5138113173203459
  train_jaccard_weighted_oob:
  - 0.512902401286592
  - 0.5119039756471861
  - 0.5136259098268408
  - 0.5123999115978736
  - 0.5138113173203459
  train_label_ranking_average_precision_score:
  - 0.9488409272581935
  - 0.9436392914653785
  - 0.9471887550200803
  - 0.9516908212560387
  - 0.9489182692307693
  train_label_ranking_average_precision_score_oob:
  - 0.9420463629096724
  - 0.9404186795491144
  - 0.9419678714859436
  - 0.9468599033816425
  - 0.944511217948718
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9618575674861423
  - 0.9580152769468773
  - 0.9605602239495912
  - 0.9637522176729453
  - 0.9618569541804818
  train_ndgc_oob:
  - 0.9568688883234281
  - 0.9556571103147173
  - 0.9566874269874572
  - 0.9601863215721865
  - 0.9586229367955231
  train_neg_coverage_error:
  - -1.160671462829736
  - -1.1763285024154588
  - -1.1759036144578314
  - -1.1594202898550725
  - -1.1682692307692308
  train_neg_coverage_error_oob:
  - -1.1822541966426858
  - -1.181159420289855
  - -1.1879518072289157
  - -1.1690821256038648
  - -1.1754807692307692
  train_neg_hamming_loss_macro:
  - -0.25119904076738614
  - -0.2524154589371981
  - -0.2524096385542169
  - -0.25181159420289856
  - -0.25180288461538464
  train_neg_hamming_loss_macro_oob:
  - -0.25119904076738614
  - -0.2524154589371981
  - -0.2524096385542169
  - -0.25181159420289856
  - -0.25180288461538464
  train_neg_hamming_loss_micro:
  - -0.2511990407673861
  - -0.2524154589371981
  - -0.2524096385542169
  - -0.25181159420289856
  - -0.25180288461538464
  train_neg_hamming_loss_micro_oob:
  - -0.2511990407673861
  - -0.2524154589371981
  - -0.2524096385542169
  - -0.25181159420289856
  - -0.25180288461538464
  train_neg_hamming_loss_samples:
  - -0.2511990407673861
  - -0.2524154589371981
  - -0.2524096385542169
  - -0.25181159420289856
  - -0.25180288461538464
  train_neg_hamming_loss_samples_oob:
  - -0.2511990407673861
  - -0.2524154589371981
  - -0.2524096385542169
  - -0.25181159420289856
  - -0.25180288461538464
  train_neg_hamming_loss_weighted:
  - -0.3278847089392925
  - -0.3286526593162749
  - -0.32724501825919433
  - -0.3282996790973019
  - -0.3272386175876629
  train_neg_hamming_loss_weighted_oob:
  - -0.3278847089392925
  - -0.3286526593162749
  - -0.32724501825919433
  - -0.3282996790973019
  - -0.3272386175876629
  train_neg_label_ranking_loss:
  - -0.05155875299760192
  - -0.05515297906602255
  - -0.055020080321285136
  - -0.050724637681159424
  - -0.0532852564102564
  train_neg_label_ranking_loss_oob:
  - -0.058553157474020776
  - -0.05676328502415459
  - -0.05903614457831325
  - -0.05394524959742351
  - -0.05568910256410256
  train_precision_macro:
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971013
  - 0.7481971153846154
  train_precision_macro_oob:
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971013
  - 0.7481971153846154
  train_precision_micro:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_precision_micro_oob:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_precision_samples:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_precision_samples_oob:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_precision_weighted:
  - 0.6721152910607076
  - 0.6713473406837251
  - 0.6727549817408057
  - 0.6717003209026983
  - 0.6727613824123371
  train_precision_weighted_oob:
  - 0.6721152910607076
  - 0.6713473406837251
  - 0.6727549817408057
  - 0.6717003209026983
  - 0.6727613824123371
  train_recall_macro:
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971013
  - 0.7481971153846154
  train_recall_macro_oob:
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971013
  - 0.7481971153846154
  train_recall_micro:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_recall_micro_oob:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_recall_samples:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_recall_samples_oob:
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7475903614457832
  - 0.7481884057971014
  - 0.7481971153846154
  train_recall_weighted:
  - 0.6721152910607076
  - 0.6713473406837251
  - 0.6727549817408057
  - 0.6717003209026983
  - 0.6727613824123371
  train_recall_weighted_oob:
  - 0.6721152910607076
  - 0.6713473406837251
  - 0.6727549817408057
  - 0.6717003209026983
  - 0.6727613824123371
  train_roc_auc_macro:
  - 0.9903114613855752
  - 0.9904655103989187
  - 0.9894499014758242
  - 0.9918633633906263
  - 0.9923166206207311
  train_roc_auc_macro_oob:
  - 0.9754713614107018
  - 0.9810284254694727
  - 0.9744703188687023
  - 0.9881446222622947
  - 0.9834548652176118
  train_roc_auc_micro:
  - 0.9694514561529892
  - 0.9686289817656197
  - 0.9684948815240615
  - 0.9706559207839539
  - 0.9700913438958698
  train_roc_auc_micro_oob:
  - 0.9645195870300058
  - 0.9664588663610856
  - 0.9648755045876852
  - 0.968463001995498
  - 0.9668497378535622
  train_roc_auc_samples:
  - 0.9484412470023981
  - 0.9448470209339773
  - 0.9449799196787148
  - 0.9492753623188406
  - 0.9467147435897437
  train_roc_auc_samples_oob:
  - 0.9414468425259793
  - 0.9432367149758454
  - 0.9409638554216867
  - 0.9460547504025766
  - 0.9443108974358976
  train_roc_auc_weighted:
  - 0.9918498731284094
  - 0.9898362977614211
  - 0.9924372381787069
  - 0.9916837442848722
  - 0.9924977071595674
  train_roc_auc_weighted_oob:
  - 0.9845954071809191
  - 0.9863787843709514
  - 0.9869549937501263
  - 0.9887449689826816
  - 0.988155828042399
start: 2023-12-21 17:46:40.819022
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
