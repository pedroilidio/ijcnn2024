active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP4CZmZmZmdk/QDMzMzMz479AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMzA8CAmZmZmZkRwAA0MzMzM+M/AM3MzMzMBEAAzczMzMwMQA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 07:07:02.815191
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__5
  params: {}
hash: 344deb69c5218c9c7b64341e71e5e116eb747cc289582cbc387ecb9aab780b9c
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/344deb6_20231222T070549104472_embedding_proba__5_PlantGO.yml
results:
  fit_time:
  - 31.270281076431274
  - 33.633124589920044
  - 37.08811044692993
  - 34.506052017211914
  - 36.520763635635376
  score_time:
  - 7.3262717723846436
  - 7.590876817703247
  - 7.68362283706665
  - 7.638416290283203
  - 7.781439781188965
  test_average_precision_macro:
  - 0.8825248458620957
  - 0.7486742183597631
  - 0.8267638992237506
  - 0.7771548043295202
  - 0.8016567644417981
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8808833598856461
  - 0.8073504263652015
  - 0.8558489214365006
  - 0.8605084722892913
  - 0.8607600912453764
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9222783389450057
  - 0.8891666666666665
  - 0.8923099123099122
  - 0.8937535981577432
  - 0.8828683035714286
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9210074884731355
  - 0.8235378050702947
  - 0.8786864034126272
  - 0.8644630644139812
  - 0.8733278736510051
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9642255892255892
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777778
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9642255892255892
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777778
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9642255892255893
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777777
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9543290043290045
  - 0.9417380952380955
  - 0.9359825009114109
  - 0.946590378901358
  - 0.9364485524256649
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9312437629734495
  - 0.918936740682029
  - 0.9163874228634529
  - 0.9236489916145861
  - 0.9126026226477227
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9309223892726534
  - 0.9176987614862165
  - 0.9148936170212766
  - 0.9227895392278954
  - 0.9112401493156367
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9353979353979353
  - 0.922967032967033
  - 0.9201577909270217
  - 0.9288959744918295
  - 0.9177884615384615
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9129740640026841
  - 0.8915892086825371
  - 0.8816505875317953
  - 0.8996843051155072
  - 0.8822215003425251
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9222783389450057
  - 0.8891666666666669
  - 0.8923099123099122
  - 0.893753598157743
  - 0.8828683035714288
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4622617047244664
  - 0.3345036907038678
  - 0.4404753436835051
  - 0.3718968413106165
  - 0.39704173369906465
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7570520166245498
  - 0.7007288582223603
  - 0.6968099792478215
  - 0.7324927023034759
  - 0.6893731098197284
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6556076168088475
  - 0.6004151770043953
  - 0.5969436368006552
  - 0.6625045647303693
  - 0.6129248063080369
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7064877049408125
  - 0.6133404606608928
  - 0.6436697097454528
  - 0.6542193864473288
  - 0.6218196020209223
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9422715617111952
  - 0.91822131428268
  - 0.9196668764971406
  - 0.9216234625761338
  - 0.9152612946559066
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2828282828282829
  - -1.4
  - -1.435897435897436
  - -1.461139896373057
  - -1.5833333333333333
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.03577441077441078
  - -0.042916666666666665
  - -0.04444444444444443
  - -0.04015544041450777
  - -0.04644097222222222
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.03577441077441077
  - -0.042916666666666665
  - -0.044444444444444446
  - -0.04015544041450777
  - -0.046440972222222224
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.03577441077441077
  - -0.04291666666666666
  - -0.04444444444444444
  - -0.04015544041450777
  - -0.04644097222222222
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.04567099567099568
  - -0.058261904761904765
  - -0.06401749908858914
  - -0.05340962109864204
  - -0.06355144757433491
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.01999540863177227
  - -0.02997727272727273
  - -0.03142191142191142
  - -0.03110901763751505
  - -0.03706071127946128
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9642255892255892
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777778
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9642255892255892
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777778
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9642255892255893
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777777
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9543290043290045
  - 0.9417380952380955
  - 0.9359825009114109
  - 0.946590378901358
  - 0.9364485524256649
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9642255892255892
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777778
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9642255892255892
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777778
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9642255892255893
  - 0.9570833333333333
  - 0.9555555555555556
  - 0.9598445595854922
  - 0.9535590277777777
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9543290043290045
  - 0.9417380952380955
  - 0.9359825009114109
  - 0.946590378901358
  - 0.9364485524256649
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9839154265069352
  - 0.9570374870958674
  - 0.9775781014525305
  - 0.9713844039724933
  - 0.9691792361418461
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9831398672118894
  - 0.9695390302239617
  - 0.9800142024268788
  - 0.9791649311614189
  - 0.9761699481120745
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9800045913682278
  - 0.9700227272727272
  - 0.9685780885780886
  - 0.9688909823624849
  - 0.9629392887205387
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9855568918360631
  - 0.9636734050924906
  - 0.9754226304428557
  - 0.9756291007411059
  - 0.9697429437836431
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9650968826735
  - 0.973909326380312
  - 0.9525624253298711
  - 0.9618355855653697
  - 0.9636431824060271
  train_average_precision_macro_oob:
  - 0.8172299882617646
  - 0.8458326012954424
  - 0.7953784049308625
  - 0.8257086422163042
  - 0.8366742671835953
  train_average_precision_micro:
  - 0.9635416517521883
  - 0.9728540140431203
  - 0.9659819671193925
  - 0.9648989170913576
  - 0.9673627542847442
  train_average_precision_micro_oob:
  - 0.8769198599452912
  - 0.8971069087948403
  - 0.8833545347251752
  - 0.8788563460948342
  - 0.89176661328468
  train_average_precision_samples:
  - 0.9627136752136751
  - 0.9705441302485003
  - 0.9636015325670498
  - 0.9664543524416137
  - 0.9656488549618321
  train_average_precision_samples_oob:
  - 0.9122379934879935
  - 0.9270075896682579
  - 0.915108759553204
  - 0.9166879440446319
  - 0.9232768892120037
  train_average_precision_weighted:
  - 0.9755293161519963
  - 0.9826367356866096
  - 0.9713348031784893
  - 0.9743837760102492
  - 0.9754404205239031
  train_average_precision_weighted_oob:
  - 0.8876650271795731
  - 0.908976566171414
  - 0.8836191142797972
  - 0.8978064476402503
  - 0.9017606623411689
  train_f1_macro:
  - 0.9723290598290597
  - 0.9727934875749785
  - 0.9726479352916133
  - 0.9733545647558387
  - 0.9729643765903307
  train_f1_macro_oob:
  - 0.9588675213675212
  - 0.9617609254498715
  - 0.9596636866751808
  - 0.9601910828025476
  - 0.96087786259542
  train_f1_micro:
  - 0.9723290598290598
  - 0.9727934875749786
  - 0.9726479352916134
  - 0.9733545647558386
  - 0.9729643765903307
  train_f1_micro_oob:
  - 0.9588675213675214
  - 0.9617609254498715
  - 0.959663686675181
  - 0.9601910828025477
  - 0.9608778625954199
  train_f1_samples:
  - 0.9723290598290599
  - 0.9727934875749785
  - 0.9726479352916133
  - 0.9733545647558386
  - 0.9729643765903307
  train_f1_samples_oob:
  - 0.9588675213675213
  - 0.9617609254498715
  - 0.9596636866751809
  - 0.9601910828025477
  - 0.9608778625954199
  train_f1_weighted:
  - 0.9692611136398119
  - 0.9711671559605115
  - 0.968908318352672
  - 0.9701361427234583
  - 0.9703344756516955
  train_f1_weighted_oob:
  - 0.9483067819754211
  - 0.9544743767207677
  - 0.9495635936639367
  - 0.9495336130648718
  - 0.9530561549201282
  train_jaccard_macro:
  - 0.9462711753164254
  - 0.9470943065664845
  - 0.9468799539379488
  - 0.948161244405966
  - 0.9474835819613405
  train_jaccard_macro_oob:
  - 0.9215384923519406
  - 0.9267137268868177
  - 0.9230200184352212
  - 0.9239275156870694
  - 0.9251516463289565
  train_jaccard_micro:
  - 0.9461482482586547
  - 0.9470281543274244
  - 0.9467523049829069
  - 0.948092234515562
  - 0.9473521213998142
  train_jaccard_micro_oob:
  - 0.9209851205746536
  - 0.9263385948622718
  - 0.922455242966752
  - 0.9234303215926493
  - 0.9247015610651974
  train_jaccard_samples:
  - 0.950115525500141
  - 0.9508912681149185
  - 0.9508961026202406
  - 0.9518667319941206
  - 0.9512289237480077
  train_jaccard_samples_oob:
  - 0.9260185967878276
  - 0.9311957964914263
  - 0.9277616381064657
  - 0.9282648561629453
  - 0.9293347873500546
  train_jaccard_weighted:
  - 0.940557905875306
  - 0.9440520242502384
  - 0.939885048199692
  - 0.9421148537807599
  - 0.9425507441919074
  train_jaccard_weighted_oob:
  - 0.9023297105632156
  - 0.9133210875823309
  - 0.9046350945876012
  - 0.9044502515564137
  - 0.9108269993621433
  train_label_ranking_average_precision_score:
  - 0.962713675213675
  - 0.9705441302485005
  - 0.9636015325670498
  - 0.9664543524416135
  - 0.9656488549618321
  train_label_ranking_average_precision_score_oob:
  - 0.912237993487994
  - 0.9270075896682584
  - 0.9151087595532045
  - 0.916687944044632
  - 0.9232768892120039
  train_matthews_corrcoef_macro:
  - 0.517755635189867
  - 0.5207694583207865
  - 0.5778650802601617
  - 0.5430467410349519
  - 0.5758617477592055
  train_matthews_corrcoef_macro_oob:
  - 0.36009806825033425
  - 0.35718292789533707
  - 0.3540691399205899
  - 0.4053730948771977
  - 0.3382853051809445
  train_matthews_corrcoef_micro:
  - 0.8200024250390673
  - 0.8237039140904929
  - 0.8214574057416816
  - 0.8259220727606291
  - 0.8225696923308249
  train_matthews_corrcoef_micro_oob:
  - 0.7212616059352986
  - 0.7439088752237324
  - 0.7264355397479777
  - 0.7293769672261896
  - 0.733517270168305
  train_matthews_corrcoef_samples:
  - 0.7416743267262268
  - 0.7453141061328835
  - 0.7522523539793254
  - 0.7480298041866338
  - 0.7431067463986402
  train_matthews_corrcoef_samples_oob:
  - 0.615023560967362
  - 0.6386797336602579
  - 0.6307215792612785
  - 0.622870405861363
  - 0.6229736892504519
  train_matthews_corrcoef_weighted:
  - 0.7748519106618246
  - 0.779773645960503
  - 0.7893346934855843
  - 0.7855648070764871
  - 0.7895118258913733
  train_matthews_corrcoef_weighted_oob:
  - 0.6466601951552898
  - 0.6599777791758005
  - 0.6464731564900577
  - 0.667616724860959
  - 0.6475070933298863
  train_ndgc:
  - 0.9725749101995135
  - 0.9783001955316386
  - 0.9732084473707394
  - 0.9753428974347508
  - 0.9746696074165544
  train_ndgc_oob:
  - 0.9358942365442081
  - 0.9466807805585772
  - 0.9377347778583853
  - 0.9388589029237402
  - 0.943390488467997
  train_neg_coverage_error:
  - -1.1653846153846155
  - -1.1516709511568124
  - -1.1596424010217115
  - -1.1503184713375796
  - -1.143765903307888
  train_neg_coverage_error_oob:
  - -1.373076923076923
  - -1.3354755784061696
  - -1.367816091954023
  - -1.3605095541401273
  - -1.3078880407124682
  train_neg_hamming_loss_macro:
  - -0.02767094017094017
  - -0.027206512425021423
  - -0.02735206470838655
  - -0.026645435244161356
  - -0.02703562340966921
  train_neg_hamming_loss_macro_oob:
  - -0.04113247863247863
  - -0.03823907455012853
  - -0.04033631332481907
  - -0.03980891719745223
  - -0.039122137404580155
  train_neg_hamming_loss_micro:
  - -0.02767094017094017
  - -0.027206512425021423
  - -0.027352064708386546
  - -0.02664543524416136
  - -0.02703562340966921
  train_neg_hamming_loss_micro_oob:
  - -0.04113247863247863
  - -0.03823907455012854
  - -0.04033631332481907
  - -0.03980891719745223
  - -0.039122137404580155
  train_neg_hamming_loss_samples:
  - -0.027670940170940173
  - -0.02720651242502142
  - -0.027352064708386543
  - -0.026645435244161356
  - -0.02703562340966921
  train_neg_hamming_loss_samples_oob:
  - -0.041132478632478625
  - -0.03823907455012854
  - -0.04033631332481907
  - -0.03980891719745223
  - -0.039122137404580155
  train_neg_hamming_loss_weighted:
  - -0.03073888636018814
  - -0.028832844039488294
  - -0.031091681647328
  - -0.029863857276541797
  - -0.029665524348304353
  train_neg_hamming_loss_weighted_oob:
  - -0.05169321802457896
  - -0.04552562327923214
  - -0.050436406336063146
  - -0.05046638693512844
  - -0.04694384507987163
  train_neg_label_ranking_loss:
  - -0.007296900630233963
  - -0.005849194602407969
  - -0.007257332800116963
  - -0.006687898089171975
  - -0.006552162849872774
  train_neg_label_ranking_loss_oob:
  - -0.02366075282741949
  - -0.020433123003817093
  - -0.02395668047009043
  - -0.023779622123571167
  - -0.02041749128263123
  train_precision_macro:
  - 0.9723290598290597
  - 0.9727934875749785
  - 0.9726479352916133
  - 0.9733545647558387
  - 0.9729643765903307
  train_precision_macro_oob:
  - 0.9588675213675212
  - 0.9617609254498715
  - 0.9596636866751808
  - 0.9601910828025476
  - 0.96087786259542
  train_precision_micro:
  - 0.9723290598290598
  - 0.9727934875749786
  - 0.9726479352916134
  - 0.9733545647558386
  - 0.9729643765903307
  train_precision_micro_oob:
  - 0.9588675213675214
  - 0.9617609254498715
  - 0.959663686675181
  - 0.9601910828025477
  - 0.9608778625954199
  train_precision_samples:
  - 0.9723290598290599
  - 0.9727934875749785
  - 0.9726479352916133
  - 0.9733545647558386
  - 0.9729643765903307
  train_precision_samples_oob:
  - 0.9588675213675213
  - 0.9617609254498715
  - 0.9596636866751809
  - 0.9601910828025477
  - 0.9608778625954199
  train_precision_weighted:
  - 0.9692611136398119
  - 0.9711671559605115
  - 0.968908318352672
  - 0.9701361427234583
  - 0.9703344756516955
  train_precision_weighted_oob:
  - 0.9483067819754211
  - 0.9544743767207677
  - 0.9495635936639367
  - 0.9495336130648718
  - 0.9530561549201282
  train_recall_macro:
  - 0.9723290598290597
  - 0.9727934875749785
  - 0.9726479352916133
  - 0.9733545647558387
  - 0.9729643765903307
  train_recall_macro_oob:
  - 0.9588675213675212
  - 0.9617609254498715
  - 0.9596636866751808
  - 0.9601910828025476
  - 0.96087786259542
  train_recall_micro:
  - 0.9723290598290598
  - 0.9727934875749786
  - 0.9726479352916134
  - 0.9733545647558386
  - 0.9729643765903307
  train_recall_micro_oob:
  - 0.9588675213675214
  - 0.9617609254498715
  - 0.959663686675181
  - 0.9601910828025477
  - 0.9608778625954199
  train_recall_samples:
  - 0.9723290598290599
  - 0.9727934875749785
  - 0.9726479352916133
  - 0.9733545647558386
  - 0.9729643765903307
  train_recall_samples_oob:
  - 0.9588675213675213
  - 0.9617609254498715
  - 0.9596636866751809
  - 0.9601910828025477
  - 0.9608778625954199
  train_recall_weighted:
  - 0.9692611136398119
  - 0.9711671559605115
  - 0.968908318352672
  - 0.9701361427234583
  - 0.9703344756516955
  train_recall_weighted_oob:
  - 0.9483067819754211
  - 0.9544743767207677
  - 0.9495635936639367
  - 0.9495336130648718
  - 0.9530561549201282
  train_roc_auc_macro:
  - 0.9971477991897616
  - 0.9981810587079076
  - 0.9968128269112153
  - 0.9972482254128282
  - 0.9972947157374802
  train_roc_auc_macro_oob:
  - 0.9798500543218692
  - 0.9824309832830639
  - 0.9787033170864787
  - 0.9793707994416656
  - 0.9806349627246426
  train_roc_auc_micro:
  - 0.9966414993380981
  - 0.9976035886239449
  - 0.9967583315230161
  - 0.9967582159183348
  - 0.9970532768866189
  train_roc_auc_micro_oob:
  - 0.9827617813326291
  - 0.9848394993933709
  - 0.9834332425219123
  - 0.9825380650067199
  - 0.9850757246867733
  train_roc_auc_samples:
  - 0.9927030993697661
  - 0.994150805397592
  - 0.992742667199883
  - 0.993312101910828
  - 0.9934478371501273
  train_roc_auc_samples_oob:
  - 0.9763392471725804
  - 0.9795668769961828
  - 0.9760433195299095
  - 0.9762203778764288
  - 0.9795825087173687
  train_roc_auc_weighted:
  - 0.9964672836104005
  - 0.9974451770774857
  - 0.9967589115077751
  - 0.996711614972057
  - 0.9968866260142883
  train_roc_auc_weighted_oob:
  - 0.9814736127494834
  - 0.9847382755984607
  - 0.982127616809752
  - 0.9820937416741915
  - 0.9843327974353576
start: 2023-12-22 07:05:49.104472
wrapper: null
