active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j/AzMzMzMwEwICZmZmZmfm/gGZmZmZm9j+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:42:34.725746
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__7
  params: {}
hash: 1cce78e8e883f0fae159ae5e4a1365a0438c97eff551cc19e15829e14f4ba3d6
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1cce78e_20231221T123833948623_embedding_proba_weak__7_VirusPseAAC.yml
results:
  fit_time:
  - 220.12843680381775
  - 222.11522603034973
  - 226.02320623397827
  - 227.2351849079132
  - 227.01814484596252
  score_time:
  - 4.665494441986084
  - 4.774003028869629
  - 4.930403709411621
  - 4.75905966758728
  - 4.868017911911011
  test_average_precision_macro:
  - 0.5348985921595237
  - 0.3209876383940813
  - 0.26053313923586985
  - 0.4640132766672242
  - 0.3638952879087573
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4854837250705393
  - 0.43402529187623623
  - 0.34289297509961575
  - 0.4866315104448557
  - 0.4286745593190164
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6568055555555555
  - 0.6195075757575758
  - 0.6565891472868217
  - 0.7022916666666668
  - 0.6797222222222222
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.521944457543907
  - 0.4279987186966816
  - 0.37175300710146564
  - 0.4793801946725086
  - 0.4316395209877777
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7875000000000001
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7916666666666666
  - 0.7875000000000001
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7875
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7916666666666666
  - 0.7875
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7875000000000001
  - 0.8106060606060609
  - 0.806201550387597
  - 0.7916666666666667
  - 0.7875
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6749999999999999
  - 0.6990909090909091
  - 0.6827906976744186
  - 0.675
  - 0.6749999999999999
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6750451240932764
  - 0.705622320612833
  - 0.7020652270589985
  - 0.6812122532946332
  - 0.6750451240932764
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6494845360824743
  - 0.6815286624203821
  - 0.6753246753246753
  - 0.6551724137931034
  - 0.6494845360824743
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6595238095238095
  - 0.6850649350649352
  - 0.6810631229235881
  - 0.6607142857142858
  - 0.6565476190476192
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5291994160316404
  - 0.5543141471642421
  - 0.5373434283755675
  - 0.5301811841857609
  - 0.5291994160316404
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6568055555555554
  - 0.6195075757575755
  - 0.6565891472868216
  - 0.7022916666666665
  - 0.6797222222222221
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0058010261762731176
  - 0.0
  - 0.00787903805688926
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.06442577030812324
  - 0.0
  - 0.06847080547155172
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.02
  - 0.0
  - 0.018604651162790697
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.011602052352546233
  - 0.0
  - 0.01607323763605409
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7464145418582894
  - 0.715655837253286
  - 0.7434865582166056
  - 0.7800000072665401
  - 0.7641628276653225
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.325
  - -2.4545454545454546
  - -2.372093023255814
  - -2.2
  - -2.4
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21250000000000002
  - -0.18939393939393936
  - -0.1937984496124031
  - -0.20833333333333337
  - -0.21250000000000002
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2125
  - -0.1893939393939394
  - -0.1937984496124031
  - -0.20833333333333334
  - -0.2125
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2125
  - -0.18939393939393936
  - -0.19379844961240308
  - -0.20833333333333331
  - -0.2125
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3249999999999999
  - -0.3009090909090909
  - -0.31720930232558137
  - -0.325
  - -0.3249999999999999
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20958333333333332
  - -0.2636363636363636
  - -0.23837209302325582
  - -0.19437500000000002
  - -0.21958333333333332
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7875000000000001
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7916666666666666
  - 0.7875000000000001
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7875
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7916666666666666
  - 0.7875
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7875000000000001
  - 0.8106060606060609
  - 0.806201550387597
  - 0.7916666666666667
  - 0.7875
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6749999999999999
  - 0.6990909090909091
  - 0.6827906976744186
  - 0.675
  - 0.6749999999999999
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7875000000000001
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7916666666666666
  - 0.7875000000000001
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7875
  - 0.8106060606060606
  - 0.8062015503875969
  - 0.7916666666666666
  - 0.7875
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7875000000000001
  - 0.8106060606060609
  - 0.806201550387597
  - 0.7916666666666667
  - 0.7875
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6749999999999999
  - 0.6990909090909091
  - 0.6827906976744186
  - 0.675
  - 0.6749999999999999
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.70888560738305
  - 0.6238980035491664
  - 0.5577618212912331
  - 0.6998585062044141
  - 0.5901637261069049
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8073451602863367
  - 0.7689719626168224
  - 0.74375
  - 0.804
  - 0.7503890445066915
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7904166666666667
  - 0.7363636363636364
  - 0.7616279069767442
  - 0.805625
  - 0.7804166666666668
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6192573647816614
  - 0.5969989190570586
  - 0.5268745272745273
  - 0.6341247513498153
  - 0.5559731451002147
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.6720158797922388
  - 0.7045219405433852
  - 0.7213488498864008
  - 0.7241064068947702
  - 0.7274290243817828
  train_average_precision_macro_oob:
  - 0.5170721313073953
  - 0.5972609010209732
  - 0.5981464829653179
  - 0.5174196922229667
  - 0.5047170215454799
  train_average_precision_micro:
  - 0.7602858151145647
  - 0.7713223432864545
  - 0.7827782699593355
  - 0.7748603495411927
  - 0.7547311759923723
  train_average_precision_micro_oob:
  - 0.699411194269509
  - 0.6961302411080446
  - 0.7188288445365338
  - 0.7056248488984644
  - 0.6770578957160364
  train_average_precision_samples:
  - 0.8076846307385229
  - 0.8258691206543968
  - 0.8297256097560974
  - 0.8158682634730539
  - 0.818063872255489
  train_average_precision_samples_oob:
  - 0.7586161011310713
  - 0.7685923653715065
  - 0.7840277777777778
  - 0.7652528276779773
  - 0.7531437125748504
  train_average_precision_weighted:
  - 0.7404369271294234
  - 0.7454674790487963
  - 0.7645225793134686
  - 0.7649537268683063
  - 0.744389555950414
  train_average_precision_weighted_oob:
  - 0.6761029656065876
  - 0.694644050121681
  - 0.7061372045915635
  - 0.6889407296811405
  - 0.6573193576036265
  train_f1_macro:
  - 0.8652694610778444
  - 0.8548057259713701
  - 0.8597560975609756
  - 0.8602794411177644
  - 0.8612774451097804
  train_f1_macro_oob:
  - 0.845309381237525
  - 0.838445807770961
  - 0.8363821138211381
  - 0.845309381237525
  - 0.8433133732534931
  train_f1_micro:
  - 0.8652694610778443
  - 0.8548057259713702
  - 0.8597560975609756
  - 0.8602794411177644
  - 0.8612774451097804
  train_f1_micro_oob:
  - 0.845309381237525
  - 0.8384458077709611
  - 0.8363821138211383
  - 0.845309381237525
  - 0.843313373253493
  train_f1_samples:
  - 0.8652694610778442
  - 0.8548057259713701
  - 0.8597560975609756
  - 0.8602794411177642
  - 0.8612774451097803
  train_f1_samples_oob:
  - 0.8453093812375247
  - 0.8384458077709609
  - 0.8363821138211381
  - 0.8453093812375247
  - 0.8433133732534928
  train_f1_weighted:
  - 0.8174695385348705
  - 0.8022839093725324
  - 0.810734122192707
  - 0.8100729234600107
  - 0.81052819733667
  train_f1_weighted_oob:
  - 0.7781452021330473
  - 0.7689667739780114
  - 0.7661494808017386
  - 0.77983636687022
  - 0.7742425596568058
  train_jaccard_macro:
  - 0.7685354406704626
  - 0.7534807023831958
  - 0.7602975351837608
  - 0.7615917438855084
  - 0.7630003675040408
  train_jaccard_macro_oob:
  - 0.7426435718464574
  - 0.7328604081785096
  - 0.7302769085862243
  - 0.7425426039484732
  - 0.7403937327334843
  train_jaccard_micro:
  - 0.762532981530343
  - 0.7464285714285714
  - 0.7540106951871658
  - 0.7548161120840631
  - 0.7563540753724802
  train_jaccard_micro_oob:
  - 0.7320656871218669
  - 0.721830985915493
  - 0.7187772925764192
  - 0.7320656871218669
  - 0.729076790336497
  train_jaccard_samples:
  - 0.7741659538066723
  - 0.7597137014314929
  - 0.7681475029036005
  - 0.7671799258625606
  - 0.7697462218420303
  train_jaccard_samples_oob:
  - 0.7449386940404905
  - 0.7347356120362256
  - 0.7328687572590012
  - 0.7460792700313659
  - 0.7419446820644426
  train_jaccard_weighted:
  - 0.6948059998461003
  - 0.6743633183693756
  - 0.6857166263041848
  - 0.6847602829046429
  - 0.6853324577784174
  train_jaccard_weighted_oob:
  - 0.6440342578429689
  - 0.6323669251858518
  - 0.6289586204659389
  - 0.646257458230647
  - 0.639649252846386
  train_label_ranking_average_precision_score:
  - 0.807684630738523
  - 0.8258691206543968
  - 0.8297256097560974
  - 0.8158682634730535
  - 0.8180638722554887
  train_label_ranking_average_precision_score_oob:
  - 0.7586161011310713
  - 0.7685923653715065
  - 0.7840277777777775
  - 0.7652528276779773
  - 0.75314371257485
  train_matthews_corrcoef_macro:
  - 0.22643240743447524
  - 0.18449165369826184
  - 0.23294641553001635
  - 0.19044475985009304
  - 0.1907027990358622
  train_matthews_corrcoef_macro_oob:
  - 0.15882650590150807
  - 0.15281155843652774
  - 0.14939790598992145
  - 0.1603564170832902
  - 0.15390231486434128
  train_matthews_corrcoef_micro:
  - 0.5300932483010647
  - 0.49955598969002735
  - 0.5189479074946438
  - 0.511094522689115
  - 0.5126844523968305
  train_matthews_corrcoef_micro_oob:
  - 0.43789319788863446
  - 0.4235076713226315
  - 0.4102643436653597
  - 0.44148560940346854
  - 0.4278207187753471
  train_matthews_corrcoef_samples:
  - 0.34189415710283516
  - 0.3195007777153747
  - 0.3415470469727972
  - 0.3250217171712939
  - 0.3213720689337589
  train_matthews_corrcoef_samples_oob:
  - 0.2512395859423379
  - 0.2410054820576934
  - 0.2298119535561096
  - 0.25831924181917987
  - 0.24035516996289247
  train_matthews_corrcoef_weighted:
  - 0.42504330959486475
  - 0.37545173617380995
  - 0.4196337350419231
  - 0.38800623438929294
  - 0.3901245968173245
  train_matthews_corrcoef_weighted_oob:
  - 0.32553859212824277
  - 0.31093784379005013
  - 0.3020087570500328
  - 0.3273061597444972
  - 0.31585881286103445
  train_ndgc:
  - 0.8566831476557609
  - 0.8720391653426802
  - 0.875472263789802
  - 0.8642829274664391
  - 0.8652930441099521
  train_ndgc_oob:
  - 0.8215626097238575
  - 0.8300255907215089
  - 0.8418551044173008
  - 0.8265489353520308
  - 0.8172930391034897
  train_neg_coverage_error:
  - -1.8383233532934131
  - -1.8282208588957056
  - -1.8109756097560976
  - -1.8323353293413174
  - -1.8203592814371257
  train_neg_coverage_error_oob:
  - -2.059880239520958
  - -2.0736196319018405
  - -1.9695121951219512
  - -2.0838323353293413
  - -2.0419161676646707
  train_neg_hamming_loss_macro:
  - -0.13473053892215567
  - -0.14519427402862986
  - -0.14024390243902438
  - -0.13972055888223553
  - -0.13872255489021956
  train_neg_hamming_loss_macro_oob:
  - -0.15469061876247506
  - -0.16155419222903886
  - -0.1636178861788618
  - -0.15469061876247506
  - -0.156686626746507
  train_neg_hamming_loss_micro:
  - -0.1347305389221557
  - -0.14519427402862986
  - -0.1402439024390244
  - -0.13972055888223553
  - -0.13872255489021956
  train_neg_hamming_loss_micro_oob:
  - -0.15469061876247506
  - -0.16155419222903886
  - -0.16361788617886178
  - -0.15469061876247506
  - -0.156686626746507
  train_neg_hamming_loss_samples:
  - -0.13473053892215567
  - -0.14519427402862983
  - -0.14024390243902438
  - -0.13972055888223553
  - -0.13872255489021953
  train_neg_hamming_loss_samples_oob:
  - -0.15469061876247503
  - -0.16155419222903886
  - -0.16361788617886178
  - -0.15469061876247503
  - -0.15668662674650696
  train_neg_hamming_loss_weighted:
  - -0.1825304614651294
  - -0.19771609062746764
  - -0.18926587780729293
  - -0.18992707653998933
  - -0.18947180266333005
  train_neg_hamming_loss_weighted_oob:
  - -0.22185479786695264
  - -0.23103322602198864
  - -0.23385051919826128
  - -0.22016363312978005
  - -0.22575744034319417
  train_neg_label_ranking_loss:
  - -0.1269461077844311
  - -0.11249147920927062
  - -0.10973915989159891
  - -0.11846307385229542
  - -0.11931137724550897
  train_neg_label_ranking_loss_oob:
  - -0.16839654025282766
  - -0.16109406952965236
  - -0.14166666666666666
  - -0.16852960745176315
  - -0.16437125748502993
  train_precision_macro:
  - 0.8652694610778444
  - 0.8548057259713701
  - 0.8597560975609756
  - 0.8602794411177644
  - 0.8612774451097804
  train_precision_macro_oob:
  - 0.845309381237525
  - 0.838445807770961
  - 0.8363821138211381
  - 0.845309381237525
  - 0.8433133732534931
  train_precision_micro:
  - 0.8652694610778443
  - 0.8548057259713702
  - 0.8597560975609756
  - 0.8602794411177644
  - 0.8612774451097804
  train_precision_micro_oob:
  - 0.845309381237525
  - 0.8384458077709611
  - 0.8363821138211383
  - 0.845309381237525
  - 0.843313373253493
  train_precision_samples:
  - 0.8652694610778442
  - 0.8548057259713701
  - 0.8597560975609756
  - 0.8602794411177642
  - 0.8612774451097803
  train_precision_samples_oob:
  - 0.8453093812375247
  - 0.8384458077709609
  - 0.8363821138211381
  - 0.8453093812375247
  - 0.8433133732534928
  train_precision_weighted:
  - 0.8174695385348705
  - 0.8022839093725324
  - 0.810734122192707
  - 0.8100729234600107
  - 0.81052819733667
  train_precision_weighted_oob:
  - 0.7781452021330473
  - 0.7689667739780114
  - 0.7661494808017386
  - 0.77983636687022
  - 0.7742425596568058
  train_recall_macro:
  - 0.8652694610778444
  - 0.8548057259713701
  - 0.8597560975609756
  - 0.8602794411177644
  - 0.8612774451097804
  train_recall_macro_oob:
  - 0.845309381237525
  - 0.838445807770961
  - 0.8363821138211381
  - 0.845309381237525
  - 0.8433133732534931
  train_recall_micro:
  - 0.8652694610778443
  - 0.8548057259713702
  - 0.8597560975609756
  - 0.8602794411177644
  - 0.8612774451097804
  train_recall_micro_oob:
  - 0.845309381237525
  - 0.8384458077709611
  - 0.8363821138211383
  - 0.845309381237525
  - 0.843313373253493
  train_recall_samples:
  - 0.8652694610778442
  - 0.8548057259713701
  - 0.8597560975609756
  - 0.8602794411177642
  - 0.8612774451097803
  train_recall_samples_oob:
  - 0.8453093812375247
  - 0.8384458077709609
  - 0.8363821138211381
  - 0.8453093812375247
  - 0.8433133732534928
  train_recall_weighted:
  - 0.8174695385348705
  - 0.8022839093725324
  - 0.810734122192707
  - 0.8100729234600107
  - 0.81052819733667
  train_recall_weighted_oob:
  - 0.7781452021330473
  - 0.7689667739780114
  - 0.7661494808017386
  - 0.77983636687022
  - 0.7742425596568058
  train_roc_auc_macro:
  - 0.8092636033236219
  - 0.8294116909705807
  - 0.8436035041391688
  - 0.8498990002523943
  - 0.8444694811427028
  train_roc_auc_macro_oob:
  - 0.7681127562412273
  - 0.7807223518108057
  - 0.8006686656665399
  - 0.7682208347443025
  - 0.795240710942359
  train_roc_auc_micro:
  - 0.8816963869789629
  - 0.8932134837195059
  - 0.8955331594540528
  - 0.8929022277227722
  - 0.8889882671536201
  train_roc_auc_micro_oob:
  - 0.8538394171464774
  - 0.8584451873022353
  - 0.8663176419943784
  - 0.8529579207920793
  - 0.8542120856392196
  train_roc_auc_samples:
  - 0.8730538922155687
  - 0.8875085207907294
  - 0.8902608401084012
  - 0.8815369261477046
  - 0.880688622754491
  train_roc_auc_samples_oob:
  - 0.8316034597471724
  - 0.8389059304703477
  - 0.8583333333333334
  - 0.8314703925482368
  - 0.83562874251497
  train_roc_auc_weighted:
  - 0.786425641536768
  - 0.7904014439363009
  - 0.8062480204605693
  - 0.8140884748137595
  - 0.7885791573106913
  train_roc_auc_weighted_oob:
  - 0.7755094872412595
  - 0.7698436580929757
  - 0.7882017220865085
  - 0.785665600266715
  - 0.7698291732617824
start: 2023-12-21 12:38:33.948623
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
