active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv5iZmZmZmem/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:00:30.075039
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__4
  params: {}
hash: 843aae40d7cb975910b137e51c6d7ec01b4b4b9c4003e6c5267b7644eecbfdca
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/843aae4_20231221T235958760728_embedding_proba__4_CHD_49.yml
results:
  fit_time:
  - 14.22202467918396
  - 14.867125749588013
  - 15.731769323348999
  - 14.857432842254639
  - 15.359017610549927
  score_time:
  - 4.312473773956299
  - 4.4738359451293945
  - 4.408071756362915
  - 4.530883312225342
  - 4.400737047195435
  test_average_precision_macro:
  - 0.49861677332503884
  - 0.5757158499951011
  - 0.5389124962692732
  - 0.5114059938535719
  - 0.567899308823721
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6311532120025711
  - 0.667852375777341
  - 0.6831347900993416
  - 0.6547971091563418
  - 0.6883584436009901
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7533408408408409
  - 0.7591466466466467
  - 0.7842467467467468
  - 0.791453953953954
  - 0.8048673673673673
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6127390327270581
  - 0.6482371991809021
  - 0.6641544958207387
  - 0.6356589971769515
  - 0.6865416983721223
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5900900900900901
  - 0.6276276276276277
  - 0.6366366366366366
  - 0.6276276276276276
  - 0.6366366366366366
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5900900900900901
  - 0.6276276276276276
  - 0.6366366366366366
  - 0.6276276276276276
  - 0.6366366366366366
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5900900900900901
  - 0.6276276276276276
  - 0.6366366366366365
  - 0.6276276276276277
  - 0.6366366366366365
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.47535035035035045
  - 0.5458583583583584
  - 0.5478741899794531
  - 0.5284020862968231
  - 0.5433440433440434
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.455665136620459
  - 0.48233953132028146
  - 0.4935461066788122
  - 0.48905873550864737
  - 0.4948752219512725
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4185303514376997
  - 0.4573304157549234
  - 0.4669603524229075
  - 0.4573304157549234
  - 0.4669603524229075
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.43801333801333814
  - 0.48155688155688164
  - 0.4884598884598885
  - 0.4817245817245818
  - 0.4873522873522874
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3247421222797847
  - 0.38042079285628305
  - 0.3851827232458721
  - 0.3674275722903541
  - 0.38139641454715956
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.76234984984985
  - 0.7681556556556559
  - 0.7842467467467472
  - 0.7914539539539541
  - 0.8138763763763762
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.019995831776164333
  - 0.09864951236585107
  - 0.13689930599708638
  - 0.09103771484500607
  - 0.12225374103557406
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12175608845178185
  - 0.24810261830774621
  - 0.25828814872188555
  - 0.22140670987137928
  - 0.25794810983522803
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09352559739296538
  - 0.19969053446255638
  - 0.19216277160947304
  - 0.21403786309908718
  - 0.1913215146759506
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.010733329510161673
  - 0.14809664928916688
  - 0.1599626656750018
  - 0.08713511192613484
  - 0.13867779750309087
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8353523181889063
  - 0.8431948916087662
  - 0.859890404358041
  - 0.8632650301998241
  - 0.8712349183127522
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8018018018018016
  - -3.945945945945946
  - -3.72972972972973
  - -3.6666666666666665
  - -3.5945945945945947
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4099099099099099
  - -0.37237237237237236
  - -0.36336336336336333
  - -0.3723723723723724
  - -0.36336336336336333
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4099099099099099
  - -0.37237237237237236
  - -0.3633633633633634
  - -0.37237237237237236
  - -0.3633633633633634
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4099099099099099
  - -0.3723723723723723
  - -0.36336336336336333
  - -0.3723723723723725
  - -0.36336336336336333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5246496496496496
  - -0.45414164164164167
  - -0.45212581002054686
  - -0.4715979137031769
  - -0.45665595665595676
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23360860860860863
  - -0.24336836836836834
  - -0.21806806806806808
  - -0.20960960960960964
  - -0.19114114114114117
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5900900900900901
  - 0.6276276276276277
  - 0.6366366366366366
  - 0.6276276276276276
  - 0.6366366366366366
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5900900900900901
  - 0.6276276276276276
  - 0.6366366366366366
  - 0.6276276276276276
  - 0.6366366366366366
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5900900900900901
  - 0.6276276276276276
  - 0.6366366366366365
  - 0.6276276276276277
  - 0.6366366366366365
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.47535035035035045
  - 0.5458583583583584
  - 0.5478741899794531
  - 0.5284020862968231
  - 0.5433440433440434
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5900900900900901
  - 0.6276276276276277
  - 0.6366366366366366
  - 0.6276276276276276
  - 0.6366366366366366
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5900900900900901
  - 0.6276276276276276
  - 0.6366366366366366
  - 0.6276276276276276
  - 0.6366366366366366
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5900900900900901
  - 0.6276276276276276
  - 0.6366366366366365
  - 0.6276276276276277
  - 0.6366366366366365
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.47535035035035045
  - 0.5458583583583584
  - 0.5478741899794531
  - 0.5284020862968231
  - 0.5433440433440434
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5350936296294733
  - 0.5875640457962922
  - 0.5797089782789844
  - 0.5658256885236599
  - 0.6761072281564114
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7463440623162847
  - 0.7291482951205174
  - 0.7725100151954689
  - 0.7571211493300178
  - 0.7800423260949576
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - 0.7819319319319319
  - 0.7903903903903903
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5273662166115778
  - 0.5761063598450368
  - 0.6230861649184476
  - 0.5800210479027912
  - 0.626879060017432
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8296967907369015
  - 0.8111383295905963
  - 0.8211199321583664
  - 0.8136810237026375
  - 0.8223286414707626
  train_average_precision_macro_oob:
  - 0.7385616562623757
  - 0.7236287890490308
  - 0.7275066947305957
  - 0.7240078115232373
  - 0.7440103738253355
  train_average_precision_micro:
  - 0.8968077772566156
  - 0.8835096646327761
  - 0.8847524031194801
  - 0.8817659745372649
  - 0.8814382039708624
  train_average_precision_micro_oob:
  - 0.8900777422211692
  - 0.8784927262170235
  - 0.8782508758775471
  - 0.8749140664031844
  - 0.874447851238835
  train_average_precision_samples:
  - 0.9004254254254255
  - 0.8864395645645645
  - 0.8929836086086086
  - 0.900660035035035
  - 0.9005161411411411
  train_average_precision_samples_oob:
  - 0.8933402152152151
  - 0.8880474224224224
  - 0.8862080830830831
  - 0.8918230730730731
  - 0.8924268018018017
  train_average_precision_weighted:
  - 0.8886994076126281
  - 0.876745698696501
  - 0.8774088089855072
  - 0.8749020671543272
  - 0.8787104732924452
  train_average_precision_weighted_oob:
  - 0.8780391422602976
  - 0.8669996868251288
  - 0.8671430017586784
  - 0.8632775344794702
  - 0.8684963203070115
  train_f1_macro:
  - 0.7713963963963965
  - 0.7665165165165164
  - 0.7732732732732733
  - 0.771021021021021
  - 0.7672672672672672
  train_f1_macro_oob:
  - 0.7511261261261261
  - 0.748123123123123
  - 0.7518768768768768
  - 0.7477477477477478
  - 0.7466216216216216
  train_f1_micro:
  - 0.7713963963963963
  - 0.7665165165165165
  - 0.7732732732732732
  - 0.771021021021021
  - 0.7672672672672672
  train_f1_micro_oob:
  - 0.7511261261261262
  - 0.7481231231231231
  - 0.7518768768768769
  - 0.7477477477477478
  - 0.7466216216216216
  train_f1_samples:
  - 0.7713963963963963
  - 0.7665165165165166
  - 0.7732732732732733
  - 0.771021021021021
  - 0.7672672672672671
  train_f1_samples_oob:
  - 0.7511261261261262
  - 0.7481231231231231
  - 0.751876876876877
  - 0.7477477477477478
  - 0.7466216216216216
  train_f1_weighted:
  - 0.7109734297234297
  - 0.7043820481320481
  - 0.711853091103309
  - 0.7120533785747387
  - 0.7082645472697828
  train_f1_weighted_oob:
  - 0.6896656271656273
  - 0.6877579065079066
  - 0.6884371293699978
  - 0.6873041306345579
  - 0.6866716192632423
  train_jaccard_macro:
  - 0.6424475377985813
  - 0.6365456142840956
  - 0.6452046494287752
  - 0.6412759442207233
  - 0.6364406948653829
  train_jaccard_macro_oob:
  - 0.6165437736450038
  - 0.6123418584421171
  - 0.6180773235132109
  - 0.6118573025630488
  - 0.6104358712050469
  train_jaccard_micro:
  - 0.6278643446379468
  - 0.6214242239805234
  - 0.6303549571603427
  - 0.6273671350030544
  - 0.6224116930572473
  train_jaccard_micro_oob:
  - 0.6014427412082958
  - 0.5976011994002999
  - 0.602406015037594
  - 0.5971223021582733
  - 0.5956873315363881
  train_jaccard_samples:
  - 0.6530673530673531
  - 0.6467181467181466
  - 0.6563492063492063
  - 0.6526812526812527
  - 0.6488953238953239
  train_jaccard_samples_oob:
  - 0.626040326040326
  - 0.6221471471471471
  - 0.6283354783354783
  - 0.6215143715143715
  - 0.6218253968253968
  train_jaccard_weighted:
  - 0.5577093189956331
  - 0.5498473042727441
  - 0.5592193767339002
  - 0.558765576954688
  - 0.5535226125178813
  train_jaccard_weighted_oob:
  - 0.5312363681366831
  - 0.528217839293252
  - 0.5304421988686897
  - 0.5281951549377624
  - 0.5269368652304698
  train_label_ranking_average_precision_score:
  - 0.9049299299299293
  - 0.8909440690690685
  - 0.8997403653653645
  - 0.9074167917917909
  - 0.905020645645645
  train_label_ranking_average_precision_score_oob:
  - 0.8978447197197191
  - 0.8925519269269262
  - 0.8929648398398391
  - 0.8985798298298293
  - 0.8969313063063056
  train_matthews_corrcoef_macro:
  - 0.4473314461767042
  - 0.4390112182279684
  - 0.45034013828168246
  - 0.44511091371485767
  - 0.43766125123647637
  train_matthews_corrcoef_macro_oob:
  - 0.4073497768650931
  - 0.39797509942799786
  - 0.4081748022916301
  - 0.39855907099225013
  - 0.3955319318243305
  train_matthews_corrcoef_micro:
  - 0.5772878733214182
  - 0.5690288685168952
  - 0.5813560712781696
  - 0.577309530014813
  - 0.5703139871748614
  train_matthews_corrcoef_micro_oob:
  - 0.5392990966565333
  - 0.5349673829424819
  - 0.5403377087743602
  - 0.5327442645378812
  - 0.5309748045857372
  train_matthews_corrcoef_samples:
  - 0.5039056777617287
  - 0.49517593950377775
  - 0.5104512329707683
  - 0.508038008567646
  - 0.5037218728294894
  train_matthews_corrcoef_samples_oob:
  - 0.4652936278118275
  - 0.4497211849295874
  - 0.46084588759132544
  - 0.46152028011312424
  - 0.46063124139194855
  train_matthews_corrcoef_weighted:
  - 0.5125508274706333
  - 0.5046824395384019
  - 0.5155154480133453
  - 0.5112351710217725
  - 0.5054008262835825
  train_matthews_corrcoef_weighted_oob:
  - 0.47296592475505245
  - 0.4692196182026999
  - 0.4720537109191361
  - 0.4638439263473762
  - 0.46354601593000155
  train_ndgc:
  - 0.9373049366192051
  - 0.9289390447491335
  - 0.9317902994899899
  - 0.9382766159729343
  - 0.9396251697371354
  train_ndgc_oob:
  - 0.9325038209741998
  - 0.930260608388192
  - 0.9275844360364479
  - 0.9327688646155442
  - 0.9339288923824116
  train_neg_coverage_error:
  - -3.1644144144144146
  - -3.2184684684684686
  - -3.1981981981981984
  - -3.189189189189189
  - -3.2184684684684686
  train_neg_coverage_error_oob:
  - -3.2184684684684686
  - -3.22972972972973
  - -3.2432432432432434
  - -3.2477477477477477
  - -3.27027027027027
  train_neg_hamming_loss_macro:
  - -0.22860360360360357
  - -0.23348348348348347
  - -0.2267267267267267
  - -0.22897897897897898
  - -0.23273273273273273
  train_neg_hamming_loss_macro_oob:
  - -0.2488738738738739
  - -0.2518768768768769
  - -0.24812312312312315
  - -0.2522522522522523
  - -0.2533783783783784
  train_neg_hamming_loss_micro:
  - -0.2286036036036036
  - -0.2334834834834835
  - -0.22672672672672672
  - -0.22897897897897898
  - -0.23273273273273273
  train_neg_hamming_loss_micro_oob:
  - -0.24887387387387389
  - -0.2518768768768769
  - -0.24812312312312312
  - -0.25225225225225223
  - -0.2533783783783784
  train_neg_hamming_loss_samples:
  - -0.2286036036036036
  - -0.23348348348348347
  - -0.2267267267267267
  - -0.22897897897897898
  - -0.23273273273273276
  train_neg_hamming_loss_samples_oob:
  - -0.24887387387387389
  - -0.2518768768768769
  - -0.24812312312312312
  - -0.25225225225225223
  - -0.25337837837837834
  train_neg_hamming_loss_weighted:
  - -0.2890265702765703
  - -0.29561795186795187
  - -0.2881469088966909
  - -0.28794662142526134
  - -0.2917354527302171
  train_neg_hamming_loss_weighted_oob:
  - -0.3103343728343729
  - -0.3122420934920935
  - -0.31156287063000226
  - -0.3126958693654422
  - -0.31332838073675773
  train_neg_label_ranking_loss:
  - -0.09783533533533532
  - -0.10972847847847847
  - -0.10336586586586587
  - -0.09640265265265265
  - -0.10172047047047046
  train_neg_label_ranking_loss_oob:
  - -0.10379754754754754
  - -0.11102977977977978
  - -0.11237487487487488
  - -0.10681306306306305
  - -0.11138638638638639
  train_precision_macro:
  - 0.7713963963963965
  - 0.7665165165165164
  - 0.7732732732732733
  - 0.771021021021021
  - 0.7672672672672672
  train_precision_macro_oob:
  - 0.7511261261261261
  - 0.748123123123123
  - 0.7518768768768768
  - 0.7477477477477478
  - 0.7466216216216216
  train_precision_micro:
  - 0.7713963963963963
  - 0.7665165165165165
  - 0.7732732732732732
  - 0.771021021021021
  - 0.7672672672672672
  train_precision_micro_oob:
  - 0.7511261261261262
  - 0.7481231231231231
  - 0.7518768768768769
  - 0.7477477477477478
  - 0.7466216216216216
  train_precision_samples:
  - 0.7713963963963963
  - 0.7665165165165166
  - 0.7732732732732733
  - 0.771021021021021
  - 0.7672672672672671
  train_precision_samples_oob:
  - 0.7511261261261262
  - 0.7481231231231231
  - 0.751876876876877
  - 0.7477477477477478
  - 0.7466216216216216
  train_precision_weighted:
  - 0.7109734297234297
  - 0.7043820481320481
  - 0.711853091103309
  - 0.7120533785747387
  - 0.7082645472697828
  train_precision_weighted_oob:
  - 0.6896656271656273
  - 0.6877579065079066
  - 0.6884371293699978
  - 0.6873041306345579
  - 0.6866716192632423
  train_recall_macro:
  - 0.7713963963963965
  - 0.7665165165165164
  - 0.7732732732732733
  - 0.771021021021021
  - 0.7672672672672672
  train_recall_macro_oob:
  - 0.7511261261261261
  - 0.748123123123123
  - 0.7518768768768768
  - 0.7477477477477478
  - 0.7466216216216216
  train_recall_micro:
  - 0.7713963963963963
  - 0.7665165165165165
  - 0.7732732732732732
  - 0.771021021021021
  - 0.7672672672672672
  train_recall_micro_oob:
  - 0.7511261261261262
  - 0.7481231231231231
  - 0.7518768768768769
  - 0.7477477477477478
  - 0.7466216216216216
  train_recall_samples:
  - 0.7713963963963963
  - 0.7665165165165166
  - 0.7732732732732733
  - 0.771021021021021
  - 0.7672672672672671
  train_recall_samples_oob:
  - 0.7511261261261262
  - 0.7481231231231231
  - 0.751876876876877
  - 0.7477477477477478
  - 0.7466216216216216
  train_recall_weighted:
  - 0.7109734297234297
  - 0.7043820481320481
  - 0.711853091103309
  - 0.7120533785747387
  - 0.7082645472697828
  train_recall_weighted_oob:
  - 0.6896656271656273
  - 0.6877579065079066
  - 0.6884371293699978
  - 0.6873041306345579
  - 0.6866716192632423
  train_roc_auc_macro:
  - 0.8332686447128034
  - 0.8241484237250493
  - 0.8185414829627803
  - 0.8183751562111977
  - 0.8176009294819923
  train_roc_auc_macro_oob:
  - 0.8050547111664423
  - 0.7920925073434565
  - 0.7977825451380047
  - 0.7783442553189369
  - 0.7879765926547387
  train_roc_auc_micro:
  - 0.9048611750092013
  - 0.8914542694147958
  - 0.8939789620568747
  - 0.8908967763774577
  - 0.8896220916195876
  train_roc_auc_micro_oob:
  - 0.8974782618697092
  - 0.8860507913139493
  - 0.8879085562692852
  - 0.8829211970811479
  - 0.8829698073381205
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8318261609948624
  - 0.821752420358318
  - 0.8129764544201034
  - 0.8136078851193631
  - 0.8157508524164828
  train_roc_auc_weighted_oob:
  - 0.8229657785735603
  - 0.8175657846244374
  - 0.8100707759626684
  - 0.8058255736314065
  - 0.810103007781897
start: 2023-12-21 23:59:58.760728
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
