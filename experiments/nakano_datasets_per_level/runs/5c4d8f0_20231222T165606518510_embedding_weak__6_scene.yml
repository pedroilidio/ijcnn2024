active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0AAnJmZmZnZPwBnZmZmZvY/ADIzMzMz47+AzMzMzMwMwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 17:15:08.727308
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__6
  params: {}
hash: 5c4d8f0064015d51ce777833b80e3dace9759aa83d00d3e2fd03a502acbe6134
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5c4d8f0_20231222T165606518510_embedding_weak__6_scene.yml
results:
  fit_time:
  - 1024.2156670093536
  - 1046.6703419685364
  - 1048.0481424331665
  - 939.5223679542542
  - 962.6318287849426
  score_time:
  - 14.24432373046875
  - 14.008597135543823
  - 13.784318685531616
  - 13.291679859161377
  - 13.17376446723938
  test_average_precision_macro:
  - 0.8413172803699133
  - 0.8249558038256609
  - 0.8340255042641979
  - 0.860491487578194
  - 0.843716870438989
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8400092464232723
  - 0.8418080881369804
  - 0.8388022910462517
  - 0.8652253904972244
  - 0.8494683614876604
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8683716075156576
  - 0.8716735966735967
  - 0.8795833333333333
  - 0.8799446749654218
  - 0.8733676975945017
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.830553430206899
  - 0.812972910004147
  - 0.8237027296753725
  - 0.8491335746126585
  - 0.8349037992412117
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8977035490605428
  - 0.9005544005544005
  - 0.8965277777777777
  - 0.9121715076071922
  - 0.9013745704467354
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8977035490605428
  - 0.9005544005544005
  - 0.8965277777777778
  - 0.9121715076071922
  - 0.9013745704467354
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8977035490605428
  - 0.9005544005544007
  - 0.8965277777777778
  - 0.9121715076071921
  - 0.9013745704467355
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.892802734138851
  - 0.8943690007519796
  - 0.8911549000644745
  - 0.9066872527260446
  - 0.8965562623382322
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8173705346847147
  - 0.8237730624331271
  - 0.8159845147330961
  - 0.8423256004680656
  - 0.8236096904965636
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8143939393939394
  - 0.8190986448156319
  - 0.8124606670862178
  - 0.8385251112523839
  - 0.8204566781357523
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8320906650760511
  - 0.8357093357093356
  - 0.8285218253968253
  - 0.8542778107093458
  - 0.8365243004418261
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8095518561510235
  - 0.8138288625292817
  - 0.807469341214886
  - 0.8334199835941931
  - 0.8158917653658391
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8683716075156575
  - 0.8716735966735966
  - 0.879583333333333
  - 0.8799446749654217
  - 0.8733676975945018
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6162364217728705
  - 0.6236899949935772
  - 0.6090737565158313
  - 0.6752790988569993
  - 0.6271645414364537
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6155050710739203
  - 0.6253137221888463
  - 0.6084549323462773
  - 0.6735554786128675
  - 0.6257223521930566
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49277825278988224
  - 0.5038105673069786
  - 0.47964635306407855
  - 0.5598444139714192
  - 0.5015445580220073
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6008130453726438
  - 0.6023093015391611
  - 0.5914191932061117
  - 0.6568130785007353
  - 0.6112427519179082
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9030354822736013
  - 0.9059953204549104
  - 0.9114092700149471
  - 0.9111818895504362
  - 0.90655431259377
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4467640918580376
  - -1.4656964656964657
  - -1.4083333333333334
  - -1.4087136929460582
  - -1.422680412371134
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1022964509394572
  - -0.09944559944559946
  - -0.10347222222222223
  - -0.08782849239280772
  - -0.0986254295532646
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1022964509394572
  - -0.09944559944559944
  - -0.10347222222222222
  - -0.08782849239280774
  - -0.0986254295532646
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1022964509394572
  - -0.09944559944559946
  - -0.10347222222222222
  - -0.08782849239280774
  - -0.0986254295532646
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10719726586114894
  - -0.10563099924802052
  - -0.10884509993552545
  - -0.09331274727395542
  - -0.10344373766176793
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07165970772442588
  - -0.07468814968814969
  - -0.065
  - -0.06633817427385892
  - -0.06948453608247424
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8977035490605428
  - 0.9005544005544005
  - 0.8965277777777777
  - 0.9121715076071922
  - 0.9013745704467354
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8977035490605428
  - 0.9005544005544005
  - 0.8965277777777778
  - 0.9121715076071922
  - 0.9013745704467354
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8977035490605428
  - 0.9005544005544007
  - 0.8965277777777778
  - 0.9121715076071921
  - 0.9013745704467355
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.892802734138851
  - 0.8943690007519796
  - 0.8911549000644745
  - 0.9066872527260446
  - 0.8965562623382322
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8977035490605428
  - 0.9005544005544005
  - 0.8965277777777777
  - 0.9121715076071922
  - 0.9013745704467354
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8977035490605428
  - 0.9005544005544005
  - 0.8965277777777778
  - 0.9121715076071922
  - 0.9013745704467354
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8977035490605428
  - 0.9005544005544007
  - 0.8965277777777778
  - 0.9121715076071921
  - 0.9013745704467355
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.892802734138851
  - 0.8943690007519796
  - 0.8911549000644745
  - 0.9066872527260446
  - 0.8965562623382322
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9446289497346938
  - 0.9399970565788403
  - 0.9423217166358625
  - 0.9485029050440986
  - 0.9482440118296448
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9505239231470131
  - 0.9480107742414309
  - 0.949918595104574
  - 0.955962238665727
  - 0.9544423976766535
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9283402922755741
  - 0.9253118503118503
  - 0.935
  - 0.933661825726141
  - 0.9305154639175257
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9399058831345319
  - 0.9347396074069454
  - 0.9370687336532033
  - 0.9432366119257303
  - 0.9437093901968777
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9940135108476392
  - 0.9951746303836746
  - 0.994067554356342
  - 0.9941913995241389
  - 0.9941695925452815
  train_average_precision_macro_oob:
  - 0.8645432623646436
  - 0.8594802469182653
  - 0.8603626421256824
  - 0.8553471776863812
  - 0.8579470291277765
  train_average_precision_micro:
  - 0.9937489046663452
  - 0.9945996215975133
  - 0.9936560528228888
  - 0.9933618603346028
  - 0.9937624159826726
  train_average_precision_micro_oob:
  - 0.8703850746018362
  - 0.8635521743239142
  - 0.8663224780183052
  - 0.8598347008961937
  - 0.8644420169365958
  train_average_precision_samples:
  - 0.9885892116182573
  - 0.9887504326756663
  - 0.9890589863345443
  - 0.9898268398268397
  - 0.9879032258064516
  train_average_precision_samples_oob:
  - 0.8856889695712309
  - 0.8842679127725858
  - 0.8865680678083376
  - 0.8853073593073594
  - 0.8843955948664586
  train_average_precision_weighted:
  - 0.9938901477088598
  - 0.9951467546375627
  - 0.9939486280289528
  - 0.9940832856517812
  - 0.9940849787725571
  train_average_precision_weighted_oob:
  - 0.8564171997589477
  - 0.850527226075512
  - 0.8515199580152232
  - 0.847306187479035
  - 0.8486548319030844
  train_f1_macro:
  - 0.9568637621023514
  - 0.9561266874350985
  - 0.9553710430721329
  - 0.9557575757575757
  - 0.9541276448144295
  train_f1_macro_oob:
  - 0.9003284923928078
  - 0.8972827968155072
  - 0.9003632589517384
  - 0.8939393939393939
  - 0.8985431841831425
  train_f1_micro:
  - 0.9568637621023514
  - 0.9561266874350987
  - 0.9553710430721328
  - 0.9557575757575758
  - 0.9541276448144295
  train_f1_micro_oob:
  - 0.9003284923928078
  - 0.897282796815507
  - 0.9003632589517384
  - 0.8939393939393939
  - 0.8985431841831426
  train_f1_samples:
  - 0.9568637621023512
  - 0.9561266874350987
  - 0.9553710430721328
  - 0.9557575757575758
  - 0.9541276448144295
  train_f1_samples_oob:
  - 0.9003284923928079
  - 0.8972827968155073
  - 0.9003632589517385
  - 0.893939393939394
  - 0.8985431841831426
  train_f1_weighted:
  - 0.9550694875207519
  - 0.9544088729811537
  - 0.9535758271694409
  - 0.9542159145832417
  - 0.9522552164995762
  train_f1_weighted_oob:
  - 0.8951301021585998
  - 0.892040056560836
  - 0.8951284254395696
  - 0.8886210164895522
  - 0.8930720739397427
  train_jaccard_macro:
  - 0.917771019418209
  - 0.9163908744294943
  - 0.9150397274057297
  - 0.9156127911229607
  - 0.9128000179696301
  train_jaccard_macro_oob:
  - 0.8222659408269837
  - 0.8172204862181695
  - 0.8222423983319046
  - 0.81190870731454
  - 0.8194424515180846
  train_jaccard_micro:
  - 0.917295102345239
  - 0.9159413081323053
  - 0.914555389965226
  - 0.9152640742890308
  - 0.9122792471602686
  train_jaccard_micro_oob:
  - 0.8187249430076252
  - 0.8137016401161422
  - 0.8187824445493157
  - 0.8082191780821918
  - 0.8157770429853566
  train_jaccard_samples:
  - 0.9271636040308239
  - 0.9258888394402413
  - 0.9250376850273061
  - 0.9257019171304885
  - 0.9229101630246271
  train_jaccard_samples_oob:
  - 0.8330616478956726
  - 0.8280670523661177
  - 0.833568092519831
  - 0.8225355596784167
  - 0.8303230761607451
  train_jaccard_weighted:
  - 0.9145017060840309
  - 0.9132731793076855
  - 0.9117683714261502
  - 0.9128090341615174
  - 0.9094183596587356
  train_jaccard_weighted_oob:
  - 0.8139248573438722
  - 0.8089284797977047
  - 0.8138473843391291
  - 0.8034604588821055
  - 0.8107192846984643
  train_label_ranking_average_precision_score:
  - 0.9885892116182572
  - 0.9887504326756662
  - 0.989058986334544
  - 0.9898268398268396
  - 0.9879032258064513
  train_label_ranking_average_precision_score_oob:
  - 0.8856889695712311
  - 0.8842679127725853
  - 0.8865680678083373
  - 0.8853073593073595
  - 0.8843955948664587
  train_matthews_corrcoef_macro:
  - 0.8518745538728205
  - 0.8491555741032024
  - 0.8464996894650046
  - 0.8474807518643511
  - 0.8424159146162308
  train_matthews_corrcoef_macro_oob:
  - 0.6243973900577731
  - 0.6102897531380392
  - 0.625246273672599
  - 0.5936981912587987
  - 0.6176372330175394
  train_matthews_corrcoef_micro:
  - 0.8488956358158642
  - 0.8464245615326992
  - 0.843516442261604
  - 0.8451560889784953
  - 0.8394553189132923
  train_matthews_corrcoef_micro_oob:
  - 0.6250268011643814
  - 0.6124459571846573
  - 0.6255679735879615
  - 0.5980121934515434
  - 0.6186528109701501
  train_matthews_corrcoef_samples:
  - 0.7844260779493406
  - 0.7827527548497657
  - 0.7829019116307804
  - 0.782516948499088
  - 0.7753483497296983
  train_matthews_corrcoef_samples_oob:
  - 0.47545987827065533
  - 0.4588125913518721
  - 0.47907404480934335
  - 0.43976484775169894
  - 0.46948572131628036
  train_matthews_corrcoef_weighted:
  - 0.8474258709653737
  - 0.8450506894250824
  - 0.8420469721655733
  - 0.8439971330378079
  - 0.8379052005104436
  train_matthews_corrcoef_weighted_oob:
  - 0.6074940256733237
  - 0.5927340467805454
  - 0.6081385152287535
  - 0.576127399906968
  - 0.5995450353646753
  train_ndgc:
  - 0.991673349243793
  - 0.991795912711084
  - 0.9920779024593712
  - 0.9925659102079664
  - 0.9912350878399357
  train_ndgc_oob:
  - 0.9157716109809904
  - 0.9144713640117086
  - 0.9165342610580719
  - 0.9155946775571614
  - 0.9148660442305157
  train_neg_coverage_error:
  - -1.1001037344398341
  - -1.0991692627206646
  - -1.100155682407888
  - -1.1002597402597403
  - -1.1066597294484912
  train_neg_coverage_error_oob:
  - -1.4066390041493777
  - -1.4055036344755971
  - -1.408406850025947
  - -1.4192207792207792
  - -1.4115504682622269
  train_neg_hamming_loss_macro:
  - -0.04313623789764868
  - -0.043873312564901346
  - -0.04462895692786715
  - -0.04424242424242424
  - -0.04587235518557058
  train_neg_hamming_loss_macro_oob:
  - -0.09967150760719225
  - -0.1027172031844929
  - -0.09963674104826155
  - -0.10606060606060606
  - -0.10145681581685743
  train_neg_hamming_loss_micro:
  - -0.043136237897648685
  - -0.04387331256490135
  - -0.04462895692786715
  - -0.04424242424242424
  - -0.04587235518557058
  train_neg_hamming_loss_micro_oob:
  - -0.09967150760719226
  - -0.1027172031844929
  - -0.09963674104826155
  - -0.10606060606060606
  - -0.10145681581685743
  train_neg_hamming_loss_samples:
  - -0.04313623789764868
  - -0.04387331256490135
  - -0.04462895692786715
  - -0.044242424242424236
  - -0.04587235518557058
  train_neg_hamming_loss_samples_oob:
  - -0.09967150760719225
  - -0.1027172031844929
  - -0.09963674104826155
  - -0.10606060606060605
  - -0.10145681581685743
  train_neg_hamming_loss_weighted:
  - -0.0449305124792481
  - -0.04559112701884625
  - -0.04642417283055912
  - -0.045784085416758206
  - -0.04774478350042369
  train_neg_hamming_loss_weighted_oob:
  - -0.10486989784140023
  - -0.10795994343916396
  - -0.10487157456043056
  - -0.11137898351044799
  - -0.10692792606025718
  train_neg_label_ranking_loss:
  - -0.005368257261410788
  - -0.004945482866043614
  - -0.005137519460300986
  - -0.004948051948051948
  - -0.005840270551508845
  train_neg_label_ranking_loss_oob:
  - -0.06487292531120332
  - -0.06501817237798546
  - -0.0646990140114167
  - -0.06662337662337663
  - -0.06515348595213319
  train_precision_macro:
  - 0.9568637621023514
  - 0.9561266874350985
  - 0.9553710430721329
  - 0.9557575757575757
  - 0.9541276448144295
  train_precision_macro_oob:
  - 0.9003284923928078
  - 0.8972827968155072
  - 0.9003632589517384
  - 0.8939393939393939
  - 0.8985431841831425
  train_precision_micro:
  - 0.9568637621023514
  - 0.9561266874350987
  - 0.9553710430721328
  - 0.9557575757575758
  - 0.9541276448144295
  train_precision_micro_oob:
  - 0.9003284923928078
  - 0.897282796815507
  - 0.9003632589517384
  - 0.8939393939393939
  - 0.8985431841831426
  train_precision_samples:
  - 0.9568637621023512
  - 0.9561266874350987
  - 0.9553710430721328
  - 0.9557575757575758
  - 0.9541276448144295
  train_precision_samples_oob:
  - 0.9003284923928079
  - 0.8972827968155073
  - 0.9003632589517385
  - 0.893939393939394
  - 0.8985431841831426
  train_precision_weighted:
  - 0.9550694875207519
  - 0.9544088729811537
  - 0.9535758271694409
  - 0.9542159145832417
  - 0.9522552164995762
  train_precision_weighted_oob:
  - 0.8951301021585998
  - 0.892040056560836
  - 0.8951284254395696
  - 0.8886210164895522
  - 0.8930720739397427
  train_recall_macro:
  - 0.9568637621023514
  - 0.9561266874350985
  - 0.9553710430721329
  - 0.9557575757575757
  - 0.9541276448144295
  train_recall_macro_oob:
  - 0.9003284923928078
  - 0.8972827968155072
  - 0.9003632589517384
  - 0.8939393939393939
  - 0.8985431841831425
  train_recall_micro:
  - 0.9568637621023514
  - 0.9561266874350987
  - 0.9553710430721328
  - 0.9557575757575758
  - 0.9541276448144295
  train_recall_micro_oob:
  - 0.9003284923928078
  - 0.897282796815507
  - 0.9003632589517384
  - 0.8939393939393939
  - 0.8985431841831426
  train_recall_samples:
  - 0.9568637621023512
  - 0.9561266874350987
  - 0.9553710430721328
  - 0.9557575757575758
  - 0.9541276448144295
  train_recall_samples_oob:
  - 0.9003284923928079
  - 0.8972827968155073
  - 0.9003632589517385
  - 0.893939393939394
  - 0.8985431841831426
  train_recall_weighted:
  - 0.9550694875207519
  - 0.9544088729811537
  - 0.9535758271694409
  - 0.9542159145832417
  - 0.9522552164995762
  train_recall_weighted_oob:
  - 0.8951301021585998
  - 0.892040056560836
  - 0.8951284254395696
  - 0.8886210164895522
  - 0.8930720739397427
  train_roc_auc_macro:
  - 0.9984186349069092
  - 0.9988881974382154
  - 0.9985185424846731
  - 0.9986194303112991
  - 0.9985351656789622
  train_roc_auc_macro_oob:
  - 0.953940706238607
  - 0.952125716847202
  - 0.9507916329889318
  - 0.949937254339563
  - 0.9508692882545574
  train_roc_auc_micro:
  - 0.9984920997545289
  - 0.9987946700871875
  - 0.9985110213148974
  - 0.9986126510098368
  - 0.9985241078479621
  train_roc_auc_micro_oob:
  - 0.958437904354223
  - 0.9570248156278439
  - 0.9563740552416491
  - 0.9547170451916018
  - 0.9562486408844838
  train_roc_auc_samples:
  - 0.9946317427385892
  - 0.9950545171339563
  - 0.994862480539699
  - 0.995051948051948
  - 0.9941597294484911
  train_roc_auc_samples_oob:
  - 0.9351270746887967
  - 0.9349818276220145
  - 0.9353009859885834
  - 0.9333766233766234
  - 0.9348465140478669
  train_roc_auc_weighted:
  - 0.9983483987831744
  - 0.9988689879525675
  - 0.9984616195530633
  - 0.9985647045892471
  - 0.998479713999619
  train_roc_auc_weighted_oob:
  - 0.9502388180849903
  - 0.9482611569320497
  - 0.9467987165746169
  - 0.9460495091902338
  - 0.9467781545715808
start: 2023-12-22 16:56:06.518510
wrapper: null
