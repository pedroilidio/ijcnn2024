active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMDMAAnJmZmZnZP8CZmZmZmRlAQGZmZmZmFsCAMzMzMzMDQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 12:36:20.259312
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__7
  params: {}
hash: 1a7d64017865bfcaacf2191995f1983cb3867a6173aac2c1032fb7c0485c9aa8
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1a7d640_20231222T121339551864_embedding__7_scene.yml
results:
  fit_time:
  - 1168.2454116344452
  - 1194.2203967571259
  - 1239.731605052948
  - 1255.7715804576874
  - 1227.4035124778748
  score_time:
  - 14.173038482666016
  - 14.496517181396484
  - 16.912124156951904
  - 16.67271089553833
  - 15.544055223464966
  test_average_precision_macro:
  - 0.8419917552845148
  - 0.8428556309645984
  - 0.8541523053267458
  - 0.8373867844558823
  - 0.8280669983695722
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8450671911589195
  - 0.8568194709104318
  - 0.8570266628714497
  - 0.8433714725006664
  - 0.8329739886613673
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8641237113402063
  - 0.8832640332640334
  - 0.8784561403508772
  - 0.860763175906913
  - 0.8695198329853863
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8317096198159848
  - 0.8318743774942134
  - 0.8451265163197714
  - 0.8261835972790397
  - 0.8166334934950031
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9034364261168385
  - 0.9015939015939015
  - 0.8992982456140352
  - 0.905201916495551
  - 0.895963813500348
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9034364261168385
  - 0.9015939015939016
  - 0.899298245614035
  - 0.905201916495551
  - 0.8959638135003479
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9034364261168385
  - 0.9015939015939016
  - 0.8992982456140352
  - 0.905201916495551
  - 0.895963813500348
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8983324992493245
  - 0.8962662084049366
  - 0.89411381451695
  - 0.8999956310891694
  - 0.8904027168141235
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.826969068216148
  - 0.8247048130915208
  - 0.8204038306192228
  - 0.8303762521834877
  - 0.8152565923209898
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.823879661548104
  - 0.820820189274448
  - 0.8170226330889385
  - 0.8268208815254767
  - 0.8115348250866687
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8390279823269513
  - 0.8376398376398375
  - 0.8337343358395989
  - 0.843649163977706
  - 0.8292573814494482
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.818758822800994
  - 0.8161556609191741
  - 0.8121739261449327
  - 0.8219354634072631
  - 0.8064126555621082
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8641237113402059
  - 0.8832640332640332
  - 0.878456140350877
  - 0.8607631759069129
  - 0.8695198329853862
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6368550426833306
  - 0.630988473565635
  - 0.6265166332384086
  - 0.6415940021470649
  - 0.6079540871964771
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6337873808040861
  - 0.631349802357496
  - 0.6247917610275278
  - 0.6409141500085764
  - 0.6067731087705228
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49667388243403116
  - 0.5129581764545876
  - 0.5034973374741912
  - 0.525912296740326
  - 0.4876890621012985
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6209796673071594
  - 0.6128932638208685
  - 0.610264544063019
  - 0.6245429411905626
  - 0.5886764640437365
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9000781448752639
  - 0.914053161766246
  - 0.9106099840042279
  - 0.8972647435097516
  - 0.9038532964090014
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4515463917525773
  - -1.4116424116424116
  - -1.4463157894736842
  - -1.459958932238193
  - -1.453027139874739
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0965635738831615
  - -0.09840609840609842
  - -0.10070175438596492
  - -0.09479808350444902
  - -0.10403618649965206
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09656357388316152
  - -0.0984060984060984
  - -0.10070175438596492
  - -0.094798083504449
  - -0.10403618649965206
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.0965635738831615
  - -0.09840609840609842
  - -0.1007017543859649
  - -0.09479808350444899
  - -0.10403618649965204
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1016675007506756
  - -0.10373379159506327
  - -0.10588618548304998
  - -0.10000436891083053
  - -0.10959728318587644
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07520618556701031
  - -0.06444906444906445
  - -0.06947368421052631
  - -0.07787474332648871
  - -0.07301670146137786
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9034364261168385
  - 0.9015939015939015
  - 0.8992982456140352
  - 0.905201916495551
  - 0.895963813500348
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9034364261168385
  - 0.9015939015939016
  - 0.899298245614035
  - 0.905201916495551
  - 0.8959638135003479
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9034364261168385
  - 0.9015939015939016
  - 0.8992982456140352
  - 0.905201916495551
  - 0.895963813500348
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8983324992493245
  - 0.8962662084049366
  - 0.89411381451695
  - 0.8999956310891694
  - 0.8904027168141235
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9034364261168385
  - 0.9015939015939015
  - 0.8992982456140352
  - 0.905201916495551
  - 0.895963813500348
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9034364261168385
  - 0.9015939015939016
  - 0.899298245614035
  - 0.905201916495551
  - 0.8959638135003479
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9034364261168385
  - 0.9015939015939016
  - 0.8992982456140352
  - 0.905201916495551
  - 0.895963813500348
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8983324992493245
  - 0.8962662084049366
  - 0.89411381451695
  - 0.8999956310891694
  - 0.8904027168141235
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.945129359767173
  - 0.9457029103871304
  - 0.9474328785928344
  - 0.9432602498466348
  - 0.9404367345714788
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9512390295315889
  - 0.9550482590988976
  - 0.9544936372507484
  - 0.9498843881822605
  - 0.9472865303483019
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9247938144329897
  - 0.9355509355509357
  - 0.9305263157894736
  - 0.9221252566735114
  - 0.9269832985386222
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9399727085419434
  - 0.9405808996477047
  - 0.9425302555622286
  - 0.9379945044224383
  - 0.9351828112099304
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9941698882296541
  - 0.9935159432570629
  - 0.9945698612281308
  - 0.994486887170669
  - 0.994614207213648
  train_average_precision_macro_oob:
  - 0.8531904065659167
  - 0.8552547771293565
  - 0.858980376787755
  - 0.8596852866123665
  - 0.8610679245604326
  train_average_precision_micro:
  - 0.9937468888581119
  - 0.9933342002818032
  - 0.9938210264228313
  - 0.9938462598607343
  - 0.9943297158010947
  train_average_precision_micro_oob:
  - 0.8613510773965088
  - 0.8601438769883708
  - 0.865879581797489
  - 0.8667765507423199
  - 0.8671023702955576
  train_average_precision_samples:
  - 0.9885969476240029
  - 0.9862409138110073
  - 0.9864993098688751
  - 0.9892795138888888
  - 0.9883298755186722
  train_average_precision_samples_oob:
  - 0.8801031911203607
  - 0.8794608861197647
  - 0.8845928226363009
  - 0.8840798611111111
  - 0.8866398686030429
  train_average_precision_weighted:
  - 0.9941140189331258
  - 0.9934454944962111
  - 0.9944731774935748
  - 0.9944184557298809
  - 0.9945039616758531
  train_average_precision_weighted_oob:
  - 0.8441138402028133
  - 0.8461147781759829
  - 0.8499128529807543
  - 0.8505754056140563
  - 0.8517823642878773
  train_f1_macro:
  - 0.9565556711758584
  - 0.9549151955694012
  - 0.9555728088336783
  - 0.9567708333333332
  - 0.9559993084370678
  train_f1_macro_oob:
  - 0.8982830385015609
  - 0.8960713049498096
  - 0.8991545893719808
  - 0.8990451388888889
  - 0.8988589211618258
  train_f1_micro:
  - 0.9565556711758585
  - 0.9549151955694012
  - 0.9555728088336783
  - 0.9567708333333333
  - 0.9559993084370678
  train_f1_micro_oob:
  - 0.8982830385015609
  - 0.8960713049498096
  - 0.8991545893719807
  - 0.8990451388888889
  - 0.8988589211618258
  train_f1_samples:
  - 0.9565556711758585
  - 0.9549151955694012
  - 0.9555728088336785
  - 0.9567708333333333
  - 0.9559993084370678
  train_f1_samples_oob:
  - 0.8982830385015609
  - 0.8960713049498097
  - 0.8991545893719807
  - 0.8990451388888888
  - 0.8988589211618259
  train_f1_weighted:
  - 0.9548492663137734
  - 0.9532295615408045
  - 0.9536942205189197
  - 0.9547733820921986
  - 0.9541323727698098
  train_f1_weighted_oob:
  - 0.892742815203567
  - 0.8906980847002197
  - 0.8936200247486094
  - 0.8939620607672469
  - 0.8935089227670008
  train_jaccard_macro:
  - 0.9171789771758609
  - 0.914154177847927
  - 0.9154335154654892
  - 0.9176912808154465
  - 0.9161912132398152
  train_jaccard_macro_oob:
  - 0.8192744422246846
  - 0.8153725076409608
  - 0.8207556647459976
  - 0.8199986581943371
  - 0.8198585092413011
  train_jaccard_micro:
  - 0.9167289952630266
  - 0.9137202947751926
  - 0.9149252498554555
  - 0.9171243135297055
  - 0.9157075432640557
  train_jaccard_micro_oob:
  - 0.8153482880755608
  - 0.8117112173708552
  - 0.8167855183763028
  - 0.8166049042024758
  - 0.8162976919453604
  train_jaccard_samples:
  - 0.9268247361379515
  - 0.9239603421846412
  - 0.9251947155673863
  - 0.9273313492063492
  - 0.9258669235328986
  train_jaccard_samples_oob:
  - 0.830013378920767
  - 0.8264846956435741
  - 0.8312382924184165
  - 0.8312872023809523
  - 0.8307893696897846
  train_jaccard_weighted:
  - 0.9140742836517992
  - 0.9110958239850456
  - 0.9120331065773117
  - 0.9140610583047524
  - 0.912797655711822
  train_jaccard_weighted_oob:
  - 0.8104800878669465
  - 0.8067966778421702
  - 0.8119202372641887
  - 0.8118793384702703
  - 0.8113450611105392
  train_label_ranking_average_precision_score:
  - 0.9885969476240027
  - 0.986240913811007
  - 0.9864993098688749
  - 0.9892795138888886
  - 0.9883298755186721
  train_label_ranking_average_precision_score_oob:
  - 0.8801031911203605
  - 0.8794608861197643
  - 0.8845928226363009
  - 0.884079861111111
  - 0.8866398686030431
  train_matthews_corrcoef_macro:
  - 0.8510605905036125
  - 0.8443945868277559
  - 0.847054411332314
  - 0.8525321369282226
  - 0.8489974064888335
  train_matthews_corrcoef_macro_oob:
  - 0.6142265903985011
  - 0.6042436079369715
  - 0.6155612387397704
  - 0.621124453921887
  - 0.6171552153481318
  train_matthews_corrcoef_micro:
  - 0.8483144647854646
  - 0.841829778687384
  - 0.8439313915112384
  - 0.8490703176980894
  - 0.8458573475792122
  train_matthews_corrcoef_micro_oob:
  - 0.6175126197392169
  - 0.6062156872631947
  - 0.6192707599787892
  - 0.621412387123094
  - 0.6187966280320568
  train_matthews_corrcoef_samples:
  - 0.7878424154748169
  - 0.7768000492090246
  - 0.7814892472303558
  - 0.7897145748502676
  - 0.7844570137669077
  train_matthews_corrcoef_samples_oob:
  - 0.4711043274339801
  - 0.45607193432893073
  - 0.4696555489887455
  - 0.4728843552123818
  - 0.4684857860019046
  train_matthews_corrcoef_weighted:
  - 0.8469456725863851
  - 0.8404640479939485
  - 0.8424233938829482
  - 0.8474385397361076
  - 0.8443668791298188
  train_matthews_corrcoef_weighted_oob:
  - 0.595227418453253
  - 0.5866628263524303
  - 0.5966845152775516
  - 0.6048916994688505
  - 0.5993608156318916
  train_ndgc:
  - 0.9916751118753647
  - 0.9900134901985482
  - 0.9901654201988014
  - 0.9922552115904967
  - 0.9914643543646121
  train_ndgc_oob:
  - 0.9115348244799656
  - 0.9111302555582248
  - 0.9148714031187068
  - 0.9145773573613224
  - 0.9164899180731814
  train_neg_coverage_error:
  - -1.103537981269511
  - -1.1074766355140186
  - -1.1019668737060042
  - -1.1036458333333334
  - -1.099585062240664
  train_neg_coverage_error_oob:
  - -1.4261186264308012
  - -1.4278296988577361
  - -1.4042443064182195
  - -1.4171875
  - -1.4185684647302905
  train_neg_hamming_loss_macro:
  - -0.043444328824141516
  - -0.04508480443059882
  - -0.0444271911663216
  - -0.04322916666666667
  - -0.04400069156293223
  train_neg_hamming_loss_macro_oob:
  - -0.10171696149843913
  - -0.10392869505019037
  - -0.10084541062801933
  - -0.10095486111111111
  - -0.10114107883817426
  train_neg_hamming_loss_micro:
  - -0.043444328824141516
  - -0.04508480443059883
  - -0.0444271911663216
  - -0.043229166666666666
  - -0.04400069156293223
  train_neg_hamming_loss_micro_oob:
  - -0.10171696149843913
  - -0.10392869505019038
  - -0.10084541062801933
  - -0.10095486111111111
  - -0.10114107883817428
  train_neg_hamming_loss_samples:
  - -0.043444328824141516
  - -0.04508480443059882
  - -0.0444271911663216
  - -0.043229166666666666
  - -0.04400069156293222
  train_neg_hamming_loss_samples_oob:
  - -0.10171696149843913
  - -0.10392869505019037
  - -0.10084541062801931
  - -0.1009548611111111
  - -0.10114107883817426
  train_neg_hamming_loss_weighted:
  - -0.0451507336862266
  - -0.046770438459195464
  - -0.046305779481080125
  - -0.045226617907801414
  - -0.04586762723019014
  train_neg_hamming_loss_weighted_oob:
  - -0.10725718479643286
  - -0.10930191529978014
  - -0.1063799752513906
  - -0.10603793923275306
  - -0.10649107723299919
  train_neg_label_ranking_loss:
  - -0.00518990634755463
  - -0.00661993769470405
  - -0.006068840579710146
  - -0.005013020833333334
  - -0.005225622406639004
  train_neg_label_ranking_loss_oob:
  - -0.06822320499479709
  - -0.06911993769470405
  - -0.06510093167701862
  - -0.06610677083333334
  - -0.0670182111572153
  train_precision_macro:
  - 0.9565556711758584
  - 0.9549151955694012
  - 0.9555728088336783
  - 0.9567708333333332
  - 0.9559993084370678
  train_precision_macro_oob:
  - 0.8982830385015609
  - 0.8960713049498096
  - 0.8991545893719808
  - 0.8990451388888889
  - 0.8988589211618258
  train_precision_micro:
  - 0.9565556711758585
  - 0.9549151955694012
  - 0.9555728088336783
  - 0.9567708333333333
  - 0.9559993084370678
  train_precision_micro_oob:
  - 0.8982830385015609
  - 0.8960713049498096
  - 0.8991545893719807
  - 0.8990451388888889
  - 0.8988589211618258
  train_precision_samples:
  - 0.9565556711758585
  - 0.9549151955694012
  - 0.9555728088336785
  - 0.9567708333333333
  - 0.9559993084370678
  train_precision_samples_oob:
  - 0.8982830385015609
  - 0.8960713049498097
  - 0.8991545893719807
  - 0.8990451388888888
  - 0.8988589211618259
  train_precision_weighted:
  - 0.9548492663137734
  - 0.9532295615408045
  - 0.9536942205189197
  - 0.9547733820921986
  - 0.9541323727698098
  train_precision_weighted_oob:
  - 0.892742815203567
  - 0.8906980847002197
  - 0.8936200247486094
  - 0.8939620607672469
  - 0.8935089227670008
  train_recall_macro:
  - 0.9565556711758584
  - 0.9549151955694012
  - 0.9555728088336783
  - 0.9567708333333332
  - 0.9559993084370678
  train_recall_macro_oob:
  - 0.8982830385015609
  - 0.8960713049498096
  - 0.8991545893719808
  - 0.8990451388888889
  - 0.8988589211618258
  train_recall_micro:
  - 0.9565556711758585
  - 0.9549151955694012
  - 0.9555728088336783
  - 0.9567708333333333
  - 0.9559993084370678
  train_recall_micro_oob:
  - 0.8982830385015609
  - 0.8960713049498096
  - 0.8991545893719807
  - 0.8990451388888889
  - 0.8988589211618258
  train_recall_samples:
  - 0.9565556711758585
  - 0.9549151955694012
  - 0.9555728088336785
  - 0.9567708333333333
  - 0.9559993084370678
  train_recall_samples_oob:
  - 0.8982830385015609
  - 0.8960713049498097
  - 0.8991545893719807
  - 0.8990451388888888
  - 0.8988589211618259
  train_recall_weighted:
  - 0.9548492663137734
  - 0.9532295615408045
  - 0.9536942205189197
  - 0.9547733820921986
  - 0.9541323727698098
  train_recall_weighted_oob:
  - 0.892742815203567
  - 0.8906980847002197
  - 0.8936200247486094
  - 0.8939620607672469
  - 0.8935089227670008
  train_roc_auc_macro:
  - 0.9986079881846025
  - 0.9983787001940989
  - 0.9987034402705581
  - 0.9986065218221897
  - 0.9986385557430068
  train_roc_auc_macro_oob:
  - 0.9500199901149321
  - 0.949694518419962
  - 0.9517296475442475
  - 0.9509984949497682
  - 0.9507334438284815
  train_roc_auc_micro:
  - 0.9985670625548214
  - 0.9984302016592592
  - 0.9985851177560588
  - 0.9985586340348589
  - 0.9986433370660693
  train_roc_auc_micro_oob:
  - 0.9555763353439183
  - 0.9548958653170353
  - 0.9570928721657675
  - 0.9568689626748936
  - 0.9563470935559402
  train_roc_auc_samples:
  - 0.9948100936524454
  - 0.993380062305296
  - 0.9939311594202899
  - 0.9949869791666667
  - 0.994774377593361
  train_roc_auc_samples_oob:
  - 0.9317767950052029
  - 0.930880062305296
  - 0.9348990683229813
  - 0.9338932291666667
  - 0.9329817888427847
  train_roc_auc_weighted:
  - 0.9985779892428464
  - 0.9983299106448077
  - 0.998658733446177
  - 0.9985656158983279
  - 0.9985777859882164
  train_roc_auc_weighted_oob:
  - 0.9462496398507144
  - 0.9455695682728846
  - 0.9477646129273015
  - 0.9468898793798355
  - 0.9466368276509693
start: 2023-12-22 12:13:39.551864
wrapper: null
