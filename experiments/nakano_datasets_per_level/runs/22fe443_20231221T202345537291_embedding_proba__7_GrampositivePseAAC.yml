active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmJmZmZnJvwDNzMzMzPw/AJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:24:47.786948
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__7
  params: {}
hash: 22fe443477cc9fefaf199c916790b9aa3e3534e23d823bb1e0c30924a9081beb
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/22fe443_20231221T202345537291_embedding_proba__7_GrampositivePseAAC.yml
results:
  fit_time:
  - 41.260809898376465
  - 39.588961601257324
  - 39.52978277206421
  - 41.89010453224182
  - 41.59581732749939
  score_time:
  - 6.509024381637573
  - 6.42687726020813
  - 6.007500410079956
  - 6.451088905334473
  - 6.428226470947266
  test_average_precision_macro:
  - 0.40474647386562934
  - 0.37533753416965376
  - 0.4072321335647011
  - 0.3495901090996909
  - 0.36398668341881973
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5060470637756671
  - 0.47554383043632825
  - 0.5020705178353255
  - 0.461768388029645
  - 0.4708659775296288
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7023809523809523
  - 0.7107371794871794
  - 0.6936274509803921
  - 0.7059294871794871
  - 0.6931089743589743
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5071818044026849
  - 0.47700043013216714
  - 0.5171311544077153
  - 0.44546415637522213
  - 0.47821946271309107
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6857142857142857
  - 0.6759157509157508
  - 0.6774042950513538
  - 0.6853735207100592
  - 0.6695636094674556
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6250808633262761
  - 0.624293914140585
  - 0.619858881615805
  - 0.6252554115820115
  - 0.6224964113973193
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6061185468451242
  - 0.603082851637765
  - 0.6
  - 0.6061776061776062
  - 0.6
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6076190476190475
  - 0.6064102564102563
  - 0.6026143790849673
  - 0.6089743589743588
  - 0.5999999999999999
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5274543244726732
  - 0.5160249581562434
  - 0.5184571603111089
  - 0.5274657827068284
  - 0.5100143544107231
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7023809523809523
  - 0.7107371794871795
  - 0.6936274509803922
  - 0.7059294871794874
  - 0.6931089743589745
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.04352456634956395
  - 0.035273781075132925
  - 0.05201564866102994
  - 0.05936537537414045
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.11980845957463075
  - 0.11286957481914676
  - 0.14620417701167562
  - 0.11377602479771486
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.01904761904761905
  - 0.025641025641025644
  - 0.02526813989401594
  - 0.02564102564102564
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06798122744122369
  - 0.05643804972021268
  - 0.0832250378576479
  - 0.08409860374278587
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7780590787340771
  - 0.7852544330637362
  - 0.7729896311871471
  - 0.7809607911669608
  - 0.7718015414416883
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7904761904761906
  - -1.7596153846153846
  - -1.803921568627451
  - -1.7596153846153846
  - -1.7596153846153846
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.24523809523809526
  - -0.24759615384615385
  - -0.25
  - -0.2451923076923077
  - -0.25
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24523809523809523
  - -0.24759615384615385
  - -0.25
  - -0.24519230769230768
  - -0.25
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24523809523809523
  - -0.24759615384615385
  - -0.25
  - -0.24519230769230768
  - -0.25
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3142857142857143
  - -0.3240842490842491
  - -0.32259570494864614
  - -0.3146264792899408
  - -0.3304363905325444
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2634920634920635
  - -0.24839743589743588
  - -0.2565359477124182
  - -0.2532051282051282
  - -0.25320512820512825
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6857142857142857
  - 0.6759157509157508
  - 0.6774042950513538
  - 0.6853735207100592
  - 0.6695636094674556
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7547619047619047
  - 0.7524038461538461
  - 0.75
  - 0.7548076923076923
  - 0.75
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6857142857142857
  - 0.6759157509157508
  - 0.6774042950513538
  - 0.6853735207100592
  - 0.6695636094674556
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6844521555845231
  - 0.6614660343374309
  - 0.6569896624933937
  - 0.6173382242677867
  - 0.5645027484083561
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7633862433862435
  - 0.75005359056806
  - 0.7478547854785478
  - 0.7449765779092702
  - 0.7507704635108481
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7365079365079364
  - 0.7516025641025641
  - 0.743464052287582
  - 0.7467948717948717
  - 0.7467948717948718
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6721096012662491
  - 0.6380531863817669
  - 0.6509240037385028
  - 0.6322204061761023
  - 0.6227316896041207
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.745051246828928
  - 0.7622612321198474
  - 0.7607481916828762
  - 0.7686863593076361
  - 0.7671170320145633
  train_average_precision_macro_oob:
  - 0.6240698060712908
  - 0.6465824655006682
  - 0.6423351894725506
  - 0.7021545855141629
  - 0.7120098859633379
  train_average_precision_micro:
  - 0.8154568561806592
  - 0.8117989424653274
  - 0.8286568264852784
  - 0.8303408931770706
  - 0.802862529156007
  train_average_precision_micro_oob:
  - 0.7951380427933515
  - 0.7785362340268812
  - 0.804513403853836
  - 0.8112989228888428
  - 0.774046363666866
  train_average_precision_samples:
  - 0.8365539452495975
  - 0.8449799196787148
  - 0.8433253397282174
  - 0.847991967871486
  - 0.8485943775100401
  train_average_precision_samples_oob:
  - 0.8192431561996778
  - 0.8182730923694779
  - 0.8353317346123101
  - 0.8329317269076304
  - 0.8291164658634538
  train_average_precision_weighted:
  - 0.805304978948111
  - 0.805284649824288
  - 0.8195845773524991
  - 0.8207950952576545
  - 0.7987533127410306
  train_average_precision_weighted_oob:
  - 0.7815527756819729
  - 0.7720450310583726
  - 0.7934840814752983
  - 0.8045702903761969
  - 0.776599103466811
  train_f1_macro:
  - 0.8665458937198067
  - 0.8692771084337348
  - 0.8705035971223021
  - 0.8686746987951808
  - 0.8674698795180722
  train_f1_macro_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_f1_micro:
  - 0.8665458937198067
  - 0.869277108433735
  - 0.8705035971223022
  - 0.8686746987951808
  - 0.8674698795180723
  train_f1_micro_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_f1_samples:
  - 0.8665458937198067
  - 0.869277108433735
  - 0.8705035971223022
  - 0.8686746987951808
  - 0.8674698795180723
  train_f1_samples_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_f1_weighted:
  - 0.8307676305387977
  - 0.8357410503257046
  - 0.8360240037634964
  - 0.8335739137935992
  - 0.8341375046726284
  train_f1_weighted_oob:
  - 0.8133797933569101
  - 0.8116158413558539
  - 0.8126627884295434
  - 0.8039393852258677
  - 0.8195646548005867
  train_jaccard_macro:
  - 0.770492100548888
  - 0.7741803736057982
  - 0.7763636037495893
  - 0.7736259549591525
  - 0.7713198828420815
  train_jaccard_macro_oob:
  - 0.7502063252996196
  - 0.7460156198030655
  - 0.7491376019528737
  - 0.7385480643372246
  - 0.7525539505698806
  train_jaccard_micro:
  - 0.7645178476291955
  - 0.768779968034097
  - 0.7707006369426752
  - 0.7678381256656017
  - 0.7659574468085106
  train_jaccard_micro_oob:
  - 0.7431578947368421
  - 0.7391304347826086
  - 0.7420365535248041
  - 0.7309697601668405
  - 0.746449237243556
  train_jaccard_samples:
  - 0.7864734299516908
  - 0.791164658634538
  - 0.7928057553956833
  - 0.7902008032128511
  - 0.7885943775100401
  train_jaccard_samples_oob:
  - 0.7648953301127212
  - 0.7606425702811244
  - 0.7630695443645082
  - 0.7519678714859437
  - 0.7683534136546184
  train_jaccard_weighted:
  - 0.7127577186261636
  - 0.7198867340109968
  - 0.7204232973410454
  - 0.7167661113510121
  - 0.717338536302444
  train_jaccard_weighted_oob:
  - 0.6876304489494275
  - 0.6850659139002433
  - 0.6866107716152178
  - 0.674205167348745
  - 0.695945045778765
  train_label_ranking_average_precision_score:
  - 0.8365539452495967
  - 0.8449799196787142
  - 0.8433253397282168
  - 0.8479919678714859
  - 0.84859437751004
  train_label_ranking_average_precision_score_oob:
  - 0.8192431561996775
  - 0.8182730923694774
  - 0.8353317346123097
  - 0.8329317269076304
  - 0.8291164658634534
  train_matthews_corrcoef_macro:
  - 0.4678619777883102
  - 0.4743835814048292
  - 0.47627013013289077
  - 0.47309894339228764
  - 0.4694747247665473
  train_matthews_corrcoef_macro_oob:
  - 0.4322984497410737
  - 0.4241527616466667
  - 0.4284321301848345
  - 0.40796616774516303
  - 0.4331564152589218
  train_matthews_corrcoef_micro:
  - 0.6323793044885335
  - 0.639798238133469
  - 0.6419121044400812
  - 0.6387769876768726
  - 0.6351558603279387
  train_matthews_corrcoef_micro_oob:
  - 0.5896885617087736
  - 0.5803328939895724
  - 0.5844589596028201
  - 0.5640154501829793
  - 0.5964372767319694
  train_matthews_corrcoef_samples:
  - 0.4717618383496582
  - 0.48230048322501023
  - 0.483398921508848
  - 0.48128205013872016
  - 0.4774812061165765
  train_matthews_corrcoef_samples_oob:
  - 0.4182480689332832
  - 0.40621048257636055
  - 0.40905839393091037
  - 0.3859149410563355
  - 0.4268787964780223
  train_matthews_corrcoef_weighted:
  - 0.5994709963421796
  - 0.6067547248941771
  - 0.6095001518766191
  - 0.6058985057140935
  - 0.6022195780241206
  train_matthews_corrcoef_weighted_oob:
  - 0.5568477719630822
  - 0.5471950365028214
  - 0.5521588898962329
  - 0.530603576910144
  - 0.5626240562978364
  train_ndgc:
  - 0.8782553281273747
  - 0.8845156309167405
  - 0.8833485679561823
  - 0.8871349543915565
  - 0.887591429358751
  train_ndgc_oob:
  - 0.8655973968002436
  - 0.8646968125455213
  - 0.8773513544337302
  - 0.8758090430771035
  - 0.8728171994969177
  train_neg_coverage_error:
  - -1.4420289855072463
  - -1.419277108433735
  - -1.4028776978417266
  - -1.3975903614457832
  - -1.3903614457831326
  train_neg_coverage_error_oob:
  - -1.4951690821256038
  - -1.4939759036144578
  - -1.4460431654676258
  - -1.4457831325301205
  - -1.4650602409638553
  train_neg_hamming_loss_macro:
  - -0.13345410628019325
  - -0.13072289156626504
  - -0.12949640287769784
  - -0.13132530120481928
  - -0.1325301204819277
  train_neg_hamming_loss_macro_oob:
  - -0.1473429951690821
  - -0.15
  - -0.14808153477218225
  - -0.15542168674698797
  - -0.14518072289156628
  train_neg_hamming_loss_micro:
  - -0.13345410628019325
  - -0.13072289156626507
  - -0.12949640287769784
  - -0.13132530120481928
  - -0.13253012048192772
  train_neg_hamming_loss_micro_oob:
  - -0.1473429951690821
  - -0.15
  - -0.14808153477218225
  - -0.15542168674698795
  - -0.14518072289156628
  train_neg_hamming_loss_samples:
  - -0.13345410628019325
  - -0.13072289156626507
  - -0.12949640287769784
  - -0.13132530120481928
  - -0.13253012048192772
  train_neg_hamming_loss_samples_oob:
  - -0.1473429951690821
  - -0.15
  - -0.14808153477218225
  - -0.15542168674698795
  - -0.14518072289156628
  train_neg_hamming_loss_weighted:
  - -0.1692323694612024
  - -0.16425894967429527
  - -0.1639759962365036
  - -0.1664260862064008
  - -0.16586249532737155
  train_neg_hamming_loss_weighted_oob:
  - -0.18662020664308993
  - -0.18838415864414598
  - -0.18733721157045655
  - -0.19606061477413234
  - -0.18043534519941343
  train_neg_label_ranking_loss:
  - -0.14392109500805153
  - -0.13714859437751006
  - -0.13349320543565146
  - -0.128714859437751
  - -0.12650602409638553
  train_neg_label_ranking_loss_oob:
  - -0.16103059581320453
  - -0.1618473895582329
  - -0.1474820143884892
  - -0.14477911646586344
  - -0.15180722891566265
  train_precision_macro:
  - 0.8665458937198067
  - 0.8692771084337348
  - 0.8705035971223021
  - 0.8686746987951808
  - 0.8674698795180722
  train_precision_macro_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_precision_micro:
  - 0.8665458937198067
  - 0.869277108433735
  - 0.8705035971223022
  - 0.8686746987951808
  - 0.8674698795180723
  train_precision_micro_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_precision_samples:
  - 0.8665458937198067
  - 0.869277108433735
  - 0.8705035971223022
  - 0.8686746987951808
  - 0.8674698795180723
  train_precision_samples_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_precision_weighted:
  - 0.8307676305387977
  - 0.8357410503257046
  - 0.8360240037634964
  - 0.8335739137935992
  - 0.8341375046726284
  train_precision_weighted_oob:
  - 0.8133797933569101
  - 0.8116158413558539
  - 0.8126627884295434
  - 0.8039393852258677
  - 0.8195646548005867
  train_recall_macro:
  - 0.8665458937198067
  - 0.8692771084337348
  - 0.8705035971223021
  - 0.8686746987951808
  - 0.8674698795180722
  train_recall_macro_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_recall_micro:
  - 0.8665458937198067
  - 0.869277108433735
  - 0.8705035971223022
  - 0.8686746987951808
  - 0.8674698795180723
  train_recall_micro_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_recall_samples:
  - 0.8665458937198067
  - 0.869277108433735
  - 0.8705035971223022
  - 0.8686746987951808
  - 0.8674698795180723
  train_recall_samples_oob:
  - 0.8526570048309179
  - 0.85
  - 0.8519184652278178
  - 0.844578313253012
  - 0.8548192771084338
  train_recall_weighted:
  - 0.8307676305387977
  - 0.8357410503257046
  - 0.8360240037634964
  - 0.8335739137935992
  - 0.8341375046726284
  train_recall_weighted_oob:
  - 0.8133797933569101
  - 0.8116158413558539
  - 0.8126627884295434
  - 0.8039393852258677
  - 0.8195646548005867
  train_roc_auc_macro:
  - 0.8561890990226899
  - 0.8596262326159888
  - 0.8700542030012569
  - 0.8787434000859844
  - 0.8598182203868867
  train_roc_auc_macro_oob:
  - 0.8313896779956005
  - 0.8203384289784565
  - 0.8416907199845942
  - 0.871068697047831
  - 0.8349013604645514
  train_roc_auc_micro:
  - 0.8962595944995401
  - 0.892119131821649
  - 0.9060133971291866
  - 0.9062096738522134
  - 0.8875646901124853
  train_roc_auc_micro_oob:
  - 0.8787131582812222
  - 0.8647959380224828
  - 0.8861129186602871
  - 0.891197529130984
  - 0.8624675227268792
  train_roc_auc_samples:
  - 0.8560789049919485
  - 0.86285140562249
  - 0.8665067945643484
  - 0.871285140562249
  - 0.8734939759036144
  train_roc_auc_samples_oob:
  - 0.8389694041867954
  - 0.8381526104417671
  - 0.8525179856115108
  - 0.8552208835341365
  - 0.8481927710843373
  train_roc_auc_weighted:
  - 0.8545783969719211
  - 0.85049865179547
  - 0.8693146245525148
  - 0.8702072616405664
  - 0.839480826343902
  train_roc_auc_weighted_oob:
  - 0.8428588833562669
  - 0.8199222989051728
  - 0.852098202513816
  - 0.8578002814451128
  - 0.8130361032715471
start: 2023-12-21 20:23:45.537291
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
