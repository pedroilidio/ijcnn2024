active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AMzMzMzPjvwAzMzMzM+O/oJmZmZmZEUCAmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:37:57.560402
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__8
  params: {}
hash: 59dfaef524fa6120109794149178607468d1fff7c603a7cb70510c5be4d9fad2
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/59dfaef_20231221T092910907879_embedding_proba_weak__8_VirusGO.yml
results:
  fit_time:
  - 496.71441984176636
  - 497.75393629074097
  - 509.600298166275
  - 512.5482232570648
  - 511.9239149093628
  score_time:
  - 5.120243549346924
  - 5.026913166046143
  - 5.150362968444824
  - 4.9265313148498535
  - 5.094192981719971
  test_average_precision_macro:
  - 0.9744184249685044
  - 0.9354634742261227
  - 0.9285272063761866
  - 0.9239238986361747
  - 0.9187179287244271
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8937998826933663
  - 0.8761036500119787
  - 0.9254718374503901
  - 0.9044047768485879
  - 0.874339155147579
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9224806201550388
  - 0.9318783068783068
  - 0.9442460317460317
  - 0.9423423423423424
  - 0.9302325581395349
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9567548725716637
  - 0.921199522785436
  - 0.935662723736111
  - 0.9479878532947585
  - 0.921213866773894
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8798449612403102
  - 0.876984126984127
  - 0.9047619047619048
  - 0.8243243243243245
  - 0.883720930232558
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8798449612403101
  - 0.876984126984127
  - 0.9047619047619048
  - 0.8243243243243243
  - 0.8837209302325582
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.87984496124031
  - 0.8769841269841271
  - 0.9047619047619049
  - 0.8243243243243242
  - 0.8837209302325583
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8440492476060192
  - 0.8476190476190476
  - 0.892128279883382
  - 0.7567567567567568
  - 0.8563611491108071
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.791404683121865
  - 0.7878538105773544
  - 0.8298398180855209
  - 0.7156508802850267
  - 0.7952167400875606
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7854671280276817
  - 0.7809187279151943
  - 0.8260869565217391
  - 0.7011494252873564
  - 0.7916666666666666
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8006644518272426
  - 0.7987528344671203
  - 0.844671201814059
  - 0.7136422136422138
  - 0.8056478405315616
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7346617448482988
  - 0.7447388072687499
  - 0.8093793188095822
  - 0.6233302008050932
  - 0.7520885677420632
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9224806201550387
  - 0.931878306878307
  - 0.9442460317460317
  - 0.9423423423423424
  - 0.9302325581395349
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.213806218331582
  - 0.2187547723916227
  - 0.2605777996644121
  - 0.14914985747871543
  - 0.22784064639737758
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5781910240626063
  - 0.5678946123002797
  - 0.6726659457326795
  - 0.43100369397047705
  - 0.5997020853838184
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4510403067953967
  - 0.4562447061944852
  - 0.5840433840032072
  - 0.24938347903339814
  - 0.4456343641899623
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4428240271247859
  - 0.4293032806389743
  - 0.5424272564442865
  - 0.2982997149574308
  - 0.4708928832563771
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9424120700996705
  - 0.9511841815727664
  - 0.9586458414877332
  - 0.9603834124038475
  - 0.9514839798907406
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.372093023255814
  - -1.380952380952381
  - -1.3333333333333333
  - -1.6756756756756757
  - -1.372093023255814
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.12015503875968991
  - -0.12301587301587301
  - -0.09523809523809523
  - -0.17567567567567569
  - -0.11627906976744184
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.12015503875968993
  - -0.12301587301587301
  - -0.09523809523809523
  - -0.17567567567567569
  - -0.11627906976744186
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.12015503875968991
  - -0.123015873015873
  - -0.09523809523809523
  - -0.1756756756756757
  - -0.11627906976744186
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.15595075239398085
  - -0.15238095238095237
  - -0.10787172011661805
  - -0.2432432432432432
  - -0.14363885088919287
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.037209302325581395
  - -0.03802910052910053
  - -0.036904761904761905
  - -0.05135135135135135
  - -0.03197674418604651
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8798449612403102
  - 0.876984126984127
  - 0.9047619047619048
  - 0.8243243243243245
  - 0.883720930232558
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8798449612403101
  - 0.876984126984127
  - 0.9047619047619048
  - 0.8243243243243243
  - 0.8837209302325582
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.87984496124031
  - 0.8769841269841271
  - 0.9047619047619049
  - 0.8243243243243242
  - 0.8837209302325583
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8440492476060192
  - 0.8476190476190476
  - 0.892128279883382
  - 0.7567567567567568
  - 0.8563611491108071
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8798449612403102
  - 0.876984126984127
  - 0.9047619047619048
  - 0.8243243243243245
  - 0.883720930232558
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8798449612403101
  - 0.876984126984127
  - 0.9047619047619048
  - 0.8243243243243243
  - 0.8837209302325582
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.87984496124031
  - 0.8769841269841271
  - 0.9047619047619049
  - 0.8243243243243242
  - 0.8837209302325583
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8440492476060192
  - 0.8476190476190476
  - 0.892128279883382
  - 0.7567567567567568
  - 0.8563611491108071
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.986003136297254
  - 0.960161968127332
  - 0.9805865153078775
  - 0.947756981580511
  - 0.9606309703368527
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9727195225916453
  - 0.961980198019802
  - 0.9743641298884086
  - 0.9550510262584566
  - 0.9609737614852705
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9627906976744184
  - 0.9619708994708993
  - 0.9630952380952381
  - 0.9486486486486487
  - 0.9680232558139535
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9739919557566616
  - 0.9479295546558704
  - 0.9706874328678841
  - 0.9611705288175877
  - 0.9512619406737054
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.950753667937576
  - 0.9470203956087625
  - 0.9482769309691862
  - 0.9560417886171987
  - 0.9432560318067599
  train_average_precision_macro_oob:
  - 0.9143381627475359
  - 0.9172095968193438
  - 0.895532711386901
  - 0.9156026650090775
  - 0.9036794718290694
  train_average_precision_micro:
  - 0.9429242657472537
  - 0.9135824271597699
  - 0.917272778525296
  - 0.9220706344447773
  - 0.9051270397836615
  train_average_precision_micro_oob:
  - 0.9089371247293913
  - 0.8730358866796072
  - 0.8838812328860111
  - 0.8811145902849628
  - 0.864099133904702
  train_average_precision_samples:
  - 0.9714430894308943
  - 0.9484848484848485
  - 0.938989898989899
  - 0.9696078431372548
  - 0.965040650406504
  train_average_precision_samples_oob:
  - 0.9420731707317073
  - 0.9232323232323231
  - 0.9163636363636363
  - 0.9513725490196079
  - 0.9443089430894309
  train_average_precision_weighted:
  - 0.9637841448239516
  - 0.9498720853783094
  - 0.9556407861309247
  - 0.9467110136893079
  - 0.9382325815590866
  train_average_precision_weighted_oob:
  - 0.9399505973739649
  - 0.9268154609234907
  - 0.9253636545989982
  - 0.9168929008603037
  - 0.9057800763058547
  train_f1_macro:
  - 0.8922764227642276
  - 0.8757575757575758
  - 0.8969696969696971
  - 0.8784313725490197
  - 0.8689024390243901
  train_f1_macro_oob:
  - 0.8922764227642276
  - 0.8747474747474748
  - 0.893939393939394
  - 0.873529411764706
  - 0.8678861788617885
  train_f1_micro:
  - 0.8922764227642277
  - 0.8757575757575757
  - 0.896969696969697
  - 0.8784313725490196
  - 0.8689024390243902
  train_f1_micro_oob:
  - 0.8922764227642277
  - 0.8747474747474747
  - 0.8939393939393939
  - 0.8735294117647059
  - 0.8678861788617886
  train_f1_samples:
  - 0.8922764227642277
  - 0.8757575757575757
  - 0.896969696969697
  - 0.8784313725490197
  - 0.8689024390243902
  train_f1_samples_oob:
  - 0.8922764227642277
  - 0.8747474747474746
  - 0.8939393939393939
  - 0.8735294117647059
  - 0.8678861788617885
  train_f1_weighted:
  - 0.8781701249848319
  - 0.841044104410441
  - 0.8884908195253022
  - 0.8444249341527656
  - 0.8295413178012376
  train_f1_weighted_oob:
  - 0.8781701249848319
  - 0.8390039003900389
  - 0.8823107926556202
  - 0.8343576236464736
  - 0.8274481252275209
  train_jaccard_macro:
  - 0.8077601410934744
  - 0.7829166868758731
  - 0.815934266034159
  - 0.7875814657241098
  - 0.7733753298320362
  train_jaccard_macro_oob:
  - 0.8077601410934744
  - 0.7814477482507997
  - 0.8109074610518224
  - 0.7804882912253844
  - 0.7718846375690926
  train_jaccard_micro:
  - 0.8055045871559633
  - 0.7789757412398922
  - 0.8131868131868132
  - 0.7832167832167832
  - 0.7681940700808625
  train_jaccard_micro_oob:
  - 0.8055045871559633
  - 0.77737881508079
  - 0.8082191780821918
  - 0.7754569190600522
  - 0.7666068222621185
  train_jaccard_samples:
  - 0.825493612078978
  - 0.7971139971139971
  - 0.8317460317460318
  - 0.8
  - 0.7852787456445992
  train_jaccard_samples_oob:
  - 0.825493612078978
  - 0.7958152958152958
  - 0.826984126984127
  - 0.791596638655462
  - 0.7835365853658537
  train_jaccard_weighted:
  - 0.7842322777646162
  - 0.7275719192199399
  - 0.8019578573755429
  - 0.7335846278911855
  - 0.7118385760006728
  train_jaccard_weighted_oob:
  - 0.7842322777646162
  - 0.7246049540762272
  - 0.791691956636182
  - 0.7189999356890404
  - 0.7087681949217741
  train_label_ranking_average_precision_score:
  - 0.9714430894308943
  - 0.9484848484848485
  - 0.9389898989898988
  - 0.9696078431372548
  - 0.965040650406504
  train_label_ranking_average_precision_score_oob:
  - 0.9420731707317073
  - 0.9232323232323233
  - 0.9163636363636365
  - 0.9513725490196078
  - 0.9443089430894309
  train_matthews_corrcoef_macro:
  - 0.25139006822319077
  - 0.21602868047715917
  - 0.26079382949014285
  - 0.21561781951291234
  - 0.2060212308463781
  train_matthews_corrcoef_macro_oob:
  - 0.25139006822319077
  - 0.21395043734782349
  - 0.2547149953014509
  - 0.20484824389285528
  - 0.2040317550052193
  train_matthews_corrcoef_micro:
  - 0.6426012795419366
  - 0.5754049507990147
  - 0.6600438548130909
  - 0.572951757422401
  - 0.5494941142672904
  train_matthews_corrcoef_micro_oob:
  - 0.6426012795419366
  - 0.5713289801570078
  - 0.6483710213418243
  - 0.5515049948495432
  - 0.5452715551329687
  train_matthews_corrcoef_samples:
  - 0.5485762323660901
  - 0.4491829418550866
  - 0.5650908463990499
  - 0.43060623968542333
  - 0.41451278335461367
  train_matthews_corrcoef_samples_oob:
  - 0.5485762323660901
  - 0.4530160056855937
  - 0.5590606517225696
  - 0.40863512829758425
  - 0.4084152223790039
  train_matthews_corrcoef_weighted:
  - 0.5107638092082757
  - 0.4427522511800877
  - 0.5292079514561915
  - 0.44191650202559285
  - 0.4186773577430603
  train_matthews_corrcoef_weighted_oob:
  - 0.5107638092082757
  - 0.43855461159212256
  - 0.5168010447667591
  - 0.41986716736504376
  - 0.4145796313836586
  train_ndgc:
  - 0.9806235178019316
  - 0.9620976963580438
  - 0.9554745739795565
  - 0.9783515575315946
  - 0.9749445347593828
  train_ndgc_oob:
  - 0.9599287882184699
  - 0.9446669619079371
  - 0.9402295020961619
  - 0.9659900776521831
  - 0.9618078044851327
  train_neg_coverage_error:
  - -1.3475609756097562
  - -1.3696969696969696
  - -1.4363636363636363
  - -1.2705882352941176
  - -1.3414634146341464
  train_neg_coverage_error_oob:
  - -1.4634146341463414
  - -1.4727272727272727
  - -1.5696969696969696
  - -1.3470588235294119
  - -1.4573170731707317
  train_neg_hamming_loss_macro:
  - -0.10772357723577236
  - -0.12424242424242422
  - -0.10303030303030303
  - -0.12156862745098039
  - -0.13109756097560976
  train_neg_hamming_loss_macro_oob:
  - -0.10772357723577236
  - -0.12525252525252525
  - -0.10606060606060606
  - -0.1264705882352941
  - -0.13211382113821138
  train_neg_hamming_loss_micro:
  - -0.10772357723577236
  - -0.12424242424242424
  - -0.10303030303030303
  - -0.12156862745098039
  - -0.13109756097560976
  train_neg_hamming_loss_micro_oob:
  - -0.10772357723577236
  - -0.12525252525252525
  - -0.10606060606060606
  - -0.1264705882352941
  - -0.13211382113821138
  train_neg_hamming_loss_samples:
  - -0.10772357723577235
  - -0.12424242424242424
  - -0.10303030303030303
  - -0.12156862745098038
  - -0.13109756097560976
  train_neg_hamming_loss_samples_oob:
  - -0.10772357723577235
  - -0.12525252525252523
  - -0.10606060606060606
  - -0.1264705882352941
  - -0.13211382113821138
  train_neg_hamming_loss_weighted:
  - -0.12182987501516808
  - -0.15895589558955897
  - -0.11150918047469771
  - -0.15557506584723443
  - -0.1704586821987623
  train_neg_hamming_loss_weighted_oob:
  - -0.12182987501516808
  - -0.160996099609961
  - -0.11768920734437974
  - -0.1656423763535265
  - -0.1725518747724791
  train_neg_label_ranking_loss:
  - -0.01973238482384824
  - -0.0284006734006734
  - -0.03939393939393939
  - -0.016470588235294115
  - -0.02103658536585366
  train_neg_label_ranking_loss_oob:
  - -0.039532520325203255
  - -0.04673400673400673
  - -0.06089225589225589
  - -0.028513071895424843
  - -0.03809281842818428
  train_precision_macro:
  - 0.8922764227642276
  - 0.8757575757575758
  - 0.8969696969696971
  - 0.8784313725490197
  - 0.8689024390243901
  train_precision_macro_oob:
  - 0.8922764227642276
  - 0.8747474747474748
  - 0.893939393939394
  - 0.873529411764706
  - 0.8678861788617885
  train_precision_micro:
  - 0.8922764227642277
  - 0.8757575757575757
  - 0.896969696969697
  - 0.8784313725490196
  - 0.8689024390243902
  train_precision_micro_oob:
  - 0.8922764227642277
  - 0.8747474747474747
  - 0.8939393939393939
  - 0.8735294117647059
  - 0.8678861788617886
  train_precision_samples:
  - 0.8922764227642277
  - 0.8757575757575757
  - 0.896969696969697
  - 0.8784313725490197
  - 0.8689024390243902
  train_precision_samples_oob:
  - 0.8922764227642277
  - 0.8747474747474746
  - 0.8939393939393939
  - 0.8735294117647059
  - 0.8678861788617885
  train_precision_weighted:
  - 0.8781701249848319
  - 0.841044104410441
  - 0.8884908195253022
  - 0.8444249341527656
  - 0.8295413178012376
  train_precision_weighted_oob:
  - 0.8781701249848319
  - 0.8390039003900389
  - 0.8823107926556202
  - 0.8343576236464736
  - 0.8274481252275209
  train_recall_macro:
  - 0.8922764227642276
  - 0.8757575757575758
  - 0.8969696969696971
  - 0.8784313725490197
  - 0.8689024390243901
  train_recall_macro_oob:
  - 0.8922764227642276
  - 0.8747474747474748
  - 0.893939393939394
  - 0.873529411764706
  - 0.8678861788617885
  train_recall_micro:
  - 0.8922764227642277
  - 0.8757575757575757
  - 0.896969696969697
  - 0.8784313725490196
  - 0.8689024390243902
  train_recall_micro_oob:
  - 0.8922764227642277
  - 0.8747474747474747
  - 0.8939393939393939
  - 0.8735294117647059
  - 0.8678861788617886
  train_recall_samples:
  - 0.8922764227642277
  - 0.8757575757575757
  - 0.896969696969697
  - 0.8784313725490197
  - 0.8689024390243902
  train_recall_samples_oob:
  - 0.8922764227642277
  - 0.8747474747474746
  - 0.8939393939393939
  - 0.8735294117647059
  - 0.8678861788617885
  train_recall_weighted:
  - 0.8781701249848319
  - 0.841044104410441
  - 0.8884908195253022
  - 0.8444249341527656
  - 0.8295413178012376
  train_recall_weighted_oob:
  - 0.8781701249848319
  - 0.8390039003900389
  - 0.8823107926556202
  - 0.8343576236464736
  - 0.8274481252275209
  train_roc_auc_macro:
  - 0.9796714610654703
  - 0.9757015875330198
  - 0.9764682540653876
  - 0.9799254727679593
  - 0.9746692317593801
  train_roc_auc_macro_oob:
  - 0.9683353743605488
  - 0.9656751321419285
  - 0.9570332029845207
  - 0.9698618737972273
  - 0.9588658702909959
  train_roc_auc_micro:
  - 0.9797754522407123
  - 0.9770285721465548
  - 0.972499546197132
  - 0.980093427854622
  - 0.974679603260835
  train_roc_auc_micro_oob:
  - 0.9658857691110221
  - 0.9619289340101522
  - 0.9562158474220868
  - 0.965818040444906
  - 0.9583118888317035
  train_roc_auc_samples:
  - 0.9802676151761518
  - 0.9715993265993265
  - 0.9606060606060606
  - 0.9835294117647058
  - 0.9789634146341464
  train_roc_auc_samples_oob:
  - 0.9604674796747968
  - 0.9532659932659933
  - 0.9391077441077441
  - 0.9714869281045753
  - 0.9619071815718159
  train_roc_auc_weighted:
  - 0.9828304171960808
  - 0.9747320823902086
  - 0.9769581679403843
  - 0.9701141258326811
  - 0.9675269766543939
  train_roc_auc_weighted_oob:
  - 0.9715150649086974
  - 0.9640903429484329
  - 0.9639628932898472
  - 0.9595901715243115
  - 0.9481766320958845
start: 2023-12-21 09:29:10.907879
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
