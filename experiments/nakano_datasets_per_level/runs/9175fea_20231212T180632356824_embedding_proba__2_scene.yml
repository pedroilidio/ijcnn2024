active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b/gzMzMzMwkQIDMzMzMzAzAQGZmZmZmHsCAMzMzMzMDQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 18:08:27.392591
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 9175fea021980502968ef34561970030dd46df5d44cdb8c36f544cd7a92ba5f0
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9175fea_20231212T180632356824_embedding_proba__2_scene.yml
results:
  fit_time:
  - 59.091965436935425
  - 59.22190570831299
  - 69.67201662063599
  - 72.11082649230957
  - 72.48272728919983
  score_time:
  - 9.592249155044556
  - 9.202836513519287
  - 7.519536733627319
  - 7.381413698196411
  - 7.5428760051727295
  test_average_precision_macro:
  - 0.849812245957455
  - 0.8418969716035276
  - 0.8649654893195992
  - 0.8510400252363558
  - 0.8309190879940608
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8580288276201415
  - 0.8451727250215264
  - 0.8620155538281719
  - 0.8508152713770037
  - 0.8308686945154587
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8866114561766736
  - 0.8642604387827317
  - 0.8818900343642613
  - 0.886196319018405
  - 0.8686673625608908
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8393144327517599
  - 0.8307439363356915
  - 0.8568104917010709
  - 0.841610622751294
  - 0.8184466942894016
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9233954451345756
  - 0.9115357395612174
  - 0.924742268041237
  - 0.9185412406271302
  - 0.9185803757828811
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9233954451345756
  - 0.9115357395612173
  - 0.9247422680412372
  - 0.9185412406271302
  - 0.918580375782881
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9233954451345756
  - 0.9115357395612174
  - 0.9247422680412372
  - 0.9185412406271303
  - 0.918580375782881
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9186299362062544
  - 0.9065201411047733
  - 0.9207743946295852
  - 0.9140946074766725
  - 0.9138125599503472
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8614275751780934
  - 0.8408572523771402
  - 0.8617864736104965
  - 0.8517976624915319
  - 0.8523399163449253
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8576923076923076
  - 0.8374512353706112
  - 0.8600191754554171
  - 0.8493539237314844
  - 0.8494208494208494
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8773045450064082
  - 0.8599737134768982
  - 0.8794305351006382
  - 0.8720420683610867
  - 0.8705139675912119
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8533609977223618
  - 0.8326953147873218
  - 0.8550819536237724
  - 0.8443088682178085
  - 0.8443759827763407
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8866114561766734
  - 0.8642604387827314
  - 0.8818900343642612
  - 0.8861963190184045
  - 0.8686673625608905
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7273502209360072
  - 0.6897459164154999
  - 0.7331959311608353
  - 0.7109893038683253
  - 0.7147020668219995
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7211707489851533
  - 0.6834012950047289
  - 0.7250587832591181
  - 0.7026705724522063
  - 0.7062521839252072
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.668626246867028
  - 0.6470691355723158
  - 0.6741164479108753
  - 0.6676514645658633
  - 0.663032415722184
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7126630147999183
  - 0.6749547196282775
  - 0.7221003605487005
  - 0.6971890277902273
  - 0.7006819294865185
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9159640298512727
  - 0.9005952108042963
  - 0.9127702812713916
  - 0.916064964729961
  - 0.9032177642140229
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3995859213250517
  - -1.5074309978768579
  - -1.420618556701031
  - -1.3680981595092025
  - -1.4467640918580376
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07660455486542443
  - -0.08846426043878274
  - -0.0752577319587629
  - -0.0814587593728698
  - -0.081419624217119
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07660455486542443
  - -0.08846426043878274
  - -0.07525773195876288
  - -0.0814587593728698
  - -0.081419624217119
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07660455486542443
  - -0.08846426043878272
  - -0.07525773195876288
  - -0.0814587593728698
  - -0.081419624217119
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08137006379374556
  - -0.09347985889522685
  - -0.07922560537041477
  - -0.08590539252332752
  - -0.086187440049653
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06521739130434784
  - -0.07797239915074308
  - -0.06974226804123712
  - -0.060787321063394684
  - -0.0715553235908142
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9233954451345756
  - 0.9115357395612174
  - 0.924742268041237
  - 0.9185412406271302
  - 0.9185803757828811
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9233954451345756
  - 0.9115357395612173
  - 0.9247422680412372
  - 0.9185412406271302
  - 0.918580375782881
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9233954451345756
  - 0.9115357395612174
  - 0.9247422680412372
  - 0.9185412406271303
  - 0.918580375782881
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9186299362062544
  - 0.9065201411047733
  - 0.9207743946295852
  - 0.9140946074766725
  - 0.9138125599503472
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9233954451345756
  - 0.9115357395612174
  - 0.924742268041237
  - 0.9185412406271302
  - 0.9185803757828811
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9233954451345756
  - 0.9115357395612173
  - 0.9247422680412372
  - 0.9185412406271302
  - 0.918580375782881
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9233954451345756
  - 0.9115357395612174
  - 0.9247422680412372
  - 0.9185412406271303
  - 0.918580375782881
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9186299362062544
  - 0.9065201411047733
  - 0.9207743946295852
  - 0.9140946074766725
  - 0.9138125599503472
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9492280607795709
  - 0.9424632975600019
  - 0.950147436396334
  - 0.9521167675836
  - 0.9432310926623592
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9557676544728293
  - 0.9470325938447903
  - 0.9558222105651726
  - 0.9569378411621741
  - 0.9487564814389943
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9347826086956522
  - 0.922027600849257
  - 0.9302577319587629
  - 0.9392126789366053
  - 0.9284446764091858
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9444002269796683
  - 0.9372580389883527
  - 0.9455331460113228
  - 0.9483457859469951
  - 0.9372987306613121
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9970978983618405
  - 0.9974737198542053
  - 0.9973501642072621
  - 0.9973104347970377
  - 0.9972636670800408
  train_average_precision_macro_oob:
  - 0.9711625099380781
  - 0.9737504326605754
  - 0.9679189352318912
  - 0.9723143329612872
  - 0.97098351823435
  train_average_precision_micro:
  - 0.9972184090639087
  - 0.9975759804050298
  - 0.9973923545157488
  - 0.9973949245154156
  - 0.997256562119265
  train_average_precision_micro_oob:
  - 0.9699548862626629
  - 0.9727726927017566
  - 0.9675943672862538
  - 0.971640617692899
  - 0.9701961953045682
  train_average_precision_samples:
  - 0.9909909909909909
  - 0.9924672865013773
  - 0.9918487686437739
  - 0.9923965936739659
  - 0.991441908713693
  train_average_precision_samples_oob:
  - 0.9665453915453914
  - 0.9636966253443526
  - 0.9633021158515436
  - 0.966023635731665
  - 0.9645314661134163
  train_average_precision_weighted:
  - 0.9970217172935855
  - 0.9974005944536971
  - 0.9972810077851556
  - 0.9972033171553795
  - 0.9971540558073535
  train_average_precision_weighted_oob:
  - 0.9701051686418454
  - 0.9729587082574975
  - 0.9666955556794745
  - 0.9711965741160575
  - 0.9698500814084924
  train_f1_macro:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717309
  - 0.9801007994438652
  - 0.9814142461964038
  train_f1_macro_oob:
  - 0.9583333333333334
  - 0.9618629476584023
  - 0.9590704127644814
  - 0.9602884949600279
  - 0.9619640387275242
  train_f1_micro:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717308
  - 0.9801007994438652
  - 0.9814142461964038
  train_f1_micro_oob:
  - 0.9583333333333334
  - 0.9618629476584022
  - 0.9590704127644815
  - 0.9602884949600278
  - 0.9619640387275242
  train_f1_samples:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717308
  - 0.9801007994438652
  - 0.9814142461964038
  train_f1_samples_oob:
  - 0.9583333333333334
  - 0.9618629476584022
  - 0.9590704127644816
  - 0.9602884949600279
  - 0.9619640387275241
  train_f1_weighted:
  - 0.980237667737668
  - 0.9812803223460205
  - 0.9805123348533855
  - 0.9795001744644546
  - 0.9807933200440833
  train_f1_weighted_oob:
  - 0.9569572175955154
  - 0.961023296753361
  - 0.957839802565899
  - 0.9590543018093879
  - 0.9610421221045193
  train_jaccard_macro:
  - 0.9625065900437049
  - 0.9640441602704236
  - 0.9629463755734856
  - 0.9610425733604909
  - 0.9635752467731734
  train_jaccard_macro_oob:
  - 0.9202630874742376
  - 0.9266768375716682
  - 0.9215796016300414
  - 0.923814081348311
  - 0.9268423025125561
  train_jaccard_micro:
  - 0.9624309392265193
  - 0.9639868120720264
  - 0.9628936170212766
  - 0.9609781034335861
  - 0.9635067470084019
  train_jaccard_micro_oob:
  - 0.92
  - 0.9265279044696907
  - 0.9213595468177275
  - 0.9236105307145842
  - 0.9267155229846769
  train_jaccard_samples:
  - 0.9679487179487181
  - 0.9690697560015742
  - 0.9681507358406422
  - 0.9666567356869756
  - 0.9687932226832643
  train_jaccard_samples_oob:
  - 0.9315043065043064
  - 0.9369465761511216
  - 0.9322754075615678
  - 0.9342817418938378
  - 0.9372530132384903
  train_jaccard_weighted:
  - 0.9613139984306666
  - 0.9633029644867117
  - 0.9618244916739854
  - 0.9598880559990006
  - 0.9623785181123399
  train_jaccard_weighted_oob:
  - 0.9177412873760253
  - 0.9251111225718075
  - 0.9193153511149718
  - 0.9215522075238127
  - 0.9251309978951724
  train_label_ranking_average_precision_score:
  - 0.9909909909909909
  - 0.9924672865013773
  - 0.9918487686437738
  - 0.9923965936739658
  - 0.9914419087136928
  train_label_ranking_average_precision_score_oob:
  - 0.9665453915453914
  - 0.9636966253443523
  - 0.9633021158515431
  - 0.9660236357316646
  - 0.9645314661134161
  train_matthews_corrcoef_macro:
  - 0.9350210070156134
  - 0.9369640041227912
  - 0.9358482777587547
  - 0.9324403786101708
  - 0.9368391755921553
  train_matthews_corrcoef_macro_oob:
  - 0.8557913448440689
  - 0.8666822784848497
  - 0.8584018542324747
  - 0.8628912821538813
  - 0.8676443447636991
  train_matthews_corrcoef_micro:
  - 0.934095643976681
  - 0.9366270876207665
  - 0.9350540571271164
  - 0.9316276645081607
  - 0.9359165897350078
  train_matthews_corrcoef_micro_oob:
  - 0.8536444981288432
  - 0.8657712776195382
  - 0.8566078458710871
  - 0.8611631536378288
  - 0.8665128322140555
  train_matthews_corrcoef_samples:
  - 0.9208393829834426
  - 0.919767856684095
  - 0.9177856461508452
  - 0.9152229438290107
  - 0.9228876703278927
  train_matthews_corrcoef_samples_oob:
  - 0.8179205677945685
  - 0.8247147516862828
  - 0.8158073911761959
  - 0.8256973409755316
  - 0.8327271958540796
  train_matthews_corrcoef_weighted:
  - 0.9335806650734146
  - 0.9362653282232681
  - 0.9345851952182102
  - 0.931130830305091
  - 0.9354005926997023
  train_matthews_corrcoef_weighted_oob:
  - 0.8526873172376156
  - 0.8651216233919301
  - 0.8557027776533503
  - 0.8602909322615471
  - 0.8658745713248532
  train_ndgc:
  - 0.9933914328202942
  - 0.9945948582234053
  - 0.9940458507913719
  - 0.994450866717372
  - 0.9937463578984707
  train_ndgc_oob:
  - 0.9756342881868227
  - 0.9736391118623835
  - 0.9732992716691653
  - 0.9753884270635008
  - 0.9742393766150673
  train_neg_coverage_error:
  - -1.094074844074844
  - -1.0857438016528926
  - -1.0941727367325702
  - -1.094890510948905
  - -1.0907676348547717
  train_neg_coverage_error_oob:
  - -1.1735966735966736
  - -1.1797520661157024
  - -1.1878251821019772
  - -1.1824817518248176
  - -1.1804979253112033
  train_neg_hamming_loss_macro:
  - -0.019144144144144146
  - -0.01833677685950413
  - -0.018903919528269166
  - -0.019899200556134863
  - -0.018585753803596127
  train_neg_hamming_loss_macro_oob:
  - -0.041666666666666664
  - -0.038137052341597796
  - -0.04092958723551855
  - -0.03971150503997219
  - -0.0380359612724758
  train_neg_hamming_loss_micro:
  - -0.019144144144144143
  - -0.018336776859504134
  - -0.018903919528269163
  - -0.019899200556134863
  - -0.018585753803596127
  train_neg_hamming_loss_micro_oob:
  - -0.041666666666666664
  - -0.038137052341597796
  - -0.04092958723551856
  - -0.03971150503997219
  - -0.03803596127247579
  train_neg_hamming_loss_samples:
  - -0.019144144144144143
  - -0.018336776859504134
  - -0.018903919528269163
  - -0.019899200556134863
  - -0.018585753803596124
  train_neg_hamming_loss_samples_oob:
  - -0.041666666666666664
  - -0.03813705234159779
  - -0.04092958723551855
  - -0.039711505039972186
  - -0.03803596127247579
  train_neg_hamming_loss_weighted:
  - -0.019762332262332264
  - -0.018719677653979572
  - -0.019487665146614534
  - -0.020499825535545368
  - -0.019206679955916628
  train_neg_hamming_loss_weighted_oob:
  - -0.04304278240448453
  - -0.03897670324663907
  - -0.042160197434101036
  - -0.040945698190612
  - -0.03895787789548065
  train_neg_label_ranking_loss:
  - -0.00382016632016632
  - -0.003267045454545455
  - -0.0034209157127991683
  - -0.0032455683003128266
  - -0.0036696058091286307
  train_neg_label_ranking_loss_oob:
  - -0.018664818664818665
  - -0.020841942148760336
  - -0.02088969823100937
  - -0.019395203336809178
  - -0.02033195020746888
  train_precision_macro:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717309
  - 0.9801007994438652
  - 0.9814142461964038
  train_precision_macro_oob:
  - 0.9583333333333334
  - 0.9618629476584023
  - 0.9590704127644814
  - 0.9602884949600279
  - 0.9619640387275242
  train_precision_micro:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717308
  - 0.9801007994438652
  - 0.9814142461964038
  train_precision_micro_oob:
  - 0.9583333333333334
  - 0.9618629476584022
  - 0.9590704127644815
  - 0.9602884949600278
  - 0.9619640387275242
  train_precision_samples:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717308
  - 0.9801007994438652
  - 0.9814142461964038
  train_precision_samples_oob:
  - 0.9583333333333334
  - 0.9618629476584022
  - 0.9590704127644816
  - 0.9602884949600279
  - 0.9619640387275241
  train_precision_weighted:
  - 0.980237667737668
  - 0.9812803223460205
  - 0.9805123348533855
  - 0.9795001744644546
  - 0.9807933200440833
  train_precision_weighted_oob:
  - 0.9569572175955154
  - 0.961023296753361
  - 0.957839802565899
  - 0.9590543018093879
  - 0.9610421221045193
  train_recall_macro:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717309
  - 0.9801007994438652
  - 0.9814142461964038
  train_recall_macro_oob:
  - 0.9583333333333334
  - 0.9618629476584023
  - 0.9590704127644814
  - 0.9602884949600279
  - 0.9619640387275242
  train_recall_micro:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717308
  - 0.9801007994438652
  - 0.9814142461964038
  train_recall_micro_oob:
  - 0.9583333333333334
  - 0.9618629476584022
  - 0.9590704127644815
  - 0.9602884949600278
  - 0.9619640387275242
  train_recall_samples:
  - 0.9808558558558559
  - 0.9816632231404959
  - 0.9810960804717308
  - 0.9801007994438652
  - 0.9814142461964038
  train_recall_samples_oob:
  - 0.9583333333333334
  - 0.9618629476584022
  - 0.9590704127644816
  - 0.9602884949600279
  - 0.9619640387275241
  train_recall_weighted:
  - 0.980237667737668
  - 0.9812803223460205
  - 0.9805123348533855
  - 0.9795001744644546
  - 0.9807933200440833
  train_recall_weighted_oob:
  - 0.9569572175955154
  - 0.961023296753361
  - 0.957839802565899
  - 0.9590543018093879
  - 0.9610421221045193
  train_roc_auc_macro:
  - 0.9993391587073633
  - 0.9994207999859905
  - 0.9993971861005035
  - 0.9993807322123661
  - 0.9993702069880005
  train_roc_auc_macro_oob:
  - 0.9901096650935483
  - 0.9911556836466556
  - 0.9893787088596974
  - 0.9905000120456281
  - 0.9902282314015213
  train_roc_auc_micro:
  - 0.999389886942315
  - 0.9994658972399659
  - 0.9994262459569455
  - 0.9994297435907944
  - 0.9994025022294142
  train_roc_auc_micro_oob:
  - 0.9902953955549312
  - 0.9913362515689839
  - 0.9895070965767463
  - 0.9907362083237713
  - 0.9905381079994279
  train_roc_auc_samples:
  - 0.9961798336798338
  - 0.9967329545454545
  - 0.9965790842872009
  - 0.9967544316996872
  - 0.9963303941908713
  train_roc_auc_samples_oob:
  - 0.9813351813351814
  - 0.9791580578512398
  - 0.9791103017689906
  - 0.9806047966631909
  - 0.9796680497925312
  train_roc_auc_weighted:
  - 0.9993152891577092
  - 0.9993971522450614
  - 0.9993749314579736
  - 0.9993482089789602
  - 0.9993363225186386
  train_roc_auc_weighted_oob:
  - 0.9895481188099465
  - 0.9906869429878709
  - 0.9888250658176757
  - 0.9898869950469272
  - 0.9896396577391544
start: 2023-12-12 18:06:32.356824
wrapper: null
