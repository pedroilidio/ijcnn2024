active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z/MzMzMzMz8v6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAEMAAAAAAAAAUQAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:01:18.103405
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__4
  params: {}
hash: d057d40a5f746c488ebc578d9338e9bf26f6b5daf26af9831e2672fe609ab5b0
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d057d40_20231221T220050259781_embedding__4_CHD_49.yml
results:
  fit_time:
  - 12.186688423156738
  - 13.253636121749878
  - 13.389472246170044
  - 15.10797119140625
  - 13.741767883300781
  score_time:
  - 3.237459897994995
  - 3.1934568881988525
  - 3.3620333671569824
  - 3.0766923427581787
  - 3.1962008476257324
  test_average_precision_macro:
  - 0.5228141423553403
  - 0.5977918451725234
  - 0.557804071530088
  - 0.5177125855994744
  - 0.5245965219574111
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6868683186085673
  - 0.7165453477087491
  - 0.7251498080401185
  - 0.6885137804303225
  - 0.7163428809962429
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7760144927536231
  - 0.8080188679245284
  - 0.7855855855855857
  - 0.7878224206349207
  - 0.7769019019019018
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6568441590550509
  - 0.7101008099167094
  - 0.6910470761958369
  - 0.645675563070792
  - 0.6620723107393417
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7072463768115943
  - 0.7185534591194968
  - 0.7192192192192192
  - 0.6964285714285715
  - 0.7072072072072072
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7072463768115942
  - 0.7185534591194969
  - 0.7192192192192193
  - 0.6964285714285714
  - 0.7072072072072072
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7072463768115942
  - 0.7185534591194969
  - 0.7192192192192192
  - 0.6964285714285714
  - 0.7072072072072073
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6589236850106416
  - 0.6911360062893083
  - 0.6812437437437437
  - 0.6534834004024145
  - 0.6647766647766647
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5661331207836858
  - 0.5761492368247351
  - 0.57821029432755
  - 0.5550152183862725
  - 0.566522287819729
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.547085201793722
  - 0.5607361963190184
  - 0.5615474794841735
  - 0.5342465753424658
  - 0.5470383275261324
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5797515527950309
  - 0.5917789757412399
  - 0.596099996099996
  - 0.574791280148423
  - 0.5821145821145822
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.49488875448520037
  - 0.5340010393647783
  - 0.5206445275247423
  - 0.4917459905338338
  - 0.5041408019400684
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7760144927536233
  - 0.8080188679245283
  - 0.7945945945945949
  - 0.7878224206349208
  - 0.7949199199199198
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06950579936319684
  - 0.09583914926191228
  - 0.1029447246792428
  - 0.06109948136888705
  - 0.08418308740013551
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3968531468531469
  - 0.4287232350148339
  - 0.42452724506187073
  - 0.37855203233497525
  - 0.3986359955303916
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4151410657476009
  - 0.4429318526141883
  - 0.44694345074142816
  - 0.3874645315115515
  - 0.4046164976102714
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0843097425618861
  - 0.10819256697090235
  - 0.11532660458107433
  - 0.0674029349091846
  - 0.08315551571055509
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8545695467998735
  - 0.8821955211028464
  - 0.8575025940728324
  - 0.8583359267920231
  - 0.851903834113669
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7217391304347824
  - -3.8867924528301887
  - -3.7117117117117115
  - -3.7410714285714284
  - -3.72972972972973
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29275362318840575
  - -0.2814465408805032
  - -0.2807807807807808
  - -0.30357142857142855
  - -0.2927927927927928
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2927536231884058
  - -0.28144654088050314
  - -0.2807807807807808
  - -0.30357142857142855
  - -0.2927927927927928
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29275362318840575
  - -0.28144654088050314
  - -0.2807807807807808
  - -0.30357142857142855
  - -0.2927927927927928
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3410763149893585
  - -0.30886399371069184
  - -0.3187562562562563
  - -0.3465165995975855
  - -0.33522333522333525
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21297101449275363
  - -0.19538784067085951
  - -0.19747247247247246
  - -0.21966765873015873
  - -0.21281281281281275
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7072463768115943
  - 0.7185534591194968
  - 0.7192192192192192
  - 0.6964285714285715
  - 0.7072072072072072
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7072463768115942
  - 0.7185534591194969
  - 0.7192192192192193
  - 0.6964285714285714
  - 0.7072072072072072
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7072463768115942
  - 0.7185534591194969
  - 0.7192192192192192
  - 0.6964285714285714
  - 0.7072072072072073
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6589236850106416
  - 0.6911360062893083
  - 0.6812437437437437
  - 0.6534834004024145
  - 0.6647766647766647
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7072463768115943
  - 0.7185534591194968
  - 0.7192192192192192
  - 0.6964285714285715
  - 0.7072072072072072
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7072463768115942
  - 0.7185534591194969
  - 0.7192192192192193
  - 0.6964285714285714
  - 0.7072072072072072
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7072463768115942
  - 0.7185534591194969
  - 0.7192192192192192
  - 0.6964285714285714
  - 0.7072072072072073
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6589236850106416
  - 0.6911360062893083
  - 0.6812437437437437
  - 0.6534834004024145
  - 0.6647766647766647
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5357548714594342
  - 0.6236369190699019
  - 0.6283173045970943
  - 0.595419242020772
  - 0.5855957280163081
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7867825244062867
  - 0.8017840038314176
  - 0.8041868753674309
  - 0.7808824597066937
  - 0.784412955465587
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7870289855072464
  - 0.8046121593291404
  - .nan
  - 0.7803323412698412
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.619986986649545
  - 0.6290468144868273
  - 0.6647377225184479
  - 0.6079477510611038
  - 0.6036848134100727
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9997635390513899
  - 0.9999567109812406
  - 0.9997701726853804
  - 0.9997454531966228
  - 0.9995248353603908
  train_average_precision_macro_oob:
  - 0.6546397790559304
  - 0.6632042202193539
  - 0.6592705499055102
  - 0.6690656968128968
  - 0.6647171887738877
  train_average_precision_micro:
  - 0.9593710906199667
  - 0.9599600664268156
  - 0.9589905792606902
  - 0.9608338033171424
  - 0.9588276728721404
  train_average_precision_micro_oob:
  - 0.7515146711697445
  - 0.7501024801078162
  - 0.7507320499247199
  - 0.7530292111319997
  - 0.744207454343295
  train_average_precision_samples:
  - 0.926104797979798
  - 0.925445434298441
  - 0.9370213963963965
  - 0.9312452972159517
  - 0.9265202702702703
  train_average_precision_samples_oob:
  - 0.8087026515151516
  - 0.7963560999752536
  - 0.8101069819819819
  - 0.8094808126410834
  - 0.8142486236236235
  train_average_precision_weighted:
  - 0.9997970501155173
  - 0.9999499914973521
  - 0.9998001848346898
  - 0.9997579462006708
  - 0.9995505855487794
  train_average_precision_weighted_oob:
  - 0.782082113811878
  - 0.7931134444131224
  - 0.7851166976199945
  - 0.7944883049709011
  - 0.7886856854018455
  train_f1_macro:
  - 0.9257575757575759
  - 0.9253897550111359
  - 0.9226726726726727
  - 0.9266365688487584
  - 0.9253003003003005
  train_f1_macro_oob:
  - 0.7511363636363638
  - 0.7316258351893096
  - 0.7462462462462462
  - 0.7531978931527465
  - 0.7515015015015015
  train_f1_micro:
  - 0.9257575757575758
  - 0.9253897550111359
  - 0.9226726726726727
  - 0.9266365688487584
  - 0.9253003003003003
  train_f1_micro_oob:
  - 0.7511363636363636
  - 0.7316258351893096
  - 0.7462462462462462
  - 0.7531978931527464
  - 0.7515015015015015
  train_f1_samples:
  - 0.9257575757575759
  - 0.9253897550111359
  - 0.9226726726726728
  - 0.9266365688487584
  - 0.9253003003003003
  train_f1_samples_oob:
  - 0.7511363636363636
  - 0.7316258351893096
  - 0.7462462462462464
  - 0.7531978931527464
  - 0.7515015015015014
  train_f1_weighted:
  - 0.8992225924163096
  - 0.8969641160621115
  - 0.8963570213570212
  - 0.900272138806522
  - 0.8983774350266496
  train_f1_weighted_oob:
  - 0.7206171664286848
  - 0.6941591259519989
  - 0.7138182763182763
  - 0.720229902234527
  - 0.7188438438438439
  train_jaccard_macro:
  - 0.8699204881570154
  - 0.8705699381238384
  - 0.8651782844567372
  - 0.8718813607500232
  - 0.8694445053874661
  train_jaccard_macro_oob:
  - 0.6143249155908438
  - 0.5923520816168587
  - 0.6095320560255523
  - 0.6168392129650809
  - 0.6157149274222414
  train_jaccard_micro:
  - 0.8617771509167842
  - 0.861139896373057
  - 0.8564459930313589
  - 0.8633017875920084
  - 0.8609849807893818
  train_jaccard_micro_oob:
  - 0.6014558689717925
  - 0.5768217734855136
  - 0.5952095808383233
  - 0.6041038020519011
  - 0.6019242333132893
  train_jaccard_samples:
  - 0.8805411255411255
  - 0.878831265245519
  - 0.8736057486057484
  - 0.8808986348489733
  - 0.8795795795795796
  train_jaccard_samples_oob:
  - 0.6336589925226289
  - 0.609025347332697
  - 0.6246889746889748
  - 0.6346887123410826
  - 0.6338803088803089
  train_jaccard_weighted:
  - 0.8280881692020348
  - 0.8262054894927852
  - 0.8242182761578993
  - 0.8305881358614747
  - 0.8273368890991395
  train_jaccard_weighted_oob:
  - 0.5661293072571411
  - 0.5346110493718975
  - 0.558758814352226
  - 0.5652567737673144
  - 0.5646629553553179
  train_label_ranking_average_precision_score:
  - 0.932922979797979
  - 0.9321269487750554
  - 0.9415259009009005
  - 0.9380173062452968
  - 0.928772522522522
  train_label_ranking_average_precision_score_oob:
  - 0.815520833333332
  - 0.8030376144518672
  - 0.8146114864864856
  - 0.8162528216704278
  - 0.8165008758758755
  train_matthews_corrcoef_macro:
  - 0.6028164850863849
  - 0.6039988209709589
  - 0.5982858119469804
  - 0.6051949200979588
  - 0.6037726937279213
  train_matthews_corrcoef_macro_oob:
  - 0.21833691579942485
  - 0.16286599799942567
  - 0.21232377084609977
  - 0.2270420577852438
  - 0.22742927614866237
  train_matthews_corrcoef_micro:
  - 0.8512806764963318
  - 0.8499686633457642
  - 0.8440994387017758
  - 0.8525529669901579
  - 0.8496248528113937
  train_matthews_corrcoef_micro_oob:
  - 0.48918077193633197
  - 0.4443548049818937
  - 0.47664499378916153
  - 0.49298025913695115
  - 0.48873410444782356
  train_matthews_corrcoef_samples:
  - 0.8474116981122501
  - 0.8434351206155757
  - 0.8444091065016778
  - 0.8495715455280549
  - 0.8434978870313979
  train_matthews_corrcoef_samples_oob:
  - 0.49087944429388186
  - 0.4380660464525264
  - 0.4774447963416848
  - 0.48841540360378755
  - 0.49564789564040607
  train_matthews_corrcoef_weighted:
  - 0.6260799377114584
  - 0.632255129818321
  - 0.6263214870942064
  - 0.6320042653961683
  - 0.6306872993236864
  train_matthews_corrcoef_weighted_oob:
  - 0.2409531486155117
  - 0.1837642524210539
  - 0.23591982251211013
  - 0.24639964214142498
  - 0.24936131100709313
  train_ndgc:
  - 0.9498573103325689
  - 0.9482128379640504
  - 0.9590691644501993
  - 0.9537825798854698
  - 0.9513123421241865
  train_ndgc_oob:
  - 0.8728669098911791
  - 0.8638250362123356
  - 0.8741038835970177
  - 0.8728104033194142
  - 0.8759789484016337
  train_neg_coverage_error:
  - -2.915909090909091
  - -2.826280623608018
  - -2.869369369369369
  - -2.891647855530474
  - -2.90990990990991
  train_neg_coverage_error_oob:
  - -3.590909090909091
  - -3.56347438752784
  - -3.536036036036036
  - -3.5191873589164784
  - -3.5225225225225225
  train_neg_hamming_loss_macro:
  - -0.07424242424242423
  - -0.07461024498886415
  - -0.07732732732732733
  - -0.07336343115124154
  - -0.07469969969969971
  train_neg_hamming_loss_macro_oob:
  - -0.24886363636363637
  - -0.26837416481069043
  - -0.25375375375375375
  - -0.24680210684725357
  - -0.2484984984984985
  train_neg_hamming_loss_micro:
  - -0.07424242424242425
  - -0.07461024498886415
  - -0.07732732732732733
  - -0.07336343115124154
  - -0.0746996996996997
  train_neg_hamming_loss_micro_oob:
  - -0.24886363636363637
  - -0.26837416481069043
  - -0.25375375375375375
  - -0.24680210684725357
  - -0.2484984984984985
  train_neg_hamming_loss_samples:
  - -0.07424242424242423
  - -0.07461024498886415
  - -0.07732732732732732
  - -0.07336343115124154
  - -0.0746996996996997
  train_neg_hamming_loss_samples_oob:
  - -0.24886363636363637
  - -0.2683741648106904
  - -0.25375375375375375
  - -0.24680210684725357
  - -0.24849849849849848
  train_neg_hamming_loss_weighted:
  - -0.10077740758369032
  - -0.10303588393788839
  - -0.10364297864297865
  - -0.09972786119347811
  - -0.10162256497335032
  train_neg_hamming_loss_weighted_oob:
  - -0.27938283357131527
  - -0.30584087404800103
  - -0.2861817236817237
  - -0.279770097765473
  - -0.2811561561561562
  train_neg_label_ranking_loss:
  - -0.051338383838383836
  - -0.048131650581539225
  - -0.047015765765765764
  - -0.04826310509154752
  - -0.053997747747747744
  train_neg_label_ranking_loss_oob:
  - -0.17224116161616165
  - -0.18039470428111856
  - -0.16987612612612613
  - -0.16484198645598194
  - -0.1658470970970971
  train_precision_macro:
  - 0.9257575757575759
  - 0.9253897550111359
  - 0.9226726726726727
  - 0.9266365688487584
  - 0.9253003003003005
  train_precision_macro_oob:
  - 0.7511363636363638
  - 0.7316258351893096
  - 0.7462462462462462
  - 0.7531978931527465
  - 0.7515015015015015
  train_precision_micro:
  - 0.9257575757575758
  - 0.9253897550111359
  - 0.9226726726726727
  - 0.9266365688487584
  - 0.9253003003003003
  train_precision_micro_oob:
  - 0.7511363636363636
  - 0.7316258351893096
  - 0.7462462462462462
  - 0.7531978931527464
  - 0.7515015015015015
  train_precision_samples:
  - 0.9257575757575759
  - 0.9253897550111359
  - 0.9226726726726728
  - 0.9266365688487584
  - 0.9253003003003003
  train_precision_samples_oob:
  - 0.7511363636363636
  - 0.7316258351893096
  - 0.7462462462462464
  - 0.7531978931527464
  - 0.7515015015015014
  train_precision_weighted:
  - 0.8992225924163096
  - 0.8969641160621115
  - 0.8963570213570212
  - 0.900272138806522
  - 0.8983774350266496
  train_precision_weighted_oob:
  - 0.7206171664286848
  - 0.6941591259519989
  - 0.7138182763182763
  - 0.720229902234527
  - 0.7188438438438439
  train_recall_macro:
  - 0.9257575757575759
  - 0.9253897550111359
  - 0.9226726726726727
  - 0.9266365688487584
  - 0.9253003003003005
  train_recall_macro_oob:
  - 0.7511363636363638
  - 0.7316258351893096
  - 0.7462462462462462
  - 0.7531978931527465
  - 0.7515015015015015
  train_recall_micro:
  - 0.9257575757575758
  - 0.9253897550111359
  - 0.9226726726726727
  - 0.9266365688487584
  - 0.9253003003003003
  train_recall_micro_oob:
  - 0.7511363636363636
  - 0.7316258351893096
  - 0.7462462462462462
  - 0.7531978931527464
  - 0.7515015015015015
  train_recall_samples:
  - 0.9257575757575759
  - 0.9253897550111359
  - 0.9226726726726728
  - 0.9266365688487584
  - 0.9253003003003003
  train_recall_samples_oob:
  - 0.7511363636363636
  - 0.7316258351893096
  - 0.7462462462462464
  - 0.7531978931527464
  - 0.7515015015015014
  train_recall_weighted:
  - 0.8992225924163096
  - 0.8969641160621115
  - 0.8963570213570212
  - 0.900272138806522
  - 0.8983774350266496
  train_recall_weighted_oob:
  - 0.7206171664286848
  - 0.6941591259519989
  - 0.7138182763182763
  - 0.720229902234527
  - 0.7188438438438439
  train_roc_auc_macro:
  - 0.9998388272341602
  - 0.9999521094464496
  - 0.9998540557703729
  - 0.9997886814005049
  - 0.9996188993396511
  train_roc_auc_macro_oob:
  - 0.7072526842360317
  - 0.7364094933100089
  - 0.7249397321745322
  - 0.7028884913514499
  - 0.6931680204892867
  train_roc_auc_micro:
  - 0.9672912125523618
  - 0.9696850327092261
  - 0.967668844313581
  - 0.9685785241248818
  - 0.9674602846125725
  train_roc_auc_micro_oob:
  - 0.8307663463627635
  - 0.8272467854725919
  - 0.8326209974236292
  - 0.8391507257078247
  - 0.8360896697454858
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9998430187382568
  - 0.9999367057418058
  - 0.9998658374788957
  - 0.9997620177520061
  - 0.9995877615819015
  train_roc_auc_weighted_oob:
  - 0.7370697454197895
  - 0.773968060974473
  - 0.7408706652593681
  - 0.7594811781086861
  - 0.7416127094076507
start: 2023-12-21 22:00:50.259781
wrapper: null
