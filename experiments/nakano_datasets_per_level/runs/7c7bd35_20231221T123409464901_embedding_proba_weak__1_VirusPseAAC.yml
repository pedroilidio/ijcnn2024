active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T9AMzMzMzMDQIBmZmZmZvY/gJmZmZmZ+b/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:34:17.861648
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__1
  params: {}
hash: 7c7bd35f7e6db7d3bfcdda23b21a50fadc8fcd859fcc66ca34e29b9b0f6ae521
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7c7bd35_20231221T123409464901_embedding_proba_weak__1_VirusPseAAC.yml
results:
  fit_time:
  - 3.910183906555176
  - 3.8061776161193848
  - 3.8378195762634277
  - 3.813701629638672
  - 3.7752468585968018
  score_time:
  - 1.198059320449829
  - 1.2095766067504883
  - 1.1383521556854248
  - 1.2011661529541016
  - 1.1572377681732178
  test_average_precision_macro:
  - 0.5634947698884332
  - 0.44626283073467016
  - 0.3272441707168848
  - 0.4271910297848573
  - 0.24883308201548693
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.46858771117929626
  - 0.4957278286137116
  - 0.4098610207239924
  - 0.3988222619397994
  - 0.35461942637162736
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6699186991869919
  - 0.6787749287749286
  - 0.635
  - 0.677906976744186
  - 0.6541666666666667
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.531920325542346
  - 0.45352951532137725
  - 0.4151570248592748
  - 0.4131975880545248
  - 0.32459741888361515
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7967479674796748
  - 0.7863247863247863
  - 0.7875000000000001
  - 0.8062015503875969
  - 0.8068181818181818
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7967479674796748
  - 0.7863247863247863
  - 0.7875
  - 0.8062015503875969
  - 0.8068181818181818
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7967479674796749
  - 0.7863247863247862
  - 0.7875
  - 0.8062015503875972
  - 0.8068181818181821
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6829268292682927
  - 0.6615384615384616
  - 0.6593137254901961
  - 0.6967441860465117
  - 0.7045454545454545
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6872813744318119
  - 0.6765455727285858
  - 0.6787549874817729
  - 0.6988751340383971
  - 0.698407707107552
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6621621621621622
  - 0.647887323943662
  - 0.6494845360824743
  - 0.6753246753246753
  - 0.6761904761904762
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6684088269454124
  - 0.6550671550671553
  - 0.656547619047619
  - 0.6794019933554818
  - 0.6801948051948054
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5385756377954846
  - 0.513766719630218
  - 0.5117412353798925
  - 0.5538043083618712
  - 0.5611836337962015
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6699186991869918
  - 0.6787749287749286
  - 0.635
  - 0.677906976744186
  - 0.6541666666666667
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7540984401698944
  - 0.7625537491380717
  - 0.727194160936179
  - 0.7622177923125976
  - 0.7413314223553592
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.1951219512195124
  - -2.4615384615384617
  - -2.575
  - -2.13953488372093
  - -2.3181818181818183
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2032520325203252
  - -0.2136752136752137
  - -0.21250000000000002
  - -0.1937984496124031
  - -0.19318181818181815
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2032520325203252
  - -0.21367521367521367
  - -0.2125
  - -0.1937984496124031
  - -0.19318181818181818
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20325203252032517
  - -0.21367521367521364
  - -0.2125
  - -0.19379844961240308
  - -0.19318181818181815
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3170731707317073
  - -0.33846153846153837
  - -0.34068627450980393
  - -0.3032558139534884
  - -0.29545454545454547
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20487804878048776
  - -0.22742165242165244
  - -0.25625
  - -0.19476744186046513
  - -0.2357954545454545
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7967479674796748
  - 0.7863247863247863
  - 0.7875000000000001
  - 0.8062015503875969
  - 0.8068181818181818
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7967479674796748
  - 0.7863247863247863
  - 0.7875
  - 0.8062015503875969
  - 0.8068181818181818
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7967479674796749
  - 0.7863247863247862
  - 0.7875
  - 0.8062015503875972
  - 0.8068181818181821
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6829268292682927
  - 0.6615384615384616
  - 0.6593137254901961
  - 0.6967441860465117
  - 0.7045454545454545
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7967479674796748
  - 0.7863247863247863
  - 0.7875000000000001
  - 0.8062015503875969
  - 0.8068181818181818
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7967479674796748
  - 0.7863247863247863
  - 0.7875
  - 0.8062015503875969
  - 0.8068181818181818
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7967479674796749
  - 0.7863247863247862
  - 0.7875
  - 0.8062015503875972
  - 0.8068181818181821
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6829268292682927
  - 0.6615384615384616
  - 0.6593137254901961
  - 0.6967441860465117
  - 0.7045454545454545
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7388769506416565
  - 0.6529125286478227
  - 0.5723164422013527
  - 0.6620683504016837
  - 0.5381058973889856
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8052040816326531
  - 0.7966304347826088
  - 0.7648096275547256
  - 0.7840384615384616
  - 0.7456503728251864
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7951219512195122
  - 0.7725783475783476
  - 0.74375
  - 0.8052325581395349
  - 0.7642045454545453
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6637059697059696
  - 0.6000844155844156
  - 0.5189802146323885
  - 0.5934949102949103
  - 0.5196918557212675
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.6936091747415586
  - 0.7030655423640274
  - 0.7048205825936503
  - 0.7268943416552993
  - 0.7317000930129308
  train_average_precision_macro_oob:
  - 0.6391863013869333
  - 0.6105256466500993
  - 0.6060935838018036
  - 0.6022546934479497
  - 0.6588650238713314
  train_average_precision_micro:
  - 0.7896104195848699
  - 0.7855819744616794
  - 0.7814667533893639
  - 0.7728089382677683
  - 0.7754688084822103
  train_average_precision_micro_oob:
  - 0.7268942503571617
  - 0.6901607530986408
  - 0.6724770924605338
  - 0.6878739720202289
  - 0.6894762679996438
  train_average_precision_samples:
  - 0.8379518072289156
  - 0.8205357142857143
  - 0.820309381237525
  - 0.8120426829268294
  - 0.8155419222903886
  train_average_precision_samples_oob:
  - 0.7855421686746988
  - 0.7482142857142856
  - 0.7513972055888224
  - 0.7376863143631436
  - 0.7391956373551466
  train_average_precision_weighted:
  - 0.7621845113678946
  - 0.758571597888597
  - 0.7526701495368302
  - 0.756235811150764
  - 0.7510032191651222
  train_average_precision_weighted_oob:
  - 0.7503032137162071
  - 0.7159484516808925
  - 0.6989557710408789
  - 0.7187515613511944
  - 0.7275157337573451
  train_f1_macro:
  - 0.8413654618473895
  - 0.8472222222222223
  - 0.846307385229541
  - 0.8495934959349594
  - 0.8486707566462167
  train_f1_macro_oob:
  - 0.7971887550200804
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7947154471544716
  - 0.7944785276073619
  train_f1_micro:
  - 0.8413654618473896
  - 0.8472222222222222
  - 0.846307385229541
  - 0.8495934959349594
  - 0.8486707566462167
  train_f1_micro_oob:
  - 0.7971887550200804
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7947154471544715
  - 0.7944785276073619
  train_f1_samples:
  - 0.8413654618473895
  - 0.8472222222222221
  - 0.8463073852295409
  - 0.8495934959349593
  - 0.8486707566462166
  train_f1_samples_oob:
  - 0.7971887550200802
  - 0.7996031746031745
  - 0.7994011976047901
  - 0.7947154471544714
  - 0.7944785276073619
  train_f1_weighted:
  - 0.7718895383514256
  - 0.7838578500707214
  - 0.7828819971996306
  - 0.7899058198502777
  - 0.7869242743338523
  train_f1_weighted_oob:
  - 0.6819157819396398
  - 0.6868811881188119
  - 0.6875800637530909
  - 0.6781574498913306
  - 0.6760675151848121
  train_jaccard_macro:
  - 0.7372524403726066
  - 0.7444171875066382
  - 0.7431322481423503
  - 0.7473033866304046
  - 0.7461472326329258
  train_jaccard_macro_oob:
  - 0.6884106375428006
  - 0.6909474359758304
  - 0.6904980111256442
  - 0.6854420202330016
  - 0.685475473919289
  train_jaccard_micro:
  - 0.7261698440207972
  - 0.7349397590361446
  - 0.7335640138408305
  - 0.7385159010600707
  - 0.7371225577264654
  train_jaccard_micro_oob:
  - 0.662771285475793
  - 0.6661157024793388
  - 0.6658354114713217
  - 0.6593591905564924
  - 0.6590330788804071
  train_jaccard_samples:
  - 0.7415375788869765
  - 0.7490079365079365
  - 0.7475049900199602
  - 0.7533391405342625
  - 0.7494887525562374
  train_jaccard_samples_oob:
  - 0.6683878370625359
  - 0.671485260770975
  - 0.6712289706301683
  - 0.6655052264808364
  - 0.6652059596844874
  train_jaccard_weighted:
  - 0.6358075599006433
  - 0.6510738856450388
  - 0.6498274847537083
  - 0.6582798406226561
  - 0.654453638968395
  train_jaccard_weighted_oob:
  - 0.5363515099374782
  - 0.5422028937443711
  - 0.5428905117020129
  - 0.5323022380729032
  - 0.530373067198683
  train_label_ranking_average_precision_score:
  - 0.8379518072289155
  - 0.8205357142857143
  - 0.8203093812375248
  - 0.812042682926829
  - 0.8155419222903886
  train_label_ranking_average_precision_score_oob:
  - 0.7855421686746986
  - 0.7482142857142856
  - 0.7513972055888221
  - 0.7376863143631435
  - 0.7391956373551464
  train_matthews_corrcoef_macro:
  - 0.15537651032253685
  - 0.16395351262135485
  - 0.1626537989549463
  - 0.17452449320999985
  - 0.17250675335334306
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0032355803881647747
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.42622844587991904
  - 0.4466597704014203
  - 0.44285899740658424
  - 0.4741143468882412
  - 0.47062993669488645
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.03343658891434417
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.25177550115784375
  - 0.2649217729271986
  - 0.2605201068968226
  - 0.29787462221567285
  - 0.28117431393930137
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0025895540840339872
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.3161897705563317
  - 0.3336311604383124
  - 0.33028323003147214
  - 0.35525340669270034
  - 0.35267882299375
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.006664329754727446
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8799165409565388
  - 0.8682768307201566
  - 0.8672316068194051
  - 0.861900413558332
  - 0.8640454698093919
  train_ndgc_oob:
  - 0.8413698266617416
  - 0.8138720752773219
  - 0.8168059136268422
  - 0.8057772137281493
  - 0.8075261075008974
  train_neg_coverage_error:
  - -1.8132530120481927
  - -1.8273809523809523
  - -1.7664670658682635
  - -1.8780487804878048
  - -1.8773006134969326
  train_neg_coverage_error_oob:
  - -1.9819277108433735
  - -2.0416666666666665
  - -2.0179640718562872
  - -2.1646341463414633
  - -2.128834355828221
  train_neg_hamming_loss_macro:
  - -0.15863453815261044
  - -0.15277777777777776
  - -0.1536926147704591
  - -0.15040650406504066
  - -0.15132924335378323
  train_neg_hamming_loss_macro_oob:
  - -0.20281124497991973
  - -0.20039682539682543
  - -0.20059880239520958
  - -0.20528455284552846
  - -0.20552147239263807
  train_neg_hamming_loss_micro:
  - -0.15863453815261044
  - -0.1527777777777778
  - -0.1536926147704591
  - -0.15040650406504066
  - -0.15132924335378323
  train_neg_hamming_loss_micro_oob:
  - -0.20281124497991967
  - -0.2003968253968254
  - -0.20059880239520958
  - -0.20528455284552846
  - -0.20552147239263804
  train_neg_hamming_loss_samples:
  - -0.15863453815261044
  - -0.1527777777777778
  - -0.15369261477045906
  - -0.15040650406504064
  - -0.15132924335378323
  train_neg_hamming_loss_samples_oob:
  - -0.2028112449799197
  - -0.20039682539682538
  - -0.20059880239520958
  - -0.2052845528455285
  - -0.20552147239263804
  train_neg_hamming_loss_weighted:
  - -0.2281104616485745
  - -0.21614214992927863
  - -0.21711800280036944
  - -0.21009418014972228
  - -0.21307572566614774
  train_neg_hamming_loss_weighted_oob:
  - -0.31808421806036025
  - -0.3131188118811882
  - -0.31241993624690917
  - -0.3218425501086694
  - -0.3239324848151879
  train_neg_label_ranking_loss:
  - -0.11542838018741633
  - -0.11792328042328042
  - -0.10994677312042579
  - -0.12315379403794038
  - -0.12261417859577368
  train_neg_label_ranking_loss_oob:
  - -0.14916331994645246
  - -0.16479828042328043
  - -0.15926480372588156
  - -0.18297764227642277
  - -0.17382413087934562
  train_precision_macro:
  - 0.8413654618473895
  - 0.8472222222222223
  - 0.846307385229541
  - 0.8495934959349594
  - 0.8486707566462167
  train_precision_macro_oob:
  - 0.7971887550200804
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7947154471544716
  - 0.7944785276073619
  train_precision_micro:
  - 0.8413654618473896
  - 0.8472222222222222
  - 0.846307385229541
  - 0.8495934959349594
  - 0.8486707566462167
  train_precision_micro_oob:
  - 0.7971887550200804
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7947154471544715
  - 0.7944785276073619
  train_precision_samples:
  - 0.8413654618473895
  - 0.8472222222222221
  - 0.8463073852295409
  - 0.8495934959349593
  - 0.8486707566462166
  train_precision_samples_oob:
  - 0.7971887550200802
  - 0.7996031746031745
  - 0.7994011976047901
  - 0.7947154471544714
  - 0.7944785276073619
  train_precision_weighted:
  - 0.7718895383514256
  - 0.7838578500707214
  - 0.7828819971996306
  - 0.7899058198502777
  - 0.7869242743338523
  train_precision_weighted_oob:
  - 0.6819157819396398
  - 0.6868811881188119
  - 0.6875800637530909
  - 0.6781574498913306
  - 0.6760675151848121
  train_recall_macro:
  - 0.8413654618473895
  - 0.8472222222222223
  - 0.846307385229541
  - 0.8495934959349594
  - 0.8486707566462167
  train_recall_macro_oob:
  - 0.7971887550200804
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7947154471544716
  - 0.7944785276073619
  train_recall_micro:
  - 0.8413654618473896
  - 0.8472222222222222
  - 0.846307385229541
  - 0.8495934959349594
  - 0.8486707566462167
  train_recall_micro_oob:
  - 0.7971887550200804
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7947154471544715
  - 0.7944785276073619
  train_recall_samples:
  - 0.8413654618473895
  - 0.8472222222222221
  - 0.8463073852295409
  - 0.8495934959349593
  - 0.8486707566462166
  train_recall_samples_oob:
  - 0.7971887550200802
  - 0.7996031746031745
  - 0.7994011976047901
  - 0.7947154471544714
  - 0.7944785276073619
  train_recall_weighted:
  - 0.7718895383514256
  - 0.7838578500707214
  - 0.7828819971996306
  - 0.7899058198502777
  - 0.7869242743338523
  train_recall_weighted_oob:
  - 0.6819157819396398
  - 0.6868811881188119
  - 0.6875800637530909
  - 0.6781574498913306
  - 0.6760675151848121
  train_roc_auc_macro:
  - 0.8209628448062123
  - 0.8301969428989042
  - 0.8336952454049861
  - 0.8265135365772975
  - 0.8005644315439552
  train_roc_auc_macro_oob:
  - 0.7974895793074571
  - 0.8180889253629028
  - 0.8236110408906439
  - 0.7820208180112811
  - 0.776163261163689
  train_roc_auc_micro:
  - 0.8965446292740105
  - 0.8955236714738471
  - 0.8967708275103881
  - 0.8898293282013624
  - 0.8855785422949601
  train_roc_auc_micro_oob:
  - 0.8693356111429783
  - 0.8644264550524531
  - 0.8617089334848851
  - 0.8497569066369552
  - 0.8518283742164339
  train_roc_auc_samples:
  - 0.8845716198125837
  - 0.8820767195767196
  - 0.8900532268795743
  - 0.8768462059620598
  - 0.8773858214042263
  train_roc_auc_samples_oob:
  - 0.8508366800535475
  - 0.8352017195767196
  - 0.8407351962741184
  - 0.8170223577235772
  - 0.8261758691206545
  train_roc_auc_weighted:
  - 0.8062211924879539
  - 0.80394716374995
  - 0.802061560243415
  - 0.7811351449069905
  - 0.7764464611740742
  train_roc_auc_weighted_oob:
  - 0.8089362438941735
  - 0.8011934195531312
  - 0.7930492910123838
  - 0.7659048254000554
  - 0.7743692351827447
start: 2023-12-21 12:34:09.464901
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
