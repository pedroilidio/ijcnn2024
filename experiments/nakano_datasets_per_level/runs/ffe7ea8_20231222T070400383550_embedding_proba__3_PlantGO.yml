active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMzA8AAMzMzMzMDwICZmZmZmRnAAM3MzMzMBEBAMzMzMzMhQA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 07:04:43.699171
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__3
  params: {}
hash: ffe7ea85f02376c79480487bda1f3ef1f24d51245b0471e053ef79d383759cb0
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ffe7ea8_20231222T070400383550_embedding_proba__3_PlantGO.yml
results:
  fit_time:
  - 15.010191679000854
  - 16.525364637374878
  - 16.107349157333374
  - 16.90661120414734
  - 16.81257963180542
  score_time:
  - 4.817004919052124
  - 5.316566705703735
  - 5.3571929931640625
  - 5.250375747680664
  - 5.010537385940552
  test_average_precision_macro:
  - 0.7835672637524328
  - 0.8442015875222609
  - 0.7978850695387999
  - 0.8051032487867934
  - 0.806792539061318
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8669304999496261
  - 0.8648405704992134
  - 0.8378268086971101
  - 0.8477508489912795
  - 0.8430555293199554
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8984207150873817
  - 0.8961700336700337
  - 0.9009959924563885
  - 0.894343696027634
  - 0.9038878085669529
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8775364289348789
  - 0.885403767744909
  - 0.8625214372864087
  - 0.8709921172102432
  - 0.8621659882543219
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9591750841750842
  - 0.9595959595959594
  - 0.9595709570957096
  - 0.9533678756476683
  - 0.9536541889483066
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9591750841750841
  - 0.9595959595959596
  - 0.9595709570957096
  - 0.9533678756476683
  - 0.9536541889483066
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9591750841750841
  - 0.9595959595959596
  - 0.9595709570957095
  - 0.9533678756476683
  - 0.9536541889483067
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9458023632551933
  - 0.946311455790129
  - 0.9459629061497699
  - 0.9357759684184555
  - 0.9333725660773226
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9225921984980668
  - 0.9231864787732951
  - 0.9228740044864278
  - 0.912056094740327
  - 0.9126775935108022
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.921552769915083
  - 0.9223300970873787
  - 0.922283901665345
  - 0.9108910891089109
  - 0.9114139693356048
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9271395271395271
  - 0.9279387279387278
  - 0.9276466108149275
  - 0.9172806468143255
  - 0.9172357054709996
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8986384088889893
  - 0.8990735375964121
  - 0.8982105277285045
  - 0.8806982191529531
  - 0.8765132567372088
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.898420715087382
  - 0.8961700336700336
  - 0.9009959924563884
  - 0.894343696027634
  - 0.9038878085669529
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.38955270493737
  - 0.42652319253600335
  - 0.4090204470179073
  - 0.3279238178866057
  - 0.4015942210261823
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7224211370758793
  - 0.7228250601600266
  - 0.7205053635644929
  - 0.6839863917790127
  - 0.6927453769559033
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6367522259868439
  - 0.6309681338206093
  - 0.6287493215281181
  - 0.6037900839375159
  - 0.606187331373274
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6511395614959372
  - 0.6662590868857442
  - 0.6595432985482016
  - 0.6020403461899901
  - 0.6308570010929613
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9255758072802649
  - 0.9227199183768815
  - 0.9271302518543091
  - 0.922339329773083
  - 0.9291856273886677
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4343434343434343
  - -1.393939393939394
  - -1.4158415841584158
  - -1.38860103626943
  - -1.4759358288770053
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.040824915824915826
  - -0.04040404040404041
  - -0.04042904290429043
  - -0.046632124352331605
  - -0.04634581105169341
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.040824915824915826
  - -0.04040404040404041
  - -0.040429042904290426
  - -0.046632124352331605
  - -0.04634581105169341
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04082491582491582
  - -0.0404040404040404
  - -0.040429042904290426
  - -0.046632124352331605
  - -0.0463458110516934
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05419763674480656
  - -0.05368854420987123
  - -0.05403709385023009
  - -0.06422403158154452
  - -0.06662743392267738
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.029178145087235995
  - -0.02857531544400231
  - -0.030625562556255627
  - -0.025429598227525687
  - -0.03031113271754983
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9591750841750842
  - 0.9595959595959594
  - 0.9595709570957096
  - 0.9533678756476683
  - 0.9536541889483066
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9591750841750841
  - 0.9595959595959596
  - 0.9595709570957096
  - 0.9533678756476683
  - 0.9536541889483066
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9591750841750841
  - 0.9595959595959596
  - 0.9595709570957095
  - 0.9533678756476683
  - 0.9536541889483067
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9458023632551933
  - 0.946311455790129
  - 0.9459629061497699
  - 0.9357759684184555
  - 0.9333725660773226
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9591750841750842
  - 0.9595959595959594
  - 0.9595709570957096
  - 0.9533678756476683
  - 0.9536541889483066
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9591750841750841
  - 0.9595959595959596
  - 0.9595709570957096
  - 0.9533678756476683
  - 0.9536541889483066
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9591750841750841
  - 0.9595959595959596
  - 0.9595709570957095
  - 0.9533678756476683
  - 0.9536541889483067
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9458023632551933
  - 0.946311455790129
  - 0.9459629061497699
  - 0.9357759684184555
  - 0.9333725660773226
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9754899616891296
  - 0.9782082037569637
  - 0.9610422959470504
  - 0.9789382482989587
  - 0.9611175253758164
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9807800456875806
  - 0.9807799656316014
  - 0.9727238752885168
  - 0.9814068647401981
  - 0.9732386584061226
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.970821854912764
  - 0.9714246845559977
  - 0.9693744374437444
  - 0.9745704017724743
  - 0.9696888672824501
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9790752318048986
  - 0.9783643592070163
  - 0.9683788693731287
  - 0.976600566427935
  - 0.9686564472522654
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9591657403813482
  - 0.9556615383348527
  - 0.965943385388459
  - 0.9576936333443807
  - 0.9589966038851863
  train_average_precision_macro_oob:
  - 0.8184311912066574
  - 0.8089210022573882
  - 0.8182443833455517
  - 0.8272896304839231
  - 0.8116777328380014
  train_average_precision_micro:
  - 0.9601763829888161
  - 0.9602138860536628
  - 0.9652861704021383
  - 0.9602797668833928
  - 0.9636394798518219
  train_average_precision_micro_oob:
  - 0.8683622221360155
  - 0.8694080734657261
  - 0.875642457111028
  - 0.8751098185433402
  - 0.8772935394486285
  train_average_precision_samples:
  - 0.963354700854701
  - 0.9621794871794872
  - 0.9615549828178696
  - 0.9599787685774948
  - 0.9630214917825537
  train_average_precision_samples_oob:
  - 0.9094073519073519
  - 0.9160963573463573
  - 0.9149141916216659
  - 0.915008639626474
  - 0.9140494250797665
  train_average_precision_weighted:
  - 0.9708874779113348
  - 0.96986985968877
  - 0.978319143547334
  - 0.970490454665372
  - 0.9734779818047582
  train_average_precision_weighted_oob:
  - 0.8831897000927131
  - 0.8782844264358313
  - 0.8866119515739426
  - 0.8887277531888703
  - 0.8867954773525542
  train_f1_macro:
  - 0.9724358974358972
  - 0.9719017094017093
  - 0.9720790378006874
  - 0.971656050955414
  - 0.9714496418036239
  train_f1_macro_oob:
  - 0.9589743589743588
  - 0.9585470085470084
  - 0.9585481099656357
  - 0.9587048832271762
  - 0.9581753055204384
  train_f1_micro:
  - 0.9724358974358974
  - 0.9719017094017094
  - 0.9720790378006873
  - 0.971656050955414
  - 0.9714496418036241
  train_f1_micro_oob:
  - 0.958974358974359
  - 0.9585470085470086
  - 0.9585481099656358
  - 0.9587048832271762
  - 0.9581753055204383
  train_f1_samples:
  - 0.9724358974358974
  - 0.9719017094017095
  - 0.9720790378006872
  - 0.971656050955414
  - 0.971449641803624
  train_f1_samples_oob:
  - 0.958974358974359
  - 0.9585470085470087
  - 0.9585481099656357
  - 0.9587048832271762
  - 0.9581753055204382
  train_f1_weighted:
  - 0.9684521093773765
  - 0.9682145461173899
  - 0.9689573793373656
  - 0.9662910338069574
  - 0.9690175825555227
  train_f1_weighted_oob:
  - 0.9466161754417982
  - 0.9475513428120064
  - 0.9479516125082647
  - 0.9459148984283723
  - 0.947682707050058
  train_jaccard_macro:
  - 0.9464700555695503
  - 0.945442641164263
  - 0.9457885220701042
  - 0.9450588451293364
  - 0.944587222333262
  train_jaccard_macro_oob:
  - 0.9218001500665663
  - 0.9210106798440804
  - 0.9212648397933255
  - 0.9214310867317249
  - 0.9203186376021147
  train_jaccard_micro:
  - 0.9463505926388023
  - 0.9453392912813052
  - 0.9456748850814877
  - 0.9448745741715702
  - 0.9444842773737581
  train_jaccard_micro_oob:
  - 0.9211822660098522
  - 0.9203939269593763
  - 0.92039595792947
  - 0.9206850851259047
  - 0.9197087673172212
  train_jaccard_samples:
  - 0.9504254719639336
  - 0.9492983939137786
  - 0.949688455874023
  - 0.94894939455449
  - 0.9482863533432433
  train_jaccard_samples_oob:
  - 0.9263623555931249
  - 0.9254888701042547
  - 0.9255182961368529
  - 0.9257394834464898
  - 0.924713466053542
  train_jaccard_weighted:
  - 0.93896300798451
  - 0.9385232246851349
  - 0.9399529536655384
  - 0.9350322557563212
  - 0.9400304490642402
  train_jaccard_weighted_oob:
  - 0.8993592801067417
  - 0.9010822480401234
  - 0.9022538626057414
  - 0.8982687465249495
  - 0.9012577236121936
  train_label_ranking_average_precision_score:
  - 0.963354700854701
  - 0.9621794871794872
  - 0.9615549828178692
  - 0.9599787685774948
  - 0.9630214917825537
  train_label_ranking_average_precision_score_oob:
  - 0.9094073519073523
  - 0.9160963573463575
  - 0.9149141916216662
  - 0.9150086396264742
  - 0.9140494250797669
  train_matthews_corrcoef_macro:
  - 0.5877957557865382
  - 0.5590999750389729
  - 0.4982325027781567
  - 0.5763979369535869
  - 0.5082197947938344
  train_matthews_corrcoef_macro_oob:
  - 0.3895900571114302
  - 0.36855296409720556
  - 0.3697646873531024
  - 0.43237179082278937
  - 0.3325448592518868
  train_matthews_corrcoef_micro:
  - 0.8204177487664556
  - 0.8168191839339602
  - 0.8186045710719587
  - 0.8141499784420945
  - 0.81139768504976
  train_matthews_corrcoef_micro_oob:
  - 0.7218806640809892
  - 0.7186124303149817
  - 0.7194088325806871
  - 0.7183210773660395
  - 0.7121185909562397
  train_matthews_corrcoef_samples:
  - 0.7464826527580989
  - 0.7383335842773853
  - 0.7436305666892463
  - 0.7337566605315919
  - 0.7240232713992253
  train_matthews_corrcoef_samples_oob:
  - 0.6211018132446012
  - 0.611964284107072
  - 0.6156573700066468
  - 0.6127469318037955
  - 0.6013374737560719
  train_matthews_corrcoef_weighted:
  - 0.7889322968212783
  - 0.7802777184277824
  - 0.7682924178842202
  - 0.7801989190372712
  - 0.7664573871488315
  train_matthews_corrcoef_weighted_oob:
  - 0.6548102753394923
  - 0.6471990764158557
  - 0.6466417487467628
  - 0.6639955717630701
  - 0.627603673084402
  train_ndgc:
  - 0.9730480771821141
  - 0.972078514337158
  - 0.9716189096626874
  - 0.9704885325316531
  - 0.972662704319355
  train_ndgc_oob:
  - 0.933262386321377
  - 0.9387409825933087
  - 0.9372566864583364
  - 0.937531404437289
  - 0.9370543812500038
  train_neg_coverage_error:
  - -1.1615384615384616
  - -1.1641025641025642
  - -1.1688144329896908
  - -1.1656050955414012
  - -1.1517067003792667
  train_neg_coverage_error_oob:
  - -1.3833333333333333
  - -1.3897435897435897
  - -1.3582474226804124
  - -1.3694267515923566
  - -1.3527180783817951
  train_neg_hamming_loss_macro:
  - -0.02756410256410256
  - -0.028098290598290596
  - -0.027920962199312713
  - -0.028343949044585984
  - -0.028550358196375896
  train_neg_hamming_loss_macro_oob:
  - -0.04102564102564102
  - -0.04145299145299145
  - -0.04145189003436426
  - -0.04129511677282378
  - -0.04182469447956175
  train_neg_hamming_loss_micro:
  - -0.027564102564102563
  - -0.0280982905982906
  - -0.027920962199312716
  - -0.028343949044585988
  - -0.028550358196375896
  train_neg_hamming_loss_micro_oob:
  - -0.041025641025641026
  - -0.04145299145299145
  - -0.04145189003436426
  - -0.04129511677282378
  - -0.04182469447956173
  train_neg_hamming_loss_samples:
  - -0.027564102564102563
  - -0.028098290598290596
  - -0.027920962199312713
  - -0.028343949044585988
  - -0.028550358196375893
  train_neg_hamming_loss_samples_oob:
  - -0.041025641025641026
  - -0.041452991452991444
  - -0.04145189003436426
  - -0.04129511677282378
  - -0.04182469447956173
  train_neg_hamming_loss_weighted:
  - -0.03154789062262372
  - -0.031785453882610275
  - -0.03104262066263437
  - -0.033708966193042623
  - -0.030982417444477318
  train_neg_hamming_loss_weighted_oob:
  - -0.05338382455820179
  - -0.052448657187993686
  - -0.05204838749173543
  - -0.05408510157162779
  - -0.05231729294994217
  train_neg_label_ranking_loss:
  - -0.0071803505136838475
  - -0.007418414918414918
  - -0.00758552014995314
  - -0.008013896931094383
  - -0.007413792369544582
  train_neg_label_ranking_loss_oob:
  - -0.025695415695415696
  - -0.025124967624967628
  - -0.023197828803498906
  - -0.024467820455081602
  - -0.023648622763667013
  train_precision_macro:
  - 0.9724358974358972
  - 0.9719017094017093
  - 0.9720790378006874
  - 0.971656050955414
  - 0.9714496418036239
  train_precision_macro_oob:
  - 0.9589743589743588
  - 0.9585470085470084
  - 0.9585481099656357
  - 0.9587048832271762
  - 0.9581753055204384
  train_precision_micro:
  - 0.9724358974358974
  - 0.9719017094017094
  - 0.9720790378006873
  - 0.971656050955414
  - 0.9714496418036241
  train_precision_micro_oob:
  - 0.958974358974359
  - 0.9585470085470086
  - 0.9585481099656358
  - 0.9587048832271762
  - 0.9581753055204383
  train_precision_samples:
  - 0.9724358974358974
  - 0.9719017094017095
  - 0.9720790378006872
  - 0.971656050955414
  - 0.971449641803624
  train_precision_samples_oob:
  - 0.958974358974359
  - 0.9585470085470087
  - 0.9585481099656357
  - 0.9587048832271762
  - 0.9581753055204382
  train_precision_weighted:
  - 0.9684521093773765
  - 0.9682145461173899
  - 0.9689573793373656
  - 0.9662910338069574
  - 0.9690175825555227
  train_precision_weighted_oob:
  - 0.9466161754417982
  - 0.9475513428120064
  - 0.9479516125082647
  - 0.9459148984283723
  - 0.947682707050058
  train_recall_macro:
  - 0.9724358974358972
  - 0.9719017094017093
  - 0.9720790378006874
  - 0.971656050955414
  - 0.9714496418036239
  train_recall_macro_oob:
  - 0.9589743589743588
  - 0.9585470085470084
  - 0.9585481099656357
  - 0.9587048832271762
  - 0.9581753055204384
  train_recall_micro:
  - 0.9724358974358974
  - 0.9719017094017094
  - 0.9720790378006873
  - 0.971656050955414
  - 0.9714496418036241
  train_recall_micro_oob:
  - 0.958974358974359
  - 0.9585470085470086
  - 0.9585481099656358
  - 0.9587048832271762
  - 0.9581753055204383
  train_recall_samples:
  - 0.9724358974358974
  - 0.9719017094017095
  - 0.9720790378006872
  - 0.971656050955414
  - 0.971449641803624
  train_recall_samples_oob:
  - 0.958974358974359
  - 0.9585470085470087
  - 0.9585481099656357
  - 0.9587048832271762
  - 0.9581753055204382
  train_recall_weighted:
  - 0.9684521093773765
  - 0.9682145461173899
  - 0.9689573793373656
  - 0.9662910338069574
  - 0.9690175825555227
  train_recall_weighted_oob:
  - 0.9466161754417982
  - 0.9475513428120064
  - 0.9479516125082647
  - 0.9459148984283723
  - 0.947682707050058
  train_roc_auc_macro:
  - 0.9967919402735173
  - 0.9967819665515679
  - 0.9977667712712771
  - 0.9968162129966874
  - 0.9969536312977709
  train_roc_auc_macro_oob:
  - 0.9761303855593226
  - 0.9763650526880894
  - 0.9808309472083812
  - 0.9769337750977618
  - 0.9792255251932852
  train_roc_auc_micro:
  - 0.9962556221727223
  - 0.9963157585720996
  - 0.9968071606648587
  - 0.9963691065606294
  - 0.9965761234236141
  train_roc_auc_micro_oob:
  - 0.9812937101165752
  - 0.9815609146095778
  - 0.9838362026658292
  - 0.981711939551814
  - 0.9824592631966352
  train_roc_auc_samples:
  - 0.9928196494863162
  - 0.9925815850815851
  - 0.9924144798500468
  - 0.9919861030689057
  - 0.9925862076304554
  train_roc_auc_samples_oob:
  - 0.9743045843045843
  - 0.9748750323750323
  - 0.9768021711965011
  - 0.9755321795449183
  - 0.9763513772363329
  train_roc_auc_weighted:
  - 0.9960292139330026
  - 0.9960307462466625
  - 0.9970325560660092
  - 0.9959942684990041
  - 0.9965616505890725
  train_roc_auc_weighted_oob:
  - 0.9790193458548279
  - 0.9790831662882844
  - 0.9816043582444903
  - 0.9795845621006284
  - 0.9816173565629304
start: 2023-12-22 07:04:00.383550
wrapper: null
