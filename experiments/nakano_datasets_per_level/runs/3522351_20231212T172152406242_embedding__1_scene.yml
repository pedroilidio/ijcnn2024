active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b/AmZmZmZkRQACcmZmZmdk/AJmZmZmZ+b8AmZmZmZn5vw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:23:08.193849
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 35223516b6cbb69aa7686a6870f747a0e0961c7e37d56a09ba14f51b6162284a
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3522351_20231212T172152406242_embedding__1_scene.yml
results:
  fit_time:
  - 35.07589030265808
  - 33.90242624282837
  - 41.10204339027405
  - 39.54121685028076
  - 37.312013149261475
  score_time:
  - 4.967020511627197
  - 5.40126895904541
  - 4.964816331863403
  - 5.557359933853149
  - 5.44575309753418
  test_average_precision_macro:
  - 0.839656193757818
  - 0.8206173798787674
  - 0.8498438803647592
  - 0.8448289114041971
  - 0.8476992992226999
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8482001261317442
  - 0.8339546523717409
  - 0.8560056603143676
  - 0.8417451901832733
  - 0.8587830450621964
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8830572808833678
  - 0.8634346610761705
  - 0.8771309771309771
  - 0.8767770876466527
  - 0.88040027605245
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8277617281366484
  - 0.8084870474753975
  - 0.840134398518231
  - 0.8355972182030899
  - 0.8375911884343439
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.901311249137336
  - 0.8927323549965059
  - 0.9033264033264033
  - 0.8995859213250518
  - 0.9057971014492753
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9013112491373361
  - 0.8927323549965059
  - 0.9033264033264033
  - 0.8995859213250518
  - 0.9057971014492754
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9013112491373362
  - 0.892732354996506
  - 0.9033264033264033
  - 0.8995859213250519
  - 0.9057971014492754
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8965562723326698
  - 0.8875710132233615
  - 0.8982133450218556
  - 0.8940407979841751
  - 0.9002166504479178
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8238185024425652
  - 0.8094432910158328
  - 0.8273507936262986
  - 0.8211125261957827
  - 0.8319553297972136
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8203517587939698
  - 0.8062480277690123
  - 0.8236966824644549
  - 0.8174976481655691
  - 0.8278145695364238
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8360938578329881
  - 0.8231007287611061
  - 0.8391248391248389
  - 0.8341220546189488
  - 0.8423543330375628
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.816214875380616
  - 0.8011778427046443
  - 0.8190748339167135
  - 0.8122386487711625
  - 0.8230018762828055
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8830572808833678
  - 0.8634346610761705
  - 0.8771309771309771
  - 0.8767770876466525
  - 0.8804002760524496
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6260236713764142
  - 0.5956472835525112
  - 0.6368258825917849
  - 0.6213432223613582
  - 0.6468842862400949
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6278364818173938
  - 0.5944629401281974
  - 0.6380555749163331
  - 0.6187789717706289
  - 0.647263214252285
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4985767122198557
  - 0.462344129313322
  - 0.5045746930200062
  - 0.4929334016159526
  - 0.5125185864115416
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6104862121811083
  - 0.5793490370032399
  - 0.6205880449046612
  - 0.6023792885869462
  - 0.6286861409710826
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9137553875861885
  - 0.8994847104239229
  - 0.9098102455815208
  - 0.9094959652315823
  - 0.9115281652223546
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3768115942028984
  - -1.471698113207547
  - -1.4261954261954262
  - -1.4306418219461698
  - -1.4244306418219461
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09868875086266389
  - -0.10726764500349406
  - -0.09667359667359669
  - -0.10041407867494823
  - -0.09420289855072465
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0986887508626639
  - -0.10726764500349406
  - -0.09667359667359668
  - -0.10041407867494824
  - -0.09420289855072464
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09868875086266392
  - -0.10726764500349407
  - -0.09667359667359668
  - -0.10041407867494824
  - -0.09420289855072464
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10344372766733015
  - -0.11242898677663832
  - -0.10178665497814435
  - -0.10595920201582487
  - -0.0997833495520822
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.059627329192546576
  - -0.07573375262054508
  - -0.06756756756756757
  - -0.06987577639751552
  - -0.06940993788819876
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.901311249137336
  - 0.8927323549965059
  - 0.9033264033264033
  - 0.8995859213250518
  - 0.9057971014492753
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9013112491373361
  - 0.8927323549965059
  - 0.9033264033264033
  - 0.8995859213250518
  - 0.9057971014492754
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9013112491373362
  - 0.892732354996506
  - 0.9033264033264033
  - 0.8995859213250519
  - 0.9057971014492754
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8965562723326698
  - 0.8875710132233615
  - 0.8982133450218556
  - 0.8940407979841751
  - 0.9002166504479178
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.901311249137336
  - 0.8927323549965059
  - 0.9033264033264033
  - 0.8995859213250518
  - 0.9057971014492753
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9013112491373361
  - 0.8927323549965059
  - 0.9033264033264033
  - 0.8995859213250518
  - 0.9057971014492754
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9013112491373362
  - 0.892732354996506
  - 0.9033264033264033
  - 0.8995859213250519
  - 0.9057971014492754
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8965562723326698
  - 0.8875710132233615
  - 0.8982133450218556
  - 0.8940407979841751
  - 0.9002166504479178
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9468557528996491
  - 0.940803299274465
  - 0.946153101464316
  - 0.9424397682903388
  - 0.9476096473634277
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9556641575549139
  - 0.9492817757028618
  - 0.9528051320530416
  - 0.948682463437018
  - 0.9546953354936771
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9403726708074535
  - 0.924266247379455
  - 0.9324324324324326
  - 0.9301242236024845
  - 0.9305900621118013
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9417156976323131
  - 0.935101019360667
  - 0.9413113091069533
  - 0.9375449881042952
  - 0.9427719546037858
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9938983665007005
  - 0.9948266602556645
  - 0.9934577322861139
  - 0.994475899128689
  - 0.9944404635103358
  train_average_precision_macro_oob:
  - 0.8448834760443266
  - 0.8556923981439484
  - 0.8514902458977408
  - 0.8499736810624589
  - 0.8572788152183373
  train_average_precision_micro:
  - 0.9934214842177014
  - 0.9941984373614899
  - 0.9931824258021622
  - 0.9940483435017021
  - 0.9940056685344713
  train_average_precision_micro_oob:
  - 0.8540220955611862
  - 0.8621721519360711
  - 0.8564784376169708
  - 0.8587465155931997
  - 0.8619444530918127
  train_average_precision_samples:
  - 0.9886521136521136
  - 0.9890759930915372
  - 0.9881879543094496
  - 0.9893018018018018
  - 0.9874393624393625
  train_average_precision_samples_oob:
  - 0.8763340263340264
  - 0.8817789291882557
  - 0.8759691934925581
  - 0.8800112612612613
  - 0.88387474012474
  train_average_precision_weighted:
  - 0.9937773791065537
  - 0.9947321758585873
  - 0.9933548336109026
  - 0.9943930436160079
  - 0.994438656049828
  train_average_precision_weighted_oob:
  - 0.8350379069689962
  - 0.8465127014355573
  - 0.8416024641953191
  - 0.8406099848107955
  - 0.8484748934446635
  train_f1_macro:
  - 0.9548683298683298
  - 0.9553540587219344
  - 0.9545690550363449
  - 0.9547817047817048
  - 0.9559944559944561
  train_f1_macro_oob:
  - 0.8951836451836451
  - 0.8978411053540588
  - 0.8953790238836968
  - 0.8948371448371448
  - 0.8950970200970202
  train_f1_micro:
  - 0.9548683298683299
  - 0.9553540587219344
  - 0.9545690550363447
  - 0.9547817047817048
  - 0.955994455994456
  train_f1_micro_oob:
  - 0.8951836451836452
  - 0.8978411053540587
  - 0.8953790238836968
  - 0.8948371448371448
  - 0.8950970200970201
  train_f1_samples:
  - 0.95486832986833
  - 0.9553540587219345
  - 0.9545690550363447
  - 0.9547817047817048
  - 0.9559944559944561
  train_f1_samples_oob:
  - 0.8951836451836452
  - 0.8978411053540588
  - 0.8953790238836968
  - 0.894837144837145
  - 0.8950970200970203
  train_f1_weighted:
  - 0.9528203820656652
  - 0.953503171946563
  - 0.9526664537601107
  - 0.9530129452797409
  - 0.9541207067802813
  train_f1_weighted_oob:
  - 0.8898289827172264
  - 0.8926398813401349
  - 0.889850985496243
  - 0.8891559794169751
  - 0.8900880962051174
  train_jaccard_macro:
  - 0.9142067768263992
  - 0.9150084230204749
  - 0.913630537353241
  - 0.9139670458388737
  - 0.9162231237394564
  train_jaccard_macro_oob:
  - 0.8140624449419575
  - 0.818133866685233
  - 0.8143906178306497
  - 0.8138868797184481
  - 0.8132775134471023
  train_jaccard_micro:
  - 0.9136344799005387
  - 0.914524262213772
  - 0.9130866650111745
  - 0.91347588264545
  - 0.9156986392300033
  train_jaccard_micro_oob:
  - 0.8102556060843656
  - 0.8146203870563348
  - 0.8105757931844888
  - 0.809688038877567
  - 0.8101136809094472
  train_jaccard_samples:
  - 0.924066924066924
  - 0.924710091290402
  - 0.9235894773277951
  - 0.9238565488565489
  - 0.9258489258489259
  train_jaccard_samples_oob:
  - 0.8250173250173248
  - 0.8291018998272883
  - 0.8251001335113484
  - 0.824126324126324
  - 0.8246584496584495
  train_jaccard_weighted:
  - 0.9105148082232329
  - 0.9116508131793626
  - 0.9101814631536428
  - 0.910756917242975
  - 0.9128193836378447
  train_jaccard_weighted_oob:
  - 0.805525988660961
  - 0.8098789648804585
  - 0.8056286423224934
  - 0.8049158686446579
  - 0.8053247319855932
  train_label_ranking_average_precision_score:
  - 0.9886521136521135
  - 0.9890759930915367
  - 0.9881879543094495
  - 0.9893018018018016
  - 0.9874393624393623
  train_label_ranking_average_precision_score_oob:
  - 0.8763340263340264
  - 0.8817789291882556
  - 0.875969193492558
  - 0.8800112612612611
  - 0.8838747401247398
  train_matthews_corrcoef_macro:
  - 0.8453501934857255
  - 0.8464204224670752
  - 0.843858960691561
  - 0.8444918468795214
  - 0.8491689340209145
  train_matthews_corrcoef_macro_oob:
  - 0.5985742633228771
  - 0.6114293237685449
  - 0.6004584081755729
  - 0.5956693781574138
  - 0.603045070522325
  train_matthews_corrcoef_micro:
  - 0.8419010619180771
  - 0.8433079232952456
  - 0.8407040045008595
  - 0.8417526183854379
  - 0.8460512151603913
  train_matthews_corrcoef_micro_oob:
  - 0.6029496012398116
  - 0.6137521942702432
  - 0.6036891541672678
  - 0.6018143079997667
  - 0.6028690570890333
  train_matthews_corrcoef_samples:
  - 0.7808027101732241
  - 0.7780243899732884
  - 0.777077873163299
  - 0.7759906100927039
  - 0.7838445399046681
  train_matthews_corrcoef_samples_oob:
  - 0.452682394118575
  - 0.4620165347738972
  - 0.45124896494067473
  - 0.44766398465475016
  - 0.44851519169208476
  train_matthews_corrcoef_weighted:
  - 0.8402496020282506
  - 0.8418519931732169
  - 0.8391185234731641
  - 0.8402514677179788
  - 0.84449204573408
  train_matthews_corrcoef_weighted_oob:
  - 0.5809728678829947
  - 0.5941202924118356
  - 0.5816407278920196
  - 0.5760322232601048
  - 0.5868873743249001
  train_ndgc:
  - 0.9917695847385471
  - 0.9920778681163759
  - 0.9914010314908793
  - 0.9921516090313708
  - 0.990868585613596
  train_ndgc_oob:
  - 0.9089261866463589
  - 0.912954601586998
  - 0.9084032545838341
  - 0.9114756066083686
  - 0.9144560979480494
  train_neg_coverage_error:
  - -1.1018711018711018
  - -1.0984455958549222
  - -1.1022845275181723
  - -1.1018711018711018
  - -1.1039501039501038
  train_neg_coverage_error_oob:
  - -1.4381496881496882
  - -1.416580310880829
  - -1.4330218068535825
  - -1.4272349272349272
  - -1.4064449064449065
  train_neg_hamming_loss_macro:
  - -0.04513167013167013
  - -0.04464594127806563
  - -0.04543094496365525
  - -0.045218295218295214
  - -0.04400554400554401
  train_neg_hamming_loss_macro_oob:
  - -0.10481635481635482
  - -0.10215889464594126
  - -0.10462097611630321
  - -0.10516285516285517
  - -0.10490297990297992
  train_neg_hamming_loss_micro:
  - -0.04513167013167013
  - -0.04464594127806563
  - -0.04543094496365525
  - -0.04521829521829522
  - -0.044005544005544
  train_neg_hamming_loss_micro_oob:
  - -0.10481635481635482
  - -0.10215889464594127
  - -0.10462097611630322
  - -0.10516285516285516
  - -0.1049029799029799
  train_neg_hamming_loss_samples:
  - -0.04513167013167013
  - -0.04464594127806563
  - -0.04543094496365524
  - -0.04521829521829522
  - -0.044005544005544
  train_neg_hamming_loss_samples_oob:
  - -0.10481635481635482
  - -0.10215889464594127
  - -0.10462097611630322
  - -0.10516285516285517
  - -0.10490297990297989
  train_neg_hamming_loss_weighted:
  - -0.047179617934334915
  - -0.04649682805343702
  - -0.04733354623988945
  - -0.046987054720259165
  - -0.04587929321971876
  train_neg_hamming_loss_weighted_oob:
  - -0.11017101728277344
  - -0.1073601186598651
  - -0.110149014503757
  - -0.11084402058302492
  - -0.10991190379488251
  train_neg_label_ranking_loss:
  - -0.005249480249480251
  - -0.005129533678756477
  - -0.005516614745586708
  - -0.005171517671517671
  - -0.0056003118503118515
  train_neg_label_ranking_loss_oob:
  - -0.07051715176715177
  - -0.06677461139896373
  - -0.07027518172377986
  - -0.06858108108108107
  - -0.06438409563409564
  train_precision_macro:
  - 0.9548683298683298
  - 0.9553540587219344
  - 0.9545690550363449
  - 0.9547817047817048
  - 0.9559944559944561
  train_precision_macro_oob:
  - 0.8951836451836451
  - 0.8978411053540588
  - 0.8953790238836968
  - 0.8948371448371448
  - 0.8950970200970202
  train_precision_micro:
  - 0.9548683298683299
  - 0.9553540587219344
  - 0.9545690550363447
  - 0.9547817047817048
  - 0.955994455994456
  train_precision_micro_oob:
  - 0.8951836451836452
  - 0.8978411053540587
  - 0.8953790238836968
  - 0.8948371448371448
  - 0.8950970200970201
  train_precision_samples:
  - 0.95486832986833
  - 0.9553540587219345
  - 0.9545690550363447
  - 0.9547817047817048
  - 0.9559944559944561
  train_precision_samples_oob:
  - 0.8951836451836452
  - 0.8978411053540588
  - 0.8953790238836968
  - 0.894837144837145
  - 0.8950970200970203
  train_precision_weighted:
  - 0.9528203820656652
  - 0.953503171946563
  - 0.9526664537601107
  - 0.9530129452797409
  - 0.9541207067802813
  train_precision_weighted_oob:
  - 0.8898289827172264
  - 0.8926398813401349
  - 0.889850985496243
  - 0.8891559794169751
  - 0.8900880962051174
  train_recall_macro:
  - 0.9548683298683298
  - 0.9553540587219344
  - 0.9545690550363449
  - 0.9547817047817048
  - 0.9559944559944561
  train_recall_macro_oob:
  - 0.8951836451836451
  - 0.8978411053540588
  - 0.8953790238836968
  - 0.8948371448371448
  - 0.8950970200970202
  train_recall_micro:
  - 0.9548683298683299
  - 0.9553540587219344
  - 0.9545690550363447
  - 0.9547817047817048
  - 0.955994455994456
  train_recall_micro_oob:
  - 0.8951836451836452
  - 0.8978411053540587
  - 0.8953790238836968
  - 0.8948371448371448
  - 0.8950970200970201
  train_recall_samples:
  - 0.95486832986833
  - 0.9553540587219345
  - 0.9545690550363447
  - 0.9547817047817048
  - 0.9559944559944561
  train_recall_samples_oob:
  - 0.8951836451836452
  - 0.8978411053540588
  - 0.8953790238836968
  - 0.894837144837145
  - 0.8950970200970203
  train_recall_weighted:
  - 0.9528203820656652
  - 0.953503171946563
  - 0.9526664537601107
  - 0.9530129452797409
  - 0.9541207067802813
  train_recall_weighted_oob:
  - 0.8898289827172264
  - 0.8926398813401349
  - 0.889850985496243
  - 0.8891559794169751
  - 0.8900880962051174
  train_roc_auc_macro:
  - 0.9984739265706071
  - 0.9987221190092418
  - 0.9983164897036395
  - 0.9986376905700824
  - 0.9987019317413557
  train_roc_auc_macro_oob:
  - 0.9459611921747908
  - 0.9503246904026798
  - 0.9480466484560907
  - 0.9490344094733211
  - 0.9502274153978526
  train_roc_auc_micro:
  - 0.9984400396161941
  - 0.9986373976554912
  - 0.9983921459581645
  - 0.9986180212739638
  - 0.9986268118663622
  train_roc_auc_micro_oob:
  - 0.9526128468592945
  - 0.9559598849381743
  - 0.9540059865908195
  - 0.9550545749479373
  - 0.9561731030974718
  train_roc_auc_samples:
  - 0.9947505197505196
  - 0.9948704663212435
  - 0.9944833852544133
  - 0.9948284823284823
  - 0.9943996881496882
  train_roc_auc_samples_oob:
  - 0.9294828482328482
  - 0.9332253886010363
  - 0.9297248182762202
  - 0.931418918918919
  - 0.9356159043659044
  train_roc_auc_weighted:
  - 0.9984150580531359
  - 0.9986772413061542
  - 0.9982554977779023
  - 0.9985860514762384
  - 0.998694040527729
  train_roc_auc_weighted_oob:
  - 0.9412603362591253
  - 0.946138384162963
  - 0.9435563162955953
  - 0.9447535199902828
  - 0.946052648206636
start: 2023-12-12 17:21:52.406242
wrapper: null
