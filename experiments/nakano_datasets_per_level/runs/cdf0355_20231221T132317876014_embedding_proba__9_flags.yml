active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz878wMzMzMzPzv9DMzMzMzPw/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzE8AwMzMzMzPzPzAzMzMzM/M/MDMzMzMz8z8wMzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j80MzMzMzMLQJiZmZmZmfm/NDMzMzMzA0BmZmZmZmYWwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/zMzMzMzM/L+amZmZmZkBQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZyb8AmZmZmZnJv5CZmZmZmQHAAJmZmZmZyb9wZmZmZmYGQA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 13:24:59.253701
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__9
  params: {}
hash: cdf0355c92a5648e66bde3586e1336f9148c91c038bba765743e9f13435691d0
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cdf0355_20231221T132317876014_embedding_proba__9_flags.yml
results:
  fit_time:
  - 84.82801580429077
  - 85.02664613723755
  - 83.87824058532715
  - 86.78605484962463
  - 84.39190292358398
  score_time:
  - 5.740282773971558
  - 5.524724006652832
  - 5.792385101318359
  - 5.759255409240723
  - 5.682271480560303
  test_average_precision_macro:
  - 0.792006253339127
  - 0.6158265834351084
  - 0.7482662726032272
  - 0.7466830484781306
  - 0.8224811620294782
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8178016539179882
  - 0.7355839057931013
  - 0.8096375859785843
  - 0.773139257961811
  - 0.8353065342227912
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8161904761904762
  - 0.7866269841269842
  - 0.827828106852497
  - 0.8264774114774115
  - 0.8427469135802468
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8245158709955834
  - 0.7095231437290849
  - 0.7995564349304668
  - 0.7927157645413923
  - 0.8468088908685679
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7582417582417582
  - 0.7069597069597069
  - 0.7700348432055748
  - 0.7582417582417582
  - 0.7619047619047619
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7582417582417582
  - 0.706959706959707
  - 0.7700348432055749
  - 0.7582417582417582
  - 0.7619047619047619
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7582417582417583
  - 0.706959706959707
  - 0.7700348432055749
  - 0.7582417582417584
  - 0.761904761904762
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7333333333333333
  - 0.6842948717948718
  - 0.7568423012474399
  - 0.7467455621301776
  - 0.7359038142620231
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6166392241520723
  - 0.5545894240800306
  - 0.6292767408327267
  - 0.615510617443576
  - 0.6278614614622468
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6106194690265486
  - 0.546742209631728
  - 0.6260623229461756
  - 0.6106194690265486
  - 0.6153846153846154
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6429163429163429
  - 0.5770007770007769
  - 0.6605605776337484
  - 0.6517392863546709
  - 0.6654925321591988
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5825867236181694
  - 0.5257607554410791
  - 0.6107810000443187
  - 0.5994708769752929
  - 0.5871858583672843
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8161904761904761
  - 0.7866269841269842
  - 0.827828106852497
  - 0.8264774114774115
  - 0.8427469135802468
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.30293042592365893
  - 0.12282493302517306
  - 0.3855901750011526
  - 0.3042656701222
  - 0.3763036834323627
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.516802665637033
  - 0.4107365570328148
  - 0.539653767592138
  - 0.515101110079386
  - 0.5211784450718038
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.45757535612982264
  - 0.3540974297663261
  - 0.5087385723387844
  - 0.4808328658567974
  - 0.4564608810249216
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.23580612507319024
  - 0.1286530515408364
  - 0.35256382516666757
  - 0.2899943822182297
  - 0.2583983356018703
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.886099509972807
  - 0.8694389274831434
  - 0.8975818964546636
  - 0.8953798953730853
  - 0.9111117814740525
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.666666666666667
  - -4.717948717948718
  - -4.439024390243903
  - -4.6923076923076925
  - -4.972222222222222
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2417582417582418
  - -0.293040293040293
  - -0.2299651567944251
  - -0.24175824175824176
  - -0.23809523809523808
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24175824175824176
  - -0.29304029304029305
  - -0.22996515679442509
  - -0.24175824175824176
  - -0.23809523809523808
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24175824175824173
  - -0.29304029304029305
  - -0.22996515679442509
  - -0.24175824175824176
  - -0.23809523809523803
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26666666666666666
  - -0.31570512820512814
  - -0.24315769875256005
  - -0.25325443786982244
  - -0.26409618573797683
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19145299145299147
  - -0.2311965811965812
  - -0.18333333333333335
  - -0.20085470085470084
  - -0.1986111111111111
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7582417582417582
  - 0.7069597069597069
  - 0.7700348432055748
  - 0.7582417582417582
  - 0.7619047619047619
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7582417582417582
  - 0.706959706959707
  - 0.7700348432055749
  - 0.7582417582417582
  - 0.7619047619047619
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7582417582417583
  - 0.706959706959707
  - 0.7700348432055749
  - 0.7582417582417584
  - 0.761904761904762
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7333333333333333
  - 0.6842948717948718
  - 0.7568423012474399
  - 0.7467455621301776
  - 0.7359038142620231
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7582417582417582
  - 0.7069597069597069
  - 0.7700348432055748
  - 0.7582417582417582
  - 0.7619047619047619
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7582417582417582
  - 0.706959706959707
  - 0.7700348432055749
  - 0.7582417582417582
  - 0.7619047619047619
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7582417582417583
  - 0.706959706959707
  - 0.7700348432055749
  - 0.7582417582417584
  - 0.761904761904762
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7333333333333333
  - 0.6842948717948718
  - 0.7568423012474399
  - 0.7467455621301776
  - 0.7359038142620231
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7726049798563438
  - 0.6433344794699264
  - 0.776273922701224
  - 0.7486547644644796
  - 0.7958379898871499
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8371980676328502
  - 0.7861530172413793
  - 0.8385202583675865
  - 0.8211403980634749
  - 0.8350619782443713
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8085470085470085
  - .nan
  - 0.8166666666666665
  - 0.7991452991452991
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7267476743783933
  - 0.6200427288576416
  - 0.7625491779737176
  - 0.7261269219132123
  - 0.7670320132980707
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9530302206484087
  - 0.9457331244483521
  - 0.9563045288349536
  - 0.9542636008065423
  - 0.9594026717528363
  train_average_precision_macro_oob:
  - 0.8733228727106417
  - 0.8723750143967152
  - 0.8763920900757386
  - 0.8770504904191221
  - 0.877680198474336
  train_average_precision_micro:
  - 0.9836302619478586
  - 0.9782695725200841
  - 0.983440321642944
  - 0.9811042015139059
  - 0.9823734889055254
  train_average_precision_micro_oob:
  - 0.9546289858473225
  - 0.9408097604455852
  - 0.9539859119422066
  - 0.9483189126715409
  - 0.9492274249103201
  train_average_precision_samples:
  - 0.970552995391705
  - 0.973309523809524
  - 0.9725256769374417
  - 0.9699718381976447
  - 0.9707579867389993
  train_average_precision_samples_oob:
  - 0.9463952892985151
  - 0.9361300563236046
  - 0.9421993982778295
  - 0.9355558115719407
  - 0.9409928169580069
  train_average_precision_weighted:
  - 0.9803048818097223
  - 0.974754443619895
  - 0.983261906249669
  - 0.9807641758353024
  - 0.981308555589471
  train_average_precision_weighted_oob:
  - 0.9382605013885552
  - 0.9284484792697231
  - 0.9423623596909634
  - 0.9355061700198875
  - 0.934221738387749
  train_f1_macro:
  - 0.927188940092166
  - 0.9152073732718894
  - 0.9262371615312793
  - 0.9253456221198155
  - 0.9294755877034359
  train_f1_macro_oob:
  - 0.8995391705069125
  - 0.8866359447004608
  - 0.8860877684407098
  - 0.890322580645161
  - 0.8960216998191682
  train_f1_micro:
  - 0.9271889400921659
  - 0.9152073732718894
  - 0.9262371615312792
  - 0.9253456221198156
  - 0.9294755877034359
  train_f1_micro_oob:
  - 0.8995391705069125
  - 0.8866359447004608
  - 0.8860877684407096
  - 0.8903225806451613
  - 0.8960216998191681
  train_f1_samples:
  - 0.9271889400921659
  - 0.9152073732718894
  - 0.9262371615312792
  - 0.9253456221198157
  - 0.9294755877034356
  train_f1_samples_oob:
  - 0.8995391705069123
  - 0.8866359447004609
  - 0.8860877684407095
  - 0.8903225806451613
  - 0.896021699819168
  train_f1_weighted:
  - 0.9323259113057424
  - 0.9167255021302495
  - 0.9250784437747268
  - 0.9230816226783969
  - 0.9327229684027443
  train_f1_weighted_oob:
  - 0.9066428174921359
  - 0.8865611685940352
  - 0.8899058674703278
  - 0.8898216031280547
  - 0.9027442264953136
  train_jaccard_macro:
  - 0.8649648338816271
  - 0.8441966100694335
  - 0.8633697287085632
  - 0.86170047014743
  - 0.8687086331538605
  train_jaccard_macro_oob:
  - 0.8182303289517285
  - 0.7968849977421144
  - 0.795914745921947
  - 0.8027074392249599
  - 0.8123479420193732
  train_jaccard_micro:
  - 0.8642611683848798
  - 0.8436703483432455
  - 0.8626086956521739
  - 0.8610634648370498
  - 0.8682432432432432
  train_jaccard_micro_oob:
  - 0.8174204355108877
  - 0.7963576158940397
  - 0.7954735959765298
  - 0.8023255813953488
  - 0.8116298116298116
  train_jaccard_samples:
  - 0.8803584229390681
  - 0.8644444444444443
  - 0.8803921568627452
  - 0.8785663082437274
  - 0.8855133614627284
  train_jaccard_samples_oob:
  - 0.8393189964157706
  - 0.8211502117953731
  - 0.8187726942628903
  - 0.8273509286412513
  - 0.8362165963431787
  train_jaccard_weighted:
  - 0.8737838046095067
  - 0.8467826791028703
  - 0.8614896568479856
  - 0.8580111957519501
  - 0.874166803348848
  train_jaccard_weighted_oob:
  - 0.8300435685481722
  - 0.7969542179081752
  - 0.8021014743146184
  - 0.8020033294421169
  - 0.8229969968016031
  train_label_ranking_average_precision_score:
  - 0.9705529953917053
  - 0.9733095238095236
  - 0.9725256769374419
  - 0.9699718381976447
  - 0.9707579867389997
  train_label_ranking_average_precision_score_oob:
  - 0.9463952892985149
  - 0.9361300563236048
  - 0.9421993982778292
  - 0.9355558115719407
  - 0.9409928169580065
  train_matthews_corrcoef_macro:
  - 0.7788842281116998
  - 0.7628710284547292
  - 0.773840925876874
  - 0.7798204783086992
  - 0.7925711282770499
  train_matthews_corrcoef_macro_oob:
  - 0.7032455224917704
  - 0.6722483814002268
  - 0.6554418398214239
  - 0.6811158779969336
  - 0.6803036072508203
  train_matthews_corrcoef_micro:
  - 0.8542006175459042
  - 0.8303158917493421
  - 0.8524430061638345
  - 0.8507069261044251
  - 0.8585309917586894
  train_matthews_corrcoef_micro_oob:
  - 0.7990485809450861
  - 0.773232506068383
  - 0.7721370208996086
  - 0.7805327554289849
  - 0.7914221360671262
  train_matthews_corrcoef_samples:
  - 0.8402542418127558
  - 0.8181445372843812
  - 0.8350164232062091
  - 0.833923578991031
  - 0.8468485307486388
  train_matthews_corrcoef_samples_oob:
  - 0.7758667472008335
  - 0.7538584401743957
  - 0.7471777346974656
  - 0.7610061093002237
  - 0.7759270804599834
  train_matthews_corrcoef_weighted:
  - 0.8167219931768112
  - 0.7799936867607569
  - 0.7868509940075195
  - 0.7934853090962355
  - 0.8230901447282887
  train_matthews_corrcoef_weighted_oob:
  - 0.7510346299551036
  - 0.6896144203150557
  - 0.6978633858186325
  - 0.7070328824896395
  - 0.7398101324145411
  train_ndgc:
  - 0.9867812283964297
  - 0.9887817959782927
  - 0.987371642665787
  - 0.9869536183462577
  - 0.9873638572907514
  train_ndgc_oob:
  - 0.9718190634962496
  - 0.9654569893086931
  - 0.9701352664768622
  - 0.9659597667644672
  - 0.96837344698434
  train_neg_coverage_error:
  - -3.7096774193548385
  - -3.761290322580645
  - -3.758169934640523
  - -3.761290322580645
  - -3.651898734177215
  train_neg_coverage_error_oob:
  - -3.9548387096774196
  - -4.04516129032258
  - -4.052287581699346
  - -4.038709677419355
  - -3.8734177215189876
  train_neg_hamming_loss_macro:
  - -0.07281105990783411
  - -0.0847926267281106
  - -0.07376283846872081
  - -0.07465437788018434
  - -0.07052441229656418
  train_neg_hamming_loss_macro_oob:
  - -0.10046082949308756
  - -0.11336405529953916
  - -0.1139122315592904
  - -0.1096774193548387
  - -0.1039783001808318
  train_neg_hamming_loss_micro:
  - -0.0728110599078341
  - -0.0847926267281106
  - -0.07376283846872082
  - -0.07465437788018434
  - -0.0705244122965642
  train_neg_hamming_loss_micro_oob:
  - -0.10046082949308756
  - -0.11336405529953918
  - -0.11391223155929038
  - -0.10967741935483871
  - -0.10397830018083183
  train_neg_hamming_loss_samples:
  - -0.0728110599078341
  - -0.0847926267281106
  - -0.07376283846872081
  - -0.07465437788018432
  - -0.0705244122965642
  train_neg_hamming_loss_samples_oob:
  - -0.10046082949308754
  - -0.11336405529953916
  - -0.11391223155929037
  - -0.10967741935483871
  - -0.10397830018083185
  train_neg_hamming_loss_weighted:
  - -0.06767408869425769
  - -0.08327449786975046
  - -0.07492155622527316
  - -0.07691837732160313
  - -0.06727703159725577
  train_neg_hamming_loss_weighted_oob:
  - -0.09335718250786407
  - -0.1134388314059647
  - -0.11009413252967222
  - -0.11017839687194525
  - -0.09725577350468645
  train_neg_label_ranking_loss:
  - -0.035806451612903224
  - -0.037311827956989244
  - -0.034422657952069724
  - -0.035913978494623654
  - -0.038502109704641345
  train_neg_label_ranking_loss_oob:
  - -0.06784946236559139
  - -0.08
  - -0.07254901960784313
  - -0.0768817204301075
  - -0.07025316455696204
  train_precision_macro:
  - 0.927188940092166
  - 0.9152073732718894
  - 0.9262371615312793
  - 0.9253456221198155
  - 0.9294755877034359
  train_precision_macro_oob:
  - 0.8995391705069125
  - 0.8866359447004608
  - 0.8860877684407098
  - 0.890322580645161
  - 0.8960216998191682
  train_precision_micro:
  - 0.9271889400921659
  - 0.9152073732718894
  - 0.9262371615312792
  - 0.9253456221198156
  - 0.9294755877034359
  train_precision_micro_oob:
  - 0.8995391705069125
  - 0.8866359447004608
  - 0.8860877684407096
  - 0.8903225806451613
  - 0.8960216998191681
  train_precision_samples:
  - 0.9271889400921659
  - 0.9152073732718894
  - 0.9262371615312792
  - 0.9253456221198157
  - 0.9294755877034356
  train_precision_samples_oob:
  - 0.8995391705069123
  - 0.8866359447004609
  - 0.8860877684407095
  - 0.8903225806451613
  - 0.896021699819168
  train_precision_weighted:
  - 0.9323259113057424
  - 0.9167255021302495
  - 0.9250784437747268
  - 0.9230816226783969
  - 0.9327229684027443
  train_precision_weighted_oob:
  - 0.9066428174921359
  - 0.8865611685940352
  - 0.8899058674703278
  - 0.8898216031280547
  - 0.9027442264953136
  train_recall_macro:
  - 0.927188940092166
  - 0.9152073732718894
  - 0.9262371615312793
  - 0.9253456221198155
  - 0.9294755877034359
  train_recall_macro_oob:
  - 0.8995391705069125
  - 0.8866359447004608
  - 0.8860877684407098
  - 0.890322580645161
  - 0.8960216998191682
  train_recall_micro:
  - 0.9271889400921659
  - 0.9152073732718894
  - 0.9262371615312792
  - 0.9253456221198156
  - 0.9294755877034359
  train_recall_micro_oob:
  - 0.8995391705069125
  - 0.8866359447004608
  - 0.8860877684407096
  - 0.8903225806451613
  - 0.8960216998191681
  train_recall_samples:
  - 0.9271889400921659
  - 0.9152073732718894
  - 0.9262371615312792
  - 0.9253456221198157
  - 0.9294755877034356
  train_recall_samples_oob:
  - 0.8995391705069123
  - 0.8866359447004609
  - 0.8860877684407095
  - 0.8903225806451613
  - 0.896021699819168
  train_recall_weighted:
  - 0.9323259113057424
  - 0.9167255021302495
  - 0.9250784437747268
  - 0.9230816226783969
  - 0.9327229684027443
  train_recall_weighted_oob:
  - 0.9066428174921359
  - 0.8865611685940352
  - 0.8899058674703278
  - 0.8898216031280547
  - 0.9027442264953136
  train_roc_auc_macro:
  - 0.9837071098260795
  - 0.9768328384862655
  - 0.9848946882085042
  - 0.9824203306953126
  - 0.9845734675328899
  train_roc_auc_macro_oob:
  - 0.9348269683015265
  - 0.9221250442507106
  - 0.9358280844052235
  - 0.9273582968150972
  - 0.9325310057768635
  train_roc_auc_micro:
  - 0.9836931744724862
  - 0.9779109297977222
  - 0.9824966514119878
  - 0.980882092922039
  - 0.9833064452663887
  train_roc_auc_micro_oob:
  - 0.955839224838905
  - 0.9447560768315485
  - 0.9524779551289206
  - 0.9504243512322508
  - 0.9534803651530652
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9875646258813777
  - 0.9793856031024066
  - 0.9873785246351046
  - 0.9862757344780977
  - 0.9865860237697234
  train_roc_auc_weighted_oob:
  - 0.9484656927951993
  - 0.9286370697063797
  - 0.9468688324049264
  - 0.9367084854448355
  - 0.9354099934680984
start: 2023-12-21 13:23:17.876014
wrapper: null
