active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AZmZmZmb2PwCamZmZmdk/wMzMzMzMBMCAZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: &id004 !!python/name:nakano_datasets_v2.estimators.get_oob_proba ''
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id005 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: &id007 !!python/name:nakano_datasets_v2.estimators.get_oob_predictions ''
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id008 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id009 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id010 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id011 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id012 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id013 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id014 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id015 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id016 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-11 20:37:40.026741
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      average_precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__2
  params:
    min_levels: 0
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    trim_to_best_score: false
hash: 4cd5da3b00fc225edd4df4a189fd33c79a9862dd60f04d97616c20ad73468ccd
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4cd5da3_20231211T203549566471_embedding_proba__2_VirusGO.yml
results:
  fit_time:
  - 44.364465951919556
  - 44.204851388931274
  - 44.79299020767212
  - 44.68236327171326
  - 45.171510457992554
  score_time:
  - 27.874308109283447
  - 26.330225706100464
  - 26.46544623374939
  - 27.840770959854126
  - 27.527475833892822
  test_average_precision_macro:
  - 0.9800215407800547
  - 0.9596671178345412
  - 0.9256763425371345
  - 0.9364112812462005
  - 0.9406228721866352
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9604937443403808
  - 0.9216541480224404
  - 0.9466875313136675
  - 0.9233511582695143
  - 0.8938749357783646
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9801587301587301
  - 0.9279166666666667
  - 0.9329268292682927
  - 0.9501262626262627
  - 0.95
  test_average_precision_samples_oob:
  - 0.5595238095238095
  - 0.5610416666666667
  - 0.44085365853658537
  - 0.5272727272727272
  - 0.48993055555555554
  test_average_precision_weighted:
  - 0.9873540059298573
  - 0.9507953049452776
  - 0.9525648846113579
  - 0.945651694145062
  - 0.9348215906233851
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_coverage_error:
  - -1.2857142857142858
  - -1.5
  - -1.3902439024390243
  - -1.3181818181818181
  - -1.425
  test_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9523809523809524
  - 0.9125000000000001
  - 0.9512195121951219
  - 0.9469696969696969
  - 0.9166666666666666
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9523809523809523
  - 0.9125
  - 0.9512195121951219
  - 0.946969696969697
  - 0.9166666666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9523809523809523
  - 0.9125
  - 0.9512195121951219
  - 0.9469696969696971
  - 0.9166666666666667
  test_f1_samples_oob:
  - 0.746031746031746
  - 0.7541666666666667
  - 0.7398373983739837
  - 0.7500000000000001
  - 0.7375
  test_f1_weighted:
  - 0.9551820728291317
  - 0.8911764705882352
  - 0.9297560975609757
  - 0.9393939393939393
  - 0.8923469387755102
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_macro:
  - -0.047619047619047616
  - -0.08750000000000002
  - -0.04878048780487806
  - -0.05303030303030303
  - -0.08333333333333333
  test_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_micro:
  - -0.047619047619047616
  - -0.0875
  - -0.04878048780487805
  - -0.05303030303030303
  - -0.08333333333333333
  test_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_samples:
  - -0.047619047619047616
  - -0.0875
  - -0.04878048780487805
  - -0.053030303030303025
  - -0.08333333333333333
  test_hamming_loss_samples_oob:
  - -0.25396825396825395
  - -0.2458333333333333
  - -0.26016260162601623
  - -0.25
  - -0.2625
  test_hamming_loss_weighted:
  - -0.04481792717086835
  - -0.10882352941176471
  - -0.0702439024390244
  - -0.06060606060606061
  - -0.10765306122448978
  test_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9104298801973222
  - 0.8409138328248541
  - 0.9086988377686053
  - 0.8997772981121731
  - 0.8483211856661264
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9090909090909091
  - 0.8390804597701149
  - 0.9069767441860465
  - 0.8992805755395683
  - 0.8461538461538461
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9217687074829932
  - 0.8625
  - 0.9227642276422763
  - 0.91504329004329
  - 0.8654761904761905
  test_jaccard_samples_oob:
  - 0.6122448979591837
  - 0.6303571428571428
  - 0.6045296167247387
  - 0.6103896103896105
  - 0.6035714285714286
  test_jaccard_weighted:
  - 0.9155715845182332
  - 0.8053335866932488
  - 0.8698666398201281
  - 0.886049994054565
  - 0.8071651188550318
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9801587301587301
  - 0.9279166666666665
  - 0.9329268292682927
  - 0.9501262626262627
  - 0.95
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_loss:
  - 0.010714285714285714
  - 0.04625
  - 0.03170731707317073
  - 0.03061868686868687
  - 0.038125
  test_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.62803226070809
  - 0.5466584386944006
  - 0.8231312874538429
  - 0.6453502760477284
  - 0.5216889274070763
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8479701426969735
  - 0.7242627211601959
  - 0.8450724607037582
  - 0.8233023133962742
  - 0.7313674491267317
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8221386220984453
  - 0.6824341649025257
  - 0.8036264219036711
  - 0.7902731328466795
  - 0.7214911064067351
  test_matthews_corrcoef_samples_oob:
  - 0.08204880700360813
  - 0.1474341649025257
  - 0.037772763367085696
  - 0.08253429774823264
  - 0.07162277660168379
  test_matthews_corrcoef_weighted:
  - 0.8145869445363356
  - 0.6735272546314438
  - 0.8200539173649526
  - 0.7883215889410903
  - 0.6812780932139211
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9873897936159007
  - 0.9460534679498682
  - 0.9525996828341334
  - 0.9649244540512346
  - 0.9634446870849782
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9523809523809524
  - 0.9125000000000001
  - 0.9512195121951219
  - 0.9469696969696969
  - 0.9166666666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9523809523809523
  - 0.9125
  - 0.9512195121951219
  - 0.946969696969697
  - 0.9166666666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9523809523809523
  - 0.9125
  - 0.9512195121951219
  - 0.9469696969696971
  - 0.9166666666666667
  test_precision_samples_oob:
  - 0.746031746031746
  - 0.7541666666666667
  - 0.7398373983739837
  - 0.7500000000000001
  - 0.7375
  test_precision_weighted:
  - 0.9551820728291317
  - 0.8911764705882352
  - 0.9297560975609757
  - 0.9393939393939393
  - 0.8923469387755102
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9523809523809524
  - 0.9125000000000001
  - 0.9512195121951219
  - 0.9469696969696969
  - 0.9166666666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9523809523809523
  - 0.9125
  - 0.9512195121951219
  - 0.946969696969697
  - 0.9166666666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9523809523809523
  - 0.9125
  - 0.9512195121951219
  - 0.9469696969696971
  - 0.9166666666666667
  test_recall_samples_oob:
  - 0.746031746031746
  - 0.7541666666666667
  - 0.7398373983739837
  - 0.7500000000000001
  - 0.7375
  test_recall_weighted:
  - 0.9551820728291317
  - 0.8911764705882352
  - 0.9297560975609757
  - 0.9393939393939393
  - 0.8923469387755102
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9951418988648091
  - 0.9793089831453003
  - 0.9676279357545342
  - 0.9730233297022514
  - 0.9534669612794612
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9896595454102038
  - 0.9780060172217034
  - 0.9766326530612245
  - 0.9733959311424101
  - 0.9630302382733198
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9892857142857142
  - 0.9537500000000001
  - 0.9682926829268294
  - 0.9693813131313131
  - 0.961875
  test_roc_auc_samples_oob:
  - 0.694047619047619
  - 0.6368750000000001
  - 0.5390243902439025
  - 0.6803030303030304
  - 0.6248611111111111
  test_roc_auc_weighted:
  - 0.9953147574819402
  - 0.9654085613164898
  - 0.9750758491410666
  - 0.966757443718228
  - 0.9549062049062049
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9807290142608033
  - 0.983150775606959
  - 0.9788397178239512
  - 0.982732282661826
  - 0.9884382336746603
  train_average_precision_macro_oob:
  - 0.9321981578177351
  - 0.9411159915727204
  - 0.9415645948235806
  - 0.9361620066721708
  - 0.9213161642140021
  train_average_precision_micro:
  - 0.9673938979654642
  - 0.9714700542494347
  - 0.9719197676769736
  - 0.9702320566527443
  - 0.9776329826146126
  train_average_precision_micro_oob:
  - 0.9290807767291706
  - 0.9316735740034862
  - 0.9377194936075849
  - 0.9332614507391793
  - 0.9446743530010137
  train_average_precision_samples:
  - 0.9727272727272728
  - 0.9750499001996007
  - 0.9789156626506024
  - 0.9729038854805726
  - 0.9830339321357286
  train_average_precision_samples_oob:
  - 0.9429292929292928
  - 0.9461077844311377
  - 0.9495314591700132
  - 0.948364008179959
  - 0.957684630738523
  train_average_precision_weighted:
  - 0.9822175652693426
  - 0.9839324805875814
  - 0.9809447473182673
  - 0.9824575013462988
  - 0.9888090463086109
  train_average_precision_weighted_oob:
  - 0.9427205365612259
  - 0.9464383573469388
  - 0.9501853989295426
  - 0.9446454402111419
  - 0.9454225804512566
  train_coverage_error:
  - -1.2969696969696969
  - -1.2694610778443114
  - -1.2710843373493976
  - -1.312883435582822
  - -1.2694610778443114
  train_coverage_error_oob:
  - -1.387878787878788
  - -1.3532934131736527
  - -1.3734939759036144
  - -1.3987730061349692
  - -1.3652694610778444
  train_f1_macro:
  - 0.9484848484848484
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512972
  train_f1_macro_oob:
  - 0.9313131313131313
  - 0.9421157684630738
  - 0.9337349397590362
  - 0.9325153374233129
  - 0.935129740518962
  train_f1_micro:
  - 0.9484848484848485
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512974
  train_f1_micro_oob:
  - 0.9313131313131313
  - 0.9421157684630739
  - 0.9337349397590361
  - 0.9325153374233128
  - 0.935129740518962
  train_f1_samples:
  - 0.9484848484848485
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512975
  train_f1_samples_oob:
  - 0.9313131313131312
  - 0.9421157684630739
  - 0.9337349397590361
  - 0.9325153374233128
  - 0.9351297405189621
  train_f1_weighted:
  - 0.9415045982210161
  - 0.9544195191706141
  - 0.9457831325301205
  - 0.93712419497604
  - 0.955340550426241
  train_f1_weighted_oob:
  - 0.9180762852404644
  - 0.9397622665117528
  - 0.9241918167720387
  - 0.9190550315905136
  - 0.9318014217869678
  train_hamming_loss_macro:
  - -0.051515151515151514
  - -0.04491017964071856
  - -0.042168674698795185
  - -0.05214723926380368
  - -0.04391217564870259
  train_hamming_loss_macro_oob:
  - -0.06868686868686869
  - -0.057884231536926144
  - -0.06626506024096386
  - -0.06748466257668712
  - -0.06487025948103793
  train_hamming_loss_micro:
  - -0.051515151515151514
  - -0.04491017964071856
  - -0.04216867469879518
  - -0.05214723926380368
  - -0.043912175648702596
  train_hamming_loss_micro_oob:
  - -0.06868686868686869
  - -0.05788423153692615
  - -0.06626506024096386
  - -0.06748466257668712
  - -0.06487025948103792
  train_hamming_loss_samples:
  - -0.051515151515151514
  - -0.04491017964071856
  - -0.04216867469879518
  - -0.05214723926380368
  - -0.04391217564870259
  train_hamming_loss_samples_oob:
  - -0.06868686868686869
  - -0.057884231536926144
  - -0.06626506024096386
  - -0.06748466257668712
  - -0.06487025948103792
  train_hamming_loss_weighted:
  - -0.05849540177898387
  - -0.045580480829386004
  - -0.054216867469879526
  - -0.06287580502395995
  - -0.04465944957375889
  train_hamming_loss_weighted_oob:
  - -0.08192371475953565
  - -0.06023773348824739
  - -0.07580818322796136
  - -0.08094496840948631
  - -0.06819857821303206
  train_jaccard_macro:
  - 0.9021803666198251
  - 0.9144360574592304
  - 0.9199680534234478
  - 0.9014445237562656
  - 0.9161610079449662
  train_jaccard_macro_oob:
  - 0.8721298849915954
  - 0.8911886837464862
  - 0.8762573826654249
  - 0.8743768862094986
  - 0.8787460999608793
  train_jaccard_micro:
  - 0.9020172910662824
  - 0.9140401146131805
  - 0.9190751445086706
  - 0.9008746355685131
  - 0.9158699808795411
  train_jaccard_micro_oob:
  - 0.8714555765595463
  - 0.8905660377358491
  - 0.8757062146892656
  - 0.8735632183908046
  - 0.8781630740393627
  train_jaccard_samples:
  - 0.916883116883117
  - 0.9255774165953806
  - 0.9327309236947791
  - 0.9164475606193397
  - 0.9281437125748503
  train_jaccard_samples_oob:
  - 0.8909090909090909
  - 0.9053321927573426
  - 0.8934308663224325
  - 0.8919076833187264
  - 0.8946392928428858
  train_jaccard_weighted:
  - 0.889590261997847
  - 0.9130674724284211
  - 0.8975839007488866
  - 0.8823031053747141
  - 0.9147160561558306
  train_jaccard_weighted_oob:
  - 0.8490307371385948
  - 0.8867138842862935
  - 0.8596763534967311
  - 0.8510167558470073
  - 0.8727379635271684
  train_label_ranking_average_precision_score:
  - 0.9727272727272726
  - 0.9750499001996007
  - 0.9789156626506024
  - 0.9729038854805725
  - 0.9830339321357283
  train_label_ranking_average_precision_score_oob:
  - 0.9429292929292928
  - 0.9461077844311375
  - 0.9495314591700132
  - 0.948364008179959
  - 0.9576846307385228
  train_label_ranking_loss:
  - 0.013939393939393939
  - 0.011826347305389222
  - 0.01039156626506024
  - 0.014877300613496932
  - 0.008982035928143712
  train_label_ranking_loss_oob:
  - 0.03234006734006734
  - 0.028359946773120422
  - 0.030254350736278447
  - 0.03128834355828221
  - 0.026330671989354622
  train_matthews_corrcoef_macro:
  - 0.6542408017088407
  - 0.6528254000559133
  - 0.8332706426773723
  - 0.6589697081460314
  - 0.6696935267693283
  train_matthews_corrcoef_macro_oob:
  - 0.5852377940624871
  - 0.5741402532465629
  - 0.5864089813725687
  - 0.5891875614531866
  - 0.5436190571470638
  train_matthews_corrcoef_micro:
  - 0.8357224750825284
  - 0.8559822458009829
  - 0.8661845201568438
  - 0.8351454617965598
  - 0.860451191444905
  train_matthews_corrcoef_micro_oob:
  - 0.7778587559905914
  - 0.8125091106185633
  - 0.7858358027520526
  - 0.7843934911807309
  - 0.7903717784274894
  train_matthews_corrcoef_samples:
  - 0.8195360962946924
  - 0.8354540268546423
  - 0.8699319146093852
  - 0.8145435902729342
  - 0.8306067738266883
  train_matthews_corrcoef_samples_oob:
  - 0.7416391043265893
  - 0.7750374860569165
  - 0.755415407470316
  - 0.7511381366782556
  - 0.7279200474910565
  train_matthews_corrcoef_weighted:
  - 0.8070334864998662
  - 0.829286379356472
  - 0.847122692330647
  - 0.802188830835006
  - 0.833571022568756
  train_matthews_corrcoef_weighted_oob:
  - 0.7390777325528106
  - 0.7731058911244163
  - 0.7467349715197057
  - 0.7442318864609295
  - 0.7431356002019226
  train_ndgc:
  - 0.9808092843906062
  - 0.9823038376579241
  - 0.9845990349604459
  - 0.980646490992492
  - 0.9884531282473481
  train_ndgc_oob:
  - 0.9584676835698088
  - 0.9609482080125029
  - 0.963624147789252
  - 0.9630104261137159
  - 0.9702719438775527
  train_precision_macro:
  - 0.9484848484848484
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512972
  train_precision_macro_oob:
  - 0.9313131313131313
  - 0.9421157684630739
  - 0.9337349397590362
  - 0.9325153374233129
  - 0.935129740518962
  train_precision_micro:
  - 0.9484848484848485
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512974
  train_precision_micro_oob:
  - 0.9313131313131313
  - 0.9421157684630739
  - 0.9337349397590361
  - 0.9325153374233128
  - 0.935129740518962
  train_precision_samples:
  - 0.9484848484848485
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512975
  train_precision_samples_oob:
  - 0.9313131313131312
  - 0.9421157684630739
  - 0.9337349397590361
  - 0.9325153374233128
  - 0.9351297405189621
  train_precision_weighted:
  - 0.9415045982210161
  - 0.9544195191706141
  - 0.9457831325301205
  - 0.93712419497604
  - 0.955340550426241
  train_precision_weighted_oob:
  - 0.9180762852404644
  - 0.9397622665117528
  - 0.9241918167720387
  - 0.9190550315905136
  - 0.9318014217869678
  train_recall_macro:
  - 0.9484848484848484
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512972
  train_recall_macro_oob:
  - 0.9313131313131313
  - 0.9421157684630739
  - 0.9337349397590362
  - 0.9325153374233129
  - 0.935129740518962
  train_recall_micro:
  - 0.9484848484848485
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512974
  train_recall_micro_oob:
  - 0.9313131313131313
  - 0.9421157684630739
  - 0.9337349397590361
  - 0.9325153374233128
  - 0.935129740518962
  train_recall_samples:
  - 0.9484848484848485
  - 0.9550898203592815
  - 0.9578313253012049
  - 0.9478527607361963
  - 0.9560878243512975
  train_recall_samples_oob:
  - 0.9313131313131312
  - 0.9421157684630739
  - 0.9337349397590361
  - 0.9325153374233128
  - 0.9351297405189621
  train_recall_weighted:
  - 0.9415045982210161
  - 0.9544195191706141
  - 0.9457831325301205
  - 0.93712419497604
  - 0.955340550426241
  train_recall_weighted_oob:
  - 0.9180762852404644
  - 0.9397622665117528
  - 0.9241918167720387
  - 0.9190550315905136
  - 0.9318014217869678
  train_roc_auc_macro:
  - 0.9936961672281189
  - 0.9941848239951888
  - 0.9932407320844971
  - 0.9935453721292892
  - 0.996444570065159
  train_roc_auc_macro_oob:
  - 0.9766081170516934
  - 0.9764092702542637
  - 0.9777164058827531
  - 0.9765250653372655
  - 0.9793031535393734
  train_roc_auc_micro:
  - 0.9904627685400627
  - 0.9923913516065117
  - 0.9919975309873557
  - 0.9913111405648719
  - 0.9934893986941806
  train_roc_auc_micro_oob:
  - 0.9766944743960805
  - 0.9799007459580996
  - 0.9800857919545104
  - 0.9781786050442767
  - 0.9790624980733307
  train_roc_auc_samples:
  - 0.986060606060606
  - 0.9881736526946108
  - 0.9896084337349398
  - 0.985122699386503
  - 0.9910179640718563
  train_roc_auc_samples_oob:
  - 0.9676599326599327
  - 0.9716400532268795
  - 0.9697456492637216
  - 0.9687116564417179
  - 0.9736693280106454
  train_roc_auc_weighted:
  - 0.9914124902173916
  - 0.9920255509743913
  - 0.9907249915082735
  - 0.9906396345132511
  - 0.9945092115847949
  train_roc_auc_weighted_oob:
  - 0.9725118505125124
  - 0.9737461151530579
  - 0.9749526630331207
  - 0.9730210459489982
  - 0.9796187742725253
start: 2023-12-11 20:35:49.566471
wrapper: null
