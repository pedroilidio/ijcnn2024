active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAMAAAAAAAADwPwAAAAAAAAAAAAAAAAAA8D8AAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z9gZmZmZmb2vw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b9oZmZmZmb2P5iZmZmZmfm/oJmZmZmZ2T9oZmZmZmb2Pw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/mJmZmZmZ6b80MzMzMzPzPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:10:24.485744
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__3
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 3162414433e9ea3df54c53568593bf9659325ef700df51768f8dbb2984f26a24
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3162414_20231212T170958420047_embedding_proba_weak__3_birds.yml
results:
  fit_time:
  - 11.274930477142334
  - 11.898360967636108
  - 11.383001327514648
  - 11.530050277709961
  - 12.149226903915405
  score_time:
  - 3.729637861251831
  - 3.6915667057037354
  - 3.6767754554748535
  - 3.856680154800415
  - 4.068272352218628
  test_average_precision_macro:
  - 0.3298412271850632
  - 0.38078268441755914
  - 0.3408105561913455
  - 0.34943073270356667
  - 0.3581282406566035
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.27836856736470106
  - 0.3611272666226726
  - 0.2689313640287787
  - 0.29671400762646477
  - 0.3330437892526824
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.29201056551831744
  - 0.3219007369486166
  - 0.28127563132453093
  - 0.28071139090671937
  - 0.2958992625761292
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4580006430162836
  - 0.48762223858319936
  - 0.41660969968333794
  - 0.44730730801578794
  - 0.5127950423553553
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9143206854345167
  - 0.9355365157078744
  - 0.9126886984904121
  - 0.9245206038351694
  - 0.9241126070991434
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9143206854345165
  - 0.9355365157078743
  - 0.9126886984904121
  - 0.9245206038351693
  - 0.9241126070991432
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9143206854345165
  - 0.9355365157078743
  - 0.912688698490412
  - 0.9245206038351693
  - 0.9241126070991431
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9123208832511158
  - 0.9292188431723317
  - 0.9038996390318953
  - 0.9096809085992427
  - 0.9179586563307492
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8431262205421172
  - 0.8799549498392749
  - 0.841359922411113
  - 0.8605984250349628
  - 0.8596785642403032
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8421645997745209
  - 0.878880797240322
  - 0.8393996247654785
  - 0.8596358118361154
  - 0.8589306029579067
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8617349605418363
  - 0.8896533642741934
  - 0.8529097609751469
  - 0.8733386806929107
  - 0.870987491331273
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8394480236150856
  - 0.8687282646387859
  - 0.8267408160850102
  - 0.83586067812198
  - 0.8491542651405546
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7803826585415735
  - 0.7637612020648956
  - 0.7231360964408101
  - 0.7148199180385024
  - 0.7687674796303927
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.267906854488443
  - 0.3150453648337026
  - 0.300726723520553
  - 0.30408638091949425
  - 0.29366337710830603
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3316322624354011
  - 0.40287184133474824
  - 0.3100516271534644
  - 0.33175387703957854
  - 0.36504057758023556
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1298905870995805
  - 0.17848206411836112
  - 0.1352217426271463
  - 0.13895338777983568
  - 0.15246939999106987
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.37382980304843993
  - 0.40944159097456606
  - 0.3541646332066937
  - 0.3518764342828928
  - 0.41375561221327006
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3616840309239271
  - 0.39294147113040506
  - 0.36433891911571165
  - 0.3631410174640851
  - 0.3668116567622789
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.356589147286822
  - -3.356589147286822
  - -4.170542635658915
  - -3.7131782945736433
  - -3.449612403100775
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08567931456548347
  - -0.06446348429212566
  - -0.08731130150958792
  - -0.07547939616483068
  - -0.0758873929008568
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08567931456548347
  - -0.06446348429212566
  - -0.08731130150958792
  - -0.07547939616483068
  - -0.07588739290085679
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08567931456548346
  - -0.06446348429212566
  - -0.08731130150958792
  - -0.07547939616483068
  - -0.07588739290085679
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08767911674888419
  - -0.07078115682766846
  - -0.09610036096810463
  - -0.09031909140075718
  - -0.08204134366925066
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.09882734747645827
  - -0.10498176014591884
  - -0.13440999138673557
  - -0.12207854718114636
  - -0.10663971611304032
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9143206854345167
  - 0.9355365157078744
  - 0.9126886984904121
  - 0.9245206038351694
  - 0.9241126070991434
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9143206854345165
  - 0.9355365157078743
  - 0.9126886984904121
  - 0.9245206038351693
  - 0.9241126070991432
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9143206854345165
  - 0.9355365157078743
  - 0.912688698490412
  - 0.9245206038351693
  - 0.9241126070991431
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9123208832511158
  - 0.9292188431723317
  - 0.9038996390318953
  - 0.9096809085992427
  - 0.9179586563307492
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9143206854345167
  - 0.9355365157078744
  - 0.9126886984904121
  - 0.9245206038351694
  - 0.9241126070991434
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9143206854345165
  - 0.9355365157078743
  - 0.9126886984904121
  - 0.9245206038351693
  - 0.9241126070991432
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9143206854345165
  - 0.9355365157078743
  - 0.912688698490412
  - 0.9245206038351693
  - 0.9241126070991431
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9123208832511158
  - 0.9292188431723317
  - 0.9038996390318953
  - 0.9096809085992427
  - 0.9179586563307492
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8596114896575375
  - 0.8748027420765073
  - 0.84822174303783
  - 0.8492516569927403
  - .nan
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8815548760568165
  - 0.8809531700526961
  - 0.8587687549355094
  - 0.8660637381567615
  - 0.8967063912083318
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8812456652825075
  - 0.8787803907808326
  - 0.8461185363416611
  - 0.8587193869046201
  - .nan
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.462227371399389
  - 0.45416415921374476
  - 0.4389179701881439
  - 0.44904786701836813
  - 0.46859804607478894
  train_average_precision_macro_oob:
  - 0.4103427540776422
  - 0.40610557941090825
  - 0.383641804425489
  - 0.3931659083187379
  - 0.41532308460008727
  train_average_precision_micro:
  - 0.41652963968348433
  - 0.44961718025462377
  - 0.4171409608382683
  - 0.41445114760369456
  - 0.4083284627131451
  train_average_precision_micro_oob:
  - 0.37655168948773665
  - 0.40490746781926756
  - 0.37695716056422873
  - 0.3701555504655566
  - 0.36373345713857325
  train_average_precision_samples:
  - 0.4137078710479873
  - 0.40957154602503437
  - 0.3923170240612101
  - 0.38050269560686223
  - 0.39627923755830724
  train_average_precision_samples_oob:
  - 0.35801237797973073
  - 0.3549423707973639
  - 0.34805878405453605
  - 0.334015980373822
  - 0.3572686697666148
  train_average_precision_weighted:
  - 0.5904093275992403
  - 0.6056297265494105
  - 0.5787893916016204
  - 0.5870944012618337
  - 0.5697763765565814
  train_average_precision_weighted_oob:
  - 0.5315274379491312
  - 0.5431048978053686
  - 0.5207610211845304
  - 0.5203846546269912
  - 0.5144578249825517
  train_f1_macro:
  - 0.9335985312117503
  - 0.9398204814361485
  - 0.9277845777233782
  - 0.932170542635659
  - 0.9313545491636066
  train_f1_macro_oob:
  - 0.9341085271317829
  - 0.9394124847001225
  - 0.9303345573235413
  - 0.933700530395757
  - 0.9324765401876786
  train_f1_micro:
  - 0.9335985312117503
  - 0.9398204814361485
  - 0.9277845777233782
  - 0.9321705426356589
  - 0.9313545491636067
  train_f1_micro_oob:
  - 0.9341085271317829
  - 0.9394124847001224
  - 0.9303345573235414
  - 0.9337005303957568
  - 0.9324765401876784
  train_f1_samples:
  - 0.9335985312117503
  - 0.9398204814361486
  - 0.9277845777233783
  - 0.9321705426356589
  - 0.9313545491636067
  train_f1_samples_oob:
  - 0.9341085271317829
  - 0.9394124847001224
  - 0.9303345573235414
  - 0.9337005303957568
  - 0.9324765401876784
  train_f1_weighted:
  - 0.9357086637559775
  - 0.9414795254157051
  - 0.9305771710614077
  - 0.9336212624584718
  - 0.9288291900561347
  train_f1_weighted_oob:
  - 0.9316916154325937
  - 0.9376997159595242
  - 0.929132020098715
  - 0.9300147655961608
  - 0.9251054382369538
  train_jaccard_macro:
  - 0.8758705927908277
  - 0.8869390319333554
  - 0.8656385002668857
  - 0.8730499377597049
  - 0.8719833730778008
  train_jaccard_macro_oob:
  - 0.8767666946782876
  - 0.8862611507285231
  - 0.8700440144287378
  - 0.8757629177055085
  - 0.8741678894885737
  train_jaccard_micro:
  - 0.8754662840746055
  - 0.8864729651722147
  - 0.865296803652968
  - 0.8729582577132486
  - 0.8715281091915624
  train_jaccard_micro_oob:
  - 0.8763636363636363
  - 0.8857472590882862
  - 0.8697434919424049
  - 0.8756456858618711
  - 0.8734951270781578
  train_jaccard_samples:
  - 0.888555545997116
  - 0.8970772847095733
  - 0.8773469943405907
  - 0.8843182380602335
  - 0.8833790416601338
  train_jaccard_samples_oob:
  - 0.8891756937406207
  - 0.8957956682746032
  - 0.8813224831753649
  - 0.886110714080886
  - 0.8852614444500188
  train_jaccard_weighted:
  - 0.8795020821756979
  - 0.889793927349399
  - 0.8704639701236703
  - 0.8755721442023042
  - 0.8674385894190885
  train_jaccard_weighted_oob:
  - 0.8724673852742626
  - 0.8831184642735653
  - 0.8678552064931254
  - 0.8693070010324135
  - 0.8611289746222703
  train_label_ranking_average_precision_score:
  - 0.8613822896526383
  - 0.8688738716064293
  - 0.8516193496426044
  - 0.8417430056843812
  - 0.8478296251552061
  train_label_ranking_average_precision_score_oob:
  - 0.8056867965843814
  - 0.8142446963787587
  - 0.807361109635931
  - 0.7952562904513409
  - 0.8088190573635137
  train_matthews_corrcoef_macro:
  - 0.4427420410211294
  - 0.4561528931634804
  - 0.43073026802686987
  - 0.4184463613484216
  - 0.428941837156904
  train_matthews_corrcoef_macro_oob:
  - 0.4105328801457042
  - 0.40678264137061965
  - 0.3930475356572817
  - 0.38049469495503346
  - 0.38755911148354705
  train_matthews_corrcoef_micro:
  - 0.4920985479651025
  - 0.5186724023378085
  - 0.47493680171927094
  - 0.473388351150455
  - 0.4739771923715939
  train_matthews_corrcoef_micro_oob:
  - 0.4532027808643453
  - 0.4700420203367986
  - 0.4384125663712085
  - 0.4294269253999259
  - 0.4262304777466931
  train_matthews_corrcoef_samples:
  - 0.2361381738197732
  - 0.252956059967406
  - 0.2349453971560688
  - 0.23011411224748018
  - 0.233107008765042
  train_matthews_corrcoef_samples_oob:
  - 0.2007144860595556
  - 0.20698149312405306
  - 0.20246137070003428
  - 0.18849212104338467
  - 0.1982884833597467
  train_matthews_corrcoef_weighted:
  - 0.5491596575286662
  - 0.5728223950013522
  - 0.5394693989402966
  - 0.531163589632967
  - 0.5240452565436674
  train_matthews_corrcoef_weighted_oob:
  - 0.4977895044758833
  - 0.5158268855203406
  - 0.4898906157921218
  - 0.47966219935933796
  - 0.4644418028878024
  train_ndgc:
  - 0.46019051109267134
  - 0.4529224696340297
  - 0.4425555983071003
  - 0.4326704776629654
  - 0.4470491544252028
  train_ndgc_oob:
  - 0.41933479697861964
  - 0.41328607410346585
  - 0.40975469750474564
  - 0.3989245448379183
  - 0.41883148687843075
  train_neg_coverage_error:
  - -1.872093023255814
  - -1.748062015503876
  - -1.8856589147286822
  - -1.9108527131782946
  - -1.8934108527131783
  train_neg_coverage_error_oob:
  - -2.635658914728682
  - -2.62984496124031
  - -2.622093023255814
  - -2.746124031007752
  - -2.6589147286821704
  train_neg_hamming_loss_macro:
  - -0.06640146878824969
  - -0.06017951856385149
  - -0.07221542227662178
  - -0.0678294573643411
  - -0.06864545083639331
  train_neg_hamming_loss_macro_oob:
  - -0.06589147286821707
  - -0.06058751529987762
  - -0.06966544267645859
  - -0.0662994696042432
  - -0.06752345981232151
  train_neg_hamming_loss_micro:
  - -0.06640146878824969
  - -0.06017951856385149
  - -0.07221542227662178
  - -0.06782945736434108
  - -0.06864545083639331
  train_neg_hamming_loss_micro_oob:
  - -0.06589147286821706
  - -0.0605875152998776
  - -0.06966544267645859
  - -0.06629946960424317
  - -0.0675234598123215
  train_neg_hamming_loss_samples:
  - -0.06640146878824968
  - -0.06017951856385149
  - -0.07221542227662177
  - -0.06782945736434108
  - -0.0686454508363933
  train_neg_hamming_loss_samples_oob:
  - -0.06589147286821706
  - -0.0605875152998776
  - -0.06966544267645859
  - -0.06629946960424316
  - -0.0675234598123215
  train_neg_hamming_loss_weighted:
  - -0.0642913362440227
  - -0.058520474584294935
  - -0.0694228289385922
  - -0.06637873754152823
  - -0.07117080994386527
  train_neg_hamming_loss_weighted_oob:
  - -0.06830838456740622
  - -0.06230028404047576
  - -0.07086797990128507
  - -0.06998523440383904
  - -0.07489456176304612
  train_neg_label_ranking_loss:
  - -0.03505173039201768
  - -0.030490463677023183
  - -0.03467345768559859
  - -0.03690931351670066
  - -0.03602993199863925
  train_neg_label_ranking_loss_oob:
  - -0.06712438031264979
  - -0.06607198186370553
  - -0.06534289227517681
  - -0.07022720512375095
  - -0.06574329667267424
  train_precision_macro:
  - 0.9335985312117503
  - 0.9398204814361485
  - 0.9277845777233782
  - 0.932170542635659
  - 0.9313545491636066
  train_precision_macro_oob:
  - 0.9341085271317829
  - 0.9394124847001225
  - 0.9303345573235413
  - 0.933700530395757
  - 0.9324765401876786
  train_precision_micro:
  - 0.9335985312117503
  - 0.9398204814361485
  - 0.9277845777233782
  - 0.9321705426356589
  - 0.9313545491636067
  train_precision_micro_oob:
  - 0.9341085271317829
  - 0.9394124847001224
  - 0.9303345573235414
  - 0.9337005303957568
  - 0.9324765401876784
  train_precision_samples:
  - 0.9335985312117503
  - 0.9398204814361486
  - 0.9277845777233783
  - 0.9321705426356589
  - 0.9313545491636067
  train_precision_samples_oob:
  - 0.9341085271317829
  - 0.9394124847001224
  - 0.9303345573235414
  - 0.9337005303957568
  - 0.9324765401876784
  train_precision_weighted:
  - 0.9357086637559775
  - 0.9414795254157051
  - 0.9305771710614077
  - 0.9336212624584718
  - 0.9288291900561347
  train_precision_weighted_oob:
  - 0.9316916154325937
  - 0.9376997159595242
  - 0.929132020098715
  - 0.9300147655961608
  - 0.9251054382369538
  train_recall_macro:
  - 0.9335985312117503
  - 0.9398204814361485
  - 0.9277845777233782
  - 0.932170542635659
  - 0.9313545491636066
  train_recall_macro_oob:
  - 0.9341085271317829
  - 0.9394124847001225
  - 0.9303345573235413
  - 0.933700530395757
  - 0.9324765401876786
  train_recall_micro:
  - 0.9335985312117503
  - 0.9398204814361485
  - 0.9277845777233782
  - 0.9321705426356589
  - 0.9313545491636067
  train_recall_micro_oob:
  - 0.9341085271317829
  - 0.9394124847001224
  - 0.9303345573235414
  - 0.9337005303957568
  - 0.9324765401876784
  train_recall_samples:
  - 0.9335985312117503
  - 0.9398204814361486
  - 0.9277845777233783
  - 0.9321705426356589
  - 0.9313545491636067
  train_recall_samples_oob:
  - 0.9341085271317829
  - 0.9394124847001224
  - 0.9303345573235414
  - 0.9337005303957568
  - 0.9324765401876784
  train_recall_weighted:
  - 0.9357086637559775
  - 0.9414795254157051
  - 0.9305771710614077
  - 0.9336212624584718
  - 0.9288291900561347
  train_recall_weighted_oob:
  - 0.9316916154325937
  - 0.9376997159595242
  - 0.929132020098715
  - 0.9300147655961608
  - 0.9251054382369538
  train_roc_auc_macro:
  - 0.9614034206122234
  - 0.9606675921821539
  - 0.9585577472429008
  - 0.9587392652065565
  - 0.957919311957124
  train_roc_auc_macro_oob:
  - 0.926397144468067
  - 0.9189845848384679
  - 0.9236002915064677
  - 0.9171055716581149
  - 0.9146375959271246
  train_roc_auc_micro:
  - 0.9575801142738262
  - 0.9611059242563833
  - 0.9549193102625629
  - 0.9568344289973776
  - 0.9559803880290696
  train_roc_auc_micro_oob:
  - 0.9278145976928938
  - 0.9277696433271914
  - 0.9264529828513319
  - 0.9248884578079534
  - 0.9237718370578412
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9647185868674379
  - 0.9664191697977627
  - 0.9638226332792864
  - 0.9650942762230179
  - 0.9619225237077842
  train_roc_auc_weighted_oob:
  - 0.929713021904497
  - 0.9262115041253185
  - 0.930803475616155
  - 0.9274182390753812
  - 0.9240240664575253
start: 2023-12-12 17:09:58.420047
wrapper: null
