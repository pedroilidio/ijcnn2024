active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzC0CAzMzMzMwMwEBmZmZmZh7AwJmZmZmZEUCAMzMzMzMLQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 18:29:23.548871
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 5aa8b6ba6b1df88152c41d5c1897fdad536cea75cc68e6bc9391bd3dd8675475
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5aa8b6b_20231212T182335870681_embedding_proba__7_scene.yml
results:
  fit_time:
  - 259.05354857444763
  - 223.4460518360138
  - 265.1278169155121
  - 259.23324370384216
  - 270.05072689056396
  score_time:
  - 17.62379550933838
  - 20.985271453857422
  - 17.589670419692993
  - 18.65747332572937
  - 17.91938090324402
  test_average_precision_macro:
  - 0.837945053997041
  - 0.8169563293992507
  - 0.8436571286612713
  - 0.8138863672818535
  - 0.815037087907322
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.819414810645148
  - 0.796286460720295
  - 0.8166751846141409
  - 0.7972834028218152
  - 0.790238833064554
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.882479079497908
  - 0.8649828178694158
  - 0.8772324471710975
  - 0.8626834381551363
  - 0.884205020920502
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8257856217279341
  - 0.8023265156876758
  - 0.8324372709644888
  - 0.8023056282770704
  - 0.803143933247606
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9218967921896791
  - 0.9216494845360824
  - 0.923653715064758
  - 0.9140461215932915
  - 0.9222454672245467
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9218967921896792
  - 0.9216494845360824
  - 0.923653715064758
  - 0.9140461215932913
  - 0.9222454672245467
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9218967921896791
  - 0.9216494845360826
  - 0.9236537150647579
  - 0.9140461215932913
  - 0.9222454672245468
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9169682234535792
  - 0.9169008478286829
  - 0.9190564512293717
  - 0.9092178431801071
  - 0.9176910265263841
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8581099477632268
  - 0.858065253850814
  - 0.8606164797103161
  - 0.8447055744275923
  - 0.8582459005728317
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8551099611901681
  - 0.8546845124282982
  - 0.8581380620645979
  - 0.8416988416988417
  - 0.8557101261727597
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8799063558477784
  - 0.8774177712322042
  - 0.8824617781672996
  - 0.8674752920035939
  - 0.879756923689978
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8498327371902576
  - 0.8500523961127385
  - 0.8529466732433961
  - 0.8367265765336817
  - 0.8505013938849397
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8824790794979076
  - 0.8649828178694153
  - 0.8772324471710973
  - 0.8626834381551357
  - 0.8842050209205018
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7337709612801159
  - 0.7299246532394505
  - 0.7352099465183679
  - 0.7074439942407666
  - 0.73394432538149
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7256378931194409
  - 0.7215062707077146
  - 0.7278747222885975
  - 0.6986396241065602
  - 0.7248020810461803
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7210801241943708
  - 0.7038243397754526
  - 0.7174828438459582
  - 0.6934062993523993
  - 0.7151147064066081
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7189344540687452
  - 0.7162024992068573
  - 0.7210724672504545
  - 0.694270457709962
  - 0.7212112121126676
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9138960355753188
  - 0.9002633592091104
  - 0.9092426639294328
  - 0.8988495388707012
  - 0.9148246990272388
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4539748953974896
  - -1.4721649484536083
  - -1.4049079754601228
  - -1.490566037735849
  - -1.4372384937238494
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07810320781032078
  - -0.07835051546391752
  - -0.076346284935242
  - -0.0859538784067086
  - -0.07775453277545329
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07810320781032078
  - -0.07835051546391752
  - -0.076346284935242
  - -0.0859538784067086
  - -0.07775453277545327
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07810320781032078
  - -0.07835051546391752
  - -0.07634628493524198
  - -0.0859538784067086
  - -0.07775453277545329
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0830317765464209
  - -0.08309915217131714
  - -0.08094354877062823
  - -0.09078215681989268
  - -0.08230897347361579
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0710774058577406
  - -0.07871134020618556
  - -0.06825153374233128
  - -0.07861635220125786
  - -0.06956066945606694
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9218967921896791
  - 0.9216494845360824
  - 0.923653715064758
  - 0.9140461215932915
  - 0.9222454672245467
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9218967921896792
  - 0.9216494845360824
  - 0.923653715064758
  - 0.9140461215932913
  - 0.9222454672245467
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9218967921896791
  - 0.9216494845360826
  - 0.9236537150647579
  - 0.9140461215932913
  - 0.9222454672245468
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9169682234535792
  - 0.9169008478286829
  - 0.9190564512293717
  - 0.9092178431801071
  - 0.9176910265263841
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9218967921896791
  - 0.9216494845360824
  - 0.923653715064758
  - 0.9140461215932915
  - 0.9222454672245467
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9218967921896792
  - 0.9216494845360824
  - 0.923653715064758
  - 0.9140461215932913
  - 0.9222454672245467
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9218967921896791
  - 0.9216494845360826
  - 0.9236537150647579
  - 0.9140461215932913
  - 0.9222454672245468
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9169682234535792
  - 0.9169008478286829
  - 0.9190564512293717
  - 0.9092178431801071
  - 0.9176910265263841
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9386585120132177
  - 0.9324951166400686
  - 0.9457515827837808
  - 0.9317103986344928
  - 0.9325828570487161
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.939914565020948
  - 0.9346736547823504
  - 0.9457115881534486
  - 0.9342402190098437
  - 0.9336042812521919
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9289225941422594
  - 0.9212886597938146
  - 0.9317484662576687
  - 0.9213836477987422
  - 0.930439330543933
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9325319646535657
  - 0.9258968123560307
  - 0.9396139250049319
  - 0.9266333506999709
  - 0.926138185430349
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9989038499933881
  - 0.9989694920768252
  - 0.9990031884153036
  - 0.9990156102027908
  - 0.9990097700129938
  train_average_precision_macro_oob:
  - 0.9894341762295674
  - 0.9897750912087813
  - 0.9910344736843576
  - 0.9901431488637112
  - 0.990285848547192
  train_average_precision_micro:
  - 0.9989454713725225
  - 0.9990294717495757
  - 0.999053771672327
  - 0.9990621913629045
  - 0.9990406438946937
  train_average_precision_micro_oob:
  - 0.9892703336979991
  - 0.989777706762186
  - 0.9908056186346745
  - 0.9900036048891658
  - 0.9900284099198667
  train_average_precision_samples:
  - 0.9945999654397789
  - 0.9955341657995145
  - 0.996306916927355
  - 0.9952504317789292
  - 0.9949887679281149
  train_average_precision_samples_oob:
  - 0.9856143079315708
  - 0.9870707596253901
  - 0.9858880778588808
  - 0.9863644214162349
  - 0.9868843960601347
  train_average_precision_weighted:
  - 0.9988651138447652
  - 0.998921095181992
  - 0.9989582431062038
  - 0.9989645703058894
  - 0.998963906650227
  train_average_precision_weighted_oob:
  - 0.9890312999626775
  - 0.989415188121723
  - 0.9906215459320681
  - 0.98973458730988
  - 0.9899095000463265
  train_f1_macro:
  - 0.9895455330914119
  - 0.9895074575095387
  - 0.9893117831074035
  - 0.9894645941278065
  - 0.9895455330914119
  train_f1_macro_oob:
  - 0.9790046656298602
  - 0.9785813388831078
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654226
  train_f1_micro:
  - 0.9895455330914118
  - 0.9895074575095387
  - 0.9893117831074035
  - 0.9894645941278065
  - 0.9895455330914118
  train_f1_micro_oob:
  - 0.97900466562986
  - 0.9785813388831078
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654225
  train_f1_samples:
  - 0.9895455330914119
  - 0.9895074575095386
  - 0.9893117831074035
  - 0.9894645941278066
  - 0.9895455330914119
  train_f1_samples_oob:
  - 0.97900466562986
  - 0.9785813388831079
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654225
  train_f1_weighted:
  - 0.9892444478553226
  - 0.9892533529468325
  - 0.9889994360365109
  - 0.9891011227505508
  - 0.9891358191648947
  train_f1_weighted_oob:
  - 0.978826221527005
  - 0.9781223397052035
  - 0.9788569130382412
  - 0.9793270014112717
  - 0.9795776640796588
  train_jaccard_macro:
  - 0.9793392407304108
  - 0.9792631233783085
  - 0.9788841896854811
  - 0.9791819841125644
  - 0.9793462206145452
  train_jaccard_macro_oob:
  - 0.9589427277021766
  - 0.9581412909072856
  - 0.9597382018636574
  - 0.9604741080969749
  - 0.9609141177672026
  train_jaccard_micro:
  - 0.9793073963232151
  - 0.9792328155839698
  - 0.9788496259994841
  - 0.9791488634421467
  - 0.9793073963232151
  train_jaccard_micro_oob:
  - 0.9588728103579589
  - 0.9580609559385347
  - 0.9596424010217114
  - 0.9603859827323514
  - 0.9608640406607369
  train_jaccard_samples:
  - 0.9825964600459158
  - 0.982557851444428
  - 0.9820000993097968
  - 0.9823094004441155
  - 0.9825594312375029
  train_jaccard_samples_oob:
  - 0.9654397788145845
  - 0.9647069025320847
  - 0.9659739808332092
  - 0.9666049839624969
  - 0.9670073317040656
  train_jaccard_weighted:
  - 0.9787480355207286
  - 0.9787637809609653
  - 0.9782707760619391
  - 0.9784685220730442
  - 0.9785427392051059
  train_jaccard_weighted_oob:
  - 0.9585977565273607
  - 0.9572596744124902
  - 0.9586817928162955
  - 0.9595765113129981
  - 0.9600216048698609
  train_label_ranking_average_precision_score:
  - 0.9945999654397788
  - 0.9955341657995144
  - 0.9963069169273548
  - 0.9952504317789291
  - 0.9949887679281147
  train_label_ranking_average_precision_score_oob:
  - 0.9856143079315706
  - 0.9870707596253901
  - 0.9858880778588807
  - 0.9863644214162347
  - 0.9868843960601346
  train_matthews_corrcoef_macro:
  - 0.9645269791489057
  - 0.9643962249916784
  - 0.9639716688536423
  - 0.964417160223647
  - 0.9648424948619682
  train_matthews_corrcoef_macro_oob:
  - 0.9270489097137132
  - 0.9264291127838394
  - 0.9298105347466219
  - 0.9305578584936978
  - 0.9315456301929984
  train_matthews_corrcoef_micro:
  - 0.9641118700893012
  - 0.9640924273526166
  - 0.9635074755392204
  - 0.963825158590686
  - 0.9641500765623799
  train_matthews_corrcoef_micro_oob:
  - 0.9273253543558526
  - 0.9260567422410343
  - 0.9291198378810739
  - 0.9301000469468168
  - 0.9310599583320835
  train_matthews_corrcoef_samples:
  - 0.9616691060191835
  - 0.9630974505063075
  - 0.9612307588173473
  - 0.9615994270648914
  - 0.9633033919056961
  train_matthews_corrcoef_samples_oob:
  - 0.9165668737427316
  - 0.9152294973006488
  - 0.9206834436300468
  - 0.9190803336361116
  - 0.9209857602377536
  train_matthews_corrcoef_weighted:
  - 0.9638406837513611
  - 0.9638551548323564
  - 0.9632403133405358
  - 0.9635214802352264
  - 0.9638006097976545
  train_matthews_corrcoef_weighted_oob:
  - 0.9270663470141941
  - 0.9256092883418647
  - 0.9286267183667856
  - 0.9296489535872029
  - 0.9306563939094561
  train_ndgc:
  - 0.9960145264256333
  - 0.9967263388397029
  - 0.9972967851872755
  - 0.9965162986287224
  - 0.9963231654261306
  train_ndgc_oob:
  - 0.9897320159132408
  - 0.9908502362142639
  - 0.9898148297194768
  - 0.9900355330691978
  - 0.9905638368592184
  train_neg_coverage_error:
  - -1.0824261275272162
  - -1.0848074921956297
  - -1.086548488008342
  - -1.0808290155440414
  - -1.0834629341627786
  train_neg_coverage_error_oob:
  - -1.1145671332296527
  - -1.1144640998959416
  - -1.1214807090719499
  - -1.1139896373056994
  - -1.115603939865215
  train_neg_hamming_loss_macro:
  - -0.010454466908588216
  - -0.010492542490461325
  - -0.010688216892596455
  - -0.010535405872193438
  - -0.010454466908588214
  train_neg_hamming_loss_macro_oob:
  - -0.020995334370139968
  - -0.021418661116892126
  - -0.02059436913451512
  - -0.02020725388601036
  - -0.019958527734577503
  train_neg_hamming_loss_micro:
  - -0.010454466908588214
  - -0.010492542490461325
  - -0.010688216892596455
  - -0.010535405872193437
  - -0.010454466908588214
  train_neg_hamming_loss_micro_oob:
  - -0.020995334370139968
  - -0.021418661116892126
  - -0.02059436913451512
  - -0.020207253886010364
  - -0.0199585277345775
  train_neg_hamming_loss_samples:
  - -0.010454466908588214
  - -0.010492542490461323
  - -0.010688216892596455
  - -0.010535405872193437
  - -0.010454466908588214
  train_neg_hamming_loss_samples_oob:
  - -0.020995334370139968
  - -0.021418661116892126
  - -0.020594369134515116
  - -0.020207253886010364
  - -0.019958527734577496
  train_neg_hamming_loss_weighted:
  - -0.010755552144677412
  - -0.010746647053167383
  - -0.011000563963489035
  - -0.010898877249449152
  - -0.010864180835105172
  train_neg_hamming_loss_weighted_oob:
  - -0.021173778472995
  - -0.021877660294796535
  - -0.021143086961758838
  - -0.020672998588728373
  - -0.020422335920341192
  train_neg_label_ranking_loss:
  - -0.0022032141005702438
  - -0.0018600416233090532
  - -0.0015510948905109489
  - -0.0019300518134715027
  - -0.0020347330222913428
  train_neg_label_ranking_loss_oob:
  - -0.007801969932607569
  - -0.006919875130072841
  - -0.008016162669447342
  - -0.00822538860103627
  - -0.007776049766718507
  train_precision_macro:
  - 0.9895455330914119
  - 0.9895074575095387
  - 0.9893117831074035
  - 0.9894645941278065
  - 0.9895455330914119
  train_precision_macro_oob:
  - 0.9790046656298602
  - 0.9785813388831078
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654226
  train_precision_micro:
  - 0.9895455330914118
  - 0.9895074575095387
  - 0.9893117831074035
  - 0.9894645941278065
  - 0.9895455330914118
  train_precision_micro_oob:
  - 0.97900466562986
  - 0.9785813388831078
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654225
  train_precision_samples:
  - 0.9895455330914119
  - 0.9895074575095386
  - 0.9893117831074035
  - 0.9894645941278066
  - 0.9895455330914119
  train_precision_samples_oob:
  - 0.97900466562986
  - 0.9785813388831079
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654225
  train_precision_weighted:
  - 0.9892444478553226
  - 0.9892533529468325
  - 0.9889994360365109
  - 0.9891011227505508
  - 0.9891358191648947
  train_precision_weighted_oob:
  - 0.978826221527005
  - 0.9781223397052035
  - 0.9788569130382412
  - 0.9793270014112717
  - 0.9795776640796588
  train_recall_macro:
  - 0.9895455330914119
  - 0.9895074575095387
  - 0.9893117831074035
  - 0.9894645941278065
  - 0.9895455330914119
  train_recall_macro_oob:
  - 0.9790046656298602
  - 0.9785813388831078
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654226
  train_recall_micro:
  - 0.9895455330914118
  - 0.9895074575095387
  - 0.9893117831074035
  - 0.9894645941278065
  - 0.9895455330914118
  train_recall_micro_oob:
  - 0.97900466562986
  - 0.9785813388831078
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654225
  train_recall_samples:
  - 0.9895455330914119
  - 0.9895074575095386
  - 0.9893117831074035
  - 0.9894645941278066
  - 0.9895455330914119
  train_recall_samples_oob:
  - 0.97900466562986
  - 0.9785813388831079
  - 0.9794056308654849
  - 0.9797927461139896
  - 0.9800414722654225
  train_recall_weighted:
  - 0.9892444478553226
  - 0.9892533529468325
  - 0.9889994360365109
  - 0.9891011227505508
  - 0.9891358191648947
  train_recall_weighted_oob:
  - 0.978826221527005
  - 0.9781223397052035
  - 0.9788569130382412
  - 0.9793270014112717
  - 0.9795776640796588
  train_roc_auc_macro:
  - 0.999753040997558
  - 0.9997624959891377
  - 0.9997712062969651
  - 0.9997756042287206
  - 0.999774156206762
  train_roc_auc_macro_oob:
  - 0.9964582004140147
  - 0.9967294555040925
  - 0.9973400443848194
  - 0.9967210949936631
  - 0.996490717941831
  train_roc_auc_micro:
  - 0.999773446286542
  - 0.9997901263816403
  - 0.9997945137895687
  - 0.9998003902789607
  - 0.999793476227655
  train_roc_auc_micro_oob:
  - 0.9966914099757624
  - 0.9968620673880371
  - 0.9974517764111356
  - 0.9968503365979313
  - 0.996689723320158
  train_roc_auc_samples:
  - 0.9977967858994298
  - 0.9981399583766909
  - 0.9984489051094891
  - 0.9980699481865285
  - 0.9979652669777087
  train_roc_auc_samples_oob:
  - 0.9921980300673925
  - 0.993080124869927
  - 0.9919838373305526
  - 0.9917746113989637
  - 0.9922239502332815
  train_roc_auc_weighted:
  - 0.9997410268611439
  - 0.9997482012766549
  - 0.9997578590244037
  - 0.9997613745797739
  - 0.9997608957097022
  train_roc_auc_weighted_oob:
  - 0.9962168733016866
  - 0.9965553583497541
  - 0.9971821096971384
  - 0.9965543793155862
  - 0.996242004085855
start: 2023-12-12 18:23:35.870681
wrapper: null
