active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0DAzMzMzMwEwACamZmZmdk/gGZmZmZm9j+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:57:32.133064
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__9
  params: {}
hash: c12cbedbba3bf07dc994b1f65475e4523fce51f393500f7ba167d299ab100dfc
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c12cbed_20231221T104059920570_embedding_weak__9_VirusPseAAC.yml
results:
  fit_time:
  - 944.5638291835785
  - 947.3741953372955
  - 975.5151755809784
  - 979.0223231315613
  - 982.0500526428223
  score_time:
  - 3.8542606830596924
  - 3.8903679847717285
  - 3.4354779720306396
  - 3.8594205379486084
  - 3.7292964458465576
  test_average_precision_macro:
  - 0.3223890392996691
  - 0.43329865034375814
  - 0.494581907910775
  - 0.45937315455959293
  - 0.3043271744767608
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.390186435717793
  - 0.4466523852241583
  - 0.48616971776821466
  - 0.4434117316979471
  - 0.43264370930660684
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6615384615384615
  - 0.6768308080808081
  - 0.7321138211382113
  - 0.663125
  - 0.6728682170542636
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.36228904456274286
  - 0.44580583053912776
  - 0.5130086893433601
  - 0.4478197292196598
  - 0.41643092382357166
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7649572649572649
  - 0.8030303030303031
  - 0.7886178861788617
  - 0.7916666666666666
  - 0.7984496124031008
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7649572649572649
  - 0.803030303030303
  - 0.7886178861788617
  - 0.7916666666666666
  - 0.7984496124031008
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7649572649572648
  - 0.8030303030303032
  - 0.7886178861788619
  - 0.7916666666666667
  - 0.7984496124031009
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6205128205128205
  - 0.6867201426024954
  - 0.6614634146341463
  - 0.67
  - 0.689922480620155
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6558708336525118
  - 0.6965264154287675
  - 0.6813362527447945
  - 0.6829320969220402
  - 0.6889758296838869
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6193771626297578
  - 0.6708860759493671
  - 0.6510067114093959
  - 0.6551724137931034
  - 0.6645161290322581
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6282051282051284
  - 0.6812770562770564
  - 0.6678281068524973
  - 0.6678571428571429
  - 0.6755260243632337
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4803722736818893
  - 0.5435333515682348
  - 0.515941828615254
  - 0.5229111564490839
  - 0.5457725465879101
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6615384615384615
  - 0.6768308080808081
  - 0.7321138211382113
  - 0.6631249999999999
  - 0.6728682170542635
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.04955991855140137
  - 0.011389450009563104
  - 0.017037040917081664
  - 0.031748394455618036
  - 0.01641865062882063
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.004170288281141495
  - 0.13804169488873558
  - 0.15353025592813738
  - 0.19194297398747862
  - 0.1361170249461594
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.001210605012819432
  - 0.06280548548901808
  - 0.10810867151301648
  - 0.11861450479002464
  - 0.06857403018722126
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.10524363627474041
  - 0.021961651124877263
  - 0.03475556347084659
  - 0.0647667246894608
  - 0.03283730125764126
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7480511220241175
  - 0.7593921329284515
  - 0.8024801298416032
  - 0.7484834202184159
  - 0.7571684046442257
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.4615384615384617
  - -2.159090909090909
  - -2.097560975609756
  - -2.35
  - -2.3255813953488373
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23504273504273507
  - -0.19696969696969693
  - -0.21138211382113825
  - -0.20833333333333334
  - -0.20155038759689922
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23504273504273504
  - -0.19696969696969696
  - -0.21138211382113822
  - -0.20833333333333334
  - -0.20155038759689922
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23504273504273493
  - -0.1969696969696969
  - -0.2113821138211382
  - -0.20833333333333331
  - -0.20155038759689917
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3794871794871794
  - -0.31327985739750447
  - -0.33853658536585374
  - -0.33
  - -0.31007751937984496
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2316951566951567
  - -0.2039141414141414
  - -0.17804878048780487
  - -0.221875
  - -0.22267441860465115
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7649572649572649
  - 0.8030303030303031
  - 0.7886178861788617
  - 0.7916666666666666
  - 0.7984496124031008
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7649572649572649
  - 0.803030303030303
  - 0.7886178861788617
  - 0.7916666666666666
  - 0.7984496124031008
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7649572649572648
  - 0.8030303030303032
  - 0.7886178861788619
  - 0.7916666666666667
  - 0.7984496124031009
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6205128205128205
  - 0.6867201426024954
  - 0.6614634146341463
  - 0.67
  - 0.689922480620155
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7649572649572649
  - 0.8030303030303031
  - 0.7886178861788617
  - 0.7916666666666666
  - 0.7984496124031008
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7649572649572649
  - 0.803030303030303
  - 0.7886178861788617
  - 0.7916666666666666
  - 0.7984496124031008
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7649572649572648
  - 0.8030303030303032
  - 0.7886178861788619
  - 0.7916666666666667
  - 0.7984496124031009
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6205128205128205
  - 0.6867201426024954
  - 0.6614634146341463
  - 0.67
  - 0.689922480620155
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.549025755004016
  - 0.6467147803415864
  - 0.7319472834178716
  - 0.6646148413251994
  - 0.5916323533791252
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7584782608695652
  - 0.7963730092976158
  - 0.8137755102040817
  - 0.7916842105263158
  - 0.7713365539452496
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7683048433048433
  - 0.7960858585858585
  - 0.821951219512195
  - 0.778125
  - 0.7773255813953488
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.4952738667521276
  - 0.6191020642775029
  - 0.6837016428192899
  - 0.6123781291172596
  - 0.6053998209665354
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9101316128402507
  - 0.9176578505163976
  - 0.8951334721626982
  - 0.8973902571723479
  - 0.9803702015645239
  train_average_precision_macro_oob:
  - 0.38719774285314196
  - 0.38547897471066755
  - 0.3666151722269375
  - 0.4394470438657195
  - 0.49000315643526093
  train_average_precision_micro:
  - 0.8775006830351971
  - 0.8668208785996067
  - 0.8103739328504616
  - 0.859208904217181
  - 0.8867302718436169
  train_average_precision_micro_oob:
  - 0.5764917445573358
  - 0.5728611585533727
  - 0.5027022487952486
  - 0.5899997611985598
  - 0.6515666347939125
  train_average_precision_samples:
  - 0.8806547619047619
  - 0.887525562372188
  - 0.858433734939759
  - 0.87624750499002
  - 0.8887195121951219
  train_average_precision_samples_oob:
  - 0.7306878306878307
  - 0.7195807770961145
  - 0.6933065595716198
  - 0.7241350632069194
  - 0.7494241192411925
  train_average_precision_weighted:
  - 0.9517436602954384
  - 0.9523744700691321
  - 0.9218016072959356
  - 0.9373948017688872
  - 0.9757618281239092
  train_average_precision_weighted_oob:
  - 0.5419073683073877
  - 0.5451637628511982
  - 0.4963271491343594
  - 0.5904847416132508
  - 0.6295750026374862
  train_f1_macro:
  - 0.9236111111111112
  - 0.9253578732106339
  - 0.9196787148594378
  - 0.9211576846307387
  - 0.9227642276422764
  train_f1_macro_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333334
  - 0.8414634146341463
  train_f1_micro:
  - 0.9236111111111112
  - 0.9253578732106339
  - 0.9196787148594378
  - 0.9211576846307385
  - 0.9227642276422764
  train_f1_micro_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333334
  - 0.8414634146341463
  train_f1_samples:
  - 0.9236111111111113
  - 0.9253578732106338
  - 0.9196787148594379
  - 0.9211576846307384
  - 0.9227642276422763
  train_f1_samples_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333331
  - 0.8414634146341463
  train_f1_weighted:
  - 0.9381777463460632
  - 0.9445410981900315
  - 0.9322438267923178
  - 0.9349024722831564
  - 0.9381143065161995
  train_f1_weighted_oob:
  - 0.7482319660537482
  - 0.7308549278149132
  - 0.722056543003698
  - 0.7562992826228729
  - 0.771053270234195
  train_jaccard_macro:
  - 0.8614136417784883
  - 0.8653322192801531
  - 0.8540795939544797
  - 0.8565773103142361
  - 0.8599216158651682
  train_jaccard_macro_oob:
  - 0.724875371334531
  - 0.7119981992198362
  - 0.7079507617730161
  - 0.7274446773798143
  - 0.737909380458205
  train_jaccard_micro:
  - 0.8580645161290322
  - 0.8610846812559467
  - 0.8513011152416357
  - 0.8538390379278445
  - 0.8566037735849057
  train_jaccard_micro_oob:
  - 0.7099236641221374
  - 0.6949740034662045
  - 0.6895674300254453
  - 0.7142857142857143
  - 0.7263157894736842
  train_jaccard_samples:
  - 0.8741496598639454
  - 0.8771545427987146
  - 0.8666092943201376
  - 0.8708297690333617
  - 0.8736933797909407
  train_jaccard_samples_oob:
  - 0.7273242630385488
  - 0.7099035933391762
  - 0.70754446356856
  - 0.7345309381237525
  - 0.744773519163763
  train_jaccard_weighted:
  - 0.886711025356267
  - 0.8992511749901604
  - 0.8757069881633871
  - 0.8802622937673142
  - 0.886596521158179
  train_jaccard_weighted_oob:
  - 0.6086435270321443
  - 0.5880112094367888
  - 0.5787950338100569
  - 0.6176265135269409
  - 0.6359920471344946
  train_label_ranking_average_precision_score:
  - 0.880654761904762
  - 0.887525562372188
  - 0.8584337349397588
  - 0.87624750499002
  - 0.8887195121951218
  train_label_ranking_average_precision_score_oob:
  - 0.7306878306878305
  - 0.7195807770961145
  - 0.6933065595716197
  - 0.7241350632069194
  - 0.7494241192411923
  train_matthews_corrcoef_macro:
  - 0.3090579889316632
  - 0.31662719049361066
  - 0.3039849365556277
  - 0.3049930620694081
  - 0.30824005252110204
  train_matthews_corrcoef_macro_oob:
  - 0.11397060449951572
  - 0.0957126894589145
  - 0.0866942384764454
  - 0.11894076858146208
  - 0.14446025186464742
  train_matthews_corrcoef_micro:
  - 0.7499077312678354
  - 0.7613418153622786
  - 0.7370269565964918
  - 0.7413086722018024
  - 0.7507774396636883
  train_matthews_corrcoef_micro_oob:
  - 0.34804990983737427
  - 0.31162364997240033
  - 0.31066874624585533
  - 0.3780416270960805
  - 0.4235321642035304
  train_matthews_corrcoef_samples:
  - 0.6600231760440716
  - 0.657240444165477
  - 0.6250514748467283
  - 0.6521636600542332
  - 0.6511967510023691
  train_matthews_corrcoef_samples_oob:
  - 0.22200813450060136
  - 0.1863550430815107
  - 0.2325238412052557
  - 0.2816813358464287
  - 0.29404320498650127
  train_matthews_corrcoef_weighted:
  - 0.6288830715663493
  - 0.6429585711002325
  - 0.6181089636904544
  - 0.6205772562855177
  - 0.6306614778136054
  train_matthews_corrcoef_weighted_oob:
  - 0.23141054987700588
  - 0.19481699360576862
  - 0.17662425185577968
  - 0.2422323011130885
  - 0.29404315176912565
  train_ndgc:
  - 0.9133150190910952
  - 0.918995010267334
  - 0.8962858130407214
  - 0.9101656616631093
  - 0.918643904727824
  train_ndgc_oob:
  - 0.7999350897070772
  - 0.7916197079544601
  - 0.7717948808587374
  - 0.7954548416618356
  - 0.8133575147923429
  train_neg_coverage_error:
  - -1.5773809523809523
  - -1.5950920245398772
  - -1.608433734939759
  - -1.6107784431137724
  - -1.5548780487804879
  train_neg_coverage_error_oob:
  - -2.136904761904762
  - -2.294478527607362
  - -2.2951807228915664
  - -2.197604790419162
  - -2.182926829268293
  train_neg_hamming_loss_macro:
  - -0.0763888888888889
  - -0.07464212678936605
  - -0.08032128514056225
  - -0.07884231536926146
  - -0.0772357723577236
  train_neg_hamming_loss_macro_oob:
  - -0.16964285714285712
  - -0.17995910020449898
  - -0.18373493975903618
  - -0.16666666666666666
  - -0.15853658536585366
  train_neg_hamming_loss_micro:
  - -0.0763888888888889
  - -0.07464212678936605
  - -0.08032128514056225
  - -0.07884231536926148
  - -0.07723577235772358
  train_neg_hamming_loss_micro_oob:
  - -0.16964285714285715
  - -0.17995910020449898
  - -0.18373493975903615
  - -0.16666666666666666
  - -0.15853658536585366
  train_neg_hamming_loss_samples:
  - -0.07638888888888888
  - -0.07464212678936603
  - -0.08032128514056225
  - -0.07884231536926148
  - -0.07723577235772358
  train_neg_hamming_loss_samples_oob:
  - -0.16964285714285715
  - -0.17995910020449898
  - -0.18373493975903615
  - -0.16666666666666663
  - -0.15853658536585366
  train_neg_hamming_loss_weighted:
  - -0.06182225365393683
  - -0.05545890180996855
  - -0.06775617320768221
  - -0.06509752771684353
  - -0.06188569348380051
  train_neg_hamming_loss_weighted_oob:
  - -0.25176803394625175
  - -0.2691450721850868
  - -0.277943456996302
  - -0.2437007173771269
  - -0.2289467297658051
  train_neg_label_ranking_loss:
  - -0.07060185185185185
  - -0.06763803680981595
  - -0.07627175368139223
  - -0.07551563539587491
  - -0.0641768292682927
  train_neg_label_ranking_loss_oob:
  - -0.18733465608465608
  - -0.20896387184730741
  - -0.21343708165997324
  - -0.19540918163672655
  - -0.19127710027100267
  train_precision_macro:
  - 0.9236111111111112
  - 0.9253578732106339
  - 0.9196787148594378
  - 0.9211576846307387
  - 0.9227642276422764
  train_precision_macro_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333334
  - 0.8414634146341463
  train_precision_micro:
  - 0.9236111111111112
  - 0.9253578732106339
  - 0.9196787148594378
  - 0.9211576846307385
  - 0.9227642276422764
  train_precision_micro_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333334
  - 0.8414634146341463
  train_precision_samples:
  - 0.9236111111111113
  - 0.9253578732106338
  - 0.9196787148594379
  - 0.9211576846307384
  - 0.9227642276422763
  train_precision_samples_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333331
  - 0.8414634146341463
  train_precision_weighted:
  - 0.9381777463460632
  - 0.9445410981900315
  - 0.9322438267923178
  - 0.9349024722831564
  - 0.9381143065161995
  train_precision_weighted_oob:
  - 0.7482319660537482
  - 0.7308549278149132
  - 0.722056543003698
  - 0.7562992826228729
  - 0.771053270234195
  train_recall_macro:
  - 0.9236111111111112
  - 0.9253578732106339
  - 0.9196787148594378
  - 0.9211576846307387
  - 0.9227642276422764
  train_recall_macro_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333334
  - 0.8414634146341463
  train_recall_micro:
  - 0.9236111111111112
  - 0.9253578732106339
  - 0.9196787148594378
  - 0.9211576846307385
  - 0.9227642276422764
  train_recall_micro_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333334
  - 0.8414634146341463
  train_recall_samples:
  - 0.9236111111111113
  - 0.9253578732106338
  - 0.9196787148594379
  - 0.9211576846307384
  - 0.9227642276422763
  train_recall_samples_oob:
  - 0.8303571428571429
  - 0.820040899795501
  - 0.8162650602409639
  - 0.8333333333333331
  - 0.8414634146341463
  train_recall_weighted:
  - 0.9381777463460632
  - 0.9445410981900315
  - 0.9322438267923178
  - 0.9349024722831564
  - 0.9381143065161995
  train_recall_weighted_oob:
  - 0.7482319660537482
  - 0.7308549278149132
  - 0.722056543003698
  - 0.7562992826228729
  - 0.771053270234195
  train_roc_auc_macro:
  - 0.9929121748374218
  - 0.9931741417027037
  - 0.9850149745432765
  - 0.9873247461590617
  - 0.9951167252071436
  train_roc_auc_macro_oob:
  - 0.7043280329889311
  - 0.691749297615146
  - 0.6745273160841837
  - 0.731534646021459
  - 0.7592860230205177
  train_roc_auc_micro:
  - 0.958792963663612
  - 0.9555824481197616
  - 0.947040925755044
  - 0.9533168316831683
  - 0.9612029253477187
  train_roc_auc_micro_oob:
  - 0.8201299658501829
  - 0.808627390716943
  - 0.8026722697458663
  - 0.8261881188118813
  - 0.8364435803104528
  train_roc_auc_samples:
  - 0.9293981481481481
  - 0.9323619631901842
  - 0.9237282463186077
  - 0.9244843646041249
  - 0.9358231707317073
  train_roc_auc_samples_oob:
  - 0.8126653439153438
  - 0.7910361281526924
  - 0.7865629183400269
  - 0.8045908183632735
  - 0.8087228997289971
  train_roc_auc_weighted:
  - 0.9925716204661402
  - 0.9915486584873427
  - 0.9771875194594932
  - 0.983775545379779
  - 0.990635538188898
  train_roc_auc_weighted_oob:
  - 0.7312274198988892
  - 0.7198478566745389
  - 0.6962524370698526
  - 0.7570013902848031
  - 0.7888578366478236
start: 2023-12-21 10:40:59.920570
wrapper: null
