active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZm9r9AMzMzMzPjP0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmFkCQmZmZmZkRwCAzMzMzMwvA4MzMzMzMDEBAZmZmZmb2vw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:57:11.410256
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__8
  params: {}
hash: d16ea94ffa1ae5272e5f047270bf0c6a0c2089d63ccf505d1b754a10c620e138
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d16ea94_20231222T015534467984_embedding_proba__8_emotions.yml
results:
  fit_time:
  - 70.64467930793762
  - 68.40183568000793
  - 69.36564326286316
  - 68.85374116897583
  - 69.52745938301086
  score_time:
  - 8.201709032058716
  - 8.078551054000854
  - 7.862522125244141
  - 8.448568344116211
  - 7.996147155761719
  test_average_precision_macro:
  - 0.7659214161114933
  - 0.6936375307028153
  - 0.7567240387464151
  - 0.7264838997222393
  - 0.7314177470198945
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7709271496276864
  - 0.707910049409947
  - 0.7611674987594482
  - 0.7327720007371827
  - 0.7438380773355536
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8054818092428713
  - 0.7835591689250225
  - 0.8307604735883425
  - 0.8154347826086958
  - 0.820162037037037
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7706758755894861
  - 0.6966555814817131
  - 0.7618732873638818
  - 0.7256719908461855
  - 0.7292425728121567
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555554
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555556
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555555
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8006059156501634
  - 0.7946045824094604
  - 0.8249150790134397
  - 0.8081841432225063
  - 0.8261584454409567
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6795496390848302
  - 0.6667460845763756
  - 0.7083791687915978
  - 0.6895109884692628
  - 0.715025140490979
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6761433868974042
  - 0.6621621621621622
  - 0.7062937062937062
  - 0.684981684981685
  - 0.7102137767220903
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7084702907711756
  - 0.697754548974061
  - 0.7407884465261513
  - 0.7161076604554865
  - 0.7438095238095237
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6705393179868397
  - 0.6633161257572496
  - 0.7037696799642743
  - 0.6821822486775366
  - 0.7079339437081129
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8054818092428709
  - 0.7835591689250229
  - 0.8307604735883422
  - 0.8154347826086956
  - 0.820162037037037
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5454932085705092
  - 0.49420717684147303
  - 0.5810749040262663
  - 0.5548781941518276
  - 0.5979235866010999
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5534565330410907
  - 0.5093438164951226
  - 0.5926868044515103
  - 0.5643801452478616
  - 0.5990852901534476
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.543761111868331
  - 0.5037412626523022
  - 0.5962663282074552
  - 0.5634768975643196
  - 0.6073632046049884
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.538726663312358
  - 0.5008520422554501
  - 0.5822705629774599
  - 0.5523258411595209
  - 0.5945919088287567
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8690885297611329
  - 0.8473262847794689
  - 0.8811267462283356
  - 0.876979006974926
  - 0.8777887131217794
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.84070796460177
  - -2.7642276422764227
  - -2.5081967213114753
  - -2.9130434782608696
  - -2.675
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19321533923303835
  - -0.2032520325203252
  - -0.1721311475409836
  - -0.18695652173913044
  - -0.16944444444444443
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19321533923303835
  - -0.2032520325203252
  - -0.1721311475409836
  - -0.18695652173913044
  - -0.16944444444444445
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19321533923303832
  - -0.2032520325203252
  - -0.17213114754098363
  - -0.18695652173913044
  - -0.16944444444444445
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.19939408434983655
  - -0.2053954175905396
  - -0.17508492098656034
  - -0.19181585677749363
  - -0.17384155455904338
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15909537856440512
  - -0.18832429990966576
  - -0.1326502732240437
  - -0.17123188405797102
  - -0.14604166666666665
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555554
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555556
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555555
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8006059156501634
  - 0.7946045824094604
  - 0.8249150790134397
  - 0.8081841432225063
  - 0.8261584454409567
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555554
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555556
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8067846607669616
  - 0.7967479674796748
  - 0.8278688524590164
  - 0.8130434782608695
  - 0.8305555555555555
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8006059156501634
  - 0.7946045824094604
  - 0.8249150790134397
  - 0.8081841432225063
  - 0.8261584454409567
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.862970929206644
  - 0.8239802717346736
  - 0.8796584150299024
  - 0.8347885824682058
  - 0.8590236101818084
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8713450292397661
  - 0.8461653211653211
  - 0.887970323264441
  - 0.8545861513376878
  - 0.8741778022394456
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8409046214355947
  - 0.8116757000903342
  - 0.8673497267759562
  - 0.828768115942029
  - 0.8539583333333333
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8629401191426509
  - 0.8263167711091781
  - 0.880100009717785
  - 0.8331778869239836
  - 0.8573940645183126
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.991490578003143
  - 0.9906807398215524
  - 0.9925778713372947
  - 0.989326949369609
  - 0.9910526161340997
  train_average_precision_macro_oob:
  - 0.9526028994210032
  - 0.9550475545332363
  - 0.9513256414038233
  - 0.9512087259084332
  - 0.9552703210645651
  train_average_precision_micro:
  - 0.9910303822116865
  - 0.9902681339490338
  - 0.9911387447180537
  - 0.9893763876516295
  - 0.9909819974041758
  train_average_precision_micro_oob:
  - 0.9577977738140377
  - 0.9590010033469735
  - 0.9566618199262363
  - 0.9562408877117332
  - 0.9624655188730953
  train_average_precision_samples:
  - 0.9883101851851852
  - 0.9906028368794327
  - 0.9929228591648974
  - 0.9877963737796372
  - 0.9894996476391824
  train_average_precision_samples_oob:
  - 0.9517824074074074
  - 0.9556973995271868
  - 0.9545057796650153
  - 0.9525104602510459
  - 0.9508691566831102
  train_average_precision_weighted:
  - 0.9917058869939894
  - 0.9911456504646045
  - 0.9928154811664095
  - 0.989918537265916
  - 0.9915154535560053
  train_average_precision_weighted_oob:
  - 0.9548696835708966
  - 0.9574719423517015
  - 0.9524034399731294
  - 0.9538734839372557
  - 0.9575839364740577
  train_f1_macro:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420383
  - 0.9658298465829848
  - 0.9665257223396758
  train_f1_macro_oob:
  - 0.9302083333333332
  - 0.9287234042553192
  - 0.9327671620665251
  - 0.9316596931659693
  - 0.9386892177589853
  train_f1_micro:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420382
  - 0.9658298465829847
  - 0.9665257223396758
  train_f1_micro_oob:
  - 0.9302083333333333
  - 0.9287234042553192
  - 0.9327671620665251
  - 0.9316596931659693
  - 0.9386892177589852
  train_f1_samples:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420382
  - 0.9658298465829847
  - 0.9665257223396758
  train_f1_samples_oob:
  - 0.9302083333333333
  - 0.9287234042553192
  - 0.9327671620665252
  - 0.9316596931659694
  - 0.9386892177589853
  train_f1_weighted:
  - 0.9658530850263357
  - 0.9632092198581559
  - 0.9682583044576402
  - 0.9663455868825859
  - 0.9672125273228939
  train_f1_weighted_oob:
  - 0.9304387697516932
  - 0.9295835729346369
  - 0.933756044724974
  - 0.9328680663984188
  - 0.9388182176514852
  train_jaccard_macro:
  - 0.9342144652152066
  - 0.9283710083334262
  - 0.9382935393752857
  - 0.9340405254468247
  - 0.9352886592026545
  train_jaccard_macro_oob:
  - 0.8703654352449753
  - 0.8680465166792826
  - 0.8752367065324194
  - 0.8728697024857363
  - 0.8849882779401465
  train_jaccard_micro:
  - 0.9341840161182001
  - 0.9282051282051282
  - 0.9382716049382716
  - 0.9339177343223196
  - 0.9352199113535629
  train_jaccard_micro_oob:
  - 0.8695228821811101
  - 0.8669314796425025
  - 0.8740053050397878
  - 0.8720626631853786
  - 0.8844621513944223
  train_jaccard_samples:
  - 0.9433531746031746
  - 0.9380952380952381
  - 0.9464664846830452
  - 0.9428671050009962
  - 0.9441256418000604
  train_jaccard_samples_oob:
  - 0.8867757936507935
  - 0.8841945288753799
  - 0.8903043170559094
  - 0.888822474596533
  - 0.9003825631732607
  train_jaccard_weighted:
  - 0.9339889843409381
  - 0.9291866848378347
  - 0.9384899426241927
  - 0.9350024724162076
  - 0.936578861666627
  train_jaccard_weighted_oob:
  - 0.8706979615010616
  - 0.8694827295132603
  - 0.8769081197155848
  - 0.8749609839505282
  - 0.8851723436504646
  train_label_ranking_average_precision_score:
  - 0.988310185185185
  - 0.9906028368794325
  - 0.9929228591648973
  - 0.9877963737796375
  - 0.9894996476391826
  train_label_ranking_average_precision_score_oob:
  - 0.9517824074074072
  - 0.9556973995271864
  - 0.954505779665015
  - 0.9525104602510457
  - 0.9508691566831098
  train_matthews_corrcoef_macro:
  - 0.9176729032737571
  - 0.9104063758878557
  - 0.9234618773776617
  - 0.9168890586430097
  - 0.9189653861948202
  train_matthews_corrcoef_macro_oob:
  - 0.829186570801672
  - 0.8279586886633497
  - 0.8365763809109485
  - 0.8328143992883033
  - 0.8524894751200103
  train_matthews_corrcoef_micro:
  - 0.9196869066922083
  - 0.9131854470636153
  - 0.9256043420039354
  - 0.9195181387105024
  - 0.921539403169943
  train_matthews_corrcoef_micro_oob:
  - 0.8340109423168062
  - 0.8330983635484868
  - 0.841943846441399
  - 0.838281982294547
  - 0.8557533939941944
  train_matthews_corrcoef_samples:
  - 0.9165705027220347
  - 0.9163564785335063
  - 0.9271620495081908
  - 0.919918775258695
  - 0.9206258685197163
  train_matthews_corrcoef_samples_oob:
  - 0.8311526152030225
  - 0.8384421100649027
  - 0.8379667578625472
  - 0.836347253853633
  - 0.8534265826530941
  train_matthews_corrcoef_weighted:
  - 0.9187929674643164
  - 0.9128385375168475
  - 0.9249975169042455
  - 0.9193821385916628
  - 0.9217666034969181
  train_matthews_corrcoef_weighted_oob:
  - 0.8323455364865254
  - 0.8324786312678719
  - 0.8411467903014698
  - 0.8381004590071627
  - 0.8551075142646053
  train_ndgc:
  - 0.9925175922023642
  - 0.9947361388872767
  - 0.9956644332259027
  - 0.9917922504816791
  - 0.9933253187419049
  train_ndgc_oob:
  - 0.967494164579606
  - 0.9718180981986052
  - 0.969474956143915
  - 0.9683210400408241
  - 0.9669503266364532
  train_neg_coverage_error:
  - -1.8958333333333333
  - -1.9404255319148935
  - -1.9171974522292994
  - -1.901673640167364
  - -1.9175475687103594
  train_neg_coverage_error_oob:
  - -2.0479166666666666
  - -2.097872340425532
  - -2.061571125265393
  - -2.0606694560669454
  - -2.0718816067653276
  train_neg_hamming_loss_macro:
  - -0.034027777777777775
  - -0.03723404255319149
  - -0.03184713375796178
  - -0.03417015341701534
  - -0.033474277660324174
  train_neg_hamming_loss_macro_oob:
  - -0.06979166666666667
  - -0.07127659574468086
  - -0.06723283793347487
  - -0.0683403068340307
  - -0.0613107822410148
  train_neg_hamming_loss_micro:
  - -0.034027777777777775
  - -0.03723404255319149
  - -0.03184713375796178
  - -0.03417015341701534
  - -0.033474277660324174
  train_neg_hamming_loss_micro_oob:
  - -0.06979166666666667
  - -0.07127659574468086
  - -0.06723283793347487
  - -0.06834030683403068
  - -0.0613107822410148
  train_neg_hamming_loss_samples:
  - -0.034027777777777775
  - -0.03723404255319149
  - -0.03184713375796178
  - -0.03417015341701535
  - -0.03347427766032417
  train_neg_hamming_loss_samples_oob:
  - -0.06979166666666667
  - -0.07127659574468086
  - -0.06723283793347487
  - -0.0683403068340307
  - -0.0613107822410148
  train_neg_hamming_loss_weighted:
  - -0.034146914973664406
  - -0.03679078014184397
  - -0.0317416955423598
  - -0.03365441311741426
  - -0.032787472677106105
  train_neg_hamming_loss_weighted_oob:
  - -0.06956123024830699
  - -0.07041642706536323
  - -0.066243955275026
  - -0.06713193360158119
  - -0.061181782348514714
  train_neg_label_ranking_loss:
  - -0.007905092592592592
  - -0.006879432624113475
  - -0.005189903279075254
  - -0.0074965132496513254
  - -0.006882781301385953
  train_neg_label_ranking_loss_oob:
  - -0.033125
  - -0.031743498817966904
  - -0.02932295352677518
  - -0.032630172013017204
  - -0.03308080808080808
  train_precision_macro:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420383
  - 0.9658298465829848
  - 0.9665257223396758
  train_precision_macro_oob:
  - 0.9302083333333332
  - 0.9287234042553192
  - 0.9327671620665251
  - 0.9316596931659693
  - 0.9386892177589853
  train_precision_micro:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420382
  - 0.9658298465829847
  - 0.9665257223396758
  train_precision_micro_oob:
  - 0.9302083333333333
  - 0.9287234042553192
  - 0.9327671620665251
  - 0.9316596931659693
  - 0.9386892177589852
  train_precision_samples:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420382
  - 0.9658298465829847
  - 0.9665257223396758
  train_precision_samples_oob:
  - 0.9302083333333333
  - 0.9287234042553192
  - 0.9327671620665252
  - 0.9316596931659694
  - 0.9386892177589853
  train_precision_weighted:
  - 0.9658530850263357
  - 0.9632092198581559
  - 0.9682583044576402
  - 0.9663455868825859
  - 0.9672125273228939
  train_precision_weighted_oob:
  - 0.9304387697516932
  - 0.9295835729346369
  - 0.933756044724974
  - 0.9328680663984188
  - 0.9388182176514852
  train_recall_macro:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420383
  - 0.9658298465829848
  - 0.9665257223396758
  train_recall_macro_oob:
  - 0.9302083333333332
  - 0.9287234042553192
  - 0.9327671620665251
  - 0.9316596931659693
  - 0.9386892177589853
  train_recall_micro:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420382
  - 0.9658298465829847
  - 0.9665257223396758
  train_recall_micro_oob:
  - 0.9302083333333333
  - 0.9287234042553192
  - 0.9327671620665251
  - 0.9316596931659693
  - 0.9386892177589852
  train_recall_samples:
  - 0.9659722222222222
  - 0.9627659574468085
  - 0.9681528662420382
  - 0.9658298465829847
  - 0.9665257223396758
  train_recall_samples_oob:
  - 0.9302083333333333
  - 0.9287234042553192
  - 0.9327671620665252
  - 0.9316596931659694
  - 0.9386892177589853
  train_recall_weighted:
  - 0.9658530850263357
  - 0.9632092198581559
  - 0.9682583044576402
  - 0.9663455868825859
  - 0.9672125273228939
  train_recall_weighted_oob:
  - 0.9304387697516932
  - 0.9295835729346369
  - 0.933756044724974
  - 0.9328680663984188
  - 0.9388182176514852
  train_roc_auc_macro:
  - 0.9959101352564107
  - 0.9954753053387724
  - 0.9964199458387851
  - 0.9950088221059166
  - 0.9956888030879286
  train_roc_auc_macro_oob:
  - 0.9770893520335747
  - 0.9766347397129985
  - 0.9762569521375086
  - 0.97460828890229
  - 0.9768220644060354
  train_roc_auc_micro:
  - 0.9956455144213681
  - 0.9950956391173782
  - 0.9956133206115753
  - 0.994716435221413
  - 0.9954188977699092
  train_roc_auc_micro_oob:
  - 0.9779909706546275
  - 0.9776744912614478
  - 0.9781468897628633
  - 0.9755615210338123
  - 0.979125841454983
  train_roc_auc_samples:
  - 0.9920949074074074
  - 0.9931205673758865
  - 0.9948100967209247
  - 0.9925034867503486
  - 0.993117218698614
  train_roc_auc_samples_oob:
  - 0.966875
  - 0.9682565011820331
  - 0.9706770464732247
  - 0.9673698279869828
  - 0.9669191919191918
  train_roc_auc_weighted:
  - 0.9957940976344278
  - 0.9955048242185026
  - 0.9963319536328444
  - 0.9950937428958598
  - 0.9957556480581722
  train_roc_auc_weighted_oob:
  - 0.9772978900262467
  - 0.9771120279441097
  - 0.976439096257883
  - 0.9753425417574013
  - 0.977526757351168
start: 2023-12-22 01:55:34.467984
wrapper: null
