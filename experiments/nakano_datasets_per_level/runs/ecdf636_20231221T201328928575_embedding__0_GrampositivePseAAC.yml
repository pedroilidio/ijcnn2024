active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb+AmZmZmZkBwIBmZmZmZgZAADMzMzMz878AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:13:36.885272
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__0
  params: {}
hash: ecdf6361556fac46d5086e0d5eb10119fdc78beaded9e72c9fc2ade4e6d32b45
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ecdf636_20231221T201328928575_embedding__0_GrampositivePseAAC.yml
results:
  fit_time:
  - 0.9523520469665527
  - 0.9494330883026123
  - 0.9772872924804688
  - 0.9514734745025635
  - 1.0025506019592285
  score_time:
  - 0.9785983562469482
  - 0.9942944049835205
  - 0.9431304931640625
  - 0.981508731842041
  - 0.9362094402313232
  test_average_precision_macro:
  - 0.3624609646419118
  - 0.4073806869169013
  - 0.4367300180105811
  - 0.43697759780581424
  - 0.4180122044767111
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4407444976863937
  - 0.5176946907814627
  - 0.5528802736751047
  - 0.5363368468114958
  - 0.5494173434246905
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6987179487179488
  - 0.7051886792452828
  - 0.7533003300330032
  - 0.696031746031746
  - 0.703883495145631
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4323246651390046
  - 0.5033401112228735
  - 0.5601698899310623
  - 0.5190607705381987
  - 0.5274849170121088
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6751831501831502
  - 0.676931292274831
  - 0.6678314890312561
  - 0.6713832199546486
  - 0.6688858067498844
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6173036657549128
  - 0.6203929674207407
  - 0.6192847999678985
  - 0.6221001221001221
  - 0.6151810418287802
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5969289827255279
  - 0.6
  - 0.5968379446640316
  - 0.6
  - 0.5938104448742747
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5974358974358972
  - 0.5999999999999999
  - 0.5973597359735973
  - 0.5999999999999999
  - 0.5948220064724918
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5162064290091075
  - 0.5184281303170373
  - 0.5079307922840096
  - 0.5115995115995116
  - 0.509956293014691
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6987179487179487
  - 0.7051886792452831
  - 0.7533003300330033
  - 0.696031746031746
  - 0.7038834951456312
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7759735517515092
  - 0.7801528610101707
  - 0.8169486363442701
  - 0.7737489647204737
  - 0.7799240692789163
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7980769230769231
  - -1.7830188679245282
  - -1.6534653465346534
  - -1.7714285714285714
  - -1.7864077669902914
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25240384615384615
  - -0.25
  - -0.2524752475247525
  - -0.25
  - -0.25485436893203883
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25240384615384615
  - -0.25
  - -0.2524752475247525
  - -0.25
  - -0.25485436893203883
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25240384615384615
  - -0.25
  - -0.2524752475247525
  - -0.25
  - -0.25485436893203883
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32481684981684983
  - -0.3230687077251691
  - -0.3321685109687439
  - -0.32861678004535144
  - -0.33111419325011554
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2620192307692308
  - -0.2610062893081761
  - -0.21287128712871287
  - -0.2571428571428571
  - -0.25485436893203883
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6751831501831502
  - 0.676931292274831
  - 0.6678314890312561
  - 0.6713832199546486
  - 0.6688858067498844
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7475961538461539
  - 0.75
  - 0.7475247524752475
  - 0.75
  - 0.7451456310679612
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6751831501831502
  - 0.676931292274831
  - 0.6678314890312561
  - 0.6713832199546486
  - 0.6688858067498844
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6765151041556803
  - 0.6895634093002094
  - 0.7105416359051149
  - 0.6825001556178028
  - 0.6884201077256599
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7408972592252335
  - 0.7748012341283967
  - 0.792884041033632
  - 0.775026455026455
  - 0.776330076004343
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7379807692307693
  - 0.7389937106918238
  - 0.7871287128712872
  - 0.7428571428571429
  - 0.7451456310679612
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6281258110288693
  - 0.6862455509474683
  - 0.70576921406283
  - 0.674708105464408
  - 0.6815354975249022
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7681720942595833
  - 0.7562657549799827
  - 0.7613333984191963
  - 0.7722838291949223
  - 0.7528889355531927
  train_average_precision_macro_oob:
  - 0.36098469055200055
  - 0.35788318099233113
  - 0.3640337124322724
  - 0.344257991484723
  - 0.3466288940592075
  train_average_precision_micro:
  - 0.8268956168965886
  - 0.8180652703518222
  - 0.8070143823623641
  - 0.8136956271336769
  - 0.8121107874442539
  train_average_precision_micro_oob:
  - 0.49582110656351236
  - 0.47569875345359175
  - 0.4681254861933932
  - 0.47183995995489725
  - 0.48827806740020857
  train_average_precision_samples:
  - 0.8600401606425702
  - 0.8496771589991928
  - 0.8347288676236043
  - 0.8498389694041868
  - 0.8375400641025641
  train_average_precision_samples_oob:
  - 0.7132530120481928
  - 0.7094430992736076
  - 0.6931818181818182
  - 0.7039049919484701
  - 0.6995192307692307
  train_average_precision_weighted:
  - 0.8283985715460698
  - 0.8222764050927931
  - 0.8105990730408338
  - 0.8189973687043224
  - 0.8123650339678299
  train_average_precision_weighted_oob:
  - 0.4645247797769124
  - 0.4550529949478863
  - 0.45191624479888776
  - 0.4487316197090768
  - 0.44926776045537276
  train_f1_macro:
  - 0.7493975903614458
  - 0.7487893462469732
  - 0.7511961722488038
  - 0.7475845410628019
  - 0.75
  train_f1_macro_oob:
  - 0.7481927710843375
  - 0.7475786924939467
  - 0.7482057416267943
  - 0.7475845410628019
  - 0.7487980769230769
  train_f1_micro:
  - 0.7493975903614458
  - 0.7487893462469734
  - 0.7511961722488039
  - 0.7475845410628019
  - 0.75
  train_f1_micro_oob:
  - 0.7481927710843373
  - 0.7475786924939467
  - 0.7482057416267942
  - 0.7475845410628019
  - 0.7487980769230769
  train_f1_samples:
  - 0.7493975903614458
  - 0.7487893462469734
  - 0.7511961722488039
  - 0.7475845410628019
  - 0.75
  train_f1_samples_oob:
  - 0.7481927710843373
  - 0.7475786924939467
  - 0.7482057416267942
  - 0.7475845410628019
  - 0.7487980769230769
  train_f1_weighted:
  - 0.6729578601487289
  - 0.6725196114295005
  - 0.6777608564706952
  - 0.6723181471465224
  - 0.6745261317629739
  train_f1_weighted_oob:
  - 0.6713552775696086
  - 0.6709054064254649
  - 0.6731693734444079
  - 0.6723181471465224
  - 0.6729274015458225
  train_jaccard_macro:
  - 0.6206014212056463
  - 0.6198200873821897
  - 0.621883332236371
  - 0.618032789892615
  - 0.621122940444401
  train_jaccard_macro_oob:
  - 0.619244360566291
  - 0.618459744826195
  - 0.6187512315737765
  - 0.618032789892615
  - 0.6197675163041667
  train_jaccard_micro:
  - 0.5992292870905588
  - 0.598451862602806
  - 0.6015325670498084
  - 0.5969141755062681
  - 0.6
  train_jaccard_micro_oob:
  - 0.5976900866217517
  - 0.596906718221363
  - 0.597706641184902
  - 0.5969141755062681
  - 0.5984630163304515
  train_jaccard_samples:
  - 0.5999999999999998
  - 0.5993543179983856
  - 0.602870813397129
  - 0.5974235104669885
  - 0.6006410256410255
  train_jaccard_samples_oob:
  - 0.5980722891566264
  - 0.5974172719935429
  - 0.5980861244019137
  - 0.5974235104669885
  - 0.5987179487179486
  train_jaccard_weighted:
  - 0.5138968592713844
  - 0.5133353765186067
  - 0.5189253205953502
  - 0.5132480859756687
  - 0.5154556667268823
  train_jaccard_weighted_oob:
  - 0.5120917738276484
  - 0.5115215864439471
  - 0.5141281254362128
  - 0.5132480859756687
  - 0.5136527580618817
  train_label_ranking_average_precision_score:
  - 0.8600401606425696
  - 0.8496771589991925
  - 0.834728867623604
  - 0.8498389694041864
  - 0.8375400641025639
  train_label_ranking_average_precision_score_oob:
  - 0.7132530120481925
  - 0.7094430992736079
  - 0.6931818181818183
  - 0.7039049919484706
  - 0.6995192307692312
  train_matthews_corrcoef_macro:
  - 0.02451473040639267
  - 0.024485105343719588
  - 0.047378123672212474
  - 0.0
  - 0.024529422312730507
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.05986808846892012
  - 0.059915401929858905
  - 0.09440713304517796
  - 0.0
  - 0.05989221409573181
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.004819277108433735
  - 0.004842615012106538
  - 0.011961722488038277
  - 0.0
  - 0.004807692307692308
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.03260811030132613
  - 0.03264680712495945
  - 0.0707491914556142
  - 0.0
  - 0.03262765264564154
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8958229467365387
  - 0.8881693969109812
  - 0.8772177223839716
  - 0.8882147789082676
  - 0.8790457480064032
  train_ndgc_oob:
  - 0.7866328988437542
  - 0.7838089120822151
  - 0.7714572184304671
  - 0.7796029283546084
  - 0.7759808095160962
  train_neg_coverage_error:
  - -1.3734939759036144
  - -1.397094430992736
  - -1.4330143540669857
  - -1.4033816425120773
  - -1.4302884615384615
  train_neg_coverage_error_oob:
  - -1.7566265060240964
  - -1.757869249394673
  - -1.8110047846889952
  - -1.7995169082125604
  - -1.8149038461538463
  train_neg_hamming_loss_macro:
  - -0.2506024096385542
  - -0.25121065375302665
  - -0.24880382775119617
  - -0.2524154589371981
  - -0.25
  train_neg_hamming_loss_macro_oob:
  - -0.25180722891566265
  - -0.2524213075060533
  - -0.25179425837320574
  - -0.2524154589371981
  - -0.2512019230769231
  train_neg_hamming_loss_micro:
  - -0.25060240963855424
  - -0.25121065375302665
  - -0.24880382775119617
  - -0.2524154589371981
  - -0.25
  train_neg_hamming_loss_micro_oob:
  - -0.25180722891566265
  - -0.2524213075060533
  - -0.25179425837320574
  - -0.2524154589371981
  - -0.2512019230769231
  train_neg_hamming_loss_samples:
  - -0.25060240963855424
  - -0.25121065375302665
  - -0.24880382775119617
  - -0.2524154589371981
  - -0.25
  train_neg_hamming_loss_samples_oob:
  - -0.25180722891566265
  - -0.2524213075060533
  - -0.25179425837320574
  - -0.2524154589371981
  - -0.2512019230769231
  train_neg_hamming_loss_weighted:
  - -0.3270421398512711
  - -0.3274803885704995
  - -0.32223914352930483
  - -0.32768185285347756
  - -0.3254738682370262
  train_neg_hamming_loss_weighted_oob:
  - -0.32864472243039144
  - -0.329094593574535
  - -0.3268306265555922
  - -0.32768185285347756
  - -0.3270725984541774
  train_neg_label_ranking_loss:
  - -0.1218875502008032
  - -0.12893462469733658
  - -0.14134768740031897
  - -0.13103864734299517
  - -0.14162660256410253
  train_neg_label_ranking_loss_oob:
  - -0.2491967871485944
  - -0.24979822437449553
  - -0.26814194577352474
  - -0.2624798711755233
  - -0.27003205128205127
  train_precision_macro:
  - 0.7493975903614458
  - 0.7487893462469732
  - 0.7511961722488038
  - 0.7475845410628019
  - 0.75
  train_precision_macro_oob:
  - 0.7481927710843375
  - 0.7475786924939467
  - 0.7482057416267943
  - 0.7475845410628019
  - 0.7487980769230769
  train_precision_micro:
  - 0.7493975903614458
  - 0.7487893462469734
  - 0.7511961722488039
  - 0.7475845410628019
  - 0.75
  train_precision_micro_oob:
  - 0.7481927710843373
  - 0.7475786924939467
  - 0.7482057416267942
  - 0.7475845410628019
  - 0.7487980769230769
  train_precision_samples:
  - 0.7493975903614458
  - 0.7487893462469734
  - 0.7511961722488039
  - 0.7475845410628019
  - 0.75
  train_precision_samples_oob:
  - 0.7481927710843373
  - 0.7475786924939467
  - 0.7482057416267942
  - 0.7475845410628019
  - 0.7487980769230769
  train_precision_weighted:
  - 0.6729578601487289
  - 0.6725196114295005
  - 0.6777608564706952
  - 0.6723181471465224
  - 0.6745261317629739
  train_precision_weighted_oob:
  - 0.6713552775696086
  - 0.6709054064254649
  - 0.6731693734444079
  - 0.6723181471465224
  - 0.6729274015458225
  train_recall_macro:
  - 0.7493975903614458
  - 0.7487893462469732
  - 0.7511961722488038
  - 0.7475845410628019
  - 0.75
  train_recall_macro_oob:
  - 0.7481927710843375
  - 0.7475786924939467
  - 0.7482057416267943
  - 0.7475845410628019
  - 0.7487980769230769
  train_recall_micro:
  - 0.7493975903614458
  - 0.7487893462469734
  - 0.7511961722488039
  - 0.7475845410628019
  - 0.75
  train_recall_micro_oob:
  - 0.7481927710843373
  - 0.7475786924939467
  - 0.7482057416267942
  - 0.7475845410628019
  - 0.7487980769230769
  train_recall_samples:
  - 0.7493975903614458
  - 0.7487893462469734
  - 0.7511961722488039
  - 0.7475845410628019
  - 0.75
  train_recall_samples_oob:
  - 0.7481927710843373
  - 0.7475786924939467
  - 0.7482057416267942
  - 0.7475845410628019
  - 0.7487980769230769
  train_recall_weighted:
  - 0.6729578601487289
  - 0.6725196114295005
  - 0.6777608564706952
  - 0.6723181471465224
  - 0.6745261317629739
  train_recall_weighted_oob:
  - 0.6713552775696086
  - 0.6709054064254649
  - 0.6731693734444079
  - 0.6723181471465224
  - 0.6729274015458225
  train_roc_auc_macro:
  - 0.8643527828470192
  - 0.8611884480586925
  - 0.8485935987487148
  - 0.8530944050490239
  - 0.857028310301549
  train_roc_auc_macro_oob:
  - 0.636810577300517
  - 0.6632334918308919
  - 0.6475646706248083
  - 0.5938965317328835
  - 0.6372548943493923
  train_roc_auc_micro:
  - 0.901769410350646
  - 0.8951640307187447
  - 0.8862895431873028
  - 0.8922459438359447
  - 0.8882836560246377
  train_roc_auc_micro_oob:
  - 0.7632021974127237
  - 0.7580151263604501
  - 0.7529064634278326
  - 0.7476134527830812
  - 0.7466841260454506
  train_roc_auc_samples:
  - 0.8781124497991967
  - 0.8710653753026635
  - 0.8586523125996809
  - 0.8689613526570048
  - 0.8583733974358976
  train_roc_auc_samples_oob:
  - 0.7508032128514056
  - 0.7502017756255045
  - 0.7318580542264753
  - 0.7375201288244767
  - 0.7299679487179488
  train_roc_auc_weighted:
  - 0.8667703564381313
  - 0.863029201810409
  - 0.843970980185185
  - 0.8561486690458134
  - 0.8515034078401088
  train_roc_auc_weighted_oob:
  - 0.651448111198459
  - 0.6492360361175259
  - 0.6390727112318686
  - 0.6267652966418296
  - 0.6306144264798832
start: 2023-12-21 20:13:28.928575
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
