active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpvzQzMzMzM/M/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAMAAAAAAAADwvwAAAAAAAAAAAAAAAAAACEAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:06:17.488476
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__3
  params: {}
hash: 476ce6b9e7eaa0bc4d8237ad8a8d70d654bcc7b121d31585f8bb570cb9562d12
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/476ce6b_20231221T230546912396_embedding_proba_weak__3_CHD_49.yml
results:
  fit_time:
  - 15.786869525909424
  - 16.350053787231445
  - 16.06744694709778
  - 17.14482021331787
  - 17.09494161605835
  score_time:
  - 3.4459290504455566
  - 3.5140860080718994
  - 3.62371563911438
  - 3.396076202392578
  - 3.5597281455993652
  test_average_precision_macro:
  - 0.5335753681766732
  - 0.518799610214703
  - 0.5219055351787227
  - 0.5639252757783219
  - 0.564085395127091
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6655442622986947
  - 0.6724234054338599
  - 0.6720828375774281
  - 0.7404372132797613
  - 0.6823628346539626
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7863323500491642
  - 0.7908730158730158
  - 0.7886636636636637
  - 0.8152391975308642
  - 0.7772022022022023
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6434347799437055
  - 0.6402044133047163
  - 0.6357689260207505
  - 0.6954837676104163
  - 0.6449976920942527
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6814159292035399
  - 0.6964285714285715
  - 0.7327327327327328
  - 0.7361111111111112
  - 0.6966966966966966
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6814159292035398
  - 0.6964285714285714
  - 0.7327327327327328
  - 0.7361111111111112
  - 0.6966966966966966
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6814159292035398
  - 0.6964285714285714
  - 0.7327327327327327
  - 0.7361111111111109
  - 0.6966966966966966
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6332384429729563
  - 0.656234335839599
  - 0.6878457404773195
  - 0.6987353206865401
  - 0.6572835811590136
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.539482695923875
  - 0.5551181383068241
  - 0.5991178098899753
  - 0.5987097587097586
  - 0.554766585216932
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5167785234899329
  - 0.5342465753424658
  - 0.5781990521327014
  - 0.5824175824175825
  - 0.5345622119815668
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5630234072711949
  - 0.5661989795918367
  - 0.6272571272571272
  - 0.6337902837902837
  - 0.5761163761163762
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4707945087835925
  - 0.4962501856233416
  - 0.5317156498803789
  - 0.541889988719257
  - 0.4966574324289684
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7863323500491644
  - 0.790873015873016
  - 0.7886636636636637
  - 0.843016975308642
  - 0.777202202202202
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.09306596449163006
  - 0.12249214697717152
  - 0.20390000525695495
  - 0.19852227720152538
  - 0.10794480778599137
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.37575972064455065
  - 0.4181129608686569
  - 0.49143339248162676
  - 0.4922105768742545
  - 0.41158763100600926
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.39569233926440484
  - 0.44857347080093707
  - 0.5036995020798153
  - 0.5036441672668919
  - 0.44089925340594116
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.08334533492899235
  - 0.11681994036372992
  - 0.201664012996928
  - 0.19755068275909232
  - 0.09655486241381236
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8623936499459756
  - 0.8639785405842436
  - 0.8552933064821098
  - 0.872273084297739
  - 0.848959281086175
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.734513274336283
  - -3.625
  - -3.6486486486486487
  - -3.574074074074074
  - -3.675675675675676
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3185840707964602
  - -0.3035714285714286
  - -0.2672672672672673
  - -0.2638888888888889
  - -0.3033033033033033
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3185840707964602
  - -0.30357142857142855
  - -0.2672672672672673
  - -0.2638888888888889
  - -0.3033033033033033
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3185840707964602
  - -0.30357142857142855
  - -0.2672672672672673
  - -0.2638888888888889
  - -0.3033033033033033
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.36676155702704377
  - -0.343765664160401
  - -0.31215425952268055
  - -0.3012646793134598
  - -0.3427164188409863
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21627335299901673
  - -0.20466269841269843
  - -0.2007007007007007
  - -0.16926440329218106
  - -0.21271271271271266
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6814159292035399
  - 0.6964285714285715
  - 0.7327327327327328
  - 0.7361111111111112
  - 0.6966966966966966
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6814159292035398
  - 0.6964285714285714
  - 0.7327327327327328
  - 0.7361111111111112
  - 0.6966966966966966
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6814159292035398
  - 0.6964285714285714
  - 0.7327327327327327
  - 0.7361111111111109
  - 0.6966966966966966
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6332384429729563
  - 0.656234335839599
  - 0.6878457404773195
  - 0.6987353206865401
  - 0.6572835811590136
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6814159292035399
  - 0.6964285714285715
  - 0.7327327327327328
  - 0.7361111111111112
  - 0.6966966966966966
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6814159292035398
  - 0.6964285714285714
  - 0.7327327327327328
  - 0.7361111111111112
  - 0.6966966966966966
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6814159292035398
  - 0.6964285714285714
  - 0.7327327327327327
  - 0.7361111111111109
  - 0.6966966966966966
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6332384429729563
  - 0.656234335839599
  - 0.6878457404773195
  - 0.6987353206865401
  - 0.6572835811590136
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.608319442320399
  - 0.550790811670767
  - 0.5397626840393048
  - 0.6364474811884007
  - 0.590479011672416
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7737976309404879
  - 0.7737431433881862
  - 0.8011880093935626
  - 0.8112868821604717
  - 0.7786476737675879
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7837266470009832
  - 0.7953373015873016
  - 0.7992992992992993
  - .nan
  - 0.7872872872872871
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5935862719055602
  - 0.5786737341688277
  - 0.6047936500127995
  - 0.6520871048280241
  - 0.5826129204388786
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8545530387879005
  - 0.855614999411057
  - 0.8570505141350332
  - 0.8541940746037917
  - 0.8467346703442544
  train_average_precision_macro_oob:
  - 0.7789457698770161
  - 0.7160839705157422
  - 0.7185660314745146
  - 0.7002138425676293
  - 0.713492522536562
  train_average_precision_micro:
  - 0.8338583487452813
  - 0.8345490369756856
  - 0.8331093028468978
  - 0.8258453640412436
  - 0.8126486836865128
  train_average_precision_micro_oob:
  - 0.8136684060812842
  - 0.8203313490084468
  - 0.8104520645503219
  - 0.8041433758824769
  - 0.7980809729116188
  train_average_precision_samples:
  - 0.8767659627953746
  - 0.8832768999247553
  - 0.8788006756756757
  - 0.8797663435247328
  - 0.8678960210210209
  train_average_precision_samples_oob:
  - 0.8685268979386627
  - 0.8676385753699524
  - 0.8689345595595596
  - 0.8712310464827244
  - 0.8570101351351352
  train_average_precision_weighted:
  - 0.8317640166218362
  - 0.8319519376321151
  - 0.8335589075506967
  - 0.8271110889575706
  - 0.8172068930264792
  train_average_precision_weighted_oob:
  - 0.8028443807585749
  - 0.815688515636661
  - 0.8024010277122109
  - 0.7994370904539497
  - 0.796148073058283
  train_f1_macro:
  - 0.860105580693816
  - 0.8600451467268623
  - 0.8562312312312312
  - 0.8586875466070096
  - 0.8551051051051051
  train_f1_macro_oob:
  - 0.824660633484163
  - 0.8344620015048908
  - 0.8269519519519518
  - 0.825503355704698
  - 0.8220720720720719
  train_f1_micro:
  - 0.860105580693816
  - 0.8600451467268623
  - 0.8562312312312312
  - 0.8586875466070097
  - 0.8551051051051051
  train_f1_micro_oob:
  - 0.8246606334841629
  - 0.8344620015048909
  - 0.8269519519519519
  - 0.825503355704698
  - 0.8220720720720721
  train_f1_samples:
  - 0.8601055806938159
  - 0.8600451467268623
  - 0.8562312312312311
  - 0.8586875466070097
  - 0.8551051051051051
  train_f1_samples_oob:
  - 0.8246606334841629
  - 0.8344620015048908
  - 0.8269519519519518
  - 0.825503355704698
  - 0.8220720720720721
  train_f1_weighted:
  - 0.8306938159879336
  - 0.8285703602094776
  - 0.8245383570143814
  - 0.8298467219600831
  - 0.8258297667746487
  train_f1_weighted_oob:
  - 0.787977857272591
  - 0.7978906599018738
  - 0.789764917489416
  - 0.788529058351162
  - 0.7845227116880661
  train_jaccard_macro:
  - 0.7602055451380981
  - 0.759553237358964
  - 0.7541796783488571
  - 0.7576402859976676
  - 0.7526880575955834
  train_jaccard_macro_oob:
  - 0.7101419259249546
  - 0.7228399272251602
  - 0.7126486896793192
  - 0.7102413461539813
  - 0.7075213175768161
  train_jaccard_micro:
  - 0.7545484617929209
  - 0.7544554455445545
  - 0.7486051854282901
  - 0.7523685070238484
  - 0.7468852459016393
  train_jaccard_micro_oob:
  - 0.7016361886429259
  - 0.7159457714654616
  - 0.70496
  - 0.7028571428571428
  - 0.6978967495219885
  train_jaccard_samples:
  - 0.7861902803079274
  - 0.7874253662064045
  - 0.7787440037440037
  - 0.7839468510609451
  - 0.7795064545064545
  train_jaccard_samples_oob:
  - 0.7380002350590585
  - 0.7521141762676751
  - 0.7403621153621154
  - 0.7387886535537542
  - 0.7351702351702352
  train_jaccard_weighted:
  - 0.7126901610115769
  - 0.7090320933634965
  - 0.7036912652489579
  - 0.7110513244904026
  - 0.7053464579166578
  train_jaccard_weighted_oob:
  - 0.6531766558393151
  - 0.6657007542394877
  - 0.6551285433370576
  - 0.652938069119074
  - 0.6492601281914899
  train_label_ranking_average_precision_score:
  - 0.8835532931121164
  - 0.8900489089541
  - 0.8855574324324316
  - 0.8797663435247319
  - 0.8746527777777767
  train_label_ranking_average_precision_score_oob:
  - 0.8753142282554043
  - 0.8744105843992971
  - 0.8756913163163155
  - 0.8712310464827233
  - 0.8637668918918907
  train_matthews_corrcoef_macro:
  - 0.530918317735772
  - 0.5191199847324098
  - 0.5149392359700109
  - 0.5317385480535494
  - 0.5205018494257924
  train_matthews_corrcoef_macro_oob:
  - 0.41445930849523854
  - 0.4311737177128257
  - 0.4090912015821972
  - 0.41777206499277053
  - 0.4220746739290561
  train_matthews_corrcoef_micro:
  - 0.73668545788367
  - 0.7344486709739502
  - 0.7302964099375671
  - 0.7340146318576737
  - 0.7255981137558457
  train_matthews_corrcoef_micro_oob:
  - 0.6658121040890029
  - 0.6832546919827178
  - 0.6721595627153604
  - 0.6680777298456031
  - 0.66379995325257
  train_matthews_corrcoef_samples:
  - 0.7415711944573082
  - 0.7353893299037654
  - 0.7373094685519931
  - 0.7403107155176327
  - 0.7314712612142925
  train_matthews_corrcoef_samples_oob:
  - 0.6736484426287354
  - 0.6850892945486016
  - 0.6832364960600816
  - 0.6748773406641478
  - 0.6694386189127209
  train_matthews_corrcoef_weighted:
  - 0.5926490466346656
  - 0.5738408816147558
  - 0.5642376459134945
  - 0.5992383231850378
  - 0.5865396144210616
  train_matthews_corrcoef_weighted_oob:
  - 0.43173304859279565
  - 0.45110451359857495
  - 0.41481987037602014
  - 0.43673501688885974
  - 0.4478636449130556
  train_ndgc:
  - 0.9167887829345848
  - 0.9212352392374611
  - 0.9180190554209471
  - 0.9208342406271799
  - 0.908892874229999
  train_ndgc_oob:
  - 0.9116394743193643
  - 0.9111909975821565
  - 0.9126317795610089
  - 0.9166152539096578
  - 0.9025139959018166
  train_neg_coverage_error:
  - -3.1289592760180995
  - -3.106094808126411
  - -3.099099099099099
  - -3.087248322147651
  - -3.1126126126126126
  train_neg_coverage_error_oob:
  - -3.2194570135746607
  - -3.237020316027088
  - -3.2117117117117115
  - -3.1946308724832213
  - -3.2274774774774775
  train_neg_hamming_loss_macro:
  - -0.139894419306184
  - -0.1399548532731377
  - -0.14376876876876876
  - -0.14131245339299028
  - -0.1448948948948949
  train_neg_hamming_loss_macro_oob:
  - -0.17533936651583712
  - -0.1655379984951091
  - -0.17304804804804805
  - -0.174496644295302
  - -0.17792792792792791
  train_neg_hamming_loss_micro:
  - -0.13989441930618401
  - -0.1399548532731377
  - -0.14376876876876876
  - -0.1413124533929903
  - -0.1448948948948949
  train_neg_hamming_loss_micro_oob:
  - -0.1753393665158371
  - -0.1655379984951091
  - -0.17304804804804805
  - -0.174496644295302
  - -0.17792792792792791
  train_neg_hamming_loss_samples:
  - -0.13989441930618401
  - -0.1399548532731377
  - -0.14376876876876876
  - -0.14131245339299028
  - -0.14489489489489488
  train_neg_hamming_loss_samples_oob:
  - -0.1753393665158371
  - -0.16553799849510908
  - -0.17304804804804808
  - -0.174496644295302
  - -0.17792792792792791
  train_neg_hamming_loss_weighted:
  - -0.16930618401206635
  - -0.17142963979052234
  - -0.17546164298561856
  - -0.17015327803991678
  - -0.17417023322535133
  train_neg_hamming_loss_weighted_oob:
  - -0.2120221427274091
  - -0.20210934009812626
  - -0.21023508251058382
  - -0.21147094164883795
  - -0.21547728831193397
  train_neg_label_ranking_loss:
  - -0.09971719457013574
  - -0.0982192124404314
  - -0.0975663163163163
  - -0.10088242605021129
  - -0.10277777777777779
  train_neg_label_ranking_loss_oob:
  - -0.11452362996480644
  - -0.11956358164033108
  - -0.1136136136136136
  - -0.1162068108376833
  - -0.1204517017017017
  train_precision_macro:
  - 0.860105580693816
  - 0.8600451467268623
  - 0.8562312312312312
  - 0.8586875466070096
  - 0.8551051051051051
  train_precision_macro_oob:
  - 0.824660633484163
  - 0.8344620015048908
  - 0.8269519519519518
  - 0.825503355704698
  - 0.8220720720720719
  train_precision_micro:
  - 0.860105580693816
  - 0.8600451467268623
  - 0.8562312312312312
  - 0.8586875466070097
  - 0.8551051051051051
  train_precision_micro_oob:
  - 0.8246606334841629
  - 0.8344620015048909
  - 0.8269519519519519
  - 0.825503355704698
  - 0.8220720720720721
  train_precision_samples:
  - 0.8601055806938159
  - 0.8600451467268623
  - 0.8562312312312311
  - 0.8586875466070097
  - 0.8551051051051051
  train_precision_samples_oob:
  - 0.8246606334841629
  - 0.8344620015048908
  - 0.8269519519519518
  - 0.825503355704698
  - 0.8220720720720721
  train_precision_weighted:
  - 0.8306938159879336
  - 0.8285703602094776
  - 0.8245383570143814
  - 0.8298467219600831
  - 0.8258297667746487
  train_precision_weighted_oob:
  - 0.787977857272591
  - 0.7978906599018738
  - 0.789764917489416
  - 0.788529058351162
  - 0.7845227116880661
  train_recall_macro:
  - 0.860105580693816
  - 0.8600451467268623
  - 0.8562312312312312
  - 0.8586875466070096
  - 0.8551051051051051
  train_recall_macro_oob:
  - 0.824660633484163
  - 0.8344620015048908
  - 0.8269519519519518
  - 0.825503355704698
  - 0.8220720720720719
  train_recall_micro:
  - 0.860105580693816
  - 0.8600451467268623
  - 0.8562312312312312
  - 0.8586875466070097
  - 0.8551051051051051
  train_recall_micro_oob:
  - 0.8246606334841629
  - 0.8344620015048909
  - 0.8269519519519519
  - 0.825503355704698
  - 0.8220720720720721
  train_recall_samples:
  - 0.8601055806938159
  - 0.8600451467268623
  - 0.8562312312312311
  - 0.8586875466070097
  - 0.8551051051051051
  train_recall_samples_oob:
  - 0.8246606334841629
  - 0.8344620015048908
  - 0.8269519519519518
  - 0.825503355704698
  - 0.8220720720720721
  train_recall_weighted:
  - 0.8306938159879336
  - 0.8285703602094776
  - 0.8245383570143814
  - 0.8298467219600831
  - 0.8258297667746487
  train_recall_weighted_oob:
  - 0.787977857272591
  - 0.7978906599018738
  - 0.789764917489416
  - 0.788529058351162
  - 0.7845227116880661
  train_roc_auc_macro:
  - 0.8788809006462598
  - 0.8853590830714486
  - 0.8813096953962388
  - 0.8791965682020578
  - 0.8697540871749343
  train_roc_auc_macro_oob:
  - 0.8392176648292581
  - 0.845943397653722
  - 0.8333061000686968
  - 0.8329999492585506
  - 0.8249106700669294
  train_roc_auc_micro:
  - 0.9083760942269317
  - 0.9121008564338126
  - 0.9077712113627651
  - 0.9085182670261639
  - 0.905470971289667
  train_roc_auc_micro_oob:
  - 0.8893414127086766
  - 0.893356305431197
  - 0.8901608564142853
  - 0.8896625593440406
  - 0.8853956536169336
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - 0.8991175739497888
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - 0.8837931891623166
  - .nan
  train_roc_auc_weighted:
  - 0.8360575108697413
  - 0.8432892120398824
  - 0.8379348977863142
  - 0.8323301002439396
  - 0.8199498385317672
  train_roc_auc_weighted_oob:
  - 0.8106197901103586
  - 0.818624408692682
  - 0.8159303426176443
  - 0.8072881943521112
  - 0.7911407941184334
start: 2023-12-21 23:05:46.912396
wrapper: null
