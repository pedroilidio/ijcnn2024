active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b8AZ2ZmZmb2PwCcmZmZmdk/ADIzMzMz478AnJmZmZnZPw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 18:18:36.940153
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__8
  params: {}
hash: 96337816caba7c2a3a85bafe701fa95895423c3684b437a217806fc65e234764
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9633781_20231222T174453837955_embedding_weak__8_scene.yml
results:
  fit_time:
  - 1766.7220239639282
  - 1913.8347692489624
  - 1677.7899115085602
  - 1589.3257393836975
  - 1870.2761940956116
  score_time:
  - 16.426307678222656
  - 16.558944940567017
  - 15.689794540405273
  - 17.158549308776855
  - 16.75105619430542
  test_average_precision_macro:
  - 0.8405336064860789
  - 0.8289142821305342
  - 0.8431978385572944
  - 0.8366189470288251
  - 0.8424658183044659
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8501159726300693
  - 0.8317221478176373
  - 0.8533988409608178
  - 0.8451179850601424
  - 0.845890554272725
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.883488612836439
  - 0.8642534722222222
  - 0.868052668052668
  - 0.8766943291839557
  - 0.878031878031878
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8287168016556058
  - 0.8177132267282174
  - 0.8313310714702643
  - 0.8255080972582078
  - 0.833173473430778
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9064872325741891
  - 0.8979166666666666
  - 0.9026334026334025
  - 0.9024896265560166
  - 0.9033264033264032
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9064872325741891
  - 0.8979166666666667
  - 0.9026334026334026
  - 0.9024896265560166
  - 0.9033264033264033
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9064872325741892
  - 0.8979166666666667
  - 0.9026334026334027
  - 0.9024896265560167
  - 0.9033264033264033
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9005089883905796
  - 0.893044809800129
  - 0.8970550834628505
  - 0.8973509668530415
  - 0.8981168575763171
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8330505686841366
  - 0.8183191210266063
  - 0.8264018864290624
  - 0.8255455434583926
  - 0.8269951136043682
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8289681287472389
  - 0.8147448015122873
  - 0.8225449952636564
  - 0.8223062381852552
  - 0.8236966824644549
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8454599230996744
  - 0.8306051587301586
  - 0.8382833382833382
  - 0.8394586050187709
  - 0.841104841104841
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8233886947015793
  - 0.8104822172587349
  - 0.817490097375374
  - 0.8172387734360583
  - 0.8186841958821255
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8834886128364388
  - 0.864253472222222
  - 0.8680526680526679
  - 0.8766943291839554
  - 0.878031878031878
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6506733418558858
  - 0.6141738980305151
  - 0.6343010059233464
  - 0.6366367075015722
  - 0.6409827450049619
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6493810550858169
  - 0.6146525341031771
  - 0.6332902297691512
  - 0.6336840337852921
  - 0.6380879672553634
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5337818946348651
  - 0.4842604323629666
  - 0.5043330552528195
  - 0.5166038604699625
  - 0.5204535336433568
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6302206651482153
  - 0.5986092307309442
  - 0.6153035426392408
  - 0.6200900540401678
  - 0.6241540442182115
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9143380005893152
  - 0.9001551605413238
  - 0.9024666233682394
  - 0.9095239320910318
  - 0.9100674049628729
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4057971014492754
  - -1.4375
  - -1.4615384615384615
  - -1.4356846473029046
  - -1.4511434511434511
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0935127674258109
  - -0.10208333333333335
  - -0.09736659736659736
  - -0.09751037344398339
  - -0.09667359667359669
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09351276742581091
  - -0.10208333333333333
  - -0.09736659736659736
  - -0.0975103734439834
  - -0.09667359667359668
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.0935127674258109
  - -0.10208333333333333
  - -0.09736659736659736
  - -0.0975103734439834
  - -0.09667359667359668
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09949101160942049
  - -0.10695519019987104
  - -0.10294491653714954
  - -0.10264903314695845
  - -0.10188314242368297
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06506211180124225
  - -0.07062500000000001
  - -0.07614345114345114
  - -0.06945020746887967
  - -0.07286902286902286
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9064872325741891
  - 0.8979166666666666
  - 0.9026334026334025
  - 0.9024896265560166
  - 0.9033264033264032
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9064872325741891
  - 0.8979166666666667
  - 0.9026334026334026
  - 0.9024896265560166
  - 0.9033264033264033
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9064872325741892
  - 0.8979166666666667
  - 0.9026334026334027
  - 0.9024896265560167
  - 0.9033264033264033
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9005089883905796
  - 0.893044809800129
  - 0.8970550834628505
  - 0.8973509668530415
  - 0.8981168575763171
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9064872325741891
  - 0.8979166666666666
  - 0.9026334026334025
  - 0.9024896265560166
  - 0.9033264033264032
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9064872325741891
  - 0.8979166666666667
  - 0.9026334026334026
  - 0.9024896265560166
  - 0.9033264033264033
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9064872325741892
  - 0.8979166666666667
  - 0.9026334026334027
  - 0.9024896265560167
  - 0.9033264033264033
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9005089883905796
  - 0.893044809800129
  - 0.8970550834628505
  - 0.8973509668530415
  - 0.8981168575763171
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9452835504247087
  - 0.9397391330595509
  - 0.944775026610678
  - 0.9452743551321535
  - 0.9418348627250915
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9544093837659029
  - 0.947855028072206
  - 0.9524275939446303
  - 0.9528807902860136
  - 0.9474855375404361
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9349378881987578
  - 0.9293750000000001
  - 0.9238565488565489
  - 0.9305497925311202
  - 0.9271309771309771
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9397902179362569
  - 0.9339209881710274
  - 0.9395835076636104
  - 0.9401801131259585
  - 0.9368900270051983
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9942505576842421
  - 0.9943219290243009
  - 0.9946304650796143
  - 0.9942357990909357
  - 0.9951167239306392
  train_average_precision_macro_oob:
  - 0.8590219186754927
  - 0.8573840845745652
  - 0.856168575358141
  - 0.8573815833295328
  - 0.8652432694915153
  train_average_precision_micro:
  - 0.9937257313737345
  - 0.9939237217402902
  - 0.9942168800526663
  - 0.993723140128937
  - 0.9946363000680485
  train_average_precision_micro_oob:
  - 0.8643379708101605
  - 0.8640085916698693
  - 0.8616866087127202
  - 0.8632652062272882
  - 0.8695583691293762
  train_average_precision_samples:
  - 0.987959112959113
  - 0.9884967998616156
  - 0.9890533056420906
  - 0.9883549783549784
  - 0.9891398407753548
  train_average_precision_samples_oob:
  - 0.8841519404019405
  - 0.8831862999481058
  - 0.8827924887504326
  - 0.8812943722943722
  - 0.8895422291450328
  train_average_precision_weighted:
  - 0.994173839635295
  - 0.9942191292965054
  - 0.9945335835370218
  - 0.9941807078755218
  - 0.9950892208899981
  train_average_precision_weighted_oob:
  - 0.85056883207918
  - 0.8483087949053432
  - 0.8469672681823726
  - 0.8485161049641496
  - 0.8572730214117403
  train_f1_macro:
  - 0.9562543312543313
  - 0.9559764746583636
  - 0.9556940117687781
  - 0.9557575757575757
  - 0.9567324333679473
  train_f1_macro_oob:
  - 0.8978690228690228
  - 0.8989794153260681
  - 0.8960713049498096
  - 0.8981818181818183
  - 0.8991865697473175
  train_f1_micro:
  - 0.9562543312543312
  - 0.9559764746583636
  - 0.9556940117687781
  - 0.9557575757575758
  - 0.9567324333679473
  train_f1_micro_oob:
  - 0.8978690228690228
  - 0.8989794153260682
  - 0.8960713049498096
  - 0.8981818181818182
  - 0.8991865697473174
  train_f1_samples:
  - 0.9562543312543313
  - 0.9559764746583637
  - 0.9556940117687782
  - 0.9557575757575758
  - 0.9567324333679474
  train_f1_samples_oob:
  - 0.8978690228690228
  - 0.8989794153260683
  - 0.8960713049498097
  - 0.8981818181818182
  - 0.8991865697473175
  train_f1_weighted:
  - 0.9545062470594385
  - 0.9541976534214496
  - 0.9538042851194686
  - 0.953899433899434
  - 0.9550788461915247
  train_f1_weighted_oob:
  - 0.8926526679186254
  - 0.8933424942710682
  - 0.8908944973688303
  - 0.8927849508981585
  - 0.8939800182967172
  train_jaccard_macro:
  - 0.9166171162522954
  - 0.9161245514707644
  - 0.9156779095535055
  - 0.915770365509191
  - 0.9174607817637946
  train_jaccard_macro_oob:
  - 0.8182208297126382
  - 0.8204409836317748
  - 0.8152628775270175
  - 0.8188915299528104
  - 0.8203425686965508
  train_jaccard_micro:
  - 0.9161756162337124
  - 0.9156656449341397
  - 0.9151474975140869
  - 0.9152640742890308
  - 0.9170537491705375
  train_jaccard_micro_oob:
  - 0.8146663522754067
  - 0.816496465043205
  - 0.8117112173708552
  - 0.8151815181518152
  - 0.8168382988758746
  train_jaccard_samples:
  - 0.9263686763686764
  - 0.9259643660266389
  - 0.9255550610690797
  - 0.9254421768707483
  - 0.9270137961726747
  train_jaccard_samples_oob:
  - 0.829138204138204
  - 0.8312822793881434
  - 0.826200365919992
  - 0.8297217068645639
  - 0.8314790090491023
  train_jaccard_weighted:
  - 0.9134293731023134
  - 0.9128933908740063
  - 0.9122586005726804
  - 0.9124038683566252
  - 0.9144492862253749
  train_jaccard_weighted_oob:
  - 0.809892911378038
  - 0.8114924642916261
  - 0.8069994371767006
  - 0.8102889948570402
  - 0.8119785061176642
  train_label_ranking_average_precision_score:
  - 0.9879591129591128
  - 0.9884967998616154
  - 0.9890533056420905
  - 0.9883549783549784
  - 0.9891398407753547
  train_label_ranking_average_precision_score_oob:
  - 0.8841519404019406
  - 0.8831862999481058
  - 0.8827924887504326
  - 0.8812943722943725
  - 0.8895422291450327
  train_matthews_corrcoef_macro:
  - 0.8499180108161325
  - 0.8486618673640139
  - 0.8480088164128622
  - 0.848135796849682
  - 0.8511551796298741
  train_matthews_corrcoef_macro_oob:
  - 0.6140015351264744
  - 0.6164478711123377
  - 0.6044970028357414
  - 0.6139637623939794
  - 0.6199435963166497
  train_matthews_corrcoef_micro:
  - 0.8469923476357575
  - 0.84577848471711
  - 0.8449529600543472
  - 0.845091068362047
  - 0.8485236141156098
  train_matthews_corrcoef_micro_oob:
  - 0.6153904039395791
  - 0.6194288285337438
  - 0.6072739447930317
  - 0.6159562454380718
  - 0.6204495486445545
  train_matthews_corrcoef_samples:
  - 0.7839174898754221
  - 0.7847455994379938
  - 0.7850035798424617
  - 0.7804270969269501
  - 0.7866916985869838
  train_matthews_corrcoef_samples_oob:
  - 0.46385352898845633
  - 0.47194846835398113
  - 0.45399235654710407
  - 0.46651185901499953
  - 0.4716819608419459
  train_matthews_corrcoef_weighted:
  - 0.8456144329435592
  - 0.8443635619690666
  - 0.8433892856261425
  - 0.8435879063223939
  - 0.8472132127064341
  train_matthews_corrcoef_weighted_oob:
  - 0.597010002262878
  - 0.5972048861145473
  - 0.587732704929195
  - 0.5959613167767689
  - 0.6030894878080295
  train_ndgc:
  - 0.9911960349979707
  - 0.9915963355582946
  - 0.9920335077715758
  - 0.9915485223506809
  - 0.9921061791946714
  train_ndgc_oob:
  - 0.9146028573369135
  - 0.9140117394038606
  - 0.9135629090988701
  - 0.9125738219269773
  - 0.9185463803981115
  train_neg_coverage_error:
  - -1.1034303534303533
  - -1.100155682407888
  - -1.1007268951194185
  - -1.1007792207792209
  - -1.0991692627206646
  train_neg_coverage_error_oob:
  - -1.4163201663201663
  - -1.4193046185781006
  - -1.4200415368639667
  - -1.4228571428571428
  - -1.397196261682243
  train_neg_hamming_loss_macro:
  - -0.043745668745668743
  - -0.044023525341636394
  - -0.04430598823122187
  - -0.04424242424242424
  - -0.04326756663205261
  train_neg_hamming_loss_macro_oob:
  - -0.10213097713097714
  - -0.10102058467393184
  - -0.10392869505019038
  - -0.10181818181818182
  - -0.10081343025268259
  train_neg_hamming_loss_micro:
  - -0.043745668745668743
  - -0.044023525341636394
  - -0.04430598823122188
  - -0.04424242424242424
  - -0.04326756663205261
  train_neg_hamming_loss_micro_oob:
  - -0.10213097713097713
  - -0.10102058467393185
  - -0.10392869505019038
  - -0.10181818181818182
  - -0.10081343025268259
  train_neg_hamming_loss_samples:
  - -0.043745668745668743
  - -0.044023525341636394
  - -0.04430598823122187
  - -0.044242424242424236
  - -0.04326756663205261
  train_neg_hamming_loss_samples_oob:
  - -0.10213097713097713
  - -0.10102058467393184
  - -0.10392869505019037
  - -0.10181818181818182
  - -0.10081343025268258
  train_neg_hamming_loss_weighted:
  - -0.04549375294056146
  - -0.04580234657855036
  - -0.046195714880531355
  - -0.04610056610056611
  - -0.044921153808475264
  train_neg_hamming_loss_weighted_oob:
  - -0.10734733208137465
  - -0.10665750572893194
  - -0.1091055026311697
  - -0.10721504910184156
  - -0.1060199817032827
  train_neg_label_ranking_loss:
  - -0.005600311850311851
  - -0.005254281266216918
  - -0.005010384215991693
  - -0.0051818181818181815
  - -0.004919522326064383
  train_neg_label_ranking_loss_oob:
  - -0.06639812889812889
  - -0.06706019719771666
  - -0.06739356178608516
  - -0.0676103896103896
  - -0.06321391484942887
  train_precision_macro:
  - 0.9562543312543313
  - 0.9559764746583636
  - 0.9556940117687781
  - 0.9557575757575757
  - 0.9567324333679473
  train_precision_macro_oob:
  - 0.8978690228690228
  - 0.8989794153260681
  - 0.8960713049498096
  - 0.8981818181818183
  - 0.8991865697473175
  train_precision_micro:
  - 0.9562543312543312
  - 0.9559764746583636
  - 0.9556940117687781
  - 0.9557575757575758
  - 0.9567324333679473
  train_precision_micro_oob:
  - 0.8978690228690228
  - 0.8989794153260682
  - 0.8960713049498096
  - 0.8981818181818182
  - 0.8991865697473174
  train_precision_samples:
  - 0.9562543312543313
  - 0.9559764746583637
  - 0.9556940117687782
  - 0.9557575757575758
  - 0.9567324333679474
  train_precision_samples_oob:
  - 0.8978690228690228
  - 0.8989794153260683
  - 0.8960713049498097
  - 0.8981818181818182
  - 0.8991865697473175
  train_precision_weighted:
  - 0.9545062470594385
  - 0.9541976534214496
  - 0.9538042851194686
  - 0.953899433899434
  - 0.9550788461915247
  train_precision_weighted_oob:
  - 0.8926526679186254
  - 0.8933424942710682
  - 0.8908944973688303
  - 0.8927849508981585
  - 0.8939800182967172
  train_recall_macro:
  - 0.9562543312543313
  - 0.9559764746583636
  - 0.9556940117687781
  - 0.9557575757575757
  - 0.9567324333679473
  train_recall_macro_oob:
  - 0.8978690228690228
  - 0.8989794153260681
  - 0.8960713049498096
  - 0.8981818181818183
  - 0.8991865697473175
  train_recall_micro:
  - 0.9562543312543312
  - 0.9559764746583636
  - 0.9556940117687781
  - 0.9557575757575758
  - 0.9567324333679473
  train_recall_micro_oob:
  - 0.8978690228690228
  - 0.8989794153260682
  - 0.8960713049498096
  - 0.8981818181818182
  - 0.8991865697473174
  train_recall_samples:
  - 0.9562543312543313
  - 0.9559764746583637
  - 0.9556940117687782
  - 0.9557575757575758
  - 0.9567324333679474
  train_recall_samples_oob:
  - 0.8978690228690228
  - 0.8989794153260683
  - 0.8960713049498097
  - 0.8981818181818182
  - 0.8991865697473175
  train_recall_weighted:
  - 0.9545062470594385
  - 0.9541976534214496
  - 0.9538042851194686
  - 0.953899433899434
  - 0.9550788461915247
  train_recall_weighted_oob:
  - 0.8926526679186254
  - 0.8933424942710682
  - 0.8908944973688303
  - 0.8927849508981585
  - 0.8939800182967172
  train_roc_auc_macro:
  - 0.9985957068135175
  - 0.9985754050120553
  - 0.9986694222250959
  - 0.9985346277215618
  - 0.9988793967510552
  train_roc_auc_macro_oob:
  - 0.9506689636958973
  - 0.949536244795481
  - 0.9497143776636424
  - 0.9502466173319352
  - 0.9531876421768425
  train_roc_auc_micro:
  - 0.9985431994336911
  - 0.998543593041966
  - 0.9986628145622178
  - 0.9985353312966379
  - 0.9987702767694298
  train_roc_auc_micro_oob:
  - 0.9558321725740198
  - 0.9552309124076734
  - 0.9555589676523042
  - 0.9555609429365645
  - 0.9583760648071458
  train_roc_auc_samples:
  - 0.9943996881496882
  - 0.994745718733783
  - 0.9949896157840082
  - 0.9948181818181818
  - 0.9950804776739357
  train_roc_auc_samples_oob:
  - 0.9336018711018711
  - 0.9329398028022834
  - 0.9326064382139149
  - 0.9323896103896103
  - 0.9367860851505712
  train_roc_auc_weighted:
  - 0.9985501246880321
  - 0.9985245593705709
  - 0.998618703045883
  - 0.9984944850996714
  - 0.998861970250063
  train_roc_auc_weighted_oob:
  - 0.9467626067657895
  - 0.9454138350057513
  - 0.9453856778199136
  - 0.9462730279600821
  - 0.949402984918806
start: 2023-12-22 17:44:53.837955
wrapper: null
