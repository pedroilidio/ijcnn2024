active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMEMCgmZmZmZnpP2hmZmZmZg5AmJmZmZmZAcDQzMzMzMz8Pw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz8z8AmpmZmZnJP8DMzMzMzPy/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j+YmZmZmZn5v2ZmZmZmZhLAoJmZmZmZ2T+amZmZmZkRQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/mpmZmZmZAUDMzMzMzMz8vw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZCcCQmZmZmZkBwHBmZmZmZgZAIDMzMzMz879wZmZmZmYOQA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 15:14:54.739098
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__3
  params: {}
hash: ca402ad84f8019633cc8645781a7c03a391d7c7d24febb5061f2793176c1e09b
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ca402ad_20231221T151436072011_embedding_weak__3_flags.yml
results:
  fit_time:
  - 12.516738891601562
  - 12.682800531387329
  - 12.650498151779175
  - 12.781303644180298
  - 13.093732357025146
  score_time:
  - 1.7726562023162842
  - 1.736945629119873
  - 1.5151607990264893
  - 1.7188098430633545
  - 1.615443468093872
  test_average_precision_macro:
  - 0.7184981483474202
  - 0.6453452530072908
  - 0.7588671250674517
  - 0.6342803290328954
  - 0.7641177496052157
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7331086134895222
  - 0.7088743146513495
  - 0.7909692456074845
  - 0.7363914515005976
  - 0.8204559506784035
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.795110544217687
  - 0.7711769260549748
  - 0.8663569223985892
  - 0.8046517857142856
  - 0.862077097505669
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7350861921111926
  - 0.6991770394485604
  - 0.7777150620045913
  - 0.7275455485285897
  - 0.8038931877364212
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5578231292517006
  - 0.554006968641115
  - 0.4761904761904762
  - 0.5357142857142857
  - 0.4979591836734694
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5578231292517006
  - 0.554006968641115
  - 0.47619047619047616
  - 0.5357142857142857
  - 0.49795918367346936
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5578231292517006
  - 0.5540069686411149
  - 0.47619047619047616
  - 0.5357142857142857
  - 0.49795918367346925
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.46801705756929635
  - 0.4740509811113149
  - 0.3752072968490879
  - 0.4293893129770992
  - 0.38571428571428573
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4148630010685083
  - 0.40689307388919066
  - 0.3429946428511708
  - 0.4007654251762978
  - 0.36549573042900235
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.3867924528301887
  - 0.38313253012048193
  - 0.3125
  - 0.36585365853658536
  - 0.33152173913043476
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.40495337995338004
  - 0.39548297231224055
  - 0.32973215056548394
  - 0.381017871017871
  - 0.3464113664113665
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3238613257111239
  - 0.3250841107346179
  - 0.2518445386815159
  - 0.2897874163272664
  - 0.26021332839863287
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.795110544217687
  - 0.7711769260549748
  - 0.8663569223985892
  - 0.8046517857142856
  - 0.8620770975056687
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05947325325079716
  - 0.025153421774245406
  - -0.01452019922336513
  - -0.004833318026711909
  - -0.0045682415917376274
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12833307154304643
  - 0.12484244537953804
  - 0.0555486414523792
  - 0.04146552584151177
  - 0.0825122952480562
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.03256368090466407
  - 0.03992980005899695
  - 0.03367378461125131
  - 0.0019079509178533585
  - 0.02571692442772794
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06772215477376592
  - 0.038321860038601406
  - -0.02351405396619577
  - -0.008500891565870394
  - -0.008232844280863122
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8760815014975769
  - 0.8562376503618382
  - 0.9217956381434956
  - 0.8849329403737883
  - 0.9167932872052035
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.5
  - -4.804878048780488
  - -4.805555555555555
  - -4.65
  - -4.685714285714286
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4421768707482993
  - -0.445993031358885
  - -0.5238095238095238
  - -0.4642857142857143
  - -0.5020408163265305
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4421768707482993
  - -0.445993031358885
  - -0.5238095238095238
  - -0.4642857142857143
  - -0.5020408163265306
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.44217687074829926
  - -0.4459930313588849
  - -0.5238095238095238
  - -0.46428571428571425
  - -0.5020408163265306
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5319829424307037
  - -0.5259490188886852
  - -0.6247927031509121
  - -0.5706106870229007
  - -0.6142857142857142
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2047619047619047
  - -0.24796747967479676
  - -0.1787037037037037
  - -0.21708333333333335
  - -0.16857142857142857
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5578231292517006
  - 0.554006968641115
  - 0.4761904761904762
  - 0.5357142857142857
  - 0.4979591836734694
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5578231292517006
  - 0.554006968641115
  - 0.47619047619047616
  - 0.5357142857142857
  - 0.49795918367346936
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5578231292517006
  - 0.5540069686411149
  - 0.47619047619047616
  - 0.5357142857142857
  - 0.49795918367346925
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.46801705756929635
  - 0.4740509811113149
  - 0.3752072968490879
  - 0.4293893129770992
  - 0.38571428571428573
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5578231292517006
  - 0.554006968641115
  - 0.4761904761904762
  - 0.5357142857142857
  - 0.4979591836734694
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5578231292517006
  - 0.554006968641115
  - 0.47619047619047616
  - 0.5357142857142857
  - 0.49795918367346936
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5578231292517006
  - 0.5540069686411149
  - 0.47619047619047616
  - 0.5357142857142857
  - 0.49795918367346925
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.46801705756929635
  - 0.4740509811113149
  - 0.3752072968490879
  - 0.4293893129770992
  - 0.38571428571428573
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7003545518193314
  - 0.6419930370992192
  - 0.6879415012719543
  - 0.64694615953107
  - 0.6963821653456127
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7855410447761194
  - 0.764427302021287
  - 0.8134960789273968
  - 0.7905630411394027
  - 0.8243964252367615
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7952380952380952
  - 0.7520325203252032
  - .nan
  - 0.7829166666666667
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6605971764553854
  - 0.5996047316965804
  - 0.615505231140763
  - 0.6389107259336266
  - 0.6348276858636175
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.872873843264873
  - 0.874900232491236
  - 0.8618114766857515
  - 0.8727567790022931
  - 0.8708256263291518
  train_average_precision_macro_oob:
  - 0.6561864473844646
  - 0.6813001525313276
  - 0.6518011191616981
  - 0.7148020723378996
  - 0.6968365886896571
  train_average_precision_micro:
  - 0.8984712656537946
  - 0.9034583819438773
  - 0.9073209749213154
  - 0.9012429300325011
  - 0.8984082486184917
  train_average_precision_micro_oob:
  - 0.7845688394190924
  - 0.786097865527809
  - 0.782418614548756
  - 0.7842929792036192
  - 0.7921035141495689
  train_average_precision_samples:
  - 0.9153981307435256
  - 0.9102687000726216
  - 0.9157856138235888
  - 0.9048090599876314
  - 0.9016903763601878
  train_average_precision_samples_oob:
  - 0.8316212406015038
  - 0.8215849673202614
  - 0.8324244022503517
  - 0.8366522366522365
  - 0.8289677548168114
  train_average_precision_weighted:
  - 0.9008888691654646
  - 0.9047084706288219
  - 0.9040410151722681
  - 0.901580877963937
  - 0.9060207270345145
  train_average_precision_weighted_oob:
  - 0.7383759326308745
  - 0.7478556683157344
  - 0.7436053334117351
  - 0.7664799092021118
  - 0.7759524087326576
  train_f1_macro:
  - 0.6024436090225563
  - 0.599439775910364
  - 0.5922242314647378
  - 0.5918367346938774
  - 0.6082659478885893
  train_f1_macro_oob:
  - 0.5093984962406015
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548967
  train_f1_micro:
  - 0.6024436090225563
  - 0.5994397759103641
  - 0.5922242314647378
  - 0.5918367346938775
  - 0.6082659478885895
  train_f1_micro_oob:
  - 0.5093984962406015
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548967
  train_f1_samples:
  - 0.6024436090225563
  - 0.599439775910364
  - 0.5922242314647377
  - 0.5918367346938777
  - 0.6082659478885893
  train_f1_samples_oob:
  - 0.5093984962406014
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548966
  train_f1_weighted:
  - 0.5522298111691442
  - 0.5477248677248677
  - 0.530824234225529
  - 0.5423371694718944
  - 0.5617345249917246
  train_f1_weighted_oob:
  - 0.40869827239855366
  - 0.43412387177093054
  - 0.43240892839887907
  - 0.4387614283249957
  - 0.4522863763181539
  train_jaccard_macro:
  - 0.44515350753821636
  - 0.44265051027760755
  - 0.4380879952389375
  - 0.4338940926429059
  - 0.45148652040615156
  train_jaccard_macro_oob:
  - 0.37305978212418606
  - 0.3853281367798433
  - 0.3908217589194101
  - 0.38377345503021826
  - 0.3942433635169819
  train_jaccard_micro:
  - 0.43106926698049763
  - 0.428
  - 0.4206807964033398
  - 0.42028985507246375
  - 0.4370561652679148
  train_jaccard_micro_oob:
  - 0.3417402269861286
  - 0.3574144486692015
  - 0.36039360393603936
  - 0.35768261964735515
  - 0.3681622618315919
  train_jaccard_samples:
  - 0.4521571995256205
  - 0.45213573644946187
  - 0.4447159029437511
  - 0.44292979747525196
  - 0.4559269521533672
  train_jaccard_samples_oob:
  - 0.35718623481781375
  - 0.3716321079066177
  - 0.37669858271124085
  - 0.37505171596080683
  - 0.3825218806350882
  train_jaccard_weighted:
  - 0.3874581782346207
  - 0.38344614892451784
  - 0.3690403788266115
  - 0.37817404874099225
  - 0.39646887528680874
  train_jaccard_weighted_oob:
  - 0.27728947697998674
  - 0.29441770146969726
  - 0.29457370086093443
  - 0.29823580606512046
  - 0.30722241506947895
  train_label_ranking_average_precision_score:
  - 0.9153981307435252
  - 0.9102687000726215
  - 0.9157856138235886
  - 0.9048090599876312
  - 0.9016903763601878
  train_label_ranking_average_precision_score_oob:
  - 0.831621240601504
  - 0.8215849673202615
  - 0.8324244022503514
  - 0.8366522366522368
  - 0.8289677548168115
  train_matthews_corrcoef_macro:
  - 0.13557134814614044
  - 0.12777665286423898
  - 0.10034828922848364
  - 0.10317859623299015
  - 0.12272846237259831
  train_matthews_corrcoef_macro_oob:
  - 0.008179976204483831
  - 0.051819013771097225
  - 0.018677698578009154
  - 0.04071839231543604
  - 0.028268889864030828
  train_matthews_corrcoef_micro:
  - 0.3287598546361824
  - 0.32
  - 0.2801606382512007
  - 0.29999497037247436
  - 0.3183748771775922
  train_matthews_corrcoef_micro_oob:
  - 0.044053860869662856
  - 0.13333333333333333
  - 0.06349434497307567
  - 0.12285871056894025
  - 0.12255521141949918
  train_matthews_corrcoef_samples:
  - 0.26160466602355126
  - 0.23173135060934863
  - 0.19410317418371434
  - 0.20988140901017088
  - 0.2284753422525056
  train_matthews_corrcoef_samples_oob:
  - 0.0046520182972799185
  - 0.02559506349732411
  - 0.009259677840772177
  - 0.03765106555659514
  - 0.029675344864608138
  train_matthews_corrcoef_weighted:
  - 0.19272796981056614
  - 0.18475400482231147
  - 0.15354082503149818
  - 0.1564288331671136
  - 0.18082427849677296
  train_matthews_corrcoef_weighted_oob:
  - 0.01333148793631525
  - 0.0720765797288769
  - 0.029515450092657155
  - 0.056886230175121386
  - 0.04453339078439708
  train_ndgc:
  - 0.9592525621811798
  - 0.954080121829849
  - 0.9579575185831787
  - 0.9492978278907753
  - 0.9481570997171876
  train_ndgc_oob:
  - 0.9005953853340557
  - 0.8916383429918407
  - 0.9038933098694637
  - 0.9039588339026433
  - 0.9021109585099544
  train_neg_coverage_error:
  - -4.309210526315789
  - -4.2745098039215685
  - -4.1645569620253164
  - -4.311688311688312
  - -4.19496855345912
  train_neg_coverage_error_oob:
  - -4.730263157894737
  - -4.712418300653595
  - -4.594936708860759
  - -4.642857142857143
  - -4.616352201257862
  train_neg_hamming_loss_macro:
  - -0.3975563909774436
  - -0.4005602240896358
  - -0.40777576853526215
  - -0.40816326530612246
  - -0.39173405211141066
  train_neg_hamming_loss_macro_oob:
  - -0.49060150375939854
  - -0.47338935574229696
  - -0.47016274864376134
  - -0.47309833024118736
  - -0.4618149146451033
  train_neg_hamming_loss_micro:
  - -0.3975563909774436
  - -0.4005602240896359
  - -0.4077757685352622
  - -0.40816326530612246
  - -0.3917340521114106
  train_neg_hamming_loss_micro_oob:
  - -0.4906015037593985
  - -0.4733893557422969
  - -0.4701627486437613
  - -0.47309833024118736
  - -0.4618149146451033
  train_neg_hamming_loss_samples:
  - -0.39755639097744355
  - -0.4005602240896358
  - -0.40777576853526215
  - -0.4081632653061224
  - -0.39173405211141055
  train_neg_hamming_loss_samples_oob:
  - -0.49060150375939837
  - -0.47338935574229685
  - -0.47016274864376123
  - -0.4730983302411873
  - -0.46181491464510327
  train_neg_hamming_loss_weighted:
  - -0.44777018883085573
  - -0.4522751322751322
  - -0.469175765774471
  - -0.45766283052810564
  - -0.4382654750082755
  train_neg_hamming_loss_weighted_oob:
  - -0.5913017276014464
  - -0.5658761282290693
  - -0.567591071601121
  - -0.5612385716750041
  - -0.5477136236818461
  train_neg_label_ranking_loss:
  - -0.10570175438596491
  - -0.10555555555555554
  - -0.10675105485232068
  - -0.11558441558441557
  - -0.11540880503144654
  train_neg_label_ranking_loss_oob:
  - -0.1912280701754386
  - -0.19564270152505445
  - -0.19567510548523206
  - -0.1843073593073593
  - -0.1950733752620545
  train_precision_macro:
  - 0.6024436090225563
  - 0.599439775910364
  - 0.5922242314647378
  - 0.5918367346938774
  - 0.6082659478885893
  train_precision_macro_oob:
  - 0.5093984962406015
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548967
  train_precision_micro:
  - 0.6024436090225563
  - 0.5994397759103641
  - 0.5922242314647378
  - 0.5918367346938775
  - 0.6082659478885895
  train_precision_micro_oob:
  - 0.5093984962406015
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548967
  train_precision_samples:
  - 0.6024436090225563
  - 0.599439775910364
  - 0.5922242314647377
  - 0.5918367346938777
  - 0.6082659478885893
  train_precision_samples_oob:
  - 0.5093984962406014
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548966
  train_precision_weighted:
  - 0.5522298111691442
  - 0.5477248677248677
  - 0.530824234225529
  - 0.5423371694718944
  - 0.5617345249917246
  train_precision_weighted_oob:
  - 0.40869827239855366
  - 0.43412387177093054
  - 0.43240892839887907
  - 0.4387614283249957
  - 0.4522863763181539
  train_recall_macro:
  - 0.6024436090225563
  - 0.599439775910364
  - 0.5922242314647378
  - 0.5918367346938774
  - 0.6082659478885893
  train_recall_macro_oob:
  - 0.5093984962406015
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548967
  train_recall_micro:
  - 0.6024436090225563
  - 0.5994397759103641
  - 0.5922242314647378
  - 0.5918367346938775
  - 0.6082659478885895
  train_recall_micro_oob:
  - 0.5093984962406015
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548967
  train_recall_samples:
  - 0.6024436090225563
  - 0.599439775910364
  - 0.5922242314647377
  - 0.5918367346938777
  - 0.6082659478885893
  train_recall_samples_oob:
  - 0.5093984962406014
  - 0.5266106442577031
  - 0.5298372513562387
  - 0.5269016697588126
  - 0.5381850853548966
  train_recall_weighted:
  - 0.5522298111691442
  - 0.5477248677248677
  - 0.530824234225529
  - 0.5423371694718944
  - 0.5617345249917246
  train_recall_weighted_oob:
  - 0.40869827239855366
  - 0.43412387177093054
  - 0.43240892839887907
  - 0.4387614283249957
  - 0.4522863763181539
  train_roc_auc_macro:
  - 0.8359429048267538
  - 0.8526806051852194
  - 0.8683603520562334
  - 0.8531246737866685
  - 0.8717169989514268
  train_roc_auc_macro_oob:
  - 0.6832557973065241
  - 0.6972358924883072
  - 0.7323712990382347
  - 0.7254609765391576
  - 0.7369063445897331
  train_roc_auc_micro:
  - 0.8874222504947695
  - 0.8949119134833419
  - 0.8978319036751397
  - 0.8962503917321276
  - 0.8972571273277858
  train_roc_auc_micro_oob:
  - 0.8006043256997456
  - 0.8034222919937206
  - 0.8051303743343564
  - 0.8114382337444079
  - 0.810807138327747
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.824910348559687
  - 0.8359534485907082
  - 0.8700507661816885
  - 0.8384048079402876
  - 0.8565357658929755
  train_roc_auc_weighted_oob:
  - 0.668711756265895
  - 0.6680862828592307
  - 0.7272104590073101
  - 0.6875334436012451
  - 0.7342560731791551
start: 2023-12-21 15:14:36.072011
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
