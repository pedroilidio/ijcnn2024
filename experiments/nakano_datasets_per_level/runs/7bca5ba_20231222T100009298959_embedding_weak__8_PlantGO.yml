active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r8AzczMzMwEQICZmZmZmRXAADMzMzMzC8CAZmZmZmYeQA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 10:09:24.111228
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__8
  params: {}
hash: 7bca5babbbd543ded9248b9a93aaef0771ea4bf3d41d4f58be8ae5b00e0b4b0d
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7bca5ba_20231222T100009298959_embedding_weak__8_PlantGO.yml
results:
  fit_time:
  - 489.4458394050598
  - 505.0005588531494
  - 491.296480178833
  - 491.7471249103546
  - 499.7137529850006
  score_time:
  - 9.650882720947266
  - 10.352858066558838
  - 10.038707256317139
  - 9.89719295501709
  - 10.05903935432434
  test_average_precision_macro:
  - 0.7693750540370633
  - 0.6711461388983236
  - 0.7293002174276317
  - 0.7659476238346773
  - 0.6646532365560299
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7591256427620723
  - 0.7005765941920211
  - 0.6739132465657657
  - 0.7564387440808945
  - 0.7251663433890357
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8305800939049669
  - 0.7783288099350275
  - 0.7933054783801051
  - 0.8122457525723857
  - 0.8172049138804458
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8365233541322763
  - 0.7815461031127312
  - 0.7931398767627658
  - 0.8487921287582609
  - 0.781055562476245
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9124365482233503
  - 0.9127806563039723
  - 0.9145936981757877
  - 0.9149916247906198
  - 0.9122340425531917
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9124365482233503
  - 0.9127806563039723
  - 0.9145936981757877
  - 0.9149916247906198
  - 0.9122340425531915
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9124365482233503
  - 0.9127806563039722
  - 0.9145936981757876
  - 0.9149916247906197
  - 0.9122340425531915
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.837782041629223
  - 0.844364062958256
  - 0.8468741199662067
  - 0.8478003223665497
  - 0.842502532928065
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8482850592210699
  - 0.8478040962342392
  - 0.850798224393161
  - 0.8512799329841908
  - 0.8469769846624144
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.838973162193699
  - 0.8395552025416998
  - 0.8426279602750191
  - 0.8433037437282902
  - 0.8386308068459658
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8398839738941261
  - 0.8413255138643739
  - 0.8436389481165599
  - 0.8444972113313819
  - 0.8406593406593404
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7310100675998797
  - 0.7385332379945068
  - 0.7432413815201555
  - 0.7436110581379718
  - 0.7357236851602119
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8305800939049668
  - 0.7783288099350276
  - 0.7933054783801051
  - 0.8122457525723854
  - 0.8172049138804454
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.012187518365366199
  - 0.03009021115970043
  - 0.0342112662315991
  - 0.028626612056281964
  - 0.03173325294252771
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.09594314768111332
  - 0.20745565887309103
  - 0.16036481678687362
  - 0.19705413326752813
  - 0.2272281807364132
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.014766958929395477
  - 0.05181347150259067
  - 0.034373586612392586
  - 0.04522613065326633
  - 0.06866537717601548
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.03988642374119847
  - 0.09708351147752402
  - 0.0888791579625357
  - 0.09236133323819276
  - 0.1051730668952347
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8741004971535896
  - 0.8344575331900629
  - 0.8447644937939914
  - 0.8587388477491879
  - 0.8648465675177006
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7868020304568528
  - -2.1295336787564767
  - -1.9751243781094527
  - -1.8391959798994975
  - -1.9627659574468086
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08756345177664974
  - -0.08721934369602763
  - -0.08540630182421227
  - -0.08500837520938022
  - -0.08776595744680853
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08756345177664974
  - -0.08721934369602763
  - -0.08540630182421227
  - -0.08500837520938023
  - -0.08776595744680851
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08756345177664974
  - -0.08721934369602764
  - -0.08540630182421226
  - -0.08500837520938025
  - -0.08776595744680853
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.16221795837077702
  - -0.15563593704174408
  - -0.1531258800337933
  - -0.15219967763345027
  - -0.15749746707193515
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.061544377788032616
  - -0.08851816960625251
  - -0.08199909543193125
  - -0.06902695294655095
  - -0.07154255319148937
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9124365482233503
  - 0.9127806563039723
  - 0.9145936981757877
  - 0.9149916247906198
  - 0.9122340425531917
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9124365482233503
  - 0.9127806563039723
  - 0.9145936981757877
  - 0.9149916247906198
  - 0.9122340425531915
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9124365482233503
  - 0.9127806563039722
  - 0.9145936981757876
  - 0.9149916247906197
  - 0.9122340425531915
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.837782041629223
  - 0.844364062958256
  - 0.8468741199662067
  - 0.8478003223665497
  - 0.842502532928065
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9124365482233503
  - 0.9127806563039723
  - 0.9145936981757877
  - 0.9149916247906198
  - 0.9122340425531917
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9124365482233503
  - 0.9127806563039723
  - 0.9145936981757877
  - 0.9149916247906198
  - 0.9122340425531915
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9124365482233503
  - 0.9127806563039722
  - 0.9145936981757876
  - 0.9149916247906197
  - 0.9122340425531915
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.837782041629223
  - 0.844364062958256
  - 0.8468741199662067
  - 0.8478003223665497
  - 0.842502532928065
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9657518173377646
  - 0.9435290869970201
  - 0.960500406496113
  - 0.9723091829590357
  - 0.9508464912141879
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9557699352790329
  - 0.9304065930124111
  - 0.9327079759862779
  - 0.9487082495144284
  - 0.9389680212260857
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9384556222119674
  - 0.9114818303937475
  - 0.9180009045680689
  - 0.930973047053449
  - 0.9284574468085105
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9703828782799848
  - 0.955193851406857
  - 0.9605533368979837
  - 0.9746841213551759
  - 0.9570692819467339
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8604395270389493
  - 0.8511491281304494
  - 0.8198473280425776
  - 0.8450151275283436
  - 0.8429571151861324
  train_average_precision_macro_oob:
  - 0.6449761227521368
  - 0.6297307047241971
  - 0.5890622620873947
  - 0.6158143174193483
  - 0.6012689182832929
  train_average_precision_micro:
  - 0.8747096236002836
  - 0.8807631434862897
  - 0.870792382831761
  - 0.8608288459781442
  - 0.8592077875763069
  train_average_precision_micro_oob:
  - 0.7399880606804916
  - 0.7375474672216622
  - 0.7264041227577445
  - 0.7121596285058418
  - 0.7134894229959541
  train_average_precision_samples:
  - 0.9039179983482161
  - 0.8960560105146093
  - 0.8881509060080489
  - 0.8875247060741283
  - 0.8969097850110509
  train_average_precision_samples_oob:
  - 0.8145774555505669
  - 0.798340801095578
  - 0.7790612969184397
  - 0.7839621920655296
  - 0.7850499114106708
  train_average_precision_weighted:
  - 0.906636932838155
  - 0.9110936102281315
  - 0.8975687977218516
  - 0.8968858403566785
  - 0.8941348706723524
  train_average_precision_weighted_oob:
  - 0.7799288653645877
  - 0.7798074859254173
  - 0.7670487521402101
  - 0.7543882155691188
  - 0.7504578046716468
  train_f1_macro:
  - 0.913465642338882
  - 0.9142250530785563
  - 0.9155941655941655
  - 0.9138853230637568
  - 0.9164556962025318
  train_f1_macro_oob:
  - 0.911651728553137
  - 0.9139065817409766
  - 0.9147361647361647
  - 0.9134574240479246
  - 0.9150843881856541
  train_f1_micro:
  - 0.9134656423388817
  - 0.9142250530785563
  - 0.9155941655941656
  - 0.9138853230637569
  - 0.9164556962025316
  train_f1_micro_oob:
  - 0.911651728553137
  - 0.9139065817409766
  - 0.9147361647361647
  - 0.9134574240479247
  - 0.915084388185654
  train_f1_samples:
  - 0.9134656423388816
  - 0.9142250530785561
  - 0.9155941655941655
  - 0.9138853230637569
  - 0.9164556962025316
  train_f1_samples_oob:
  - 0.9116517285531368
  - 0.9139065817409765
  - 0.9147361647361647
  - 0.9134574240479246
  - 0.9150843881856539
  train_f1_weighted:
  - 0.8447737791459696
  - 0.8458885841436787
  - 0.8508803668946019
  - 0.8458908750915567
  - 0.85269567822635
  train_f1_weighted_oob:
  - 0.8390437185762327
  - 0.8450136379778015
  - 0.8484101793710335
  - 0.8444960156662814
  - 0.8487409182832746
  train_jaccard_macro:
  - 0.8489684529627306
  - 0.8501550931936537
  - 0.8518427489691716
  - 0.8495357679423394
  - 0.8531601115695872
  train_jaccard_macro_oob:
  - 0.8466575539051898
  - 0.8497236257054966
  - 0.8506696108709136
  - 0.8489860808899744
  - 0.8512925472516922
  train_jaccard_micro:
  - 0.8407149170185604
  - 0.8420023464998044
  - 0.8443279596479082
  - 0.8414261794543485
  - 0.8457943925233645
  train_jaccard_micro_oob:
  - 0.8376470588235294
  - 0.8414622226566318
  - 0.8428698487992885
  - 0.8407009943881067
  - 0.8434613514827418
  train_jaccard_samples:
  - 0.8421465858085577
  - 0.843320501154896
  - 0.8461085889657317
  - 0.8429206223814696
  - 0.8474447071915425
  train_jaccard_samples_oob:
  - 0.8387978218964135
  - 0.8427325540701337
  - 0.8445245873817302
  - 0.8421306549676254
  - 0.8449130616219221
  train_jaccard_weighted:
  - 0.7394956271590893
  - 0.7410951559913638
  - 0.7473667264271873
  - 0.7408952465259807
  - 0.7501948645978702
  train_jaccard_weighted_oob:
  - 0.7322318519338572
  - 0.7399339762569027
  - 0.7440317451758417
  - 0.739103384106172
  - 0.7448835540770877
  train_label_ranking_average_precision_score:
  - 0.9039179983482162
  - 0.8960560105146097
  - 0.8881509060080495
  - 0.8875247060741283
  - 0.896909785011051
  train_label_ranking_average_precision_score_oob:
  - 0.8145774555505674
  - 0.7983408010955788
  - 0.7790612969184402
  - 0.7839621920655303
  - 0.7850499114106714
  train_matthews_corrcoef_macro:
  - 0.03401553029156679
  - 0.034322922207569
  - 0.04503949272877288
  - 0.02898233009410793
  - 0.04693223857458184
  train_matthews_corrcoef_macro_oob:
  - 0.019194066836889987
  - 0.02648124595220759
  - 0.033078678155735286
  - 0.027309098025241656
  - 0.0359794123712742
  train_matthews_corrcoef_micro:
  - 0.19364693863544108
  - 0.19435574344262302
  - 0.2465532577072259
  - 0.20249981698241007
  - 0.23873587356148807
  train_matthews_corrcoef_micro_oob:
  - 0.13860199586896962
  - 0.18577732520430937
  - 0.22816550835138266
  - 0.19146396039288016
  - 0.20718205915063975
  train_matthews_corrcoef_samples:
  - 0.04672520061542261
  - 0.045744064852345105
  - 0.07207207207207207
  - 0.049947485120784216
  - 0.07127919430231251
  train_matthews_corrcoef_samples_oob:
  - 0.024958235186485354
  - 0.04192240880138969
  - 0.06177606177606178
  - 0.04481269693079706
  - 0.05482349809978086
  train_matthews_corrcoef_weighted:
  - 0.09996499740811969
  - 0.10116700892282686
  - 0.13187876856483796
  - 0.09447620770890698
  - 0.13041617106493497
  train_matthews_corrcoef_weighted_oob:
  - 0.062346685186493715
  - 0.08632320744563043
  - 0.10782942772474563
  - 0.0890218284381543
  - 0.10574499847334866
  train_ndgc:
  - 0.9286903153188177
  - 0.9225508726050231
  - 0.9164440249087742
  - 0.9165180102462895
  - 0.9225706661885127
  train_ndgc_oob:
  - 0.8613794255751422
  - 0.8484583431518772
  - 0.8336512420400817
  - 0.8381940894473878
  - 0.8385988275896157
  train_neg_coverage_error:
  - -1.500640204865557
  - -1.5490445859872612
  - -1.6048906048906049
  - -1.5879332477535302
  - -1.5417721518987342
  train_neg_coverage_error_oob:
  - -1.9769526248399487
  - -2.0662420382165605
  - -2.232947232947233
  - -2.1258023106546853
  - -2.1240506329113926
  train_neg_hamming_loss_macro:
  - -0.08653435766111822
  - -0.08577494692144373
  - -0.08440583440583442
  - -0.08611467693624304
  - -0.08354430379746836
  train_neg_hamming_loss_macro_oob:
  - -0.08834827144686298
  - -0.08609341825902335
  - -0.08526383526383526
  - -0.0865425759520753
  - -0.08491561181434598
  train_neg_hamming_loss_micro:
  - -0.08653435766111822
  - -0.08577494692144373
  - -0.0844058344058344
  - -0.08611467693624304
  - -0.08354430379746836
  train_neg_hamming_loss_micro_oob:
  - -0.088348271446863
  - -0.08609341825902335
  - -0.08526383526383527
  - -0.0865425759520753
  - -0.084915611814346
  train_neg_hamming_loss_samples:
  - -0.08653435766111822
  - -0.08577494692144373
  - -0.08440583440583439
  - -0.08611467693624306
  - -0.08354430379746836
  train_neg_hamming_loss_samples_oob:
  - -0.088348271446863
  - -0.08609341825902336
  - -0.08526383526383527
  - -0.0865425759520753
  - -0.08491561181434601
  train_neg_hamming_loss_weighted:
  - -0.15522622085403026
  - -0.15411141585632143
  - -0.14911963310539822
  - -0.15410912490844328
  - -0.1473043217736499
  train_neg_hamming_loss_weighted_oob:
  - -0.16095628142376717
  - -0.15498636202219856
  - -0.1515898206289665
  - -0.1555039843337186
  - -0.15125908171672534
  train_neg_label_ranking_loss:
  - -0.03587151929021327
  - -0.04111175448755066
  - -0.04521101187767854
  - -0.04320007952870598
  - -0.0418891446106636
  train_neg_label_ranking_loss_oob:
  - -0.07773035519514392
  - -0.08707113598833342
  - -0.10056138389471721
  - -0.09099380626980112
  - -0.09211226185909731
  train_precision_macro:
  - 0.913465642338882
  - 0.9142250530785563
  - 0.9155941655941655
  - 0.9138853230637568
  - 0.9164556962025318
  train_precision_macro_oob:
  - 0.911651728553137
  - 0.9139065817409766
  - 0.9147361647361647
  - 0.9134574240479246
  - 0.9150843881856541
  train_precision_micro:
  - 0.9134656423388817
  - 0.9142250530785563
  - 0.9155941655941656
  - 0.9138853230637569
  - 0.9164556962025316
  train_precision_micro_oob:
  - 0.911651728553137
  - 0.9139065817409766
  - 0.9147361647361647
  - 0.9134574240479247
  - 0.915084388185654
  train_precision_samples:
  - 0.9134656423388816
  - 0.9142250530785561
  - 0.9155941655941655
  - 0.9138853230637569
  - 0.9164556962025316
  train_precision_samples_oob:
  - 0.9116517285531368
  - 0.9139065817409765
  - 0.9147361647361647
  - 0.9134574240479246
  - 0.9150843881856539
  train_precision_weighted:
  - 0.8447737791459696
  - 0.8458885841436787
  - 0.8508803668946019
  - 0.8458908750915567
  - 0.85269567822635
  train_precision_weighted_oob:
  - 0.8390437185762327
  - 0.8450136379778015
  - 0.8484101793710335
  - 0.8444960156662814
  - 0.8487409182832746
  train_recall_macro:
  - 0.913465642338882
  - 0.9142250530785563
  - 0.9155941655941655
  - 0.9138853230637568
  - 0.9164556962025318
  train_recall_macro_oob:
  - 0.911651728553137
  - 0.9139065817409766
  - 0.9147361647361647
  - 0.9134574240479246
  - 0.9150843881856541
  train_recall_micro:
  - 0.9134656423388817
  - 0.9142250530785563
  - 0.9155941655941656
  - 0.9138853230637569
  - 0.9164556962025316
  train_recall_micro_oob:
  - 0.911651728553137
  - 0.9139065817409766
  - 0.9147361647361647
  - 0.9134574240479247
  - 0.915084388185654
  train_recall_samples:
  - 0.9134656423388816
  - 0.9142250530785561
  - 0.9155941655941655
  - 0.9138853230637569
  - 0.9164556962025316
  train_recall_samples_oob:
  - 0.9116517285531368
  - 0.9139065817409765
  - 0.9147361647361647
  - 0.9134574240479246
  - 0.9150843881856539
  train_recall_weighted:
  - 0.8447737791459696
  - 0.8458885841436787
  - 0.8508803668946019
  - 0.8458908750915567
  - 0.85269567822635
  train_recall_weighted_oob:
  - 0.8390437185762327
  - 0.8450136379778015
  - 0.8484101793710335
  - 0.8444960156662814
  - 0.8487409182832746
  train_roc_auc_macro:
  - 0.9808808515128709
  - 0.9801171062110282
  - 0.978851612549597
  - 0.9786992740318535
  - 0.9744583406989572
  train_roc_auc_macro_oob:
  - 0.9433690366131113
  - 0.9464027600210194
  - 0.9368155505545678
  - 0.9413087667808453
  - 0.9285252979912557
  train_roc_auc_micro:
  - 0.9738173984846241
  - 0.9709320120253192
  - 0.9658838268445425
  - 0.9686836227102472
  - 0.9683539880012197
  train_roc_auc_micro_oob:
  - 0.9382923545223094
  - 0.933306557538707
  - 0.9245106254536165
  - 0.9312557054220426
  - 0.9287087434858136
  train_roc_auc_samples:
  - 0.9641284807097866
  - 0.9588882455124493
  - 0.9547889881223215
  - 0.956799920471294
  - 0.9581108553893364
  train_roc_auc_samples_oob:
  - 0.9222696448048562
  - 0.9129288640116665
  - 0.8994386161052828
  - 0.9090061937301989
  - 0.9078877381409026
  train_roc_auc_weighted:
  - 0.9806552453875312
  - 0.9822959490712442
  - 0.981755802756465
  - 0.9800411926708782
  - 0.9771701932497653
  train_roc_auc_weighted_oob:
  - 0.9573481359712134
  - 0.9574463123999446
  - 0.9548190506012002
  - 0.9555113825948363
  - 0.9489155844822047
start: 2023-12-22 10:00:09.298959
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
