active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb+ZmZmZmZkBwDIzMzMzM/O/zszMzMzM/D/OzMzMzMz8Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzC0CgmZmZmZnZP6CZmZmZmdk/zMzMzMzMBMCYmZmZmZn5vw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:55:33.632710
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 4d4b5bac650db2a2ccfb779301f4d3876b8735ba9724dfc0e07a8096fb1c4c1b
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4d4b5ba_20231212T165448564946_embedding__9_birds.yml
results:
  fit_time:
  - 21.47371530532837
  - 21.485679864883423
  - 21.466365575790405
  - 23.876883029937744
  - 21.75167155265808
  score_time:
  - 6.544967174530029
  - 7.05410099029541
  - 7.423092842102051
  - 6.951855182647705
  - 7.236011266708374
  test_average_precision_macro:
  - 0.4786018788913771
  - 0.6194249052287276
  - 0.58961774779549
  - 0.5379051669112966
  - 0.55566733813012
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.49480391692381204
  - 0.56984668344257
  - 0.47723790888853507
  - 0.48678717515414727
  - 0.5229575364020203
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.33108012345358445
  - 0.3118012510112373
  - 0.3296745018547344
  - 0.3480128828966038
  - 0.3601136481950435
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5549916082338724
  - 0.6644095257747609
  - 0.5927871501837232
  - 0.5915943797982446
  - 0.6088911683548885
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9510403916768667
  - 0.9514483884128927
  - 0.9473684210526315
  - 0.9481844145246838
  - 0.9510403916768667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9510403916768666
  - 0.9514483884128927
  - 0.9473684210526315
  - 0.9481844145246838
  - 0.9510403916768666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9510403916768665
  - 0.9514483884128927
  - 0.9473684210526316
  - 0.9481844145246838
  - 0.9510403916768666
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9244031007751938
  - 0.9324641766502233
  - 0.9200909249868858
  - 0.9194268264035708
  - 0.9267676767676769
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9087384287412562
  - 0.9088220316633432
  - 0.9023339107933348
  - 0.9038451154905482
  - 0.908483983897106
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9066511085180864
  - 0.9073929961089494
  - 0.9
  - 0.9014740108611327
  - 0.9066511085180864
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9117253715838146
  - 0.9143956683693792
  - 0.9066228513650152
  - 0.9067520503314235
  - 0.9115139550933283
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8619560266767528
  - 0.875022669287655
  - 0.8548776961030582
  - 0.8531273685189721
  - 0.8652266024025055
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7729405885698635
  - 0.8389330339569742
  - 0.7792869049555096
  - 0.7821214100283869
  - 0.7864702373423302
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.035881013063180436
  - 0.07273658816432878
  - 0.025700526793276293
  - 0.036652212045843055
  - 0.06799897785051418
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.19503233687892535
  - 0.30673354948766907
  - 0.1757473486513715
  - 0.19044750386064116
  - 0.2937035699223821
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.024375087240801327
  - 0.07467482047275223
  - 0.035604179053321715
  - 0.0328630404995836
  - 0.05773323904904783
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.09386565337734248
  - 0.1719593687243436
  - 0.058744061241774385
  - 0.09519097332037905
  - 0.1680935402893221
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.39355091437974904
  - 0.36651108604212124
  - 0.39564097201331516
  - 0.41430479156685973
  - 0.42363188048380235
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.13953488372093
  - -2.7829457364341086
  - -3.131782945736434
  - -3.0155038759689923
  - -2.891472868217054
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04895960832313342
  - -0.0485516115871073
  - -0.05263157894736842
  - -0.05181558547531619
  - -0.04895960832313342
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04895960832313342
  - -0.0485516115871073
  - -0.05263157894736842
  - -0.0518155854753162
  - -0.04895960832313342
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04895960832313342
  - -0.04855161158710731
  - -0.05263157894736842
  - -0.05181558547531619
  - -0.04895960832313342
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07559689922480621
  - -0.06753582334977686
  - -0.07990907501311419
  - -0.08057317359642942
  - -0.07323232323232325
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.09915830673354614
  - -0.06507545375534432
  - -0.08847034938006211
  - -0.08054858894462177
  - -0.0844733242134063
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9510403916768667
  - 0.9514483884128927
  - 0.9473684210526315
  - 0.9481844145246838
  - 0.9510403916768667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9510403916768666
  - 0.9514483884128927
  - 0.9473684210526315
  - 0.9481844145246838
  - 0.9510403916768666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9510403916768665
  - 0.9514483884128927
  - 0.9473684210526316
  - 0.9481844145246838
  - 0.9510403916768666
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9244031007751938
  - 0.9324641766502233
  - 0.9200909249868858
  - 0.9194268264035708
  - 0.9267676767676769
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9510403916768667
  - 0.9514483884128927
  - 0.9473684210526315
  - 0.9481844145246838
  - 0.9510403916768667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9510403916768666
  - 0.9514483884128927
  - 0.9473684210526315
  - 0.9481844145246838
  - 0.9510403916768666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9510403916768665
  - 0.9514483884128927
  - 0.9473684210526316
  - 0.9481844145246838
  - 0.9510403916768666
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9244031007751938
  - 0.9324641766502233
  - 0.9200909249868858
  - 0.9194268264035708
  - 0.9267676767676769
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8555872992977825
  - 0.9135737394661332
  - 0.9008254670050928
  - 0.884780405214293
  - 0.9005343191217543
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8920687876182288
  - 0.9111980085460033
  - 0.9046397270138243
  - 0.911377683693337
  - 0.9008356527761445
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8728890979642553
  - 0.907634572500155
  - 0.8922021571928562
  - 0.8991998044722201
  - 0.8860100965527282
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9640098296386107
  - 0.9748562470204777
  - 0.9659284742181403
  - 0.9504075005060206
  - 0.9679810159873289
  train_average_precision_macro_oob:
  - 0.4737078707188088
  - 0.4495943889173848
  - 0.4728872785435142
  - 0.4953943970666308
  - 0.4722068768901579
  train_average_precision_micro:
  - 0.91481927614002
  - 0.91489356011189
  - 0.9122841633321321
  - 0.9061315858915528
  - 0.9130323910042489
  train_average_precision_micro_oob:
  - 0.5478197900715421
  - 0.5228615845203239
  - 0.5558405902670018
  - 0.5436412022247962
  - 0.5376435865484389
  train_average_precision_samples:
  - 0.5047047649809278
  - 0.528380706287683
  - 0.5133936261843238
  - 0.508868970714901
  - 0.5061903992863296
  train_average_precision_samples_oob:
  - 0.33949166957904764
  - 0.35372150323330215
  - 0.33904734607111486
  - 0.327017264742113
  - 0.32736679382039463
  train_average_precision_weighted:
  - 0.9639236602551308
  - 0.97467554279604
  - 0.9625867751710969
  - 0.9451444541629769
  - 0.9653821695306398
  train_average_precision_weighted_oob:
  - 0.5862870491664188
  - 0.5684851747751283
  - 0.5958097905940672
  - 0.5756011768006091
  - 0.57637109930163
  train_f1_macro:
  - 0.9573643410852711
  - 0.9572623419012648
  - 0.9574663402692778
  - 0.9568543451652386
  - 0.9571603427172581
  train_f1_macro_oob:
  - 0.951346389228886
  - 0.9508363933088535
  - 0.9518563851489189
  - 0.9514483884128925
  - 0.9517543859649122
  train_f1_micro:
  - 0.9573643410852714
  - 0.9572623419012648
  - 0.9574663402692778
  - 0.9568543451652387
  - 0.9571603427172583
  train_f1_micro_oob:
  - 0.9513463892288861
  - 0.9508363933088535
  - 0.9518563851489188
  - 0.9514483884128927
  - 0.9517543859649122
  train_f1_samples:
  - 0.9573643410852714
  - 0.9572623419012648
  - 0.9574663402692779
  - 0.9568543451652386
  - 0.9571603427172583
  train_f1_samples_oob:
  - 0.9513463892288863
  - 0.9508363933088536
  - 0.9518563851489189
  - 0.9514483884128927
  - 0.9517543859649124
  train_f1_weighted:
  - 0.9422927565539778
  - 0.9437613234726305
  - 0.942675088157836
  - 0.9418716029582108
  - 0.9433195224093381
  train_f1_weighted_oob:
  - 0.9289246933661581
  - 0.9272773174136446
  - 0.9299982145248404
  - 0.9295085984139714
  - 0.9303996257685111
  train_jaccard_macro:
  - 0.9192042563694733
  - 0.9189903771851227
  - 0.9193491778272141
  - 0.9183071034643455
  - 0.9187352602471278
  train_jaccard_macro_oob:
  - 0.9088668037749253
  - 0.9080540233119448
  - 0.9097460802380161
  - 0.9090123229446134
  - 0.90950578128294
  train_jaccard_micro:
  - 0.9182156133828996
  - 0.9180279761322508
  - 0.9184032873495744
  - 0.9172777940745086
  - 0.9178403755868545
  train_jaccard_micro_oob:
  - 0.9072074700904581
  - 0.906280381100525
  - 0.9081354612689763
  - 0.9073929961089494
  - 0.9079497907949791
  train_jaccard_samples:
  - 0.9228934768747712
  - 0.9223154191051057
  - 0.9230327068168322
  - 0.9219798556123129
  - 0.9224626555895514
  train_jaccard_samples_oob:
  - 0.9127134080951069
  - 0.9114266856051487
  - 0.913532245756715
  - 0.9128814506468703
  - 0.9134516879031542
  train_jaccard_weighted:
  - 0.8916431654170724
  - 0.8940770543849362
  - 0.8922185898650546
  - 0.8910293600464545
  - 0.8933194946786586
  train_jaccard_weighted_oob:
  - 0.8690140183858203
  - 0.8661308807570898
  - 0.8707682071017441
  - 0.8700301400769367
  - 0.8714184008038841
  train_label_ranking_average_precision_score:
  - 0.9640070905623229
  - 0.9663652024117139
  - 0.9707579672695951
  - 0.9701092807924201
  - 0.9693686938599725
  train_label_ranking_average_precision_score_oob:
  - 0.7987939951604422
  - 0.7917059993573327
  - 0.796411687156386
  - 0.7882575748196321
  - 0.7905450883940381
  train_matthews_corrcoef_macro:
  - 0.16451705094322408
  - 0.12603721230664783
  - 0.15781623758233765
  - 0.13757837065643166
  - 0.1419044657879696
  train_matthews_corrcoef_macro_oob:
  - 0.0894156236043165
  - 0.05178049987026279
  - 0.06984998342561402
  - 0.06871113613428081
  - 0.0709786623590637
  train_matthews_corrcoef_micro:
  - 0.447922017069796
  - 0.4345061127498099
  - 0.43707515081129344
  - 0.42559462119103736
  - 0.43219827523909654
  train_matthews_corrcoef_micro_oob:
  - 0.3053885369170597
  - 0.26974639652965793
  - 0.29879688455590686
  - 0.2891579768471168
  - 0.2985666261842622
  train_matthews_corrcoef_samples:
  - 0.11758415283287511
  - 0.12008300023276706
  - 0.11937987678298953
  - 0.11252644516515667
  - 0.11402526361306665
  train_matthews_corrcoef_samples_oob:
  - 0.05703359254125593
  - 0.05538706009868947
  - 0.06364976318630017
  - 0.0561741175885619
  - 0.06306823398515538
  train_matthews_corrcoef_weighted:
  - 0.3156237240125796
  - 0.27946584659845297
  - 0.3107727968640544
  - 0.2781239756101404
  - 0.29296378645582477
  train_matthews_corrcoef_weighted_oob:
  - 0.1912146176756137
  - 0.13687494021194302
  - 0.17028068364441903
  - 0.1660144500671776
  - 0.17148697062338333
  train_ndgc:
  - 0.5178572089595019
  - 0.5398035429785111
  - 0.5243155603923996
  - 0.5190622218502366
  - 0.5173267304957592
  train_ndgc_oob:
  - 0.40123853213986516
  - 0.4165842053116072
  - 0.4001643086758198
  - 0.3893476196953133
  - 0.3916626451999731
  train_neg_coverage_error:
  - -1.2093023255813953
  - -1.176356589147287
  - -1.1647286821705427
  - -1.1472868217054264
  - -1.1686046511627908
  train_neg_coverage_error_oob:
  - -3.052325581395349
  - -3.0755813953488373
  - -3.067829457364341
  - -3.048449612403101
  - -3.0930232558139537
  train_neg_hamming_loss_macro:
  - -0.04263565891472868
  - -0.04273765809873521
  - -0.04253365973072215
  - -0.04314565483476132
  - -0.042839657282741736
  train_neg_hamming_loss_macro_oob:
  - -0.04865361077111383
  - -0.04916360669114648
  - -0.04814361485108119
  - -0.0485516115871073
  - -0.04824561403508772
  train_neg_hamming_loss_micro:
  - -0.04263565891472868
  - -0.04273765809873521
  - -0.04253365973072215
  - -0.04314565483476132
  - -0.042839657282741736
  train_neg_hamming_loss_micro_oob:
  - -0.04865361077111383
  - -0.04916360669114647
  - -0.04814361485108119
  - -0.0485516115871073
  - -0.04824561403508772
  train_neg_hamming_loss_samples:
  - -0.04263565891472868
  - -0.04273765809873521
  - -0.04253365973072215
  - -0.04314565483476132
  - -0.04283965728274173
  train_neg_hamming_loss_samples_oob:
  - -0.048653610771113825
  - -0.049163606691146465
  - -0.04814361485108119
  - -0.0485516115871073
  - -0.04824561403508772
  train_neg_hamming_loss_weighted:
  - -0.05770724344602219
  - -0.05623867652736939
  - -0.057324911842164
  - -0.05812839704178918
  - -0.05668047759066203
  train_neg_hamming_loss_weighted_oob:
  - -0.07107530663384182
  - -0.07272268258635539
  - -0.07000178547515959
  - -0.07049140158602869
  - -0.06960037423148892
  train_neg_label_ranking_loss:
  - -0.006775933887766993
  - -0.006216546696197859
  - -0.005332782337741298
  - -0.005231246245268132
  - -0.005755506336901686
  train_neg_label_ranking_loss_oob:
  - -0.08279227612332947
  - -0.08694068066503088
  - -0.08601873043990008
  - -0.0868038556607298
  - -0.08475562506855255
  train_precision_macro:
  - 0.9573643410852711
  - 0.9572623419012648
  - 0.9574663402692778
  - 0.9568543451652386
  - 0.9571603427172581
  train_precision_macro_oob:
  - 0.951346389228886
  - 0.9508363933088535
  - 0.9518563851489189
  - 0.9514483884128925
  - 0.9517543859649122
  train_precision_micro:
  - 0.9573643410852714
  - 0.9572623419012648
  - 0.9574663402692778
  - 0.9568543451652387
  - 0.9571603427172583
  train_precision_micro_oob:
  - 0.9513463892288861
  - 0.9508363933088535
  - 0.9518563851489188
  - 0.9514483884128927
  - 0.9517543859649122
  train_precision_samples:
  - 0.9573643410852714
  - 0.9572623419012648
  - 0.9574663402692779
  - 0.9568543451652386
  - 0.9571603427172583
  train_precision_samples_oob:
  - 0.9513463892288863
  - 0.9508363933088536
  - 0.9518563851489189
  - 0.9514483884128927
  - 0.9517543859649124
  train_precision_weighted:
  - 0.9422927565539778
  - 0.9437613234726305
  - 0.942675088157836
  - 0.9418716029582108
  - 0.9433195224093381
  train_precision_weighted_oob:
  - 0.9289246933661581
  - 0.9272773174136446
  - 0.9299982145248404
  - 0.9295085984139714
  - 0.9303996257685111
  train_recall_macro:
  - 0.9573643410852711
  - 0.9572623419012648
  - 0.9574663402692778
  - 0.9568543451652386
  - 0.9571603427172581
  train_recall_macro_oob:
  - 0.951346389228886
  - 0.9508363933088535
  - 0.9518563851489189
  - 0.9514483884128925
  - 0.9517543859649122
  train_recall_micro:
  - 0.9573643410852714
  - 0.9572623419012648
  - 0.9574663402692778
  - 0.9568543451652387
  - 0.9571603427172583
  train_recall_micro_oob:
  - 0.9513463892288861
  - 0.9508363933088535
  - 0.9518563851489188
  - 0.9514483884128927
  - 0.9517543859649122
  train_recall_samples:
  - 0.9573643410852714
  - 0.9572623419012648
  - 0.9574663402692779
  - 0.9568543451652386
  - 0.9571603427172583
  train_recall_samples_oob:
  - 0.9513463892288863
  - 0.9508363933088536
  - 0.9518563851489189
  - 0.9514483884128927
  - 0.9517543859649124
  train_recall_weighted:
  - 0.9422927565539778
  - 0.9437613234726305
  - 0.942675088157836
  - 0.9418716029582108
  - 0.9433195224093381
  train_recall_weighted_oob:
  - 0.9289246933661581
  - 0.9272773174136446
  - 0.9299982145248404
  - 0.9295085984139714
  - 0.9303996257685111
  train_roc_auc_macro:
  - 0.9980088763868928
  - 0.9985125597633056
  - 0.998071262685538
  - 0.997117029290636
  - 0.9981456812718053
  train_roc_auc_macro_oob:
  - 0.900082680631343
  - 0.8814683929078421
  - 0.8877509210099076
  - 0.8940547070086386
  - 0.8972081556649376
  train_roc_auc_micro:
  - 0.994510519262811
  - 0.9946693678945201
  - 0.9944382679584978
  - 0.9945502810614372
  - 0.9946386158353704
  train_roc_auc_micro_oob:
  - 0.914055202563959
  - 0.9069442690132345
  - 0.9116549083696428
  - 0.9097344508095015
  - 0.9127797302239492
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9972088700131352
  - 0.9977638334876027
  - 0.9972643999767954
  - 0.996017459488297
  - 0.9972578059236736
  train_roc_auc_weighted_oob:
  - 0.9064952319067522
  - 0.8990726946873512
  - 0.9062383657672517
  - 0.8988412735002925
  - 0.9075197711072481
start: 2023-12-12 16:54:48.564946
wrapper: null
