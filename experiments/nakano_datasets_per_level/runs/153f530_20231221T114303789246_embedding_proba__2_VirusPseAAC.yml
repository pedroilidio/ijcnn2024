active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b/AzMzMzMwMwICZmZmZmfm/QDMzMzMzA0CgmZmZmZkRQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:43:14.237991
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__2
  params: {}
hash: 153f53099a8f66e67dd3e102df8c9ec9f223954afdfb858d1fc56e93aa5400e6
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/153f530_20231221T114303789246_embedding_proba__2_VirusPseAAC.yml
results:
  fit_time:
  - 4.103805303573608
  - 4.32581353187561
  - 4.128334045410156
  - 4.131936311721802
  - 4.265864372253418
  score_time:
  - 1.8353641033172607
  - 1.9413862228393555
  - 1.7823221683502197
  - 1.8705790042877197
  - 1.6818759441375732
  test_average_precision_macro:
  - 0.33708946147460644
  - 0.4484361627018915
  - 0.25431828132880335
  - 0.2573880945837877
  - 0.36940022189873023
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.3860624493126697
  - 0.37591254039655414
  - 0.38130591298697825
  - 0.3958235082079335
  - 0.469493136623344
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6263565891472868
  - 0.6037037037037036
  - 0.6387596899224807
  - 0.6797008547008547
  - 0.6472222222222221
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.40180203543391707
  - 0.40280764190083496
  - 0.36348202674044783
  - 0.38339350179830056
  - 0.46390778294950535
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7984496124031008
  - 0.8111111111111112
  - 0.810077519379845
  - 0.7863247863247863
  - 0.7702702702702703
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7984496124031008
  - 0.8111111111111111
  - 0.810077519379845
  - 0.7863247863247863
  - 0.7702702702702703
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.798449612403101
  - 0.8111111111111114
  - 0.8100775193798452
  - 0.7863247863247862
  - 0.7702702702702702
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.689922480620155
  - 0.7111111111111111
  - 0.6929283341243473
  - 0.6502564102564102
  - 0.647588765235824
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6889758296838869
  - 0.7037263403328704
  - 0.705981438352259
  - 0.6787530842610402
  - 0.6551151895606567
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6645161290322581
  - 0.6822429906542056
  - 0.6807817589576547
  - 0.647887323943662
  - 0.6263736263736264
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6705426356589149
  - 0.6857142857142858
  - 0.6843853820598007
  - 0.6550671550671553
  - 0.6344916344916346
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5457725465879101
  - 0.5685076100024509
  - 0.5480977327574933
  - 0.5034355656583318
  - 0.501263292500671
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6263565891472868
  - 0.6037037037037036
  - 0.6387596899224806
  - 0.6797008547008547
  - 0.6472222222222221
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.02079514203937863
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - -0.030962309935683396
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - -0.004651162790697674
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.04159028407875726
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7231093695564416
  - 0.7041639304947162
  - 0.7308149281876758
  - 0.75983012003884
  - 0.7408767521676541
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.5348837209302326
  - -2.3333333333333335
  - -2.372093023255814
  - -2.4358974358974357
  - -2.6486486486486487
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20155038759689922
  - -0.18888888888888888
  - -0.18992248062015504
  - -0.2136752136752137
  - -0.22972972972972974
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20155038759689922
  - -0.18888888888888888
  - -0.18992248062015504
  - -0.21367521367521367
  - -0.22972972972972974
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20155038759689917
  - -0.18888888888888886
  - -0.18992248062015502
  - -0.2136752136752137
  - -0.22972972972972974
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.31007751937984496
  - -0.2888888888888889
  - -0.3070716658756526
  - -0.34974358974358977
  - -0.3524112347641759
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2587209302325581
  - -0.24277777777777776
  - -0.2447674418604651
  - -0.23653846153846153
  - -0.2515765765765766
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7984496124031008
  - 0.8111111111111112
  - 0.810077519379845
  - 0.7863247863247863
  - 0.7702702702702703
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7984496124031008
  - 0.8111111111111111
  - 0.810077519379845
  - 0.7863247863247863
  - 0.7702702702702703
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.798449612403101
  - 0.8111111111111114
  - 0.8100775193798452
  - 0.7863247863247862
  - 0.7702702702702702
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.689922480620155
  - 0.7111111111111111
  - 0.6929283341243473
  - 0.6502564102564102
  - 0.647588765235824
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7984496124031008
  - 0.8111111111111112
  - 0.810077519379845
  - 0.7863247863247863
  - 0.7702702702702703
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7984496124031008
  - 0.8111111111111111
  - 0.810077519379845
  - 0.7863247863247863
  - 0.7702702702702703
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.798449612403101
  - 0.8111111111111114
  - 0.8100775193798452
  - 0.7863247863247862
  - 0.7702702702702702
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.689922480620155
  - 0.7111111111111111
  - 0.6929283341243473
  - 0.6502564102564102
  - 0.647588765235824
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.603214456514313
  - 0.6012439635674552
  - 0.537671721495251
  - 0.4158585337377907
  - 0.5779534062428798
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7532442928862366
  - 0.7580804011102158
  - 0.7562738013865834
  - 0.7541304347826087
  - 0.7548446279096435
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7412790697674418
  - 0.7572222222222222
  - 0.7552325581395347
  - 0.7634615384615385
  - 0.7484234234234236
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5716164514586323
  - 0.5086865298108973
  - 0.5201818773247343
  - 0.49004146730462517
  - 0.5656337814232552
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7296792048321475
  - 0.720443243375107
  - 0.7306439715562464
  - 0.713536896784173
  - 0.7295763502598427
  train_average_precision_macro_oob:
  - 0.667337567103023
  - 0.5829815476538398
  - 0.6267416084373666
  - 0.5999339909448304
  - 0.5766314812532546
  train_average_precision_micro:
  - 0.7814331345142768
  - 0.7824155712449916
  - 0.7780282871837246
  - 0.7834078109553613
  - 0.7524244447781775
  train_average_precision_micro_oob:
  - 0.7314427901609422
  - 0.7166303937483646
  - 0.709368590810534
  - 0.7196233682471223
  - 0.6833465493062287
  train_average_precision_samples:
  - 0.8131605691056911
  - 0.8248971193415637
  - 0.8122459349593495
  - 0.8500000000000001
  - 0.8117647058823529
  train_average_precision_samples_oob:
  - 0.7872289972899729
  - 0.7781207133058984
  - 0.7795562330623307
  - 0.7714120370370371
  - 0.7349019607843137
  train_average_precision_weighted:
  - 0.7621389131802511
  - 0.7633793355279629
  - 0.7563720261445782
  - 0.7567598207579694
  - 0.7415298261897844
  train_average_precision_weighted_oob:
  - 0.7393136921264499
  - 0.7241144419794473
  - 0.7214702326175436
  - 0.7152016499524256
  - 0.6986214941119329
  train_f1_macro:
  - 0.8567073170731706
  - 0.8539094650205762
  - 0.858739837398374
  - 0.8621031746031748
  - 0.861764705882353
  train_f1_macro_oob:
  - 0.8089430894308943
  - 0.8148148148148149
  - 0.8272357723577235
  - 0.8303571428571429
  - 0.8245098039215687
  train_f1_micro:
  - 0.8567073170731707
  - 0.8539094650205762
  - 0.858739837398374
  - 0.8621031746031746
  - 0.861764705882353
  train_f1_micro_oob:
  - 0.8089430894308943
  - 0.8148148148148148
  - 0.8272357723577236
  - 0.8303571428571429
  - 0.8245098039215686
  train_f1_samples:
  - 0.8567073170731707
  - 0.853909465020576
  - 0.8587398373983739
  - 0.8621031746031745
  - 0.861764705882353
  train_f1_samples_oob:
  - 0.8089430894308941
  - 0.8148148148148148
  - 0.8272357723577235
  - 0.8303571428571429
  - 0.8245098039215684
  train_f1_weighted:
  - 0.8028151923310278
  - 0.7983231988207112
  - 0.8110056470022828
  - 0.8157413955681283
  - 0.8098624524436641
  train_f1_weighted_oob:
  - 0.7053755612182988
  - 0.7180148639518456
  - 0.746996275381473
  - 0.751384959924564
  - 0.7335967222709979
  train_jaccard_macro:
  - 0.7566163202766107
  - 0.7527176198512917
  - 0.7586152303910166
  - 0.7635556749822859
  - 0.7639976223676884
  train_jaccard_macro_oob:
  - 0.7005090340229659
  - 0.7064756155868994
  - 0.7195789307649588
  - 0.7239396554824324
  - 0.7185944956383546
  train_jaccard_micro:
  - 0.7493333333333333
  - 0.7450628366247756
  - 0.7524487978628673
  - 0.7576285963382737
  - 0.7571059431524548
  train_jaccard_micro_oob:
  - 0.6791808873720137
  - 0.6875
  - 0.7053726169844021
  - 0.7099236641221374
  - 0.7014178482068391
  train_jaccard_samples:
  - 0.7632113821138211
  - 0.7598471487360376
  - 0.7655342624854821
  - 0.7691326530612246
  - 0.7708683473389355
  train_jaccard_samples_oob:
  - 0.6878629500580721
  - 0.6979717813051147
  - 0.7182055749128922
  - 0.7205215419501135
  - 0.711904761904762
  train_jaccard_weighted:
  - 0.6749617895992291
  - 0.6689699060521631
  - 0.6857800963738736
  - 0.6923740222853635
  - 0.6846574377697564
  train_jaccard_weighted_oob:
  - 0.5604863539201139
  - 0.5740155732386188
  - 0.6064945586753345
  - 0.6120781931467502
  - 0.5917108127664845
  train_label_ranking_average_precision_score:
  - 0.8131605691056911
  - 0.8248971193415637
  - 0.8122459349593495
  - 0.8500000000000001
  - 0.8117647058823527
  train_label_ranking_average_precision_score_oob:
  - 0.7872289972899729
  - 0.7781207133058984
  - 0.7795562330623305
  - 0.7714120370370369
  - 0.7349019607843136
  train_matthews_corrcoef_macro:
  - 0.18618923079001512
  - 0.18366705775272907
  - 0.19375311235454892
  - 0.19411317811467824
  - 0.18774219391470406
  train_matthews_corrcoef_macro_oob:
  - 0.07659007665628415
  - 0.10216980247483513
  - 0.13169331208770788
  - 0.1287023020990291
  - 0.1066653471319059
  train_matthews_corrcoef_micro:
  - 0.5029473125732515
  - 0.49787437859654177
  - 0.5173370369174677
  - 0.5157582773548729
  - 0.5046426251363212
  train_matthews_corrcoef_micro_oob:
  - 0.2283730823054801
  - 0.2910372306376172
  - 0.3653795271741813
  - 0.35581594109524245
  - 0.2997022420880453
  train_matthews_corrcoef_samples:
  - 0.32551341205247664
  - 0.3244845809138196
  - 0.3271108002169049
  - 0.32308706409289334
  - 0.3237451763523769
  train_matthews_corrcoef_samples_oob:
  - 0.0725449182689087
  - 0.11601687155680282
  - 0.1832905137577403
  - 0.16591906142699817
  - 0.12508771214157266
  train_matthews_corrcoef_weighted:
  - 0.3807286279885914
  - 0.37565779386566667
  - 0.39228373743363476
  - 0.39216800884469616
  - 0.3839871472760281
  train_matthews_corrcoef_weighted_oob:
  - 0.15758752567190232
  - 0.20823951620067527
  - 0.2662253440554483
  - 0.25956493457368435
  - 0.2180195390165733
  train_ndgc:
  - 0.8618708267370004
  - 0.8708932770507831
  - 0.8620473550529476
  - 0.8904942843934781
  - 0.8602569717434586
  train_ndgc_oob:
  - 0.8428726661418864
  - 0.8359717231937165
  - 0.8373237985255377
  - 0.83227378106694
  - 0.8031823342959309
  train_neg_coverage_error:
  - -1.8902439024390243
  - -1.8271604938271604
  - -1.8414634146341464
  - -1.744047619047619
  - -1.8
  train_neg_coverage_error_oob:
  - -1.9939024390243902
  - -2.0555555555555554
  - -1.9634146341463414
  - -2.0238095238095237
  - -2.0941176470588236
  train_neg_hamming_loss_macro:
  - -0.14329268292682926
  - -0.14609053497942384
  - -0.14126016260162602
  - -0.13789682539682538
  - -0.13823529411764707
  train_neg_hamming_loss_macro_oob:
  - -0.1910569105691057
  - -0.18518518518518515
  - -0.17276422764227647
  - -0.16964285714285712
  - -0.17549019607843133
  train_neg_hamming_loss_micro:
  - -0.14329268292682926
  - -0.14609053497942387
  - -0.14126016260162602
  - -0.1378968253968254
  - -0.13823529411764707
  train_neg_hamming_loss_micro_oob:
  - -0.1910569105691057
  - -0.18518518518518517
  - -0.17276422764227642
  - -0.16964285714285715
  - -0.17549019607843136
  train_neg_hamming_loss_samples:
  - -0.14329268292682926
  - -0.14609053497942384
  - -0.141260162601626
  - -0.1378968253968254
  - -0.13823529411764707
  train_neg_hamming_loss_samples_oob:
  - -0.19105691056910568
  - -0.18518518518518517
  - -0.17276422764227642
  - -0.16964285714285715
  - -0.1754901960784314
  train_neg_hamming_loss_weighted:
  - -0.1971848076689722
  - -0.2016768011792887
  - -0.18899435299771716
  - -0.18425860443187175
  - -0.19013754755633597
  train_neg_hamming_loss_weighted_oob:
  - -0.29462443878170125
  - -0.2819851360481543
  - -0.253003724618527
  - -0.2486150400754361
  - -0.2664032777290021
  train_neg_label_ranking_loss:
  - -0.12789634146341464
  - -0.11349451303155006
  - -0.11583672086720866
  - -0.10004960317460318
  - -0.11991830065359478
  train_neg_label_ranking_loss_oob:
  - -0.14967818428184282
  - -0.15946502057613168
  - -0.1436483739837398
  - -0.15710978835978834
  - -0.17800653594771243
  train_precision_macro:
  - 0.8567073170731706
  - 0.8539094650205762
  - 0.858739837398374
  - 0.8621031746031748
  - 0.861764705882353
  train_precision_macro_oob:
  - 0.8089430894308943
  - 0.8148148148148149
  - 0.8272357723577235
  - 0.8303571428571429
  - 0.8245098039215687
  train_precision_micro:
  - 0.8567073170731707
  - 0.8539094650205762
  - 0.858739837398374
  - 0.8621031746031746
  - 0.861764705882353
  train_precision_micro_oob:
  - 0.8089430894308943
  - 0.8148148148148148
  - 0.8272357723577236
  - 0.8303571428571429
  - 0.8245098039215686
  train_precision_samples:
  - 0.8567073170731707
  - 0.853909465020576
  - 0.8587398373983739
  - 0.8621031746031745
  - 0.861764705882353
  train_precision_samples_oob:
  - 0.8089430894308941
  - 0.8148148148148148
  - 0.8272357723577235
  - 0.8303571428571429
  - 0.8245098039215684
  train_precision_weighted:
  - 0.8028151923310278
  - 0.7983231988207112
  - 0.8110056470022828
  - 0.8157413955681283
  - 0.8098624524436641
  train_precision_weighted_oob:
  - 0.7053755612182988
  - 0.7180148639518456
  - 0.746996275381473
  - 0.751384959924564
  - 0.7335967222709979
  train_recall_macro:
  - 0.8567073170731706
  - 0.8539094650205762
  - 0.858739837398374
  - 0.8621031746031748
  - 0.861764705882353
  train_recall_macro_oob:
  - 0.8089430894308943
  - 0.8148148148148149
  - 0.8272357723577235
  - 0.8303571428571429
  - 0.8245098039215687
  train_recall_micro:
  - 0.8567073170731707
  - 0.8539094650205762
  - 0.858739837398374
  - 0.8621031746031746
  - 0.861764705882353
  train_recall_micro_oob:
  - 0.8089430894308943
  - 0.8148148148148148
  - 0.8272357723577236
  - 0.8303571428571429
  - 0.8245098039215686
  train_recall_samples:
  - 0.8567073170731707
  - 0.853909465020576
  - 0.8587398373983739
  - 0.8621031746031745
  - 0.861764705882353
  train_recall_samples_oob:
  - 0.8089430894308941
  - 0.8148148148148148
  - 0.8272357723577235
  - 0.8303571428571429
  - 0.8245098039215684
  train_recall_weighted:
  - 0.8028151923310278
  - 0.7983231988207112
  - 0.8110056470022828
  - 0.8157413955681283
  - 0.8098624524436641
  train_recall_weighted_oob:
  - 0.7053755612182988
  - 0.7180148639518456
  - 0.746996275381473
  - 0.751384959924564
  - 0.7335967222709979
  train_roc_auc_macro:
  - 0.8137369484270015
  - 0.8393727282498475
  - 0.8430933567905271
  - 0.8286838402926874
  - 0.8252352256006238
  train_roc_auc_macro_oob:
  - 0.8022488352635618
  - 0.804345154166672
  - 0.813589964727441
  - 0.8115811941715698
  - 0.7749238403785879
  train_roc_auc_micro:
  - 0.8888571192568447
  - 0.8961418587993883
  - 0.8966589505686156
  - 0.8949770287202418
  - 0.8815871800946428
  train_roc_auc_micro_oob:
  - 0.873836437226384
  - 0.8623677978460487
  - 0.8691017578827196
  - 0.8637815394442669
  - 0.848765938318177
  train_roc_auc_samples:
  - 0.8721036585365852
  - 0.8865054869684499
  - 0.8841632791327915
  - 0.8999503968253968
  - 0.8800816993464051
  train_roc_auc_samples_oob:
  - 0.8503218157181572
  - 0.8405349794238685
  - 0.8563516260162601
  - 0.8428902116402116
  - 0.8219934640522876
  train_roc_auc_weighted:
  - 0.7869182559672884
  - 0.7997738814375613
  - 0.7946710508587058
  - 0.8054352228611943
  - 0.7678595454061551
  train_roc_auc_weighted_oob:
  - 0.7892790362258242
  - 0.7945484030414991
  - 0.7892186334610821
  - 0.7980512459932425
  - 0.7593599163575353
start: 2023-12-21 11:43:03.789246
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
