active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gGZmZmZm9j9gZmZmZmYSwEAzMzMzMwNAADMzMzMz47+AZmZmZmb2Pw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzA0DAzMzMzMwMwICZmZmZmfm/gGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZmFsDAzMzMzMwEwKCZmZmZmRlAwMzMzMzMDMCgmZmZmZkVQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMDECAmZmZmZnZvzAzMzMzMwPAmJmZmZmZEcDQzMzMzMwMQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz87+QmZmZmZkJwODMzMzMzPw/4MzMzMzM/D/AmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AmJmZmZnpvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AmpmZmZnpPwDNzMzMzPw/AJiZmZmZyb+AmZmZmZkBwA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmBkAwMzMzMzPzv9DMzMzMzPw/MDMzMzMz87+YmZmZmZkBwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzKcDgzMzMzMwoQHBmZmZmZjFAAJmZmZmZ+b8gMzMzMzMvwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 22:14:20.556164
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 04d2f43733f90bfe7e5ed76eb0a07c13555822723bb67db538f6482ceefd739c
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/04d2f43_20231212T221339922118_embedding_proba__0_yeast.yml
results:
  fit_time:
  - 1.9107017517089844
  - 1.8622570037841797
  - 1.803313970565796
  - 1.7934160232543945
  - 1.8311583995819092
  score_time:
  - 4.634652853012085
  - 4.3424882888793945
  - 4.303479909896851
  - 4.572662591934204
  - 4.684122323989868
  test_average_precision_macro:
  - 0.5175374919416152
  - 0.5444704479863476
  - 0.5592966368898399
  - 0.5311392451905076
  - 0.5419920611611285
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6962131968815024
  - 0.7342718242608853
  - 0.7496019549383023
  - 0.7121402361049063
  - 0.7120477326891046
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7439765909889725
  - 0.7665898828201048
  - 0.7696997692142542
  - 0.7501869279673035
  - 0.7461643907936493
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6766240805401814
  - 0.7101867457848949
  - 0.7287004485943548
  - 0.6954118637117506
  - 0.6941002787459556
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7993951612903227
  - 0.7961783439490445
  - 0.8021152667075412
  - 0.8030927835051548
  - 0.8077583738906383
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7993951612903226
  - 0.7961783439490446
  - 0.8021152667075414
  - 0.8030927835051547
  - 0.8077583738906384
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7993951612903226
  - 0.7961783439490446
  - 0.8021152667075415
  - 0.8030927835051547
  - 0.8077583738906384
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7470073701155229
  - 0.7543250528726259
  - 0.7626851384330556
  - 0.7580595479970903
  - 0.7564452434280325
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6764140094405597
  - 0.6711855712961284
  - 0.6788154084518767
  - 0.6799703130826729
  - 0.6870513808408029
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6658270361041142
  - 0.6613756613756614
  - 0.6696097248880358
  - 0.6709732988802756
  - 0.6775123063993277
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6859776640115325
  - 0.6813668788082623
  - 0.6882240635403049
  - 0.6900029821692073
  - 0.6966830538043364
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5999412525649016
  - 0.6095510769598996
  - 0.6199576092535746
  - 0.6139270295262257
  - 0.6124591716267197
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7439765909889721
  - 0.7665898828201057
  - 0.7696997692142533
  - 0.7501869279673035
  - 0.7461643907936488
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.15571243919963873
  - 0.16366181886268946
  - 0.15411813044090827
  - 0.17007269553351584
  - 0.18095133869671892
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4829411508210828
  - 0.4952464092257852
  - 0.511482074007306
  - 0.5032204494662526
  - 0.5040793476919626
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4795083274000948
  - 0.4893464925978256
  - 0.5087376467102551
  - 0.5029748090749898
  - 0.5040048295577335
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.169490609884766
  - 0.17731856052657405
  - 0.1781375874967731
  - 0.1879392160663436
  - 0.19436339016150922
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8384400683406555
  - 0.8613805825531576
  - 0.8612815402934336
  - 0.846501723827204
  - 0.8411699239822095
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.008064516129032
  - -7.284501061571126
  - -7.163090128755365
  - -7.25979381443299
  - -6.917835671342686
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20060483870967746
  - -0.20382165605095542
  - -0.19788473329245862
  - -0.19690721649484538
  - -0.1922416261093616
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2006048387096774
  - -0.20382165605095542
  - -0.19788473329245862
  - -0.19690721649484536
  - -0.19224162610936157
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20060483870967738
  - -0.20382165605095534
  - -0.1978847332924586
  - -0.19690721649484536
  - -0.19224162610936155
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.25299262988447696
  - -0.24567494712737412
  - -0.23731486156694442
  - -0.24194045200290965
  - -0.24355475657196748
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17686126957080298
  - -0.15939095447739665
  - -0.16160458648579434
  - -0.17352249084576038
  - -0.16328520820719503
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7993951612903227
  - 0.7961783439490445
  - 0.8021152667075412
  - 0.8030927835051548
  - 0.8077583738906383
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7993951612903226
  - 0.7961783439490446
  - 0.8021152667075414
  - 0.8030927835051547
  - 0.8077583738906384
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7993951612903226
  - 0.7961783439490446
  - 0.8021152667075415
  - 0.8030927835051547
  - 0.8077583738906384
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7470073701155229
  - 0.7543250528726259
  - 0.7626851384330556
  - 0.7580595479970903
  - 0.7564452434280325
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7993951612903227
  - 0.7961783439490445
  - 0.8021152667075412
  - 0.8030927835051548
  - 0.8077583738906383
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7993951612903226
  - 0.7961783439490446
  - 0.8021152667075414
  - 0.8030927835051547
  - 0.8077583738906384
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7993951612903226
  - 0.7961783439490446
  - 0.8021152667075415
  - 0.8030927835051547
  - 0.8077583738906384
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7470073701155229
  - 0.7543250528726259
  - 0.7626851384330556
  - 0.7580595479970903
  - 0.7564452434280325
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7201627930955803
  - 0.7182861701720976
  - 0.759165314925103
  - 0.7290264151401755
  - 0.7449016113614305
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8405391589120972
  - 0.8468484269207952
  - 0.8523470159696349
  - 0.8425821071535929
  - 0.8486949247956359
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8231387304291969
  - 0.8406090455226032
  - 0.8383954135142058
  - 0.8264775091542397
  - 0.8367147917928051
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7116098276230135
  - 0.7333336742733617
  - 0.7624707913957265
  - 0.7231416659576239
  - 0.7369247555931155
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9869212635457261
  - 0.9863587755699977
  - 0.9848164044524855
  - 0.9866964993810762
  - 0.9867449983342843
  train_average_precision_macro_oob:
  - 0.5267902056004542
  - 0.5145435372608083
  - 0.5172989195845391
  - 0.5213133139017334
  - 0.5220125883589568
  train_average_precision_micro:
  - 0.8955917571570546
  - 0.8910604392372508
  - 0.8914391611993339
  - 0.893114388735335
  - 0.89316195759082
  train_average_precision_micro_oob:
  - 0.7249149783873632
  - 0.7117050763867505
  - 0.7093574291950937
  - 0.7163978993933028
  - 0.7187506782236917
  train_average_precision_samples:
  - 0.8745735429176128
  - 0.8624578615936234
  - 0.865375242653642
  - 0.8686682801940092
  - 0.8640884708518094
  train_average_precision_samples_oob:
  - 0.7580921291728845
  - 0.7511724120676481
  - 0.7519780293187176
  - 0.7537375604068082
  - 0.7557479215166498
  train_average_precision_weighted:
  - 0.9876919112790031
  - 0.9870574500236727
  - 0.9859945625690553
  - 0.987525802243546
  - 0.9881712210761181
  train_average_precision_weighted_oob:
  - 0.695556395354614
  - 0.6801110019592053
  - 0.6818139869969139
  - 0.6844810696289039
  - 0.6896483915087792
  train_f1_macro:
  - 0.8609355246523389
  - 0.8575466157686096
  - 0.8582045837299555
  - 0.8594720496894411
  - 0.8578131982720095
  train_f1_macro_oob:
  - 0.8033390347289358
  - 0.801130524152107
  - 0.8017866295672549
  - 0.8016119491274771
  - 0.8015045434232085
  train_f1_micro:
  - 0.8609355246523388
  - 0.8575466157686096
  - 0.8582045837299553
  - 0.859472049689441
  - 0.8578131982720095
  train_f1_micro_oob:
  - 0.8033390347289359
  - 0.8011305241521068
  - 0.8017866295672549
  - 0.8016119491274771
  - 0.8015045434232086
  train_f1_samples:
  - 0.8609355246523389
  - 0.8575466157686096
  - 0.8582045837299553
  - 0.859472049689441
  - 0.8578131982720096
  train_f1_samples_oob:
  - 0.8033390347289359
  - 0.8011305241521068
  - 0.8017866295672549
  - 0.801611949127477
  - 0.8015045434232086
  train_f1_weighted:
  - 0.8324695929625223
  - 0.8251516335357124
  - 0.8255945209517085
  - 0.8291891954096248
  - 0.8284240496116919
  train_f1_weighted_oob:
  - 0.7591422110284378
  - 0.7533785732317505
  - 0.7541000706805829
  - 0.7551595437142341
  - 0.7569099065845502
  train_jaccard_macro:
  - 0.7618254318514
  - 0.7572962455187088
  - 0.7578254702309078
  - 0.759689459137977
  - 0.7572430489766535
  train_jaccard_macro_oob:
  - 0.6803638351935638
  - 0.6780737713175523
  - 0.6787782432328825
  - 0.6786008053378374
  - 0.6780381942235308
  train_jaccard_micro:
  - 0.755826859045505
  - 0.7506184738955823
  - 0.7516272805976849
  - 0.7535738597685501
  - 0.7510270622758396
  train_jaccard_micro_oob:
  - 0.6713171550197309
  - 0.6682383197599657
  - 0.6691517966267416
  - 0.6689084963287468
  - 0.6687589335653471
  train_jaccard_samples:
  - 0.7748171524636795
  - 0.7703024737943552
  - 0.7714006296523319
  - 0.7733304333452402
  - 0.7709974188630039
  train_jaccard_samples_oob:
  - 0.6904403036451568
  - 0.6871121786457952
  - 0.6888503130656649
  - 0.6883506056060587
  - 0.6882172186911062
  train_jaccard_weighted:
  - 0.7189129282124704
  - 0.7089744280646918
  - 0.7090496141280964
  - 0.714041193687449
  - 0.7129387939419518
  train_jaccard_weighted_oob:
  - 0.6152573357723837
  - 0.608157796698806
  - 0.608996703705271
  - 0.6103729639472313
  - 0.6122373278368008
  train_label_ranking_average_precision_score:
  - 0.874573542917613
  - 0.862457861593625
  - 0.865375242653644
  - 0.8686682801940119
  - 0.8640884708518111
  train_label_ranking_average_precision_score_oob:
  - 0.758092129172886
  - 0.7511724120676494
  - 0.7519780293187198
  - 0.7537375604068098
  - 0.7557479215166528
  train_matthews_corrcoef_macro:
  - 0.3547073639144701
  - 0.3314888559754739
  - 0.34638602103986865
  - 0.34143206926134834
  - 0.3305554887059408
  train_matthews_corrcoef_macro_oob:
  - 0.165065329617149
  - 0.1663038873484728
  - 0.1707571666323006
  - 0.16941337946729298
  - 0.17161976594130007
  train_matthews_corrcoef_micro:
  - 0.659639961406331
  - 0.6472586841743324
  - 0.6490728398598794
  - 0.6541947884704366
  - 0.6520633023718568
  train_matthews_corrcoef_micro_oob:
  - 0.5064552025962396
  - 0.4942639660138306
  - 0.4960852109588853
  - 0.4987836648773481
  - 0.5016852105434889
  train_matthews_corrcoef_samples:
  - 0.6620459067684905
  - 0.6422240992841375
  - 0.6478227076463606
  - 0.6537568698824834
  - 0.6501241483433008
  train_matthews_corrcoef_samples_oob:
  - 0.5040428994055777
  - 0.4904233652491787
  - 0.4906937861776306
  - 0.4942704827268474
  - 0.4971155534622849
  train_matthews_corrcoef_weighted:
  - 0.42036560180480637
  - 0.38976655829294654
  - 0.404111681130777
  - 0.41189868098338916
  - 0.39323370834450627
  train_matthews_corrcoef_weighted_oob:
  - 0.1839320471244757
  - 0.17964711125183305
  - 0.18444199357355498
  - 0.18315509733796762
  - 0.18629986218504493
  train_ndgc:
  - 0.9223296070103807
  - 0.9131875203071405
  - 0.9152448693630792
  - 0.9178748968352594
  - 0.9150581828160407
  train_ndgc_oob:
  - 0.8527868179908706
  - 0.8462864269634313
  - 0.8474787086553214
  - 0.8491216160605044
  - 0.8510209422578561
  train_neg_coverage_error:
  - -5.481520041644977
  - -5.454779033915725
  - -5.444900051255766
  - -5.457556935817806
  - -5.5573514077163715
  train_neg_coverage_error_oob:
  - -7.170744403956273
  - -7.125385405960945
  - -7.137365453613532
  - -7.130952380952381
  - -7.217935349322211
  train_neg_hamming_loss_macro:
  - -0.1390644753476612
  - -0.1424533842313904
  - -0.1417954162700447
  - -0.140527950310559
  - -0.14218680172799048
  train_neg_hamming_loss_macro_oob:
  - -0.19666096527106416
  - -0.1988694758478931
  - -0.1982133704327451
  - -0.19838805087252293
  - -0.19849545657679127
  train_neg_hamming_loss_micro:
  - -0.1390644753476612
  - -0.1424533842313904
  - -0.14179541627004466
  - -0.140527950310559
  - -0.14218680172799048
  train_neg_hamming_loss_micro_oob:
  - -0.19666096527106416
  - -0.1988694758478931
  - -0.19821337043274512
  - -0.19838805087252293
  - -0.1984954565767913
  train_neg_hamming_loss_samples:
  - -0.13906447534766117
  - -0.14245338423139037
  - -0.14179541627004466
  - -0.14052795031055898
  - -0.14218680172799045
  train_neg_hamming_loss_samples_oob:
  - -0.19666096527106414
  - -0.1988694758478931
  - -0.1982133704327451
  - -0.19838805087252293
  - -0.19849545657679127
  train_neg_hamming_loss_weighted:
  - -0.16753040703747774
  - -0.17484836646428756
  - -0.1744054790482915
  - -0.1708108045903752
  - -0.17157595038830814
  train_neg_hamming_loss_weighted_oob:
  - -0.24085778897156226
  - -0.24662142676824955
  - -0.24589992931941707
  - -0.2448404562857658
  - -0.2430900934154499
  train_neg_label_ranking_loss:
  - -0.06481273729451761
  - -0.06956466040851593
  - -0.06854266688783785
  - -0.06788169190564931
  - -0.06956122450219725
  train_neg_label_ranking_loss_oob:
  - -0.16466993701785848
  - -0.1703669495238281
  - -0.16845027252327538
  - -0.16764827496027582
  - -0.1694504885393832
  train_precision_macro:
  - 0.8609355246523389
  - 0.8575466157686096
  - 0.8582045837299555
  - 0.8594720496894411
  - 0.8578131982720095
  train_precision_macro_oob:
  - 0.8033390347289358
  - 0.801130524152107
  - 0.8017866295672549
  - 0.8016119491274771
  - 0.8015045434232085
  train_precision_micro:
  - 0.8609355246523388
  - 0.8575466157686096
  - 0.8582045837299553
  - 0.859472049689441
  - 0.8578131982720095
  train_precision_micro_oob:
  - 0.8033390347289359
  - 0.8011305241521068
  - 0.8017866295672549
  - 0.8016119491274771
  - 0.8015045434232086
  train_precision_samples:
  - 0.8609355246523389
  - 0.8575466157686096
  - 0.8582045837299553
  - 0.859472049689441
  - 0.8578131982720096
  train_precision_samples_oob:
  - 0.8033390347289359
  - 0.8011305241521068
  - 0.8017866295672549
  - 0.801611949127477
  - 0.8015045434232086
  train_precision_weighted:
  - 0.8324695929625223
  - 0.8251516335357124
  - 0.8255945209517085
  - 0.8291891954096248
  - 0.8284240496116919
  train_precision_weighted_oob:
  - 0.7591422110284378
  - 0.7533785732317505
  - 0.7541000706805829
  - 0.7551595437142341
  - 0.7569099065845502
  train_recall_macro:
  - 0.8609355246523389
  - 0.8575466157686096
  - 0.8582045837299555
  - 0.8594720496894411
  - 0.8578131982720095
  train_recall_macro_oob:
  - 0.8033390347289358
  - 0.801130524152107
  - 0.8017866295672549
  - 0.8016119491274771
  - 0.8015045434232085
  train_recall_micro:
  - 0.8609355246523388
  - 0.8575466157686096
  - 0.8582045837299553
  - 0.859472049689441
  - 0.8578131982720095
  train_recall_micro_oob:
  - 0.8033390347289359
  - 0.8011305241521068
  - 0.8017866295672549
  - 0.8016119491274771
  - 0.8015045434232086
  train_recall_samples:
  - 0.8609355246523389
  - 0.8575466157686096
  - 0.8582045837299553
  - 0.859472049689441
  - 0.8578131982720096
  train_recall_samples_oob:
  - 0.8033390347289359
  - 0.8011305241521068
  - 0.8017866295672549
  - 0.801611949127477
  - 0.8015045434232086
  train_recall_weighted:
  - 0.8324695929625223
  - 0.8251516335357124
  - 0.8255945209517085
  - 0.8291891954096248
  - 0.8284240496116919
  train_recall_weighted_oob:
  - 0.7591422110284378
  - 0.7533785732317505
  - 0.7541000706805829
  - 0.7551595437142341
  - 0.7569099065845502
  train_roc_auc_macro:
  - 0.9938539981652611
  - 0.9936543342668865
  - 0.9932309529174113
  - 0.9936975518717276
  - 0.9941361634315944
  train_roc_auc_macro_oob:
  - 0.7284751249369812
  - 0.7232663680691008
  - 0.712455714539259
  - 0.7179396120344573
  - 0.7173399131917367
  train_roc_auc_micro:
  - 0.9495619023050667
  - 0.948503473952069
  - 0.948399239473937
  - 0.9489631288324215
  - 0.9484981355951163
  train_roc_auc_micro_oob:
  - 0.8465542148568607
  - 0.8428472205321227
  - 0.8424700138369972
  - 0.8441537313862412
  - 0.8431980728996571
  train_roc_auc_samples:
  - 0.9351872627054825
  - 0.9304353395914841
  - 0.9314573331121623
  - 0.9321183080943507
  - 0.9304387754978029
  train_roc_auc_samples_oob:
  - 0.8353300629821415
  - 0.8296330504761719
  - 0.8315497274767247
  - 0.8323517250397242
  - 0.8305495114606168
  train_roc_auc_weighted:
  - 0.9928175193782514
  - 0.9924679332457058
  - 0.9919395470433411
  - 0.9924611381851948
  - 0.9931474454884136
  train_roc_auc_weighted_oob:
  - 0.7304764422253965
  - 0.7163994920290532
  - 0.7154034599822365
  - 0.7193166461058611
  - 0.7214378626072551
start: 2023-12-12 22:13:39.922118
wrapper: null
