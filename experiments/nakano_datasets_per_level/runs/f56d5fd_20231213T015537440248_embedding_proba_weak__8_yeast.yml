active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            MDMzMzMzI8DAzMzMzMwMwKCZmZmZmRFAoJmZmZmZEUCgmZmZmZkRQA==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gGZmZmZm9j+AmZmZmZn5vwCamZmZmdk/gJmZmZmZ+b+AZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwAzMzMzM+O/oJmZmZmZGUBgZmZmZmYSwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmGkBAMzMzMzPjP5iZmZmZmR3AYGZmZmZm9r+gmZmZmZn5Pw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb+QmZmZmZkBwDgzMzMzMxdAcGZmZmZmDkDIzMzMzMwcwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AJiZmZmZ6b8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AM3MzMzM/D8AmJmZmZnJvwCamZmZmek/AJiZmZmZyb+AmZmZmZkBwA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+YmZmZmZkBwKCZmZmZmek/oJmZmZmZ6T+AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzJcDAmZmZmZkZQMCZmZmZmRVA4MzMzMzMJEAgMzMzMzMnwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-13 02:10:29.374473
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: f56d5fd909e91c394e2749f4deec85adcba747463aa8b6d22951be0d3d87c55a
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f56d5fd_20231213T015537440248_embedding_proba_weak__8_yeast.yml
results:
  fit_time:
  - 596.3921501636505
  - 685.5812609195709
  - 694.1128842830658
  - 702.484189748764
  - 699.8050518035889
  score_time:
  - 55.84149360656738
  - 32.107168436050415
  - 28.299263954162598
  - 35.40253448486328
  - 32.81536149978638
  test_average_precision_macro:
  - 0.48338234757096477
  - 0.4834473358035349
  - 0.4928126756567554
  - 0.46500370670978564
  - 0.478224321049687
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.662750404207439
  - 0.6643240078206244
  - 0.6803159898261059
  - 0.6497255916299922
  - 0.6335128582662763
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7346736180111686
  - 0.7490373525877544
  - 0.7487679871373708
  - 0.7367555131894329
  - 0.7378919964248246
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.647168181959494
  - 0.6458686875923447
  - 0.6549609009561586
  - 0.6310747520885466
  - 0.6218151337309321
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.780508964719491
  - 0.7890086852351004
  - 0.7845188284518827
  - 0.7834491090305044
  - 0.788888888888889
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.780508964719491
  - 0.7890086852351004
  - 0.7845188284518828
  - 0.7834491090305044
  - 0.7888888888888889
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.780508964719491
  - 0.7890086852351003
  - 0.7845188284518828
  - 0.7834491090305044
  - 0.7888888888888889
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7345411902320279
  - 0.7508726657147604
  - 0.7461045288178892
  - 0.7470734332398202
  - 0.7393172228615266
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6464606183928469
  - 0.6568001418300629
  - 0.6516012033770407
  - 0.6496469988896738
  - 0.6595617698550825
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6400284562485179
  - 0.6515395078521083
  - 0.6454388984509466
  - 0.6439920556107249
  - 0.6513761467889908
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6702444868607347
  - 0.6810524009191309
  - 0.6763494770769074
  - 0.6764843095771943
  - 0.6799152430719549
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5837683537363246
  - 0.6042772653035567
  - 0.5982739905059253
  - 0.5988712625334015
  - 0.5913692675494461
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.734673618011168
  - 0.7490373525877543
  - 0.748767987137371
  - 0.7367555131894321
  - 0.7378919964248248
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2487355393275696
  - 0.2570877362746763
  - 0.26646464854045393
  - 0.2603497841024823
  - 0.2916358693226044
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.47907427556010657
  - 0.507418151982313
  - 0.4961027314414376
  - 0.49344970337992944
  - 0.4993020161061971
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4824491999624515
  - 0.5142545403445227
  - 0.5028411477124135
  - 0.5027866847956132
  - 0.4978326989703415
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.27436684320860044
  - 0.2726570725902421
  - 0.2807684190918148
  - 0.27500074000555697
  - 0.281232761094286
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.835104824728075
  - 0.8484482171958694
  - 0.8480643625683447
  - 0.8389784012226161
  - 0.8373913137823129
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.560728744939271
  - -7.5744234800838575
  - -7.652719665271967
  - -7.6701902748414374
  - -7.424242424242424
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21949103528050898
  - -0.21099131476489968
  - -0.2154811715481171
  - -0.21655089096949562
  - -0.2111111111111111
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21949103528050898
  - -0.21099131476489966
  - -0.21548117154811716
  - -0.21655089096949562
  - -0.2111111111111111
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21949103528050895
  - -0.21099131476489966
  - -0.21548117154811716
  - -0.2165508909694956
  - -0.21111111111111108
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26545880976797215
  - -0.24912733428523964
  - -0.25389547118211075
  - -0.25292656676017977
  - -0.2606827771384734
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2007232898680267
  - -0.1919208287469743
  - -0.19478787965040203
  - -0.1991229465859487
  - -0.19135582310906987
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.780508964719491
  - 0.7890086852351004
  - 0.7845188284518827
  - 0.7834491090305044
  - 0.788888888888889
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.780508964719491
  - 0.7890086852351004
  - 0.7845188284518828
  - 0.7834491090305044
  - 0.7888888888888889
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.780508964719491
  - 0.7890086852351003
  - 0.7845188284518828
  - 0.7834491090305044
  - 0.7888888888888889
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7345411902320279
  - 0.7508726657147604
  - 0.7461045288178892
  - 0.7470734332398202
  - 0.7393172228615266
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.780508964719491
  - 0.7890086852351004
  - 0.7845188284518827
  - 0.7834491090305044
  - 0.788888888888889
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.780508964719491
  - 0.7890086852351004
  - 0.7845188284518828
  - 0.7834491090305044
  - 0.7888888888888889
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.780508964719491
  - 0.7890086852351003
  - 0.7845188284518828
  - 0.7834491090305044
  - 0.7888888888888889
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7345411902320279
  - 0.7508726657147604
  - 0.7461045288178892
  - 0.7470734332398202
  - 0.7393172228615266
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6904189407513235
  - 0.6746080304672407
  - 0.7046397896858098
  - 0.6907310225101256
  - 0.6741765867072559
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.809979420371035
  - 0.8081674547628048
  - 0.8123370614131111
  - 0.806436326005967
  - 0.8072871277796461
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7995508329389909
  - 0.8084969134722055
  - 0.8052571575416017
  - 0.8011471967074505
  - 0.8093624709425575
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6992960844478642
  - 0.6793612822138856
  - 0.6891335583331759
  - 0.6835473479515898
  - 0.6810182239771704
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.883467119948474
  - 0.8902937586276016
  - 0.8793640884888932
  - 0.8824925591284425
  - 0.8832177516143094
  train_average_precision_macro_oob:
  - 0.878550049354197
  - 0.8832821419643118
  - 0.8724103091664309
  - 0.877283593204556
  - 0.8776103614808777
  train_average_precision_micro:
  - 0.9649707535447289
  - 0.9669068031074948
  - 0.9651914894010811
  - 0.9597298253563039
  - 0.9613683833173214
  train_average_precision_micro_oob:
  - 0.9617665674772193
  - 0.9634071342906694
  - 0.9605341837005786
  - 0.955954367260968
  - 0.9575272483145796
  train_average_precision_samples:
  - 0.986775322631701
  - 0.9900098485778254
  - 0.985743770058003
  - 0.9833587632999744
  - 0.9875614345997844
  train_average_precision_samples_oob:
  - 0.9822159857574357
  - 0.9850619881542346
  - 0.9813669434083431
  - 0.978809369023566
  - 0.9820710165393438
  train_average_precision_weighted:
  - 0.9711617493757019
  - 0.9757486878689127
  - 0.9722695157027075
  - 0.9701304456978341
  - 0.9712197189591718
  train_average_precision_weighted_oob:
  - 0.9682527760366867
  - 0.9721787719687148
  - 0.968945833723487
  - 0.9664835584976679
  - 0.9676481161953399
  train_f1_macro:
  - 0.9692073397221603
  - 0.9722754050073636
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.970826519994054
  train_f1_macro_oob:
  - 0.9648614516009212
  - 0.9682253313696612
  - 0.9655566197598173
  - 0.9648368606701939
  - 0.9656979337000149
  train_f1_micro:
  - 0.9692073397221603
  - 0.9722754050073638
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.9708265199940538
  train_f1_micro_oob:
  - 0.9648614516009212
  - 0.9682253313696613
  - 0.9655566197598173
  - 0.964836860670194
  - 0.9656979337000149
  train_f1_samples:
  - 0.9692073397221603
  - 0.9722754050073638
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.9708265199940539
  train_f1_samples_oob:
  - 0.9648614516009213
  - 0.9682253313696613
  - 0.9655566197598173
  - 0.9648368606701941
  - 0.965697933700015
  train_f1_weighted:
  - 0.9808949486885723
  - 0.982035162902722
  - 0.9803135563942657
  - 0.980621153888598
  - 0.9812198776593992
  train_f1_weighted_oob:
  - 0.9759901724193967
  - 0.977578012415475
  - 0.9761043534524984
  - 0.9755382549514138
  - 0.9753737651897815
  train_jaccard_macro:
  - 0.9413074351678615
  - 0.9469136862871084
  - 0.9417619592751935
  - 0.94180415389764
  - 0.9443574485784706
  train_jaccard_macro_oob:
  - 0.933070084750356
  - 0.9391750669003087
  - 0.9344277997194911
  - 0.9330128143091256
  - 0.9346248353589794
  train_jaccard_micro:
  - 0.9402544052466578
  - 0.9460466449324687
  - 0.9406634257935373
  - 0.9407423253823939
  - 0.9433069728812336
  train_jaccard_micro_oob:
  - 0.932108511554471
  - 0.9384077365021589
  - 0.933406929952637
  - 0.9320626131402406
  - 0.933671086198843
  train_jaccard_samples:
  - 0.9449887668709364
  - 0.950292344465368
  - 0.9453671962166336
  - 0.945413148834727
  - 0.947616942061342
  train_jaccard_samples_oob:
  - 0.937743725091281
  - 0.9436826944559703
  - 0.9389345541243922
  - 0.9378321590711226
  - 0.9388851392830898
  train_jaccard_weighted:
  - 0.9627768895154656
  - 0.9649130354737441
  - 0.9616116698151553
  - 0.9622349825383814
  - 0.9633232785137852
  train_jaccard_weighted_oob:
  - 0.9534557687125054
  - 0.9564009605762046
  - 0.953665982272645
  - 0.9525831050789956
  - 0.9521979815877851
  train_label_ranking_average_precision_score:
  - 0.9867753226317011
  - 0.9900098485778259
  - 0.9857437700580038
  - 0.983358763299975
  - 0.9875614345997847
  train_label_ranking_average_precision_score_oob:
  - 0.9822159857574362
  - 0.9850619881542353
  - 0.981366943408344
  - 0.9788093690235667
  - 0.9820710165393446
  train_matthews_corrcoef_macro:
  - 0.8683906353980879
  - 0.8755524966294629
  - 0.8675737714315055
  - 0.868525104253047
  - 0.8731628978863545
  train_matthews_corrcoef_macro_oob:
  - 0.8550594075939557
  - 0.8616179828207748
  - 0.8556835544548854
  - 0.8536558908954646
  - 0.8555733079310807
  train_matthews_corrcoef_micro:
  - 0.9282434089141341
  - 0.9351106097902717
  - 0.9286205519339471
  - 0.9286717594272755
  - 0.9322337389459772
  train_matthews_corrcoef_micro_oob:
  - 0.9177378958600639
  - 0.9252566003529245
  - 0.9192075018371325
  - 0.917335134264738
  - 0.9198910589694955
  train_matthews_corrcoef_samples:
  - 0.9312458511739775
  - 0.9403976083118196
  - 0.9334357863793338
  - 0.9323914100874471
  - 0.9350358513139865
  train_matthews_corrcoef_samples_oob:
  - 0.9214181611359832
  - 0.9313175436554214
  - 0.9240778438127398
  - 0.9222249737380432
  - 0.9235198225396384
  train_matthews_corrcoef_weighted:
  - 0.9454053859387535
  - 0.949405356434128
  - 0.9443504159645719
  - 0.9456446433174193
  - 0.9466760051456261
  train_matthews_corrcoef_weighted_oob:
  - 0.9332408417630522
  - 0.9375942665769156
  - 0.9339783245523904
  - 0.9324908644361654
  - 0.9318502440645342
  train_ndgc:
  - 0.9933041086454766
  - 0.9953231216707267
  - 0.9927534905193696
  - 0.9911469720135243
  - 0.9936546138219958
  train_ndgc_oob:
  - 0.9914357617238513
  - 0.9928601069339761
  - 0.9909073232016883
  - 0.9890440599808458
  - 0.9911581928780657
  train_neg_coverage_error:
  - -4.400416016640666
  - -4.355670103092783
  - -4.372872614749871
  - -4.37962962962963
  - -4.398022892819979
  train_neg_coverage_error_oob:
  - -4.520540821632865
  - -4.457216494845361
  - -4.492521918514698
  - -4.4789094650205765
  - -4.518210197710718
  train_neg_hamming_loss_macro:
  - -0.030792660277839685
  - -0.027724594992636225
  - -0.030575407058130114
  - -0.03053350970017637
  - -0.02917348000594619
  train_neg_hamming_loss_macro_oob:
  - -0.03513854839907882
  - -0.03177466863033874
  - -0.03444338024018272
  - -0.03516313932980599
  - -0.03430206629998513
  train_neg_hamming_loss_micro:
  - -0.030792660277839685
  - -0.02772459499263623
  - -0.03057540705813011
  - -0.030533509700176365
  - -0.029173480005946186
  train_neg_hamming_loss_micro_oob:
  - -0.03513854839907882
  - -0.03177466863033873
  - -0.03444338024018272
  - -0.035163139329806
  - -0.03430206629998513
  train_neg_hamming_loss_samples:
  - -0.03079266027783968
  - -0.027724594992636225
  - -0.030575407058130107
  - -0.030533509700176365
  - -0.029173480005946183
  train_neg_hamming_loss_samples_oob:
  - -0.03513854839907882
  - -0.03177466863033873
  - -0.03444338024018271
  - -0.03516313932980599
  - -0.034302066299985126
  train_neg_hamming_loss_weighted:
  - -0.019105051311427458
  - -0.017964837097278065
  - -0.019686443605734315
  - -0.01937884611140205
  - -0.018780122340600634
  train_neg_hamming_loss_weighted_oob:
  - -0.024009827580603223
  - -0.022421987584525002
  - -0.02389564654750165
  - -0.024461745048586156
  - -0.024626234810218528
  train_neg_label_ranking_loss:
  - -0.006435262254852182
  - -0.005350596364035245
  - -0.0071666987980625345
  - -0.007367116031137195
  - -0.006080750097399421
  train_neg_label_ranking_loss_oob:
  - -0.0105982058288722
  - -0.00911796567448261
  - -0.010985864704644636
  - -0.010765926297231412
  - -0.010232445176513854
  train_precision_macro:
  - 0.9692073397221603
  - 0.9722754050073636
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.970826519994054
  train_precision_macro_oob:
  - 0.9648614516009212
  - 0.9682253313696612
  - 0.9655566197598173
  - 0.9648368606701939
  - 0.9656979337000149
  train_precision_micro:
  - 0.9692073397221603
  - 0.9722754050073638
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.9708265199940538
  train_precision_micro_oob:
  - 0.9648614516009212
  - 0.9682253313696613
  - 0.9655566197598173
  - 0.964836860670194
  - 0.9656979337000149
  train_precision_samples:
  - 0.9692073397221603
  - 0.9722754050073638
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.9708265199940539
  train_precision_samples_oob:
  - 0.9648614516009213
  - 0.9682253313696613
  - 0.9655566197598173
  - 0.9648368606701941
  - 0.965697933700015
  train_precision_weighted:
  - 0.9808949486885723
  - 0.982035162902722
  - 0.9803135563942657
  - 0.980621153888598
  - 0.9812198776593992
  train_precision_weighted_oob:
  - 0.9759901724193967
  - 0.977578012415475
  - 0.9761043534524984
  - 0.9755382549514138
  - 0.9753737651897815
  train_recall_macro:
  - 0.9692073397221603
  - 0.9722754050073636
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.970826519994054
  train_recall_macro_oob:
  - 0.9648614516009212
  - 0.9682253313696612
  - 0.9655566197598173
  - 0.9648368606701939
  - 0.9656979337000149
  train_recall_micro:
  - 0.9692073397221603
  - 0.9722754050073638
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.9708265199940538
  train_recall_micro_oob:
  - 0.9648614516009212
  - 0.9682253313696613
  - 0.9655566197598173
  - 0.964836860670194
  - 0.9656979337000149
  train_recall_samples:
  - 0.9692073397221603
  - 0.9722754050073638
  - 0.9694245929418699
  - 0.9694664902998237
  - 0.9708265199940539
  train_recall_samples_oob:
  - 0.9648614516009213
  - 0.9682253313696613
  - 0.9655566197598173
  - 0.9648368606701941
  - 0.965697933700015
  train_recall_weighted:
  - 0.9808949486885723
  - 0.982035162902722
  - 0.9803135563942657
  - 0.980621153888598
  - 0.9812198776593992
  train_recall_weighted_oob:
  - 0.9759901724193967
  - 0.977578012415475
  - 0.9761043534524984
  - 0.9755382549514138
  - 0.9753737651897815
  train_roc_auc_macro:
  - 0.9880179736016533
  - 0.9893280494866008
  - 0.9874030523766146
  - 0.9869598030800361
  - 0.9872225471472384
  train_roc_auc_macro_oob:
  - 0.9839348055923622
  - 0.9859189386104267
  - 0.9835360353616419
  - 0.9835430708574594
  - 0.9838938428788718
  train_roc_auc_micro:
  - 0.9900916935095351
  - 0.9906924670191003
  - 0.9900520105098631
  - 0.9894370679228177
  - 0.989241745811756
  train_roc_auc_micro_oob:
  - 0.9878464633108649
  - 0.9887100856625605
  - 0.9878313821218412
  - 0.9874894989210028
  - 0.9871851664918139
  train_roc_auc_samples:
  - 0.9935777382651686
  - 0.9946676596497104
  - 0.9928526410678478
  - 0.9926771798079117
  - 0.9939257535446401
  train_roc_auc_samples_oob:
  - 0.9895881349580926
  - 0.9910735434893203
  - 0.9891867615058876
  - 0.989392324160016
  - 0.9899614695381753
  train_roc_auc_weighted:
  - 0.9936205063411666
  - 0.9940242100948699
  - 0.9933970745524816
  - 0.9930235407105285
  - 0.9927677160000745
  train_roc_auc_weighted_oob:
  - 0.9910182277102485
  - 0.9917889638913914
  - 0.9906109119872355
  - 0.9904528488909963
  - 0.9902743391057183
start: 2023-12-13 01:55:37.440248
wrapper: null
