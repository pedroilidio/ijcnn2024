active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j+AzMzMzMwMwIAzMzMzMwtAQGZmZmZmEsCAMzMzMzMLQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 17:42:30.054175
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__7
  params: {}
hash: 45b8a8bcb928a8962db186c741da165ce2a275dea395f4cff8a97e1cec6fe219
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/45b8a8b_20231222T171707880914_embedding_weak__7_scene.yml
results:
  fit_time:
  - 1421.268893957138
  - 1384.2922072410583
  - 1292.5564711093903
  - 1204.4808633327484
  - 1412.3706221580505
  score_time:
  - 15.743464946746826
  - 14.306182861328125
  - 14.540753364562988
  - 14.075627326965332
  - 14.783004522323608
  test_average_precision_macro:
  - 0.8340240441060329
  - 0.8443108948540821
  - 0.833133532753791
  - 0.8565562694217763
  - 0.8179759795220912
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.83912980234632
  - 0.8540303375031872
  - 0.842769487452206
  - 0.8604009448751012
  - 0.8243023548236765
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8705208333333334
  - 0.8812027491408935
  - 0.8753486750348675
  - 0.8768861454046638
  - 0.8625523012552302
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8252348686951095
  - 0.830814423503276
  - 0.8217104922677042
  - 0.8468436324017307
  - 0.8072895662844196
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8979166666666666
  - 0.9037800687285223
  - 0.8988842398884239
  - 0.9101508916323731
  - 0.8985355648535566
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8979166666666667
  - 0.9037800687285223
  - 0.898884239888424
  - 0.9101508916323731
  - 0.8985355648535565
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8979166666666669
  - 0.9037800687285225
  - 0.8988842398884239
  - 0.9101508916323732
  - 0.8985355648535565
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8923732235142119
  - 0.8985144270075176
  - 0.893527140219766
  - 0.9049948958433024
  - 0.8935684630512369
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8190423606312282
  - 0.8278681430056606
  - 0.8199749700931519
  - 0.8387131238569213
  - 0.8189923733406702
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8147448015122873
  - 0.8244514106583072
  - 0.8163394553514883
  - 0.8351164254247955
  - 0.8157644824311491
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8301587301587301
  - 0.8405989199803632
  - 0.8331340904562661
  - 0.8518028610621202
  - 0.8327356047021317
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8102450964388981
  - 0.8194228590158035
  - 0.8114188132359753
  - 0.8302888676391061
  - 0.8110088993197812
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8705208333333334
  - 0.8812027491408934
  - 0.8753486750348674
  - 0.8768861454046636
  - 0.8625523012552299
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6104368164437702
  - 0.6374130577883795
  - 0.6223493287417625
  - 0.664651683752567
  - 0.6216694649655231
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6141478603884284
  - 0.6363494413605331
  - 0.6219776820734292
  - 0.662236580433721
  - 0.6189010865425482
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4783594833378964
  - 0.5114134356258879
  - 0.49933382044499414
  - 0.5514466270504567
  - 0.500900103495309
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.591326200694892
  - 0.6199892129398346
  - 0.6046685776159381
  - 0.6476359224160457
  - 0.6065693165359034
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9045078080552353
  - 0.9122887646109352
  - 0.9085920600531376
  - 0.9096363895719372
  - 0.8989256732958744
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.475
  - -1.3979381443298968
  - -1.4497907949790796
  - -1.3909465020576133
  - -1.4665271966527196
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10208333333333335
  - -0.09621993127147767
  - -0.10111576011157603
  - -0.08984910836762688
  - -0.1014644351464435
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10208333333333333
  - -0.09621993127147767
  - -0.10111576011157601
  - -0.08984910836762688
  - -0.10146443514644352
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10208333333333333
  - -0.09621993127147765
  - -0.101115760111576
  - -0.08984910836762688
  - -0.1014644351464435
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10762677648578811
  - -0.10148557299248243
  - -0.10647285978023396
  - -0.0950051041566976
  - -0.10643153694876298
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07718749999999999
  - -0.06520618556701031
  - -0.06982217573221758
  - -0.06352880658436214
  - -0.07505230125523013
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8979166666666666
  - 0.9037800687285223
  - 0.8988842398884239
  - 0.9101508916323731
  - 0.8985355648535566
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8979166666666667
  - 0.9037800687285223
  - 0.898884239888424
  - 0.9101508916323731
  - 0.8985355648535565
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8979166666666669
  - 0.9037800687285225
  - 0.8988842398884239
  - 0.9101508916323732
  - 0.8985355648535565
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8923732235142119
  - 0.8985144270075176
  - 0.893527140219766
  - 0.9049948958433024
  - 0.8935684630512369
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8979166666666666
  - 0.9037800687285223
  - 0.8988842398884239
  - 0.9101508916323731
  - 0.8985355648535566
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8979166666666667
  - 0.9037800687285223
  - 0.898884239888424
  - 0.9101508916323731
  - 0.8985355648535565
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8979166666666669
  - 0.9037800687285225
  - 0.8988842398884239
  - 0.9101508916323732
  - 0.8985355648535565
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8923732235142119
  - 0.8985144270075176
  - 0.893527140219766
  - 0.9049948958433024
  - 0.8935684630512369
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9380115554200475
  - 0.9480104629045507
  - 0.9410830585640615
  - 0.9542966601869155
  - 0.9373864107021187
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9441222668188197
  - 0.9560040123474254
  - 0.9496969562745924
  - 0.9600573320413437
  - 0.9450618568829923
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9228124999999999
  - 0.9347938144329897
  - 0.9301778242677824
  - 0.9364711934156379
  - 0.9249476987447699
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9336085594440777
  - 0.9424140023662921
  - 0.9353122169426067
  - 0.9502884625621022
  - 0.9316467897550399
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9947073072096706
  - 0.9947494346707902
  - 0.9947260235459235
  - 0.9939786889339373
  - 0.9942087490237244
  train_average_precision_macro_oob:
  - 0.8576252935599781
  - 0.861744763182856
  - 0.8627040678112271
  - 0.8484351992474767
  - 0.8577857392720736
  train_average_precision_micro:
  - 0.9944086524712324
  - 0.9941679095693329
  - 0.9942478780045971
  - 0.9933977770473394
  - 0.9940222302636719
  train_average_precision_micro_oob:
  - 0.8640400823798805
  - 0.866363408337845
  - 0.8673964201455814
  - 0.8559883965856379
  - 0.8649784946318206
  train_average_precision_samples:
  - 0.9899238886005881
  - 0.9890305237599721
  - 0.9884223259028858
  - 0.9865087627971543
  - 0.9883791256264041
  train_average_precision_samples_oob:
  - 0.885058813354091
  - 0.8841527922303156
  - 0.8864005529635389
  - 0.8826782925559604
  - 0.8867288750648004
  train_average_precision_weighted:
  - 0.9946389808857087
  - 0.9946722410716391
  - 0.9946330527773635
  - 0.9939023224590505
  - 0.9941294530399382
  train_average_precision_weighted_oob:
  - 0.8481057422214198
  - 0.8533948077935758
  - 0.8543299917360193
  - 0.8388581206385627
  - 0.8483808865961178
  train_f1_macro:
  - 0.95649541601799
  - 0.9552549427679501
  - 0.956886124071194
  - 0.9556654520215165
  - 0.9573181268360117
  train_f1_macro_oob:
  - 0.8955198062618924
  - 0.8986298994103364
  - 0.8993433557974772
  - 0.8941523512059691
  - 0.8977017452911698
  train_f1_micro:
  - 0.9564954160179899
  - 0.9552549427679501
  - 0.9568861240711941
  - 0.9556654520215165
  - 0.9573181268360117
  train_f1_micro_oob:
  - 0.8955198062618924
  - 0.8986298994103364
  - 0.8993433557974772
  - 0.8941523512059691
  - 0.8977017452911699
  train_f1_samples:
  - 0.95649541601799
  - 0.9552549427679501
  - 0.9568861240711941
  - 0.9556654520215166
  - 0.9573181268360118
  train_f1_samples_oob:
  - 0.8955198062618924
  - 0.8986298994103367
  - 0.8993433557974772
  - 0.8941523512059693
  - 0.89770174529117
  train_f1_weighted:
  - 0.9547171619099549
  - 0.9534070026990744
  - 0.9553252265693494
  - 0.9535504531457532
  - 0.9557076004744843
  train_f1_weighted_oob:
  - 0.8899382813434688
  - 0.8936826866759118
  - 0.8941722032442111
  - 0.8886580590653178
  - 0.892146540685636
  train_jaccard_macro:
  - 0.9170919205255359
  - 0.9148553105854907
  - 0.917743287147203
  - 0.9156920707990173
  - 0.9185150239756462
  train_jaccard_macro_oob:
  - 0.8145883349086155
  - 0.8192383174595076
  - 0.82048051200189
  - 0.8122327240179006
  - 0.8182276955633342
  train_jaccard_micro:
  - 0.9166183174471612
  - 0.9143426294820717
  - 0.9173362047544107
  - 0.9150951233696104
  - 0.9181305933046072
  train_jaccard_micro_oob:
  - 0.810806577916993
  - 0.8159200062987166
  - 0.8170971033833111
  - 0.8085673936921387
  - 0.8143909703715316
  train_jaccard_samples:
  - 0.926816912546025
  - 0.9247683464644963
  - 0.9274852501913156
  - 0.9252869289308643
  - 0.9282998839764003
  train_jaccard_samples_oob:
  - 0.8256357031655422
  - 0.8303602398295425
  - 0.8315312646572366
  - 0.8234798344116407
  - 0.829198449727221
  train_jaccard_weighted:
  - 0.9138502782519059
  - 0.9115016651165081
  - 0.9148927267293311
  - 0.9118726976724504
  - 0.9155761680039667
  train_jaccard_weighted_oob:
  - 0.8057287490062099
  - 0.811281870624827
  - 0.8122251825302074
  - 0.8035426774505875
  - 0.8094050831364991
  train_label_ranking_average_precision_score:
  - 0.989923888600588
  - 0.989030523759972
  - 0.9884223259028855
  - 0.986508762797154
  - 0.9883791256264037
  train_label_ranking_average_precision_score_oob:
  - 0.8850588133540912
  - 0.8841527922303153
  - 0.8864005529635389
  - 0.8826782925559604
  - 0.8867288750648002
  train_matthews_corrcoef_macro:
  - 0.850627950244255
  - 0.8464967066649788
  - 0.8511478810090319
  - 0.8488183167907283
  - 0.8530600723002735
  train_matthews_corrcoef_macro_oob:
  - 0.6008306812699138
  - 0.6184123791991486
  - 0.6205364582462048
  - 0.5964040376963798
  - 0.6101755211028222
  train_matthews_corrcoef_micro:
  - 0.847723850768622
  - 0.8434789197733106
  - 0.8488142200841031
  - 0.845133013674825
  - 0.8504448532462865
  train_matthews_corrcoef_micro_oob:
  - 0.6040112709382626
  - 0.6194163246613063
  - 0.6206521892033977
  - 0.5990459476803052
  - 0.6132490670909434
  train_matthews_corrcoef_samples:
  - 0.7867876798406572
  - 0.7822837410554708
  - 0.7878990412235936
  - 0.7819452861929107
  - 0.7924077849229719
  train_matthews_corrcoef_samples_oob:
  - 0.45381215112613965
  - 0.46730323786560296
  - 0.4692726806892453
  - 0.44923960370105287
  - 0.46469390643728387
  train_matthews_corrcoef_weighted:
  - 0.8462569111188245
  - 0.8419535078528531
  - 0.8474995384099386
  - 0.8434439988767034
  - 0.8492147661217914
  train_matthews_corrcoef_weighted_oob:
  - 0.5817487833286576
  - 0.6028147128138787
  - 0.6037203376183969
  - 0.5778473150013287
  - 0.5910086789007325
  train_ndgc:
  - 0.9926013102401419
  - 0.9920975996618339
  - 0.9916036503271825
  - 0.9901472830206861
  - 0.9915835478721489
  train_ndgc_oob:
  - 0.9155395887471164
  - 0.9145949523900686
  - 0.9163001714814973
  - 0.9134734120917304
  - 0.9166113960160556
  train_neg_coverage_error:
  - -1.0975609756097562
  - -1.1030176899063475
  - -1.0995334370139969
  - -1.107756376887038
  - -1.0995334370139969
  train_neg_coverage_error_oob:
  - -1.4042553191489362
  - -1.4162330905306972
  - -1.4043545878693624
  - -1.4279021343050495
  - -1.4048729911871436
  train_neg_hamming_loss_macro:
  - -0.043504583982010035
  - -0.044745057232049947
  - -0.043113875928805945
  - -0.04433454797848343
  - -0.04268187316398825
  train_neg_hamming_loss_macro_oob:
  - -0.10448019373810757
  - -0.10137010058966354
  - -0.10065664420252289
  - -0.10584764879403087
  - -0.10229825470883014
  train_neg_hamming_loss_micro:
  - -0.043504583982010035
  - -0.044745057232049947
  - -0.043113875928805945
  - -0.04433454797848343
  - -0.04268187316398825
  train_neg_hamming_loss_micro_oob:
  - -0.10448019373810759
  - -0.10137010058966354
  - -0.10065664420252289
  - -0.10584764879403089
  - -0.10229825470883014
  train_neg_hamming_loss_samples:
  - -0.04350458398201003
  - -0.044745057232049947
  - -0.04311387592880594
  - -0.04433454797848342
  - -0.04268187316398825
  train_neg_hamming_loss_samples_oob:
  - -0.10448019373810759
  - -0.10137010058966353
  - -0.10065664420252288
  - -0.10584764879403087
  - -0.10229825470883012
  train_neg_hamming_loss_weighted:
  - -0.04528283809004498
  - -0.046592997300925657
  - -0.04467477343065064
  - -0.046449546854246855
  - -0.04429239952551557
  train_neg_hamming_loss_weighted_oob:
  - -0.11006171865653129
  - -0.10631731332408818
  - -0.10582779675578889
  - -0.11134194093468215
  - -0.10785345931436398
  train_neg_label_ranking_loss:
  - -0.0047093928386092365
  - -0.005072840790842872
  - -0.005443234836702955
  - -0.005960437272254035
  - -0.0052099533437014005
  train_neg_label_ranking_loss_oob:
  - -0.06395952257394914
  - -0.06629812695109262
  - -0.06472265422498705
  - -0.06836283185840708
  - -0.06448937273198549
  train_precision_macro:
  - 0.95649541601799
  - 0.9552549427679501
  - 0.956886124071194
  - 0.9556654520215165
  - 0.9573181268360117
  train_precision_macro_oob:
  - 0.8955198062618924
  - 0.8986298994103364
  - 0.8993433557974772
  - 0.8941523512059691
  - 0.8977017452911698
  train_precision_micro:
  - 0.9564954160179899
  - 0.9552549427679501
  - 0.9568861240711941
  - 0.9556654520215165
  - 0.9573181268360117
  train_precision_micro_oob:
  - 0.8955198062618924
  - 0.8986298994103364
  - 0.8993433557974772
  - 0.8941523512059691
  - 0.8977017452911699
  train_precision_samples:
  - 0.95649541601799
  - 0.9552549427679501
  - 0.9568861240711941
  - 0.9556654520215166
  - 0.9573181268360118
  train_precision_samples_oob:
  - 0.8955198062618924
  - 0.8986298994103367
  - 0.8993433557974772
  - 0.8941523512059693
  - 0.89770174529117
  train_precision_weighted:
  - 0.9547171619099549
  - 0.9534070026990744
  - 0.9553252265693494
  - 0.9535504531457532
  - 0.9557076004744843
  train_precision_weighted_oob:
  - 0.8899382813434688
  - 0.8936826866759118
  - 0.8941722032442111
  - 0.8886580590653178
  - 0.892146540685636
  train_recall_macro:
  - 0.95649541601799
  - 0.9552549427679501
  - 0.956886124071194
  - 0.9556654520215165
  - 0.9573181268360117
  train_recall_macro_oob:
  - 0.8955198062618924
  - 0.8986298994103364
  - 0.8993433557974772
  - 0.8941523512059691
  - 0.8977017452911698
  train_recall_micro:
  - 0.9564954160179899
  - 0.9552549427679501
  - 0.9568861240711941
  - 0.9556654520215165
  - 0.9573181268360117
  train_recall_micro_oob:
  - 0.8955198062618924
  - 0.8986298994103364
  - 0.8993433557974772
  - 0.8941523512059691
  - 0.8977017452911699
  train_recall_samples:
  - 0.95649541601799
  - 0.9552549427679501
  - 0.9568861240711941
  - 0.9556654520215166
  - 0.9573181268360118
  train_recall_samples_oob:
  - 0.8955198062618924
  - 0.8986298994103367
  - 0.8993433557974772
  - 0.8941523512059693
  - 0.89770174529117
  train_recall_weighted:
  - 0.9547171619099549
  - 0.9534070026990744
  - 0.9553252265693494
  - 0.9535504531457532
  - 0.9557076004744843
  train_recall_weighted_oob:
  - 0.8899382813434688
  - 0.8936826866759118
  - 0.8941722032442111
  - 0.8886580590653178
  - 0.892146540685636
  train_roc_auc_macro:
  - 0.9987560537806787
  - 0.9986597089665729
  - 0.9987102096879893
  - 0.9985271024541013
  - 0.9985407621493693
  train_roc_auc_macro_oob:
  - 0.9513568594979701
  - 0.9511286437970706
  - 0.9522846339867276
  - 0.9470543673808818
  - 0.950755131912893
  train_roc_auc_micro:
  - 0.9987363688957653
  - 0.9986282130308317
  - 0.9986688236451211
  - 0.9984871361727702
  - 0.998599835754757
  train_roc_auc_micro_oob:
  - 0.9576203716946022
  - 0.9566407406014608
  - 0.9571434418501605
  - 0.9531088108455391
  - 0.9567867347142252
  train_roc_auc_samples:
  - 0.9952906071613907
  - 0.9949271592091571
  - 0.994556765163297
  - 0.994039562727746
  - 0.9947900466562987
  train_roc_auc_samples_oob:
  - 0.9360404774260509
  - 0.9337018730489073
  - 0.9352773457750129
  - 0.9316371681415929
  - 0.9355106272680145
  train_roc_auc_weighted:
  - 0.9987246526540338
  - 0.9986174621287767
  - 0.9986535645785872
  - 0.9984867120955083
  - 0.9984913269553698
  train_roc_auc_weighted_oob:
  - 0.9471832375853827
  - 0.9471777349549448
  - 0.9484650850855434
  - 0.9427772379451621
  - 0.9467003882486181
start: 2023-12-22 17:17:07.880914
wrapper: null
