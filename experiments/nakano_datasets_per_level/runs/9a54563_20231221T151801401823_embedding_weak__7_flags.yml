active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz87+YmZmZmZkBwICZmZmZmcm/aGZmZmZmBkCgmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzA0DMzMzMzMwMwGhmZmZmZvY/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZAUBmZmZmZmYOwMzMzMzMzPy/mJmZmZmZ6b/NzMzMzMwQQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZyb+QmZmZmZkBwACZmZmZmcm/4MzMzMzM/D/AmZmZmZnpPw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 15:21:24.693953
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__7
  params: {}
hash: 9a545630216a1debcab250fec9dadcb8a5c84fed089aced44aee9445be18497f
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9a54563_20231221T151801401823_embedding_weak__7_flags.yml
results:
  fit_time:
  - 187.33645939826965
  - 194.96474599838257
  - 189.09967470169067
  - 188.1699879169464
  - 192.58252811431885
  score_time:
  - 2.966315746307373
  - 3.3186452388763428
  - 2.9392826557159424
  - 2.8755648136138916
  - 3.427743434906006
  test_average_precision_macro:
  - 0.6072421573179706
  - 0.7349577003749328
  - 0.7219384035869146
  - 0.6214177623318056
  - 0.6684370107434192
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7540059609981737
  - 0.7589193153770855
  - 0.7770253713159747
  - 0.7277418275070736
  - 0.8076354460743287
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7960765160765161
  - 0.801829268292683
  - 0.8234472934472936
  - 0.8126254826254825
  - 0.8375699665831244
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7253001809605935
  - 0.7626882791964245
  - 0.7725877091744923
  - 0.6869840323713253
  - 0.7834197956201973
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5347985347985348
  - 0.5121951219512196
  - 0.5238095238095237
  - 0.5173745173745175
  - 0.5263157894736842
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5347985347985348
  - 0.5121951219512195
  - 0.5238095238095238
  - 0.5173745173745173
  - 0.5263157894736842
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5347985347985347
  - 0.5121951219512194
  - 0.5238095238095237
  - 0.5173745173745172
  - 0.5263157894736844
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.41706730769230765
  - 0.4514753539143783
  - 0.43240093240093236
  - 0.4246199324324324
  - 0.3982594280978035
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4034405158750375
  - 0.3617612774576962
  - 0.38223315336931174
  - 0.3762286936952944
  - 0.40004597591110463
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.365
  - 0.3442622950819672
  - 0.3548387096774194
  - 0.3489583333333333
  - 0.35714285714285715
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.37975016436554904
  - 0.3649534747095723
  - 0.36970892355507745
  - 0.3683214683214683
  - 0.37285506890770054
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.2813109217940951
  - 0.3056381436455166
  - 0.2955604961652595
  - 0.28884494490862006
  - 0.265663665820168
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.796076516076516
  - 0.801829268292683
  - 0.8234472934472935
  - 0.8126254826254826
  - 0.8375699665831244
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.012693190237694834
  - 0.03241831564970874
  - 0.019503703983203287
  - 0.029001096534915265
  - 0.013083482375842791
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.06453488853508073
  - 0.10313704510926126
  - 0.08878772804159552
  - 0.1095144200693452
  - 0.06426619725287021
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.01208729540489825
  - 0.019656620664690906
  - 0.0241745908097965
  - 0.03503682249122533
  - 0.012405382126079783
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.02082476523371809
  - 0.048235307254910646
  - 0.02999433264083536
  - 0.046896036331450966
  - 0.02091296789209517
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8802934429875193
  - 0.8783565602069159
  - 0.8958777962505028
  - 0.8887838443112299
  - 0.8970892002403911
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.717948717948718
  - -4.902439024390244
  - -4.743589743589744
  - -4.918918918918919
  - -4.394736842105263
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.46520146520146527
  - -0.48780487804878053
  - -0.4761904761904762
  - -0.4826254826254827
  - -0.4736842105263158
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4652014652014652
  - -0.4878048780487805
  - -0.47619047619047616
  - -0.4826254826254826
  - -0.47368421052631576
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.46520146520146527
  - -0.4878048780487806
  - -0.4761904761904762
  - -0.48262548262548266
  - -0.4736842105263156
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5829326923076922
  - -0.5485246460856217
  - -0.5675990675990676
  - -0.5753800675675677
  - -0.6017405719021965
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21153846153846154
  - -0.21341463414634146
  - -0.211965811965812
  - -0.22657657657657657
  - -0.17192982456140352
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5347985347985348
  - 0.5121951219512196
  - 0.5238095238095237
  - 0.5173745173745175
  - 0.5263157894736842
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5347985347985348
  - 0.5121951219512195
  - 0.5238095238095238
  - 0.5173745173745173
  - 0.5263157894736842
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5347985347985347
  - 0.5121951219512194
  - 0.5238095238095237
  - 0.5173745173745172
  - 0.5263157894736844
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.41706730769230765
  - 0.4514753539143783
  - 0.43240093240093236
  - 0.4246199324324324
  - 0.3982594280978035
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5347985347985348
  - 0.5121951219512196
  - 0.5238095238095237
  - 0.5173745173745175
  - 0.5263157894736842
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5347985347985348
  - 0.5121951219512195
  - 0.5238095238095238
  - 0.5173745173745173
  - 0.5263157894736842
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5347985347985347
  - 0.5121951219512194
  - 0.5238095238095237
  - 0.5173745173745172
  - 0.5263157894736844
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.41706730769230765
  - 0.4514753539143783
  - 0.43240093240093236
  - 0.4246199324324324
  - 0.3982594280978035
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6203620278781068
  - 0.7082669529311643
  - 0.7353670362498048
  - 0.6116173796828477
  - 0.7261094829837064
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7997844827586207
  - 0.7696678321678321
  - 0.8035675908016333
  - 0.7728411259541984
  - 0.8370248682943409
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7884615384615385
  - .nan
  - 0.788034188034188
  - 0.7734234234234233
  - 0.8280701754385965
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6290370583717358
  - 0.6782943107443836
  - 0.7122066529961267
  - 0.5626794132368331
  - 0.6796535775607471
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8742485991117561
  - 0.8461572175194132
  - 0.8606273800727918
  - 0.856091561408664
  - 0.8732320486467285
  train_average_precision_macro_oob:
  - 0.7323646390385657
  - 0.6807786678387691
  - 0.6845508208045494
  - 0.7088185132446515
  - 0.7373583108931369
  train_average_precision_micro:
  - 0.9029398591658574
  - 0.8980088886257553
  - 0.905440826402381
  - 0.8914276882772059
  - 0.9110004526811146
  train_average_precision_micro_oob:
  - 0.7964781134415316
  - 0.819699858615986
  - 0.8022261749124313
  - 0.7936158741331576
  - 0.8177015362312683
  train_average_precision_samples:
  - 0.9146105990783411
  - 0.899346923954767
  - 0.8945798771121352
  - 0.8944017288444042
  - 0.9124201261701261
  train_average_precision_samples_oob:
  - 0.8300350742447518
  - 0.8366088287166719
  - 0.8247703533026114
  - 0.8369813466787988
  - 0.8416597985347986
  train_average_precision_weighted:
  - 0.8970799784088949
  - 0.8866233206364541
  - 0.8970221868867437
  - 0.8822735618291556
  - 0.9059774675228975
  train_average_precision_weighted_oob:
  - 0.7841717832213017
  - 0.7819892926822962
  - 0.7748761179147733
  - 0.7720553935155134
  - 0.8040941642331885
  train_f1_macro:
  - 0.5972350230414748
  - 0.6171802054154994
  - 0.5953917050691244
  - 0.613284804367607
  - 0.6034798534798533
  train_f1_macro_oob:
  - 0.5225806451612903
  - 0.5406162464985994
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_f1_micro:
  - 0.5972350230414747
  - 0.6171802054154996
  - 0.5953917050691244
  - 0.6132848043676069
  - 0.6034798534798534
  train_f1_micro_oob:
  - 0.5225806451612903
  - 0.5406162464985994
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_f1_samples:
  - 0.5972350230414747
  - 0.6171802054154994
  - 0.5953917050691244
  - 0.6132848043676069
  - 0.6034798534798534
  train_f1_samples_oob:
  - 0.5225806451612903
  - 0.5406162464985995
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_f1_weighted:
  - 0.5534144856968959
  - 0.5602132114981915
  - 0.5414448669201521
  - 0.5693546448744141
  - 0.5595876189096528
  train_f1_weighted_oob:
  - 0.43447352404138767
  - 0.44276921124436824
  - 0.42825953636698144
  - 0.4545727676961903
  - 0.42797817374088565
  train_jaccard_macro:
  - 0.4383992469547375
  - 0.4624002064601051
  - 0.43950543767510747
  - 0.4560801421283301
  - 0.4441174798512662
  train_jaccard_macro_oob:
  - 0.3801574174814206
  - 0.4001145135246414
  - 0.3840215323725257
  - 0.3959812729917737
  - 0.3774247145123851
  train_jaccard_micro:
  - 0.42575558475689884
  - 0.4463200540175557
  - 0.4238845144356955
  - 0.442257217847769
  - 0.4321311475409836
  train_jaccard_micro_oob:
  - 0.3537117903930131
  - 0.3704414587332054
  - 0.3545568039950062
  - 0.37032418952618457
  - 0.34981458590852904
  train_jaccard_samples:
  - 0.4548532471113116
  - 0.4704869204869204
  - 0.4494205078076046
  - 0.46900707219178556
  - 0.4532412388181618
  train_jaccard_samples_oob:
  - 0.3740231095069805
  - 0.3882688117982235
  - 0.3719597964759255
  - 0.390277839640897
  - 0.36589340147032456
  train_jaccard_weighted:
  - 0.38808659566806325
  - 0.3953769141364904
  - 0.37746838643050684
  - 0.40352302163424064
  - 0.3941513889029851
  train_jaccard_weighted_oob:
  - 0.29531959478016645
  - 0.30088112365317193
  - 0.29034843947292555
  - 0.3089009310934673
  - 0.29147437247499813
  train_label_ranking_average_precision_score:
  - 0.9146105990783409
  - 0.8993469239547672
  - 0.8945798771121353
  - 0.8944017288444036
  - 0.9124201261701261
  train_label_ranking_average_precision_score_oob:
  - 0.8300350742447515
  - 0.8366088287166721
  - 0.8247703533026114
  - 0.836981346678799
  - 0.8416597985347983
  train_matthews_corrcoef_macro:
  - 0.1005982753172128
  - 0.15967070010683762
  - 0.1202172704727192
  - 0.13385468207648551
  - 0.14212511642940187
  train_matthews_corrcoef_macro_oob:
  - 0.030450469104856808
  - 0.06138765242780976
  - 0.026775427498038774
  - 0.046659388403573344
  - 0.028790866046173442
  train_matthews_corrcoef_micro:
  - 0.3133243843228943
  - 0.3425625380044777
  - 0.3043738849320029
  - 0.3367593446836034
  - 0.3227409074223231
  train_matthews_corrcoef_micro_oob:
  - 0.10821795400621297
  - 0.15392779845926555
  - 0.09428186199466078
  - 0.15808332503789485
  - 0.06971149559394776
  train_matthews_corrcoef_samples:
  - 0.25385425840627596
  - 0.252368683375363
  - 0.23002867472600158
  - 0.2677413477545041
  - 0.2473838874949888
  train_matthews_corrcoef_samples_oob:
  - 0.04048833897850255
  - 0.05567783162174069
  - 0.019787737355067354
  - 0.07223484696913925
  - 0.008411306993811343
  train_matthews_corrcoef_weighted:
  - 0.159555611552209
  - 0.22062839162416145
  - 0.17585889152880663
  - 0.1989664088741188
  - 0.20128852378189172
  train_matthews_corrcoef_weighted_oob:
  - 0.04786580908531649
  - 0.0856875888284654
  - 0.04238480149837445
  - 0.07356971257004286
  - 0.03935041778609771
  train_ndgc:
  - 0.9588581082356636
  - 0.9485655037973535
  - 0.9440226276675387
  - 0.9436936793736334
  - 0.9568539390518159
  train_ndgc_oob:
  - 0.9004742943025327
  - 0.907921257371737
  - 0.8970180744351997
  - 0.9068313434442528
  - 0.9121640757549679
  train_neg_coverage_error:
  - -4.335483870967742
  - -4.281045751633987
  - -4.335483870967742
  - -4.343949044585988
  - -4.282051282051282
  train_neg_coverage_error_oob:
  - -4.670967741935484
  - -4.673202614379085
  - -4.651612903225806
  - -4.656050955414012
  - -4.698717948717949
  train_neg_hamming_loss_macro:
  - -0.40276497695852537
  - -0.38281979458450044
  - -0.4046082949308755
  - -0.38671519563239304
  - -0.3965201465201465
  train_neg_hamming_loss_macro_oob:
  - -0.4774193548387097
  - -0.4593837535014006
  - -0.4764976958525346
  - -0.45950864422202004
  - -0.4816849816849817
  train_neg_hamming_loss_micro:
  - -0.40276497695852537
  - -0.3828197945845005
  - -0.4046082949308756
  - -0.3867151956323931
  - -0.3965201465201465
  train_neg_hamming_loss_micro_oob:
  - -0.4774193548387097
  - -0.45938375350140054
  - -0.47649769585253454
  - -0.45950864422202004
  - -0.4816849816849817
  train_neg_hamming_loss_samples:
  - -0.40276497695852526
  - -0.3828197945845004
  - -0.4046082949308755
  - -0.38671519563239304
  - -0.3965201465201465
  train_neg_hamming_loss_samples_oob:
  - -0.4774193548387097
  - -0.4593837535014005
  - -0.4764976958525346
  - -0.45950864422202
  - -0.48168498168498164
  train_neg_hamming_loss_weighted:
  - -0.44658551430310406
  - -0.4397867885018085
  - -0.45855513307984797
  - -0.4306453551255858
  - -0.4404123810903472
  train_neg_hamming_loss_weighted_oob:
  - -0.5655264759586124
  - -0.5572307887556318
  - -0.5717404636330186
  - -0.5454272323038096
  - -0.5720218262591145
  train_neg_label_ranking_loss:
  - -0.11107526881720431
  - -0.11764705882352941
  - -0.12150537634408601
  - -0.12770700636942675
  - -0.11014957264957263
  train_neg_label_ranking_loss_oob:
  - -0.19559139784946236
  - -0.19324618736383442
  - -0.19763440860215054
  - -0.18949044585987262
  - -0.18547008547008548
  train_precision_macro:
  - 0.5972350230414748
  - 0.6171802054154994
  - 0.5953917050691244
  - 0.613284804367607
  - 0.6034798534798533
  train_precision_macro_oob:
  - 0.5225806451612903
  - 0.5406162464985994
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_precision_micro:
  - 0.5972350230414747
  - 0.6171802054154996
  - 0.5953917050691244
  - 0.6132848043676069
  - 0.6034798534798534
  train_precision_micro_oob:
  - 0.5225806451612903
  - 0.5406162464985994
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_precision_samples:
  - 0.5972350230414747
  - 0.6171802054154994
  - 0.5953917050691244
  - 0.6132848043676069
  - 0.6034798534798534
  train_precision_samples_oob:
  - 0.5225806451612903
  - 0.5406162464985995
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_precision_weighted:
  - 0.5534144856968959
  - 0.5602132114981915
  - 0.5414448669201521
  - 0.5693546448744141
  - 0.5595876189096528
  train_precision_weighted_oob:
  - 0.43447352404138767
  - 0.44276921124436824
  - 0.42825953636698144
  - 0.4545727676961903
  - 0.42797817374088565
  train_recall_macro:
  - 0.5972350230414748
  - 0.6171802054154994
  - 0.5953917050691244
  - 0.613284804367607
  - 0.6034798534798533
  train_recall_macro_oob:
  - 0.5225806451612903
  - 0.5406162464985994
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_recall_micro:
  - 0.5972350230414747
  - 0.6171802054154996
  - 0.5953917050691244
  - 0.6132848043676069
  - 0.6034798534798534
  train_recall_micro_oob:
  - 0.5225806451612903
  - 0.5406162464985994
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_recall_samples:
  - 0.5972350230414747
  - 0.6171802054154994
  - 0.5953917050691244
  - 0.6132848043676069
  - 0.6034798534798534
  train_recall_samples_oob:
  - 0.5225806451612903
  - 0.5406162464985995
  - 0.5235023041474655
  - 0.54049135577798
  - 0.5183150183150184
  train_recall_weighted:
  - 0.5534144856968959
  - 0.5602132114981915
  - 0.5414448669201521
  - 0.5693546448744141
  - 0.5595876189096528
  train_recall_weighted_oob:
  - 0.43447352404138767
  - 0.44276921124436824
  - 0.42825953636698144
  - 0.4545727676961903
  - 0.42797817374088565
  train_roc_auc_macro:
  - 0.8428247239444382
  - 0.8280382980446758
  - 0.848593266535044
  - 0.8204261888674865
  - 0.8646549636284296
  train_roc_auc_macro_oob:
  - 0.751840374160221
  - 0.7216806760426798
  - 0.7328394244947304
  - 0.727845008621961
  - 0.7659913729559756
  train_roc_auc_micro:
  - 0.8936834948155702
  - 0.8867989103862541
  - 0.8912540726582641
  - 0.8798073415790695
  - 0.8977008368832896
  train_roc_auc_micro_oob:
  - 0.8147101818799931
  - 0.8224313752881189
  - 0.8155655468415217
  - 0.8077328646748683
  - 0.8214749690322971
  train_roc_auc_samples:
  - .nan
  - 0.8823529411764706
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - 0.8067538126361656
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8261563039089052
  - 0.8200940251245589
  - 0.8395942231168448
  - 0.8037958894161665
  - 0.8597842965586517
  train_roc_auc_weighted_oob:
  - 0.728056832375383
  - 0.7278606489756073
  - 0.7323237914594702
  - 0.7118093702454664
  - 0.765421398695524
start: 2023-12-21 15:18:01.401823
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
