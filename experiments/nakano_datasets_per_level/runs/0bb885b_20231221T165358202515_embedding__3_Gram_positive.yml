active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmJmZmZnJv4BmZmZmZgZAgJmZmZmZAcAAmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:54:16.131960
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__3
  params: {}
hash: 0bb885bd3c8eeef3b7d55ad00d97b2b00c1a74fc658ea87db2b8a6dea8f700ee
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0bb885b_20231221T165358202515_embedding__3_Gram_positive.yml
results:
  fit_time:
  - 6.943335056304932
  - 6.61304235458374
  - 6.868544101715088
  - 6.53016209602356
  - 7.116148948669434
  score_time:
  - 2.396289587020874
  - 2.3337976932525635
  - 2.446211099624634
  - 2.386873722076416
  - 2.4183132648468018
  test_average_precision_macro:
  - 0.8748711016563576
  - 0.9887161607427533
  - 0.8320942415309884
  - 0.815708372801571
  - 0.9331515098990127
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.980471920604807
  - 0.9834509646625799
  - 0.9800514914722155
  - 0.9509147153622831
  - 0.9859479702555661
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.967147435897436
  - 0.9719551282051283
  - 0.9752475247524752
  - 0.9261006289308177
  - 0.9695512820512822
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9744981962953283
  - 0.9881194699991815
  - 0.9684725241145539
  - 0.9385082134205717
  - 0.9818179610281538
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.78125
  - 0.7836538461538461
  - 0.797029702970297
  - 0.8136792452830188
  - 0.8125
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.78125
  - 0.7836538461538461
  - 0.7970297029702971
  - 0.8136792452830188
  - 0.8125
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.78125
  - 0.7836538461538461
  - 0.7970297029702971
  - 0.8136792452830188
  - 0.8125
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7184981684981685
  - 0.7183150183150184
  - 0.7333461501489955
  - 0.7640619437522249
  - 0.7669193786982249
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6571274834777108
  - 0.6607980926768182
  - 0.678285210834928
  - 0.6967391374777994
  - 0.6943185132161509
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6410256410256411
  - 0.6442687747035574
  - 0.6625514403292181
  - 0.6858846918489065
  - 0.6842105263157895
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6512820512820512
  - 0.655128205128205
  - 0.6778877887788777
  - 0.7018867924528299
  - 0.7
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5669706388422887
  - 0.5650302165925096
  - 0.5842581609212012
  - 0.621550873414367
  - 0.624420053553912
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9671474358974359
  - 0.9719551282051282
  - 0.9752475247524752
  - 0.9261006289308177
  - 0.969551282051282
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.21376455778381603
  - 0.23168365246552475
  - 0.2949207670795715
  - 0.3253082943139302
  - 0.302728673332484
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.32117115702711535
  - 0.33285799143969097
  - 0.4002901429398644
  - 0.451697051905646
  - 0.4472135954999579
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1346153846153846
  - 0.14423076923076922
  - 0.2079207920792079
  - 0.25471698113207547
  - 0.25
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.282373005725849
  - 0.30524701088859885
  - 0.37345744791732083
  - 0.42099616706124726
  - 0.4058699565411738
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.975523034349608
  - 0.9790717867191131
  - 0.9821849617240179
  - 0.9447823739393918
  - 0.9771462752239395
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0961538461538463
  - -1.0865384615384615
  - -1.099009900990099
  - -1.2075471698113207
  - -1.0961538461538463
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21874999999999997
  - -0.21634615384615383
  - -0.20297029702970298
  - -0.18632075471698112
  - -0.18749999999999997
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21875
  - -0.21634615384615385
  - -0.20297029702970298
  - -0.18632075471698112
  - -0.1875
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21875
  - -0.21634615384615385
  - -0.20297029702970298
  - -0.18632075471698112
  - -0.1875
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2815018315018315
  - -0.2816849816849817
  - -0.26665384985100454
  - -0.235938056247775
  - -0.23308062130177512
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.028846153846153848
  - -0.02564102564102564
  - -0.024752475247524754
  - -0.06918238993710692
  - -0.03205128205128205
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.78125
  - 0.7836538461538461
  - 0.797029702970297
  - 0.8136792452830188
  - 0.8125
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.78125
  - 0.7836538461538461
  - 0.7970297029702971
  - 0.8136792452830188
  - 0.8125
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.78125
  - 0.7836538461538461
  - 0.7970297029702971
  - 0.8136792452830188
  - 0.8125
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7184981684981685
  - 0.7183150183150184
  - 0.7333461501489955
  - 0.7640619437522249
  - 0.7669193786982249
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.78125
  - 0.7836538461538461
  - 0.797029702970297
  - 0.8136792452830188
  - 0.8125
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.78125
  - 0.7836538461538461
  - 0.7970297029702971
  - 0.8136792452830188
  - 0.8125
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.78125
  - 0.7836538461538461
  - 0.7970297029702971
  - 0.8136792452830188
  - 0.8125
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7184981684981685
  - 0.7183150183150184
  - 0.7333461501489955
  - 0.7640619437522249
  - 0.7669193786982249
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9845182787350565
  - 0.9956720990187401
  - 0.971655155964825
  - 0.9759557629455016
  - 0.9946481987875937
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9890981472975042
  - 0.9935385086510489
  - 0.9848079218140179
  - 0.9803014121276847
  - 0.9940828402366865
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9711538461538461
  - 0.9743589743589743
  - 0.9752475247524752
  - 0.9308176100628931
  - 0.9679487179487178
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9946719650927224
  - 0.9951661936633619
  - 0.9864870219932634
  - 0.9786882808925187
  - 0.9967541459946523
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9720091770649388
  - 0.9082237376133893
  - 0.950764981591224
  - 0.9594762916788184
  - 0.9177933885417302
  train_average_precision_macro_oob:
  - 0.8668685695591838
  - 0.8398898568261405
  - 0.8591149962031005
  - 0.8418491206015114
  - 0.8476183681799679
  train_average_precision_micro:
  - 0.9872464903907106
  - 0.9819658882943056
  - 0.9857127625996501
  - 0.9892921372167875
  - 0.9844920263145619
  train_average_precision_micro_oob:
  - 0.9698045756493897
  - 0.9658485164361233
  - 0.9714645847420241
  - 0.9723701626028814
  - 0.9665340790728244
  train_average_precision_samples:
  - 0.9724899598393574
  - 0.9714859437751003
  - 0.9677033492822966
  - 0.9715496368038741
  - 0.9714859437751003
  train_average_precision_samples_oob:
  - 0.9604417670682732
  - 0.9590361445783132
  - 0.9603269537480065
  - 0.9634786117836965
  - 0.9598393574297189
  train_average_precision_weighted:
  - 0.9872276828425953
  - 0.9737628022374512
  - 0.980989979529068
  - 0.9877707598539204
  - 0.9799233053230095
  train_average_precision_weighted_oob:
  - 0.9641959762792623
  - 0.953192058335242
  - 0.9581853156712016
  - 0.9634108222474231
  - 0.9585407024102665
  train_f1_macro:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866028
  - 0.8135593220338984
  - 0.8132530120481927
  train_f1_macro_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813398
  - 0.7917675544794189
  - 0.7843373493975904
  train_f1_micro:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866029
  - 0.8135593220338984
  - 0.8132530120481928
  train_f1_micro_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813397
  - 0.7917675544794189
  - 0.7843373493975904
  train_f1_samples:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866029
  - 0.8135593220338984
  - 0.8132530120481928
  train_f1_samples_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813397
  - 0.7917675544794189
  - 0.7843373493975904
  train_f1_weighted:
  - 0.7616763705539863
  - 0.7622470744220903
  - 0.7624287992709045
  - 0.7612370152304307
  - 0.7623141731604222
  train_f1_weighted_oob:
  - 0.7390038623393094
  - 0.7371649276531964
  - 0.7361187058555481
  - 0.7313393836988521
  - 0.7214940909221612
  train_jaccard_macro:
  - 0.6937838047434025
  - 0.6925555148573811
  - 0.6967167187878655
  - 0.6974423950359758
  - 0.6965630958386128
  train_jaccard_macro_oob:
  - 0.6752808303112359
  - 0.6718252686253213
  - 0.67168405354221
  - 0.6701710845534192
  - 0.6608324160380195
  train_jaccard_micro:
  - 0.6827166751140396
  - 0.6818642350557245
  - 0.6854838709677419
  - 0.6857142857142857
  - 0.6852791878172588
  train_jaccard_micro_oob:
  - 0.6616616616616616
  - 0.6583416583416584
  - 0.6579077838373822
  - 0.655310621242485
  - 0.645193260654113
  train_jaccard_samples:
  - 0.6992771084337348
  - 0.698313253012048
  - 0.7020733652312597
  - 0.7029862792574655
  - 0.7024899598393574
  train_jaccard_samples_oob:
  - 0.6755020080321283
  - 0.671325301204819
  - 0.6704944178628387
  - 0.6681194511702985
  - 0.6562248995983934
  train_jaccard_weighted:
  - 0.6176587232550798
  - 0.6182940277391696
  - 0.6195031217417778
  - 0.6179635609668769
  - 0.6187944750144168
  train_jaccard_weighted_oob:
  - 0.589813487279597
  - 0.5875407188182747
  - 0.5865866627801302
  - 0.5809729828097018
  - 0.5689071847874322
  train_label_ranking_average_precision_score:
  - 0.9724899598393574
  - 0.9714859437751004
  - 0.9677033492822966
  - 0.971549636803874
  - 0.9714859437751004
  train_label_ranking_average_precision_score_oob:
  - 0.9604417670682729
  - 0.9590361445783132
  - 0.9603269537480063
  - 0.9634786117836963
  - 0.9598393574297189
  train_matthews_corrcoef_macro:
  - 0.3080805583896268
  - 0.306069432005622
  - 0.32649087289386647
  - 0.3307718738028502
  - 0.32401721395255334
  train_matthews_corrcoef_macro_oob:
  - 0.2730520234538778
  - 0.26474425586531347
  - 0.263752257058434
  - 0.26627040730141427
  - 0.23858966129834855
  train_matthews_corrcoef_micro:
  - 0.4479217073389896
  - 0.44564037432745096
  - 0.453702343599308
  - 0.4573995544734454
  - 0.45623251056313885
  train_matthews_corrcoef_micro_oob:
  - 0.3865351589355396
  - 0.37757381195082157
  - 0.37415856637745304
  - 0.37002904629615374
  - 0.3361395117383925
  train_matthews_corrcoef_samples:
  - 0.25301204819277107
  - 0.25060240963855424
  - 0.2583732057416268
  - 0.2639225181598063
  - 0.26265060240963856
  train_matthews_corrcoef_samples_oob:
  - 0.19437751004016066
  - 0.18313253012048192
  - 0.17942583732057416
  - 0.17675544794188863
  - 0.14698795180722893
  train_matthews_corrcoef_weighted:
  - 0.41119255463474363
  - 0.4086039345852626
  - 0.4229788908821649
  - 0.42658881793430176
  - 0.4238212748651159
  train_matthews_corrcoef_weighted_oob:
  - 0.3577403477271261
  - 0.3477894249816691
  - 0.34498090853562074
  - 0.34217365014501266
  - 0.3106547864560634
  train_ndgc:
  - 0.9797588486077643
  - 0.9787816136533667
  - 0.9760285841808036
  - 0.9789041455747206
  - 0.9789496892691604
  train_ndgc_oob:
  - 0.9705073081770221
  - 0.9696080329397379
  - 0.9705083355329959
  - 0.9728862187507521
  - 0.9701632699579918
  train_neg_coverage_error:
  - -1.0674698795180724
  - -1.0795180722891566
  - -1.0813397129186604
  - -1.0750605326876512
  - -1.0843373493975903
  train_neg_coverage_error_oob:
  - -1.1204819277108433
  - -1.1204819277108433
  - -1.1028708133971292
  - -1.1138014527845037
  - -1.1253012048192772
  train_neg_hamming_loss_macro:
  - -0.1885542168674699
  - -0.1891566265060241
  - -0.18660287081339716
  - -0.1864406779661017
  - -0.18674698795180722
  train_neg_hamming_loss_macro_oob:
  - -0.2036144578313253
  - -0.20602409638554217
  - -0.2063397129186603
  - -0.20823244552058112
  - -0.21566265060240963
  train_neg_hamming_loss_micro:
  - -0.18855421686746987
  - -0.1891566265060241
  - -0.18660287081339713
  - -0.1864406779661017
  - -0.18674698795180722
  train_neg_hamming_loss_micro_oob:
  - -0.2036144578313253
  - -0.20602409638554217
  - -0.2063397129186603
  - -0.20823244552058112
  - -0.21566265060240963
  train_neg_hamming_loss_samples:
  - -0.18855421686746987
  - -0.1891566265060241
  - -0.18660287081339713
  - -0.1864406779661017
  - -0.18674698795180722
  train_neg_hamming_loss_samples_oob:
  - -0.2036144578313253
  - -0.20602409638554217
  - -0.2063397129186603
  - -0.20823244552058112
  - -0.21566265060240963
  train_neg_hamming_loss_weighted:
  - -0.2383236294460137
  - -0.23775292557790972
  - -0.23757120072909546
  - -0.2387629847695693
  - -0.23768582683957792
  train_neg_hamming_loss_weighted_oob:
  - -0.26099613766069063
  - -0.2628350723468035
  - -0.26388129414445205
  - -0.26866061630114796
  - -0.2785059090778388
  train_neg_label_ranking_loss:
  - -0.019879518072289156
  - -0.024096385542168676
  - -0.025518341307814992
  - -0.021791767554479417
  - -0.02449799196787148
  train_neg_label_ranking_loss_oob:
  - -0.03795180722891566
  - -0.03734939759036145
  - -0.03269537480063796
  - -0.03430185633575464
  - -0.038152610441767064
  train_precision_macro:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866028
  - 0.8135593220338984
  - 0.8132530120481927
  train_precision_macro_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813398
  - 0.7917675544794189
  - 0.7843373493975904
  train_precision_micro:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866029
  - 0.8135593220338984
  - 0.8132530120481928
  train_precision_micro_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813397
  - 0.7917675544794189
  - 0.7843373493975904
  train_precision_samples:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866029
  - 0.8135593220338984
  - 0.8132530120481928
  train_precision_samples_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813397
  - 0.7917675544794189
  - 0.7843373493975904
  train_precision_weighted:
  - 0.7616763705539863
  - 0.7622470744220903
  - 0.7624287992709045
  - 0.7612370152304307
  - 0.7623141731604222
  train_precision_weighted_oob:
  - 0.7390038623393094
  - 0.7371649276531964
  - 0.7361187058555481
  - 0.7313393836988521
  - 0.7214940909221612
  train_recall_macro:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866028
  - 0.8135593220338984
  - 0.8132530120481927
  train_recall_macro_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813398
  - 0.7917675544794189
  - 0.7843373493975904
  train_recall_micro:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866029
  - 0.8135593220338984
  - 0.8132530120481928
  train_recall_micro_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813397
  - 0.7917675544794189
  - 0.7843373493975904
  train_recall_samples:
  - 0.8114457831325301
  - 0.810843373493976
  - 0.8133971291866029
  - 0.8135593220338984
  - 0.8132530120481928
  train_recall_samples_oob:
  - 0.7963855421686747
  - 0.7939759036144578
  - 0.7936602870813397
  - 0.7917675544794189
  - 0.7843373493975904
  train_recall_weighted:
  - 0.7616763705539863
  - 0.7622470744220903
  - 0.7624287992709045
  - 0.7612370152304307
  - 0.7623141731604222
  train_recall_weighted_oob:
  - 0.7390038623393094
  - 0.7371649276531964
  - 0.7361187058555481
  - 0.7313393836988521
  - 0.7214940909221612
  train_roc_auc_macro:
  - 0.995657833302513
  - 0.9894607279064415
  - 0.9921671502935312
  - 0.9961573344376915
  - 0.99102623926136
  train_roc_auc_macro_oob:
  - 0.9805694833795198
  - 0.9813126005250338
  - 0.9827669327121218
  - 0.9796979580216251
  - 0.9832118852958364
  train_roc_auc_micro:
  - 0.9955061677029641
  - 0.9922046552481334
  - 0.9937053095998782
  - 0.9962077301721376
  - 0.9929054827214177
  train_roc_auc_micro_oob:
  - 0.9847425436670287
  - 0.9848715992880753
  - 0.9878194888178915
  - 0.9855823842949931
  - 0.9850051636700713
  train_roc_auc_samples:
  - 0.9801204819277108
  - 0.9759036144578314
  - 0.974481658692185
  - 0.9782082324455206
  - 0.9755020080321286
  train_roc_auc_samples_oob:
  - 0.9620481927710843
  - 0.9626506024096385
  - 0.9673046251993621
  - 0.9656981436642453
  - 0.9618473895582328
  train_roc_auc_weighted:
  - 0.9957251404481559
  - 0.991988625997784
  - 0.9929732587111968
  - 0.9964314207756335
  - 0.9943284124907878
  train_roc_auc_weighted_oob:
  - 0.9880417599384798
  - 0.9860022511251199
  - 0.9880604694499284
  - 0.989725718338249
  - 0.987623387459325
start: 2023-12-21 16:53:58.202515
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
