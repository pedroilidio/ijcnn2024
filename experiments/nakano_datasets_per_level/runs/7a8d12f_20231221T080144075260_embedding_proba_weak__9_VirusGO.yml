active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AmpmZmZnZP8DMzMzMzAzAgGZmZmZm9j9AMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:21:40.194161
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__9
  params: {}
hash: 7a8d12f77b26f4b8fa6b29db1d3707013b5e570cdc95084b9a15334443703248
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7a8d12f_20231221T080144075260_embedding_proba_weak__9_VirusGO.yml
results:
  fit_time:
  - 1130.0131549835205
  - 1140.3297255039215
  - 1170.6365809440613
  - 1173.537825345993
  - 1181.243499994278
  score_time:
  - 5.190873146057129
  - 5.659902095794678
  - 5.499218225479126
  - 5.298581123352051
  - 5.5517778396606445
  test_average_precision_macro:
  - 0.9192394459599381
  - 0.8408296455970934
  - 0.9885985243770712
  - 0.95652680401398
  - 0.9742758044431379
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9006404076130134
  - 0.8741649277721277
  - 0.984453365933005
  - 0.930907453016899
  - 0.9322023173577942
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9155038759689923
  - 0.926829268292683
  - 0.9592592592592593
  - 0.9555555555555555
  - 0.9013157894736842
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9329645191409898
  - 0.8832413541792526
  - 0.9856004100986799
  - 0.9554218230456621
  - 0.9728040488922842
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9496124031007751
  - 0.9308943089430893
  - 0.9592592592592593
  - 0.9291666666666667
  - 0.9122807017543858
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9496124031007752
  - 0.9308943089430894
  - 0.9592592592592593
  - 0.9291666666666667
  - 0.9122807017543859
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9496124031007752
  - 0.9308943089430896
  - 0.9592592592592594
  - 0.9291666666666668
  - 0.9122807017543861
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9246511627906977
  - 0.9000478240076519
  - 0.9529411764705881
  - 0.916
  - 0.9163157894736842
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9071634714491857
  - 0.8738012072188007
  - 0.9227181621954981
  - 0.87027528887994
  - 0.8420118724996773
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9040590405904059
  - 0.870722433460076
  - 0.9217081850533808
  - 0.867704280155642
  - 0.8387096774193549
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9197120708748616
  - 0.8902439024390244
  - 0.934920634920635
  - 0.8869047619047621
  - 0.8652882205513784
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8633205524634096
  - 0.820050862518001
  - 0.9108555077905353
  - 0.8474848149266754
  - 0.8483770809136664
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9155038759689921
  - 0.926829268292683
  - 0.9592592592592593
  - 0.9555555555555555
  - 0.9013157894736842
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.8322512928214058
  - 0.749108971190101
  - 0.6944116568508822
  - 0.5116877881699633
  - 0.4847012699756792
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8429008168022559
  - 0.7817770596089132
  - 0.8641776837281258
  - 0.7752360907715984
  - 0.7372598063022008
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8731027090756411
  - 0.7671822774948188
  - 0.8222222222222222
  - 0.7257088106396037
  - 0.7170013130039878
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8169623317223228
  - 0.740048099423142
  - 0.8317011023449801
  - 0.698943127898757
  - 0.6959449645041486
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9379137816434548
  - 0.9468204430921394
  - 0.9699713847639434
  - 0.9695258033860764
  - 0.9280998937005986
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4186046511627908
  - -1.5121951219512195
  - -1.2222222222222223
  - -1.375
  - -1.5526315789473684
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.050387596899224806
  - -0.06910569105691057
  - -0.040740740740740744
  - -0.07083333333333335
  - -0.08771929824561403
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.050387596899224806
  - -0.06910569105691057
  - -0.040740740740740744
  - -0.07083333333333333
  - -0.08771929824561403
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.050387596899224806
  - -0.06910569105691056
  - -0.040740740740740744
  - -0.07083333333333333
  - -0.08771929824561403
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07534883720930231
  - -0.09995217599234817
  - -0.047058823529411764
  - -0.084
  - -0.08368421052631579
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04941860465116279
  - -0.051219512195121955
  - -0.02
  - -0.024930555555555556
  - -0.04671052631578948
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9496124031007751
  - 0.9308943089430893
  - 0.9592592592592593
  - 0.9291666666666667
  - 0.9122807017543858
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9496124031007752
  - 0.9308943089430894
  - 0.9592592592592593
  - 0.9291666666666667
  - 0.9122807017543859
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9496124031007752
  - 0.9308943089430896
  - 0.9592592592592594
  - 0.9291666666666668
  - 0.9122807017543861
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9246511627906977
  - 0.9000478240076519
  - 0.9529411764705881
  - 0.916
  - 0.9163157894736842
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9496124031007751
  - 0.9308943089430893
  - 0.9592592592592593
  - 0.9291666666666667
  - 0.9122807017543858
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9496124031007752
  - 0.9308943089430894
  - 0.9592592592592593
  - 0.9291666666666667
  - 0.9122807017543859
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9496124031007752
  - 0.9308943089430896
  - 0.9592592592592594
  - 0.9291666666666668
  - 0.9122807017543861
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9246511627906977
  - 0.9000478240076519
  - 0.9529411764705881
  - 0.916
  - 0.9163157894736842
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9772938096467508
  - 0.9210246051678276
  - 0.9946189001916556
  - 0.9830089040447096
  - 0.9890216931102841
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9710576923076923
  - 0.946606334841629
  - 0.9961500581967947
  - 0.9783157894736842
  - 0.9787640449438202
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9505813953488372
  - 0.948780487804878
  - 0.98
  - 0.9750694444444445
  - 0.9532894736842104
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.968162855162855
  - 0.9358290515579519
  - 0.9914492112634528
  - 0.9725603864734299
  - 0.9870765256249128
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.975609465659793
  - 0.9790869629011713
  - 0.9652866221270341
  - 0.9646842115273452
  - 0.9630868682964894
  train_average_precision_macro_oob:
  - 0.9238839686324645
  - 0.9507997638094955
  - 0.9277699257113757
  - 0.9430209663568503
  - 0.9227604798165832
  train_average_precision_micro:
  - 0.9477357655416023
  - 0.9589515365832437
  - 0.9373647619236292
  - 0.958023141656939
  - 0.940429408719664
  train_average_precision_micro_oob:
  - 0.9175846773092099
  - 0.9383968880608279
  - 0.9160499095187477
  - 0.9342831587672842
  - 0.9137221509176888
  train_average_precision_samples:
  - 0.9700203252032519
  - 0.9698795180722891
  - 0.9650205761316871
  - 0.9640718562874252
  - 0.9428007889546351
  train_average_precision_samples_oob:
  - 0.9486788617886178
  - 0.9550200803212852
  - 0.9484567901234566
  - 0.9450099800399201
  - 0.9131163708086785
  train_average_precision_weighted:
  - 0.9697265812740635
  - 0.9744846416325426
  - 0.9613501539181094
  - 0.9668745984598484
  - 0.9621711371473218
  train_average_precision_weighted_oob:
  - 0.9370333385299352
  - 0.9542325676246709
  - 0.9366731090038172
  - 0.9508478147467454
  - 0.936705475034429
  train_f1_macro:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752494
  - 0.9467455621301775
  train_f1_macro_oob:
  - 0.9410569105691057
  - 0.9497991967871487
  - 0.9351851851851851
  - 0.940119760479042
  - 0.935897435897436
  train_f1_micro:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752495
  - 0.9467455621301775
  train_f1_micro_oob:
  - 0.9410569105691057
  - 0.9497991967871486
  - 0.9351851851851852
  - 0.9401197604790419
  - 0.9358974358974359
  train_f1_samples:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752496
  - 0.9467455621301775
  train_f1_samples_oob:
  - 0.9410569105691056
  - 0.9497991967871487
  - 0.9351851851851852
  - 0.9401197604790419
  - 0.935897435897436
  train_f1_weighted:
  - 0.9530608548659745
  - 0.9532757897260684
  - 0.9373502856089921
  - 0.9455445544554455
  - 0.9394223446013241
  train_f1_weighted_oob:
  - 0.9403827577879739
  - 0.9406581550080921
  - 0.9263558749462565
  - 0.9272247584039841
  - 0.9253031812056944
  train_jaccard_macro:
  - 0.9246002156777492
  - 0.934807474244301
  - 0.9010519162599945
  - 0.9107549765218602
  - 0.899116524857298
  train_jaccard_macro_oob:
  - 0.8895466900870878
  - 0.9048472112238185
  - 0.8794023004927906
  - 0.8876453969515313
  - 0.8801321371403338
  train_jaccard_micro:
  - 0.9237536656891495
  - 0.9339805825242719
  - 0.9002932551319648
  - 0.9103908484270734
  - 0.898876404494382
  train_jaccard_micro_oob:
  - 0.8886756238003839
  - 0.904397705544933
  - 0.8782608695652174
  - 0.8870056497175142
  - 0.8795180722891566
  train_jaccard_samples:
  - 0.9359756097560976
  - 0.9436316695352841
  - 0.9143151087595534
  - 0.9237239806102081
  - 0.9125105663567202
  train_jaccard_samples_oob:
  - 0.9037456445993032
  - 0.9183878370625359
  - 0.8940329218106995
  - 0.9047619047619048
  - 0.8974358974358976
  train_jaccard_weighted:
  - 0.910744646345419
  - 0.9113131426488349
  - 0.8828802347290081
  - 0.8970615533652657
  - 0.8859160151429638
  train_jaccard_weighted_oob:
  - 0.8882185121836064
  - 0.8884493141964853
  - 0.8637780472725679
  - 0.8648281783838436
  - 0.8612761135598337
  train_label_ranking_average_precision_score:
  - 0.9700203252032519
  - 0.9698795180722891
  - 0.9650205761316871
  - 0.964071856287425
  - 0.942800788954635
  train_label_ranking_average_precision_score_oob:
  - 0.9486788617886178
  - 0.9550200803212849
  - 0.9484567901234566
  - 0.9450099800399201
  - 0.9131163708086785
  train_matthews_corrcoef_macro:
  - 0.8303521066594987
  - 0.8740907579622182
  - 0.6525120623163302
  - 0.6712904532780595
  - 0.6532516499807076
  train_matthews_corrcoef_macro_oob:
  - 0.6269394330401131
  - 0.6691881187551655
  - 0.5642450219175402
  - 0.6234643684782655
  - 0.6099373081290824
  train_matthews_corrcoef_micro:
  - 0.876313580974135
  - 0.8921039443655352
  - 0.8358641862990097
  - 0.8503509180823929
  - 0.83033478607032
  train_matthews_corrcoef_micro_oob:
  - 0.8125239729966495
  - 0.8394764561446849
  - 0.7947175405924811
  - 0.806776692376349
  - 0.7936951115893136
  train_matthews_corrcoef_samples:
  - 0.881803686624052
  - 0.8980640166723257
  - 0.8265643889960496
  - 0.8400677027412738
  - 0.8312618529319215
  train_matthews_corrcoef_samples_oob:
  - 0.7688475631499425
  - 0.8206879492566636
  - 0.7557933330450166
  - 0.7772328734583241
  - 0.786114976434083
  train_matthews_corrcoef_weighted:
  - 0.8601294242154858
  - 0.8758149298665647
  - 0.8025156212531798
  - 0.8210905397050949
  - 0.805701379146737
  train_matthews_corrcoef_weighted_oob:
  - 0.7801679797146418
  - 0.8073425580066337
  - 0.7488056773162468
  - 0.7705539790576816
  - 0.763856416640719
  train_ndgc:
  - 0.9783498552250846
  - 0.9779290907478819
  - 0.9749230256147388
  - 0.9741058122302082
  - 0.9581561016684016
  train_ndgc_oob:
  - 0.9631091462624005
  - 0.9670973747526296
  - 0.9626871154962573
  - 0.9605507665677431
  - 0.9375819345707749
  train_neg_coverage_error:
  - -1.3048780487804879
  - -1.283132530120482
  - -1.3271604938271604
  - -1.3053892215568863
  - -1.331360946745562
  train_neg_coverage_error_oob:
  - -1.3902439024390243
  - -1.3373493975903614
  - -1.3950617283950617
  - -1.3832335329341316
  - -1.4437869822485208
  train_neg_hamming_loss_macro:
  - -0.039634146341463415
  - -0.03413654618473896
  - -0.052469135802469126
  - -0.046906187624750496
  - -0.05325443786982248
  train_neg_hamming_loss_macro_oob:
  - -0.05894308943089432
  - -0.0502008032128514
  - -0.06481481481481481
  - -0.059880239520958084
  - -0.0641025641025641
  train_neg_hamming_loss_micro:
  - -0.039634146341463415
  - -0.03413654618473896
  - -0.05246913580246913
  - -0.046906187624750496
  - -0.05325443786982249
  train_neg_hamming_loss_micro_oob:
  - -0.05894308943089431
  - -0.050200803212851405
  - -0.06481481481481481
  - -0.059880239520958084
  - -0.0641025641025641
  train_neg_hamming_loss_samples:
  - -0.03963414634146341
  - -0.03413654618473895
  - -0.05246913580246913
  - -0.04690618762475049
  - -0.05325443786982247
  train_neg_hamming_loss_samples_oob:
  - -0.05894308943089432
  - -0.0502008032128514
  - -0.06481481481481481
  - -0.059880239520958084
  - -0.0641025641025641
  train_neg_hamming_loss_weighted:
  - -0.04693914513402559
  - -0.04672421027393154
  - -0.06264971439100792
  - -0.054455445544554455
  - -0.06057765539867596
  train_neg_hamming_loss_weighted_oob:
  - -0.059617242212026085
  - -0.059341844991907935
  - -0.07364412505374363
  - -0.0727752415960159
  - -0.07469681879430548
  train_neg_label_ranking_loss:
  - -0.014024390243902438
  - -0.014006024096385543
  - -0.01589506172839506
  - -0.017814371257485032
  - -0.026923076923076928
  train_neg_label_ranking_loss_oob:
  - -0.030098238482384822
  - -0.024079651941097725
  - -0.029320987654320986
  - -0.03218562874251497
  - -0.045545693622616706
  train_precision_macro:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752494
  - 0.9467455621301775
  train_precision_macro_oob:
  - 0.9410569105691057
  - 0.9497991967871487
  - 0.9351851851851851
  - 0.940119760479042
  - 0.935897435897436
  train_precision_micro:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752495
  - 0.9467455621301775
  train_precision_micro_oob:
  - 0.9410569105691057
  - 0.9497991967871486
  - 0.9351851851851852
  - 0.9401197604790419
  - 0.9358974358974359
  train_precision_samples:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752496
  - 0.9467455621301775
  train_precision_samples_oob:
  - 0.9410569105691056
  - 0.9497991967871487
  - 0.9351851851851852
  - 0.9401197604790419
  - 0.935897435897436
  train_precision_weighted:
  - 0.9530608548659745
  - 0.9532757897260684
  - 0.9373502856089921
  - 0.9455445544554455
  - 0.9394223446013241
  train_precision_weighted_oob:
  - 0.9403827577879739
  - 0.9406581550080921
  - 0.9263558749462565
  - 0.9272247584039841
  - 0.9253031812056944
  train_recall_macro:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752494
  - 0.9467455621301775
  train_recall_macro_oob:
  - 0.9410569105691057
  - 0.9497991967871487
  - 0.9351851851851851
  - 0.940119760479042
  - 0.935897435897436
  train_recall_micro:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752495
  - 0.9467455621301775
  train_recall_micro_oob:
  - 0.9410569105691057
  - 0.9497991967871486
  - 0.9351851851851852
  - 0.9401197604790419
  - 0.9358974358974359
  train_recall_samples:
  - 0.9603658536585366
  - 0.9658634538152611
  - 0.9475308641975309
  - 0.9530938123752496
  - 0.9467455621301775
  train_recall_samples_oob:
  - 0.9410569105691056
  - 0.9497991967871487
  - 0.9351851851851852
  - 0.9401197604790419
  - 0.935897435897436
  train_recall_weighted:
  - 0.9530608548659745
  - 0.9532757897260684
  - 0.9373502856089921
  - 0.9455445544554455
  - 0.9394223446013241
  train_recall_weighted_oob:
  - 0.9403827577879739
  - 0.9406581550080921
  - 0.9263558749462565
  - 0.9272247584039841
  - 0.9253031812056944
  train_roc_auc_macro:
  - 0.9905660813674085
  - 0.9929390732023453
  - 0.9883103694831153
  - 0.9902730671486702
  - 0.9885349245947169
  train_roc_auc_macro_oob:
  - 0.9684064630569121
  - 0.9845446121486833
  - 0.9698098996338865
  - 0.9806358304050721
  - 0.9753076693001539
  train_roc_auc_micro:
  - 0.988297966625307
  - 0.9914922244125286
  - 0.9853746830052075
  - 0.9893347772277228
  - 0.9857337950543823
  train_roc_auc_micro_oob:
  - 0.9752348636398166
  - 0.9844050189305047
  - 0.9735563427996207
  - 0.9795668316831683
  - 0.9727174072087011
  train_roc_auc_samples:
  - 0.9859756097560974
  - 0.9859939759036145
  - 0.9841049382716051
  - 0.9821856287425151
  - 0.9730769230769232
  train_roc_auc_samples_oob:
  - 0.9699017615176152
  - 0.9759203480589024
  - 0.970679012345679
  - 0.967814371257485
  - 0.9544543063773833
  train_roc_auc_weighted:
  - 0.9856924201449956
  - 0.9878233122186039
  - 0.9819232510988394
  - 0.9865976156081994
  - 0.9839899293903228
  train_roc_auc_weighted_oob:
  - 0.9718688856590438
  - 0.979059753226548
  - 0.9649495092537211
  - 0.9767241960714521
  - 0.9717149462358986
start: 2023-12-21 08:01:44.075260
wrapper: null
