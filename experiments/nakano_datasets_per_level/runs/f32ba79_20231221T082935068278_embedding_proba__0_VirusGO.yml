active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0CAZmZmZmb2P8DMzMzMzATAgGZmZmZm9j/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:29:39.602648
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__0
  params: {}
hash: f32ba796fae0b23f336333775bd41eaed2236de1dac1131c2e8b5594b3662315
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f32ba79_20231221T082935068278_embedding_proba__0_VirusGO.yml
results:
  fit_time:
  - 1.346323013305664
  - 1.3439457416534424
  - 1.3402483463287354
  - 1.3234398365020752
  - 1.3418927192687988
  score_time:
  - 0.5397500991821289
  - 0.5349647998809814
  - 0.572073221206665
  - 0.5596377849578857
  - 0.5494756698608398
  test_average_precision_macro:
  - 0.8977684287996389
  - 0.9242546941076353
  - 0.9033634290514235
  - 0.9595886372054192
  - 0.9142940456793863
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6717105034679394
  - 0.7958361105747256
  - 0.6889130636186297
  - 0.7791097570090316
  - 0.7346420885413617
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8304843304843306
  - 0.7737499999999999
  - 0.756060606060606
  - 0.8154166666666665
  - 0.790530303030303
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8262789863589097
  - 0.9387871659930483
  - 0.8590205231072103
  - 0.9415290738673092
  - 0.8959319620294852
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7863247863247863
  - 0.7875000000000001
  - 0.8068181818181818
  - 0.7916666666666666
  - 0.8106060606060607
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7863247863247863
  - 0.7875
  - 0.8068181818181818
  - 0.7916666666666666
  - 0.8106060606060606
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7863247863247862
  - 0.7875000000000001
  - 0.806818181818182
  - 0.7916666666666667
  - 0.8106060606060609
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6656410256410257
  - 0.6749999999999999
  - 0.6947415329768271
  - 0.67
  - 0.6999999999999998
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6750470342135267
  - 0.6750451240932764
  - 0.7002813224094809
  - 0.6827880586654792
  - 0.7054930533233329
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.647887323943662
  - 0.6494845360824743
  - 0.6761904761904762
  - 0.6551724137931034
  - 0.6815286624203821
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6562881562881565
  - 0.656547619047619
  - 0.6801948051948054
  - 0.6607142857142858
  - 0.6850649350649353
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5207798798806949
  - 0.5291994160316404
  - 0.5514849192920985
  - 0.5226173184056996
  - 0.5549966784528019
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8304843304843306
  - 0.7737499999999999
  - 0.7560606060606059
  - 0.8154166666666665
  - 0.7905303030303028
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8779219128271967
  - 0.8317143149139483
  - 0.8185454973637288
  - 0.8638308663772563
  - 0.8464648282563146
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8461538461538463
  - -2.05
  - -2.0
  - -1.875
  - -1.8181818181818181
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2136752136752137
  - -0.21250000000000002
  - -0.1931818181818182
  - -0.20833333333333334
  - -0.18939393939393936
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21367521367521367
  - -0.2125
  - -0.19318181818181818
  - -0.20833333333333334
  - -0.1893939393939394
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21367521367521364
  - -0.2125
  - -0.19318181818181818
  - -0.20833333333333331
  - -0.18939393939393936
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3343589743589743
  - -0.3249999999999999
  - -0.3052584670231729
  - -0.33
  - -0.3
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.10698005698005698
  - -0.15437499999999998
  - -0.16477272727272727
  - -0.12437500000000001
  - -0.12897727272727272
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7863247863247863
  - 0.7875000000000001
  - 0.8068181818181818
  - 0.7916666666666666
  - 0.8106060606060607
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7863247863247863
  - 0.7875
  - 0.8068181818181818
  - 0.7916666666666666
  - 0.8106060606060606
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7863247863247862
  - 0.7875000000000001
  - 0.806818181818182
  - 0.7916666666666667
  - 0.8106060606060609
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6656410256410257
  - 0.6749999999999999
  - 0.6947415329768271
  - 0.67
  - 0.6999999999999998
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7863247863247863
  - 0.7875000000000001
  - 0.8068181818181818
  - 0.7916666666666666
  - 0.8106060606060607
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7863247863247863
  - 0.7875
  - 0.8068181818181818
  - 0.7916666666666666
  - 0.8106060606060606
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7863247863247862
  - 0.7875000000000001
  - 0.806818181818182
  - 0.7916666666666667
  - 0.8106060606060609
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6656410256410257
  - 0.6749999999999999
  - 0.6947415329768271
  - 0.67
  - 0.6999999999999998
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.958948700253048
  - 0.9802367504973004
  - 0.9203983017708507
  - 0.9828832718858295
  - 0.9665196972182266
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9018478260869565
  - 0.9049175225645814
  - 0.8782104391052196
  - 0.916
  - 0.9064485981308411
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8930199430199429
  - 0.8456250000000001
  - 0.8352272727272727
  - 0.875625
  - 0.8710227272727272
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9245465838509317
  - 0.9737496447854503
  - 0.8883414334394726
  - 0.9702766798418971
  - 0.9436861861861862
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9440195611473472
  - 0.9451753288980517
  - 0.9147763790715845
  - 0.9357132482394567
  - 0.942864179751409
  train_average_precision_macro_oob:
  - 0.8186940653201633
  - 0.8602585643495488
  - 0.7920912201064759
  - 0.8439566717685256
  - 0.8477359449888628
  train_average_precision_micro:
  - 0.7649645948286236
  - 0.770696409855581
  - 0.731677825791104
  - 0.7649329613144524
  - 0.7666212008788006
  train_average_precision_micro_oob:
  - 0.7196903213677897
  - 0.727730601875064
  - 0.6842965565597776
  - 0.7057932373689558
  - 0.7118364679682845
  train_average_precision_samples:
  - 0.8381944444444445
  - 0.7896540252827677
  - 0.8301124744376278
  - 0.8145708582834329
  - 0.8265848670756646
  train_average_precision_samples_oob:
  - 0.7940476190476189
  - 0.7673486360612108
  - 0.7898261758691205
  - 0.7525449101796406
  - 0.8071063394683025
  train_average_precision_weighted:
  - 0.9217128069146305
  - 0.9276972977103889
  - 0.8876752104118341
  - 0.9229379375148602
  - 0.923117885112889
  train_average_precision_weighted_oob:
  - 0.8487734111529577
  - 0.8655062239588961
  - 0.8098074564749853
  - 0.8462463545999119
  - 0.8406888950941753
  train_f1_macro:
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7944785276073619
  - 0.7984031936127743
  - 0.7934560327198364
  train_f1_macro_oob:
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7944785276073619
  - 0.7984031936127743
  - 0.7934560327198364
  train_f1_micro:
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7944785276073619
  - 0.7984031936127745
  - 0.7934560327198364
  train_f1_micro_oob:
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7944785276073619
  - 0.7984031936127745
  - 0.7934560327198364
  train_f1_samples:
  - 0.7996031746031745
  - 0.7994011976047902
  - 0.7944785276073618
  - 0.7984031936127743
  - 0.7934560327198363
  train_f1_samples_oob:
  - 0.7996031746031745
  - 0.7994011976047902
  - 0.7944785276073618
  - 0.7984031936127743
  - 0.7934560327198363
  train_f1_weighted:
  - 0.6858203677510608
  - 0.6838263770965531
  - 0.6786924274333852
  - 0.6850062251734155
  - 0.677276316588714
  train_f1_weighted_oob:
  - 0.6858203677510608
  - 0.6838263770965531
  - 0.6786924274333852
  - 0.6850062251734155
  - 0.677276316588714
  train_jaccard_macro:
  - 0.6912892752376143
  - 0.6913520230254836
  - 0.6849675625373393
  - 0.6895027549812784
  - 0.6835843032498379
  train_jaccard_macro_oob:
  - 0.6912892752376143
  - 0.6913520230254836
  - 0.6849675625373393
  - 0.6895027549812784
  - 0.6835843032498379
  train_jaccard_micro:
  - 0.6661157024793388
  - 0.6658354114713217
  - 0.6590330788804071
  - 0.6644518272425249
  - 0.6576271186440678
  train_jaccard_micro_oob:
  - 0.6661157024793388
  - 0.6658354114713217
  - 0.6590330788804071
  - 0.6644518272425249
  - 0.6576271186440678
  train_jaccard_samples:
  - 0.671201814058957
  - 0.6712289706301683
  - 0.6652059596844874
  - 0.6702309666381524
  - 0.6638913234005259
  train_jaccard_samples_oob:
  - 0.671201814058957
  - 0.6712289706301683
  - 0.6652059596844874
  - 0.6702309666381524
  - 0.6638913234005259
  train_jaccard_weighted:
  - 0.5404970819825979
  - 0.5386331986490818
  - 0.5328443972063788
  - 0.5401893044988074
  - 0.531953224859696
  train_jaccard_weighted_oob:
  - 0.5404970819825979
  - 0.5386331986490818
  - 0.5328443972063788
  - 0.5401893044988074
  - 0.531953224859696
  train_label_ranking_average_precision_score:
  - 0.8381944444444439
  - 0.7896540252827671
  - 0.8301124744376277
  - 0.8145708582834329
  - 0.8265848670756641
  train_label_ranking_average_precision_score_oob:
  - 0.7940476190476186
  - 0.7673486360612103
  - 0.7898261758691204
  - 0.7525449101796403
  - 0.8071063394683021
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8806637593673825
  - 0.8451521236205263
  - 0.8749923800983469
  - 0.8646597904013735
  - 0.8726400757968908
  train_ndgc_oob:
  - 0.847158245269377
  - 0.8278537833800684
  - 0.8444877837370495
  - 0.8166379809659895
  - 0.8581076294968875
  train_neg_coverage_error:
  - -1.7619047619047619
  - -1.8982035928143712
  - -1.8466257668711656
  - -1.8502994011976048
  - -1.7975460122699387
  train_neg_coverage_error_oob:
  - -1.8988095238095237
  - -1.9940119760479043
  - -1.9754601226993864
  - -2.0239520958083834
  - -1.8711656441717792
  train_neg_hamming_loss_macro:
  - -0.20039682539682543
  - -0.20059880239520958
  - -0.20552147239263807
  - -0.20159680638722555
  - -0.20654396728016364
  train_neg_hamming_loss_macro_oob:
  - -0.20039682539682543
  - -0.20059880239520958
  - -0.20552147239263807
  - -0.20159680638722555
  - -0.20654396728016364
  train_neg_hamming_loss_micro:
  - -0.2003968253968254
  - -0.20059880239520958
  - -0.20552147239263804
  - -0.20159680638722555
  - -0.2065439672801636
  train_neg_hamming_loss_micro_oob:
  - -0.2003968253968254
  - -0.20059880239520958
  - -0.20552147239263804
  - -0.20159680638722555
  - -0.2065439672801636
  train_neg_hamming_loss_samples:
  - -0.20039682539682538
  - -0.20059880239520958
  - -0.20552147239263804
  - -0.20159680638722557
  - -0.20654396728016364
  train_neg_hamming_loss_samples_oob:
  - -0.20039682539682538
  - -0.20059880239520958
  - -0.20552147239263804
  - -0.20159680638722557
  - -0.20654396728016364
  train_neg_hamming_loss_weighted:
  - -0.3141796322489392
  - -0.31617362290344686
  - -0.3213075725666148
  - -0.3149937748265844
  - -0.32272368341128593
  train_neg_hamming_loss_weighted_oob:
  - -0.3141796322489392
  - -0.31617362290344686
  - -0.3213075725666148
  - -0.3149937748265844
  - -0.32272368341128593
  train_neg_label_ranking_loss:
  - -0.10848214285714286
  - -0.1347139055222888
  - -0.11862644853442397
  - -0.12004324683965403
  - -0.1074301295160191
  train_neg_label_ranking_loss_oob:
  - -0.13854166666666665
  - -0.156187624750499
  - -0.14522835719154736
  - -0.160395874916833
  - -0.12329584185412405
  train_precision_macro:
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7944785276073619
  - 0.7984031936127743
  - 0.7934560327198364
  train_precision_macro_oob:
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7944785276073619
  - 0.7984031936127743
  - 0.7934560327198364
  train_precision_micro:
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7944785276073619
  - 0.7984031936127745
  - 0.7934560327198364
  train_precision_micro_oob:
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7944785276073619
  - 0.7984031936127745
  - 0.7934560327198364
  train_precision_samples:
  - 0.7996031746031745
  - 0.7994011976047902
  - 0.7944785276073618
  - 0.7984031936127743
  - 0.7934560327198363
  train_precision_samples_oob:
  - 0.7996031746031745
  - 0.7994011976047902
  - 0.7944785276073618
  - 0.7984031936127743
  - 0.7934560327198363
  train_precision_weighted:
  - 0.6858203677510608
  - 0.6838263770965531
  - 0.6786924274333852
  - 0.6850062251734155
  - 0.677276316588714
  train_precision_weighted_oob:
  - 0.6858203677510608
  - 0.6838263770965531
  - 0.6786924274333852
  - 0.6850062251734155
  - 0.677276316588714
  train_recall_macro:
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7944785276073619
  - 0.7984031936127743
  - 0.7934560327198364
  train_recall_macro_oob:
  - 0.7996031746031748
  - 0.7994011976047903
  - 0.7944785276073619
  - 0.7984031936127743
  - 0.7934560327198364
  train_recall_micro:
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7944785276073619
  - 0.7984031936127745
  - 0.7934560327198364
  train_recall_micro_oob:
  - 0.7996031746031746
  - 0.7994011976047904
  - 0.7944785276073619
  - 0.7984031936127745
  - 0.7934560327198364
  train_recall_samples:
  - 0.7996031746031745
  - 0.7994011976047902
  - 0.7944785276073618
  - 0.7984031936127743
  - 0.7934560327198363
  train_recall_samples_oob:
  - 0.7996031746031745
  - 0.7994011976047902
  - 0.7944785276073618
  - 0.7984031936127743
  - 0.7934560327198363
  train_recall_weighted:
  - 0.6858203677510608
  - 0.6838263770965531
  - 0.6786924274333852
  - 0.6850062251734155
  - 0.677276316588714
  train_recall_weighted_oob:
  - 0.6858203677510608
  - 0.6838263770965531
  - 0.6786924274333852
  - 0.6850062251734155
  - 0.677276316588714
  train_roc_auc_macro:
  - 0.9700460289091067
  - 0.9808070918874279
  - 0.9709957166788431
  - 0.9751902135891255
  - 0.9729979538531263
  train_roc_auc_macro_oob:
  - 0.9529848761392768
  - 0.9543450023833612
  - 0.9444159963962665
  - 0.9482746134560357
  - 0.9496296076143468
  train_roc_auc_micro:
  - 0.911290322580645
  - 0.9097955913317308
  - 0.9053701889522785
  - 0.9109003712871286
  - 0.9145018883331633
  train_roc_auc_micro_oob:
  - 0.8967766503697516
  - 0.894690095092577
  - 0.8879924700820223
  - 0.89365099009901
  - 0.9015961518832296
  train_roc_auc_samples:
  - 0.891517857142857
  - 0.8652860944777112
  - 0.881373551465576
  - 0.8799567531603458
  - 0.8925698704839808
  train_roc_auc_samples_oob:
  - 0.8614583333333333
  - 0.8438123752495008
  - 0.8547716428084526
  - 0.839604125083167
  - 0.8767041581458759
  train_roc_auc_weighted:
  - 0.9577732741079259
  - 0.9683536666479994
  - 0.9494911790533934
  - 0.9628754751707177
  - 0.9556132121059181
  train_roc_auc_weighted_oob:
  - 0.9362103850673732
  - 0.9368047956519537
  - 0.9172613573196999
  - 0.9291307475336288
  - 0.9225748601705835
start: 2023-12-21 08:29:35.068278
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
