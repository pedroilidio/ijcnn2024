active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8L8AAAAAAADwvwAAAAAAAPA/AAAAAAAAAAAAAAAAAADwPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            nJmZmZmZ6T+cmZmZmZnpPzIzMzMzM/O/nJmZmZmZ6T8yMzMzMzPzvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            yMzMzMzM/L/AmZmZmZnJPzgzMzMzM/M/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ZmZmZmZmEsBoZmZmZmb2PzAzMzMzM+O/NDMzMzMzA0BoZmZmZmb2Pw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:09:22.563129
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: c73711542719a493867c415767bb9afb37ecc57d2166e9228902442c6ed5faef
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c737115_20231212T170912057549_embedding_proba_weak__0_birds.yml
results:
  fit_time:
  - 1.6823070049285889
  - 1.7649493217468262
  - 1.6793103218078613
  - 1.677499771118164
  - 1.6685144901275635
  score_time:
  - 1.3553555011749268
  - 1.4229285717010498
  - 1.3629646301269531
  - 1.3743374347686768
  - 1.3880350589752197
  test_average_precision_macro:
  - 0.5514977503618699
  - 0.5382988579329527
  - 0.5293488865846708
  - 0.5674510358849257
  - 0.560113519408285
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5427706314191959
  - 0.5109822928081148
  - 0.47735532613842113
  - 0.5476226181351028
  - 0.5534908835554592
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3409708938778706
  - 0.3730619875387317
  - 0.31733324814720165
  - 0.33171411482964985
  - 0.34923565882868207
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6280077194671059
  - 0.6005639976259182
  - 0.590317857706031
  - 0.646902738682416
  - 0.6101218764879229
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.94859241126071
  - 0.9510403916768665
  - 0.9506323949408405
  - 0.9518563851489187
  - 0.9506323949408405
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9485924112607099
  - 0.9510403916768666
  - 0.9506323949408405
  - 0.9518563851489188
  - 0.9506323949408405
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9485924112607099
  - 0.9510403916768665
  - 0.9506323949408404
  - 0.9518563851489188
  - 0.9506323949408405
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9271094752105292
  - 0.9260260801634518
  - 0.9266270055886066
  - 0.9265988372093025
  - 0.9263866354185447
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9040527843676046
  - 0.9086766451527846
  - 0.9077051656361373
  - 0.9100310864899813
  - 0.9077193679736117
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9022118742724098
  - 0.9066511085180864
  - 0.9059097978227061
  - 0.9081354612689763
  - 0.9059097978227061
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9080491466740204
  - 0.9119485334348832
  - 0.911899801131348
  - 0.9141401009955105
  - 0.9109619960984977
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8658805489645754
  - 0.8643922452586423
  - 0.8651339621138148
  - 0.8654056163351577
  - 0.8648641177018013
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7905832969786458
  - 0.7916666387015223
  - 0.8057053411704579
  - 0.8045823318839133
  - 0.7988480619294573
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06008965425967352
  - 0.061022617311423735
  - 0.046134452627354224
  - 0.05077658585470342
  - 0.046134452627354224
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.29741388767397814
  - 0.25949637296977957
  - 0.24288781821874914
  - 0.2726689780100206
  - 0.24288781821874914
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.07126593504418083
  - 0.0579089117937915
  - 0.042203022164694855
  - 0.06028382090991757
  - 0.039665154806949876
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.14333009563362595
  - 0.14290202831981208
  - 0.12426878863188676
  - 0.13906676293372447
  - 0.12426878863188676
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.4048044731197747
  - 0.4371787212796807
  - 0.37523039086596754
  - 0.3913889398416849
  - 0.4102949854082794
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.953488372093023
  - -2.7209302325581395
  - -2.86046511627907
  - -2.852713178294574
  - -2.891472868217054
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05140758873929009
  - -0.04895960832313342
  - -0.049367605059159526
  - -0.048143614851081186
  - -0.049367605059159526
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.051407588739290085
  - -0.04895960832313342
  - -0.049367605059159526
  - -0.04814361485108119
  - -0.049367605059159526
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05140758873929008
  - -0.04895960832313342
  - -0.049367605059159526
  - -0.04814361485108119
  - -0.049367605059159526
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07289052478947075
  - -0.07397391983654829
  - -0.07337299441139356
  - -0.07340116279069768
  - -0.07361336458145545
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07845100572528754
  - -0.07087404729333595
  - -0.07548863711654409
  - -0.07810710847646551
  - -0.0776285837332349
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.94859241126071
  - 0.9510403916768665
  - 0.9506323949408405
  - 0.9518563851489187
  - 0.9506323949408405
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9485924112607099
  - 0.9510403916768666
  - 0.9506323949408405
  - 0.9518563851489188
  - 0.9506323949408405
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9485924112607099
  - 0.9510403916768665
  - 0.9506323949408404
  - 0.9518563851489188
  - 0.9506323949408405
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9271094752105292
  - 0.9260260801634518
  - 0.9266270055886066
  - 0.9265988372093025
  - 0.9263866354185447
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.94859241126071
  - 0.9510403916768665
  - 0.9506323949408405
  - 0.9518563851489187
  - 0.9506323949408405
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9485924112607099
  - 0.9510403916768666
  - 0.9506323949408405
  - 0.9518563851489188
  - 0.9506323949408405
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9485924112607099
  - 0.9510403916768665
  - 0.9506323949408404
  - 0.9518563851489188
  - 0.9506323949408405
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9271094752105292
  - 0.9260260801634518
  - 0.9266270055886066
  - 0.9265988372093025
  - 0.9263866354185447
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9169658674974189
  - 0.9195052645949421
  - 0.9014569525157105
  - 0.8865185648911131
  - 0.8865707121735129
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9163077842224491
  - 0.9214957701527019
  - 0.9086893816477375
  - 0.910205015066724
  - 0.9094171691070916
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9085136356023595
  - 0.9159996212500023
  - 0.8933622940019469
  - 0.9002385309365878
  - 0.8988429664008319
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9517694035085618
  - 0.9386580862570615
  - 0.9488549495643549
  - 0.9308455460842733
  - 0.9491975817465614
  train_average_precision_macro_oob:
  - 0.44259962697360816
  - 0.4115710532286573
  - 0.45126214686325167
  - 0.4352247398983234
  - 0.4403310781382549
  train_average_precision_micro:
  - 0.8614253466632382
  - 0.8567010892447804
  - 0.8609674919335499
  - 0.8550651501632399
  - 0.8686243085756079
  train_average_precision_micro_oob:
  - 0.49700464536249317
  - 0.5138737289716168
  - 0.5094591647505801
  - 0.5100726982919414
  - 0.5268756633558391
  train_average_precision_samples:
  - 0.49404262027808526
  - 0.4848179678848284
  - 0.5033700935154423
  - 0.5039745601082811
  - 0.4987005121816168
  train_average_precision_samples_oob:
  - 0.339508861653882
  - 0.328337062320873
  - 0.3408339825106241
  - 0.34154044579886667
  - 0.3339628787881452
  train_average_precision_weighted:
  - 0.9446777286712601
  - 0.9296608763426902
  - 0.9387426488196795
  - 0.9223970833153737
  - 0.941599918990616
  train_average_precision_weighted_oob:
  - 0.5392930505455402
  - 0.5267772022908521
  - 0.5468018164948756
  - 0.5319383564719616
  - 0.5610145767592364
  train_f1_macro:
  - 0.9550183598531209
  - 0.9560383516931865
  - 0.9573643410852711
  - 0.9554263565891471
  - 0.9555283557731536
  train_f1_macro_oob:
  - 0.9501223990208075
  - 0.951142390860873
  - 0.9510403916768665
  - 0.9506323949408403
  - 0.9498164014687881
  train_f1_micro:
  - 0.9550183598531212
  - 0.9560383516931864
  - 0.9573643410852714
  - 0.9554263565891473
  - 0.9555283557731539
  train_f1_micro_oob:
  - 0.9501223990208079
  - 0.9511423908608732
  - 0.9510403916768666
  - 0.9506323949408405
  - 0.9498164014687882
  train_f1_samples:
  - 0.9550183598531211
  - 0.9560383516931866
  - 0.9573643410852714
  - 0.9554263565891473
  - 0.9555283557731539
  train_f1_samples_oob:
  - 0.9501223990208079
  - 0.9511423908608732
  - 0.9510403916768666
  - 0.9506323949408406
  - 0.9498164014687883
  train_f1_weighted:
  - 0.9375065853842101
  - 0.9404097452934661
  - 0.9436618678479144
  - 0.9398930055707844
  - 0.939748984865264
  train_f1_weighted_oob:
  - 0.9242078723564388
  - 0.928951642672573
  - 0.929029162052418
  - 0.9280108762932179
  - 0.9255740125507568
  train_jaccard_macro:
  - 0.9150908452172343
  - 0.9167677722309414
  - 0.9191503339138678
  - 0.9157036803004044
  - 0.9159092854269907
  train_jaccard_macro_oob:
  - 0.9070211292801301
  - 0.9084927419832128
  - 0.9082745187284115
  - 0.9076188803144032
  - 0.9063402977637871
  train_jaccard_micro:
  - 0.913909224011713
  - 0.9157791890571568
  - 0.9182156133828996
  - 0.9146567717996289
  - 0.91484375
  train_jaccard_micro_oob:
  - 0.9049839696881375
  - 0.9068365263055529
  - 0.9066511085180864
  - 0.9059097978227061
  - 0.9044289044289044
  train_jaccard_samples:
  - 0.9188807765653064
  - 0.9205923747076428
  - 0.9226267076368189
  - 0.9193412895384584
  - 0.9197503162493051
  train_jaccard_samples_oob:
  - 0.9108405155119008
  - 0.9124332520641925
  - 0.9120119109628716
  - 0.9113614149584828
  - 0.9102402436906988
  train_jaccard_weighted:
  - 0.8832727588249949
  - 0.8882665462395699
  - 0.8939654335628763
  - 0.8873453916860155
  - 0.8870747585356046
  train_jaccard_weighted_oob:
  - 0.861470351370115
  - 0.8690753395379951
  - 0.8689535114200978
  - 0.86743823712916
  - 0.8634826200773252
  train_label_ranking_average_precision_score:
  - 0.9514069613633562
  - 0.9499342469545958
  - 0.9510445121200932
  - 0.9555249477051799
  - 0.9560648532668878
  train_label_ranking_average_precision_score_oob:
  - 0.7968732027391531
  - 0.7934533413906397
  - 0.7885084011152746
  - 0.7930908333957657
  - 0.7913272198734159
  train_matthews_corrcoef_macro:
  - 0.08569423951204615
  - 0.13819968306664146
  - 0.13699576517576567
  - 0.10932602223800124
  - 0.11121421627101906
  train_matthews_corrcoef_macro_oob:
  - 0.04141088350440856
  - 0.06624819626132038
  - 0.06164881981080604
  - 0.0665224299442784
  - 0.04673085018583027
  train_matthews_corrcoef_micro:
  - 0.37037384201043166
  - 0.4136425887899484
  - 0.4413221642005498
  - 0.40166203314219845
  - 0.4023875513601239
  train_matthews_corrcoef_micro_oob:
  - 0.22077119571717932
  - 0.28827798049763115
  - 0.28655672834428414
  - 0.2758593500821047
  - 0.24397825952290225
  train_matthews_corrcoef_samples:
  - 0.09427724815036626
  - 0.10289133478631746
  - 0.1280426624815963
  - 0.10324575932589507
  - 0.10766717307678307
  train_matthews_corrcoef_samples_oob:
  - 0.042593193964493306
  - 0.05945214803820722
  - 0.06568285853517702
  - 0.05533127719355637
  - 0.04528106996483249
  train_matthews_corrcoef_weighted:
  - 0.21611274799476976
  - 0.2887914569109285
  - 0.2908179662489389
  - 0.24835238488382977
  - 0.2515181422736536
  train_matthews_corrcoef_weighted_oob:
  - 0.10887602723682274
  - 0.1624865487468153
  - 0.1564000566154004
  - 0.15823640914015322
  - 0.12025630526100006
  train_ndgc:
  - 0.5100412216224778
  - 0.5031037509938574
  - 0.5193422420910022
  - 0.5199144352995596
  - 0.5142016026957245
  train_ndgc_oob:
  - 0.4004145900766072
  - 0.390583053334809
  - 0.4043367143227554
  - 0.40403184135853293
  - 0.3980016813703738
  train_neg_coverage_error:
  - -1.2248062015503876
  - -1.308139534883721
  - -1.2383720930232558
  - -1.2596899224806202
  - -1.25
  train_neg_coverage_error_oob:
  - -2.9573643410852712
  - -3.052325581395349
  - -2.9631782945736433
  - -2.9864341085271318
  - -2.9670542635658914
  train_neg_hamming_loss_macro:
  - -0.04498164014687883
  - -0.043961648306813546
  - -0.04263565891472868
  - -0.044573643410852716
  - -0.044471644226846185
  train_neg_hamming_loss_macro_oob:
  - -0.049877600979192166
  - -0.04885760913912689
  - -0.04895960832313342
  - -0.049367605059159526
  - -0.05018359853121175
  train_neg_hamming_loss_micro:
  - -0.044981640146878825
  - -0.043961648306813546
  - -0.04263565891472868
  - -0.044573643410852716
  - -0.044471644226846185
  train_neg_hamming_loss_micro_oob:
  - -0.049877600979192166
  - -0.04885760913912689
  - -0.04895960832313342
  - -0.049367605059159526
  - -0.05018359853121175
  train_neg_hamming_loss_samples:
  - -0.044981640146878825
  - -0.04396164830681354
  - -0.04263565891472868
  - -0.044573643410852716
  - -0.044471644226846185
  train_neg_hamming_loss_samples_oob:
  - -0.049877600979192166
  - -0.04885760913912689
  - -0.04895960832313341
  - -0.049367605059159526
  - -0.050183598531211744
  train_neg_hamming_loss_weighted:
  - -0.062493414615789875
  - -0.05959025470653378
  - -0.05633813215208565
  - -0.060106994429215674
  - -0.06025101513473607
  train_neg_hamming_loss_weighted_oob:
  - -0.07579212764356137
  - -0.07104835732742712
  - -0.07097083794758215
  - -0.07198912370678222
  - -0.07442598744924327
  train_neg_label_ranking_loss:
  - -0.0090164666045309
  - -0.010630795997588064
  - -0.009062226311713316
  - -0.008670975595565199
  - -0.008453618726361545
  train_neg_label_ranking_loss_oob:
  - -0.08153560146976699
  - -0.08416181022200174
  - -0.08314360627972119
  - -0.08227108697782431
  - -0.08032306318472529
  train_precision_macro:
  - 0.9550183598531209
  - 0.9560383516931865
  - 0.9573643410852711
  - 0.9554263565891471
  - 0.9555283557731536
  train_precision_macro_oob:
  - 0.9501223990208075
  - 0.951142390860873
  - 0.9510403916768665
  - 0.9506323949408403
  - 0.9498164014687881
  train_precision_micro:
  - 0.9550183598531212
  - 0.9560383516931864
  - 0.9573643410852714
  - 0.9554263565891473
  - 0.9555283557731539
  train_precision_micro_oob:
  - 0.9501223990208079
  - 0.9511423908608732
  - 0.9510403916768666
  - 0.9506323949408405
  - 0.9498164014687882
  train_precision_samples:
  - 0.9550183598531211
  - 0.9560383516931866
  - 0.9573643410852714
  - 0.9554263565891473
  - 0.9555283557731539
  train_precision_samples_oob:
  - 0.9501223990208079
  - 0.9511423908608732
  - 0.9510403916768666
  - 0.9506323949408406
  - 0.9498164014687883
  train_precision_weighted:
  - 0.9375065853842101
  - 0.9404097452934661
  - 0.9436618678479144
  - 0.9398930055707844
  - 0.939748984865264
  train_precision_weighted_oob:
  - 0.9242078723564388
  - 0.928951642672573
  - 0.929029162052418
  - 0.9280108762932179
  - 0.9255740125507568
  train_recall_macro:
  - 0.9550183598531209
  - 0.9560383516931865
  - 0.9573643410852711
  - 0.9554263565891471
  - 0.9555283557731536
  train_recall_macro_oob:
  - 0.9501223990208075
  - 0.951142390860873
  - 0.9510403916768665
  - 0.9506323949408403
  - 0.9498164014687881
  train_recall_micro:
  - 0.9550183598531212
  - 0.9560383516931864
  - 0.9573643410852714
  - 0.9554263565891473
  - 0.9555283557731539
  train_recall_micro_oob:
  - 0.9501223990208079
  - 0.9511423908608732
  - 0.9510403916768666
  - 0.9506323949408405
  - 0.9498164014687882
  train_recall_samples:
  - 0.9550183598531211
  - 0.9560383516931866
  - 0.9573643410852714
  - 0.9554263565891473
  - 0.9555283557731539
  train_recall_samples_oob:
  - 0.9501223990208079
  - 0.9511423908608732
  - 0.9510403916768666
  - 0.9506323949408406
  - 0.9498164014687883
  train_recall_weighted:
  - 0.9375065853842101
  - 0.9404097452934661
  - 0.9436618678479144
  - 0.9398930055707844
  - 0.939748984865264
  train_recall_weighted_oob:
  - 0.9242078723564388
  - 0.928951642672573
  - 0.929029162052418
  - 0.9280108762932179
  - 0.9255740125507568
  train_roc_auc_macro:
  - 0.9959812512868979
  - 0.9950729662181883
  - 0.9957914991988801
  - 0.9943432047100451
  - 0.9956788069728034
  train_roc_auc_macro_oob:
  - 0.873945692825972
  - 0.8761954102799772
  - 0.8756652798046026
  - 0.8781666369491575
  - 0.8907871532063593
  train_roc_auc_micro:
  - 0.9900249486029514
  - 0.9895534719977009
  - 0.990460794728496
  - 0.9894324609423986
  - 0.9902955470365752
  train_roc_auc_micro_oob:
  - 0.9045987163018792
  - 0.9029666579424096
  - 0.9075904115283359
  - 0.9047102922240517
  - 0.9087691099718257
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9938813430917373
  - 0.9924299607735888
  - 0.9931724832942183
  - 0.9915963361122174
  - 0.9932491630324561
  train_roc_auc_weighted_oob:
  - 0.8895781542021913
  - 0.8875423783666364
  - 0.8909224297761904
  - 0.8876639642529442
  - 0.8967770908735624
start: 2023-12-12 17:09:12.057549
wrapper: null
