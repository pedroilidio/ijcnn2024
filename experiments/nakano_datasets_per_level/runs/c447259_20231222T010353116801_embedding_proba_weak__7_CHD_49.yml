active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:08:23.385323
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__7
  params: {}
hash: c44725941a0cda5fa9862b58ab4d79c023295bbc571b944e4251e7c3b0a46a19
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c447259_20231222T010353116801_embedding_proba_weak__7_CHD_49.yml
results:
  fit_time:
  - 240.09358048439026
  - 240.9585247039795
  - 243.9785017967224
  - 239.5903615951538
  - 250.26744890213013
  score_time:
  - 6.310818433761597
  - 6.375718355178833
  - 6.342233180999756
  - 5.815733432769775
  - 6.325272083282471
  test_average_precision_macro:
  - 0.5168862226283013
  - 0.48197104218392317
  - 0.5062542683488642
  - 0.523077091024512
  - 0.4835998977909734
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6489063534721855
  - 0.6064878603616717
  - 0.6420628757776327
  - 0.6475696229828807
  - 0.6225484711574447
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7712962962962963
  - 0.7401803118908381
  - 0.7669294294294294
  - 0.7674674674674674
  - 0.770216049382716
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6354952966439144
  - 0.5982122072335538
  - 0.6391658351828383
  - 0.640367770709777
  - 0.6019238571112843
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.611111111111111
  - 0.6301169590643275
  - 0.647147147147147
  - 0.6306306306306306
  - 0.6064814814814815
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6111111111111112
  - 0.6301169590643275
  - 0.6471471471471472
  - 0.6306306306306306
  - 0.6064814814814815
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6111111111111112
  - 0.6301169590643274
  - 0.6471471471471473
  - 0.6306306306306306
  - 0.6064814814814815
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5104166666666666
  - 0.538419218778654
  - 0.5693061482535167
  - 0.5350910350910351
  - 0.5078347578347578
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4716885016364453
  - 0.48777784239624095
  - 0.5022019972074879
  - 0.49043295139553494
  - 0.46689556458269243
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.44
  - 0.4599786552828175
  - 0.47835738068812433
  - 0.4605263157894737
  - 0.43521594684385384
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.46375336375336385
  - 0.4809941520467837
  - 0.5082524082524084
  - 0.4874380874380875
  - 0.45657367324034
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.35171111265140104
  - 0.37699103560380054
  - 0.40195855522903196
  - 0.3738797420335497
  - 0.34829701833390114
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7712962962962963
  - 0.7401803118908383
  - 0.7669294294294297
  - 0.7854854854854857
  - 0.7794753086419755
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0414910086205827
  - 0.08670338562110146
  - 0.11523948290643975
  - 0.1082209400196209
  - 0.023260710415337237
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1852057036523179
  - 0.2130297170994659
  - 0.2676193463480534
  - 0.23928707994708315
  - 0.18707184683030226
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.14772499014161056
  - 0.16467101250622537
  - 0.2350257861252708
  - 0.19315537598546717
  - 0.16816867758780596
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.026378972803611764
  - 0.08770834919018632
  - 0.1430330778748454
  - 0.11064397214710592
  - 0.004469688035159552
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8452811668395516
  - 0.8311349116006751
  - 0.8486803976008999
  - 0.8461712176186367
  - 0.8492879232883224
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.684684684684685
  - -3.8771929824561404
  - -3.891891891891892
  - -3.7387387387387387
  - -3.824074074074074
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.38888888888888884
  - -0.36988304093567254
  - -0.3528528528528528
  - -0.36936936936936937
  - -0.39351851851851855
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3888888888888889
  - -0.36988304093567254
  - -0.35285285285285284
  - -0.36936936936936937
  - -0.39351851851851855
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.38888888888888895
  - -0.36988304093567254
  - -0.3528528528528529
  - -0.36936936936936937
  - -0.39351851851851855
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.4895833333333333
  - -0.461580781221346
  - -0.43069385174648334
  - -0.46490896490896494
  - -0.4921652421652421
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22237237237237237
  - -0.26125730994152047
  - -0.24749749749749747
  - -0.22965465465465465
  - -0.23768004115226335
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.611111111111111
  - 0.6301169590643275
  - 0.647147147147147
  - 0.6306306306306306
  - 0.6064814814814815
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6111111111111112
  - 0.6301169590643275
  - 0.6471471471471472
  - 0.6306306306306306
  - 0.6064814814814815
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6111111111111112
  - 0.6301169590643274
  - 0.6471471471471473
  - 0.6306306306306306
  - 0.6064814814814815
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5104166666666666
  - 0.538419218778654
  - 0.5693061482535167
  - 0.5350910350910351
  - 0.5078347578347578
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.611111111111111
  - 0.6301169590643275
  - 0.647147147147147
  - 0.6306306306306306
  - 0.6064814814814815
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6111111111111112
  - 0.6301169590643275
  - 0.6471471471471472
  - 0.6306306306306306
  - 0.6064814814814815
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6111111111111112
  - 0.6301169590643274
  - 0.6471471471471473
  - 0.6306306306306306
  - 0.6064814814814815
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5104166666666666
  - 0.538419218778654
  - 0.5693061482535167
  - 0.5350910350910351
  - 0.5078347578347578
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.58532816751711
  - 0.525405279707329
  - 0.514332737174223
  - 0.5799569038753126
  - 0.5185929881314749
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7470881099353321
  - 0.711968684998113
  - 0.7312151770502371
  - 0.7315237394184763
  - 0.7028165204960786
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7776276276276276
  - 0.7387426900584795
  - 0.7525025025025026
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5706841722402973
  - 0.5401338180211244
  - 0.5785132621063727
  - 0.5679288684601915
  - 0.495313723942778
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8106252164574862
  - 0.8026972774062878
  - 0.8018491111011125
  - 0.8143700622464994
  - 0.807152509486548
  train_average_precision_macro_oob:
  - 0.7152629435188156
  - 0.7176836450991665
  - 0.7255894511538318
  - 0.7218325266502804
  - 0.7149372890981285
  train_average_precision_micro:
  - 0.8649892872688846
  - 0.8626615087491465
  - 0.8586562635603602
  - 0.871908207865247
  - 0.8650846720343552
  train_average_precision_micro_oob:
  - 0.8596624400412034
  - 0.8593061509955887
  - 0.8519713916318296
  - 0.866011205998889
  - 0.8597606564973501
  train_average_precision_samples:
  - 0.883352102102102
  - 0.8779383975812548
  - 0.8810466716716716
  - 0.8936780530530529
  - 0.8852541635595326
  train_average_precision_samples_oob:
  - 0.8777277277277277
  - 0.8722442680776012
  - 0.8710867117117117
  - 0.8885541791791791
  - 0.8769084016902808
  train_average_precision_weighted:
  - 0.8635407613465156
  - 0.8620300610609303
  - 0.8561955512132082
  - 0.8667256679957083
  - 0.8600781054652974
  train_average_precision_weighted_oob:
  - 0.8535971463054056
  - 0.8551356516974351
  - 0.8464913665919654
  - 0.8575877585736671
  - 0.849498412416235
  train_f1_macro:
  - 0.7792792792792792
  - 0.7724867724867726
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206563
  train_f1_macro_oob:
  - 0.7676426426426426
  - 0.7660619803476947
  - 0.7698948948948949
  - 0.7743993993993993
  - 0.7680835197613721
  train_f1_micro:
  - 0.7792792792792793
  - 0.7724867724867724
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206562
  train_f1_micro_oob:
  - 0.7676426426426426
  - 0.7660619803476947
  - 0.7698948948948949
  - 0.7743993993993994
  - 0.7680835197613721
  train_f1_samples:
  - 0.7792792792792793
  - 0.7724867724867726
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206563
  train_f1_samples_oob:
  - 0.7676426426426427
  - 0.7660619803476947
  - 0.7698948948948948
  - 0.7743993993993995
  - 0.7680835197613722
  train_f1_weighted:
  - 0.721592877842878
  - 0.7119052570081891
  - 0.7253391141795676
  - 0.7255377104853545
  - 0.7249161561857019
  train_f1_weighted_oob:
  - 0.710756867006867
  - 0.7059263880224579
  - 0.713249212595333
  - 0.7173167932330237
  - 0.7133107667560741
  train_jaccard_macro:
  - 0.6518326871645015
  - 0.6438047354715155
  - 0.6542782773757704
  - 0.6555288587451399
  - 0.6526407295093054
  train_jaccard_macro_oob:
  - 0.6361711285022452
  - 0.635145471408647
  - 0.6389852952331848
  - 0.6451257509712911
  - 0.6361787910256136
  train_jaccard_micro:
  - 0.6383763837638377
  - 0.6293103448275862
  - 0.6414048059149723
  - 0.6424167694204685
  - 0.6398654845612962
  train_jaccard_micro_oob:
  - 0.6229058787694182
  - 0.6208269525267994
  - 0.625877326823314
  - 0.6318529862174579
  - 0.6234866828087167
  train_jaccard_samples:
  - 0.6657560157560156
  - 0.6560306662347478
  - 0.669004719004719
  - 0.6689403689403689
  - 0.6651016395982838
  train_jaccard_samples_oob:
  - 0.6507731757731758
  - 0.6484288953676708
  - 0.6533354783354783
  - 0.6583118833118833
  - 0.6492392767560553
  train_jaccard_weighted:
  - 0.5701256154396085
  - 0.5587432474399824
  - 0.574260078788628
  - 0.5748774110780456
  - 0.5733071244915428
  train_jaccard_weighted_oob:
  - 0.5558963970306154
  - 0.5508711131152422
  - 0.5588329851793561
  - 0.5643048532395983
  - 0.5581198237922946
  train_label_ranking_average_precision_score:
  - 0.8901088588588583
  - 0.8847411186696891
  - 0.8878034284284274
  - 0.8959303053053048
  - 0.8897284364901813
  train_label_ranking_average_precision_score_oob:
  - 0.8844844844844836
  - 0.8790469891660362
  - 0.8778434684684674
  - 0.8908064314314307
  - 0.881382674620929
  train_matthews_corrcoef_macro:
  - 0.45168924795017196
  - 0.43824747555356086
  - 0.4491015925547388
  - 0.45629644136140085
  - 0.450645326296343
  train_matthews_corrcoef_macro_oob:
  - 0.4261092847714906
  - 0.42471982233460115
  - 0.4266510944599935
  - 0.44095817663584375
  - 0.4245042082177309
  train_matthews_corrcoef_micro:
  - 0.587475823275305
  - 0.5756241979494742
  - 0.5898735677563615
  - 0.5933499974136449
  - 0.587786697658781
  train_matthews_corrcoef_micro_oob:
  - 0.5657777310891223
  - 0.5639491247802726
  - 0.5686382324739239
  - 0.5785728686995224
  - 0.5652370154660673
  train_matthews_corrcoef_samples:
  - 0.5200993225253359
  - 0.5058159546846841
  - 0.5287106468698094
  - 0.5389022635976787
  - 0.5102134161429872
  train_matthews_corrcoef_samples_oob:
  - 0.49570961654442763
  - 0.4894043046165428
  - 0.5012871273872319
  - 0.5243263125310618
  - 0.48707402623799345
  train_matthews_corrcoef_weighted:
  - 0.5160186485213174
  - 0.49813819836033646
  - 0.51183519643766
  - 0.5211989612633493
  - 0.5176162905541167
  train_matthews_corrcoef_weighted_oob:
  - 0.494001828763146
  - 0.48647189750562453
  - 0.49052850431547484
  - 0.5060347895640666
  - 0.4939954289614569
  train_ndgc:
  - 0.9253928862410301
  - 0.920907770945425
  - 0.9241242978437446
  - 0.9355016159250281
  - 0.9269492481621959
  train_ndgc_oob:
  - 0.9210856763084967
  - 0.9173907407533044
  - 0.9184167766228005
  - 0.9324473253530302
  - 0.9222579767755346
  train_neg_coverage_error:
  - -3.22972972972973
  - -3.2834467120181405
  - -3.2635135135135136
  - -3.231981981981982
  - -3.208053691275168
  train_neg_coverage_error_oob:
  - -3.2567567567567566
  - -3.3356009070294785
  - -3.349099099099099
  - -3.2882882882882885
  - -3.2639821029082774
  train_neg_hamming_loss_macro:
  - -0.22072072072072071
  - -0.22751322751322753
  - -0.21846846846846849
  - -0.21771771771771772
  - -0.21961222967934377
  train_neg_hamming_loss_macro_oob:
  - -0.23235735735735732
  - -0.23393801965230535
  - -0.2301051051051051
  - -0.2256006006006006
  - -0.2319164802386279
  train_neg_hamming_loss_micro:
  - -0.22072072072072071
  - -0.2275132275132275
  - -0.21846846846846846
  - -0.21771771771771772
  - -0.21961222967934377
  train_neg_hamming_loss_micro_oob:
  - -0.23235735735735735
  - -0.23393801965230537
  - -0.2301051051051051
  - -0.2256006006006006
  - -0.2319164802386279
  train_neg_hamming_loss_samples:
  - -0.22072072072072071
  - -0.2275132275132275
  - -0.21846846846846843
  - -0.2177177177177177
  - -0.21961222967934374
  train_neg_hamming_loss_samples_oob:
  - -0.23235735735735732
  - -0.23393801965230537
  - -0.2301051051051051
  - -0.22560060060060058
  - -0.23191648023862788
  train_neg_hamming_loss_weighted:
  - -0.27840712215712216
  - -0.28809474299181104
  - -0.27466088582043247
  - -0.2744622895146455
  - -0.2750838438142982
  train_neg_hamming_loss_weighted_oob:
  - -0.2892431329931329
  - -0.2940736119775421
  - -0.2867507874046671
  - -0.2826832067669764
  - -0.286689233243926
  train_neg_label_ranking_loss:
  - -0.11360735735735734
  - -0.11440539178634417
  - -0.11577202202202201
  - -0.11013513513513513
  - -0.10644419587372606
  train_neg_label_ranking_loss_oob:
  - -0.12050800800800802
  - -0.12251196775006301
  - -0.1293168168168168
  - -0.11688563563563563
  - -0.11634973900074572
  train_precision_macro:
  - 0.7792792792792792
  - 0.7724867724867726
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206563
  train_precision_macro_oob:
  - 0.7676426426426426
  - 0.7660619803476947
  - 0.7698948948948949
  - 0.7743993993993993
  - 0.7680835197613721
  train_precision_micro:
  - 0.7792792792792793
  - 0.7724867724867724
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206562
  train_precision_micro_oob:
  - 0.7676426426426426
  - 0.7660619803476947
  - 0.7698948948948949
  - 0.7743993993993994
  - 0.7680835197613721
  train_precision_samples:
  - 0.7792792792792793
  - 0.7724867724867726
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206563
  train_precision_samples_oob:
  - 0.7676426426426427
  - 0.7660619803476947
  - 0.7698948948948948
  - 0.7743993993993995
  - 0.7680835197613722
  train_precision_weighted:
  - 0.721592877842878
  - 0.7119052570081891
  - 0.7253391141795676
  - 0.7255377104853545
  - 0.7249161561857019
  train_precision_weighted_oob:
  - 0.710756867006867
  - 0.7059263880224579
  - 0.713249212595333
  - 0.7173167932330237
  - 0.7133107667560741
  train_recall_macro:
  - 0.7792792792792792
  - 0.7724867724867726
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206563
  train_recall_macro_oob:
  - 0.7676426426426426
  - 0.7660619803476947
  - 0.7698948948948949
  - 0.7743993993993993
  - 0.7680835197613721
  train_recall_micro:
  - 0.7792792792792793
  - 0.7724867724867724
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206562
  train_recall_micro_oob:
  - 0.7676426426426426
  - 0.7660619803476947
  - 0.7698948948948949
  - 0.7743993993993994
  - 0.7680835197613721
  train_recall_samples:
  - 0.7792792792792793
  - 0.7724867724867726
  - 0.7815315315315315
  - 0.7822822822822822
  - 0.7803877703206563
  train_recall_samples_oob:
  - 0.7676426426426427
  - 0.7660619803476947
  - 0.7698948948948948
  - 0.7743993993993995
  - 0.7680835197613722
  train_recall_weighted:
  - 0.721592877842878
  - 0.7119052570081891
  - 0.7253391141795676
  - 0.7255377104853545
  - 0.7249161561857019
  train_recall_weighted_oob:
  - 0.710756867006867
  - 0.7059263880224579
  - 0.713249212595333
  - 0.7173167932330237
  - 0.7133107667560741
  train_roc_auc_macro:
  - 0.8034515260440545
  - 0.8069107701507678
  - 0.7991516950353127
  - 0.8160549318337109
  - 0.811795717223177
  train_roc_auc_macro_oob:
  - 0.7517814682011078
  - 0.7613072242384934
  - 0.7808231317806915
  - 0.7892497860041073
  - 0.7819493119301592
  train_roc_auc_micro:
  - 0.877711515458226
  - 0.8817641223172907
  - 0.8731355592733099
  - 0.887289409000085
  - 0.8785082965205062
  train_roc_auc_micro_oob:
  - 0.869983265090173
  - 0.8753483121877992
  - 0.8663516473285329
  - 0.881182643645653
  - 0.8725889870564282
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7985343742684653
  - 0.8014693216584978
  - 0.7965162501387477
  - 0.8127625626509322
  - 0.8005538908876032
  train_roc_auc_weighted_oob:
  - 0.7899036751015873
  - 0.7935579512134844
  - 0.7880973003541435
  - 0.8084326280447418
  - 0.7940583975729414
start: 2023-12-22 01:03:53.116801
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
