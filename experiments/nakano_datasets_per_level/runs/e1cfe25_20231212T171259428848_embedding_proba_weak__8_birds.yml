active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAADwPwAAAAAAAAAAAAAAAAAAAMAAAAAAAADwPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb8yMzMzMzPzv5yZmZmZmek/zszMzMzM/D8yMzMzMzPzvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJvzMzMzMzM/O/mpmZmZmZ6T+amZmZmZnpPw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP5iZmZmZmfm/aGZmZmZm9j+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:13:49.969623
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: e1cfe2555a03d8997844f33c8ad1cc962fad26690e1cd72c89f7a7a90656d514
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e1cfe25_20231212T171259428848_embedding_proba_weak__8_birds.yml
results:
  fit_time:
  - 26.942373991012573
  - 27.519970893859863
  - 26.298182487487793
  - 24.929698705673218
  - 28.28653311729431
  score_time:
  - 7.749672889709473
  - 7.672152996063232
  - 7.532543897628784
  - 7.440844774246216
  - 7.6687705516815186
  test_average_precision_macro:
  - 0.2813770629294005
  - 0.3523318742762312
  - 0.34024798699833375
  - 0.3119397503391362
  - 0.27614463220626445
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.19768236824054902
  - 0.2735814267684892
  - 0.2337015887182412
  - 0.20159109716008622
  - 0.23877286297914213
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.2542109608444478
  - 0.26809076723856406
  - 0.2456505081892079
  - 0.258613984279379
  - 0.22661238364771738
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.3511570830522675
  - 0.47389719016224685
  - 0.42202946793053575
  - 0.39516727070298663
  - 0.40387711498111045
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8882088943288453
  - 0.9012647898816809
  - 0.890656874745002
  - 0.8890248878008976
  - 0.8792329661362709
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8882088943288454
  - 0.9012647898816809
  - 0.890656874745002
  - 0.8890248878008976
  - 0.8792329661362709
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8882088943288454
  - 0.901264789881681
  - 0.890656874745002
  - 0.8890248878008975
  - 0.879232966136271
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8866205100893545
  - 0.8954662908151281
  - 0.8925380200011834
  - 0.8872062976984556
  - 0.8827741286466656
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7995819735968764
  - 0.8223612829716106
  - 0.804072066325307
  - 0.801424479259895
  - 0.7858195372334976
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7988990825688074
  - 0.8202747864834756
  - 0.8028687017285767
  - 0.8002203452074917
  - 0.7844921732799418
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8211589275322525
  - 0.8401070917248875
  - 0.825922796349676
  - 0.8250535981085532
  - 0.8072116941715864
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7970855344214544
  - 0.8128606147877318
  - 0.8070020014170416
  - 0.7987804676648077
  - 0.791964549224034
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.680567549991735
  - 0.7719667362308121
  - 0.7107667872589754
  - 0.6849705734266659
  - 0.6839767247329888
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2525577144033368
  - 0.32000949909877663
  - 0.30523604281037503
  - 0.2522875016938513
  - 0.24588574735657212
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2692676716925094
  - 0.3458571067595894
  - 0.32849354742404824
  - 0.28550137917582197
  - 0.29100700024447473
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.13696742011021867
  - 0.1475425365912521
  - 0.1520775265671144
  - 0.109410987315866
  - 0.12616106346308575
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.32553317328873116
  - 0.3936420715556038
  - 0.39472004643405806
  - 0.3505592738111221
  - 0.3524032335453559
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3453347404137281
  - 0.34324917544008426
  - 0.3266487778271646
  - 0.3461183129436294
  - 0.3171562306810311
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.255813953488372
  - -3.2248062015503876
  - -3.7286821705426356
  - -4.511627906976744
  - -4.372093023255814
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.11179110567115465
  - -0.09873521011831904
  - -0.10934312525499797
  - -0.11097511219910242
  - -0.1207670338637291
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.11179110567115463
  - -0.09873521011831905
  - -0.10934312525499797
  - -0.1109751121991024
  - -0.12076703386372908
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.11179110567115463
  - -0.09873521011831905
  - -0.10934312525499795
  - -0.1109751121991024
  - -0.12076703386372908
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.11337948991064561
  - -0.10453370918487198
  - -0.10746197999881651
  - -0.11279370230154438
  - -0.11722587135333454
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.14816542896228257
  - -0.09010316012709993
  - -0.12726604853827836
  - -0.1658565910959892
  - -0.15358825700822964
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8882088943288453
  - 0.9012647898816809
  - 0.890656874745002
  - 0.8890248878008976
  - 0.8792329661362709
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8882088943288454
  - 0.9012647898816809
  - 0.890656874745002
  - 0.8890248878008976
  - 0.8792329661362709
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8882088943288454
  - 0.901264789881681
  - 0.890656874745002
  - 0.8890248878008975
  - 0.879232966136271
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8866205100893545
  - 0.8954662908151281
  - 0.8925380200011834
  - 0.8872062976984556
  - 0.8827741286466656
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8882088943288453
  - 0.9012647898816809
  - 0.890656874745002
  - 0.8890248878008976
  - 0.8792329661362709
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8882088943288454
  - 0.9012647898816809
  - 0.890656874745002
  - 0.8890248878008976
  - 0.8792329661362709
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8882088943288454
  - 0.901264789881681
  - 0.890656874745002
  - 0.8890248878008975
  - 0.879232966136271
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8866205100893545
  - 0.8954662908151281
  - 0.8925380200011834
  - 0.8872062976984556
  - 0.8827741286466656
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8320997349569274
  - 0.8768951988513504
  - 0.8776569910377376
  - 0.7965549510650861
  - 0.8231526647868052
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8363977362463807
  - 0.8959501221791001
  - 0.8746364174782837
  - 0.8262123670452498
  - 0.8449065543564096
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8342346337971116
  - 0.891745258237888
  - 0.8757556594099338
  - 0.8192848892797803
  - 0.8465562911767373
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.39784479913259646
  - 0.325160316783811
  - 0.3532072210824535
  - 0.3558545536202445
  - 0.37562836894273094
  train_average_precision_macro_oob:
  - 0.3432497354921747
  - 0.2866547673154736
  - 0.30623001964171587
  - 0.3149090281544962
  - 0.34816453736112085
  train_average_precision_micro:
  - 0.3498735008833064
  - 0.3049926807029216
  - 0.30959644841885625
  - 0.3240570606886145
  - 0.3443222665250321
  train_average_precision_micro_oob:
  - 0.3211066162022687
  - 0.2730947531540659
  - 0.2784619470442341
  - 0.28698746249251045
  - 0.31815932360711086
  train_average_precision_samples:
  - 0.33338384940855875
  - 0.35682227333390126
  - 0.3543006289396793
  - 0.3423564327755219
  - 0.3415609164737072
  train_average_precision_samples_oob:
  - 0.30487237663287503
  - 0.29947026039675795
  - 0.31683320047314634
  - 0.30058220129865554
  - 0.3066880223519095
  train_average_precision_weighted:
  - 0.5156280964878414
  - 0.44738425600472354
  - 0.48268598331267354
  - 0.4777777827277013
  - 0.5102167617489273
  train_average_precision_weighted_oob:
  - 0.46411086654469946
  - 0.40079901332623263
  - 0.432467857403829
  - 0.43454099820247777
  - 0.4760267581871073
  train_f1_macro:
  - 0.9107507139942882
  - 0.9066707466340268
  - 0.9051407588739291
  - 0.8961648306813546
  - 0.9098327213382292
  train_f1_macro_oob:
  - 0.9099347205222359
  - 0.9062627498980008
  - 0.9045287637698899
  - 0.8958588331293349
  - 0.9092207262341901
  train_f1_micro:
  - 0.9107507139942881
  - 0.9066707466340269
  - 0.905140758873929
  - 0.8961648306813546
  - 0.9098327213382293
  train_f1_micro_oob:
  - 0.9099347205222358
  - 0.9062627498980008
  - 0.9045287637698899
  - 0.895858833129335
  - 0.9092207262341901
  train_f1_samples:
  - 0.9107507139942881
  - 0.906670746634027
  - 0.9051407588739291
  - 0.8961648306813546
  - 0.9098327213382293
  train_f1_samples_oob:
  - 0.9099347205222359
  - 0.9062627498980008
  - 0.9045287637698898
  - 0.895858833129335
  - 0.90922072623419
  train_f1_weighted:
  - 0.9192271777313354
  - 0.9086362826338769
  - 0.9144841181614716
  - 0.9020339608711702
  - 0.9159144470630085
  train_f1_weighted_oob:
  - 0.917307720811656
  - 0.9047120496599247
  - 0.911238086768346
  - 0.9006718346253229
  - 0.9134502793958527
  train_jaccard_macro:
  - 0.8367502745951854
  - 0.8297726979069602
  - 0.8277398787362975
  - 0.8123041701811284
  - 0.8353444157957451
  train_jaccard_macro_oob:
  - 0.8353816292921608
  - 0.8291897417082873
  - 0.8267366366209218
  - 0.8117917457907529
  - 0.834263534862625
  train_jaccard_micro:
  - 0.8361269781814776
  - 0.829275118947663
  - 0.8267188373392957
  - 0.8118647200147847
  - 0.8345808383233533
  train_jaccard_micro_oob:
  - 0.834752503041078
  - 0.8285927445677516
  - 0.8256983240223463
  - 0.8113625866050809
  - 0.8335515242191883
  train_jaccard_samples:
  - 0.8528127968165509
  - 0.8484868241600425
  - 0.8467614130446752
  - 0.8355923417713779
  - 0.8510356376761836
  train_jaccard_samples_oob:
  - 0.8515934664024573
  - 0.8475292462355326
  - 0.8455934556046503
  - 0.8350251765721391
  - 0.8497904274319846
  train_jaccard_weighted:
  - 0.8510465672686036
  - 0.8329881797006401
  - 0.8429199169802682
  - 0.821977671642022
  - 0.8458524462356831
  train_jaccard_weighted_oob:
  - 0.847818822988826
  - 0.8265532006404984
  - 0.8374641378752216
  - 0.8196908347583666
  - 0.8415652149107586
  train_label_ranking_average_precision_score:
  - 0.7965621439822014
  - 0.8006207229463038
  - 0.8077890010327023
  - 0.8055347273491646
  - 0.7969872730628542
  train_label_ranking_average_precision_score_oob:
  - 0.768050671206518
  - 0.7432687100091603
  - 0.7703215725661695
  - 0.7637604958722983
  - 0.7621143789410564
  train_matthews_corrcoef_macro:
  - 0.4349599021490281
  - 0.38197821771256735
  - 0.39146944970602676
  - 0.386623659978475
  - 0.4128782394058715
  train_matthews_corrcoef_macro_oob:
  - 0.4152494460206836
  - 0.3622265521775233
  - 0.3618964823080805
  - 0.3794781772730737
  - 0.40149166538541853
  train_matthews_corrcoef_micro:
  - 0.46266867831342995
  - 0.40776099421775647
  - 0.42201041546772167
  - 0.41441511566481054
  - 0.44932163836532996
  train_matthews_corrcoef_micro_oob:
  - 0.4402541095071195
  - 0.3822002327107169
  - 0.3906871316992915
  - 0.40439046590671085
  - 0.4337750000713897
  train_matthews_corrcoef_samples:
  - 0.2311631544651649
  - 0.2030691964783912
  - 0.22306092133407968
  - 0.19715895242869974
  - 0.22535794088558006
  train_matthews_corrcoef_samples_oob:
  - 0.21429046961237588
  - 0.1826989123423412
  - 0.1917859712839441
  - 0.1885837706019333
  - 0.20912608350000284
  train_matthews_corrcoef_weighted:
  - 0.53731798778519
  - 0.46978300911139753
  - 0.4969039862211886
  - 0.48277451457914594
  - 0.5222489812707377
  train_matthews_corrcoef_weighted_oob:
  - 0.5172616945686482
  - 0.43873274485042346
  - 0.46188885365738325
  - 0.470568137449053
  - 0.5063840154081765
  train_ndgc:
  - 0.39727000712940447
  - 0.41974445895122486
  - 0.4159240862516404
  - 0.4054747040570261
  - 0.40333472108875845
  train_ndgc_oob:
  - 0.3766327953161191
  - 0.37916545438624544
  - 0.38869125707760327
  - 0.37539356176732014
  - 0.3772400898053967
  train_neg_coverage_error:
  - -2.1782945736434107
  - -2.1569767441860463
  - -2.2771317829457365
  - -2.2868217054263567
  - -2.191860465116279
  train_neg_coverage_error_oob:
  - -3.0232558139534884
  - -3.143410852713178
  - -3.2771317829457365
  - -3.2325581395348837
  - -2.939922480620155
  train_neg_hamming_loss_macro:
  - -0.08924928600571196
  - -0.09332925336597306
  - -0.094859241126071
  - -0.10383516931864546
  - -0.0901672786617707
  train_neg_hamming_loss_macro_oob:
  - -0.09006527947776417
  - -0.09373725010199918
  - -0.09547123623011014
  - -0.10414116687066505
  - -0.09077927376580985
  train_neg_hamming_loss_micro:
  - -0.08924928600571196
  - -0.09332925336597307
  - -0.094859241126071
  - -0.10383516931864545
  - -0.09016727866177071
  train_neg_hamming_loss_micro_oob:
  - -0.09006527947776417
  - -0.09373725010199918
  - -0.09547123623011015
  - -0.10414116687066503
  - -0.09077927376580987
  train_neg_hamming_loss_samples:
  - -0.08924928600571194
  - -0.09332925336597306
  - -0.09485924112607098
  - -0.10383516931864545
  - -0.09016727866177071
  train_neg_hamming_loss_samples_oob:
  - -0.09006527947776417
  - -0.09373725010199918
  - -0.09547123623011014
  - -0.10414116687066502
  - -0.09077927376580987
  train_neg_hamming_loss_weighted:
  - -0.08077282226866465
  - -0.09136371736612314
  - -0.08551588183852847
  - -0.09796603912882983
  - -0.08408555293699142
  train_neg_hamming_loss_weighted_oob:
  - -0.08269227918834393
  - -0.09528795034007545
  - -0.088761913231654
  - -0.09932816537467701
  - -0.0865497206041472
  train_neg_label_ranking_loss:
  - -0.051499742214516496
  - -0.04984220208655914
  - -0.053845905038620495
  - -0.052593750678566004
  - -0.052767547090392504
  train_neg_label_ranking_loss_oob:
  - -0.08365986625220552
  - -0.090106505979454
  - -0.09737981482595025
  - -0.09218771487923334
  - -0.08602893850841867
  train_precision_macro:
  - 0.9107507139942882
  - 0.9066707466340268
  - 0.9051407588739291
  - 0.8961648306813546
  - 0.9098327213382292
  train_precision_macro_oob:
  - 0.9099347205222359
  - 0.9062627498980008
  - 0.9045287637698899
  - 0.8958588331293349
  - 0.9092207262341901
  train_precision_micro:
  - 0.9107507139942881
  - 0.9066707466340269
  - 0.905140758873929
  - 0.8961648306813546
  - 0.9098327213382293
  train_precision_micro_oob:
  - 0.9099347205222358
  - 0.9062627498980008
  - 0.9045287637698899
  - 0.895858833129335
  - 0.9092207262341901
  train_precision_samples:
  - 0.9107507139942881
  - 0.906670746634027
  - 0.9051407588739291
  - 0.8961648306813546
  - 0.9098327213382293
  train_precision_samples_oob:
  - 0.9099347205222359
  - 0.9062627498980008
  - 0.9045287637698898
  - 0.895858833129335
  - 0.90922072623419
  train_precision_weighted:
  - 0.9192271777313354
  - 0.9086362826338769
  - 0.9144841181614716
  - 0.9020339608711702
  - 0.9159144470630085
  train_precision_weighted_oob:
  - 0.917307720811656
  - 0.9047120496599247
  - 0.911238086768346
  - 0.9006718346253229
  - 0.9134502793958527
  train_recall_macro:
  - 0.9107507139942882
  - 0.9066707466340268
  - 0.9051407588739291
  - 0.8961648306813546
  - 0.9098327213382292
  train_recall_macro_oob:
  - 0.9099347205222359
  - 0.9062627498980008
  - 0.9045287637698899
  - 0.8958588331293349
  - 0.9092207262341901
  train_recall_micro:
  - 0.9107507139942881
  - 0.9066707466340269
  - 0.905140758873929
  - 0.8961648306813546
  - 0.9098327213382293
  train_recall_micro_oob:
  - 0.9099347205222358
  - 0.9062627498980008
  - 0.9045287637698899
  - 0.895858833129335
  - 0.9092207262341901
  train_recall_samples:
  - 0.9107507139942881
  - 0.906670746634027
  - 0.9051407588739291
  - 0.8961648306813546
  - 0.9098327213382293
  train_recall_samples_oob:
  - 0.9099347205222359
  - 0.9062627498980008
  - 0.9045287637698898
  - 0.895858833129335
  - 0.90922072623419
  train_recall_weighted:
  - 0.9192271777313354
  - 0.9086362826338769
  - 0.9144841181614716
  - 0.9020339608711702
  - 0.9159144470630085
  train_recall_weighted_oob:
  - 0.917307720811656
  - 0.9047120496599247
  - 0.911238086768346
  - 0.9006718346253229
  - 0.9134502793958527
  train_roc_auc_macro:
  - 0.9491544909125783
  - 0.9402845417106694
  - 0.9429335450466778
  - 0.9427304321502241
  - 0.9455651273691671
  train_roc_auc_macro_oob:
  - 0.9104157612526056
  - 0.8889984670381751
  - 0.8905931816847106
  - 0.9047655831575204
  - 0.9093870560678958
  train_roc_auc_micro:
  - 0.9437490561835762
  - 0.9372112092700329
  - 0.9370457706414327
  - 0.9359889971723143
  - 0.9441726276034655
  train_roc_auc_micro_oob:
  - 0.9156016434406278
  - 0.9011441004341613
  - 0.9012217439646738
  - 0.9079682231767586
  - 0.9191412254275527
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9531530784185928
  - 0.9448344104146252
  - 0.9488874242385901
  - 0.9460255772723122
  - 0.9507496723503737
  train_roc_auc_weighted_oob:
  - 0.9165242983220951
  - 0.90004895035221
  - 0.9021872415121223
  - 0.9100193452867151
  - 0.9188425199514431
start: 2023-12-12 17:12:59.428848
wrapper: null
