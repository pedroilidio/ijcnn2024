active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/IDMzMzMz87/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAMAAAAAAAAAQwAAAAAAAAABAAAAAAAAACEAAAAAAAADwPw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:07:06.522341
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__4
  params: {}
hash: 7e3fc11ed18a4fc42b514e178894d608db8558e875658a18b1ed82030465f5e6
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7e3fc11_20231221T230619830823_embedding_proba_weak__4_CHD_49.yml
results:
  fit_time:
  - 28.96133828163147
  - 29.434252738952637
  - 29.250081062316895
  - 31.307642221450806
  - 29.748523235321045
  score_time:
  - 4.2950849533081055
  - 4.257206916809082
  - 4.319615364074707
  - 4.653781890869141
  - 4.58240270614624
  test_average_precision_macro:
  - 0.5150890708041986
  - 0.5185127950236517
  - 0.5306993494866775
  - 0.5350596444643417
  - 0.5125409763397429
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6703229966160527
  - 0.6660432742601048
  - 0.6672979909749219
  - 0.695318774566537
  - 0.6584885379610876
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.777236971484759
  - 0.7995893719806764
  - 0.785117227319062
  - 0.80366512345679
  - 0.7643181818181816
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6347699657786372
  - 0.6355670177737268
  - 0.6562120121148208
  - 0.6542259908966225
  - 0.6284534818935102
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7123893805309734
  - 0.681159420289855
  - 0.7033639143730887
  - 0.70679012345679
  - 0.7000000000000001
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7123893805309734
  - 0.6811594202898551
  - 0.7033639143730887
  - 0.7067901234567902
  - 0.7
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7123893805309736
  - 0.681159420289855
  - 0.7033639143730887
  - 0.70679012345679
  - 0.7
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.669297893990318
  - 0.6373365764670111
  - 0.6619668437147915
  - 0.6692708333333334
  - 0.6608391608391608
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5727936916101407
  - 0.5385024611199615
  - 0.5621277651713043
  - 0.5647443386847796
  - 0.5602378856986443
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5532646048109966
  - 0.5164835164835165
  - 0.5424528301886793
  - 0.5465393794749404
  - 0.5384615384615384
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.597862314676474
  - 0.5624204780726519
  - 0.5959966638865721
  - 0.5836860670194004
  - 0.5809641873278237
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5090613161513574
  - 0.4743297955406957
  - 0.5011875948624539
  - 0.5094921027508652
  - 0.5011487149795839
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.777236971484759
  - 0.7995893719806765
  - 0.7942915392456676
  - 0.8036651234567901
  - 0.7824999999999999
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1673922590723045
  - 0.12738646298984754
  - 0.1436396800873543
  - 0.11977090472649903
  - 0.14152774630665155
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.45071691359640426
  - 0.3950653102182458
  - 0.4248379736651579
  - 0.4230217115244236
  - 0.4340050937160939
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4753827629668895
  - 0.4104851674389976
  - 0.4487778212175041
  - 0.449494790159419
  - 0.4532411375048507
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1675903580831722
  - 0.14508569052540835
  - 0.1468177795076416
  - 0.10574435001280635
  - 0.1424602235007623
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8461784021375204
  - 0.870127639371757
  - 0.8520669983534785
  - 0.8786279200522138
  - 0.8355255452258268
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.566371681415929
  - -3.6
  - -3.596330275229358
  - -3.75
  - -3.7181818181818183
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.28761061946902655
  - -0.31884057971014496
  - -0.29663608562691135
  - -0.29320987654320985
  - -0.3
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.28761061946902655
  - -0.3188405797101449
  - -0.2966360856269113
  - -0.2932098765432099
  - -0.3
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.28761061946902655
  - -0.3188405797101449
  - -0.29663608562691135
  - -0.2932098765432099
  - -0.29999999999999993
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3307021060096821
  - -0.36266342353298875
  - -0.33803315628520847
  - -0.3307291666666667
  - -0.3391608391608392
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20629301868239922
  - -0.2061352657004831
  - -0.2049949031600408
  - -0.20151748971193417
  - -0.2073232323232323
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7123893805309734
  - 0.681159420289855
  - 0.7033639143730887
  - 0.70679012345679
  - 0.7000000000000001
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7123893805309734
  - 0.6811594202898551
  - 0.7033639143730887
  - 0.7067901234567902
  - 0.7
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7123893805309736
  - 0.681159420289855
  - 0.7033639143730887
  - 0.70679012345679
  - 0.7
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.669297893990318
  - 0.6373365764670111
  - 0.6619668437147915
  - 0.6692708333333334
  - 0.6608391608391608
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7123893805309734
  - 0.681159420289855
  - 0.7033639143730887
  - 0.70679012345679
  - 0.7000000000000001
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7123893805309734
  - 0.6811594202898551
  - 0.7033639143730887
  - 0.7067901234567902
  - 0.7
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7123893805309736
  - 0.681159420289855
  - 0.7033639143730887
  - 0.70679012345679
  - 0.7
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.669297893990318
  - 0.6373365764670111
  - 0.6619668437147915
  - 0.6692708333333334
  - 0.6608391608391608
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5698613620235683
  - 0.6013027219833449
  - 0.5398583824792147
  - 0.570374038052004
  - 0.5237145659050346
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7869485015639341
  - 0.7756006369867756
  - 0.77643702752817
  - 0.7866415895061728
  - 0.7800474926143375
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7937069813176006
  - 0.793864734299517
  - .nan
  - 0.7984825102880657
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6097271623320535
  - 0.6028076985738277
  - 0.5914087568696526
  - 0.5960100030162148
  - 0.5828261903566522
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8463938546066981
  - 0.8407092315577716
  - 0.8508468900079316
  - 0.8436653178201284
  - 0.8382991064860267
  train_average_precision_macro_oob:
  - 0.6855382901237403
  - 0.6874189197762393
  - 0.7183878809941778
  - 0.7008393085376315
  - 0.687681731493174
  train_average_precision_micro:
  - 0.828759371678852
  - 0.8209453404336896
  - 0.8316974675494986
  - 0.8190016045018182
  - 0.8156733694868425
  train_average_precision_micro_oob:
  - 0.8171924416385941
  - 0.8079327953303195
  - 0.8127928857898092
  - 0.8038014175953846
  - 0.799316298419433
  train_average_precision_samples:
  - 0.884247737556561
  - 0.8880902777777777
  - 0.8906327852516194
  - 0.8693791946308724
  - 0.8837796504369538
  train_average_precision_samples_oob:
  - 0.8794180492709904
  - 0.8802935606060606
  - 0.8793659691081215
  - 0.8587248322147651
  - 0.8714450686641699
  train_average_precision_weighted:
  - 0.8233382829751423
  - 0.8131811762138785
  - 0.8298447283735642
  - 0.8163505090596264
  - 0.8137240960450296
  train_average_precision_weighted_oob:
  - 0.8017915540654956
  - 0.7931022785265293
  - 0.8040374102608941
  - 0.7951183419797628
  - 0.7870602620768771
  train_f1_macro:
  - 0.8536953242835595
  - 0.856060606060606
  - 0.8542600896860986
  - 0.859433258762118
  - 0.846441947565543
  train_f1_macro_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966442
  - 0.8176029962546817
  train_f1_micro:
  - 0.8536953242835595
  - 0.8560606060606061
  - 0.8542600896860987
  - 0.8594332587621178
  - 0.846441947565543
  train_f1_micro_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966443
  - 0.8176029962546817
  train_f1_samples:
  - 0.8536953242835595
  - 0.856060606060606
  - 0.8542600896860987
  - 0.8594332587621177
  - 0.8464419475655431
  train_f1_samples_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966443
  - 0.8176029962546816
  train_f1_weighted:
  - 0.8265861803236579
  - 0.8303982230683802
  - 0.8234935354854347
  - 0.8296002096337667
  - 0.814230248838167
  train_f1_weighted_oob:
  - 0.7962595585765377
  - 0.8013981437410757
  - 0.7977371266825917
  - 0.8043424696109259
  - 0.7802517795164421
  train_jaccard_macro:
  - 0.7502831878320847
  - 0.7534824187660057
  - 0.7509367769123445
  - 0.7599444315861416
  - 0.740513116854007
  train_jaccard_macro_oob:
  - 0.7162688397456939
  - 0.7227352789829077
  - 0.7214256062729866
  - 0.7309096394528015
  - 0.7007603501536916
  train_jaccard_micro:
  - 0.7447368421052631
  - 0.7483443708609272
  - 0.7455968688845401
  - 0.7535142203334423
  - 0.7337662337662337
  train_jaccard_micro_oob:
  - 0.7087628865979382
  - 0.7159571010724732
  - 0.7142857142857143
  - 0.7225433526011561
  - 0.6914792524548622
  train_jaccard_samples:
  - 0.7763315116256291
  - 0.7821231798504524
  - 0.7777405703414672
  - 0.7865045469072314
  - 0.7661209202782235
  train_jaccard_samples_oob:
  - 0.7430843666137784
  - 0.7511501377410468
  - 0.7498097567604293
  - 0.7593402868570653
  - 0.7285081959239262
  train_jaccard_weighted:
  - 0.706367636553633
  - 0.7116041131150771
  - 0.7016734583322447
  - 0.7116749689252335
  - 0.6892064474397495
  train_jaccard_weighted_oob:
  - 0.6640219637221592
  - 0.6706211243999513
  - 0.6657991608755213
  - 0.676285162403507
  - 0.6429523187402643
  train_label_ranking_average_precision_score:
  - 0.8910350678733023
  - 0.894908459595959
  - 0.895117090184354
  - 0.8760906040268451
  - 0.8860268414481893
  train_label_ranking_average_precision_score_oob:
  - 0.886205379587732
  - 0.8871117424242418
  - 0.8838502740408565
  - 0.8654362416107376
  - 0.8736922596754056
  train_matthews_corrcoef_macro:
  - 0.5221901887859769
  - 0.5304506660068165
  - 0.5161219449285064
  - 0.5339846818228847
  - 0.5007843401360313
  train_matthews_corrcoef_macro_oob:
  - 0.4427069924180626
  - 0.4547115103614166
  - 0.4517618134267632
  - 0.4801218355175609
  - 0.4094445032157283
  train_matthews_corrcoef_micro:
  - 0.7296924407300927
  - 0.7305635257741651
  - 0.7276359893832871
  - 0.7349515851612738
  - 0.7152195663676194
  train_matthews_corrcoef_micro_oob:
  - 0.6838821956635232
  - 0.6887400953955543
  - 0.687599735691377
  - 0.694124205820234
  - 0.6584145484664417
  train_matthews_corrcoef_samples:
  - 0.7365901450644298
  - 0.7348268850302808
  - 0.7328423399768813
  - 0.7388759603724434
  - 0.7253944212007793
  train_matthews_corrcoef_samples_oob:
  - 0.6905407904505667
  - 0.694071741635445
  - 0.6943355101995254
  - 0.7005006974927145
  - 0.6720506263257215
  train_matthews_corrcoef_weighted:
  - 0.5871981489456815
  - 0.6043705350693573
  - 0.5720178926877241
  - 0.6018203963337366
  - 0.5517460936840163
  train_matthews_corrcoef_weighted_oob:
  - 0.4734220049102755
  - 0.4915412194689281
  - 0.48192107385359595
  - 0.5314433817343619
  - 0.4271297517832831
  train_ndgc:
  - 0.9233135698807241
  - 0.9252189149953846
  - 0.9275440083843722
  - 0.9101279499922676
  - 0.9233759564504098
  train_ndgc_oob:
  - 0.9201643784802925
  - 0.9204263019189122
  - 0.9203879140248378
  - 0.9036507112890118
  - 0.9153202243553011
  train_neg_coverage_error:
  - -3.1357466063348416
  - -3.1340909090909093
  - -3.0650224215246635
  - -3.0939597315436242
  - -3.107865168539326
  train_neg_coverage_error_oob:
  - -3.1900452488687785
  - -3.2181818181818183
  - -3.1547085201793723
  - -3.203579418344519
  - -3.191011235955056
  train_neg_hamming_loss_macro:
  - -0.14630467571644043
  - -0.14393939393939395
  - -0.14573991031390135
  - -0.14056674123788218
  - -0.15355805243445692
  train_neg_hamming_loss_macro_oob:
  - -0.1704374057315234
  - -0.16553030303030303
  - -0.16666666666666666
  - -0.16107382550335572
  - -0.18239700374531834
  train_neg_hamming_loss_micro:
  - -0.14630467571644043
  - -0.14393939393939395
  - -0.14573991031390135
  - -0.14056674123788218
  - -0.15355805243445692
  train_neg_hamming_loss_micro_oob:
  - -0.17043740573152338
  - -0.16553030303030303
  - -0.16666666666666666
  - -0.1610738255033557
  - -0.18239700374531836
  train_neg_hamming_loss_samples:
  - -0.14630467571644043
  - -0.14393939393939395
  - -0.14573991031390135
  - -0.14056674123788215
  - -0.15355805243445692
  train_neg_hamming_loss_samples_oob:
  - -0.1704374057315234
  - -0.16553030303030306
  - -0.16666666666666666
  - -0.1610738255033557
  - -0.18239700374531834
  train_neg_hamming_loss_weighted:
  - -0.17341381967634215
  - -0.16960177693161985
  - -0.17650646451456523
  - -0.17039979036623332
  - -0.18576975116183306
  train_neg_hamming_loss_weighted_oob:
  - -0.20374044142346223
  - -0.19860185625892435
  - -0.20226287331740825
  - -0.19565753038907402
  - -0.21974822048355783
  train_neg_label_ranking_loss:
  - -0.0994218200100553
  - -0.09705176767676767
  - -0.09085077229696065
  - -0.10020507084265473
  - -0.10267166042446942
  train_neg_label_ranking_loss_oob:
  - -0.10780542986425339
  - -0.1107070707070707
  - -0.1053126557050324
  - -0.11866144668158092
  - -0.11640449438202248
  train_precision_macro:
  - 0.8536953242835595
  - 0.856060606060606
  - 0.8542600896860986
  - 0.859433258762118
  - 0.846441947565543
  train_precision_macro_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966442
  - 0.8176029962546817
  train_precision_micro:
  - 0.8536953242835595
  - 0.8560606060606061
  - 0.8542600896860987
  - 0.8594332587621178
  - 0.846441947565543
  train_precision_micro_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966443
  - 0.8176029962546817
  train_precision_samples:
  - 0.8536953242835595
  - 0.856060606060606
  - 0.8542600896860987
  - 0.8594332587621177
  - 0.8464419475655431
  train_precision_samples_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966443
  - 0.8176029962546816
  train_precision_weighted:
  - 0.8265861803236579
  - 0.8303982230683802
  - 0.8234935354854347
  - 0.8296002096337667
  - 0.814230248838167
  train_precision_weighted_oob:
  - 0.7962595585765377
  - 0.8013981437410757
  - 0.7977371266825917
  - 0.8043424696109259
  - 0.7802517795164421
  train_recall_macro:
  - 0.8536953242835595
  - 0.856060606060606
  - 0.8542600896860986
  - 0.859433258762118
  - 0.846441947565543
  train_recall_macro_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966442
  - 0.8176029962546817
  train_recall_micro:
  - 0.8536953242835595
  - 0.8560606060606061
  - 0.8542600896860987
  - 0.8594332587621178
  - 0.846441947565543
  train_recall_micro_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966443
  - 0.8176029962546817
  train_recall_samples:
  - 0.8536953242835595
  - 0.856060606060606
  - 0.8542600896860987
  - 0.8594332587621177
  - 0.8464419475655431
  train_recall_samples_oob:
  - 0.8295625942684767
  - 0.834469696969697
  - 0.8333333333333334
  - 0.8389261744966443
  - 0.8176029962546816
  train_recall_weighted:
  - 0.8265861803236579
  - 0.8303982230683802
  - 0.8234935354854347
  - 0.8296002096337667
  - 0.814230248838167
  train_recall_weighted_oob:
  - 0.7962595585765377
  - 0.8013981437410757
  - 0.7977371266825917
  - 0.8043424696109259
  - 0.7802517795164421
  train_roc_auc_macro:
  - 0.8716184282015168
  - 0.8692839506012956
  - 0.8813306642135882
  - 0.8728164161190474
  - 0.8680752892838273
  train_roc_auc_macro_oob:
  - 0.8111300903880871
  - 0.8248412397504293
  - 0.8502580728461423
  - 0.828384579962251
  - 0.8299103987295161
  train_roc_auc_micro:
  - 0.9066672848395986
  - 0.9054364637140768
  - 0.9107071480011838
  - 0.9057836669182574
  - 0.9020136798999603
  train_roc_auc_micro_oob:
  - 0.8936358130760962
  - 0.8908700538045145
  - 0.8956922913757447
  - 0.8895094664763066
  - 0.8875679643447711
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8273569938414128
  - 0.8223950672253512
  - 0.8414420042408658
  - 0.8260583717729648
  - 0.8225337137885756
  train_roc_auc_weighted_oob:
  - 0.8126883712415686
  - 0.8044192124998553
  - 0.8246391243651982
  - 0.8061634807302974
  - 0.8054831948993363
start: 2023-12-21 23:06:19.830823
wrapper: null
