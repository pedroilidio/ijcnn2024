active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MjMzMzMz87+ZmZmZmZkBwM7MzMzMzPw/zszMzMzM/D+QmZmZmZnJvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz8z84MzMzMzPzP2RmZmZmZgbAODMzMzMz8z+QmZmZmZnpvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzA0DMzMzMzMwEwGhmZmZmZvY/aGZmZmZm9j/MzMzMzMwEwA==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L+gmZmZmZnJP6CZmZmZmck/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:55:43.544810
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__0
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 72c0794b11cbf7487438769c893b0ace4a46dd9935faa04a00d57175927791fa
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/72c0794_20231212T165533680680_embedding_proba__0_birds.yml
results:
  fit_time:
  - 1.7293736934661865
  - 1.7032790184020996
  - 1.71329665184021
  - 1.746673345565796
  - 1.7154102325439453
  score_time:
  - 1.4071471691131592
  - 1.360825538635254
  - 1.3632245063781738
  - 1.354288101196289
  - 1.382335901260376
  test_average_precision_macro:
  - 0.4845491337915788
  - 0.577655020107209
  - 0.512423327354885
  - 0.5289192020440293
  - 0.4992741332456858
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.469933802128928
  - 0.5741964518534165
  - 0.49715167086030876
  - 0.5965892112486182
  - 0.49362732123604486
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.34905307111189465
  - 0.3329397024164466
  - 0.3329537925468158
  - 0.32891604519511497
  - 0.355392694021285
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5439360100511332
  - 0.6571021971570442
  - 0.5632930214432561
  - 0.6526940448930548
  - 0.5976795358389279
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768667
  - 0.9534883720930232
  - 0.9502243982048143
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768666
  - 0.9534883720930233
  - 0.9502243982048144
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768666
  - 0.9534883720930233
  - 0.9502243982048144
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9287903371191636
  - 0.928149947934745
  - 0.924403581515534
  - 0.928124031007752
  - 0.9290443048718384
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9075601675166047
  - 0.9061185717897389
  - 0.9087308908424249
  - 0.9129811028729573
  - 0.906837355817224
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9059097978227061
  - 0.9044289044289044
  - 0.9066511085180864
  - 0.9111111111111111
  - 0.9051690633501749
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9104182077892897
  - 0.9107538624727705
  - 0.9117621396691165
  - 0.9173163820787683
  - 0.9105257398482879
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8688812790240407
  - 0.8676032105654741
  - 0.8616409075854802
  - 0.8679335568838669
  - 0.868909094901261
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.752153846305693
  - 0.8135598574552061
  - 0.7825661956475909
  - 0.8405439521718591
  - 0.7895012211530678
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.04691947233933636
  - 0.0548551168102901
  - 0.06128896069261757
  - 0.06715759768578479
  - 0.06310463610501536
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.24288781821874914
  - 0.27919783553557753
  - 0.2626389172909312
  - 0.2896351577246173
  - 0.32206729610450063
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.045947930340480746
  - 0.06054838373302325
  - 0.05355935928028206
  - 0.05104219997719654
  - 0.08497141831709869
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.12166523133711403
  - 0.13958452031101962
  - 0.1528965063650907
  - 0.1657445989046157
  - 0.16326284461665622
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.4207866874122956
  - 0.39033119621042545
  - 0.3982537862077126
  - 0.3769350260708425
  - 0.41957503655489553
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.2325581395348837
  - -3.046511627906977
  - -2.937984496124031
  - -2.364341085271318
  - -2.992248062015504
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04936760505915953
  - -0.05018359853121175
  - -0.04895960832313342
  - -0.046511627906976744
  - -0.04977560179518564
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.049367605059159526
  - -0.05018359853121175
  - -0.04895960832313342
  - -0.046511627906976744
  - -0.049775601795185635
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.049367605059159526
  - -0.05018359853121175
  - -0.04895960832313342
  - -0.04651162790697674
  - -0.049775601795185635
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07120966288083651
  - -0.07185005206525513
  - -0.07559641848446608
  - -0.07187596899224806
  - -0.0709556951281616
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0941670466636267
  - -0.08565920703403604
  - -0.08432612062913021
  - -0.06036695039773015
  - -0.07732748138014896
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768667
  - 0.9534883720930232
  - 0.9502243982048143
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768666
  - 0.9534883720930233
  - 0.9502243982048144
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768666
  - 0.9534883720930233
  - 0.9502243982048144
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9287903371191636
  - 0.928149947934745
  - 0.924403581515534
  - 0.928124031007752
  - 0.9290443048718384
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768667
  - 0.9534883720930232
  - 0.9502243982048143
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768666
  - 0.9534883720930233
  - 0.9502243982048144
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9506323949408405
  - 0.9498164014687882
  - 0.9510403916768666
  - 0.9534883720930233
  - 0.9502243982048144
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9287903371191636
  - 0.928149947934745
  - 0.924403581515534
  - 0.928124031007752
  - 0.9290443048718384
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8782798607401765
  - 0.9033528932172926
  - 0.8713521775056139
  - .nan
  - 0.9096966473048267
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8918401004213156
  - 0.9170633668085983
  - 0.9005835653573169
  - 0.9311229578675838
  - 0.9136326643912963
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8786227110663839
  - 0.9152613103743159
  - 0.876938729900531
  - .nan
  - 0.9050353194385019
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9455757198213036
  - 0.9478824525834589
  - 0.939304986909979
  - 0.9403681421512625
  - 0.9363438292358901
  train_average_precision_macro_oob:
  - 0.4447625907860991
  - 0.42359695601501374
  - 0.4262399271537194
  - 0.4424888870022133
  - 0.4590796700824976
  train_average_precision_micro:
  - 0.8703100814409813
  - 0.8636718661200544
  - 0.8533565479114763
  - 0.8569176656032786
  - 0.8533345023014459
  train_average_precision_micro_oob:
  - 0.5237921248668518
  - 0.5103276072360022
  - 0.5065704767826333
  - 0.5070375247039272
  - 0.5154287471667491
  train_average_precision_samples:
  - 0.4899118678479143
  - 0.5089796357819614
  - 0.49158568660022145
  - 0.5108242586440261
  - 0.4922020733357942
  train_average_precision_samples_oob:
  - 0.3384663961653508
  - 0.342008481941635
  - 0.338631859286784
  - 0.34606095784988855
  - 0.33776483830503645
  train_average_precision_weighted:
  - 0.9405814472739359
  - 0.9397153993341915
  - 0.9325689644265728
  - 0.9331195295939585
  - 0.9253345860945528
  train_average_precision_weighted_oob:
  - 0.5581374784281906
  - 0.5424798357504804
  - 0.5390115738567375
  - 0.5464002606110115
  - 0.5480176232173051
  train_f1_macro:
  - 0.9558343533251735
  - 0.9557323541411666
  - 0.9565483476132188
  - 0.9548143614851079
  - 0.9565483476132188
  train_f1_macro_oob:
  - 0.9504283965728275
  - 0.9502243982048143
  - 0.9502243982048143
  - 0.9496124031007751
  - 0.9509383924928599
  train_f1_micro:
  - 0.9558343533251734
  - 0.9557323541411669
  - 0.956548347613219
  - 0.9548143614851081
  - 0.956548347613219
  train_f1_micro_oob:
  - 0.9504283965728274
  - 0.9502243982048144
  - 0.9502243982048144
  - 0.9496124031007752
  - 0.95093839249286
  train_f1_samples:
  - 0.9558343533251734
  - 0.9557323541411669
  - 0.9565483476132192
  - 0.9548143614851082
  - 0.956548347613219
  train_f1_samples_oob:
  - 0.9504283965728274
  - 0.9502243982048145
  - 0.9502243982048143
  - 0.9496124031007752
  - 0.9509383924928602
  train_f1_weighted:
  - 0.9396751568844591
  - 0.9387522361359573
  - 0.9425655223329642
  - 0.939134830966721
  - 0.9416467995141918
  train_f1_weighted_oob:
  - 0.926327057954965
  - 0.9250447227191413
  - 0.9272129937246215
  - 0.9263309447399658
  - 0.9277847750138696
  train_jaccard_macro:
  - 0.9164720946739695
  - 0.916373349558131
  - 0.9176511548798515
  - 0.9145831943624293
  - 0.9177035566274017
  train_jaccard_macro_oob:
  - 0.9073816983633747
  - 0.9071705952753215
  - 0.9069267052598141
  - 0.9058698344791168
  - 0.9081964505195678
  train_jaccard_micro:
  - 0.9154049037804044
  - 0.9152178159796835
  - 0.9167155425219942
  - 0.9135356689762858
  - 0.9167155425219942
  train_jaccard_micro_oob:
  - 0.9055393586005831
  - 0.9051690633501749
  - 0.9051690633501749
  - 0.9040590405904059
  - 0.9064657267865824
  train_jaccard_samples:
  - 0.920421534425579
  - 0.9198849866569786
  - 0.9215440188392666
  - 0.9183110718626393
  - 0.9212495276322376
  train_jaccard_samples_oob:
  - 0.9114374315157936
  - 0.9107282926039246
  - 0.9109147629698693
  - 0.9095858046009716
  - 0.9119766566429863
  train_jaccard_weighted:
  - 0.8869387688777134
  - 0.8855798613071556
  - 0.8920019905186458
  - 0.8859666815823571
  - 0.8904030831017749
  train_jaccard_weighted_oob:
  - 0.8646180457516133
  - 0.8628563542380151
  - 0.8661440989310846
  - 0.86465191061523
  - 0.8670604951333037
  train_label_ranking_average_precision_score:
  - 0.9589041159099294
  - 0.9585920388827361
  - 0.9489500276854927
  - 0.9526847237603051
  - 0.9534423834133134
  train_label_ranking_average_precision_score_oob:
  - 0.8074586442273658
  - 0.7916208850424098
  - 0.7959962003720547
  - 0.7879214229661665
  - 0.7990051483825558
  train_matthews_corrcoef_macro:
  - 0.1129282059622365
  - 0.09972002774350129
  - 0.13091625895522113
  - 0.11740364738855955
  - 0.11550051420175052
  train_matthews_corrcoef_macro_oob:
  - 0.059791732546149855
  - 0.053579140538825266
  - 0.05006776157950245
  - 0.04865024018557573
  - 0.04982431826389013
  train_matthews_corrcoef_micro:
  - 0.4089931608429523
  - 0.39749042570810683
  - 0.4244352469619679
  - 0.3937118446563817
  - 0.41023853539696953
  train_matthews_corrcoef_micro_oob:
  - 0.2653704759087198
  - 0.24152124940422565
  - 0.26051362568296454
  - 0.2509417129707133
  - 0.25860137114120707
  train_matthews_corrcoef_samples:
  - 0.10885077527291996
  - 0.1024746955212832
  - 0.11461479623119913
  - 0.1049870817090412
  - 0.10322961324687488
  train_matthews_corrcoef_samples_oob:
  - 0.0513186881874302
  - 0.042242948195659526
  - 0.05604925633462754
  - 0.05253408532171595
  - 0.05019671065473529
  train_matthews_corrcoef_weighted:
  - 0.2619538920398529
  - 0.23877909177891457
  - 0.28124538776870905
  - 0.2558871253160996
  - 0.2568404867968867
  train_matthews_corrcoef_weighted_oob:
  - 0.14812615880448207
  - 0.1297928660273615
  - 0.13094805810686705
  - 0.12541994104429355
  - 0.1315680018299233
  train_ndgc:
  - 0.5048206393651322
  - 0.5238758329706973
  - 0.5093770062655415
  - 0.5278373751462903
  - 0.5074693704893393
  train_ndgc_oob:
  - 0.3970367411186707
  - 0.40512564008603685
  - 0.4008295259322007
  - 0.4106861402536792
  - 0.3982565913776154
  train_neg_coverage_error:
  - -1.2383720930232558
  - -1.2403100775193798
  - -1.2751937984496124
  - -1.2829457364341086
  - -1.2228682170542635
  train_neg_coverage_error_oob:
  - -2.8430232558139537
  - -2.9748062015503876
  - -2.9748062015503876
  - -3.0852713178294575
  - -2.953488372093023
  train_neg_hamming_loss_macro:
  - -0.04416564667482661
  - -0.04426764585883313
  - -0.043451652386780906
  - -0.04518563851489188
  - -0.043451652386780906
  train_neg_hamming_loss_macro_oob:
  - -0.04957160342717258
  - -0.04977560179518564
  - -0.04977560179518564
  - -0.050387596899224806
  - -0.04906160750713995
  train_neg_hamming_loss_micro:
  - -0.0441656466748266
  - -0.04426764585883313
  - -0.043451652386780906
  - -0.04518563851489188
  - -0.043451652386780906
  train_neg_hamming_loss_micro_oob:
  - -0.04957160342717258
  - -0.049775601795185635
  - -0.049775601795185635
  - -0.050387596899224806
  - -0.04906160750713994
  train_neg_hamming_loss_samples:
  - -0.04416564667482659
  - -0.04426764585883313
  - -0.0434516523867809
  - -0.04518563851489188
  - -0.0434516523867809
  train_neg_hamming_loss_samples_oob:
  - -0.049571603427172574
  - -0.049775601795185635
  - -0.049775601795185635
  - -0.0503875968992248
  - -0.04906160750713994
  train_neg_hamming_loss_weighted:
  - -0.06032484311554078
  - -0.06124776386404294
  - -0.057434477667035806
  - -0.06086516903327911
  - -0.05835320048580811
  train_neg_hamming_loss_weighted_oob:
  - -0.07367294204503508
  - -0.07495527728085868
  - -0.07278700627537837
  - -0.07366905526003428
  - -0.07221522498613048
  train_neg_label_ranking_loss:
  - -0.008232507125290982
  - -0.008871684978901121
  - -0.0097987627271143
  - -0.009289295374281694
  - -0.008635677984173196
  train_neg_label_ranking_loss_oob:
  - -0.07797273500932872
  - -0.08223023382479606
  - -0.08034256760744449
  - -0.08460142529482474
  - -0.08240467400436621
  train_precision_macro:
  - 0.9558343533251735
  - 0.9557323541411666
  - 0.9565483476132188
  - 0.9548143614851079
  - 0.9565483476132188
  train_precision_macro_oob:
  - 0.9504283965728275
  - 0.9502243982048143
  - 0.9502243982048143
  - 0.9496124031007751
  - 0.9509383924928599
  train_precision_micro:
  - 0.9558343533251734
  - 0.9557323541411669
  - 0.956548347613219
  - 0.9548143614851081
  - 0.956548347613219
  train_precision_micro_oob:
  - 0.9504283965728274
  - 0.9502243982048144
  - 0.9502243982048144
  - 0.9496124031007752
  - 0.95093839249286
  train_precision_samples:
  - 0.9558343533251734
  - 0.9557323541411669
  - 0.9565483476132192
  - 0.9548143614851082
  - 0.956548347613219
  train_precision_samples_oob:
  - 0.9504283965728274
  - 0.9502243982048145
  - 0.9502243982048143
  - 0.9496124031007752
  - 0.9509383924928602
  train_precision_weighted:
  - 0.9396751568844591
  - 0.9387522361359573
  - 0.9425655223329642
  - 0.939134830966721
  - 0.9416467995141918
  train_precision_weighted_oob:
  - 0.926327057954965
  - 0.9250447227191413
  - 0.9272129937246215
  - 0.9263309447399658
  - 0.9277847750138696
  train_recall_macro:
  - 0.9558343533251735
  - 0.9557323541411666
  - 0.9565483476132188
  - 0.9548143614851079
  - 0.9565483476132188
  train_recall_macro_oob:
  - 0.9504283965728275
  - 0.9502243982048143
  - 0.9502243982048143
  - 0.9496124031007751
  - 0.9509383924928599
  train_recall_micro:
  - 0.9558343533251734
  - 0.9557323541411669
  - 0.956548347613219
  - 0.9548143614851081
  - 0.956548347613219
  train_recall_micro_oob:
  - 0.9504283965728274
  - 0.9502243982048144
  - 0.9502243982048144
  - 0.9496124031007752
  - 0.95093839249286
  train_recall_samples:
  - 0.9558343533251734
  - 0.9557323541411669
  - 0.9565483476132192
  - 0.9548143614851082
  - 0.956548347613219
  train_recall_samples_oob:
  - 0.9504283965728274
  - 0.9502243982048145
  - 0.9502243982048143
  - 0.9496124031007752
  - 0.9509383924928602
  train_recall_weighted:
  - 0.9396751568844591
  - 0.9387522361359573
  - 0.9425655223329642
  - 0.939134830966721
  - 0.9416467995141918
  train_recall_weighted_oob:
  - 0.926327057954965
  - 0.9250447227191413
  - 0.9272129937246215
  - 0.9263309447399658
  - 0.9277847750138696
  train_roc_auc_macro:
  - 0.9957409475327296
  - 0.995510776532978
  - 0.9951396916521861
  - 0.9952731729239472
  - 0.9949719673289493
  train_roc_auc_macro_oob:
  - 0.871212703793599
  - 0.8687120842453185
  - 0.8970367413288493
  - 0.8811967654118414
  - 0.8800518463195658
  train_roc_auc_micro:
  - 0.9905262779753565
  - 0.9897816342425345
  - 0.989692854833495
  - 0.9897818698760311
  - 0.9898670777707821
  train_roc_auc_micro_oob:
  - 0.9116445224495662
  - 0.9020241606734497
  - 0.9111377970737816
  - 0.9035448055885333
  - 0.9065325815770844
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9936577152840084
  - 0.9929172560197178
  - 0.9927326230369224
  - 0.992468955762948
  - 0.9922857017073783
  train_roc_auc_weighted_oob:
  - 0.8964087113577489
  - 0.8855801092352553
  - 0.9004255666561864
  - 0.8904525274971085
  - 0.8915682365381952
start: 2023-12-12 16:55:33.680680
wrapper: null
