active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0AAnJmZmZnZPwCcmZmZmdk/gDMzMzMzC0BAZmZmZmYawA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 21:46:17.475657
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__2
  params: {}
hash: c7cf731816e32437252821f9eb43bd189b32277442fe69ce2491b8b02c886a2a
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c7cf731_20231222T214330961026_embedding__2_scene.yml
results:
  fit_time:
  - 100.55179762840271
  - 95.2817587852478
  - 106.05997610092163
  - 109.47705316543579
  - 111.43949913978577
  score_time:
  - 8.320958137512207
  - 9.084180116653442
  - 8.130156755447388
  - 8.278367519378662
  - 7.857645273208618
  test_average_precision_macro:
  - 0.8128422874141545
  - 0.8222875196513769
  - 0.8172610586826853
  - 0.8243061862749403
  - 0.8369078093594299
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8289423257342006
  - 0.8185802113958136
  - 0.826998507433437
  - 0.8291168008545448
  - 0.8433292706775374
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8569589422407793
  - 0.8692134442134443
  - 0.8561677061677062
  - 0.868915620641562
  - 0.8768954918032787
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8001928812174056
  - 0.8124714745551529
  - 0.8051505523206697
  - 0.8124770290240994
  - 0.8242947115094441
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8208072372999303
  - 0.8218988218988219
  - 0.8215523215523216
  - 0.8204323570432357
  - 0.8241120218579234
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8208072372999304
  - 0.8218988218988219
  - 0.8215523215523216
  - 0.8204323570432357
  - 0.8241120218579235
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8208072372999303
  - 0.821898821898822
  - 0.8215523215523217
  - 0.8204323570432357
  - 0.8241120218579236
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8181580029179194
  - 0.8194572031781334
  - 0.8191107340043512
  - 0.8175991194775135
  - 0.8214636775850588
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6966524054535269
  - 0.6981748684025542
  - 0.6976752662146913
  - 0.6961633074817901
  - 0.7014152120881345
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6960755385069342
  - 0.6976470588235294
  - 0.6971478976771538
  - 0.6955365060597103
  - 0.7008422887017136
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.698727507704543
  - 0.6997326997326996
  - 0.6994356994356993
  - 0.6979976090854751
  - 0.702722482435597
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6929069159530628
  - 0.6947144176836088
  - 0.6942137052256095
  - 0.6921470357998087
  - 0.6976478849375436
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8569589422407788
  - 0.8692134442134439
  - 0.8561677061677062
  - 0.8689156206415618
  - 0.8768954918032786
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.02808596225228346
  - 0.023080505319340337
  - 0.03260861241515523
  - 0.03429893110006895
  - 0.0335128879287328
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.06893928808945313
  - 0.05643736021612825
  - 0.056370855860447495
  - 0.05633236023009993
  - 0.056458738555587945
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.006263048016701462
  - 0.0033938784449764575
  - 0.004158004158004158
  - 0.0041841004184100415
  - 0.004098360655737705
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.02830284226967561
  - 0.023080505319340337
  - 0.03254286036263496
  - 0.03147608584349365
  - 0.03205204775244257
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8947622475742031
  - 0.9032952029962278
  - 0.8934877642100774
  - 0.9034062694182425
  - 0.9090628569252077
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.501043841336117
  - -1.4324324324324325
  - -1.4948024948024947
  - -1.4623430962343096
  - -1.4221311475409837
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1791927627000696
  - -0.1781011781011781
  - -0.17844767844767848
  - -0.1795676429567643
  - -0.1758879781420765
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1791927627000696
  - -0.1781011781011781
  - -0.17844767844767845
  - -0.1795676429567643
  - -0.1758879781420765
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17919276270006962
  - -0.1781011781011781
  - -0.17844767844767842
  - -0.17956764295676428
  - -0.17588797814207646
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1818419970820806
  - -0.1805427968218666
  - -0.180889265995649
  - -0.18240088052248649
  - -0.17853632241494116
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.08094989561586638
  - -0.0711018711018711
  - -0.08264033264033264
  - -0.07515690376569037
  - -0.07100409836065573
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8208072372999303
  - 0.8218988218988219
  - 0.8215523215523216
  - 0.8204323570432357
  - 0.8241120218579234
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8208072372999304
  - 0.8218988218988219
  - 0.8215523215523216
  - 0.8204323570432357
  - 0.8241120218579235
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8208072372999303
  - 0.821898821898822
  - 0.8215523215523217
  - 0.8204323570432357
  - 0.8241120218579236
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8181580029179194
  - 0.8194572031781334
  - 0.8191107340043512
  - 0.8175991194775135
  - 0.8214636775850588
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8208072372999303
  - 0.8218988218988219
  - 0.8215523215523216
  - 0.8204323570432357
  - 0.8241120218579234
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8208072372999304
  - 0.8218988218988219
  - 0.8215523215523216
  - 0.8204323570432357
  - 0.8241120218579235
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8208072372999303
  - 0.821898821898822
  - 0.8215523215523217
  - 0.8204323570432357
  - 0.8241120218579236
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8181580029179194
  - 0.8194572031781334
  - 0.8191107340043512
  - 0.8175991194775135
  - 0.8214636775850588
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9295648295684092
  - 0.9407944541313286
  - 0.9363313773559762
  - 0.9393158008418069
  - 0.9401898392712592
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9398332360980919
  - 0.9459891080365028
  - 0.9446346384187111
  - 0.9447241266114178
  - 0.9475213139005861
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9190501043841337
  - 0.928898128898129
  - 0.9173596673596673
  - 0.9248430962343097
  - 0.9289959016393443
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.923066523820963
  - 0.9361369319545432
  - 0.9310531733426631
  - 0.9340922314815854
  - 0.9346455253656623
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9247914291250278
  - 0.9238444712809831
  - 0.9239282776410471
  - 0.9255584990569519
  - 0.9174882946706252
  train_average_precision_macro_oob:
  - 0.8184107040611491
  - 0.8226105593276434
  - 0.8159838338672166
  - 0.8194200639116033
  - 0.8052432728708109
  train_average_precision_micro:
  - 0.9241436386790073
  - 0.9239571322550243
  - 0.924324071847446
  - 0.9269316677910322
  - 0.9199403484885045
  train_average_precision_micro_oob:
  - 0.8259021806198691
  - 0.8332617358084885
  - 0.8244654510991054
  - 0.8303740394972654
  - 0.8178258972369102
  train_average_precision_samples:
  - 0.9299446749654219
  - 0.9269124264451367
  - 0.9304517133956387
  - 0.9286158631415241
  - 0.9246569393781483
  train_average_precision_samples_oob:
  - 0.8645228215767636
  - 0.8618769470404984
  - 0.8613793700242298
  - 0.8631156039398651
  - 0.8551285391697065
  train_average_precision_weighted:
  - 0.9198981736795077
  - 0.9188892610071325
  - 0.9186203272152983
  - 0.9207844867034068
  - 0.9127442689660087
  train_average_precision_weighted_oob:
  - 0.8071330456998252
  - 0.810750357730249
  - 0.8038859602084458
  - 0.8079877985442999
  - 0.7934624534106242
  train_f1_macro:
  - 0.8463001383125864
  - 0.8464001384562132
  - 0.8467462789892696
  - 0.8486262312078797
  - 0.8458398471426091
  train_f1_macro_oob:
  - 0.8220954356846474
  - 0.8216510903426792
  - 0.8213914849428869
  - 0.8222740625540004
  - 0.8216953274274795
  train_f1_micro:
  - 0.8463001383125864
  - 0.8464001384562132
  - 0.8467462789892697
  - 0.8486262312078797
  - 0.845839847142609
  train_f1_micro_oob:
  - 0.8220954356846473
  - 0.8216510903426791
  - 0.8213914849428868
  - 0.8222740625540004
  - 0.8216953274274796
  train_f1_samples:
  - 0.8463001383125865
  - 0.8464001384562134
  - 0.8467462789892697
  - 0.8486262312078797
  - 0.8458398471426091
  train_f1_samples_oob:
  - 0.8220954356846473
  - 0.8216510903426792
  - 0.8213914849428869
  - 0.8222740625540005
  - 0.8216953274274796
  train_f1_weighted:
  - 0.8428884947615863
  - 0.842459548484853
  - 0.8431300477432909
  - 0.8450573201656886
  - 0.8420384871633861
  train_f1_weighted_oob:
  - 0.8195339427919871
  - 0.818994181526535
  - 0.8187660558658769
  - 0.8197014317758171
  - 0.8190637652791035
  train_jaccard_macro:
  - 0.7347844740305711
  - 0.7352697338199096
  - 0.7355258811351782
  - 0.7384285346135165
  - 0.7343253152607714
  train_jaccard_macro_oob:
  - 0.6984840381998763
  - 0.6978723002724371
  - 0.6974828243885915
  - 0.6987525534651948
  - 0.697937898833656
  train_jaccard_micro:
  - 0.7335531245316949
  - 0.7337033980946666
  - 0.734223756284235
  - 0.7370553804592526
  - 0.7328617653698548
  train_jaccard_micro_oob:
  - 0.6979304271246147
  - 0.6972901520158625
  - 0.6969162995594713
  - 0.6981879539285453
  - 0.6973538733692047
  train_jaccard_samples:
  - 0.7410714285714284
  - 0.7413588488354842
  - 0.7417915245018047
  - 0.7449085388432198
  - 0.7405270602248193
  train_jaccard_samples_oob:
  - 0.700133372851215
  - 0.699587103792711
  - 0.6989937200217573
  - 0.7004986546199609
  - 0.6997568177870417
  train_jaccard_weighted:
  - 0.7297692056899161
  - 0.7294822712757363
  - 0.730190158965852
  - 0.7331590416641277
  - 0.728767955538011
  train_jaccard_weighted_oob:
  - 0.6948517176625381
  - 0.694103080589126
  - 0.6937618871878869
  - 0.6951018516741349
  - 0.6942073874124015
  train_label_ranking_average_precision_score:
  - 0.9299446749654217
  - 0.926912426445136
  - 0.9304517133956383
  - 0.9286158631415239
  - 0.9246569393781483
  train_label_ranking_average_precision_score_oob:
  - 0.8645228215767634
  - 0.8618769470404987
  - 0.8613793700242293
  - 0.8631156039398649
  - 0.8551285391697069
  train_matthews_corrcoef_macro:
  - 0.3303048161486254
  - 0.3294457339693711
  - 0.3406450733435343
  - 0.3478490077195429
  - 0.33179904684751277
  train_matthews_corrcoef_macro_oob:
  - 0.02440606182886299
  - 0.033742154977320096
  - 0.02262547018018103
  - 0.038580043267235846
  - 0.05309299710718058
  train_matthews_corrcoef_micro:
  - 0.3431847996198047
  - 0.3459792944260714
  - 0.34788875088011684
  - 0.35920018933738
  - 0.3453557827743116
  train_matthews_corrcoef_micro_oob:
  - 0.059824013193038775
  - 0.056360626344775386
  - 0.039857814017793
  - 0.06612789791962642
  - 0.07719057853820907
  train_matthews_corrcoef_samples:
  - 0.14684610400027945
  - 0.1493076334932704
  - 0.15019811327762572
  - 0.15990869295186097
  - 0.14875657566656583
  train_matthews_corrcoef_samples_oob:
  - 0.0044774146950382135
  - 0.004153686396677051
  - 0.0015043440270514164
  - 0.005702436495593572
  - 0.007050454470106673
  train_matthews_corrcoef_weighted:
  - 0.32114879044300343
  - 0.3156240498485013
  - 0.33051276973007504
  - 0.337505707359811
  - 0.31850772333852256
  train_matthews_corrcoef_weighted_oob:
  - 0.02451232915177531
  - 0.031420139590328584
  - 0.02199291661008702
  - 0.03628918346167763
  - 0.05008607571099362
  train_ndgc:
  - 0.9486454433415099
  - 0.9463500064312884
  - 0.9489258375472815
  - 0.9475030970260124
  - 0.9446978265855708
  train_ndgc_oob:
  - 0.9002115427492112
  - 0.8982809566374037
  - 0.897993659498345
  - 0.8990946720443923
  - 0.8930277571225633
  train_neg_coverage_error:
  - -1.2738589211618256
  - -1.2933541017653167
  - -1.27466251298027
  - -1.2778641783307414
  - -1.2949452840020845
  train_neg_coverage_error_oob:
  - -1.463174273858921
  - -1.4854620976116304
  - -1.4766355140186915
  - -1.4712286158631416
  - -1.4997394476289734
  train_neg_hamming_loss_macro:
  - -0.15369986168741356
  - -0.15359986154378677
  - -0.15325372101073037
  - -0.15137376879212025
  - -0.154160152857391
  train_neg_hamming_loss_macro_oob:
  - -0.1779045643153527
  - -0.17834890965732086
  - -0.17860851505711317
  - -0.17772593744599965
  - -0.17830467257252045
  train_neg_hamming_loss_micro:
  - -0.15369986168741356
  - -0.15359986154378677
  - -0.15325372101073034
  - -0.15137376879212028
  - -0.15416015285739101
  train_neg_hamming_loss_micro_oob:
  - -0.1779045643153527
  - -0.17834890965732086
  - -0.1786085150571132
  - -0.17772593744599965
  - -0.17830467257252042
  train_neg_hamming_loss_samples:
  - -0.1536998616874135
  - -0.15359986154378677
  - -0.15325372101073034
  - -0.15137376879212028
  - -0.154160152857391
  train_neg_hamming_loss_samples_oob:
  - -0.1779045643153527
  - -0.17834890965732084
  - -0.17860851505711317
  - -0.17772593744599963
  - -0.1783046725725204
  train_neg_hamming_loss_weighted:
  - -0.15711150523841355
  - -0.15754045151514695
  - -0.15686995225670908
  - -0.1549426798343115
  - -0.15796151283661403
  train_neg_hamming_loss_weighted_oob:
  - -0.1804660572080129
  - -0.18100581847346503
  - -0.18123394413412308
  - -0.18029856822418286
  - -0.18093623472089645
  train_neg_label_ranking_loss:
  - -0.03865404564315353
  - -0.04200415368639668
  - -0.038603322949117336
  - -0.039593053395541734
  - -0.041655086561287705
  train_neg_label_ranking_loss_oob:
  - -0.07601141078838174
  - -0.07969885773624091
  - -0.07788738894657898
  - -0.07728097459823742
  - -0.08237942215274159
  train_precision_macro:
  - 0.8463001383125864
  - 0.8464001384562132
  - 0.8467462789892696
  - 0.8486262312078797
  - 0.8458398471426091
  train_precision_macro_oob:
  - 0.8220954356846474
  - 0.8216510903426792
  - 0.8213914849428869
  - 0.8222740625540004
  - 0.8216953274274795
  train_precision_micro:
  - 0.8463001383125864
  - 0.8464001384562132
  - 0.8467462789892697
  - 0.8486262312078797
  - 0.845839847142609
  train_precision_micro_oob:
  - 0.8220954356846473
  - 0.8216510903426791
  - 0.8213914849428868
  - 0.8222740625540004
  - 0.8216953274274796
  train_precision_samples:
  - 0.8463001383125865
  - 0.8464001384562134
  - 0.8467462789892697
  - 0.8486262312078797
  - 0.8458398471426091
  train_precision_samples_oob:
  - 0.8220954356846473
  - 0.8216510903426792
  - 0.8213914849428869
  - 0.8222740625540005
  - 0.8216953274274796
  train_precision_weighted:
  - 0.8428884947615863
  - 0.842459548484853
  - 0.8431300477432909
  - 0.8450573201656886
  - 0.8420384871633861
  train_precision_weighted_oob:
  - 0.8195339427919871
  - 0.818994181526535
  - 0.8187660558658769
  - 0.8197014317758171
  - 0.8190637652791035
  train_recall_macro:
  - 0.8463001383125864
  - 0.8464001384562132
  - 0.8467462789892696
  - 0.8486262312078797
  - 0.8458398471426091
  train_recall_macro_oob:
  - 0.8220954356846474
  - 0.8216510903426792
  - 0.8213914849428869
  - 0.8222740625540004
  - 0.8216953274274795
  train_recall_micro:
  - 0.8463001383125864
  - 0.8464001384562132
  - 0.8467462789892697
  - 0.8486262312078797
  - 0.845839847142609
  train_recall_micro_oob:
  - 0.8220954356846473
  - 0.8216510903426791
  - 0.8213914849428868
  - 0.8222740625540004
  - 0.8216953274274796
  train_recall_samples:
  - 0.8463001383125865
  - 0.8464001384562134
  - 0.8467462789892697
  - 0.8486262312078797
  - 0.8458398471426091
  train_recall_samples_oob:
  - 0.8220954356846473
  - 0.8216510903426792
  - 0.8213914849428869
  - 0.8222740625540005
  - 0.8216953274274796
  train_recall_weighted:
  - 0.8428884947615863
  - 0.842459548484853
  - 0.8431300477432909
  - 0.8450573201656886
  - 0.8420384871633861
  train_recall_weighted_oob:
  - 0.8195339427919871
  - 0.818994181526535
  - 0.8187660558658769
  - 0.8197014317758171
  - 0.8190637652791035
  train_roc_auc_macro:
  - 0.9688722252579268
  - 0.9683832557677695
  - 0.9690088350592468
  - 0.9705124214822717
  - 0.9665852143838226
  train_roc_auc_macro_oob:
  - 0.9357319314994784
  - 0.9343258316569685
  - 0.9344675968869668
  - 0.9366267416251266
  - 0.9315553490807801
  train_roc_auc_micro:
  - 0.9728366127732232
  - 0.9720396301254858
  - 0.9735719822004624
  - 0.9743550189822084
  - 0.9713764660857542
  train_roc_auc_micro_oob:
  - 0.9432220283689743
  - 0.943068948921123
  - 0.9428929976906593
  - 0.94460589077203
  - 0.9407844999838233
  train_roc_auc_samples:
  - 0.9613459543568464
  - 0.9579958463136032
  - 0.9613966770508827
  - 0.9604069466044582
  - 0.9583449134387123
  train_roc_auc_samples_oob:
  - 0.9239885892116184
  - 0.920301142263759
  - 0.9221126110534211
  - 0.9227190254017626
  - 0.9176205778472584
  train_roc_auc_weighted:
  - 0.9659740209908896
  - 0.9655234548912336
  - 0.9658028623835673
  - 0.9678092084341158
  - 0.963890113093102
  train_roc_auc_weighted_oob:
  - 0.9302674457247775
  - 0.928662622344831
  - 0.9287212151110651
  - 0.9312117849833369
  - 0.9259477946278661
start: 2023-12-22 21:43:30.961026
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
