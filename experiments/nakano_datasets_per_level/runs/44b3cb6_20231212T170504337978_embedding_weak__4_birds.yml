active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mpmZmZmZ6T8zMzMzMzPzvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zszMzMzM/D+ZmZmZmZkBwJCZmZmZmcm/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            yMzMzMzM/L84MzMzMzPzP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+amZmZmZnpP5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b80MzMzMzMDQJiZmZmZmfm/NDMzMzMzA0CYmZmZmZn5vw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:05:34.048827
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__4
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 44b3cb6a4c0045242e5bfc89a4fee4381aa6cbe2504cecc57598abace5b46c4c
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/44b3cb6_20231212T170504337978_embedding_weak__4_birds.yml
results:
  fit_time:
  - 14.64513111114502
  - 14.580658197402954
  - 15.659903526306152
  - 15.55538272857666
  - 15.702109813690186
  score_time:
  - 3.4715421199798584
  - 3.7579267024993896
  - 3.813931465148926
  - 3.9265029430389404
  - 3.847993850708008
  test_average_precision_macro:
  - 0.2960365051243539
  - 0.3640277162650586
  - 0.3800556173382724
  - 0.36345387685772623
  - 0.34356068131572287
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.27383562866220196
  - 0.27515224534712973
  - 0.2619380022122441
  - 0.3129250217570279
  - 0.2779264639569348
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.2742868951298583
  - 0.2797108858782365
  - 0.3069712489086634
  - 0.28329169857372627
  - 0.25322348510789006
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4356584483781132
  - 0.5143636465069017
  - 0.4423257813996646
  - 0.4723399890128017
  - 0.42772710042076767
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9224806201550388
  - 0.93390452876377
  - 0.9359445124439006
  - 0.9400244798041616
  - 0.9375764993880049
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9224806201550387
  - 0.9339045287637698
  - 0.9359445124439004
  - 0.9400244798041616
  - 0.9375764993880049
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9224806201550387
  - 0.9339045287637698
  - 0.9359445124439004
  - 0.9400244798041616
  - 0.9375764993880049
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9100200976169969
  - 0.9186652131782945
  - 0.9116161616161617
  - 0.9198764534883721
  - 0.9194626901000059
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8576373899386338
  - 0.8771918335366308
  - 0.8820008728421668
  - 0.8884777394151819
  - 0.8839557891517191
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8561151079136691
  - 0.8760045924225028
  - 0.879601226993865
  - 0.8868360277136259
  - 0.8824884792626728
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.871677911647578
  - 0.8907773227916645
  - 0.8890356393659393
  - 0.8953689193628527
  - 0.8920458537580209
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8362000766159254
  - 0.8507802378080951
  - 0.8407481459577218
  - 0.8532888726854178
  - 0.8525400492343369
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7238992982306335
  - 0.7525791029325001
  - 0.7488317140249424
  - 0.7484079776434938
  - 0.7028358882086653
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.20777523697471673
  - 0.14379006293026267
  - 0.1901176365549755
  - 0.1955546506248961
  - 0.21727166619312782
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.28548567569086436
  - 0.2143702615752971
  - 0.21338037264516213
  - 0.25015180244258445
  - 0.27015004653732133
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.09700923075694873
  - 0.05847492334313086
  - 0.058753216068025416
  - 0.05388718255889201
  - 0.07997523062221037
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.30006412013394756
  - 0.22551048079162705
  - 0.20825265303812499
  - 0.2626728746970037
  - 0.26236159772100254
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.3563794415496938
  - 0.3490955755803091
  - 0.38181574552489195
  - 0.3573269599472051
  - 0.3373926061828686
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7751937984496124
  - -3.364341085271318
  - -3.868217054263566
  - -3.5968992248062017
  - -3.868217054263566
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07751937984496127
  - -0.06609547123623011
  - -0.06405548755609958
  - -0.05997552019583845
  - -0.06242350061199511
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07751937984496124
  - -0.06609547123623011
  - -0.06405548755609955
  - -0.05997552019583843
  - -0.06242350061199511
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07751937984496124
  - -0.06609547123623011
  - -0.06405548755609955
  - -0.05997552019583843
  - -0.0624235006119951
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08997990238300316
  - -0.08133478682170543
  - -0.0883838383838384
  - -0.08012354651162791
  - -0.0805373098999941
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.11836688163637546
  - -0.11521556545496353
  - -0.11410295384303593
  - -0.1090527942443127
  - -0.1248521630874572
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9224806201550388
  - 0.93390452876377
  - 0.9359445124439006
  - 0.9400244798041616
  - 0.9375764993880049
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9224806201550387
  - 0.9339045287637698
  - 0.9359445124439004
  - 0.9400244798041616
  - 0.9375764993880049
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9224806201550387
  - 0.9339045287637698
  - 0.9359445124439004
  - 0.9400244798041616
  - 0.9375764993880049
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9100200976169969
  - 0.9186652131782945
  - 0.9116161616161617
  - 0.9198764534883721
  - 0.9194626901000059
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9224806201550388
  - 0.93390452876377
  - 0.9359445124439006
  - 0.9400244798041616
  - 0.9375764993880049
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9224806201550387
  - 0.9339045287637698
  - 0.9359445124439004
  - 0.9400244798041616
  - 0.9375764993880049
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9224806201550387
  - 0.9339045287637698
  - 0.9359445124439004
  - 0.9400244798041616
  - 0.9375764993880049
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9100200976169969
  - 0.9186652131782945
  - 0.9116161616161617
  - 0.9198764534883721
  - 0.9194626901000059
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8473299127263587
  - 0.8437476705300823
  - 0.8898117074257819
  - 0.8455961240345239
  - 0.8594834893041635
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8655472398132156
  - 0.8767252744296169
  - 0.8790165562481216
  - 0.8751311612139474
  - 0.8624407738878652
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8578664096196617
  - 0.8801145762164814
  - 0.877582474814266
  - 0.8714111235792353
  - 0.8601764853900173
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.40221138856126387
  - 0.4714261532547481
  - 0.46360748914362765
  - 0.41907302721630346
  - 0.4372262563270128
  train_average_precision_macro_oob:
  - 0.3110225842071011
  - 0.3520774370810669
  - 0.3512002657049725
  - 0.3153614096554356
  - 0.34152708480345706
  train_average_precision_micro:
  - 0.3592923657183282
  - 0.39989247468213535
  - 0.3917129090198253
  - 0.36723365235424366
  - 0.39544093830947935
  train_average_precision_micro_oob:
  - 0.2793919709084051
  - 0.3013287818410123
  - 0.30507913876894316
  - 0.28524708735995585
  - 0.3190522951860878
  train_average_precision_samples:
  - 0.3752980710611525
  - 0.3931515109567435
  - 0.39908898352939054
  - 0.38529024673646767
  - 0.378984671838354
  train_average_precision_samples_oob:
  - 0.27457434036886896
  - 0.29311822574017476
  - 0.3039959053376746
  - 0.28649768109269935
  - 0.30162196978314953
  train_average_precision_weighted:
  - 0.5337493304691362
  - 0.610156471038822
  - 0.5936345812414311
  - 0.5459132634910888
  - 0.5654297569298876
  train_average_precision_weighted_oob:
  - 0.41006804789162915
  - 0.4472806907500003
  - 0.4482847264743809
  - 0.4133739207744732
  - 0.4426616410200647
  train_f1_macro:
  - 0.9263565891472867
  - 0.9343125254997959
  - 0.9341085271317829
  - 0.9308445532435741
  - 0.9353325173398612
  train_f1_macro_oob:
  - 0.9324765401876786
  - 0.9371685026519788
  - 0.9384944920440637
  - 0.9331905344757242
  - 0.9379844961240309
  train_f1_micro:
  - 0.9263565891472868
  - 0.934312525499796
  - 0.9341085271317829
  - 0.9308445532435741
  - 0.9353325173398613
  train_f1_micro_oob:
  - 0.9324765401876784
  - 0.9371685026519788
  - 0.9384944920440637
  - 0.9331905344757242
  - 0.937984496124031
  train_f1_samples:
  - 0.9263565891472868
  - 0.934312525499796
  - 0.9341085271317829
  - 0.9308445532435742
  - 0.9353325173398613
  train_f1_samples_oob:
  - 0.9324765401876786
  - 0.9371685026519787
  - 0.9384944920440638
  - 0.9331905344757241
  - 0.937984496124031
  train_f1_weighted:
  - 0.9196315215605443
  - 0.9273366345388627
  - 0.9264494044967181
  - 0.9211358210275002
  - 0.9255265537225607
  train_f1_weighted_oob:
  - 0.9201991008349389
  - 0.9241459604444837
  - 0.9240918946211648
  - 0.9175767088159873
  - 0.9224917367009056
  train_jaccard_macro:
  - 0.8634212533185238
  - 0.8774979529268251
  - 0.8771715317615274
  - 0.8714200394731452
  - 0.8791759513380057
  train_jaccard_macro_oob:
  - 0.8744376798002
  - 0.8826650814453582
  - 0.8851473325332156
  - 0.8759244882929861
  - 0.884245900453336
  train_jaccard_micro:
  - 0.8628158844765343
  - 0.8767228177641654
  - 0.8763636363636363
  - 0.8706353749284488
  - 0.8785207894232612
  train_jaccard_micro_oob:
  - 0.8734951270781578
  - 0.8817658349328215
  - 0.8841164600749496
  - 0.87474901998279
  - 0.8832116788321168
  train_jaccard_samples:
  - 0.8763022646566632
  - 0.8885295702687007
  - 0.8878792589527339
  - 0.8819926653630732
  - 0.8897206023638446
  train_jaccard_samples_oob:
  - 0.8856650737944975
  - 0.8924349336828272
  - 0.8939473604825813
  - 0.8856818665050886
  - 0.8937437891971092
  train_jaccard_weighted:
  - 0.8517329634733928
  - 0.8651488926208462
  - 0.863394327613162
  - 0.8544000713368417
  - 0.861769671075815
  train_jaccard_weighted_oob:
  - 0.8530454231475414
  - 0.8600861008174765
  - 0.8595720280131773
  - 0.8488087620945637
  - 0.8570139523693021
  train_label_ranking_average_precision_score:
  - 0.8326624121464234
  - 0.8447018985536426
  - 0.8583913091107851
  - 0.8387786188294906
  - 0.8363490129236257
  train_label_ranking_average_precision_score_oob:
  - 0.7319386814541404
  - 0.7446686133370741
  - 0.7632982309190695
  - 0.7399860531857217
  - 0.7589863108684202
  train_matthews_corrcoef_macro:
  - 0.3177658275442704
  - 0.32380597823809937
  - 0.31925300125823225
  - 0.3420594037091355
  - 0.35421058025467306
  train_matthews_corrcoef_macro_oob:
  - 0.27773208616476686
  - 0.23754481487756052
  - 0.2419073701694792
  - 0.2496036192096335
  - 0.27916793636719883
  train_matthews_corrcoef_micro:
  - 0.3433445182365998
  - 0.3413857808051504
  - 0.3557911718110499
  - 0.3508979057415889
  - 0.3889057180731677
  train_matthews_corrcoef_micro_oob:
  - 0.3129176944380945
  - 0.2840183615305232
  - 0.31283041356234625
  - 0.28503832900346954
  - 0.3333583425172076
  train_matthews_corrcoef_samples:
  - 0.13054911364079588
  - 0.12518348067862206
  - 0.13562909874018808
  - 0.12793718135080046
  - 0.1561745101963516
  train_matthews_corrcoef_samples_oob:
  - 0.11102407620027341
  - 0.08349233151366398
  - 0.09519771673107555
  - 0.0856191527386463
  - 0.10852936223107751
  train_matthews_corrcoef_weighted:
  - 0.3885039472990793
  - 0.3825768381278619
  - 0.40185519941821674
  - 0.3882634196985716
  - 0.4087186464944143
  train_matthews_corrcoef_weighted_oob:
  - 0.3263809086064282
  - 0.28639577304368286
  - 0.3146512621621479
  - 0.30029709733602783
  - 0.3433207727317352
  train_ndgc:
  - 0.42791366321832863
  - 0.44284086749494417
  - 0.4429727913833697
  - 0.4357970281120997
  - 0.4298862409765652
  train_ndgc_oob:
  - 0.3536841825302166
  - 0.36973518148609996
  - 0.37463547685472903
  - 0.3628720525351369
  - 0.37272141795363944
  train_neg_coverage_error:
  - -2.0
  - -1.9767441860465116
  - -1.7693798449612403
  - -1.928294573643411
  - -1.8565891472868217
  train_neg_coverage_error_oob:
  - -3.645348837209302
  - -3.633720930232558
  - -3.2364341085271318
  - -3.488372093023256
  - -3.2093023255813953
  train_neg_hamming_loss_macro:
  - -0.0736434108527132
  - -0.06568747450020401
  - -0.06589147286821706
  - -0.06915544675642596
  - -0.06466748266013873
  train_neg_hamming_loss_macro_oob:
  - -0.06752345981232151
  - -0.06283149734802122
  - -0.061505507955936366
  - -0.06680946552427582
  - -0.06201550387596901
  train_neg_hamming_loss_micro:
  - -0.07364341085271318
  - -0.065687474500204
  - -0.06589147286821706
  - -0.06915544675642595
  - -0.06466748266013872
  train_neg_hamming_loss_micro_oob:
  - -0.0675234598123215
  - -0.06283149734802121
  - -0.06150550795593635
  - -0.0668094655242758
  - -0.06201550387596899
  train_neg_hamming_loss_samples:
  - -0.07364341085271317
  - -0.065687474500204
  - -0.06589147286821706
  - -0.06915544675642595
  - -0.0646674826601387
  train_neg_hamming_loss_samples_oob:
  - -0.0675234598123215
  - -0.06283149734802121
  - -0.06150550795593635
  - -0.0668094655242758
  - -0.062015503875968984
  train_neg_hamming_loss_weighted:
  - -0.08036847843945572
  - -0.07266336546113716
  - -0.07355059550328194
  - -0.07886417897249977
  - -0.07447344627743933
  train_neg_hamming_loss_weighted_oob:
  - -0.07980089916506103
  - -0.07585403955551624
  - -0.07590810537883513
  - -0.08242329118401275
  - -0.07750826329909437
  train_neg_label_ranking_loss:
  - -0.04232325582787279
  - -0.041270836499974664
  - -0.0331861349687957
  - -0.039564662328855214
  - -0.03679666634095499
  train_neg_label_ranking_loss_oob:
  - -0.11159858422597821
  - -0.10976031239369133
  - -0.09504683184146247
  - -0.10781510029971042
  - -0.09346596271185875
  train_precision_macro:
  - 0.9263565891472867
  - 0.9343125254997959
  - 0.9341085271317829
  - 0.9308445532435741
  - 0.9353325173398612
  train_precision_macro_oob:
  - 0.9324765401876786
  - 0.9371685026519788
  - 0.9384944920440637
  - 0.9331905344757242
  - 0.9379844961240309
  train_precision_micro:
  - 0.9263565891472868
  - 0.934312525499796
  - 0.9341085271317829
  - 0.9308445532435741
  - 0.9353325173398613
  train_precision_micro_oob:
  - 0.9324765401876784
  - 0.9371685026519788
  - 0.9384944920440637
  - 0.9331905344757242
  - 0.937984496124031
  train_precision_samples:
  - 0.9263565891472868
  - 0.934312525499796
  - 0.9341085271317829
  - 0.9308445532435742
  - 0.9353325173398613
  train_precision_samples_oob:
  - 0.9324765401876786
  - 0.9371685026519787
  - 0.9384944920440638
  - 0.9331905344757241
  - 0.937984496124031
  train_precision_weighted:
  - 0.9196315215605443
  - 0.9273366345388627
  - 0.9264494044967181
  - 0.9211358210275002
  - 0.9255265537225607
  train_precision_weighted_oob:
  - 0.9201991008349389
  - 0.9241459604444837
  - 0.9240918946211648
  - 0.9175767088159873
  - 0.9224917367009056
  train_recall_macro:
  - 0.9263565891472867
  - 0.9343125254997959
  - 0.9341085271317829
  - 0.9308445532435741
  - 0.9353325173398612
  train_recall_macro_oob:
  - 0.9324765401876786
  - 0.9371685026519788
  - 0.9384944920440637
  - 0.9331905344757242
  - 0.9379844961240309
  train_recall_micro:
  - 0.9263565891472868
  - 0.934312525499796
  - 0.9341085271317829
  - 0.9308445532435741
  - 0.9353325173398613
  train_recall_micro_oob:
  - 0.9324765401876784
  - 0.9371685026519788
  - 0.9384944920440637
  - 0.9331905344757242
  - 0.937984496124031
  train_recall_samples:
  - 0.9263565891472868
  - 0.934312525499796
  - 0.9341085271317829
  - 0.9308445532435742
  - 0.9353325173398613
  train_recall_samples_oob:
  - 0.9324765401876786
  - 0.9371685026519787
  - 0.9384944920440638
  - 0.9331905344757241
  - 0.937984496124031
  train_recall_weighted:
  - 0.9196315215605443
  - 0.9273366345388627
  - 0.9264494044967181
  - 0.9211358210275002
  - 0.9255265537225607
  train_recall_weighted_oob:
  - 0.9201991008349389
  - 0.9241459604444837
  - 0.9240918946211648
  - 0.9175767088159873
  - 0.9224917367009056
  train_roc_auc_macro:
  - 0.9500498597152915
  - 0.961429462586015
  - 0.960058542107843
  - 0.9560801130203412
  - 0.9577878884207369
  train_roc_auc_macro_oob:
  - 0.8636882148391944
  - 0.8785688295354439
  - 0.8835127928221416
  - 0.8828417768404443
  - 0.8876356943011934
  train_roc_auc_micro:
  - 0.9464869166607006
  - 0.9557854674002937
  - 0.9562026696915134
  - 0.9500336869506917
  - 0.9542147313442646
  train_roc_auc_micro_oob:
  - 0.87884015385206
  - 0.8827251513658788
  - 0.8912561782744338
  - 0.8853545367142682
  - 0.8939855948634137
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9565101483914726
  - 0.9677174024446336
  - 0.965812472397552
  - 0.9598516370022685
  - 0.9615272045166492
  train_roc_auc_weighted_oob:
  - 0.8750953910331839
  - 0.878665413458878
  - 0.8859391327323957
  - 0.8811802677012724
  - 0.88813475308749
start: 2023-12-12 17:05:04.337978
wrapper: null
