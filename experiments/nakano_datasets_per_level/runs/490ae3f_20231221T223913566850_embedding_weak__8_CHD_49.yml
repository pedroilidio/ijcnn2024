active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz878AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpvzQzMzMzM/M/zMzMzMzM/L80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAEAAAAAAAAAIwAAAAAAAAABAAAAAAAAA8L8AAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:46:57.177999
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__8
  params: {}
hash: 490ae3f66ad69b332078f4e805f1d3a2bb0107b7a8ed7e271a9de2a2db5e2543
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/490ae3f_20231221T223913566850_embedding_weak__8_CHD_49.yml
results:
  fit_time:
  - 424.4108784198761
  - 432.4344093799591
  - 428.295686006546
  - 441.0416533946991
  - 446.57042622566223
  score_time:
  - 4.74205470085144
  - 4.6788246631622314
  - 5.296101331710815
  - 4.747852563858032
  - 4.629197835922241
  test_average_precision_macro:
  - 0.5808288539036391
  - 0.5139754689871107
  - 0.5262669674013104
  - 0.5392922634758807
  - 0.4874548818553459
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7136081652699613
  - 0.6389733295888309
  - 0.7133347543326647
  - 0.6442607674745567
  - 0.6680163392691659
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7840978593272171
  - 0.7379385964912281
  - 0.7971585117227318
  - 0.7684771825396824
  - 0.7727352352352352
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7127815998565415
  - 0.619977561342895
  - 0.6627994670217583
  - 0.6324554812494828
  - 0.6168804672029409
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7033639143730888
  - 0.6842105263157895
  - 0.6926605504587157
  - 0.6994047619047619
  - 0.6861861861861862
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7033639143730887
  - 0.6842105263157895
  - 0.6926605504587156
  - 0.6994047619047619
  - 0.6861861861861862
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7033639143730887
  - 0.6842105263157894
  - 0.6926605504587158
  - 0.699404761904762
  - 0.6861861861861861
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6613149847094801
  - 0.6372027630050736
  - 0.6508628985693204
  - 0.6587301587301586
  - 0.6397033075478306
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5639456078107333
  - 0.5421252403123983
  - 0.5540648040895341
  - 0.5585407902711954
  - 0.5467249046411139
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5424528301886793
  - 0.52
  - 0.5298245614035088
  - 0.5377574370709383
  - 0.5222857142857142
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5784264664998611
  - 0.5610807321333637
  - 0.5598117478851423
  - 0.5647534013605442
  - 0.5650832650832652
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.502431870923483
  - 0.47591918630251007
  - 0.4916034501698626
  - 0.5009918740670981
  - 0.4785885150102168
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8024464831804279
  - 0.7379385964912283
  - 0.7971585117227318
  - 0.7684771825396827
  - 0.7817442442442444
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06027559087367546
  - 0.038936628612006224
  - 0.012449901682721393
  - 0.06905099058676058
  - 0.03498175351049447
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4191389072603978
  - 0.39321559761890335
  - 0.39685866524800917
  - 0.41431046762089774
  - 0.3902410912906195
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4248518546571431
  - 0.3919485339010721
  - 0.41125764860333075
  - 0.4279994796551164
  - 0.3920060303065709
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.05361559036252012
  - 0.03500226544215194
  - 0.010986410806481044
  - 0.05909385918765792
  - 0.028314729031345697
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8585603865704051
  - 0.8175813889608756
  - 0.8704325849902271
  - 0.8501845358910962
  - 0.8453136694448756
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8990825688073394
  - -3.8421052631578947
  - -3.8073394495412844
  - -3.892857142857143
  - -3.765765765765766
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29663608562691135
  - -0.31578947368421045
  - -0.3073394495412844
  - -0.3005952380952381
  - -0.3138138138138138
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2966360856269113
  - -0.3157894736842105
  - -0.3073394495412844
  - -0.3005952380952381
  - -0.3138138138138138
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29663608562691135
  - -0.31578947368421045
  - -0.30733944954128445
  - -0.3005952380952381
  - -0.3138138138138137
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33868501529051986
  - -0.36279723699492633
  - -0.34913710143067944
  - -0.3412698412698413
  - -0.36029669245216955
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2044597349643221
  - -0.25333820662768036
  - -0.19994903160040775
  - -0.22497519841269842
  - -0.21616616616616616
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7033639143730888
  - 0.6842105263157895
  - 0.6926605504587157
  - 0.6994047619047619
  - 0.6861861861861862
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7033639143730887
  - 0.6842105263157895
  - 0.6926605504587156
  - 0.6994047619047619
  - 0.6861861861861862
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7033639143730887
  - 0.6842105263157894
  - 0.6926605504587158
  - 0.699404761904762
  - 0.6861861861861861
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6613149847094801
  - 0.6372027630050736
  - 0.6508628985693204
  - 0.6587301587301586
  - 0.6397033075478306
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7033639143730888
  - 0.6842105263157895
  - 0.6926605504587157
  - 0.6994047619047619
  - 0.6861861861861862
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7033639143730887
  - 0.6842105263157895
  - 0.6926605504587156
  - 0.6994047619047619
  - 0.6861861861861862
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7033639143730887
  - 0.6842105263157894
  - 0.6926605504587158
  - 0.699404761904762
  - 0.6861861861861861
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6613149847094801
  - 0.6372027630050736
  - 0.6508628985693204
  - 0.6587301587301586
  - 0.6397033075478306
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.580362598036682
  - 0.5693804844742746
  - 0.5528028699767611
  - 0.5388744840898341
  - 0.5211645387954226
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7910310412871889
  - 0.7642861531170186
  - 0.7921100638491944
  - 0.7693865740740742
  - 0.7759551245975145
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7466617933723197
  - 0.8000509683995922
  - 0.7750248015873016
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6312111955393134
  - 0.5792520896308337
  - 0.5983000920238005
  - 0.5570641479792515
  - 0.5797368063245893
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8677183058153856
  - 0.8568832466161922
  - 0.8666179985653004
  - 0.8565522665752275
  - 0.8665553314192028
  train_average_precision_macro_oob:
  - 0.6203846872056359
  - 0.6161385642577056
  - 0.63211223961858
  - 0.6421049769665294
  - 0.6222192304724864
  train_average_precision_micro:
  - 0.7370724549581472
  - 0.7315441496386993
  - 0.7528228659612355
  - 0.7295403231687115
  - 0.7431063108584564
  train_average_precision_micro_oob:
  - 0.6898354085812195
  - 0.6918375167789854
  - 0.7075516993758176
  - 0.7066151180197928
  - 0.7011805323397823
  train_average_precision_samples:
  - 0.80324177877429
  - 0.8092214663643236
  - 0.8082461385151968
  - 0.8021977677451717
  - 0.8106106106106105
  train_average_precision_samples_oob:
  - 0.7798517688091678
  - 0.7823255228017132
  - 0.792059043348281
  - 0.7848382242287433
  - 0.7844844844844844
  train_average_precision_weighted:
  - 0.8216167504482292
  - 0.8103399044988269
  - 0.8220854466396298
  - 0.8086500139056232
  - 0.8186753453835008
  train_average_precision_weighted_oob:
  - 0.7278369606895008
  - 0.7243854647965676
  - 0.7408290827115542
  - 0.7499406348755868
  - 0.7274360142629238
  train_f1_macro:
  - 0.7884902840059791
  - 0.789493575207861
  - 0.7944693572496263
  - 0.7945823927765238
  - 0.7886636636636637
  train_f1_macro_oob:
  - 0.7122571001494769
  - 0.7176870748299319
  - 0.7223467862481315
  - 0.7212189616252823
  - 0.7173423423423424
  train_f1_micro:
  - 0.7884902840059791
  - 0.7894935752078609
  - 0.7944693572496263
  - 0.7945823927765236
  - 0.7886636636636637
  train_f1_micro_oob:
  - 0.7122571001494769
  - 0.717687074829932
  - 0.7223467862481315
  - 0.7212189616252822
  - 0.7173423423423423
  train_f1_samples:
  - 0.788490284005979
  - 0.789493575207861
  - 0.7944693572496261
  - 0.7945823927765236
  - 0.7886636636636636
  train_f1_samples_oob:
  - 0.7122571001494767
  - 0.717687074829932
  - 0.7223467862481314
  - 0.7212189616252822
  - 0.7173423423423423
  train_f1_weighted:
  - 0.7299931010693341
  - 0.7304340076642011
  - 0.7372925128542249
  - 0.7355364725567886
  - 0.7321289958365675
  train_f1_weighted_oob:
  - 0.6646139734704757
  - 0.6713483646733803
  - 0.6736259479257155
  - 0.6716641146663721
  - 0.6703400528465803
  train_jaccard_macro:
  - 0.686727321855607
  - 0.6888607324396389
  - 0.692293629329123
  - 0.6959002912268156
  - 0.6855801698376182
  train_jaccard_macro_oob:
  - 0.5753941399680391
  - 0.5817935525392302
  - 0.5881030811291932
  - 0.5866660724980385
  - 0.581080693838151
  train_jaccard_micro:
  - 0.6508328192473781
  - 0.6522010615048393
  - 0.6590204587724736
  - 0.6591760299625468
  - 0.6510691044313603
  train_jaccard_micro_oob:
  - 0.5531050493325594
  - 0.5596816976127321
  - 0.5653699912255046
  - 0.5639894086496028
  - 0.559262510974539
  train_jaccard_samples:
  - 0.6836216100790091
  - 0.6840729942770759
  - 0.6926766059053054
  - 0.6929055143502096
  - 0.6833011583011582
  train_jaccard_samples_oob:
  - 0.5878506396443616
  - 0.5931462339625605
  - 0.6013685865703803
  - 0.6005706858979997
  - 0.5923764673764673
  train_jaccard_weighted:
  - 0.601894879910204
  - 0.6033159615073718
  - 0.6091361309508916
  - 0.6095253445392979
  - 0.6037489700040153
  train_jaccard_weighted_oob:
  - 0.5075595600643316
  - 0.5152173474866465
  - 0.5191227363518931
  - 0.5158197471683832
  - 0.5142420842963424
  train_label_ranking_average_precision_score:
  - 0.8054839312406575
  - 0.8160241874527586
  - 0.8149725959142993
  - 0.808969776774517
  - 0.8151151151151147
  train_label_ranking_average_precision_score_oob:
  - 0.7820939212755353
  - 0.7891282438901481
  - 0.7987855007473835
  - 0.7916102332580884
  - 0.7889889889889886
  train_matthews_corrcoef_macro:
  - 0.3343530187245077
  - 0.3064478516759358
  - 0.3602316393204617
  - 0.3365093218546616
  - 0.3338349810168891
  train_matthews_corrcoef_macro_oob:
  - 0.12504943357808085
  - 0.12859244272978565
  - 0.15293544287910946
  - 0.14631017261793186
  - 0.13667755744858814
  train_matthews_corrcoef_micro:
  - 0.6202672114805172
  - 0.6233358734317743
  - 0.6297787708306493
  - 0.6337036213759372
  - 0.6183449063409658
  train_matthews_corrcoef_micro_oob:
  - 0.43782284018275325
  - 0.4490200760426793
  - 0.46214803126430404
  - 0.4578771929281978
  - 0.4492445486738832
  train_matthews_corrcoef_samples:
  - 0.6373887058840292
  - 0.6393998692800948
  - 0.6445771520075876
  - 0.6537504689168834
  - 0.6337338803084981
  train_matthews_corrcoef_samples_oob:
  - 0.45050104309826905
  - 0.4624352997239086
  - 0.47271192435489995
  - 0.46961767182579767
  - 0.46058380978044483
  train_matthews_corrcoef_weighted:
  - 0.2961368764697811
  - 0.25444401310408643
  - 0.32589456293446184
  - 0.29878415515154716
  - 0.29723030995219923
  train_matthews_corrcoef_weighted_oob:
  - 0.10292757730676318
  - 0.10665694263600163
  - 0.12710947197794914
  - 0.120213547703175
  - 0.11207819725020378
  train_ndgc:
  - 0.8683313610998122
  - 0.8739744735184694
  - 0.8732138111963159
  - 0.8657294058237305
  - 0.8746390440679243
  train_ndgc_oob:
  - 0.8529521434341951
  - 0.8553560561083967
  - 0.8631059000291296
  - 0.8549874926971194
  - 0.8578898595130723
  train_neg_coverage_error:
  - -3.5201793721973096
  - -3.54875283446712
  - -3.5291479820627805
  - -3.523702031602709
  - -3.518018018018018
  train_neg_coverage_error_oob:
  - -3.6995515695067263
  - -3.7120181405895694
  - -3.692825112107623
  - -3.670428893905192
  - -3.7364864864864864
  train_neg_hamming_loss_macro:
  - -0.21150971599402094
  - -0.21050642479213907
  - -0.2055306427503737
  - -0.20541760722347632
  - -0.21133633633633633
  train_neg_hamming_loss_macro_oob:
  - -0.2877428998505232
  - -0.28231292517006806
  - -0.2776532137518684
  - -0.27878103837471785
  - -0.28265765765765766
  train_neg_hamming_loss_micro:
  - -0.21150971599402094
  - -0.21050642479213907
  - -0.2055306427503737
  - -0.2054176072234763
  - -0.21133633633633633
  train_neg_hamming_loss_micro_oob:
  - -0.28774289985052315
  - -0.282312925170068
  - -0.27765321375186847
  - -0.27878103837471785
  - -0.28265765765765766
  train_neg_hamming_loss_samples:
  - -0.2115097159940209
  - -0.21050642479213907
  - -0.2055306427503737
  - -0.2054176072234763
  - -0.21133633633633633
  train_neg_hamming_loss_samples_oob:
  - -0.28774289985052315
  - -0.282312925170068
  - -0.2776532137518684
  - -0.27878103837471785
  - -0.28265765765765766
  train_neg_hamming_loss_weighted:
  - -0.27000689893066576
  - -0.269565992335799
  - -0.26270748714577513
  - -0.2644635274432114
  - -0.26787100416343235
  train_neg_hamming_loss_weighted_oob:
  - -0.3353860265295242
  - -0.3286516353266198
  - -0.3263740520742845
  - -0.32833588533362795
  - -0.3296599471534198
  train_neg_label_ranking_loss:
  - -0.1682299451918286
  - -0.1654887881078357
  - -0.16378300946686597
  - -0.16495485327313775
  - -0.16276276276276275
  train_neg_label_ranking_loss_oob:
  - -0.20123941205779772
  - -0.1959561602418745
  - -0.1925572994519183
  - -0.1913280662151994
  - -0.19852977977977979
  train_precision_macro:
  - 0.7884902840059791
  - 0.789493575207861
  - 0.7944693572496263
  - 0.7945823927765238
  - 0.7886636636636637
  train_precision_macro_oob:
  - 0.7122571001494769
  - 0.7176870748299319
  - 0.7223467862481315
  - 0.7212189616252823
  - 0.7173423423423424
  train_precision_micro:
  - 0.7884902840059791
  - 0.7894935752078609
  - 0.7944693572496263
  - 0.7945823927765236
  - 0.7886636636636637
  train_precision_micro_oob:
  - 0.7122571001494769
  - 0.717687074829932
  - 0.7223467862481315
  - 0.7212189616252822
  - 0.7173423423423423
  train_precision_samples:
  - 0.788490284005979
  - 0.789493575207861
  - 0.7944693572496261
  - 0.7945823927765236
  - 0.7886636636636636
  train_precision_samples_oob:
  - 0.7122571001494767
  - 0.717687074829932
  - 0.7223467862481314
  - 0.7212189616252822
  - 0.7173423423423423
  train_precision_weighted:
  - 0.7299931010693341
  - 0.7304340076642011
  - 0.7372925128542249
  - 0.7355364725567886
  - 0.7321289958365675
  train_precision_weighted_oob:
  - 0.6646139734704757
  - 0.6713483646733803
  - 0.6736259479257155
  - 0.6716641146663721
  - 0.6703400528465803
  train_recall_macro:
  - 0.7884902840059791
  - 0.789493575207861
  - 0.7944693572496263
  - 0.7945823927765238
  - 0.7886636636636637
  train_recall_macro_oob:
  - 0.7122571001494769
  - 0.7176870748299319
  - 0.7223467862481315
  - 0.7212189616252823
  - 0.7173423423423424
  train_recall_micro:
  - 0.7884902840059791
  - 0.7894935752078609
  - 0.7944693572496263
  - 0.7945823927765236
  - 0.7886636636636637
  train_recall_micro_oob:
  - 0.7122571001494769
  - 0.717687074829932
  - 0.7223467862481315
  - 0.7212189616252822
  - 0.7173423423423423
  train_recall_samples:
  - 0.788490284005979
  - 0.789493575207861
  - 0.7944693572496261
  - 0.7945823927765236
  - 0.7886636636636636
  train_recall_samples_oob:
  - 0.7122571001494767
  - 0.717687074829932
  - 0.7223467862481314
  - 0.7212189616252822
  - 0.7173423423423423
  train_recall_weighted:
  - 0.7299931010693341
  - 0.7304340076642011
  - 0.7372925128542249
  - 0.7355364725567886
  - 0.7321289958365675
  train_recall_weighted_oob:
  - 0.6646139734704757
  - 0.6713483646733803
  - 0.6736259479257155
  - 0.6716641146663721
  - 0.6703400528465803
  train_roc_auc_macro:
  - 0.845078321254249
  - 0.8334563398598643
  - 0.844025232836897
  - 0.8371558944952944
  - 0.8391765192835212
  train_roc_auc_macro_oob:
  - 0.673904330906685
  - 0.6698306933852304
  - 0.6714322789469901
  - 0.7006904853963675
  - 0.6878555605357833
  train_roc_auc_micro:
  - 0.844836095692819
  - 0.8401860186367749
  - 0.8495297653674617
  - 0.8437999418019233
  - 0.8480222434776113
  train_roc_auc_micro_oob:
  - 0.8040143603133159
  - 0.8054094941072764
  - 0.8108025641903067
  - 0.812031759521852
  - 0.8074548969257238
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7748333933603878
  - 0.7605825836784735
  - 0.7751479539762437
  - 0.7671021849123449
  - 0.7662326534926424
  train_roc_auc_weighted_oob:
  - 0.6763810333623222
  - 0.6785477882193923
  - 0.6911254456890177
  - 0.7010894630921114
  - 0.6781817438986555
start: 2023-12-21 22:39:13.566850
wrapper: null
