active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AMzMzMzPzvwCamZmZmek/AJqZmZmZ6T8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:06:46.533424
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - rf
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    - - xt
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: false
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba_weak__1
  params: {}
hash: 81c574803cf384a5d1275eee1e02eb554e3a3cb3dbdba1e36854b9059a3edb82
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/81c5748_20231221T170635996398_proba_weak__1_Gram_positive.yml
results:
  fit_time:
  - 3.5663349628448486
  - 3.542449951171875
  - 3.4150333404541016
  - 3.418914556503296
  - 3.4278764724731445
  score_time:
  - 1.1543359756469727
  - 1.1715807914733887
  - 1.162545919418335
  - 1.151921272277832
  - 1.1745741367340088
  test_average_precision_macro:
  - 0.8414755587365783
  - 0.9008713755820177
  - 0.7815285037765725
  - 0.9111435994292478
  - 0.9141305200674688
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9501104417314905
  - 0.9545570338329347
  - 0.9671243179002774
  - 0.9469982382372115
  - 0.9469664839333725
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9563106796116505
  - 0.9428571428571428
  - 0.9619741100323624
  - 0.9668284789644013
  - 0.9412698412698414
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9315618582084937
  - 0.9579304414235614
  - 0.9603667879242859
  - 0.9586773522926711
  - 0.9635185510075489
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8033980582524273
  - 0.8214285714285714
  - 0.8567961165048544
  - 0.7985436893203884
  - 0.7880952380952382
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8033980582524272
  - 0.8214285714285714
  - 0.8567961165048543
  - 0.7985436893203883
  - 0.7880952380952381
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8033980582524272
  - 0.8214285714285714
  - 0.8567961165048543
  - 0.7985436893203883
  - 0.7880952380952381
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7483125288950532
  - 0.7824943310657597
  - 0.8316840926064226
  - 0.7482326326703742
  - 0.732345013477089
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6885091271550317
  - 0.705761114518882
  - 0.7575304134413804
  - 0.6798718540696584
  - 0.6639587304981875
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6713995943204868
  - 0.696969696969697
  - 0.7494692144373672
  - 0.6646464646464646
  - 0.650294695481336
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.688025889967637
  - 0.7142857142857142
  - 0.7721682847896436
  - 0.678964401294498
  - 0.662222222222222
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6092357144081035
  - 0.6443731775833866
  - 0.7147685692366615
  - 0.6030932288826568
  - 0.5816145758683358
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9563106796116505
  - 0.9428571428571428
  - 0.9619741100323626
  - 0.9668284789644014
  - 0.9412698412698413
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.27366473016318593
  - 0.2648622314150563
  - 0.3435962084150268
  - 0.1481199211841362
  - 0.1961847327371372
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4252695584556256
  - 0.48038446141526137
  - 0.6026038657275024
  - 0.3864447558701623
  - 0.353495450695797
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.23300970873786409
  - 0.2857142857142857
  - 0.4368932038834951
  - 0.20064724919093851
  - 0.1619047619047619
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3579266606186872
  - 0.3915276071409636
  - 0.5048193874665912
  - 0.23584142790483822
  - 0.28233911496786335
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9671407329418247
  - 0.9572217595592603
  - 0.9721491038077592
  - 0.9749801886193363
  - 0.9559748095252463
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1650485436893203
  - -1.1714285714285715
  - -1.1359223300970873
  - -1.116504854368932
  - -1.1904761904761905
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1966019417475728
  - -0.17857142857142858
  - -0.14320388349514562
  - -0.20145631067961164
  - -0.21190476190476193
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1966019417475728
  - -0.17857142857142858
  - -0.14320388349514562
  - -0.20145631067961164
  - -0.2119047619047619
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1966019417475728
  - -0.17857142857142858
  - -0.14320388349514562
  - -0.20145631067961164
  - -0.2119047619047619
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2516874711049468
  - -0.21750566893424034
  - -0.16831590739357732
  - -0.25176736732962585
  - -0.2676549865229111
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04854368932038834
  - -0.05714285714285714
  - -0.04045307443365695
  - -0.038834951456310676
  - -0.060317460317460304
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8033980582524273
  - 0.8214285714285714
  - 0.8567961165048544
  - 0.7985436893203884
  - 0.7880952380952382
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8033980582524272
  - 0.8214285714285714
  - 0.8567961165048543
  - 0.7985436893203883
  - 0.7880952380952381
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8033980582524272
  - 0.8214285714285714
  - 0.8567961165048543
  - 0.7985436893203883
  - 0.7880952380952381
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7483125288950532
  - 0.7824943310657597
  - 0.8316840926064226
  - 0.7482326326703742
  - 0.732345013477089
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8033980582524273
  - 0.8214285714285714
  - 0.8567961165048544
  - 0.7985436893203884
  - 0.7880952380952382
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8033980582524272
  - 0.8214285714285714
  - 0.8567961165048543
  - 0.7985436893203883
  - 0.7880952380952381
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8033980582524272
  - 0.8214285714285714
  - 0.8567961165048543
  - 0.7985436893203883
  - 0.7880952380952381
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7483125288950532
  - 0.7824943310657597
  - 0.8316840926064226
  - 0.7482326326703742
  - 0.732345013477089
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9838151806278405
  - 0.9867071433144827
  - 0.9614081989692325
  - 0.9846599091264346
  - 0.987301939505175
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9684504420660773
  - 0.9687074829931973
  - 0.9739010989010989
  - 0.9743299714079241
  - 0.9672214878019469
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9514563106796117
  - 0.9428571428571428
  - 0.959546925566343
  - 0.9611650485436893
  - 0.9396825396825397
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9875946919425179
  - 0.9903886639608783
  - 0.9874673148033788
  - 0.9822724353510645
  - 0.9870656363143051
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9592618089976653
  - 0.9266144896525037
  - 0.9658167337887515
  - 0.9039919211233731
  - 0.910055574334534
  train_average_precision_macro_oob:
  - 0.9003030226259997
  - 0.8318445344565986
  - 0.9220721720792671
  - 0.8611857339615803
  - 0.8271983763179505
  train_average_precision_micro:
  - 0.9691015666137436
  - 0.9616740910376694
  - 0.9662321294617604
  - 0.9692121300173995
  - 0.9645200220916577
  train_average_precision_micro_oob:
  - 0.9646858891235898
  - 0.9569907354597199
  - 0.9610873946133467
  - 0.9651588886269052
  - 0.9587191699304061
  train_average_precision_samples:
  - 0.9641426282051283
  - 0.9565217391304348
  - 0.9547275641025641
  - 0.9595352564102565
  - 0.9524959742351048
  train_average_precision_samples_oob:
  - 0.9607371794871795
  - 0.9512882447665056
  - 0.9475160256410257
  - 0.9565304487179488
  - 0.9496779388083736
  train_average_precision_weighted:
  - 0.984574048767643
  - 0.9712790475412797
  - 0.9807659557271975
  - 0.9748291242479719
  - 0.9676541115259518
  train_average_precision_weighted_oob:
  - 0.9718939162511915
  - 0.9528185105619642
  - 0.9681474173514587
  - 0.9655095228667122
  - 0.9453463472159049
  train_f1_macro:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_f1_macro_oob:
  - 0.7890625
  - 0.8121980676328502
  - 0.8431490384615383
  - 0.819110576923077
  - 0.7971014492753623
  train_f1_micro:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_f1_micro_oob:
  - 0.7890625
  - 0.8121980676328503
  - 0.8431490384615384
  - 0.8191105769230769
  - 0.7971014492753623
  train_f1_samples:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_f1_samples_oob:
  - 0.7890625
  - 0.8121980676328503
  - 0.8431490384615384
  - 0.8191105769230769
  - 0.7971014492753623
  train_f1_weighted:
  - 0.7423053919764445
  - 0.7762926750340938
  - 0.8148005782999816
  - 0.7882211538461539
  - 0.7408913448950986
  train_f1_weighted_oob:
  - 0.7277672984909828
  - 0.7657178189214804
  - 0.8112894712685882
  - 0.7853537087912089
  - 0.7439555601895295
  train_jaccard_macro:
  - 0.6810603876806071
  - 0.7042588949008035
  - 0.7405330554803572
  - 0.7110158525465524
  - 0.6721339083892174
  train_jaccard_macro_oob:
  - 0.6680303167917748
  - 0.6946897534159125
  - 0.7370437935499373
  - 0.7081607229218372
  - 0.6752444698589092
  train_jaccard_micro:
  - 0.6664997496244367
  - 0.6941176470588235
  - 0.7324310255075481
  - 0.6962283384301733
  - 0.6593186372745491
  train_jaccard_micro_oob:
  - 0.6516129032258065
  - 0.6837824097610574
  - 0.7288311688311688
  - 0.6936386768447838
  - 0.6626506024096386
  train_jaccard_samples:
  - 0.6804487179487178
  - 0.7123993558776166
  - 0.7541666666666665
  - 0.7147435897435896
  - 0.672463768115942
  train_jaccard_samples_oob:
  - 0.6631410256410255
  - 0.7008051529790659
  - 0.7503205128205127
  - 0.7118589743589744
  - 0.6763285024154588
  train_jaccard_weighted:
  - 0.5960991716497034
  - 0.6367856934015321
  - 0.6904912312353338
  - 0.660299908544843
  - 0.5909940148613637
  train_jaccard_weighted_oob:
  - 0.5789535262311065
  - 0.6228841402502817
  - 0.6854233270058407
  - 0.6557588928560103
  - 0.5949537739157361
  train_label_ranking_average_precision_score:
  - 0.9641426282051282
  - 0.9565217391304348
  - 0.9547275641025641
  - 0.9595352564102563
  - 0.9524959742351048
  train_label_ranking_average_precision_score_oob:
  - 0.9607371794871795
  - 0.9512882447665056
  - 0.9475160256410255
  - 0.9565304487179488
  - 0.9496779388083736
  train_matthews_corrcoef_macro:
  - 0.27555367908121525
  - 0.26915581406067235
  - 0.32304147184166104
  - 0.22988412084641346
  - 0.20807713173988052
  train_matthews_corrcoef_macro_oob:
  - 0.2253763466563533
  - 0.25308293747296023
  - 0.3180506983335193
  - 0.22648147138240438
  - 0.21522857167029857
  train_matthews_corrcoef_micro:
  - 0.4005800146763337
  - 0.4788601843671326
  - 0.5653274845288159
  - 0.4840868367023318
  - 0.38064657224090787
  train_matthews_corrcoef_micro_oob:
  - 0.35363547394756
  - 0.4523122619652731
  - 0.5575331034145314
  - 0.4776335047217625
  - 0.39090376743603206
  train_matthews_corrcoef_samples:
  - 0.20432692307692307
  - 0.28743961352657005
  - 0.3910256410256411
  - 0.2932692307692308
  - 0.1859903381642512
  train_matthews_corrcoef_samples_oob:
  - 0.16105769230769232
  - 0.2584541062801932
  - 0.38141025641025644
  - 0.2860576923076923
  - 0.1956521739130435
  train_matthews_corrcoef_weighted:
  - 0.3611351749616954
  - 0.39051960283484843
  - 0.4682736865397646
  - 0.35524503044908967
  - 0.30541661387977515
  train_matthews_corrcoef_weighted_oob:
  - 0.3007584482805858
  - 0.36721434107116585
  - 0.4610281948350338
  - 0.34983319749204667
  - 0.3146085358573709
  train_ndgc:
  - 0.9732082489133013
  - 0.9676275800866407
  - 0.9660155970265094
  - 0.9697505717778322
  - 0.9645718505666145
  train_ndgc_oob:
  - 0.9706377598702086
  - 0.9637454285424726
  - 0.9606924684722515
  - 0.9674948177192862
  - 0.9624726470728258
  train_neg_coverage_error:
  - -1.125
  - -1.1521739130434783
  - -1.1514423076923077
  - -1.1442307692307692
  - -1.1545893719806763
  train_neg_coverage_error_oob:
  - -1.1370192307692308
  - -1.1642512077294687
  - -1.1658653846153846
  - -1.1538461538461537
  - -1.1618357487922706
  train_neg_hamming_loss_macro:
  - -0.20012019230769232
  - -0.18055555555555558
  - -0.15444711538461536
  - -0.17908653846153846
  - -0.20531400966183572
  train_neg_hamming_loss_macro_oob:
  - -0.2109375
  - -0.18780193236714976
  - -0.1568509615384615
  - -0.18088942307692307
  - -0.2028985507246377
  train_neg_hamming_loss_micro:
  - -0.20012019230769232
  - -0.18055555555555555
  - -0.1544471153846154
  - -0.17908653846153846
  - -0.20531400966183574
  train_neg_hamming_loss_micro_oob:
  - -0.2109375
  - -0.18780193236714976
  - -0.15685096153846154
  - -0.18088942307692307
  - -0.2028985507246377
  train_neg_hamming_loss_samples:
  - -0.20012019230769232
  - -0.18055555555555555
  - -0.1544471153846154
  - -0.17908653846153846
  - -0.20531400966183574
  train_neg_hamming_loss_samples_oob:
  - -0.2109375
  - -0.18780193236714976
  - -0.15685096153846154
  - -0.18088942307692307
  - -0.2028985507246377
  train_neg_hamming_loss_weighted:
  - -0.2576946080235554
  - -0.22370732496590623
  - -0.1851994217000184
  - -0.21177884615384615
  - -0.25910865510490155
  train_neg_hamming_loss_weighted_oob:
  - -0.27223270150901735
  - -0.23428218107851975
  - -0.18871052873141175
  - -0.21464629120879125
  - -0.2560444398104704
  train_neg_label_ranking_loss:
  - -0.039663461538461536
  - -0.046900161030595806
  - -0.04807692307692308
  - -0.04447115384615385
  - -0.04871175523349436
  train_neg_label_ranking_loss_oob:
  - -0.04366987179487179
  - -0.05092592592592592
  - -0.052884615384615384
  - -0.04767628205128205
  - -0.05112721417069242
  train_precision_macro:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_precision_macro_oob:
  - 0.7890625
  - 0.8121980676328502
  - 0.8431490384615383
  - 0.819110576923077
  - 0.7971014492753623
  train_precision_micro:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_precision_micro_oob:
  - 0.7890625
  - 0.8121980676328503
  - 0.8431490384615384
  - 0.8191105769230769
  - 0.7971014492753623
  train_precision_samples:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_precision_samples_oob:
  - 0.7890625
  - 0.8121980676328503
  - 0.8431490384615384
  - 0.8191105769230769
  - 0.7971014492753623
  train_precision_weighted:
  - 0.7423053919764445
  - 0.7762926750340938
  - 0.8148005782999816
  - 0.7882211538461539
  - 0.7408913448950986
  train_precision_weighted_oob:
  - 0.7277672984909828
  - 0.7657178189214804
  - 0.8112894712685882
  - 0.7853537087912089
  - 0.7439555601895295
  train_recall_macro:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_recall_macro_oob:
  - 0.7890625
  - 0.8121980676328502
  - 0.8431490384615383
  - 0.819110576923077
  - 0.7971014492753623
  train_recall_micro:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_recall_micro_oob:
  - 0.7890625
  - 0.8121980676328503
  - 0.8431490384615384
  - 0.8191105769230769
  - 0.7971014492753623
  train_recall_samples:
  - 0.7998798076923077
  - 0.8194444444444444
  - 0.8455528846153846
  - 0.8209134615384616
  - 0.7946859903381642
  train_recall_samples_oob:
  - 0.7890625
  - 0.8121980676328503
  - 0.8431490384615384
  - 0.8191105769230769
  - 0.7971014492753623
  train_recall_weighted:
  - 0.7423053919764445
  - 0.7762926750340938
  - 0.8148005782999816
  - 0.7882211538461539
  - 0.7408913448950986
  train_recall_weighted_oob:
  - 0.7277672984909828
  - 0.7657178189214804
  - 0.8112894712685882
  - 0.7853537087912089
  - 0.7439555601895295
  train_roc_auc_macro:
  - 0.9921678019407734
  - 0.9900261435426047
  - 0.991149387177452
  - 0.9923952426773666
  - 0.9894921576114897
  train_roc_auc_macro_oob:
  - 0.9867592567838959
  - 0.9807839042306308
  - 0.9881956179938934
  - 0.9864690617561348
  - 0.9790176248064306
  train_roc_auc_micro:
  - 0.9806942023086316
  - 0.9721769175472093
  - 0.9793560878358303
  - 0.9778919767263818
  - 0.9757346665040849
  train_roc_auc_micro_oob:
  - 0.9762147964395155
  - 0.9696435058861722
  - 0.9750275565268233
  - 0.9740659929566682
  - 0.9718520583049299
  train_roc_auc_samples:
  - 0.9603365384615384
  - 0.9530998389694043
  - 0.9519230769230769
  - 0.9555288461538461
  - 0.9512882447665058
  train_roc_auc_samples_oob:
  - 0.9563301282051283
  - 0.949074074074074
  - 0.9471153846153846
  - 0.952323717948718
  - 0.9488727858293077
  train_roc_auc_weighted:
  - 0.9940636348463241
  - 0.991274251956649
  - 0.9927673599417941
  - 0.9948285464032838
  - 0.9917816981798205
  train_roc_auc_weighted_oob:
  - 0.9912414892499988
  - 0.9877117441475367
  - 0.9910588138064442
  - 0.9916266345802346
  - 0.9869192548259177
start: 2023-12-21 17:06:35.996398
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
