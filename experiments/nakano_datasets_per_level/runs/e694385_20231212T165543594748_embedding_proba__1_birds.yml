active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5yZmZmZmek/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8L8AAAAAAADwPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP87MzMzMzPw/mZmZmZmZCcCcmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJv5iZmZmZmcm/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47/MzMzMzMwEwGhmZmZmZvY/aGZmZmZm9j+gmZmZmZnZPw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:55:57.993055
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: e6943858cad0cf5f7c4ae9327ab7107beca4460c2dec58f0e215ab189f5152b6
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e694385_20231212T165543594748_embedding_proba__1_birds.yml
results:
  fit_time:
  - 3.8679914474487305
  - 3.854508399963379
  - 4.282768726348877
  - 4.169607162475586
  - 3.835672616958618
  score_time:
  - 2.025085210800171
  - 2.0926990509033203
  - 2.2830536365509033
  - 2.0209856033325195
  - 2.0035860538482666
  test_average_precision_macro:
  - 0.5879394848598022
  - 0.50815110687385
  - 0.51956120253035
  - 0.525341895963324
  - 0.5482081996695496
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.584292468245018
  - 0.48999327428051653
  - 0.5715705148125363
  - 0.5811398981777887
  - 0.5260454586032453
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.34493509821485197
  - 0.3529715717985212
  - 0.32373753823822227
  - 0.37792681870999245
  - 0.3485468378879232
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6591775712988531
  - 0.5616468045780553
  - 0.6193689501321107
  - 0.634846673689868
  - 0.59082924269069
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9563443492452058
  - 0.9502243982048143
  - 0.9551203590371277
  - 0.9522643818849449
  - 0.9502243982048143
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9563443492452061
  - 0.9502243982048144
  - 0.9551203590371277
  - 0.9522643818849449
  - 0.9502243982048144
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9563443492452062
  - 0.9502243982048143
  - 0.9551203590371278
  - 0.9522643818849449
  - 0.9502243982048145
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9443375881564379
  - 0.9263274465232849
  - 0.9322170542635659
  - 0.930996006577402
  - 0.9254985502100718
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9172245194837051
  - 0.907147457536473
  - 0.9156537695017074
  - 0.910543137304856
  - 0.907047387047809
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9163408913213448
  - 0.9051690633501749
  - 0.9140960562280359
  - 0.9088785046728972
  - 0.9051690633501749
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9210209855305913
  - 0.9098998069675521
  - 0.9200193470163136
  - 0.914586351745098
  - 0.9107537895202205
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8950380933897466
  - 0.8649257343610904
  - 0.874210351558387
  - 0.8729940102285376
  - 0.8634530278345933
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8022994393001234
  - 0.7560723469923196
  - 0.8276135072304699
  - 0.8275392218107677
  - 0.8136631169576906
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.10692308862470994
  - 0.0894983050479345
  - 0.09805674756871446
  - 0.09879285662769434
  - 0.068547465999371
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4318322230576432
  - 0.28685819773996074
  - 0.3389890640634299
  - 0.33081361583219093
  - 0.27312740780547085
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.11976680021342552
  - 0.06545255305898187
  - 0.08626329883221591
  - 0.08195559959675996
  - 0.05849829327826374
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.25728216299015355
  - 0.17692706800665356
  - 0.21523016690384023
  - 0.1988852307454189
  - 0.16302860640176203
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.40425592007501454
  - 0.4213621178297204
  - 0.37958792654377405
  - 0.43300444677463407
  - 0.40532646491882185
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.868217054263566
  - -3.193798449612403
  - -2.744186046511628
  - -2.868217054263566
  - -2.7674418604651163
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04365565075479396
  - -0.04977560179518564
  - -0.0448796409628723
  - -0.04773561811505508
  - -0.04977560179518564
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04365565075479396
  - -0.049775601795185635
  - -0.044879640962872294
  - -0.04773561811505508
  - -0.049775601795185635
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.043655650754793954
  - -0.049775601795185635
  - -0.044879640962872294
  - -0.04773561811505508
  - -0.049775601795185635
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.055662411843562395
  - -0.07367255347671504
  - -0.06778294573643412
  - -0.06900399342259808
  - -0.07450144978992841
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07659327296810196
  - -0.09864151086791306
  - -0.06953437705831687
  - -0.07559571831117659
  - -0.07289888823746553
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9563443492452058
  - 0.9502243982048143
  - 0.9551203590371277
  - 0.9522643818849449
  - 0.9502243982048143
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9563443492452061
  - 0.9502243982048144
  - 0.9551203590371277
  - 0.9522643818849449
  - 0.9502243982048144
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9563443492452062
  - 0.9502243982048143
  - 0.9551203590371278
  - 0.9522643818849449
  - 0.9502243982048145
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9443375881564379
  - 0.9263274465232849
  - 0.9322170542635659
  - 0.930996006577402
  - 0.9254985502100718
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9563443492452058
  - 0.9502243982048143
  - 0.9551203590371277
  - 0.9522643818849449
  - 0.9502243982048143
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9563443492452061
  - 0.9502243982048144
  - 0.9551203590371277
  - 0.9522643818849449
  - 0.9502243982048144
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9563443492452062
  - 0.9502243982048143
  - 0.9551203590371278
  - 0.9522643818849449
  - 0.9502243982048145
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9443375881564379
  - 0.9263274465232849
  - 0.9322170542635659
  - 0.930996006577402
  - 0.9254985502100718
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9107588403336496
  - 0.8720352609103778
  - 0.8969756106589976
  - 0.8948036828772754
  - 0.9011451999747293
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9175689439301445
  - 0.8979026513652552
  - 0.9261496130696474
  - 0.9140401426947352
  - 0.9164319557778363
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.910752155679658
  - 0.8798891240275558
  - 0.9112842539881055
  - 0.9022462932945908
  - 0.899839979635665
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9537434012021059
  - 0.9494166185914167
  - 0.9511792202196886
  - 0.9598488465522725
  - 0.9565135507819325
  train_average_precision_macro_oob:
  - 0.5314065371830143
  - 0.5235822524310848
  - 0.542916394570262
  - 0.5655279141535791
  - 0.5524281004756326
  train_average_precision_micro:
  - 0.9166126621009295
  - 0.9135647739621455
  - 0.909136542166066
  - 0.9187748277193111
  - 0.9204637627299356
  train_average_precision_micro_oob:
  - 0.6452245006552426
  - 0.6448798057590993
  - 0.6283246533837505
  - 0.6420772763997583
  - 0.6595513685582362
  train_average_precision_samples:
  - 0.513188676633444
  - 0.5013592807924203
  - 0.52687315430048
  - 0.517802540913006
  - 0.5177267903285345
  train_average_precision_samples_oob:
  - 0.3990020878284522
  - 0.3928817578999827
  - 0.40139495361393085
  - 0.3920307129184658
  - 0.4083261386989157
  train_average_precision_weighted:
  - 0.9539482256511084
  - 0.9466628459023576
  - 0.9458641745792058
  - 0.9546411365883544
  - 0.9547466155427713
  train_average_precision_weighted_oob:
  - 0.6611348926621745
  - 0.6514706240369491
  - 0.6505221234076053
  - 0.6694162634613354
  - 0.6774903564990917
  train_f1_macro:
  - 0.9628722970216238
  - 0.9622603019175845
  - 0.9613423092615258
  - 0.961750305997552
  - 0.9630762953896367
  train_f1_macro_oob:
  - 0.9539983680130559
  - 0.9558343533251732
  - 0.9529783761729904
  - 0.9545083639330884
  - 0.9553243574051407
  train_f1_micro:
  - 0.9628722970216238
  - 0.9622603019175846
  - 0.9613423092615259
  - 0.9617503059975521
  - 0.9630762953896369
  train_f1_micro_oob:
  - 0.9539983680130559
  - 0.9558343533251734
  - 0.9529783761729906
  - 0.9545083639330886
  - 0.9553243574051408
  train_f1_samples:
  - 0.9628722970216239
  - 0.9622603019175847
  - 0.961342309261526
  - 0.9617503059975521
  - 0.9630762953896369
  train_f1_samples_oob:
  - 0.9539983680130559
  - 0.9558343533251734
  - 0.9529783761729907
  - 0.9545083639330886
  - 0.9553243574051408
  train_f1_weighted:
  - 0.9547493639244744
  - 0.9521195078040143
  - 0.9511510675400421
  - 0.9501618699694081
  - 0.953425378333111
  train_f1_weighted_oob:
  - 0.9343726286658037
  - 0.9394612328705978
  - 0.9339290162805353
  - 0.9350663815379132
  - 0.937650999748025
  train_jaccard_macro:
  - 0.9290481738398318
  - 0.9278889280055796
  - 0.9262055323192983
  - 0.9270300352007658
  - 0.9294674792191051
  train_jaccard_macro_oob:
  - 0.9133975827229883
  - 0.916459002996341
  - 0.9115092921762837
  - 0.9143082200719901
  - 0.9156884088366273
  train_jaccard_micro:
  - 0.9284028324154209
  - 0.9272655789266758
  - 0.925562211529019
  - 0.9263188918361333
  - 0.928782215227228
  train_jaccard_micro_oob:
  - 0.9120429058995612
  - 0.9154049037804044
  - 0.9101802240623478
  - 0.9129756097560976
  - 0.9144698301113063
  train_jaccard_samples:
  - 0.932264523758457
  - 0.9313996165613962
  - 0.9297523662159658
  - 0.9304561941821801
  - 0.9327893444046125
  train_jaccard_samples_oob:
  - 0.9171004972445823
  - 0.9204211149484154
  - 0.9152667473521873
  - 0.9180644557666803
  - 0.9194594033648633
  train_jaccard_weighted:
  - 0.9138628541666748
  - 0.9090190677386577
  - 0.9072530500931304
  - 0.9055653146530337
  - 0.9114918802864919
  train_jaccard_weighted_oob:
  - 0.8780586523373718
  - 0.8866127978227232
  - 0.8773408966125915
  - 0.8792797246222437
  - 0.8838168561291072
  train_label_ranking_average_precision_score:
  - 0.9686150332225911
  - 0.9703515288544357
  - 0.9706716039128829
  - 0.9751668819982774
  - 0.9712151624215575
  train_label_ranking_average_precision_score_oob:
  - 0.8544284444175994
  - 0.8618740059619983
  - 0.845193403226334
  - 0.8493950540037364
  - 0.8618145107919387
  train_matthews_corrcoef_macro:
  - 0.213783658953066
  - 0.21763807068357469
  - 0.23591600094040235
  - 0.22403354250293783
  - 0.26115821779609383
  train_matthews_corrcoef_macro_oob:
  - 0.10701988532208118
  - 0.11720992408247546
  - 0.09614356009649126
  - 0.11349022288111188
  - 0.1248779062537299
  train_matthews_corrcoef_micro:
  - 0.5383669942967864
  - 0.5275321794289601
  - 0.5215594491274873
  - 0.5200249874072503
  - 0.544018054511123
  train_matthews_corrcoef_micro_oob:
  - 0.3583286815112633
  - 0.40241557315129767
  - 0.35097255248722503
  - 0.37254486328165193
  - 0.3938269617923205
  train_matthews_corrcoef_samples:
  - 0.184252554183673
  - 0.17190552782904903
  - 0.1690317992902945
  - 0.16115839714535427
  - 0.18625574737081657
  train_matthews_corrcoef_samples_oob:
  - 0.09136483102542424
  - 0.10853835144136353
  - 0.08560826915625372
  - 0.08891323783031797
  - 0.10151375550392594
  train_matthews_corrcoef_weighted:
  - 0.4122355578798313
  - 0.40398060476779796
  - 0.4062913054400688
  - 0.4103704280045303
  - 0.42941315307892713
  train_matthews_corrcoef_weighted_oob:
  - 0.22509538906474283
  - 0.25454887935034815
  - 0.21743400255497772
  - 0.2383732877839187
  - 0.2608010931696808
  train_ndgc:
  - 0.5242778450312321
  - 0.5112295797812002
  - 0.5371872027303605
  - 0.526571541867191
  - 0.5283580578583406
  train_ndgc_oob:
  - 0.44493138063064586
  - 0.43734655797683664
  - 0.44884891283369255
  - 0.43975013244839317
  - 0.4524330374035446
  train_neg_coverage_error:
  - -1.1666666666666667
  - -1.1356589147286822
  - -1.1608527131782946
  - -1.1356589147286822
  - -1.1666666666666667
  train_neg_coverage_error_oob:
  - -2.3217054263565893
  - -2.2887596899224807
  - -2.4069767441860463
  - -2.441860465116279
  - -2.4050387596899223
  train_neg_hamming_loss_macro:
  - -0.03712770297837618
  - -0.03773969808241534
  - -0.03865769073847409
  - -0.03824969400244798
  - -0.03692370461036312
  train_neg_hamming_loss_macro_oob:
  - -0.046001631986944104
  - -0.04416564667482661
  - -0.04702162382700938
  - -0.045491636066911464
  - -0.04467564259485924
  train_neg_hamming_loss_micro:
  - -0.03712770297837617
  - -0.03773969808241534
  - -0.03865769073847409
  - -0.03824969400244798
  - -0.036923704610363116
  train_neg_hamming_loss_micro_oob:
  - -0.046001631986944104
  - -0.0441656466748266
  - -0.04702162382700938
  - -0.045491636066911464
  - -0.04467564259485924
  train_neg_hamming_loss_samples:
  - -0.03712770297837618
  - -0.03773969808241534
  - -0.03865769073847409
  - -0.03824969400244798
  - -0.036923704610363116
  train_neg_hamming_loss_samples_oob:
  - -0.046001631986944104
  - -0.0441656466748266
  - -0.04702162382700938
  - -0.045491636066911464
  - -0.04467564259485924
  train_neg_hamming_loss_weighted:
  - -0.04525063607552561
  - -0.04788049219598566
  - -0.04884893245995809
  - -0.04983813003059193
  - -0.046574621666889
  train_neg_hamming_loss_weighted_oob:
  - -0.06562737133419631
  - -0.060538767129402316
  - -0.06607098371946485
  - -0.06493361846208678
  - -0.06234900025197505
  train_neg_label_ranking_loss:
  - -0.005736212443633785
  - -0.004904267908713873
  - -0.005105495786070341
  - -0.004471682083686188
  - -0.00568995686129749
  train_neg_label_ranking_loss_oob:
  - -0.05227406257673016
  - -0.05230606827306554
  - -0.05574844577067559
  - -0.056469222055747365
  - -0.05541078088957706
  train_precision_macro:
  - 0.9628722970216238
  - 0.9622603019175845
  - 0.9613423092615258
  - 0.961750305997552
  - 0.9630762953896367
  train_precision_macro_oob:
  - 0.9539983680130559
  - 0.9558343533251732
  - 0.9529783761729904
  - 0.9545083639330884
  - 0.9553243574051407
  train_precision_micro:
  - 0.9628722970216238
  - 0.9622603019175846
  - 0.9613423092615259
  - 0.9617503059975521
  - 0.9630762953896369
  train_precision_micro_oob:
  - 0.9539983680130559
  - 0.9558343533251734
  - 0.9529783761729906
  - 0.9545083639330886
  - 0.9553243574051408
  train_precision_samples:
  - 0.9628722970216239
  - 0.9622603019175847
  - 0.961342309261526
  - 0.9617503059975521
  - 0.9630762953896369
  train_precision_samples_oob:
  - 0.9539983680130559
  - 0.9558343533251734
  - 0.9529783761729907
  - 0.9545083639330886
  - 0.9553243574051408
  train_precision_weighted:
  - 0.9547493639244744
  - 0.9521195078040143
  - 0.9511510675400421
  - 0.9501618699694081
  - 0.953425378333111
  train_precision_weighted_oob:
  - 0.9343726286658037
  - 0.9394612328705978
  - 0.9339290162805353
  - 0.9350663815379132
  - 0.937650999748025
  train_recall_macro:
  - 0.9628722970216238
  - 0.9622603019175845
  - 0.9613423092615258
  - 0.961750305997552
  - 0.9630762953896367
  train_recall_macro_oob:
  - 0.9539983680130559
  - 0.9558343533251732
  - 0.9529783761729904
  - 0.9545083639330884
  - 0.9553243574051407
  train_recall_micro:
  - 0.9628722970216238
  - 0.9622603019175846
  - 0.9613423092615259
  - 0.9617503059975521
  - 0.9630762953896369
  train_recall_micro_oob:
  - 0.9539983680130559
  - 0.9558343533251734
  - 0.9529783761729906
  - 0.9545083639330886
  - 0.9553243574051408
  train_recall_samples:
  - 0.9628722970216239
  - 0.9622603019175847
  - 0.961342309261526
  - 0.9617503059975521
  - 0.9630762953896369
  train_recall_samples_oob:
  - 0.9539983680130559
  - 0.9558343533251734
  - 0.9529783761729907
  - 0.9545083639330886
  - 0.9553243574051408
  train_recall_weighted:
  - 0.9547493639244744
  - 0.9521195078040143
  - 0.9511510675400421
  - 0.9501618699694081
  - 0.953425378333111
  train_recall_weighted_oob:
  - 0.9343726286658037
  - 0.9394612328705978
  - 0.9339290162805353
  - 0.9350663815379132
  - 0.937650999748025
  train_roc_auc_macro:
  - 0.9973635474919141
  - 0.9967338641916899
  - 0.9966103344852894
  - 0.9970207284184355
  - 0.9973331424700309
  train_roc_auc_macro_oob:
  - 0.9282654678781869
  - 0.9307183923128778
  - 0.9218174211069786
  - 0.925518808785398
  - 0.9199317166987981
  train_roc_auc_micro:
  - 0.9949485603365945
  - 0.9951896466059873
  - 0.9945898022511069
  - 0.9949936060483728
  - 0.9951050306728749
  train_roc_auc_micro_oob:
  - 0.9405542461681032
  - 0.942071063382738
  - 0.9354514187884377
  - 0.9375747646538721
  - 0.9390158103800956
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9963624113179036
  - 0.9954770138472744
  - 0.9949738327260595
  - 0.9956321929502678
  - 0.9960113878698127
  train_roc_auc_weighted_oob:
  - 0.9417783761776046
  - 0.9387360588896092
  - 0.9296192583764347
  - 0.9339619546369428
  - 0.9356414129621798
start: 2023-12-12 16:55:43.594748
wrapper: null
