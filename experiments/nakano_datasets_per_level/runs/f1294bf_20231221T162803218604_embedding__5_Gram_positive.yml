active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmBkAAmJmZmZnJvwAzMzMzM/O/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:28:30.944639
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__5
  params: {}
hash: f1294bf2cab37f3e2c82e2f15aef2288931454fb82d0f5baefd67ed614d6837b
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f1294bf_20231221T162803218604_embedding__5_Gram_positive.yml
results:
  fit_time:
  - 14.261033058166504
  - 13.794176578521729
  - 13.297810554504395
  - 14.171479940414429
  - 14.224469184875488
  score_time:
  - 3.1880064010620117
  - 3.5151712894439697
  - 3.353654623031616
  - 3.1894290447235107
  - 3.9746124744415283
  test_average_precision_macro:
  - 0.9163761760995057
  - 0.857365572544144
  - 0.988912151872451
  - 0.8863209383776313
  - 0.9106874762953301
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9831135102357481
  - 0.9880142594896875
  - 0.9862502825598339
  - 0.9750206602813526
  - 0.9778959668961065
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9628712871287128
  - 0.9735576923076923
  - 0.9619047619047619
  - 0.9543269230769231
  - 0.9563492063492063
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9802594025106902
  - 0.9762804412804413
  - 0.9893052651344196
  - 0.9676390469325933
  - 0.9735403666675663
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047618
  - 0.9639423076923077
  - 0.9571428571428571
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047619
  - 0.9639423076923077
  - 0.9571428571428572
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047619
  - 0.9639423076923077
  - 0.9571428571428572
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9693263443991458
  - 0.9720695970695972
  - 0.9658580413297393
  - 0.9694896449704142
  - 0.9567834681042228
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9423974892421494
  - 0.9440101360397605
  - 0.9271666928653768
  - 0.9311693535992601
  - 0.9180081875036004
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9423076923076923
  - 0.9439252336448598
  - 0.926605504587156
  - 0.9303944315545244
  - 0.9178082191780822
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9564356435643564
  - 0.9564102564102565
  - 0.9466666666666668
  - 0.9487179487179487
  - 0.9365079365079365
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9405786611383413
  - 0.9457526566208162
  - 0.9345932463769835
  - 0.9416644949355228
  - 0.9173688023869778
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9628712871287128
  - 0.9735576923076923
  - 0.9619047619047618
  - 0.9543269230769229
  - 0.9563492063492064
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6990535444248283
  - 0.6984199879398225
  - 0.6776690556666765
  - 0.6802181778101293
  - 0.6700160841987193
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.9205469231791162
  - 0.9228477120512488
  - 0.8980662430914569
  - 0.9027591798152474
  - 0.8846470883460719
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.9042904290429044
  - 0.9029873423319514
  - 0.8912128597065678
  - 0.8878205128205129
  - 0.8594668279605361
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9037886763026052
  - 0.908810366686041
  - 0.8816615493434972
  - 0.8871179690534512
  - 0.8649613009660522
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9721269201478668
  - 0.9810756161845705
  - 0.9716544668027222
  - 0.9659076497342234
  - 0.9674792888183874
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1287128712871286
  - -1.0769230769230769
  - -1.1047619047619048
  - -1.125
  - -1.1238095238095238
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.029702970297029705
  - -0.028846153846153848
  - -0.0380952380952381
  - -0.036057692307692304
  - -0.04285714285714286
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0297029702970297
  - -0.028846153846153848
  - -0.0380952380952381
  - -0.036057692307692304
  - -0.04285714285714286
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.0297029702970297
  - -0.028846153846153848
  - -0.0380952380952381
  - -0.036057692307692304
  - -0.04285714285714286
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.030673655600854204
  - -0.027930402930402932
  - -0.034141958670260555
  - -0.0305103550295858
  - -0.04321653189577718
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.039603960396039604
  - -0.020833333333333332
  - -0.031746031746031744
  - -0.041666666666666664
  - -0.03809523809523809
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047618
  - 0.9639423076923077
  - 0.9571428571428571
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047619
  - 0.9639423076923077
  - 0.9571428571428572
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047619
  - 0.9639423076923077
  - 0.9571428571428572
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9693263443991458
  - 0.9720695970695972
  - 0.9658580413297393
  - 0.9694896449704142
  - 0.9567834681042228
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047618
  - 0.9639423076923077
  - 0.9571428571428571
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047619
  - 0.9639423076923077
  - 0.9571428571428572
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9702970297029703
  - 0.9711538461538461
  - 0.9619047619047619
  - 0.9639423076923077
  - 0.9571428571428572
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9693263443991458
  - 0.9720695970695972
  - 0.9658580413297393
  - 0.9694896449704142
  - 0.9567834681042228
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9889403022684402
  - 0.991051312109468
  - 0.9962014361300077
  - 0.9886708860925955
  - 0.9877093450416471
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9895143487858721
  - 0.9945490736487521
  - 0.9946520850859272
  - 0.9889977810650888
  - 0.9892741257060449
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9603960396039606
  - 0.9791666666666666
  - 0.9682539682539681
  - 0.9583333333333333
  - 0.9619047619047619
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9895451351051502
  - 0.9953579422169216
  - 0.9962788259958071
  - 0.9902417615596965
  - 0.9900275935612429
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.939698134131348
  - 0.9326837613675819
  - 0.929728591509353
  - 0.94845360955607
  - 0.9390775254822237
  train_average_precision_macro_oob:
  - 0.870748402306313
  - 0.8922478762646844
  - 0.8452036781291857
  - 0.9195675344603857
  - 0.8649310122272249
  train_average_precision_micro:
  - 0.9940485421274335
  - 0.9946508565742996
  - 0.9927279007500996
  - 0.9951518617487022
  - 0.9942948999615329
  train_average_precision_micro_oob:
  - 0.9837600410408698
  - 0.9833044935696299
  - 0.9791098518409127
  - 0.9849472235920855
  - 0.9818216602801764
  train_average_precision_samples:
  - 0.9726874003189793
  - 0.9765060240963855
  - 0.969001610305958
  - 0.9801204819277108
  - 0.9718196457326893
  train_average_precision_samples_oob:
  - 0.9613237639553428
  - 0.9590361445783132
  - 0.9579307568438005
  - 0.9696787148594378
  - 0.9623590982286635
  train_average_precision_weighted:
  - 0.9882124054372763
  - 0.9875244582746634
  - 0.9867667651482858
  - 0.9907752676250461
  - 0.9887988153896229
  train_average_precision_weighted_oob:
  - 0.9713069498272418
  - 0.9744473039014329
  - 0.9680799468198771
  - 0.9814467558207666
  - 0.9712472283647878
  train_f1_macro:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_f1_macro_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.963768115942029
  - 0.9656626506024096
  - 0.9692028985507246
  train_f1_micro:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_f1_micro_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.9637681159420289
  - 0.9656626506024096
  - 0.9692028985507246
  train_f1_samples:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_f1_samples_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.9637681159420289
  - 0.9656626506024096
  - 0.9692028985507246
  train_f1_weighted:
  - 0.981560195024378
  - 0.9813743010318787
  - 0.9792745513733939
  - 0.9818845788883457
  - 0.9849048297593808
  train_f1_weighted_oob:
  - 0.9612622032299493
  - 0.964310831844123
  - 0.9648628922948597
  - 0.9676280300198405
  - 0.9731229509146306
  train_jaccard_macro:
  - 0.9535376366981694
  - 0.9542548358139561
  - 0.9518008472488478
  - 0.9610834887319025
  - 0.9599637038974804
  train_jaccard_macro_oob:
  - 0.9232425124786422
  - 0.929164806408358
  - 0.9302679089978144
  - 0.9338466291736115
  - 0.9405716188055555
  train_jaccard_micro:
  - 0.9532710280373832
  - 0.9540906415538553
  - 0.9516794342958161
  - 0.961015948021264
  - 0.9597633136094674
  train_jaccard_micro_oob:
  - 0.9229442208165612
  - 0.9291109819872168
  - 0.9300699300699301
  - 0.9336051252184042
  - 0.9402460456942003
  train_jaccard_samples:
  - 0.9636363636363635
  - 0.9633734939759035
  - 0.9623188405797101
  - 0.9694779116465863
  - 0.9687600644122383
  train_jaccard_samples_oob:
  - 0.9429027113237639
  - 0.9450602409638554
  - 0.9475040257648953
  - 0.9495582329317268
  - 0.9552334943639291
  train_jaccard_weighted:
  - 0.9639998418362126
  - 0.9635208252450819
  - 0.9594817738892727
  - 0.9644848861712921
  - 0.9703866983045575
  train_jaccard_weighted_oob:
  - 0.9257199925724047
  - 0.9311398803564808
  - 0.9323208322181173
  - 0.9375439700273659
  - 0.9480157848143249
  train_label_ranking_average_precision_score:
  - 0.9726874003189793
  - 0.9765060240963855
  - 0.969001610305958
  - 0.9801204819277108
  - 0.9718196457326893
  train_label_ranking_average_precision_score_oob:
  - 0.9613237639553428
  - 0.9590361445783131
  - 0.9579307568438001
  - 0.9696787148594377
  - 0.9623590982286634
  train_matthews_corrcoef_macro:
  - 0.7119182099920942
  - 0.7141462027478641
  - 0.7096153886848786
  - 0.8620545409864372
  - 0.7195107770952742
  train_matthews_corrcoef_macro_oob:
  - 0.6726066597433145
  - 0.6823182811286439
  - 0.6814273689248571
  - 0.6856508244715119
  - 0.6933415289987177
  train_matthews_corrcoef_micro:
  - 0.93604159391245
  - 0.9373486583150273
  - 0.9337994075755719
  - 0.9470480240077642
  - 0.9451782300004163
  train_matthews_corrcoef_micro_oob:
  - 0.8921929686426432
  - 0.9012290096984731
  - 0.9026310965260742
  - 0.9078989820219847
  - 0.9173914159727463
  train_matthews_corrcoef_samples:
  - 0.9180192603051887
  - 0.9150169898977564
  - 0.9148117169264949
  - 0.9324724523937956
  - 0.9301096235287493
  train_matthews_corrcoef_samples_oob:
  - 0.8777767550299591
  - 0.8758747804137652
  - 0.8866313626591841
  - 0.890117391504182
  - 0.9035395752195705
  train_matthews_corrcoef_weighted:
  - 0.9219201468624213
  - 0.9224370014421749
  - 0.9192886432838298
  - 0.9446551542022441
  - 0.9321048535462696
  train_matthews_corrcoef_weighted_oob:
  - 0.8739902506039199
  - 0.8825622420843992
  - 0.8851331765602062
  - 0.8914065428765373
  - 0.9029336962064874
  train_ndgc:
  - 0.9799041200292397
  - 0.9825631159230693
  - 0.9771270500731776
  - 0.9853531431086243
  - 0.9792448939782751
  train_ndgc_oob:
  - 0.9715427146578558
  - 0.9695542658265266
  - 0.968791955882144
  - 0.9775020758077286
  - 0.9720988888445318
  train_neg_coverage_error:
  - -1.0669856459330143
  - -1.0626506024096385
  - -1.0797101449275361
  - -1.0578313253012048
  - -1.070048309178744
  train_neg_coverage_error_oob:
  - -1.0933014354066986
  - -1.108433734939759
  - -1.1231884057971016
  - -1.0987951807228915
  - -1.1111111111111112
  train_neg_hamming_loss_macro:
  - -0.023923444976076555
  - -0.023493975903614458
  - -0.024758454106280192
  - -0.019879518072289156
  - -0.020531400966183576
  train_neg_hamming_loss_macro_oob:
  - -0.04007177033492823
  - -0.036746987951807225
  - -0.03623188405797101
  - -0.034337349397590367
  - -0.03079710144927536
  train_neg_hamming_loss_micro:
  - -0.023923444976076555
  - -0.023493975903614458
  - -0.024758454106280192
  - -0.019879518072289156
  - -0.020531400966183576
  train_neg_hamming_loss_micro_oob:
  - -0.04007177033492823
  - -0.03674698795180723
  - -0.036231884057971016
  - -0.03433734939759036
  - -0.030797101449275364
  train_neg_hamming_loss_samples:
  - -0.023923444976076555
  - -0.023493975903614458
  - -0.024758454106280192
  - -0.019879518072289156
  - -0.020531400966183576
  train_neg_hamming_loss_samples_oob:
  - -0.04007177033492823
  - -0.03674698795180723
  - -0.036231884057971016
  - -0.03433734939759036
  - -0.030797101449275364
  train_neg_hamming_loss_weighted:
  - -0.018439804975621955
  - -0.018625698968121288
  - -0.020725448626605962
  - -0.018115421111654255
  - -0.015095170240619099
  train_neg_hamming_loss_weighted_oob:
  - -0.038737796770050806
  - -0.035689168155877096
  - -0.03513710770514023
  - -0.0323719699801593
  - -0.026877049085369385
  train_neg_label_ranking_loss:
  - -0.019736842105263157
  - -0.018473895582329317
  - -0.02395330112721417
  - -0.015863453815261042
  - -0.02073268921095008
  train_neg_label_ranking_loss_oob:
  - -0.028309409888357253
  - -0.03373493975903614
  - -0.03824476650563607
  - -0.029317269076305223
  - -0.034219001610305964
  train_precision_macro:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_precision_macro_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.963768115942029
  - 0.9656626506024096
  - 0.9692028985507246
  train_precision_micro:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_precision_micro_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.9637681159420289
  - 0.9656626506024096
  - 0.9692028985507246
  train_precision_samples:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_precision_samples_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.9637681159420289
  - 0.9656626506024096
  - 0.9692028985507246
  train_precision_weighted:
  - 0.981560195024378
  - 0.9813743010318787
  - 0.9792745513733939
  - 0.9818845788883457
  - 0.9849048297593808
  train_precision_weighted_oob:
  - 0.9612622032299493
  - 0.964310831844123
  - 0.9648628922948597
  - 0.9676280300198405
  - 0.9731229509146306
  train_recall_macro:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_recall_macro_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.963768115942029
  - 0.9656626506024096
  - 0.9692028985507246
  train_recall_micro:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_recall_micro_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.9637681159420289
  - 0.9656626506024096
  - 0.9692028985507246
  train_recall_samples:
  - 0.9760765550239234
  - 0.9765060240963855
  - 0.9752415458937198
  - 0.9801204819277108
  - 0.9794685990338164
  train_recall_samples_oob:
  - 0.9599282296650717
  - 0.9632530120481928
  - 0.9637681159420289
  - 0.9656626506024096
  - 0.9692028985507246
  train_recall_weighted:
  - 0.981560195024378
  - 0.9813743010318787
  - 0.9792745513733939
  - 0.9818845788883457
  - 0.9849048297593808
  train_recall_weighted_oob:
  - 0.9612622032299493
  - 0.964310831844123
  - 0.9648628922948597
  - 0.9676280300198405
  - 0.9731229509146306
  train_roc_auc_macro:
  - 0.9968646480515819
  - 0.9972135033568672
  - 0.9961325855204829
  - 0.9974351989698831
  - 0.9967697070886289
  train_roc_auc_macro_oob:
  - 0.988638352194133
  - 0.9920790496407931
  - 0.98554332230585
  - 0.9905641762982844
  - 0.988833575693916
  train_roc_auc_micro:
  - 0.9978981185597839
  - 0.9980429774480117
  - 0.9973328842978886
  - 0.9981691568313336
  - 0.997911598082309
  train_roc_auc_micro_oob:
  - 0.992576010450547
  - 0.9926650178366425
  - 0.9892154073351489
  - 0.9921227588037208
  - 0.9912844542767723
  train_roc_auc_samples:
  - 0.9802631578947368
  - 0.9815261044176706
  - 0.9760466988727858
  - 0.984136546184739
  - 0.9792673107890499
  train_roc_auc_samples_oob:
  - 0.9716905901116426
  - 0.9662650602409638
  - 0.9617552334943639
  - 0.9706827309236947
  - 0.965780998389694
  train_roc_auc_weighted:
  - 0.9983293964635855
  - 0.9983111347114977
  - 0.9978685519233748
  - 0.9986811911196386
  - 0.9982743166615969
  train_roc_auc_weighted_oob:
  - 0.9937507354699009
  - 0.9936553160481533
  - 0.9918632596799429
  - 0.9943760548992573
  - 0.9921951490368639
start: 2023-12-21 16:28:03.218604
wrapper: null
