active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          YGZmZmZmFsCgmZmZmZkVQEAzMzMzMwNAgGZmZmZm9j/AzMzMzMwMwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:06:03.747958
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__0
  params: {}
hash: 40bdb57ee12b7660c9dd89c743fc7a7c5eae1bf0a7cf19ff506001dee9eb34a4
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/40bdb57_20231221T100559419580_embedding_proba__0_VirusPseAAC.yml
results:
  fit_time:
  - 1.0667271614074707
  - 1.1073484420776367
  - 1.0522942543029785
  - 1.0927166938781738
  - 1.085984230041504
  score_time:
  - 0.6311979293823242
  - 0.5293257236480713
  - 0.6201715469360352
  - 0.6004736423492432
  - 0.660545825958252
  test_average_precision_macro:
  - 0.4073126958787781
  - 0.4384260323955454
  - 0.39728357136411413
  - 0.34532694661952174
  - 0.42773616745912135
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.43001534142046055
  - 0.5181715262808883
  - 0.4716113955595866
  - 0.4348107116664773
  - 0.38726799790982813
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6833333333333332
  - 0.7041666666666666
  - 0.6777777777777777
  - 0.7011805555555556
  - 0.6294444444444445
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4492676351394083
  - 0.5360199815675262
  - 0.46216180768494747
  - 0.40800258558683317
  - 0.4048346204075136
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8191489361702128
  - 0.7777777777777777
  - 0.7863247863247863
  - 0.7833333333333333
  - 0.8037037037037037
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8191489361702128
  - 0.7777777777777778
  - 0.7863247863247863
  - 0.7833333333333333
  - 0.8037037037037037
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8191489361702131
  - 0.7777777777777776
  - 0.7863247863247863
  - 0.7833333333333334
  - 0.8037037037037039
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7100542344597413
  - 0.6428571428571429
  - 0.676923076923077
  - 0.655392156862745
  - 0.6962962962962963
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7167087383386402
  - 0.6672229351474636
  - 0.6728395226810724
  - 0.6732828252046342
  - 0.6961658564619028
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6936936936936937
  - 0.6363636363636364
  - 0.647887323943662
  - 0.6438356164383562
  - 0.6718266253869969
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6975683890577509
  - 0.6455026455026456
  - 0.6575091575091577
  - 0.6511904761904763
  - 0.6777777777777779
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5664340350686947
  - 0.4951930896482302
  - 0.5311110338525811
  - 0.5109056813234897
  - 0.5533866422605154
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6833333333333332
  - 0.7041666666666667
  - 0.6777777777777777
  - 0.7011805555555555
  - 0.6294444444444445
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.010113133940202293
  - 0.019572629981383545
  - 0.010279899245732686
  - -0.02414022747926338
  - -0.018946277049145397
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.07007892216082806
  - 0.12463446544328587
  - 0.0921185231440354
  - -0.03360123465063678
  - 0.01914546752389167
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.01702127659574468
  - 0.02958086289075977
  - 0.041025641025641026
  - -0.005
  - 0.008888888888888887
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.020226267880404585
  - 0.04074302567553309
  - 0.01973740655180676
  - -0.05112048172079303
  - -0.037892554098290794
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7627840725605276
  - 0.7808010740146055
  - 0.7626389910211142
  - 0.7776071109451286
  - 0.7252262547748615
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.0638297872340425
  - -2.4166666666666665
  - -2.4615384615384617
  - -2.25
  - -2.2888888888888888
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18085106382978722
  - -0.22222222222222224
  - -0.2136752136752137
  - -0.21666666666666667
  - -0.1962962962962963
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18085106382978725
  - -0.2222222222222222
  - -0.21367521367521367
  - -0.21666666666666667
  - -0.1962962962962963
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1808510638297872
  - -0.2222222222222222
  - -0.21367521367521364
  - -0.21666666666666665
  - -0.19629629629629622
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2899457655402587
  - -0.3571428571428571
  - -0.32307692307692304
  - -0.34460784313725484
  - -0.30370370370370375
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1978723404255319
  - -0.20516975308641977
  - -0.22628205128205126
  - -0.20180555555555557
  - -0.23388888888888887
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8191489361702128
  - 0.7777777777777777
  - 0.7863247863247863
  - 0.7833333333333333
  - 0.8037037037037037
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8191489361702128
  - 0.7777777777777778
  - 0.7863247863247863
  - 0.7833333333333333
  - 0.8037037037037037
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8191489361702131
  - 0.7777777777777776
  - 0.7863247863247863
  - 0.7833333333333334
  - 0.8037037037037039
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7100542344597413
  - 0.6428571428571429
  - 0.676923076923077
  - 0.655392156862745
  - 0.6962962962962963
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8191489361702128
  - 0.7777777777777777
  - 0.7863247863247863
  - 0.7833333333333333
  - 0.8037037037037037
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8191489361702128
  - 0.7777777777777778
  - 0.7863247863247863
  - 0.7833333333333333
  - 0.8037037037037037
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8191489361702131
  - 0.7777777777777776
  - 0.7863247863247863
  - 0.7833333333333334
  - 0.8037037037037039
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7100542344597413
  - 0.6428571428571429
  - 0.676923076923077
  - 0.655392156862745
  - 0.6962962962962963
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6935695839842007
  - 0.6892280870681606
  - 0.6680083565313742
  - 0.5454632983489492
  - 0.5878972898530401
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7993379169849758
  - 0.805083710130759
  - 0.7922826086956521
  - 0.7776740325759933
  - 0.7698092935804458
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.802127659574468
  - 0.7948302469135803
  - 0.7737179487179487
  - 0.7981944444444443
  - 0.766111111111111
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6365550409929553
  - 0.6357689504373177
  - 0.6590207052054879
  - 0.5409345527839823
  - 0.5804728823493454
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.98961761321444
  - 0.9370793950593058
  - 0.8835556558200713
  - 0.8820882285713941
  - 0.9360035363588683
  train_average_precision_macro_oob:
  - 0.3228711553497168
  - 0.2790549672430634
  - 0.28791307187245013
  - 0.2949506016688321
  - 0.2883498304131816
  train_average_precision_micro:
  - 0.8827169434562068
  - 0.888263443664158
  - 0.8721822005237617
  - 0.8862578068231404
  - 0.8755034107729522
  train_average_precision_micro_oob:
  - 0.4014904338878703
  - 0.3778829797565293
  - 0.39407085616262094
  - 0.41259125199041913
  - 0.42165786771846386
  train_average_precision_samples:
  - 0.8691666666666666
  - 0.8822612085769981
  - 0.8625992063492063
  - 0.8719560878243513
  - 0.8693415637860082
  train_average_precision_samples_oob:
  - 0.6817013888888889
  - 0.6588044184535412
  - 0.653207671957672
  - 0.6684131736526946
  - 0.679303840877915
  train_average_precision_weighted:
  - 0.9977650264085733
  - 0.979689501795413
  - 0.9634307407197698
  - 0.9625479433309476
  - 0.9788075401450038
  train_average_precision_weighted_oob:
  - 0.36936185480845907
  - 0.3379500251483753
  - 0.3527270608534544
  - 0.3739429510500767
  - 0.3797001741479114
  train_f1_macro:
  - 0.9187500000000001
  - 0.9132553606237815
  - 0.9196428571428572
  - 0.9231536926147705
  - 0.9207818930041153
  train_f1_macro_oob:
  - 0.7822916666666667
  - 0.7992202729044834
  - 0.7916666666666666
  - 0.7984031936127743
  - 0.7890946502057613
  train_f1_micro:
  - 0.91875
  - 0.9132553606237817
  - 0.9196428571428571
  - 0.9231536926147704
  - 0.9207818930041153
  train_f1_micro_oob:
  - 0.7822916666666667
  - 0.7992202729044834
  - 0.7916666666666666
  - 0.7984031936127745
  - 0.7890946502057613
  train_f1_samples:
  - 0.91875
  - 0.9132553606237817
  - 0.9196428571428571
  - 0.9231536926147704
  - 0.9207818930041154
  train_f1_samples_oob:
  - 0.7822916666666666
  - 0.7992202729044832
  - 0.7916666666666666
  - 0.7984031936127741
  - 0.7890946502057612
  train_f1_weighted:
  - 0.9341417910447762
  - 0.9177541555037019
  - 0.9295143800094295
  - 0.937706676199839
  - 0.9352926724402678
  train_f1_weighted_oob:
  - 0.6570584577114429
  - 0.6864863307694523
  - 0.6667845355964168
  - 0.6843328268835464
  - 0.6654689515386033
  train_jaccard_macro:
  - 0.8528528754528368
  - 0.8426165425222792
  - 0.8538827689190595
  - 0.8606598736219039
  - 0.8564948655189584
  train_jaccard_macro_oob:
  - 0.6719303497027248
  - 0.6907663655117539
  - 0.6841249384641007
  - 0.6898652790837426
  - 0.6800256065995134
  train_jaccard_micro:
  - 0.8497109826589595
  - 0.8403587443946189
  - 0.8512396694214877
  - 0.8572752548656163
  - 0.8531935176358436
  train_jaccard_micro_oob:
  - 0.6424294268605646
  - 0.6655844155844156
  - 0.6551724137931034
  - 0.6644518272425249
  - 0.6516567544604928
  train_jaccard_samples:
  - 0.8660714285714286
  - 0.8557504873294346
  - 0.8669217687074829
  - 0.8721129170230967
  - 0.8677248677248678
  train_jaccard_samples_oob:
  - 0.6511904761904763
  - 0.6715399610136453
  - 0.66312358276644
  - 0.6722269746221843
  - 0.662257495590829
  train_jaccard_weighted:
  - 0.8794199207335381
  - 0.8499824194906755
  - 0.8706276694750545
  - 0.8859218417482464
  - 0.8815970381398577
  train_jaccard_weighted_oob:
  - 0.5120018981431017
  - 0.5419235755883969
  - 0.5221546176232367
  - 0.5390333714311839
  - 0.5200178356295728
  train_label_ranking_average_precision_score:
  - 0.8691666666666663
  - 0.882261208576998
  - 0.8625992063492063
  - 0.8719560878243513
  - 0.8693415637860079
  train_label_ranking_average_precision_score_oob:
  - 0.681701388888889
  - 0.6588044184535412
  - 0.653207671957672
  - 0.6684131736526947
  - 0.679303840877915
  train_matthews_corrcoef_macro:
  - 0.3063568961161974
  - 0.2882520620599956
  - 0.2995323957812963
  - 0.30904377453486825
  - 0.3066348915982314
  train_matthews_corrcoef_macro_oob:
  - -0.018070431279643678
  - -0.008043801977997181
  - -0.014405109756160356
  - 0.006353098052991693
  - 0.002361682925327837
  train_matthews_corrcoef_micro:
  - 0.7449252338475965
  - 0.7118801858562845
  - 0.7377729217730127
  - 0.7502082123522782
  - 0.7489314644853681
  train_matthews_corrcoef_micro_oob:
  - 0.04878605951152789
  - 0.031990987192588125
  - 0.035401937638367964
  - 0.06681214914071847
  - 0.09431027268290804
  train_matthews_corrcoef_samples:
  - 0.6314608785925184
  - 0.5971888217107533
  - 0.6192185874787035
  - 0.6360418114451298
  - 0.6190965046943799
  train_matthews_corrcoef_samples_oob:
  - 0.019037811838447133
  - 0.00837693293586945
  - 0.011792493036215414
  - 0.019161676646706587
  - 0.04082465655628312
  train_matthews_corrcoef_weighted:
  - 0.6220438527239208
  - 0.5842123969292276
  - 0.6141861356551381
  - 0.6274350131587253
  - 0.6274573017413632
  train_matthews_corrcoef_weighted_oob:
  - -0.03641949397876577
  - -0.015977910634621496
  - -0.030320929218162592
  - 0.012771277949871165
  - 0.004263071854578089
  train_ndgc:
  - 0.9052859334134844
  - 0.9146120523157523
  - 0.8986346452915959
  - 0.9071346167492252
  - 0.9045689566145024
  train_ndgc_oob:
  - 0.7635342148010111
  - 0.7465895579827398
  - 0.7420693747774084
  - 0.7538177139299906
  - 0.7614988521367912
  train_neg_coverage_error:
  - -1.68125
  - -1.5730994152046784
  - -1.6011904761904763
  - -1.6167664670658684
  - -1.654320987654321
  train_neg_coverage_error_oob:
  - -2.3625
  - -2.3157894736842106
  - -2.2976190476190474
  - -2.3293413173652695
  - -2.3395061728395063
  train_neg_hamming_loss_macro:
  - -0.08125
  - -0.0867446393762183
  - -0.08035714285714285
  - -0.07684630738522953
  - -0.07921810699588477
  train_neg_hamming_loss_macro_oob:
  - -0.21770833333333336
  - -0.20077972709551653
  - -0.20833333333333334
  - -0.20159680638722555
  - -0.2109053497942387
  train_neg_hamming_loss_micro:
  - -0.08125
  - -0.08674463937621832
  - -0.08035714285714286
  - -0.07684630738522955
  - -0.07921810699588477
  train_neg_hamming_loss_micro_oob:
  - -0.21770833333333334
  - -0.20077972709551656
  - -0.20833333333333334
  - -0.20159680638722555
  - -0.2109053497942387
  train_neg_hamming_loss_samples:
  - -0.08124999999999999
  - -0.08674463937621832
  - -0.08035714285714286
  - -0.07684630738522955
  - -0.07921810699588476
  train_neg_hamming_loss_samples_oob:
  - -0.2177083333333333
  - -0.2007797270955166
  - -0.20833333333333334
  - -0.20159680638722557
  - -0.21090534979423872
  train_neg_hamming_loss_weighted:
  - -0.06585820895522389
  - -0.08224584449629821
  - -0.07048561999057049
  - -0.06229332380016088
  - -0.0647073275597322
  train_neg_hamming_loss_weighted_oob:
  - -0.3429415422885572
  - -0.3135136692305476
  - -0.33321546440358313
  - -0.31566717311645365
  - -0.3345310484613967
  train_neg_label_ranking_loss:
  - -0.07975694444444445
  - -0.07316439246263806
  - -0.08072089947089947
  - -0.07724550898203594
  - -0.07954389574759946
  train_neg_label_ranking_loss_oob:
  - -0.2205902777777778
  - -0.2250487329434698
  - -0.220734126984127
  - -0.22183965402528277
  - -0.21841563786008233
  train_precision_macro:
  - 0.9187500000000001
  - 0.9132553606237815
  - 0.9196428571428572
  - 0.9231536926147705
  - 0.9207818930041153
  train_precision_macro_oob:
  - 0.7822916666666667
  - 0.7992202729044834
  - 0.7916666666666666
  - 0.7984031936127743
  - 0.7890946502057613
  train_precision_micro:
  - 0.91875
  - 0.9132553606237817
  - 0.9196428571428571
  - 0.9231536926147704
  - 0.9207818930041153
  train_precision_micro_oob:
  - 0.7822916666666667
  - 0.7992202729044834
  - 0.7916666666666666
  - 0.7984031936127745
  - 0.7890946502057613
  train_precision_samples:
  - 0.91875
  - 0.9132553606237817
  - 0.9196428571428571
  - 0.9231536926147704
  - 0.9207818930041154
  train_precision_samples_oob:
  - 0.7822916666666666
  - 0.7992202729044832
  - 0.7916666666666666
  - 0.7984031936127741
  - 0.7890946502057612
  train_precision_weighted:
  - 0.9341417910447762
  - 0.9177541555037019
  - 0.9295143800094295
  - 0.937706676199839
  - 0.9352926724402678
  train_precision_weighted_oob:
  - 0.6570584577114429
  - 0.6864863307694523
  - 0.6667845355964168
  - 0.6843328268835464
  - 0.6654689515386033
  train_recall_macro:
  - 0.9187500000000001
  - 0.9132553606237815
  - 0.9196428571428572
  - 0.9231536926147705
  - 0.9207818930041153
  train_recall_macro_oob:
  - 0.7822916666666667
  - 0.7992202729044834
  - 0.7916666666666666
  - 0.7984031936127743
  - 0.7890946502057613
  train_recall_micro:
  - 0.91875
  - 0.9132553606237817
  - 0.9196428571428571
  - 0.9231536926147704
  - 0.9207818930041153
  train_recall_micro_oob:
  - 0.7822916666666667
  - 0.7992202729044834
  - 0.7916666666666666
  - 0.7984031936127745
  - 0.7890946502057613
  train_recall_samples:
  - 0.91875
  - 0.9132553606237817
  - 0.9196428571428571
  - 0.9231536926147704
  - 0.9207818930041154
  train_recall_samples_oob:
  - 0.7822916666666666
  - 0.7992202729044832
  - 0.7916666666666666
  - 0.7984031936127741
  - 0.7890946502057612
  train_recall_weighted:
  - 0.9341417910447762
  - 0.9177541555037019
  - 0.9295143800094295
  - 0.937706676199839
  - 0.9352926724402678
  train_recall_weighted_oob:
  - 0.6570584577114429
  - 0.6864863307694523
  - 0.6667845355964168
  - 0.6843328268835464
  - 0.6654689515386033
  train_roc_auc_macro:
  - 0.9995063986114426
  - 0.9962350370911542
  - 0.9943617281694462
  - 0.9941872306317671
  - 0.9957317157976032
  train_roc_auc_macro_oob:
  - 0.5640600871459435
  - 0.5697758481481189
  - 0.6034855611957771
  - 0.5845029152769877
  - 0.5942797511738412
  train_roc_auc_micro:
  - 0.9500127819401019
  - 0.9542464490719403
  - 0.9479645234994963
  - 0.9525034005999963
  - 0.9481128727310271
  train_roc_auc_micro_oob:
  - 0.7660183928840647
  - 0.7671919985155834
  - 0.7756369309387514
  - 0.772560418879386
  - 0.7767388737247614
  train_roc_auc_samples:
  - 0.9202430555555555
  - 0.9268356075373618
  - 0.9192791005291004
  - 0.922754491017964
  - 0.9204561042524005
  train_roc_auc_samples_oob:
  - 0.7794097222222222
  - 0.7749512670565302
  - 0.7792658730158729
  - 0.7781603459747173
  - 0.7815843621399177
  train_roc_auc_weighted:
  - 0.9998489525805507
  - 0.9985864084367843
  - 0.9979061319874678
  - 0.9978160286552102
  - 0.9983980769629655
  train_roc_auc_weighted_oob:
  - 0.5496783803469227
  - 0.5431831093154993
  - 0.5530195928302397
  - 0.5613962249489316
  - 0.5640250187519982
start: 2023-12-21 10:05:59.419580
wrapper: null
