active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/NDMzMzMz8z/MzMzMzMz8vw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAAAAAAAAAAAAAAjAAAAAAAAAAEAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:38:21.060832
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__9
  params: {}
hash: 99de015aaa618840df12fc3f29d518762e2dbc33b138c8327d971298b58e971d
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/99de015_20231222T011744399258_embedding_proba_weak__9_CHD_49.yml
results:
  fit_time:
  - 1180.2056181430817
  - 1178.8776185512543
  - 1173.1791570186615
  - 1190.8967657089233
  - 1212.8731906414032
  score_time:
  - 7.731638431549072
  - 7.843599319458008
  - 6.952826023101807
  - 7.484683036804199
  - 7.779837608337402
  test_average_precision_macro:
  - 0.4863163334544529
  - 0.49604023690352744
  - 0.5084334718556426
  - 0.5303496704636369
  - 0.5175063999906182
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6175202345070703
  - 0.6478165903893681
  - 0.6267517898997549
  - 0.671485667951409
  - 0.6435099563439375
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7572727272727274
  - 0.7894144144144144
  - 0.7629142300194931
  - 0.7731651376146789
  - 0.7523398398398398
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6058963119268606
  - 0.6202395001379171
  - 0.612981466521484
  - 0.6660042818489471
  - 0.6288375613628839
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6075757575757575
  - 0.6231231231231231
  - 0.6257309941520467
  - 0.6605504587155963
  - 0.6246246246246246
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6075757575757575
  - 0.6231231231231231
  - 0.6257309941520468
  - 0.6605504587155964
  - 0.6246246246246246
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6075757575757574
  - 0.6231231231231231
  - 0.6257309941520467
  - 0.6605504587155961
  - 0.6246246246246248
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5061767500791892
  - 0.5283815283815284
  - 0.5248435774751564
  - 0.5818258172890555
  - 0.5386701580473207
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4682205183498171
  - 0.4825141713412349
  - 0.4878234510587452
  - 0.5169186178713004
  - 0.4804578207388144
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4363438520130577
  - 0.4525627044711014
  - 0.4553191489361702
  - 0.4931506849315068
  - 0.45414847161572053
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.45787878787878794
  - 0.4764049764049765
  - 0.4806599832915622
  - 0.5253028317248501
  - 0.4755937755937756
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.34741515124422107
  - 0.36672460861119255
  - 0.3661462183778103
  - 0.4138758158787958
  - 0.3763160227578189
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7572727272727272
  - 0.8074324324324326
  - 0.7629142300194933
  - 0.7823394495412844
  - 0.7523398398398401
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03222186693538976
  - 0.06725562136910708
  - 0.0600885032451724
  - 0.1500353233666634
  - 0.06692975999286031
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.17643261093699114
  - 0.21362004290507525
  - 0.19538406855910836
  - 0.3072809575147219
  - 0.22176627457059506
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1537562155613442
  - 0.1954401727914682
  - 0.18426039850937892
  - 0.27703116892508917
  - 0.19235013261956785
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.013105349376552947
  - 0.05574148757184938
  - 0.03359035516236078
  - 0.17344368629536447
  - 0.05929383610424279
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8416940446777891
  - 0.8612523786589286
  - 0.8436852502840138
  - 0.8458920862788314
  - 0.8373740166171986
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.9727272727272727
  - -3.6396396396396398
  - -3.710526315789474
  - -3.7522935779816513
  - -3.864864864864865
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3924242424242424
  - -0.3768768768768769
  - -0.3742690058479532
  - -0.3394495412844037
  - -0.3753753753753754
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3924242424242424
  - -0.3768768768768769
  - -0.3742690058479532
  - -0.3394495412844037
  - -0.37537537537537535
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3924242424242424
  - -0.3768768768768768
  - -0.37426900584795314
  - -0.3394495412844036
  - -0.3753753753753754
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.4938232499208109
  - -0.4716184716184716
  - -0.4751564225248436
  - -0.4181741827109446
  - -0.46132984195267934
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.26815656565656565
  - -0.1957207207207207
  - -0.22958089668615986
  - -0.2340468909276249
  - -0.2534284284284284
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6075757575757575
  - 0.6231231231231231
  - 0.6257309941520467
  - 0.6605504587155963
  - 0.6246246246246246
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6075757575757575
  - 0.6231231231231231
  - 0.6257309941520468
  - 0.6605504587155964
  - 0.6246246246246246
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6075757575757574
  - 0.6231231231231231
  - 0.6257309941520467
  - 0.6605504587155961
  - 0.6246246246246248
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5061767500791892
  - 0.5283815283815284
  - 0.5248435774751564
  - 0.5818258172890555
  - 0.5386701580473207
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6075757575757575
  - 0.6231231231231231
  - 0.6257309941520467
  - 0.6605504587155963
  - 0.6246246246246246
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6075757575757575
  - 0.6231231231231231
  - 0.6257309941520468
  - 0.6605504587155964
  - 0.6246246246246246
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6075757575757574
  - 0.6231231231231231
  - 0.6257309941520467
  - 0.6605504587155961
  - 0.6246246246246248
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5061767500791892
  - 0.5283815283815284
  - 0.5248435774751564
  - 0.5818258172890555
  - 0.5386701580473207
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5130175471537086
  - 0.5293986496686133
  - 0.6000791516059507
  - 0.5827734413682206
  - 0.5758648223117301
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7075225826942297
  - 0.7385167464114832
  - 0.7486734371156482
  - 0.7422820708031975
  - 0.7192918047231375
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7318434343434344
  - .nan
  - 0.7704191033138402
  - .nan
  - 0.7465715715715715
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5064799035176708
  - 0.5547625506464802
  - 0.5684688934294235
  - 0.5858978858993668
  - 0.5560333992225235
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8152936247853318
  - 0.8047034418538465
  - 0.8072016063487103
  - 0.7952892251453748
  - 0.8061855311050063
  train_average_precision_macro_oob:
  - 0.7166315159992749
  - 0.7183647479327471
  - 0.7161498224910602
  - 0.7110928503361554
  - 0.7151291076108048
  train_average_precision_micro:
  - 0.8550474721819493
  - 0.8654574313495946
  - 0.8640265247765528
  - 0.8552291016926814
  - 0.8584918318921605
  train_average_precision_micro_oob:
  - 0.8505733039332883
  - 0.8593120546461228
  - 0.8564038953841232
  - 0.8500412344999915
  - 0.8561195216389096
  train_average_precision_samples:
  - 0.891420099875156
  - 0.8777658908908909
  - 0.8964632149155959
  - 0.8808327105132038
  - 0.8810842092092093
  train_average_precision_samples_oob:
  - 0.8869850187265917
  - 0.873836961961962
  - 0.8818058704963466
  - 0.8794718485301446
  - 0.8772459959959961
  train_average_precision_weighted:
  - 0.8535535126374666
  - 0.8646167710787758
  - 0.8647620889197557
  - 0.8535058476514246
  - 0.8616911151357968
  train_average_precision_weighted_oob:
  - 0.8455280533667212
  - 0.8546639952552495
  - 0.8536057760820456
  - 0.8454013724005222
  - 0.8549211261243423
  train_f1_macro:
  - 0.7782771535580525
  - 0.7807807807807808
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345344
  train_f1_macro_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880574
  - 0.7746636771300448
  - 0.7755255255255257
  train_f1_micro:
  - 0.7782771535580524
  - 0.7807807807807807
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345346
  train_f1_micro_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880574
  - 0.7746636771300448
  - 0.7755255255255256
  train_f1_samples:
  - 0.7782771535580524
  - 0.7807807807807808
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345346
  train_f1_samples_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880575
  - 0.7746636771300448
  - 0.7755255255255254
  train_f1_weighted:
  - 0.7202629900397428
  - 0.7249009480684873
  - 0.7199012240149113
  - 0.7254593678223777
  - 0.7284134528229017
  train_f1_weighted_oob:
  - 0.714761787939748
  - 0.7199228023835353
  - 0.7133577107399096
  - 0.7186840830612021
  - 0.7195226722785777
  train_jaccard_macro:
  - 0.6506224276211531
  - 0.6532297030398607
  - 0.6499052931055997
  - 0.6534548124442249
  - 0.6583969207741717
  train_jaccard_macro_oob:
  - 0.6424659540174281
  - 0.6467980386056157
  - 0.6420438720132244
  - 0.6451059498889115
  - 0.6462944729026779
  train_jaccard_micro:
  - 0.6370324954015941
  - 0.6403940886699507
  - 0.6363636363636364
  - 0.6407112201103617
  - 0.6454601605929586
  train_jaccard_micro_oob:
  - 0.6290420988407566
  - 0.6338546458141674
  - 0.6283076923076923
  - 0.6322049405306496
  - 0.6333537706928265
  train_jaccard_samples:
  - 0.6612199036918138
  - 0.6675890175890175
  - 0.6636540330417882
  - 0.6662716207559256
  - 0.6715679965679966
  train_jaccard_samples_oob:
  - 0.653290529695024
  - 0.6621943371943373
  - 0.6552532123960695
  - 0.6581571642109759
  - 0.6592878592878593
  train_jaccard_weighted:
  - 0.568719585085145
  - 0.5734489137749781
  - 0.5680706699738138
  - 0.5743102150276279
  - 0.5775659654348396
  train_jaccard_weighted_oob:
  - 0.5613455364972357
  - 0.5669800363515797
  - 0.5597897786978536
  - 0.565691136346769
  - 0.56597026815467
  train_label_ranking_average_precision_score:
  - 0.8981616729088633
  - 0.8800181431431418
  - 0.9032659360040299
  - 0.8853170154459383
  - 0.887840965965965
  train_label_ranking_average_precision_score_oob:
  - 0.8937265917602992
  - 0.8760892142142134
  - 0.888608591584781
  - 0.8839561534628789
  - 0.884002752752752
  train_matthews_corrcoef_macro:
  - 0.4443463581232761
  - 0.4515643080122375
  - 0.4500137526666941
  - 0.4475348353392965
  - 0.4469849256045226
  train_matthews_corrcoef_macro_oob:
  - 0.43270205099180664
  - 0.44246596387863546
  - 0.4390952799815026
  - 0.4356002958261256
  - 0.4286864331593769
  train_matthews_corrcoef_micro:
  - 0.5820310920593835
  - 0.5896847952815368
  - 0.5863828512730622
  - 0.5876118065502939
  - 0.5914307778507888
  train_matthews_corrcoef_micro_oob:
  - 0.5714887244404033
  - 0.5808185389839348
  - 0.5754697651963369
  - 0.5759738669174947
  - 0.574830396028008
  train_matthews_corrcoef_samples:
  - 0.522300649078362
  - 0.5321070303250198
  - 0.5238284226830187
  - 0.5296842982172061
  - 0.5350872641583132
  train_matthews_corrcoef_samples_oob:
  - 0.5126295630007927
  - 0.523642112570209
  - 0.5122739168956297
  - 0.5141429735546877
  - 0.5123292495052146
  train_matthews_corrcoef_weighted:
  - 0.5054611543800861
  - 0.5176871692833205
  - 0.5146468401872322
  - 0.5083352366252862
  - 0.5082789305521738
  train_matthews_corrcoef_weighted_oob:
  - 0.49620901383362753
  - 0.508783410923514
  - 0.5037691420447864
  - 0.4967518320098516
  - 0.4917053055715103
  train_ndgc:
  - 0.9323176415423272
  - 0.9236491520770479
  - 0.9359935423317945
  - 0.9256905919528201
  - 0.9246925751899173
  train_ndgc_oob:
  - 0.930669947480576
  - 0.9218300623636899
  - 0.9263701737361958
  - 0.9250252092889572
  - 0.9213662644674808
  train_neg_coverage_error:
  - -3.204494382022472
  - -3.3468468468468466
  - -3.2199546485260773
  - -3.2645739910313902
  - -3.2612612612612613
  train_neg_coverage_error_oob:
  - -3.2831460674157302
  - -3.400900900900901
  - -3.3333333333333335
  - -3.304932735426009
  - -3.279279279279279
  train_neg_hamming_loss_macro:
  - -0.2217228464419476
  - -0.21921921921921925
  - -0.2222222222222222
  - -0.21898355754857998
  - -0.21546546546546544
  train_neg_hamming_loss_macro_oob:
  - -0.22771535580524346
  - -0.22409909909909909
  - -0.22826908541194255
  - -0.22533632286995517
  - -0.22447447447447447
  train_neg_hamming_loss_micro:
  - -0.22172284644194756
  - -0.21921921921921922
  - -0.2222222222222222
  - -0.21898355754857998
  - -0.21546546546546547
  train_neg_hamming_loss_micro_oob:
  - -0.22771535580524344
  - -0.22409909909909909
  - -0.22826908541194255
  - -0.22533632286995517
  - -0.22447447447447447
  train_neg_hamming_loss_samples:
  - -0.22172284644194756
  - -0.21921921921921922
  - -0.22222222222222218
  - -0.21898355754857998
  - -0.21546546546546544
  train_neg_hamming_loss_samples_oob:
  - -0.22771535580524346
  - -0.22409909909909909
  - -0.22826908541194255
  - -0.22533632286995517
  - -0.22447447447447447
  train_neg_hamming_loss_weighted:
  - -0.27973700996025713
  - -0.27509905193151263
  - -0.28009877598508864
  - -0.2745406321776222
  - -0.2715865471770984
  train_neg_hamming_loss_weighted_oob:
  - -0.28523821206025224
  - -0.28007719761646466
  - -0.28664228926009033
  - -0.28131591693879787
  - -0.2804773277214222
  train_neg_label_ranking_loss:
  - -0.10350187265917604
  - -0.12743368368368369
  - -0.1053665910808768
  - -0.11789362232187343
  - -0.11512762762762761
  train_neg_label_ranking_loss_oob:
  - -0.11186641697877651
  - -0.13403403403403402
  - -0.12246157722348198
  - -0.12255854509217738
  - -0.11880005005005005
  train_precision_macro:
  - 0.7782771535580525
  - 0.7807807807807808
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345344
  train_precision_macro_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880574
  - 0.7746636771300448
  - 0.7755255255255257
  train_precision_micro:
  - 0.7782771535580524
  - 0.7807807807807807
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345346
  train_precision_micro_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880574
  - 0.7746636771300448
  - 0.7755255255255256
  train_precision_samples:
  - 0.7782771535580524
  - 0.7807807807807808
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345346
  train_precision_samples_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880575
  - 0.7746636771300448
  - 0.7755255255255254
  train_precision_weighted:
  - 0.7202629900397428
  - 0.7249009480684873
  - 0.7199012240149113
  - 0.7254593678223777
  - 0.7284134528229017
  train_precision_weighted_oob:
  - 0.714761787939748
  - 0.7199228023835353
  - 0.7133577107399096
  - 0.7186840830612021
  - 0.7195226722785777
  train_recall_macro:
  - 0.7782771535580525
  - 0.7807807807807808
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345344
  train_recall_macro_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880574
  - 0.7746636771300448
  - 0.7755255255255257
  train_recall_micro:
  - 0.7782771535580524
  - 0.7807807807807807
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345346
  train_recall_micro_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880574
  - 0.7746636771300448
  - 0.7755255255255256
  train_recall_samples:
  - 0.7782771535580524
  - 0.7807807807807808
  - 0.7777777777777778
  - 0.78101644245142
  - 0.7845345345345346
  train_recall_samples_oob:
  - 0.7722846441947565
  - 0.7759009009009009
  - 0.7717309145880575
  - 0.7746636771300448
  - 0.7755255255255254
  train_recall_weighted:
  - 0.7202629900397428
  - 0.7249009480684873
  - 0.7199012240149113
  - 0.7254593678223777
  - 0.7284134528229017
  train_recall_weighted_oob:
  - 0.714761787939748
  - 0.7199228023835353
  - 0.7133577107399096
  - 0.7186840830612021
  - 0.7195226722785777
  train_roc_auc_macro:
  - 0.8047025308565109
  - 0.7978179063364714
  - 0.7980025329372916
  - 0.7928588257320549
  - 0.7994619423092647
  train_roc_auc_macro_oob:
  - 0.7789830851710051
  - 0.7678299979433412
  - 0.7631442624362365
  - 0.7568492661498117
  - 0.7697564254683513
  train_roc_auc_micro:
  - 0.8780786026200873
  - 0.8726696167226555
  - 0.8718563118091913
  - 0.8735574160388201
  - 0.87793895092502
  train_roc_auc_micro_oob:
  - 0.87117903930131
  - 0.865458304878974
  - 0.8628859802210587
  - 0.8677885053906634
  - 0.8722268526427621
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7928219464052413
  - 0.7999116870632061
  - 0.7980405944776626
  - 0.7838656231983603
  - 0.8018110424845688
  train_roc_auc_weighted_oob:
  - 0.7868630996207849
  - 0.7916187653459051
  - 0.7879050280250295
  - 0.7794196751053811
  - 0.79615288437434
start: 2023-12-22 01:17:44.399258
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
