active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz478AMzMzMzPjv6CZmZmZmRFAwMzMzMzMBMAAMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:59:02.747168
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba_weak__1
  params: {}
hash: 78e4d02354ce527157d7b9e1573f81384ed2010f9739be0bb50e206c8e203e51
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/78e4d02_20231221T065855392620_proba_weak__1_VirusGO.yml
results:
  fit_time:
  - 3.6861460208892822
  - 3.6924233436584473
  - 3.50028395652771
  - 3.5002052783966064
  - 3.5656096935272217
  score_time:
  - 0.8028974533081055
  - 0.7938151359558105
  - 0.7445774078369141
  - 0.7815673351287842
  - 0.7816193103790283
  test_average_precision_macro:
  - 0.9557841740841234
  - 0.9344868343377812
  - 0.963285821561982
  - 0.8936045078651035
  - 0.9348648712878816
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8185681019342584
  - 0.8917519682618906
  - 0.8874423969260334
  - 0.8165204955599978
  - 0.8247687571843231
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8718253968253966
  - 0.9126984126984126
  - 0.9346846846846848
  - 0.8333333333333333
  - 0.8805555555555555
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9318856464135369
  - 0.9509394522992795
  - 0.9615316474150145
  - 0.8994556535157558
  - 0.9211124326653739
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9126984126984127
  - 0.9047619047619048
  - 0.9009009009009009
  - 0.9053030303030303
  - 0.9285714285714287
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9126984126984127
  - 0.9047619047619048
  - 0.9009009009009009
  - 0.9053030303030303
  - 0.9285714285714286
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9126984126984128
  - 0.9047619047619049
  - 0.9009009009009009
  - 0.9053030303030304
  - 0.9285714285714286
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9028571428571429
  - 0.8912231559290383
  - 0.9005405405405404
  - 0.9015151515151515
  - 0.9285714285714286
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8407663592446202
  - 0.8281638807019053
  - 0.8231571167386315
  - 0.8289098556474701
  - 0.8672815107597717
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8394160583941606
  - 0.8260869565217391
  - 0.819672131147541
  - 0.8269896193771626
  - 0.8666666666666667
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8582766439909297
  - 0.8463718820861679
  - 0.8462033462033463
  - 0.8457792207792209
  - 0.8826530612244897
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8245375494071147
  - 0.8044289225704696
  - 0.8211824016804761
  - 0.822187930876038
  - 0.866961791831357
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8718253968253966
  - 0.9126984126984128
  - 0.9346846846846846
  - 0.8333333333333333
  - 0.8805555555555555
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3711520528375633
  - 0.31954928433727064
  - 0.28121546076845383
  - 0.30431757360303696
  - 0.4185009201988595
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7064069336477353
  - 0.6833875815741818
  - 0.6989507372005972
  - 0.6740002861509622
  - 0.7641588355493029
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6316624316222549
  - 0.555148280143258
  - 0.6323215376635263
  - 0.574940149911387
  - 0.7090433840032072
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6109055314010534
  - 0.5854515052731145
  - 0.5736795399676459
  - 0.5687545591492463
  - 0.6789036060730875
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9063476186913546
  - 0.9364881244309105
  - 0.9526842882937232
  - 0.8762929163916781
  - 0.9171748792819423
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5714285714285714
  - -1.4761904761904763
  - -1.5675675675675675
  - -1.7272727272727273
  - -1.6428571428571428
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08730158730158728
  - -0.09523809523809523
  - -0.0990990990990991
  - -0.09469696969696968
  - -0.07142857142857141
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0873015873015873
  - -0.09523809523809523
  - -0.0990990990990991
  - -0.0946969696969697
  - -0.07142857142857142
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.0873015873015873
  - -0.09523809523809523
  - -0.0990990990990991
  - -0.09469696969696968
  - -0.07142857142857142
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09714285714285716
  - -0.10877684407096172
  - -0.09945945945945946
  - -0.09848484848484847
  - -0.07142857142857142
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07083333333333333
  - -0.05
  - -0.04016516516516517
  - -0.11022727272727274
  - -0.0744047619047619
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9126984126984127
  - 0.9047619047619048
  - 0.9009009009009009
  - 0.9053030303030303
  - 0.9285714285714287
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9126984126984127
  - 0.9047619047619048
  - 0.9009009009009009
  - 0.9053030303030303
  - 0.9285714285714286
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9126984126984128
  - 0.9047619047619049
  - 0.9009009009009009
  - 0.9053030303030304
  - 0.9285714285714286
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9028571428571429
  - 0.8912231559290383
  - 0.9005405405405404
  - 0.9015151515151515
  - 0.9285714285714286
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9126984126984127
  - 0.9047619047619048
  - 0.9009009009009009
  - 0.9053030303030303
  - 0.9285714285714287
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9126984126984127
  - 0.9047619047619048
  - 0.9009009009009009
  - 0.9053030303030303
  - 0.9285714285714286
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9126984126984128
  - 0.9047619047619049
  - 0.9009009009009009
  - 0.9053030303030304
  - 0.9285714285714286
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9028571428571429
  - 0.8912231559290383
  - 0.9005405405405404
  - 0.9015151515151515
  - 0.9285714285714286
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9780092592592592
  - 0.9731105473378436
  - 0.9825566590272473
  - 0.9550192612079867
  - 0.9660705003248863
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9445544554455446
  - 0.9565896010145352
  - 0.9559302325581396
  - 0.9324311884378164
  - 0.9473267326732673
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9291666666666668
  - 0.95
  - 0.9598348348348348
  - 0.889772727272727
  - 0.9255952380952381
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9605555555555556
  - 0.9703319573443413
  - 0.9731818181818181
  - 0.9480367622524486
  - 0.9523286549707602
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9498063423317383
  - 0.9471180706360948
  - 0.9452273632740814
  - 0.9685472815078361
  - 0.9459509367998047
  train_average_precision_macro_oob:
  - 0.9201365321520352
  - 0.9289501446193947
  - 0.9157572951222702
  - 0.9426600080379407
  - 0.9196963462536761
  train_average_precision_micro:
  - 0.8697295125980276
  - 0.8521733010571112
  - 0.8473754335880855
  - 0.8669008657775447
  - 0.8672320613670821
  train_average_precision_micro_oob:
  - 0.8427801253424638
  - 0.8350877528160594
  - 0.8253952671878728
  - 0.8422088122316327
  - 0.8443885716007454
  train_average_precision_samples:
  - 0.8994949494949495
  - 0.8964646464646464
  - 0.9161764705882353
  - 0.9069529652351737
  - 0.9
  train_average_precision_samples_oob:
  - 0.8703030303030302
  - 0.8712121212121212
  - 0.8589215686274508
  - 0.8816973415132925
  - 0.8654545454545454
  train_average_precision_weighted:
  - 0.9457393119693652
  - 0.937537937653431
  - 0.9321389467081233
  - 0.9552046319831118
  - 0.9416032312088888
  train_average_precision_weighted_oob:
  - 0.9298297798821388
  - 0.9256475631291483
  - 0.9149553316482413
  - 0.933943689525707
  - 0.9267225222261253
  train_f1_macro:
  - 0.9242424242424243
  - 0.9232323232323233
  - 0.9205882352941178
  - 0.913087934560327
  - 0.9262626262626262
  train_f1_macro_oob:
  - 0.9171717171717172
  - 0.9141414141414143
  - 0.9098039215686277
  - 0.9100204498977504
  - 0.9181818181818183
  train_f1_micro:
  - 0.9242424242424242
  - 0.9232323232323232
  - 0.9205882352941176
  - 0.9130879345603272
  - 0.9262626262626262
  train_f1_micro_oob:
  - 0.9171717171717172
  - 0.9141414141414141
  - 0.9098039215686274
  - 0.9100204498977505
  - 0.9181818181818182
  train_f1_samples:
  - 0.9242424242424242
  - 0.9232323232323233
  - 0.9205882352941176
  - 0.9130879345603271
  - 0.9262626262626261
  train_f1_samples_oob:
  - 0.9171717171717172
  - 0.9141414141414141
  - 0.9098039215686275
  - 0.9100204498977504
  - 0.918181818181818
  train_f1_weighted:
  - 0.924962496249625
  - 0.9263983114729383
  - 0.9211415259172976
  - 0.9176204865244332
  - 0.9266126612661265
  train_f1_weighted_oob:
  - 0.913051305130513
  - 0.9142770993517263
  - 0.9066686080372743
  - 0.9099594054268535
  - 0.9153315331533153
  train_jaccard_macro:
  - 0.8598692666396573
  - 0.8582394490227658
  - 0.8536210797009048
  - 0.8421860501787358
  - 0.8633411600840913
  train_jaccard_macro_oob:
  - 0.8477647765101407
  - 0.8429526633882279
  - 0.8358530784691179
  - 0.8365721239803249
  - 0.8496070401602532
  train_jaccard_micro:
  - 0.8591549295774648
  - 0.8574108818011257
  - 0.8528610354223434
  - 0.8400752587017873
  - 0.8626528692380057
  train_jaccard_micro_oob:
  - 0.8470149253731343
  - 0.8418604651162791
  - 0.8345323741007195
  - 0.8348968105065666
  - 0.8487394957983193
  train_jaccard_samples:
  - 0.8772005772005772
  - 0.8754689754689755
  - 0.8704481792717087
  - 0.8581653520303827
  - 0.8795093795093794
  train_jaccard_samples_oob:
  - 0.8659451659451659
  - 0.8611832611832613
  - 0.8528011204481794
  - 0.8545135845749342
  - 0.8672438672438672
  train_jaccard_weighted:
  - 0.8606568620528885
  - 0.8635696061876745
  - 0.854312059255517
  - 0.8493288150292666
  - 0.8634936935298055
  train_jaccard_weighted_oob:
  - 0.8401873294264177
  - 0.8428862398998228
  - 0.8301163548663771
  - 0.8357245137215867
  - 0.8443203181905862
  train_label_ranking_average_precision_score:
  - 0.8994949494949495
  - 0.8964646464646464
  - 0.9161764705882349
  - 0.9069529652351737
  - 0.8999999999999998
  train_label_ranking_average_precision_score_oob:
  - 0.8703030303030302
  - 0.8712121212121209
  - 0.8589215686274508
  - 0.8816973415132925
  - 0.8654545454545455
  train_matthews_corrcoef_macro:
  - 0.3952582507504107
  - 0.3899772300392901
  - 0.37428371533519433
  - 0.31723727849252564
  - 0.4043966771275085
  train_matthews_corrcoef_macro_oob:
  - 0.3758855185889558
  - 0.3533637986176887
  - 0.32460519728854154
  - 0.3215483765839533
  - 0.3771954625899021
  train_matthews_corrcoef_micro:
  - 0.7543002819862455
  - 0.7496684808315169
  - 0.7346471447992123
  - 0.7170481813963102
  - 0.7613996298866271
  train_matthews_corrcoef_micro_oob:
  - 0.7296512041816879
  - 0.7176173429338434
  - 0.6952938063037939
  - 0.7060618940157702
  - 0.7333325887431591
  train_matthews_corrcoef_samples:
  - 0.6810330437205286
  - 0.6781610494884283
  - 0.6480856195313928
  - 0.6178780222917606
  - 0.6949011989403513
  train_matthews_corrcoef_samples_oob:
  - 0.6468969495869913
  - 0.6328592055505255
  - 0.5939679724725692
  - 0.6143435379254819
  - 0.6562276302731744
  train_matthews_corrcoef_weighted:
  - 0.6690735645198267
  - 0.6635767328410358
  - 0.6457507485770144
  - 0.6109309236575866
  - 0.6765642785777003
  train_matthews_corrcoef_weighted_oob:
  - 0.6406610546690478
  - 0.6247724573471171
  - 0.5946563199362336
  - 0.6035929284313377
  - 0.6446042163423199
  train_ndgc:
  - 0.926703762452446
  - 0.924322533234072
  - 0.9392138089932864
  - 0.9322993720455479
  - 0.9270058366915571
  train_ndgc_oob:
  - 0.9053578973374776
  - 0.905994741582151
  - 0.8976663740921529
  - 0.9157823687891187
  - 0.9012223999170248
  train_neg_coverage_error:
  - -1.509090909090909
  - -1.509090909090909
  - -1.4352941176470588
  - -1.5153374233128833
  - -1.509090909090909
  train_neg_coverage_error_oob:
  - -1.6363636363636365
  - -1.6181818181818182
  - -1.6352941176470588
  - -1.638036809815951
  - -1.6787878787878787
  train_neg_hamming_loss_macro:
  - -0.07575757575757576
  - -0.07676767676767676
  - -0.07941176470588236
  - -0.0869120654396728
  - -0.07373737373737374
  train_neg_hamming_loss_macro_oob:
  - -0.08282828282828282
  - -0.08585858585858586
  - -0.09019607843137256
  - -0.0899795501022495
  - -0.08181818181818182
  train_neg_hamming_loss_micro:
  - -0.07575757575757576
  - -0.07676767676767676
  - -0.07941176470588235
  - -0.0869120654396728
  - -0.07373737373737374
  train_neg_hamming_loss_micro_oob:
  - -0.08282828282828283
  - -0.08585858585858586
  - -0.09019607843137255
  - -0.08997955010224949
  - -0.08181818181818182
  train_neg_hamming_loss_samples:
  - -0.07575757575757576
  - -0.07676767676767676
  - -0.07941176470588235
  - -0.0869120654396728
  - -0.07373737373737374
  train_neg_hamming_loss_samples_oob:
  - -0.08282828282828282
  - -0.08585858585858584
  - -0.09019607843137255
  - -0.08997955010224949
  - -0.0818181818181818
  train_neg_hamming_loss_weighted:
  - -0.07503750375037503
  - -0.07360168852706166
  - -0.07885847408270238
  - -0.08237951347556695
  - -0.07338733873387339
  train_neg_hamming_loss_weighted_oob:
  - -0.08694869486948695
  - -0.08572290064827379
  - -0.09333139196272568
  - -0.09004059457314655
  - -0.08466846684668466
  train_neg_label_ranking_loss:
  - -0.05454545454545454
  - -0.055757575757575756
  - -0.0461764705882353
  - -0.0534423994546694
  - -0.0537037037037037
  train_neg_label_ranking_loss_oob:
  - -0.07755892255892258
  - -0.07627946127946128
  - -0.08323529411764707
  - -0.07114860259032038
  - -0.0855892255892256
  train_precision_macro:
  - 0.9242424242424243
  - 0.9232323232323233
  - 0.9205882352941178
  - 0.913087934560327
  - 0.9262626262626262
  train_precision_macro_oob:
  - 0.9171717171717172
  - 0.9141414141414143
  - 0.9098039215686277
  - 0.9100204498977504
  - 0.9181818181818183
  train_precision_micro:
  - 0.9242424242424242
  - 0.9232323232323232
  - 0.9205882352941176
  - 0.9130879345603272
  - 0.9262626262626262
  train_precision_micro_oob:
  - 0.9171717171717172
  - 0.9141414141414141
  - 0.9098039215686274
  - 0.9100204498977505
  - 0.9181818181818182
  train_precision_samples:
  - 0.9242424242424242
  - 0.9232323232323233
  - 0.9205882352941176
  - 0.9130879345603271
  - 0.9262626262626261
  train_precision_samples_oob:
  - 0.9171717171717172
  - 0.9141414141414141
  - 0.9098039215686275
  - 0.9100204498977504
  - 0.918181818181818
  train_precision_weighted:
  - 0.924962496249625
  - 0.9263983114729383
  - 0.9211415259172976
  - 0.9176204865244332
  - 0.9266126612661265
  train_precision_weighted_oob:
  - 0.913051305130513
  - 0.9142770993517263
  - 0.9066686080372743
  - 0.9099594054268535
  - 0.9153315331533153
  train_recall_macro:
  - 0.9242424242424243
  - 0.9232323232323233
  - 0.9205882352941178
  - 0.913087934560327
  - 0.9262626262626262
  train_recall_macro_oob:
  - 0.9171717171717172
  - 0.9141414141414143
  - 0.9098039215686277
  - 0.9100204498977504
  - 0.9181818181818183
  train_recall_micro:
  - 0.9242424242424242
  - 0.9232323232323232
  - 0.9205882352941176
  - 0.9130879345603272
  - 0.9262626262626262
  train_recall_micro_oob:
  - 0.9171717171717172
  - 0.9141414141414141
  - 0.9098039215686274
  - 0.9100204498977505
  - 0.9181818181818182
  train_recall_samples:
  - 0.9242424242424242
  - 0.9232323232323233
  - 0.9205882352941176
  - 0.9130879345603271
  - 0.9262626262626261
  train_recall_samples_oob:
  - 0.9171717171717172
  - 0.9141414141414141
  - 0.9098039215686275
  - 0.9100204498977504
  - 0.918181818181818
  train_recall_weighted:
  - 0.924962496249625
  - 0.9263983114729383
  - 0.9211415259172976
  - 0.9176204865244332
  - 0.9266126612661265
  train_recall_weighted_oob:
  - 0.913051305130513
  - 0.9142770993517263
  - 0.9066686080372743
  - 0.9099594054268535
  - 0.9153315331533153
  train_roc_auc_macro:
  - 0.9833074844432629
  - 0.980175268448074
  - 0.9809091179751862
  - 0.9879205004621422
  - 0.9836462541574865
  train_roc_auc_macro_oob:
  - 0.9694598822446695
  - 0.9703421779638169
  - 0.9709910768956741
  - 0.978197090349857
  - 0.9704115492356357
  train_roc_auc_micro:
  - 0.9582977333266323
  - 0.9518251581131101
  - 0.9560295577234985
  - 0.9596259372378776
  - 0.9558727446348696
  train_roc_auc_micro_oob:
  - 0.9446398954616273
  - 0.9410236523340206
  - 0.9421130988404464
  - 0.9482638288608438
  - 0.9429876363270845
  train_roc_auc_samples:
  - 0.9454545454545454
  - 0.9442424242424243
  - 0.9538235294117647
  - 0.9465576005453307
  - 0.9462962962962963
  train_roc_auc_samples_oob:
  - 0.9224410774410775
  - 0.9237205387205387
  - 0.9167647058823527
  - 0.9288513974096796
  - 0.9144107744107743
  train_roc_auc_weighted:
  - 0.9749006622628742
  - 0.9677512917431009
  - 0.971293609249968
  - 0.9792872507306766
  - 0.9748009901311802
  train_roc_auc_weighted_oob:
  - 0.9631259030835939
  - 0.9571477001101548
  - 0.9619029467093728
  - 0.9657651008905695
  - 0.9643756293149781
start: 2023-12-21 06:58:55.392620
wrapper: null
