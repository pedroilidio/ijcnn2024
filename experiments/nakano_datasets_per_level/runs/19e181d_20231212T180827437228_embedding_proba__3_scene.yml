active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b8AMjMzMzPjvwAyMzMzM+O/gDMzMzMzC0AAMjMzMzPjvw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 18:11:02.480794
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__3
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 19e181db5fe32965be894ed415b9fa2b3c5d8d53c2a4ae32cf056ea23e421965
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/19e181d_20231212T180827437228_embedding_proba__3_scene.yml
results:
  fit_time:
  - 84.58132362365723
  - 85.7117612361908
  - 94.18738722801208
  - 99.50780272483826
  - 107.73363065719604
  score_time:
  - 11.054975509643555
  - 10.549428701400757
  - 10.287282943725586
  - 10.434934616088867
  - 9.26807975769043
  test_average_precision_macro:
  - 0.8155702801554218
  - 0.8561584015763195
  - 0.8379436508901241
  - 0.8407599740930297
  - 0.8429212241693037
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8151056889883534
  - 0.8618043540278375
  - 0.8400128934903833
  - 0.8373444774241477
  - 0.8340638651570764
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8633712905452036
  - 0.8899031811894881
  - 0.8707814661134163
  - 0.8739539748953975
  - 0.8850103734439833
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8029186429947486
  - 0.8451476567258549
  - 0.8262183034994341
  - 0.8284514368401902
  - 0.8332329286230663
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9113181504485852
  - 0.9280774550484093
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567081
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9113181504485852
  - 0.9280774550484094
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567082
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9113181504485851
  - 0.9280774550484094
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567082
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9058431546868179
  - 0.9235889713068135
  - 0.9137922747881253
  - 0.9151074460738513
  - 0.918388885767715
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8415724779659195
  - 0.8683791679643867
  - 0.8509113826122757
  - 0.8560611579356036
  - 0.8594856854951866
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8370839936608557
  - 0.8658064516129033
  - 0.8485139022051774
  - 0.8527131782945736
  - 0.8568218298555377
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8607906930888297
  - 0.8865342817624975
  - 0.870776526378186
  - 0.875572823271568
  - 0.8792728709741158
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8325144274694851
  - 0.8607917420892164
  - 0.8438496993578756
  - 0.8470142835593053
  - 0.851887908583292
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8633712905452035
  - 0.8899031811894881
  - 0.870781466113416
  - 0.8739539748953972
  - 0.8850103734439834
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6861178909019077
  - 0.7494616988938908
  - 0.711695657452223
  - 0.724716670519352
  - 0.7317058555673465
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6786763733098982
  - 0.7425979006691741
  - 0.7051794593307892
  - 0.7153654781398084
  - 0.7245060080764568
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6464675855753117
  - 0.7147117374032688
  - 0.674460360429517
  - 0.6876862378760269
  - 0.7044423452883332
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6690840412186199
  - 0.7363096540310532
  - 0.6999433189098306
  - 0.7086986264386319
  - 0.7184104591329402
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8997472605325957
  - 0.9188594611576302
  - 0.9048593156847898
  - 0.9069765309698721
  - 0.9151026097650518
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4679089026915113
  - -1.392116182572614
  - -1.45850622406639
  - -1.4267782426778242
  - -1.4128630705394192
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08868184955141477
  - -0.0719225449515906
  - -0.08195020746887967
  - -0.0794979079497908
  - -0.07710926694329184
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08868184955141477
  - -0.07192254495159059
  - -0.08195020746887967
  - -0.0794979079497908
  - -0.07710926694329184
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08868184955141475
  - -0.0719225449515906
  - -0.08195020746887967
  - -0.0794979079497908
  - -0.07710926694329183
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09415684531318204
  - -0.07641102869318638
  - -0.0862077252118746
  - -0.08489255392614861
  - -0.08161111423228488
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07732919254658385
  - -0.06187759336099586
  - -0.07422199170124483
  - -0.06898535564853557
  - -0.06628630705394191
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9113181504485852
  - 0.9280774550484093
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567081
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9113181504485852
  - 0.9280774550484094
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567082
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9113181504485851
  - 0.9280774550484094
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567082
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9058431546868179
  - 0.9235889713068135
  - 0.9137922747881253
  - 0.9151074460738513
  - 0.918388885767715
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9113181504485852
  - 0.9280774550484093
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567081
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9113181504485852
  - 0.9280774550484094
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567082
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9113181504485851
  - 0.9280774550484094
  - 0.9180497925311203
  - 0.9205020920502092
  - 0.9228907330567082
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9058431546868179
  - 0.9235889713068135
  - 0.9137922747881253
  - 0.9151074460738513
  - 0.918388885767715
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9357223034109018
  - 0.9511666144214931
  - 0.9458542285273618
  - 0.9468347982186315
  - 0.9445704992343668
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9415017502357883
  - 0.9558123233354909
  - 0.9499638945721506
  - 0.9497365478484397
  - 0.9482536903186398
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9226708074534161
  - 0.9381224066390041
  - 0.9257780082987552
  - 0.9310146443514645
  - 0.9337136929460581
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9297733661346531
  - 0.9468689811058217
  - 0.9411821279530447
  - 0.9420033372722006
  - 0.9389381155278902
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9978696160908184
  - 0.9980282308959342
  - 0.997846731020437
  - 0.9982041526391788
  - 0.9982255360795912
  train_average_precision_macro_oob:
  - 0.9803329082362958
  - 0.9811789877111488
  - 0.980629115693834
  - 0.9822656027403477
  - 0.9827485537899996
  train_average_precision_micro:
  - 0.9979429608639254
  - 0.9980910016069726
  - 0.9979384755621887
  - 0.9982027262970952
  - 0.998293599785506
  train_average_precision_micro_oob:
  - 0.9797925856618777
  - 0.9811347724190473
  - 0.9804592272769681
  - 0.981833750636555
  - 0.9820862648638342
  train_average_precision_samples:
  - 0.9931999306999307
  - 0.9938961038961039
  - 0.9927272727272727
  - 0.9932175565923621
  - 0.9938961038961039
  train_average_precision_samples_oob:
  - 0.9742896742896743
  - 0.9756709956709956
  - 0.9746839826839827
  - 0.9746673578710903
  - 0.9764935064935065
  train_average_precision_weighted:
  - 0.9977830907415753
  - 0.9979729208822417
  - 0.9977688672197762
  - 0.9981417499127887
  - 0.9981356306208328
  train_average_precision_weighted_oob:
  - 0.9795121027145597
  - 0.9805206571277106
  - 0.9799237835771998
  - 0.9817614596533021
  - 0.9820049956032847
  train_f1_macro:
  - 0.9842342342342342
  - 0.9849350649350649
  - 0.9838095238095238
  - 0.9845343010195263
  - 0.9847619047619047
  train_f1_macro_oob:
  - 0.9692480942480942
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_f1_micro:
  - 0.9842342342342343
  - 0.9849350649350649
  - 0.9838095238095238
  - 0.9845343010195265
  - 0.9847619047619047
  train_f1_micro_oob:
  - 0.9692480942480942
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_f1_samples:
  - 0.9842342342342343
  - 0.9849350649350649
  - 0.9838095238095239
  - 0.9845343010195265
  - 0.984761904761905
  train_f1_samples_oob:
  - 0.9692480942480943
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_f1_weighted:
  - 0.9837560369475263
  - 0.9846626329645197
  - 0.9834221124787162
  - 0.9840326769395672
  - 0.9843964932552941
  train_f1_weighted_oob:
  - 0.9684367171069299
  - 0.9690324769570052
  - 0.9668168309677744
  - 0.9694319852342709
  - 0.9671541611193449
  train_jaccard_macro:
  - 0.9690050482895837
  - 0.9703725039533242
  - 0.9682054820188587
  - 0.9695753207368667
  - 0.9700205785690383
  train_jaccard_macro_oob:
  - 0.9404538628428939
  - 0.9411339631167855
  - 0.9372134275790653
  - 0.9418506661380719
  - 0.9376890244375211
  train_jaccard_micro:
  - 0.9689578713968958
  - 0.970317297850563
  - 0.9681349578256795
  - 0.9695396919935335
  - 0.9699812382739212
  train_jaccard_micro_oob:
  - 0.9403311202622069
  - 0.9410133602218301
  - 0.9371069182389937
  - 0.9417834074322624
  - 0.9375943633618521
  train_jaccard_samples:
  - 0.9735545985545986
  - 0.9746444032158318
  - 0.9727643784786641
  - 0.9741415487916266
  - 0.9743475572047001
  train_jaccard_samples_oob:
  - 0.9492253242253242
  - 0.949734075448361
  - 0.9466295609152753
  - 0.9505171690241675
  - 0.9467656153370438
  train_jaccard_weighted:
  - 0.9680784738707202
  - 0.9698403477205135
  - 0.9674518691068615
  - 0.9686041891429225
  - 0.9693099450167217
  train_jaccard_weighted_oob:
  - 0.9389262350026627
  - 0.9400386528786852
  - 0.9358678423833015
  - 0.9407422255243562
  - 0.9364896018097694
  train_label_ranking_average_precision_score:
  - 0.9931999306999306
  - 0.9938961038961039
  - 0.9927272727272726
  - 0.9932175565923622
  - 0.9938961038961039
  train_label_ranking_average_precision_score_oob:
  - 0.9742896742896741
  - 0.9756709956709955
  - 0.9746839826839826
  - 0.97466735787109
  - 0.9764935064935064
  train_matthews_corrcoef_macro:
  - 0.9464669275091268
  - 0.948466240779343
  - 0.9447659329079986
  - 0.9475140878114138
  - 0.9480946651284489
  train_matthews_corrcoef_macro_oob:
  - 0.8939540782147755
  - 0.8946398023108016
  - 0.8874248887805959
  - 0.8960758332656541
  - 0.8882283432922966
  train_matthews_corrcoef_micro:
  - 0.9458386908644728
  - 0.9482485671276116
  - 0.9443279280602674
  - 0.9468026708138584
  - 0.9476769921183661
  train_matthews_corrcoef_micro_oob:
  - 0.8929573390227713
  - 0.8942233355380289
  - 0.8867376305902317
  - 0.8956002262669467
  - 0.8877490628690511
  train_matthews_corrcoef_samples:
  - 0.936209867014505
  - 0.9387119846963158
  - 0.9337228402254328
  - 0.936361117372562
  - 0.9363976102137278
  train_matthews_corrcoef_samples_oob:
  - 0.8701301918600308
  - 0.868687600668535
  - 0.8617777462775997
  - 0.8716120819348603
  - 0.8608834633821114
  train_matthews_corrcoef_weighted:
  - 0.9454286247390634
  - 0.9479644992268813
  - 0.9439463156079797
  - 0.9464009279167328
  - 0.9473581247430592
  train_matthews_corrcoef_weighted_oob:
  - 0.8923083458753511
  - 0.8936554428341643
  - 0.8861162211517014
  - 0.8951331536468318
  - 0.8871833015892443
  train_ndgc:
  - 0.9950033217422307
  - 0.9955393883431095
  - 0.994698319851363
  - 0.9950162732151643
  - 0.9955393883431094
  train_ndgc_oob:
  - 0.9812914467610298
  - 0.98235544548132
  - 0.9816650040984346
  - 0.9816713015915561
  - 0.9830353509141182
  train_neg_coverage_error:
  - -1.088877338877339
  - -1.0867532467532468
  - -1.0893506493506493
  - -1.0870917573872472
  - -1.0872727272727272
  train_neg_coverage_error_oob:
  - -1.1507276507276507
  - -1.1496103896103895
  - -1.148051948051948
  - -1.1482633488854328
  - -1.1412987012987013
  train_neg_hamming_loss_macro:
  - -0.015765765765765768
  - -0.015064935064935064
  - -0.01619047619047619
  - -0.015465698980473475
  - -0.015238095238095238
  train_neg_hamming_loss_macro_oob:
  - -0.030751905751905756
  - -0.030389610389610393
  - -0.03246753246753247
  - -0.029980991878348028
  - -0.032207792207792206
  train_neg_hamming_loss_micro:
  - -0.015765765765765764
  - -0.015064935064935066
  - -0.01619047619047619
  - -0.015465698980473475
  - -0.015238095238095238
  train_neg_hamming_loss_micro_oob:
  - -0.030751905751905752
  - -0.03038961038961039
  - -0.032467532467532464
  - -0.02998099187834802
  - -0.032207792207792206
  train_neg_hamming_loss_samples:
  - -0.015765765765765764
  - -0.015064935064935066
  - -0.01619047619047619
  - -0.015465698980473475
  - -0.015238095238095236
  train_neg_hamming_loss_samples_oob:
  - -0.03075190575190575
  - -0.030389610389610387
  - -0.032467532467532464
  - -0.029980991878348018
  - -0.0322077922077922
  train_neg_hamming_loss_weighted:
  - -0.016243963052473692
  - -0.015337367035480243
  - -0.016577887521283745
  - -0.015967323060432807
  - -0.01560350674470597
  train_neg_hamming_loss_weighted_oob:
  - -0.03156328289307013
  - -0.030967523042994743
  - -0.03318316903222564
  - -0.030568014765729283
  - -0.03284583888065513
  train_neg_label_ranking_loss:
  - -0.002793659043659044
  - -0.0025454545454545456
  - -0.003
  - -0.0027864178330741316
  - -0.0025454545454545456
  train_neg_label_ranking_loss_oob:
  - -0.01428014553014553
  - -0.014181818181818184
  - -0.013883116883116884
  - -0.014009849663037843
  - -0.012467532467532468
  train_precision_macro:
  - 0.9842342342342342
  - 0.9849350649350649
  - 0.9838095238095238
  - 0.9845343010195263
  - 0.9847619047619047
  train_precision_macro_oob:
  - 0.9692480942480942
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_precision_micro:
  - 0.9842342342342343
  - 0.9849350649350649
  - 0.9838095238095238
  - 0.9845343010195265
  - 0.9847619047619047
  train_precision_micro_oob:
  - 0.9692480942480942
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_precision_samples:
  - 0.9842342342342343
  - 0.9849350649350649
  - 0.9838095238095239
  - 0.9845343010195265
  - 0.984761904761905
  train_precision_samples_oob:
  - 0.9692480942480943
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_precision_weighted:
  - 0.9837560369475263
  - 0.9846626329645197
  - 0.9834221124787162
  - 0.9840326769395672
  - 0.9843964932552941
  train_precision_weighted_oob:
  - 0.9684367171069299
  - 0.9690324769570052
  - 0.9668168309677744
  - 0.9694319852342709
  - 0.9671541611193449
  train_recall_macro:
  - 0.9842342342342342
  - 0.9849350649350649
  - 0.9838095238095238
  - 0.9845343010195263
  - 0.9847619047619047
  train_recall_macro_oob:
  - 0.9692480942480942
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_recall_micro:
  - 0.9842342342342343
  - 0.9849350649350649
  - 0.9838095238095238
  - 0.9845343010195265
  - 0.9847619047619047
  train_recall_micro_oob:
  - 0.9692480942480942
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_recall_samples:
  - 0.9842342342342343
  - 0.9849350649350649
  - 0.9838095238095239
  - 0.9845343010195265
  - 0.984761904761905
  train_recall_samples_oob:
  - 0.9692480942480943
  - 0.9696103896103896
  - 0.9675324675324676
  - 0.970019008121652
  - 0.9677922077922078
  train_recall_weighted:
  - 0.9837560369475263
  - 0.9846626329645197
  - 0.9834221124787162
  - 0.9840326769395672
  - 0.9843964932552941
  train_recall_weighted_oob:
  - 0.9684367171069299
  - 0.9690324769570052
  - 0.9668168309677744
  - 0.9694319852342709
  - 0.9671541611193449
  train_roc_auc_macro:
  - 0.9995126468275554
  - 0.9995534489349572
  - 0.9995111949000526
  - 0.9995937578683071
  - 0.999585335293922
  train_roc_auc_macro_oob:
  - 0.9936554437290034
  - 0.9937015354976176
  - 0.9940129222120845
  - 0.9942868491418762
  - 0.9943195930172662
  train_roc_auc_micro:
  - 0.9995540245008667
  - 0.9995824269549446
  - 0.9995520464114711
  - 0.9996122913921827
  - 0.9996272332347516
  train_roc_auc_micro_oob:
  - 0.9938439612891532
  - 0.9940761766491624
  - 0.9941494368681849
  - 0.9944098289659884
  - 0.9944839494316219
  train_roc_auc_samples:
  - 0.997206340956341
  - 0.9974545454545454
  - 0.997
  - 0.9972135821669259
  - 0.9974545454545454
  train_roc_auc_samples_oob:
  - 0.9857198544698546
  - 0.9858181818181817
  - 0.9861168831168832
  - 0.9859901503369621
  - 0.9875324675324675
  train_roc_auc_weighted:
  - 0.9994867334509422
  - 0.9995362710700861
  - 0.9994883365036156
  - 0.9995743265714877
  - 0.9995585207251075
  train_roc_auc_weighted_oob:
  - 0.9932899669273427
  - 0.9933365059142641
  - 0.9937601247129978
  - 0.9940040767016362
  - 0.9939494901279754
start: 2023-12-12 18:08:27.437228
wrapper: null
