active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZEcAAzczMzMwMQADNzMzMzARAAGZmZmZm9r8AmJmZmZnZvw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:19:03.554685
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__4
  params: {}
hash: 375cbd0470050f26e3f55c0307579d265aad309b7cf9540441bd37e374dc81a8
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/375cbd0_20231222T091804729429_embedding_proba__4_PlantGO.yml
results:
  fit_time:
  - 24.228763341903687
  - 25.500988483428955
  - 23.527281522750854
  - 27.501914501190186
  - 26.196910858154297
  score_time:
  - 6.234889507293701
  - 6.08480167388916
  - 6.5115602016448975
  - 6.273175954818726
  - 6.601549386978149
  test_average_precision_macro:
  - 0.7544642309719013
  - 0.7459732331770573
  - 0.7669118480495137
  - 0.7278164028146539
  - 0.7476677395189409
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8044615513590586
  - 0.8272008170869848
  - 0.7939587043515575
  - 0.7658593657002634
  - 0.7765652352814729
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9094007936507935
  - 0.8867456183862434
  - 0.8664075993091537
  - 0.8677725404882766
  - 0.8799522189828313
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8220015165003419
  - 0.8371463702935408
  - 0.8341324246563039
  - 0.7976187159455439
  - 0.7894459970807635
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9129166666666665
  - 0.9140625000000001
  - 0.9153713298791019
  - 0.9120135363790186
  - 0.9141156462585034
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9129166666666667
  - 0.9140625
  - 0.9153713298791019
  - 0.9120135363790186
  - 0.9141156462585034
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9129166666666666
  - 0.9140624999999999
  - 0.9153713298791019
  - 0.9120135363790187
  - 0.9141156462585035
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8373696682464455
  - 0.850137578616352
  - 0.8473857748469149
  - 0.8409475465313029
  - 0.845966958211856
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8492434789010147
  - 0.8492341280674768
  - 0.8519177190783501
  - 0.8470547393342699
  - 0.8499619146628818
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8397853583748562
  - 0.841726618705036
  - 0.8439490445859873
  - 0.838258164852255
  - 0.8418167580266249
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8407692307692308
  - 0.8437271062271062
  - 0.8459033194784489
  - 0.8394600323534331
  - 0.8432159677057636
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7313227508020096
  - 0.7466166039122105
  - 0.7422562602637888
  - 0.7346208582165784
  - 0.7413789367281062
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9094007936507935
  - 0.8867456183862433
  - 0.8664075993091537
  - 0.8677725404882763
  - 0.8799522189828314
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03490699925256074
  - 0.06033698557932484
  - 0.03332632000123061
  - 0.02002872252087749
  - 0.025919211210061757
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.10968650909487664
  - 0.2446088485340259
  - 0.23772466446653326
  - 0.14599079107437893
  - 0.18577715905706405
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.023636363636363636
  - 0.07595463943517787
  - 0.07677814413565709
  - 0.029995385325334564
  - 0.04545454545454546
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.07035740577546895
  - 0.15184314515613706
  - 0.10906795636766382
  - 0.06431758781352208
  - 0.08442257365562973
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.932972541650503
  - 0.916814809363457
  - 0.9030618851228275
  - 0.9016652668546625
  - 0.9108108954760255
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.37
  - -1.5989583333333333
  - -1.61139896373057
  - -1.5228426395939085
  - -1.5357142857142858
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08708333333333333
  - -0.0859375
  - -0.0846286701208981
  - -0.08798646362098139
  - -0.08588435374149661
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08708333333333333
  - -0.0859375
  - -0.0846286701208981
  - -0.08798646362098139
  - -0.0858843537414966
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08708333333333332
  - -0.0859375
  - -0.0846286701208981
  - -0.0879864636209814
  - -0.08588435374149661
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.16263033175355449
  - -0.14986242138364778
  - -0.15261422515308526
  - -0.15905245346869712
  - -0.15403304178814384
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.027249999999999996
  - -0.040074354657687994
  - -0.0427164564470264
  - -0.03936317489616982
  - -0.03989211846354703
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9129166666666665
  - 0.9140625000000001
  - 0.9153713298791019
  - 0.9120135363790186
  - 0.9141156462585034
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9129166666666667
  - 0.9140625
  - 0.9153713298791019
  - 0.9120135363790186
  - 0.9141156462585034
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9129166666666666
  - 0.9140624999999999
  - 0.9153713298791019
  - 0.9120135363790187
  - 0.9141156462585035
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8373696682464455
  - 0.850137578616352
  - 0.8473857748469149
  - 0.8409475465313029
  - 0.845966958211856
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9129166666666665
  - 0.9140625000000001
  - 0.9153713298791019
  - 0.9120135363790186
  - 0.9141156462585034
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9129166666666667
  - 0.9140625
  - 0.9153713298791019
  - 0.9120135363790186
  - 0.9141156462585034
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9129166666666666
  - 0.9140624999999999
  - 0.9153713298791019
  - 0.9120135363790187
  - 0.9141156462585035
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8373696682464455
  - 0.850137578616352
  - 0.8473857748469149
  - 0.8409475465313029
  - 0.845966958211856
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9763817632234145
  - 0.9734887567903678
  - 0.9459448377742854
  - 0.9676893607185811
  - 0.9616392358151428
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9775395720524207
  - 0.9717635015693207
  - 0.9627579973794347
  - 0.9687163738669425
  - 0.9658974700991508
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.97275
  - 0.9599256453423121
  - 0.9572835435529737
  - 0.9606368251038302
  - 0.9601078815364528
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9719855847722213
  - 0.9746541714699166
  - 0.9582973934567615
  - 0.9597521742569609
  - 0.9632581652125344
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8604948032475223
  - 0.8779286020469392
  - 0.8595637866809884
  - 0.8499255562879231
  - 0.8823076413573471
  train_average_precision_macro_oob:
  - 0.7436011309769496
  - 0.770174211482812
  - 0.7635410522175307
  - 0.7611425023947934
  - 0.8003951835808881
  train_average_precision_micro:
  - 0.9019873986664535
  - 0.8961975307923423
  - 0.9064384477067093
  - 0.906608660928322
  - 0.9123419656223106
  train_average_precision_micro_oob:
  - 0.830948265751148
  - 0.8223144724950676
  - 0.8390247709041725
  - 0.8419681440491508
  - 0.8485529134191673
  train_average_precision_samples:
  - 0.9187742277716571
  - 0.9197655398037078
  - 0.9277358663982868
  - 0.9209937771717542
  - 0.9288515406162464
  train_average_precision_samples_oob:
  - 0.8782296894764761
  - 0.8858435316450584
  - 0.8933374233692706
  - 0.889314260216949
  - 0.8958957496041896
  train_average_precision_weighted:
  - 0.9079190599643964
  - 0.9119703652939483
  - 0.9123308620585419
  - 0.9117523199462189
  - 0.9210294363014798
  train_average_precision_weighted_oob:
  - 0.8394988229079746
  - 0.8458963811327415
  - 0.8460545114604611
  - 0.8565323913061939
  - 0.8732112492693219
  train_f1_macro:
  - 0.9270565552699228
  - 0.9271628498727734
  - 0.9278131634819533
  - 0.9260563380281689
  - 0.9267902813299232
  train_f1_macro_oob:
  - 0.912275064267352
  - 0.914228159457167
  - 0.9160297239915073
  - 0.9119718309859154
  - 0.9129369138959932
  train_f1_micro:
  - 0.9270565552699229
  - 0.9271628498727735
  - 0.9278131634819533
  - 0.926056338028169
  - 0.9267902813299232
  train_f1_micro_oob:
  - 0.9122750642673522
  - 0.9142281594571671
  - 0.9160297239915074
  - 0.9119718309859155
  - 0.9129369138959932
  train_f1_samples:
  - 0.9270565552699229
  - 0.9271628498727734
  - 0.9278131634819532
  - 0.926056338028169
  - 0.9267902813299232
  train_f1_samples_oob:
  - 0.912275064267352
  - 0.914228159457167
  - 0.9160297239915073
  - 0.9119718309859155
  - 0.9129369138959932
  train_f1_weighted:
  - 0.875732525981067
  - 0.8786941705227
  - 0.8809097890409722
  - 0.8733063463918905
  - 0.8754324369315516
  train_f1_weighted_oob:
  - 0.8396879835280644
  - 0.8453345769229609
  - 0.8525033503485868
  - 0.8383535938151039
  - 0.8415926391137881
  train_jaccard_macro:
  - 0.868881629002638
  - 0.8688469065009885
  - 0.8697092377294925
  - 0.8673856828260034
  - 0.8684395965115993
  train_jaccard_macro_oob:
  - 0.8476687476107032
  - 0.8502375670724175
  - 0.8524001631909691
  - 0.8473300227293107
  - 0.8485163120562182
  train_jaccard_micro:
  - 0.8640311470500149
  - 0.8642158316039135
  - 0.8653465346534653
  - 0.8622950819672132
  - 0.8635686624962764
  train_jaccard_micro_oob:
  - 0.8387001477104874
  - 0.8420076164437067
  - 0.845069043188718
  - 0.8381877022653722
  - 0.8398196255269091
  train_jaccard_samples:
  - 0.8670979406197915
  - 0.8670860945670106
  - 0.8682606565409112
  - 0.86504762842791
  - 0.8663837441331047
  train_jaccard_samples_oob:
  - 0.8400067798525381
  - 0.843374437267567
  - 0.8468145866871981
  - 0.8392987294395745
  - 0.8411680391220033
  train_jaccard_weighted:
  - 0.7839851911422505
  - 0.7875497380283292
  - 0.7910647732274053
  - 0.7802804617422902
  - 0.7833288441716952
  train_jaccard_weighted_oob:
  - 0.7334217754400263
  - 0.7402638763951271
  - 0.74991412315657
  - 0.7316415579297801
  - 0.735667345753701
  train_label_ranking_average_precision_score:
  - 0.9187742277716571
  - 0.919765539803708
  - 0.9277358663982872
  - 0.9209937771717539
  - 0.9288515406162469
  train_label_ranking_average_precision_score_oob:
  - 0.8782296894764763
  - 0.8858435316450587
  - 0.8933374233692712
  - 0.8893142602169495
  - 0.8958957496041894
  train_matthews_corrcoef_macro:
  - 0.15341392842459556
  - 0.14957948846959943
  - 0.14683380208327107
  - 0.14439411077307351
  - 0.14802645437466042
  train_matthews_corrcoef_macro_oob:
  - 0.05317317656278898
  - 0.026909581371405002
  - 0.058299784133253964
  - 0.035102126102181226
  - 0.0442236716875066
  train_matthews_corrcoef_micro:
  - 0.42263360542806555
  - 0.41354997577046854
  - 0.42618082092262516
  - 0.40455306860626317
  - 0.41600348669809895
  train_matthews_corrcoef_micro_oob:
  - 0.1636381470350339
  - 0.1911526200928327
  - 0.24299928650543282
  - 0.1351607272324352
  - 0.17318446287478356
  train_matthews_corrcoef_samples:
  - 0.20774870173050589
  - 0.1987139709039415
  - 0.20888775754300648
  - 0.18744378860397684
  - 0.19810208678717778
  train_matthews_corrcoef_samples_oob:
  - 0.03405190447383684
  - 0.04672681008558872
  - 0.07428097260997055
  - 0.022930974275404494
  - 0.040039083758090635
  train_matthews_corrcoef_weighted:
  - 0.3395194426717613
  - 0.32938637355952743
  - 0.33576563741936594
  - 0.32336334485418017
  - 0.3324656406680259
  train_matthews_corrcoef_weighted_oob:
  - 0.1212231059658829
  - 0.08771948945269388
  - 0.1538624420387261
  - 0.0887959040073921
  - 0.11245923688872259
  train_ndgc:
  - 0.9397643759159476
  - 0.9407091655423403
  - 0.9466557165425297
  - 0.9419654191980412
  - 0.9477682440579022
  train_ndgc_oob:
  - 0.9098838749653297
  - 0.9154951194282822
  - 0.9211177245935591
  - 0.9180357628838037
  - 0.9231339421916467
  train_neg_coverage_error:
  - -1.3740359897172236
  - -1.352417302798982
  - -1.356687898089172
  - -1.3994878361075545
  - -1.329923273657289
  train_neg_coverage_error_oob:
  - -1.5475578406169666
  - -1.5101781170483461
  - -1.4726114649681528
  - -1.5480153649167734
  - -1.4565217391304348
  train_neg_hamming_loss_macro:
  - -0.07294344473007712
  - -0.07283715012722648
  - -0.07218683651804671
  - -0.07394366197183098
  - -0.07320971867007672
  train_neg_hamming_loss_macro_oob:
  - -0.08772493573264782
  - -0.08577184054283292
  - -0.08397027600849256
  - -0.08802816901408451
  - -0.08706308610400681
  train_neg_hamming_loss_micro:
  - -0.07294344473007712
  - -0.07283715012722647
  - -0.07218683651804671
  - -0.07394366197183098
  - -0.07320971867007672
  train_neg_hamming_loss_micro_oob:
  - -0.08772493573264782
  - -0.0857718405428329
  - -0.08397027600849256
  - -0.0880281690140845
  - -0.08706308610400681
  train_neg_hamming_loss_samples:
  - -0.07294344473007712
  - -0.07283715012722647
  - -0.07218683651804672
  - -0.07394366197183098
  - -0.07320971867007672
  train_neg_hamming_loss_samples_oob:
  - -0.08772493573264782
  - -0.08577184054283289
  - -0.08397027600849255
  - -0.0880281690140845
  - -0.08706308610400681
  train_neg_hamming_loss_weighted:
  - -0.12426747401893297
  - -0.12130582947729995
  - -0.11909021095902787
  - -0.12669365360810944
  - -0.12456756306844838
  train_neg_hamming_loss_weighted_oob:
  - -0.16031201647193558
  - -0.15466542307703918
  - -0.14749664965141315
  - -0.16164640618489604
  - -0.15840736088621196
  train_neg_label_ranking_loss:
  - -0.025072057334268132
  - -0.023909579253090705
  - -0.023440562739925796
  - -0.026720900856624288
  - -0.020943019280615188
  train_neg_label_ranking_loss_oob:
  - -0.039505595803796326
  - -0.03745769827194763
  - -0.0336382937656823
  - -0.0398459628293175
  - -0.031840140535792705
  train_precision_macro:
  - 0.9270565552699228
  - 0.9271628498727734
  - 0.9278131634819533
  - 0.9260563380281689
  - 0.9267902813299232
  train_precision_macro_oob:
  - 0.912275064267352
  - 0.914228159457167
  - 0.9160297239915073
  - 0.9119718309859154
  - 0.9129369138959932
  train_precision_micro:
  - 0.9270565552699229
  - 0.9271628498727735
  - 0.9278131634819533
  - 0.926056338028169
  - 0.9267902813299232
  train_precision_micro_oob:
  - 0.9122750642673522
  - 0.9142281594571671
  - 0.9160297239915074
  - 0.9119718309859155
  - 0.9129369138959932
  train_precision_samples:
  - 0.9270565552699229
  - 0.9271628498727734
  - 0.9278131634819532
  - 0.926056338028169
  - 0.9267902813299232
  train_precision_samples_oob:
  - 0.912275064267352
  - 0.914228159457167
  - 0.9160297239915073
  - 0.9119718309859155
  - 0.9129369138959932
  train_precision_weighted:
  - 0.875732525981067
  - 0.8786941705227
  - 0.8809097890409722
  - 0.8733063463918905
  - 0.8754324369315516
  train_precision_weighted_oob:
  - 0.8396879835280644
  - 0.8453345769229609
  - 0.8525033503485868
  - 0.8383535938151039
  - 0.8415926391137881
  train_recall_macro:
  - 0.9270565552699228
  - 0.9271628498727734
  - 0.9278131634819533
  - 0.9260563380281689
  - 0.9267902813299232
  train_recall_macro_oob:
  - 0.912275064267352
  - 0.914228159457167
  - 0.9160297239915073
  - 0.9119718309859154
  - 0.9129369138959932
  train_recall_micro:
  - 0.9270565552699229
  - 0.9271628498727735
  - 0.9278131634819533
  - 0.926056338028169
  - 0.9267902813299232
  train_recall_micro_oob:
  - 0.9122750642673522
  - 0.9142281594571671
  - 0.9160297239915074
  - 0.9119718309859155
  - 0.9129369138959932
  train_recall_samples:
  - 0.9270565552699229
  - 0.9271628498727734
  - 0.9278131634819532
  - 0.926056338028169
  - 0.9267902813299232
  train_recall_samples_oob:
  - 0.912275064267352
  - 0.914228159457167
  - 0.9160297239915073
  - 0.9119718309859155
  - 0.9129369138959932
  train_recall_weighted:
  - 0.875732525981067
  - 0.8786941705227
  - 0.8809097890409722
  - 0.8733063463918905
  - 0.8754324369315516
  train_recall_weighted_oob:
  - 0.8396879835280644
  - 0.8453345769229609
  - 0.8525033503485868
  - 0.8383535938151039
  - 0.8415926391137881
  train_roc_auc_macro:
  - 0.9820968736037545
  - 0.9835234924823935
  - 0.9822978072230527
  - 0.9779169702507665
  - 0.9800694637674616
  train_roc_auc_macro_oob:
  - 0.9700237416401327
  - 0.9684263861881695
  - 0.9718258849019178
  - 0.9648576143019386
  - 0.9709980007565387
  train_roc_auc_micro:
  - 0.9833159812524974
  - 0.9826096222001519
  - 0.9828055129560422
  - 0.9809037127589366
  - 0.9833186541943648
  train_roc_auc_micro_oob:
  - 0.9718340986666013
  - 0.9702300675075171
  - 0.9733965350190057
  - 0.9697621639985186
  - 0.9735442879208588
  train_roc_auc_samples:
  - 0.9749279426657319
  - 0.9760904207469092
  - 0.9765594372600743
  - 0.9732790991433756
  - 0.9790569807193849
  train_roc_auc_samples_oob:
  - 0.9604944041962037
  - 0.9625423017280522
  - 0.9663617062343176
  - 0.9601540371706825
  - 0.9681598594642074
  train_roc_auc_weighted:
  - 0.9818441133311108
  - 0.9811477376661861
  - 0.9839827061459354
  - 0.9822323418224135
  - 0.980074918858648
  train_roc_auc_weighted_oob:
  - 0.9716083537549952
  - 0.9710059648223346
  - 0.9758114487412998
  - 0.9727112976580886
  - 0.971292503747845
start: 2023-12-22 09:18:04.729429
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
