active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZyb+QmZmZmZnJv5CZmZmZmcm/nJmZmZmZ6T+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZ6T+YmZmZmZnJvzMzMzMzM/O/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAADwPwAAAAAAAAAAAAAAAAAA8D8AAAAAAAAAwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zszMzMzM/D8yMzMzMzPzvzIzMzMzM/O/kJmZmZmZyb+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP2BmZmZmZva/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 17:00:29.234282
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 6ebdbf9985205be7b3ef752145c02911912ecac3717c47aa416f0abb2becdf6b
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6ebdbf9_20231212T165940383770_embedding_proba__9_birds.yml
results:
  fit_time:
  - 20.831106901168823
  - 20.85673236846924
  - 22.205432653427124
  - 23.768799304962158
  - 20.486290216445923
  score_time:
  - 8.276012897491455
  - 8.340488910675049
  - 8.471062660217285
  - 8.459026098251343
  - 8.536731719970703
  test_average_precision_macro:
  - 0.4255452515130657
  - 0.4436591365458726
  - 0.3955146482091592
  - 0.39956410344605225
  - 0.42085272101561444
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.47963784303837786
  - 0.5210071913164491
  - 0.4589496129127149
  - 0.4763069941065544
  - 0.4624440256773122
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.31243281515619337
  - 0.31896117764790816
  - 0.30515856844396216
  - 0.33601702594970645
  - 0.33383141403067246
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5205878455339299
  - 0.5683334883323861
  - 0.4884042376667994
  - 0.5094200341202836
  - 0.5153856429093403
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.956752345981232
  - 0.9567523459812323
  - 0.9555283557731539
  - 0.9583843329253365
  - 0.9555283557731539
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9567523459812322
  - 0.9567523459812322
  - 0.9555283557731539
  - 0.9583843329253366
  - 0.9555283557731539
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.956752345981232
  - 0.9567523459812322
  - 0.9555283557731538
  - 0.9583843329253365
  - 0.9555283557731539
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9384615384615387
  - 0.9376930698840125
  - 0.9417147519962699
  - 0.9404260513947387
  - 0.9370968696372566
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9183503448294701
  - 0.9184227754659543
  - 0.9157902452655812
  - 0.9213694059438998
  - 0.9163783434063687
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9170903402424716
  - 0.9170903402424716
  - 0.91484375
  - 0.9200940070505288
  - 0.91484375
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9220814238003319
  - 0.9227343491246424
  - 0.9203935206463013
  - 0.9245663335653224
  - 0.9210346276574791
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8850866107329274
  - 0.884214098442226
  - 0.8906064902066089
  - 0.888508541746262
  - 0.8836405749056806
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7620452182569684
  - 0.7995813326866679
  - 0.7702748475137297
  - 0.7623736150969935
  - 0.7911957551159435
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.21599850841702764
  - 0.2360771075956729
  - 0.18113257570342092
  - 0.21156982009874278
  - 0.17723245236753182
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4423384636067603
  - 0.46764935050486867
  - 0.43137946834600716
  - 0.4738165907855038
  - 0.43712240258027546
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.16505520583262107
  - 0.17772626874660147
  - 0.16873040596680555
  - 0.19246988378077906
  - 0.17038730456523743
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3695005468077791
  - 0.3848979936761566
  - 0.3302268716538134
  - 0.3841045446678965
  - 0.33004225088732125
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.38131999693824703
  - 0.3837482187180705
  - 0.3744449591152052
  - 0.4022342948249555
  - 0.39649668198136906
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.643410852713178
  - -3.488372093023256
  - -3.434108527131783
  - -3.3255813953488373
  - -3.1782945736434107
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04324765401876786
  - -0.04324765401876786
  - -0.044471644226846185
  - -0.0416156670746634
  - -0.044471644226846185
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04324765401876785
  - -0.04324765401876785
  - -0.044471644226846185
  - -0.0416156670746634
  - -0.044471644226846185
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.043247654018767845
  - -0.043247654018767845
  - -0.044471644226846185
  - -0.0416156670746634
  - -0.044471644226846185
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06153846153846154
  - -0.062306930115987647
  - -0.058285248003730264
  - -0.059573948605261544
  - -0.06290313036274336
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.11956224350205197
  - -0.09860405402471066
  - -0.10692001606844287
  - -0.10798093139064412
  - -0.09699324969502807
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.956752345981232
  - 0.9567523459812323
  - 0.9555283557731539
  - 0.9583843329253365
  - 0.9555283557731539
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9567523459812322
  - 0.9567523459812322
  - 0.9555283557731539
  - 0.9583843329253366
  - 0.9555283557731539
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.956752345981232
  - 0.9567523459812322
  - 0.9555283557731538
  - 0.9583843329253365
  - 0.9555283557731539
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9384615384615387
  - 0.9376930698840125
  - 0.9417147519962699
  - 0.9404260513947387
  - 0.9370968696372566
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.956752345981232
  - 0.9567523459812323
  - 0.9555283557731539
  - 0.9583843329253365
  - 0.9555283557731539
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9567523459812322
  - 0.9567523459812322
  - 0.9555283557731539
  - 0.9583843329253366
  - 0.9555283557731539
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.956752345981232
  - 0.9567523459812322
  - 0.9555283557731538
  - 0.9583843329253365
  - 0.9555283557731539
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9384615384615387
  - 0.9376930698840125
  - 0.9417147519962699
  - 0.9404260513947387
  - 0.9370968696372566
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8346546289047297
  - 0.8481172417638477
  - 0.8617791496842067
  - 0.8305740784485833
  - 0.836409776843998
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.874359526729195
  - 0.8950449895229877
  - 0.8823979707681628
  - 0.8700533291772263
  - 0.8814836141089759
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8617114235921719
  - 0.8795968920352493
  - 0.8675398424856655
  - 0.8433411667892877
  - 0.864546876507
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9234421140487096
  - 0.9216953038840469
  - 0.9155447322715276
  - 0.9159769346992801
  - 0.9269951324591915
  train_average_precision_macro_oob:
  - 0.55482422907862
  - 0.5772877290720778
  - 0.5703070529836722
  - 0.5743261795594666
  - 0.5744579611704624
  train_average_precision_micro:
  - 0.9271093370688742
  - 0.9284296638753926
  - 0.9313271583881181
  - 0.9300319484153039
  - 0.931428062403543
  train_average_precision_micro_oob:
  - 0.7765844106320021
  - 0.7819239802224296
  - 0.7849490602273462
  - 0.7955027193293842
  - 0.7892310015129983
  train_average_precision_samples:
  - 0.5129122062261597
  - 0.524985003691399
  - 0.52197920511874
  - 0.5144691306755261
  - 0.5177763935031376
  train_average_precision_samples_oob:
  - 0.4485610601262376
  - 0.4632048695275439
  - 0.4559110350244071
  - 0.4452286922330662
  - 0.45703537060126204
  train_average_precision_weighted:
  - 0.9375096399617963
  - 0.9394441316431457
  - 0.9369292017988411
  - 0.9341330356286628
  - 0.9418183825651968
  train_average_precision_weighted_oob:
  - 0.7301550275358348
  - 0.7338536919820703
  - 0.7380350052424526
  - 0.742651467524268
  - 0.7494432690759898
  train_f1_macro:
  - 0.9747042023663812
  - 0.9759281925744593
  - 0.9755201958384333
  - 0.9755201958384333
  - 0.974704202366381
  train_f1_macro_oob:
  - 0.9695022439820482
  - 0.9699102407180742
  - 0.9704202366381068
  - 0.9714402284781719
  - 0.9701142390860874
  train_f1_micro:
  - 0.9747042023663811
  - 0.9759281925744594
  - 0.9755201958384333
  - 0.9755201958384333
  - 0.9747042023663811
  train_f1_micro_oob:
  - 0.9695022439820481
  - 0.9699102407180743
  - 0.970420236638107
  - 0.9714402284781721
  - 0.9701142390860873
  train_f1_samples:
  - 0.9747042023663811
  - 0.9759281925744596
  - 0.9755201958384333
  - 0.9755201958384334
  - 0.9747042023663811
  train_f1_samples_oob:
  - 0.9695022439820482
  - 0.9699102407180743
  - 0.970420236638107
  - 0.9714402284781722
  - 0.9701142390860874
  train_f1_weighted:
  - 0.9737336528788686
  - 0.9761006710410808
  - 0.9752972072192712
  - 0.9761079975876323
  - 0.973772362784769
  train_f1_weighted_oob:
  - 0.9656266642996627
  - 0.9664628249192816
  - 0.9674299572973859
  - 0.9703455275583602
  - 0.9671357849022486
  train_jaccard_macro:
  - 0.9509116644279532
  - 0.9532879618469026
  - 0.9524124913393065
  - 0.9524180426729721
  - 0.95084183957158
  train_jaccard_macro_oob:
  - 0.9412125241169488
  - 0.9420134876510315
  - 0.9429253224010015
  - 0.9448343040921612
  - 0.9423448839584601
  train_jaccard_micro:
  - 0.9506565857540787
  - 0.9529880478087649
  - 0.9522102747909199
  - 0.9522102747909199
  - 0.9506565857540787
  train_jaccard_micro_oob:
  - 0.9408096604968821
  - 0.9415783740964452
  - 0.9425401228452546
  - 0.9444664815549385
  - 0.9419629592948401
  train_jaccard_samples:
  - 0.9536465332218619
  - 0.9555392141843102
  - 0.9551834793113864
  - 0.9548818752307124
  - 0.9533759522131615
  train_jaccard_samples_oob:
  - 0.9446298715889212
  - 0.9451815022972758
  - 0.9460774690425854
  - 0.9477008639040996
  - 0.9451680607899011
  train_jaccard_weighted:
  - 0.9490526528852719
  - 0.9536470785949256
  - 0.9520029596845305
  - 0.9535615593518243
  - 0.9490599712205302
  train_jaccard_weighted_oob:
  - 0.9338812852475045
  - 0.9355159813360437
  - 0.9372669851729526
  - 0.9428115674452371
  - 0.936725088786824
  train_label_ranking_average_precision_score:
  - 0.970276547311431
  - 0.974597406792174
  - 0.9754675772117634
  - 0.9776474252491693
  - 0.9732027500922851
  train_label_ranking_average_precision_score_oob:
  - 0.905925401211509
  - 0.912817272628319
  - 0.9093994071174301
  - 0.9084069868067096
  - 0.9124617271904091
  train_matthews_corrcoef_macro:
  - 0.40836209543205265
  - 0.39449258493069933
  - 0.4021990054145032
  - 0.3920430152742255
  - 0.40160438078546484
  train_matthews_corrcoef_macro_oob:
  - 0.3169136700816532
  - 0.3131814685006315
  - 0.3282730483620495
  - 0.3448071472182786
  - 0.3327722762127663
  train_matthews_corrcoef_micro:
  - 0.7160208229058209
  - 0.7302894500310697
  - 0.7248606943127698
  - 0.7283850833384528
  - 0.7156973815146666
  train_matthews_corrcoef_micro_oob:
  - 0.6453712087516623
  - 0.6492170157973124
  - 0.655791313807021
  - 0.6743509185894667
  - 0.6535689204177578
  train_matthews_corrcoef_samples:
  - 0.3359852158719221
  - 0.344872505854367
  - 0.3479531152401416
  - 0.34123427402786344
  - 0.3439649474460763
  train_matthews_corrcoef_samples_oob:
  - 0.2906493070472785
  - 0.2939513184455906
  - 0.29940626447229335
  - 0.3017090296440451
  - 0.28478090335383965
  train_matthews_corrcoef_weighted:
  - 0.6364079879090209
  - 0.6433003888756943
  - 0.6532601022290365
  - 0.6415936446084937
  - 0.6458139583043966
  train_matthews_corrcoef_weighted_oob:
  - 0.5392576847015423
  - 0.5391541427924865
  - 0.5639723493216089
  - 0.5790145792967275
  - 0.56665828320847
  train_ndgc:
  - 0.5237432489480836
  - 0.5346413475154949
  - 0.5306935857654163
  - 0.5238333902816228
  - 0.5276042179038777
  train_ndgc_oob:
  - 0.481080711818651
  - 0.4942520252802669
  - 0.4883970870854627
  - 0.47857739324340165
  - 0.4894723344802912
  train_neg_coverage_error:
  - -1.184108527131783
  - -1.1550387596899225
  - -1.1317829457364341
  - -1.184108527131783
  - -1.1608527131782946
  train_neg_coverage_error_oob:
  - -1.9903100775193798
  - -1.87984496124031
  - -1.9825581395348837
  - -2.0155038759689923
  - -1.936046511627907
  train_neg_hamming_loss_macro:
  - -0.025295797633618933
  - -0.024071807425540593
  - -0.02447980416156671
  - -0.02447980416156671
  - -0.025295797633618933
  train_neg_hamming_loss_macro_oob:
  - -0.030497756017951863
  - -0.03008975928192575
  - -0.02957976336189311
  - -0.02855977152182783
  - -0.02988576091391269
  train_neg_hamming_loss_micro:
  - -0.02529579763361893
  - -0.024071807425540596
  - -0.02447980416156671
  - -0.02447980416156671
  - -0.02529579763361893
  train_neg_hamming_loss_micro_oob:
  - -0.030497756017951856
  - -0.030089759281925744
  - -0.029579763361893104
  - -0.028559771521827825
  - -0.02988576091391269
  train_neg_hamming_loss_samples:
  - -0.02529579763361893
  - -0.024071807425540596
  - -0.02447980416156671
  - -0.024479804161566705
  - -0.025295797633618926
  train_neg_hamming_loss_samples_oob:
  - -0.030497756017951856
  - -0.03008975928192574
  - -0.029579763361893104
  - -0.028559771521827825
  - -0.029885760913912693
  train_neg_hamming_loss_weighted:
  - -0.026266347121131427
  - -0.02389932895891919
  - -0.024702792780728774
  - -0.0238920024123678
  - -0.026227637215231147
  train_neg_hamming_loss_weighted_oob:
  - -0.03437333570033729
  - -0.033537175080718344
  - -0.03257004270261423
  - -0.029654472441639823
  - -0.0328642150977515
  train_neg_label_ranking_loss:
  - -0.00577057050210265
  - -0.005118626908127592
  - -0.004596131088094152
  - -0.0046332590877734515
  - -0.00503875968992248
  train_neg_label_ranking_loss_oob:
  - -0.035724890482927416
  - -0.029516926776673696
  - -0.03581540770750757
  - -0.034469042287954735
  - -0.03160527453875607
  train_precision_macro:
  - 0.9747042023663812
  - 0.9759281925744593
  - 0.9755201958384333
  - 0.9755201958384333
  - 0.974704202366381
  train_precision_macro_oob:
  - 0.9695022439820482
  - 0.9699102407180742
  - 0.9704202366381068
  - 0.9714402284781719
  - 0.9701142390860874
  train_precision_micro:
  - 0.9747042023663811
  - 0.9759281925744594
  - 0.9755201958384333
  - 0.9755201958384333
  - 0.9747042023663811
  train_precision_micro_oob:
  - 0.9695022439820481
  - 0.9699102407180743
  - 0.970420236638107
  - 0.9714402284781721
  - 0.9701142390860873
  train_precision_samples:
  - 0.9747042023663811
  - 0.9759281925744596
  - 0.9755201958384333
  - 0.9755201958384334
  - 0.9747042023663811
  train_precision_samples_oob:
  - 0.9695022439820482
  - 0.9699102407180743
  - 0.970420236638107
  - 0.9714402284781722
  - 0.9701142390860874
  train_precision_weighted:
  - 0.9737336528788686
  - 0.9761006710410808
  - 0.9752972072192712
  - 0.9761079975876323
  - 0.973772362784769
  train_precision_weighted_oob:
  - 0.9656266642996627
  - 0.9664628249192816
  - 0.9674299572973859
  - 0.9703455275583602
  - 0.9671357849022486
  train_recall_macro:
  - 0.9747042023663812
  - 0.9759281925744593
  - 0.9755201958384333
  - 0.9755201958384333
  - 0.974704202366381
  train_recall_macro_oob:
  - 0.9695022439820482
  - 0.9699102407180742
  - 0.9704202366381068
  - 0.9714402284781719
  - 0.9701142390860874
  train_recall_micro:
  - 0.9747042023663811
  - 0.9759281925744594
  - 0.9755201958384333
  - 0.9755201958384333
  - 0.9747042023663811
  train_recall_micro_oob:
  - 0.9695022439820481
  - 0.9699102407180743
  - 0.970420236638107
  - 0.9714402284781721
  - 0.9701142390860873
  train_recall_samples:
  - 0.9747042023663811
  - 0.9759281925744596
  - 0.9755201958384333
  - 0.9755201958384334
  - 0.9747042023663811
  train_recall_samples_oob:
  - 0.9695022439820482
  - 0.9699102407180743
  - 0.970420236638107
  - 0.9714402284781722
  - 0.9701142390860874
  train_recall_weighted:
  - 0.9737336528788686
  - 0.9761006710410808
  - 0.9752972072192712
  - 0.9761079975876323
  - 0.973772362784769
  train_recall_weighted_oob:
  - 0.9656266642996627
  - 0.9664628249192816
  - 0.9674299572973859
  - 0.9703455275583602
  - 0.9671357849022486
  train_roc_auc_macro:
  - 0.9957869413507515
  - 0.9957650651801392
  - 0.9957842002968725
  - 0.9955584587404129
  - 0.9960296663819812
  train_roc_auc_macro_oob:
  - 0.9391632826001022
  - 0.9541183989884394
  - 0.9479524724568898
  - 0.9400577813228281
  - 0.9499921550883632
  train_roc_auc_micro:
  - 0.9955113598973414
  - 0.9956649959484688
  - 0.9958068357261731
  - 0.9954696062306669
  - 0.9957894199028711
  train_roc_auc_micro_oob:
  - 0.9675824435706766
  - 0.9691477807140495
  - 0.9679071995679469
  - 0.9686366008117442
  - 0.9676396379618056
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.995536742021482
  - 0.9957216144157823
  - 0.9958016893381378
  - 0.9957228716763481
  - 0.995837125940418
  train_roc_auc_weighted_oob:
  - 0.9639045451950218
  - 0.9661124937339832
  - 0.9658534252483291
  - 0.9664168514477899
  - 0.9659987393737635
start: 2023-12-12 16:59:40.383770
wrapper: null
