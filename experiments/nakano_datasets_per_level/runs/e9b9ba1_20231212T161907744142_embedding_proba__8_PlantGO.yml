active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzMDEAAMzMzMzMDwABmZmZmZva/AGZmZmZm9r8AmpmZmZn5Pw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:20:46.465096
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__8
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: e9b9ba1aa41f83ba8d007bb162b1ff8198af3bc601b315353e3b75ddf6083b3c
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e9b9ba1_20231212T161907744142_embedding_proba__8_PlantGO.yml
results:
  fit_time:
  - 43.97551918029785
  - 44.805257081985474
  - 43.36394166946411
  - 47.93410038948059
  - 49.59071326255798
  score_time:
  - 11.165255308151245
  - 11.260032415390015
  - 11.819753885269165
  - 10.96824836730957
  - 11.774168252944946
  test_average_precision_macro:
  - 0.8132722995381186
  - 0.7257594242533442
  - 0.7801895058644749
  - 0.7780230400945473
  - 0.841345347565048
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8607746598149423
  - 0.7981682008289332
  - 0.8365608042703006
  - 0.8499333615545585
  - 0.8882196697600988
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8946180555555555
  - 0.8690636523969857
  - 0.909783659656756
  - 0.8910826905750763
  - 0.905627147766323
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8829894257494721
  - 0.8173051117437267
  - 0.8509218817832342
  - 0.8639532369467763
  - 0.8948143914807511
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9596354166666666
  - 0.9524410774410775
  - 0.9615059221658205
  - 0.9581218274111675
  - 0.9621993127147767
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9596354166666666
  - 0.9524410774410774
  - 0.9615059221658206
  - 0.9581218274111675
  - 0.9621993127147767
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9596354166666666
  - 0.9524410774410773
  - 0.9615059221658208
  - 0.9581218274111675
  - 0.9621993127147765
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9384968102073366
  - 0.9335096245473603
  - 0.9449153571515314
  - 0.9421605776792736
  - 0.9496206963625752
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9236428422972688
  - 0.9105534323510284
  - 0.9268966948847283
  - 0.9204562009617395
  - 0.9277294250738638
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9224030037546934
  - 0.9092004821213339
  - 0.9258655804480652
  - 0.9196102314250914
  - 0.9271523178807947
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9280677655677656
  - 0.9160173160173158
  - 0.9315892229597812
  - 0.9257879176660901
  - 0.9323666024696953
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8856112607185006
  - 0.8769274433449372
  - 0.8968141548025417
  - 0.8915501376168459
  - 0.9047225942287724
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8946180555555556
  - 0.8690636523969857
  - 0.9097836596567562
  - 0.8910826905750766
  - 0.9056271477663231
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4643845441970312
  - 0.39216445241571063
  - 0.4901129935601305
  - 0.4339867165519458
  - 0.4864048952137822
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7304634608658789
  - 0.6757742678725863
  - 0.7389621201990715
  - 0.7209491003497535
  - 0.7494798009889987
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.656066147709855
  - 0.6098542454942341
  - 0.6704722609181678
  - 0.6579043586403035
  - 0.6635020568930035
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6779949679055818
  - 0.6201015088434366
  - 0.6875751199273942
  - 0.6606137972645693
  - 0.7039187108653717
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9221845157694611
  - 0.9036337860484381
  - 0.9336709366314909
  - 0.9202296809729053
  - 0.9308539510508999
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.421875
  - -1.5252525252525253
  - -1.385786802030457
  - -1.4416243654822336
  - -1.3917525773195876
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.040364583333333336
  - -0.04755892255892256
  - -0.03849407783417936
  - -0.04187817258883248
  - -0.037800687285223365
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.040364583333333336
  - -0.04755892255892256
  - -0.03849407783417936
  - -0.04187817258883249
  - -0.037800687285223365
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04036458333333333
  - -0.04755892255892256
  - -0.03849407783417936
  - -0.04187817258883249
  - -0.03780068728522336
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.061503189792663476
  - -0.0664903754526396
  - -0.05508464284846866
  - -0.05783942232072639
  - -0.050379303637424634
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.028267045454545458
  - -0.038512226643539774
  - -0.02732571057444154
  - -0.030156898938624825
  - -0.025164011246485474
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9596354166666666
  - 0.9524410774410775
  - 0.9615059221658205
  - 0.9581218274111675
  - 0.9621993127147767
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9596354166666666
  - 0.9524410774410774
  - 0.9615059221658206
  - 0.9581218274111675
  - 0.9621993127147767
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9596354166666666
  - 0.9524410774410773
  - 0.9615059221658208
  - 0.9581218274111675
  - 0.9621993127147765
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9384968102073366
  - 0.9335096245473603
  - 0.9449153571515314
  - 0.9421605776792736
  - 0.9496206963625752
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9596354166666666
  - 0.9524410774410775
  - 0.9615059221658205
  - 0.9581218274111675
  - 0.9621993127147767
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9596354166666666
  - 0.9524410774410774
  - 0.9615059221658206
  - 0.9581218274111675
  - 0.9621993127147767
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9596354166666666
  - 0.9524410774410773
  - 0.9615059221658208
  - 0.9581218274111675
  - 0.9621993127147765
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9384968102073366
  - 0.9335096245473603
  - 0.9449153571515314
  - 0.9421605776792736
  - 0.9496206963625752
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9627151028351614
  - 0.9552349146153093
  - 0.9570604229456183
  - 0.9709102863003234
  - 0.9825272343423967
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9763506183553916
  - 0.9661626355805113
  - 0.9717536828783624
  - 0.9768368462752338
  - 0.9839765310125905
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9717329545454545
  - 0.9614877733564601
  - 0.9726742894255584
  - 0.9698431010613752
  - 0.9748359887535145
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9704120982220144
  - 0.9589814282405645
  - 0.9677027499583359
  - 0.9733978955173397
  - 0.9785688916400831
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.973819090962666
  - 0.9792833930522669
  - 0.9728181090771253
  - 0.9677399275016265
  - 0.9765436624758513
  train_average_precision_macro_oob:
  - 0.8601097019374042
  - 0.8907792128665899
  - 0.8724349425135646
  - 0.8654961504640206
  - 0.8683781047072908
  train_average_precision_micro:
  - 0.9755607473214052
  - 0.9793486691172457
  - 0.9806772233197207
  - 0.9765764846373536
  - 0.9752562208968766
  train_average_precision_micro_oob:
  - 0.9208702615751636
  - 0.9343865166190934
  - 0.9276729784675894
  - 0.9261440614215115
  - 0.918636190892407
  train_average_precision_samples:
  - 0.969041560644614
  - 0.9783119658119657
  - 0.9754588134869824
  - 0.9710840802390099
  - 0.9725765306122449
  train_average_precision_samples_oob:
  - 0.9408836639752671
  - 0.9531512006512005
  - 0.9397506249618924
  - 0.947325412530278
  - 0.9403572440881113
  train_average_precision_weighted:
  - 0.9813575469620837
  - 0.9847616504176586
  - 0.9840311075356937
  - 0.9797691132824636
  - 0.9830743260804271
  train_average_precision_weighted_oob:
  - 0.9214517228712263
  - 0.9377879715678686
  - 0.9303534241169344
  - 0.9267644264445161
  - 0.9230287980644599
  train_f1_macro:
  - 0.9780534351145037
  - 0.9786324786324784
  - 0.9770593256508749
  - 0.9785531370038411
  - 0.9776785714285715
  train_f1_macro_oob:
  - 0.9682994062765053
  - 0.9698717948717949
  - 0.965322236448997
  - 0.9696969696969696
  - 0.9666241496598639
  train_f1_micro:
  - 0.9780534351145038
  - 0.9786324786324786
  - 0.9770593256508749
  - 0.9785531370038413
  - 0.9776785714285714
  train_f1_micro_oob:
  - 0.9682994062765055
  - 0.9698717948717949
  - 0.9653222364489971
  - 0.9696969696969697
  - 0.966624149659864
  train_f1_samples:
  - 0.9780534351145038
  - 0.9786324786324787
  - 0.9770593256508748
  - 0.9785531370038413
  - 0.9776785714285714
  train_f1_samples_oob:
  - 0.9682994062765056
  - 0.9698717948717949
  - 0.965322236448997
  - 0.9696969696969696
  - 0.9666241496598639
  train_f1_weighted:
  - 0.9761021781892336
  - 0.9786993947136297
  - 0.9755360013076527
  - 0.976564852296678
  - 0.9763100079889605
  train_f1_weighted_oob:
  - 0.9639735561450683
  - 0.9660689843963866
  - 0.9588831073697722
  - 0.963091657263816
  - 0.9598252112232794
  train_jaccard_macro:
  - 0.9571120288758781
  - 0.9581952324381381
  - 0.9552065326210899
  - 0.9580749086378498
  - 0.9563837449897082
  train_jaccard_macro_oob:
  - 0.9387263339308385
  - 0.941628603240159
  - 0.9332481124260328
  - 0.9413291535873526
  - 0.9357097293109523
  train_jaccard_micro:
  - 0.9570494864612512
  - 0.9581589958158996
  - 0.9551475957025138
  - 0.9580068943904732
  - 0.9563318777292577
  train_jaccard_micro_oob:
  - 0.9385469119309423
  - 0.9415059116365899
  - 0.9329689594720016
  - 0.9411764705882353
  - 0.93540423781115
  train_jaccard_samples:
  - 0.9605346307636384
  - 0.9613130459284306
  - 0.9585147247119078
  - 0.9612443894134035
  - 0.959643417806683
  train_jaccard_samples_oob:
  - 0.9430025445292621
  - 0.945556494787264
  - 0.9373809289302247
  - 0.9455586666854273
  - 0.939908051132541
  train_jaccard_weighted:
  - 0.9533761191067401
  - 0.95831897517793
  - 0.9522853704583731
  - 0.9542647567684686
  - 0.953770903042648
  train_jaccard_weighted_oob:
  - 0.9306794046375704
  - 0.9344842710182265
  - 0.9213815134902148
  - 0.9290383769649566
  - 0.9231662727360055
  train_label_ranking_average_precision_score:
  - 0.969041560644614
  - 0.9783119658119657
  - 0.9754588134869824
  - 0.9710840802390097
  - 0.9725765306122449
  train_label_ranking_average_precision_score_oob:
  - 0.9408836639752671
  - 0.9531512006512005
  - 0.9397506249618928
  - 0.9473254125302781
  - 0.9403572440881115
  train_matthews_corrcoef_macro:
  - 0.6695147196460293
  - 0.5912008068324351
  - 0.6224250372122239
  - 0.6671217131250793
  - 0.621746894188303
  train_matthews_corrcoef_macro_oob:
  - 0.4670788571071159
  - 0.47884578560108243
  - 0.4375188922685289
  - 0.4915046285427533
  - 0.45528374772276053
  train_matthews_corrcoef_micro:
  - 0.8585628581002411
  - 0.8630420570486462
  - 0.8526749257282238
  - 0.862188520150565
  - 0.8558506186638233
  train_matthews_corrcoef_micro_oob:
  - 0.7900642775371663
  - 0.8021965742153039
  - 0.7696612461376054
  - 0.800644816672705
  - 0.7777305693693426
  train_matthews_corrcoef_samples:
  - 0.8034427160896398
  - 0.8006971936827646
  - 0.7864507182266578
  - 0.8034155142511645
  - 0.7879643972840203
  train_matthews_corrcoef_samples_oob:
  - 0.7044086430545613
  - 0.711799226008343
  - 0.6715919818119549
  - 0.7198702086110339
  - 0.6889960752666936
  train_matthews_corrcoef_weighted:
  - 0.8356419104576125
  - 0.8279282980237657
  - 0.8218762342216477
  - 0.8388476576633813
  - 0.8260526800511638
  train_matthews_corrcoef_weighted_oob:
  - 0.7360246153321516
  - 0.7496574400804049
  - 0.7112129338554214
  - 0.7492209241082176
  - 0.7214383617751055
  train_ndgc:
  - 0.9771663273509186
  - 0.9840269741024477
  - 0.9819743699786139
  - 0.9786627245581547
  - 0.9797186653028138
  train_ndgc_oob:
  - 0.9568051526360393
  - 0.9658590446516058
  - 0.9561144198804359
  - 0.9615616459320767
  - 0.9562786330052016
  train_neg_coverage_error:
  - -1.1412213740458015
  - -1.126923076923077
  - -1.1357234314980793
  - -1.1395646606914211
  - -1.1339285714285714
  train_neg_coverage_error_oob:
  - -1.2913486005089059
  - -1.25
  - -1.2829705505761844
  - -1.2842509603072982
  - -1.284438775510204
  train_neg_hamming_loss_macro:
  - -0.02194656488549618
  - -0.02136752136752137
  - -0.022940674349125056
  - -0.021446862996158774
  - -0.022321428571428575
  train_neg_hamming_loss_macro_oob:
  - -0.031700593723494486
  - -0.030128205128205132
  - -0.03467776355100299
  - -0.030303030303030304
  - -0.03337585034013605
  train_neg_hamming_loss_micro:
  - -0.02194656488549618
  - -0.021367521367521368
  - -0.022940674349125053
  - -0.02144686299615877
  - -0.022321428571428572
  train_neg_hamming_loss_micro_oob:
  - -0.031700593723494486
  - -0.03012820512820513
  - -0.03467776355100299
  - -0.030303030303030304
  - -0.03337585034013606
  train_neg_hamming_loss_samples:
  - -0.02194656488549618
  - -0.021367521367521368
  - -0.02294067434912505
  - -0.02144686299615877
  - -0.022321428571428572
  train_neg_hamming_loss_samples_oob:
  - -0.031700593723494486
  - -0.030128205128205125
  - -0.03467776355100298
  - -0.0303030303030303
  - -0.03337585034013605
  train_neg_hamming_loss_weighted:
  - -0.023897821810766426
  - -0.021300605286370414
  - -0.02446399869234751
  - -0.02343514770332207
  - -0.023689992011039298
  train_neg_hamming_loss_weighted_oob:
  - -0.03602644385493175
  - -0.033931015603613474
  - -0.04111689263022796
  - -0.036908342736183895
  - -0.040174788776720656
  train_neg_label_ranking_loss:
  - -0.005841708004557877
  - -0.004155011655011654
  - -0.004667675474333605
  - -0.005518264161029846
  - -0.005345547309833025
  train_neg_label_ranking_loss_oob:
  - -0.01765834768379298
  - -0.013842053008719674
  - -0.016324577400121575
  - -0.016963920036903394
  - -0.017472127739984883
  train_precision_macro:
  - 0.9780534351145037
  - 0.9786324786324784
  - 0.9770593256508749
  - 0.9785531370038411
  - 0.9776785714285715
  train_precision_macro_oob:
  - 0.9682994062765053
  - 0.9698717948717949
  - 0.965322236448997
  - 0.9696969696969696
  - 0.9666241496598639
  train_precision_micro:
  - 0.9780534351145038
  - 0.9786324786324786
  - 0.9770593256508749
  - 0.9785531370038413
  - 0.9776785714285714
  train_precision_micro_oob:
  - 0.9682994062765055
  - 0.9698717948717949
  - 0.9653222364489971
  - 0.9696969696969697
  - 0.966624149659864
  train_precision_samples:
  - 0.9780534351145038
  - 0.9786324786324787
  - 0.9770593256508748
  - 0.9785531370038413
  - 0.9776785714285714
  train_precision_samples_oob:
  - 0.9682994062765056
  - 0.9698717948717949
  - 0.965322236448997
  - 0.9696969696969696
  - 0.9666241496598639
  train_precision_weighted:
  - 0.9761021781892336
  - 0.9786993947136297
  - 0.9755360013076527
  - 0.976564852296678
  - 0.9763100079889605
  train_precision_weighted_oob:
  - 0.9639735561450683
  - 0.9660689843963866
  - 0.9588831073697722
  - 0.963091657263816
  - 0.9598252112232794
  train_recall_macro:
  - 0.9780534351145037
  - 0.9786324786324784
  - 0.9770593256508749
  - 0.9785531370038411
  - 0.9776785714285715
  train_recall_macro_oob:
  - 0.9682994062765053
  - 0.9698717948717949
  - 0.965322236448997
  - 0.9696969696969696
  - 0.9666241496598639
  train_recall_micro:
  - 0.9780534351145038
  - 0.9786324786324786
  - 0.9770593256508749
  - 0.9785531370038413
  - 0.9776785714285714
  train_recall_micro_oob:
  - 0.9682994062765055
  - 0.9698717948717949
  - 0.9653222364489971
  - 0.9696969696969697
  - 0.966624149659864
  train_recall_samples:
  - 0.9780534351145038
  - 0.9786324786324787
  - 0.9770593256508748
  - 0.9785531370038413
  - 0.9776785714285714
  train_recall_samples_oob:
  - 0.9682994062765056
  - 0.9698717948717949
  - 0.965322236448997
  - 0.9696969696969696
  - 0.9666241496598639
  train_recall_weighted:
  - 0.9761021781892336
  - 0.9786993947136297
  - 0.9755360013076527
  - 0.976564852296678
  - 0.9763100079889605
  train_recall_weighted_oob:
  - 0.9639735561450683
  - 0.9660689843963866
  - 0.9588831073697722
  - 0.963091657263816
  - 0.9598252112232794
  train_roc_auc_macro:
  - 0.9979162249168015
  - 0.998121216960099
  - 0.9985059555428711
  - 0.9977693985092114
  - 0.9979142452832791
  train_roc_auc_macro_oob:
  - 0.9855760316472767
  - 0.988514029476546
  - 0.9869616728386559
  - 0.9837686167704328
  - 0.9823821803005334
  train_roc_auc_micro:
  - 0.9978032714755286
  - 0.9980628374121898
  - 0.9982915559637078
  - 0.9978591696763971
  - 0.9977585403366483
  train_roc_auc_micro_oob:
  - 0.9886642668063189
  - 0.9905414208217436
  - 0.9891109048168056
  - 0.9881978652958819
  - 0.9875682364778725
  train_roc_auc_samples:
  - 0.9941582919954421
  - 0.9958449883449884
  - 0.9953323245256664
  - 0.99448173583897
  - 0.994654452690167
  train_roc_auc_samples_oob:
  - 0.9823416523162071
  - 0.9861579469912803
  - 0.9836754225998784
  - 0.9830360799630966
  - 0.982527872260015
  train_roc_auc_weighted:
  - 0.9975270046733778
  - 0.9978282936558396
  - 0.9981061616916974
  - 0.9975335420873821
  - 0.9975391828672259
  train_roc_auc_weighted_oob:
  - 0.9881970766549372
  - 0.9906538488651172
  - 0.988401527192221
  - 0.9882260548869056
  - 0.9869886506657313
start: 2023-12-12 16:19:07.744142
wrapper: null
