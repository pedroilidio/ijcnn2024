active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            nJmZmZmZ6T+QmZmZmZnJv5CZmZmZmcm/kJmZmZmZyb+QmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5qZmZmZmek/mJmZmZmZyb+YmZmZmZnJvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAA8D8AAAAAAAAAAAAAAAAAAADAAAAAAAAA8D8AAAAAAAAAAA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZyb+cmZmZmZnpP5CZmZmZmcm/MjMzMzMz87+cmZmZmZnpPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZyb+YmZmZmZnJv5iZmZmZmcm/mpmZmZmZ6T+YmZmZmZnJvw==
        ? !!python/tuple
        - 14
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j+gmZmZmZnZP2hmZmZmZvY/mJmZmZmZ+b+YmZmZmZn5vw==
        ? !!python/tuple
        - 15
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 16
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 17
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 18
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 19
      n_samples: 645
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: birds
  params:
    path: nakano_datasets_v2/datasets/MLC/birds.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 16:57:07.899666
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__4
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: eb198c2febc13b614de2725065b2f7e6bcaf1d59621e0e875ec45b232b95a4bd
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/eb198c2_20231212T165639896882_embedding_proba__4_birds.yml
results:
  fit_time:
  - 10.226723670959473
  - 10.357216596603394
  - 10.37439775466919
  - 11.325257062911987
  - 11.82500958442688
  score_time:
  - 4.568374156951904
  - 4.3685643672943115
  - 4.315541982650757
  - 4.9096999168396
  - 4.790324687957764
  test_average_precision_macro:
  - 0.4282244718843122
  - 0.5111484235222598
  - 0.41459674040570443
  - 0.5696633825245251
  - 0.5206350184340449
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.478714676010825
  - 0.5141478287084398
  - 0.464093392152971
  - 0.6563818057567777
  - 0.5917144674576978
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.3299428510199624
  - 0.36217797693515885
  - 0.32921686726406285
  - 0.3886811644767581
  - 0.3328134174793401
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5134688238622072
  - 0.5500125242473707
  - 0.5170292058435448
  - 0.6760054528949349
  - 0.6232483103990468
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9571603427172583
  - 0.9522643818849451
  - 0.9530803753569972
  - 0.9616483068135454
  - 0.9579763361893103
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9571603427172583
  - 0.9522643818849449
  - 0.9530803753569972
  - 0.9616483068135455
  - 0.9579763361893104
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9571603427172581
  - 0.9522643818849449
  - 0.9530803753569971
  - 0.9616483068135454
  - 0.9579763361893106
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9379244035815156
  - 0.9293311700018029
  - 0.9301733830404167
  - 0.9493810019669097
  - 0.9426593289543762
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9191351204219618
  - 0.9106168935425234
  - 0.9120415132062635
  - 0.9270883936416869
  - 0.9203111552346466
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9178403755868545
  - 0.9088785046728972
  - 0.9103663289166017
  - 0.9261296660117878
  - 0.9193422083007048
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9228836100423562
  - 0.9139151153306867
  - 0.9167709888134561
  - 0.9305280159678543
  - 0.9242139727478453
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8845270188089192
  - 0.8697155266622882
  - 0.8712616131210016
  - 0.9048599909309202
  - 0.8923867266494883
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7718033161362415
  - 0.7962865040669421
  - 0.8020850843183268
  - 0.8460455055620295
  - 0.8056816345336039
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.19542351364739657
  - 0.10314247644686897
  - 0.18474189551105263
  - 0.2284565973214479
  - 0.19674308181778155
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4360094029398165
  - 0.3185302541988426
  - 0.3929975801656947
  - 0.5374810283873398
  - 0.4596872973611438
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.15084515986175592
  - 0.09079680616014203
  - 0.14500863111320056
  - 0.18509371863116184
  - 0.1646287507264749
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3469816515150805
  - 0.21593326707121757
  - 0.31397845795902907
  - 0.41602888596301013
  - 0.3494832295470717
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.39241678371536504
  - 0.4219393822475542
  - 0.3918684353764366
  - 0.4382781491868691
  - 0.3907323756464986
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.186046511627907
  - -2.9767441860465116
  - -3.2790697674418605
  - -2.7906976744186047
  - -2.9844961240310077
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.042839657282741736
  - -0.047735618115055084
  - -0.04691962464300286
  - -0.03835169318645451
  - -0.04202366381068952
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.042839657282741736
  - -0.04773561811505508
  - -0.04691962464300286
  - -0.03835169318645451
  - -0.04202366381068951
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.042839657282741736
  - -0.04773561811505507
  - -0.04691962464300285
  - -0.038351693186454504
  - -0.04202366381068951
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.062075596418484466
  - -0.07066882999819722
  - -0.0698266169595834
  - -0.05061899803309037
  - -0.05734067104562401
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.10844570386294053
  - -0.0865411410042053
  - -0.0902433344635807
  - -0.07032051838823383
  - -0.08518391852865177
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9571603427172583
  - 0.9522643818849451
  - 0.9530803753569972
  - 0.9616483068135454
  - 0.9579763361893103
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9571603427172583
  - 0.9522643818849449
  - 0.9530803753569972
  - 0.9616483068135455
  - 0.9579763361893104
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9571603427172581
  - 0.9522643818849449
  - 0.9530803753569971
  - 0.9616483068135454
  - 0.9579763361893106
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9379244035815156
  - 0.9293311700018029
  - 0.9301733830404167
  - 0.9493810019669097
  - 0.9426593289543762
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9571603427172583
  - 0.9522643818849451
  - 0.9530803753569972
  - 0.9616483068135454
  - 0.9579763361893103
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9571603427172583
  - 0.9522643818849449
  - 0.9530803753569972
  - 0.9616483068135455
  - 0.9579763361893104
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9571603427172581
  - 0.9522643818849449
  - 0.9530803753569971
  - 0.9616483068135454
  - 0.9579763361893106
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9379244035815156
  - 0.9293311700018029
  - 0.9301733830404167
  - 0.9493810019669097
  - 0.9426593289543762
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8715862023842431
  - 0.8912945558337791
  - 0.847094151688698
  - 0.896470842356287
  - 0.9019162194518282
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8776549219130795
  - 0.9111798836875454
  - 0.8964595946301659
  - 0.9202938694529081
  - 0.9159219531455646
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8554097783632492
  - 0.8922442426173938
  - 0.874553652024896
  - 0.908215223413347
  - 0.9051415863803441
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9298140240853372
  - 0.9270985965089835
  - 0.9512479563441348
  - 0.9510086004931392
  - 0.9343852006856466
  train_average_precision_macro_oob:
  - 0.5903397258189295
  - 0.5624887217786758
  - 0.5869113135895117
  - 0.6481958710098267
  - 0.5651926656388665
  train_average_precision_micro:
  - 0.9229967056738196
  - 0.9227904152690667
  - 0.9280734021447331
  - 0.9349936949932268
  - 0.9302950652342594
  train_average_precision_micro_oob:
  - 0.75887639487182
  - 0.7488796955198332
  - 0.7604871555764297
  - 0.7714179673756077
  - 0.7673534995096489
  train_average_precision_samples:
  - 0.5150678294573643
  - 0.5134424603174603
  - 0.5231481481481481
  - 0.5208629414298019
  - 0.5249165590008613
  train_average_precision_samples_oob:
  - 0.4407760872911352
  - 0.4412474549720751
  - 0.4559601286259973
  - 0.45811489139122513
  - 0.4558543570912172
  train_average_precision_weighted:
  - 0.939546277244033
  - 0.9385903465286493
  - 0.951584437715004
  - 0.9537391341980209
  - 0.9431260585430894
  train_average_precision_weighted_oob:
  - 0.7413012477855077
  - 0.7212376598256204
  - 0.7366029990537502
  - 0.7638565805427767
  - 0.7327886103909779
  train_f1_macro:
  - 0.9727662178702571
  - 0.9712362301101589
  - 0.9726642186862505
  - 0.9716442268461851
  - 0.9720522235822111
  train_f1_macro_oob:
  - 0.9647082823337413
  - 0.9638922888616889
  - 0.9643002855977151
  - 0.9640962872297021
  - 0.9641982864137087
  train_f1_micro:
  - 0.9727662178702571
  - 0.9712362301101591
  - 0.9726642186862505
  - 0.9716442268461852
  - 0.9720522235822113
  train_f1_micro_oob:
  - 0.9647082823337413
  - 0.9638922888616891
  - 0.9643002855977152
  - 0.9640962872297022
  - 0.9641982864137086
  train_f1_samples:
  - 0.972766217870257
  - 0.9712362301101591
  - 0.9726642186862506
  - 0.9716442268461852
  - 0.9720522235822113
  train_f1_samples_oob:
  - 0.9647082823337413
  - 0.9638922888616892
  - 0.9643002855977152
  - 0.9640962872297022
  - 0.9641982864137087
  train_f1_weighted:
  - 0.9698228128460689
  - 0.968423772609819
  - 0.9704040493871078
  - 0.96891771019678
  - 0.9682919056724029
  train_f1_weighted_oob:
  - 0.9564820967146549
  - 0.9544998154300479
  - 0.9552262587635437
  - 0.9558549493142516
  - 0.9566788207568145
  train_jaccard_macro:
  - 0.9472572666768702
  - 0.9444432584333048
  - 0.9471128508870263
  - 0.945145707586947
  - 0.9459589129190804
  train_jaccard_macro_oob:
  - 0.9323527214255414
  - 0.9308773594613589
  - 0.931579995659054
  - 0.9312398819251515
  - 0.9314527596064915
  train_jaccard_micro:
  - 0.9469764670837056
  - 0.9440809042236764
  - 0.9467831612390787
  - 0.9448522118627256
  - 0.945624131772177
  train_jaccard_micro_oob:
  - 0.9318226600985222
  - 0.9303012404016539
  - 0.9310616505810518
  - 0.9306813706183537
  - 0.9308714918759232
  train_jaccard_samples:
  - 0.9500172168018477
  - 0.9473195774004672
  - 0.9497961340984596
  - 0.9480280560917569
  - 0.948724825898739
  train_jaccard_samples_oob:
  - 0.9360231120974297
  - 0.9343678187333395
  - 0.9351695125456501
  - 0.9347218756976089
  - 0.9351249932518891
  train_jaccard_weighted:
  - 0.9416799323209986
  - 0.9391221469315357
  - 0.9428522305419553
  - 0.9399685763379655
  - 0.9387938834744837
  train_jaccard_weighted_oob:
  - 0.916961107797008
  - 0.9134162497235289
  - 0.9146328637144627
  - 0.9158382014213308
  - 0.917363459933795
  train_label_ranking_average_precision_score:
  - 0.9743701550387595
  - 0.9746827703949796
  - 0.9746985357450473
  - 0.9762892980189494
  - 0.9764669465977605
  train_label_ranking_average_precision_score_oob:
  - 0.9000784128725303
  - 0.9024877650495943
  - 0.9075105162228967
  - 0.9135412479803721
  - 0.9074047446881164
  train_matthews_corrcoef_macro:
  - 0.38664793293565813
  - 0.3379936597690829
  - 0.37018062751676384
  - 0.3422488615348989
  - 0.3871620117245827
  train_matthews_corrcoef_macro_oob:
  - 0.2749562068377374
  - 0.2504484809788116
  - 0.27194500522802517
  - 0.24008670589902137
  - 0.2290144770523035
  train_matthews_corrcoef_micro:
  - 0.6908618325839183
  - 0.66991997435606
  - 0.68817197044472
  - 0.6719024689315
  - 0.6797514903772959
  train_matthews_corrcoef_micro_oob:
  - 0.5749425680116845
  - 0.5608732343611568
  - 0.566112965626569
  - 0.5581033837219241
  - 0.5638563155018717
  train_matthews_corrcoef_samples:
  - 0.3018209025175049
  - 0.28583044907949695
  - 0.2968017996461541
  - 0.28933880837236636
  - 0.29808306839844656
  train_matthews_corrcoef_samples_oob:
  - 0.2321713012260074
  - 0.20873588852220196
  - 0.22397380421767915
  - 0.2114892446153833
  - 0.23349151950866429
  train_matthews_corrcoef_weighted:
  - 0.6160884321776314
  - 0.5663980841949671
  - 0.59924399466066
  - 0.5816867046821136
  - 0.5989414146361495
  train_matthews_corrcoef_weighted_oob:
  - 0.47321888395029243
  - 0.44839142253835157
  - 0.4692734868179361
  - 0.44122168101616355
  - 0.4298118982440795
  train_ndgc:
  - 0.5256217849389826
  - 0.5236515471925333
  - 0.5328594406459298
  - 0.5292694625684291
  - 0.5335886465257743
  train_ndgc_oob:
  - 0.4751805786958543
  - 0.4744928120223135
  - 0.48741917285803615
  - 0.4873834879089415
  - 0.48724122441221096
  train_neg_coverage_error:
  - -1.1705426356589148
  - -1.1666666666666667
  - -1.1492248062015504
  - -1.122093023255814
  - -1.1356589147286822
  train_neg_coverage_error_oob:
  - -2.0833333333333335
  - -2.0891472868217056
  - -1.9689922480620154
  - -1.7848837209302326
  - -1.9709302325581395
  train_neg_hamming_loss_macro:
  - -0.027233782129742968
  - -0.028763769889840887
  - -0.02733578131374949
  - -0.028355773153814774
  - -0.027947776417788662
  train_neg_hamming_loss_macro_oob:
  - -0.03529171766625867
  - -0.03610771113831089
  - -0.03569971440228479
  - -0.035903712770297844
  - -0.035801713586291306
  train_neg_hamming_loss_micro:
  - -0.02723378212974296
  - -0.02876376988984088
  - -0.02733578131374949
  - -0.02835577315381477
  - -0.02794777641778866
  train_neg_hamming_loss_micro_oob:
  - -0.035291717666258667
  - -0.03610771113831089
  - -0.03569971440228478
  - -0.03590371277029784
  - -0.03580171358629131
  train_neg_hamming_loss_samples:
  - -0.027233782129742957
  - -0.02876376988984088
  - -0.027335781313749488
  - -0.028355773153814767
  - -0.027947776417788655
  train_neg_hamming_loss_samples_oob:
  - -0.035291717666258667
  - -0.036107711138310884
  - -0.035699714402284775
  - -0.03590371277029784
  - -0.035801713586291306
  train_neg_hamming_loss_weighted:
  - -0.03017718715393134
  - -0.03157622739018088
  - -0.02959595061289223
  - -0.031082289803220038
  - -0.0317080943275972
  train_neg_hamming_loss_weighted_oob:
  - -0.04351790328534515
  - -0.04550018456995202
  - -0.04477374123645634
  - -0.04414505068574836
  - -0.043321179243185556
  train_neg_label_ranking_loss:
  - -0.005036870144599283
  - -0.0050235598115215075
  - -0.004703434991567688
  - -0.00416207503673304
  - -0.00468203754369965
  train_neg_label_ranking_loss_oob:
  - -0.03908266819946027
  - -0.040637233327041805
  - -0.034103324792449284
  - -0.029290129140505338
  - -0.03629935401908726
  train_precision_macro:
  - 0.9727662178702571
  - 0.9712362301101589
  - 0.9726642186862505
  - 0.9716442268461851
  - 0.9720522235822111
  train_precision_macro_oob:
  - 0.9647082823337413
  - 0.9638922888616889
  - 0.9643002855977151
  - 0.9640962872297021
  - 0.9641982864137087
  train_precision_micro:
  - 0.9727662178702571
  - 0.9712362301101591
  - 0.9726642186862505
  - 0.9716442268461852
  - 0.9720522235822113
  train_precision_micro_oob:
  - 0.9647082823337413
  - 0.9638922888616891
  - 0.9643002855977152
  - 0.9640962872297022
  - 0.9641982864137086
  train_precision_samples:
  - 0.972766217870257
  - 0.9712362301101591
  - 0.9726642186862506
  - 0.9716442268461852
  - 0.9720522235822113
  train_precision_samples_oob:
  - 0.9647082823337413
  - 0.9638922888616892
  - 0.9643002855977152
  - 0.9640962872297022
  - 0.9641982864137087
  train_precision_weighted:
  - 0.9698228128460689
  - 0.968423772609819
  - 0.9704040493871078
  - 0.96891771019678
  - 0.9682919056724029
  train_precision_weighted_oob:
  - 0.9564820967146549
  - 0.9544998154300479
  - 0.9552262587635437
  - 0.9558549493142516
  - 0.9566788207568145
  train_recall_macro:
  - 0.9727662178702571
  - 0.9712362301101589
  - 0.9726642186862505
  - 0.9716442268461851
  - 0.9720522235822111
  train_recall_macro_oob:
  - 0.9647082823337413
  - 0.9638922888616889
  - 0.9643002855977151
  - 0.9640962872297021
  - 0.9641982864137087
  train_recall_micro:
  - 0.9727662178702571
  - 0.9712362301101591
  - 0.9726642186862505
  - 0.9716442268461852
  - 0.9720522235822113
  train_recall_micro_oob:
  - 0.9647082823337413
  - 0.9638922888616891
  - 0.9643002855977152
  - 0.9640962872297022
  - 0.9641982864137086
  train_recall_samples:
  - 0.972766217870257
  - 0.9712362301101591
  - 0.9726642186862506
  - 0.9716442268461852
  - 0.9720522235822113
  train_recall_samples_oob:
  - 0.9647082823337413
  - 0.9638922888616892
  - 0.9643002855977152
  - 0.9640962872297022
  - 0.9641982864137087
  train_recall_weighted:
  - 0.9698228128460689
  - 0.968423772609819
  - 0.9704040493871078
  - 0.96891771019678
  - 0.9682919056724029
  train_recall_weighted_oob:
  - 0.9564820967146549
  - 0.9544998154300479
  - 0.9552262587635437
  - 0.9558549493142516
  - 0.9566788207568145
  train_roc_auc_macro:
  - 0.9963015514032226
  - 0.9958479045166075
  - 0.9970789067800789
  - 0.9975592837667066
  - 0.9965095937842016
  train_roc_auc_macro_oob:
  - 0.9465145439221048
  - 0.9425772891727628
  - 0.9520784648847326
  - 0.9610097124836279
  - 0.9383728522331422
  train_roc_auc_micro:
  - 0.9954225362954752
  - 0.9953383728747454
  - 0.995896960895664
  - 0.9965358101614026
  - 0.9959896686480716
  train_roc_auc_micro_oob:
  - 0.9630832550716159
  - 0.960645184466717
  - 0.9651707275065755
  - 0.97135207801677
  - 0.9646545513428925
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9956732321386417
  - 0.9953259331034902
  - 0.9964041641174117
  - 0.9969012849239782
  - 0.9961557674278262
  train_roc_auc_weighted_oob:
  - 0.9640665582401325
  - 0.9612989605328496
  - 0.9643940305325426
  - 0.974192762626376
  - 0.9672537591359924
start: 2023-12-12 16:56:39.896882
wrapper: null
