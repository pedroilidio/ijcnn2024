active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AMzMzMzPzvwCYmZmZmcm/AJqZmZmZ6T8AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 19:30:49.239323
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__0
  params: {}
hash: 89c6ec4e29f8b54196317f1964bba180a50010a23e550906c1108228928185ec
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/89c6ec4_20231221T193041670551_embedding_proba_weak__0_GrampositivePseAAC.yml
results:
  fit_time:
  - 0.9647433757781982
  - 0.9663934707641602
  - 0.9575433731079102
  - 0.9554657936096191
  - 0.9487428665161133
  score_time:
  - 0.9937543869018555
  - 0.9999880790710449
  - 0.9611201286315918
  - 0.9566400051116943
  - 0.9687290191650391
  test_average_precision_macro:
  - 0.3981213356353685
  - 0.38713576168140346
  - 0.48672339398547665
  - 0.36693104555637457
  - 0.40957715117666754
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.49487972226823107
  - 0.5185029089243361
  - 0.5787586141178506
  - 0.4584485579011801
  - 0.5099536314390681
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6907051282051283
  - 0.7349206349206349
  - 0.7387820512820512
  - 0.6852750809061486
  - 0.7127831715210355
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.49894935190144796
  - 0.48986204497557206
  - 0.5956049272306944
  - 0.45995992204952063
  - 0.48885429962627625
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679613
  - 0.7694174757281554
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679612
  - 0.7694174757281553
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679612
  - 0.7694174757281553
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.693324704142012
  - 0.7031292517006802
  - 0.7105311355311357
  - 0.6650485436893204
  - 0.6993065187239944
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6340277777777779
  - 0.643403745914426
  - 0.6475032513316388
  - 0.6165536261939785
  - 0.6439986339341681
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6155339805825243
  - 0.6247582205029013
  - 0.6313725490196078
  - 0.5938104448742747
  - 0.6252465483234714
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6269230769230768
  - 0.6419047619047616
  - 0.6461538461538461
  - 0.606472491909385
  - 0.6388349514563105
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.537037037037037
  - 0.5501841543180973
  - 0.5561713582616905
  - 0.5046841575470429
  - 0.5431648484091934
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6907051282051283
  - 0.7349206349206349
  - 0.7387820512820512
  - 0.6852750809061492
  - 0.7127831715210357
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.08793928884196661
  - 0.11226758458637241
  - 0.1481688664783114
  - 0.03649354633774008
  - 0.13098013104485665
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.18927455259039128
  - 0.23958183015107726
  - 0.27106359924234974
  - 0.11199091271489411
  - 0.25747743958886526
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.08653846153846154
  - 0.13333333333333333
  - 0.14016682951143872
  - 0.05501618122977347
  - 0.12771553920756556
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.12392291963643827
  - 0.1522572642054157
  - 0.21576167206569438
  - 0.05191194256249142
  - 0.18665929019993094
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7698760299465145
  - 0.8026812246953215
  - 0.8058803757237809
  - 0.7660340056083009
  - 0.7864923623003944
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7788461538461537
  - -1.6761904761904762
  - -1.7115384615384615
  - -1.825242718446602
  - -1.766990291262136
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23798076923076927
  - -0.23095238095238096
  - -0.2259615384615385
  - -0.25485436893203883
  - -0.23058252427184464
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23798076923076922
  - -0.23095238095238096
  - -0.22596153846153846
  - -0.25485436893203883
  - -0.23058252427184467
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23798076923076922
  - -0.23095238095238096
  - -0.22596153846153846
  - -0.25485436893203883
  - -0.23058252427184467
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3066752958579882
  - -0.29687074829931975
  - -0.2894688644688645
  - -0.3349514563106796
  - -0.30069348127600554
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.25961538461538464
  - -0.2253968253968254
  - -0.23237179487179485
  - -0.27103559870550153
  - -0.2483818770226537
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679613
  - 0.7694174757281554
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679612
  - 0.7694174757281553
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679612
  - 0.7694174757281553
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.693324704142012
  - 0.7031292517006802
  - 0.7105311355311357
  - 0.6650485436893204
  - 0.6993065187239944
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679613
  - 0.7694174757281554
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679612
  - 0.7694174757281553
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7620192307692307
  - 0.7690476190476191
  - 0.7740384615384616
  - 0.7451456310679612
  - 0.7694174757281553
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.693324704142012
  - 0.7031292517006802
  - 0.7105311355311357
  - 0.6650485436893204
  - 0.6993065187239944
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6567125035768993
  - 0.641198782305122
  - 0.7583568757096106
  - 0.6372055145321466
  - 0.6527866909689475
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.761495315581854
  - 0.7743915343915344
  - 0.7989894350022967
  - 0.7484390609390609
  - 0.7663409337676439
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7403846153846154
  - 0.7746031746031745
  - 0.7676282051282052
  - 0.7289644012944984
  - 0.7516181229773463
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6641372697350959
  - 0.6683899525156597
  - 0.7460569914735412
  - 0.6331387604892869
  - 0.6438958958110356
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9907079487869177
  - 0.9960596231193322
  - 0.9932449525002028
  - 0.9913190107358877
  - 0.9953970606570244
  train_average_precision_macro_oob:
  - 0.35547703504424655
  - 0.37022412231494806
  - 0.3440999027528895
  - 0.3697491377611045
  - 0.37148546567559954
  train_average_precision_micro:
  - 0.9661871234061241
  - 0.9728625595376316
  - 0.9665531319489128
  - 0.9650556376210706
  - 0.9702448859681182
  train_average_precision_micro_oob:
  - 0.49347960450208755
  - 0.49847415268667267
  - 0.47014891622048394
  - 0.509817915556028
  - 0.5007385628955159
  train_average_precision_samples:
  - 0.963855421686747
  - 0.9734299516908212
  - 0.9634538152610442
  - 0.960136217948718
  - 0.9661458333333334
  train_average_precision_samples_oob:
  - 0.7110441767068272
  - 0.7083333333333334
  - 0.702008032128514
  - 0.7079326923076923
  - 0.7095352564102563
  train_average_precision_weighted:
  - 0.9882141932270179
  - 0.9951257570038725
  - 0.9913038753107966
  - 0.9887950124018949
  - 0.9938774299648457
  train_average_precision_weighted_oob:
  - 0.4521906301816735
  - 0.4778642596594376
  - 0.442022026483545
  - 0.473672241868446
  - 0.4760926742884586
  train_f1_macro:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_f1_macro_oob:
  - 0.7614457831325301
  - 0.7620772946859903
  - 0.7560240963855421
  - 0.7614182692307692
  - 0.7590144230769231
  train_f1_micro:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_f1_micro_oob:
  - 0.7614457831325301
  - 0.7620772946859904
  - 0.7560240963855421
  - 0.7614182692307693
  - 0.7590144230769231
  train_f1_samples:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_f1_samples_oob:
  - 0.7614457831325301
  - 0.7620772946859904
  - 0.7560240963855421
  - 0.7614182692307693
  - 0.7590144230769231
  train_f1_weighted:
  - 0.8844236133076459
  - 0.8823186094353143
  - 0.8809880671009395
  - 0.8806051496236461
  - 0.889561096797939
  train_f1_weighted_oob:
  - 0.6890703625959685
  - 0.6914569031273837
  - 0.6820891220383928
  - 0.6902939691573343
  - 0.6873274751564226
  train_jaccard_macro:
  - 0.8124022253467216
  - 0.8096107528779841
  - 0.8090965913207504
  - 0.8072641344707456
  - 0.8180564951038606
  train_jaccard_macro_oob:
  - 0.6349372283257485
  - 0.6345081531333178
  - 0.628375433257548
  - 0.6345371717905268
  - 0.631380226488666
  train_jaccard_micro:
  - 0.8033677349266702
  - 0.800978792822186
  - 0.8004338394793926
  - 0.798918918918919
  - 0.8106637649619152
  train_jaccard_micro_oob:
  - 0.6147859922178989
  - 0.615609756097561
  - 0.6077481840193705
  - 0.6147501213003397
  - 0.6116222760290557
  train_jaccard_samples:
  - 0.8258634538152608
  - 0.8235104669887278
  - 0.823293172690763
  - 0.8217948717948717
  - 0.8326923076923076
  train_jaccard_samples_oob:
  - 0.6311646586345381
  - 0.6296296296296295
  - 0.6199196787148593
  - 0.6317307692307691
  - 0.6240384615384613
  train_jaccard_weighted:
  - 0.8008337134559019
  - 0.7967394789791482
  - 0.79492479596053
  - 0.7940068076576976
  - 0.8075318917369385
  train_jaccard_weighted_oob:
  - 0.5331424533815121
  - 0.5341193004173728
  - 0.5246820503163201
  - 0.5346893895906727
  - 0.5307283973172209
  train_label_ranking_average_precision_score:
  - 0.9638554216867469
  - 0.9734299516908211
  - 0.9634538152610441
  - 0.9601362179487177
  - 0.9661458333333333
  train_label_ranking_average_precision_score_oob:
  - 0.7110441767068275
  - 0.7083333333333337
  - 0.7020080321285144
  - 0.7079326923076924
  - 0.7095352564102562
  train_matthews_corrcoef_macro:
  - 0.4540186243344776
  - 0.4472150961641707
  - 0.4593454363146672
  - 0.45443918364647384
  - 0.4788314545556452
  train_matthews_corrcoef_macro_oob:
  - 0.09242020368409079
  - 0.09626093092079806
  - 0.06871502590074838
  - 0.09174967603057822
  - 0.0775386091301504
  train_matthews_corrcoef_micro:
  - 0.703579267449649
  - 0.6998566178121219
  - 0.6977616638598939
  - 0.6945662331295092
  - 0.715684515996463
  train_matthews_corrcoef_micro_oob:
  - 0.2108806321084646
  - 0.20698128674264002
  - 0.16663387678444191
  - 0.21056102112060632
  - 0.18038756364919115
  train_matthews_corrcoef_samples:
  - 0.5710266692612654
  - 0.5645701710327751
  - 0.563424981216978
  - 0.5602533272617841
  - 0.5845064916787963
  train_matthews_corrcoef_samples_oob:
  - 0.11442899728123514
  - 0.10364899420899266
  - 0.07849963920286657
  - 0.11655777373007833
  - 0.08573717948717949
  train_matthews_corrcoef_weighted:
  - 0.6452219424701159
  - 0.6382293932469998
  - 0.6462346362752345
  - 0.6403325421708721
  - 0.6680918718340016
  train_matthews_corrcoef_weighted_oob:
  - 0.12557080642944984
  - 0.1379648154468814
  - 0.09273615001547257
  - 0.1253221703211895
  - 0.10566545317609945
  train_ndgc:
  - 0.973165610159091
  - 0.9802325849938434
  - 0.972709471781807
  - 0.970466375007036
  - 0.9747160930870999
  train_ndgc_oob:
  - 0.785200495243935
  - 0.7829042521968342
  - 0.7783060050479494
  - 0.7827098600673443
  - 0.7839688000055316
  train_neg_coverage_error:
  - -1.1180722891566266
  - -1.0990338164251208
  - -1.1204819277108433
  - -1.125
  - -1.1105769230769231
  train_neg_coverage_error_oob:
  - -1.7566265060240964
  - -1.7777777777777777
  - -1.7759036144578313
  - -1.7668269230769231
  - -1.7548076923076923
  train_neg_hamming_loss_macro:
  - -0.10903614457831326
  - -0.11050724637681159
  - -0.1108433734939759
  - -0.11177884615384616
  - -0.10456730769230768
  train_neg_hamming_loss_macro_oob:
  - -0.2385542168674699
  - -0.23792270531400966
  - -0.24397590361445784
  - -0.23858173076923078
  - -0.24098557692307693
  train_neg_hamming_loss_micro:
  - -0.10903614457831326
  - -0.1105072463768116
  - -0.1108433734939759
  - -0.11177884615384616
  - -0.1045673076923077
  train_neg_hamming_loss_micro_oob:
  - -0.2385542168674699
  - -0.23792270531400966
  - -0.24397590361445784
  - -0.23858173076923078
  - -0.24098557692307693
  train_neg_hamming_loss_samples:
  - -0.10903614457831326
  - -0.1105072463768116
  - -0.1108433734939759
  - -0.11177884615384616
  - -0.1045673076923077
  train_neg_hamming_loss_samples_oob:
  - -0.2385542168674699
  - -0.23792270531400966
  - -0.24397590361445784
  - -0.23858173076923078
  - -0.24098557692307693
  train_neg_hamming_loss_weighted:
  - -0.11557638669235414
  - -0.11768139056468575
  - -0.11901193289906035
  - -0.11939485037635396
  - -0.11043890320206108
  train_neg_hamming_loss_weighted_oob:
  - -0.3109296374040314
  - -0.30854309687261633
  - -0.3179108779616072
  - -0.30970603084266574
  - -0.3126725248435775
  train_neg_label_ranking_loss:
  - -0.0357429718875502
  - -0.02938808373590982
  - -0.03755020080321285
  - -0.03866185897435897
  - -0.035056089743589744
  train_neg_label_ranking_loss_oob:
  - -0.24819277108433735
  - -0.25583735909822863
  - -0.25582329317269076
  - -0.25260416666666663
  - -0.24939903846153846
  train_precision_macro:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_precision_macro_oob:
  - 0.7614457831325301
  - 0.7620772946859903
  - 0.7560240963855421
  - 0.7614182692307692
  - 0.7590144230769231
  train_precision_micro:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_precision_micro_oob:
  - 0.7614457831325301
  - 0.7620772946859904
  - 0.7560240963855421
  - 0.7614182692307693
  - 0.7590144230769231
  train_precision_samples:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_precision_samples_oob:
  - 0.7614457831325301
  - 0.7620772946859904
  - 0.7560240963855421
  - 0.7614182692307693
  - 0.7590144230769231
  train_precision_weighted:
  - 0.8844236133076459
  - 0.8823186094353143
  - 0.8809880671009395
  - 0.8806051496236461
  - 0.889561096797939
  train_precision_weighted_oob:
  - 0.6890703625959685
  - 0.6914569031273837
  - 0.6820891220383928
  - 0.6902939691573343
  - 0.6873274751564226
  train_recall_macro:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_recall_macro_oob:
  - 0.7614457831325301
  - 0.7620772946859903
  - 0.7560240963855421
  - 0.7614182692307692
  - 0.7590144230769231
  train_recall_micro:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_recall_micro_oob:
  - 0.7614457831325301
  - 0.7620772946859904
  - 0.7560240963855421
  - 0.7614182692307693
  - 0.7590144230769231
  train_recall_samples:
  - 0.8909638554216868
  - 0.8894927536231884
  - 0.8891566265060241
  - 0.8882211538461539
  - 0.8954326923076923
  train_recall_samples_oob:
  - 0.7614457831325301
  - 0.7620772946859904
  - 0.7560240963855421
  - 0.7614182692307693
  - 0.7590144230769231
  train_recall_weighted:
  - 0.8844236133076459
  - 0.8823186094353143
  - 0.8809880671009395
  - 0.8806051496236461
  - 0.889561096797939
  train_recall_weighted_oob:
  - 0.6890703625959685
  - 0.6914569031273837
  - 0.6820891220383928
  - 0.6902939691573343
  - 0.6873274751564226
  train_roc_auc_macro:
  - 0.9952091550516222
  - 0.9981019904412194
  - 0.9968921501249789
  - 0.9957912207921606
  - 0.9977988728151053
  train_roc_auc_macro_oob:
  - 0.6860871491164869
  - 0.6496804388125559
  - 0.6374159066111109
  - 0.6528524044368514
  - 0.6649003278197558
  train_roc_auc_micro:
  - 0.9788068364299328
  - 0.9793442889055507
  - 0.9766717518433766
  - 0.9775694664097919
  - 0.9787069819594953
  train_roc_auc_micro_oob:
  - 0.7689560539944882
  - 0.7637009066946998
  - 0.7564161831896385
  - 0.7691673615703867
  - 0.773024875774728
  train_roc_auc_samples:
  - 0.9642570281124497
  - 0.9706119162640903
  - 0.9624497991967871
  - 0.961338141025641
  - 0.9649439102564101
  train_roc_auc_samples_oob:
  - 0.7518072289156627
  - 0.7441626409017713
  - 0.7441767068273093
  - 0.7473958333333334
  - 0.7506009615384616
  train_roc_auc_weighted:
  - 0.9940465920537676
  - 0.9976585167444053
  - 0.9959942534302337
  - 0.9945819734344112
  - 0.9970721848928195
  train_roc_auc_weighted_oob:
  - 0.6595353885573362
  - 0.6572107539163673
  - 0.6432512450652175
  - 0.6678806773326057
  - 0.6796366427716203
start: 2023-12-21 19:30:41.670551
wrapper: null
