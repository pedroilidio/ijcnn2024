active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv2hmZmZmZvY/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z8zMzMzMzMLwDQzMzMzM+M/mpmZmZmZ+T80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j+AMzMzMzMLQACZmZmZmfm/AJmZmZmZ+b8AmZmZmZn5vw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:54:37.132953
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 27f58f825db5c1e4a44fb1ef66a62ef68e845f8991223d9cebdc78f3cf4e3244
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/27f58f8_20231212T155259969264_embedding_proba_weak__7_Gram_negative.yml
results:
  fit_time:
  - 45.75481700897217
  - 47.52001690864563
  - 53.86514067649841
  - 52.405832290649414
  - 51.156967639923096
  score_time:
  - 10.079165935516357
  - 9.67890477180481
  - 10.081685304641724
  - 10.397590160369873
  - 10.737842559814453
  test_average_precision_macro:
  - 0.6773336718885514
  - 0.7127526142180274
  - 0.745769404707797
  - 0.6783357027895683
  - 0.7595864838981636
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9129614810675515
  - 0.9187021163511593
  - 0.938618398998084
  - 0.9204839655520928
  - 0.9506411510939308
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9549939831528278
  - 0.9624242424242423
  - 0.9568792517006802
  - 0.9666666666666666
  - 0.9789030612244899
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9425114449550712
  - 0.9473740211945815
  - 0.9782267174436661
  - 0.9594461676524494
  - 0.9760095158910809
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285716
  - 0.9598214285714286
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285715
  - 0.9598214285714286
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285715
  - 0.9598214285714286
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9690969766893696
  - 0.9660277349768875
  - 0.9824619538537065
  - 0.9713173504695997
  - 0.980652709359606
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9143998627934861
  - 0.906908971851401
  - 0.9293689343324486
  - 0.9224487401159522
  - 0.9249837777192698
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9128182995252482
  - 0.9047619047619048
  - 0.927710843373494
  - 0.9210977701543739
  - 0.9227467811158798
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9255369580279325
  - 0.9172819100091827
  - 0.9380808080808082
  - 0.9326118326118328
  - 0.9332034632034633
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9403733900038815
  - 0.9348845908781183
  - 0.9657840206961094
  - 0.9446917195918713
  - 0.9624376271550077
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9549939831528278
  - 0.9624242424242427
  - 0.9568792517006802
  - 0.9666666666666666
  - 0.9789030612244899
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6936708363931738
  - 0.7038868965435934
  - 0.7030160226413795
  - 0.6778584491981622
  - 0.7137128055608498
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8216065297284054
  - 0.8089399523400037
  - 0.8511294178179762
  - 0.8371339525980952
  - 0.8458512330787273
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8726633657670988
  - 0.8642236898547591
  - 0.8934539257199118
  - 0.8826154127679612
  - 0.8950212306761012
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9021499186741059
  - 0.8912160134823188
  - 0.9357934530129525
  - 0.9111878095844267
  - 0.9351441769164992
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9671347170960826
  - 0.97337242493855
  - 0.9690110508546178
  - 0.9752951939668849
  - 0.985013751301925
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1768953068592058
  - -1.2254545454545454
  - -1.1785714285714286
  - -1.125
  - -1.1142857142857143
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04557761732851985
  - -0.05
  - -0.0375
  - -0.04107142857142857
  - -0.04017857142857143
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04557761732851986
  - -0.05
  - -0.0375
  - -0.04107142857142857
  - -0.04017857142857143
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04557761732851986
  - -0.05
  - -0.0375
  - -0.04107142857142857
  - -0.04017857142857143
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.03090302331063059
  - -0.03397226502311248
  - -0.01753804614629357
  - -0.028682649530400395
  - -0.019347290640394088
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.01684717208182912
  - -0.01792207792207792
  - -0.017857142857142856
  - -0.013052721088435372
  - -0.009311224489795917
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285716
  - 0.9598214285714286
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285715
  - 0.9598214285714286
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285715
  - 0.9598214285714286
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9690969766893696
  - 0.9660277349768875
  - 0.9824619538537065
  - 0.9713173504695997
  - 0.980652709359606
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285716
  - 0.9598214285714286
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285715
  - 0.9598214285714286
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9544223826714802
  - 0.95
  - 0.9625
  - 0.9589285714285715
  - 0.9598214285714286
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9690969766893696
  - 0.9660277349768875
  - 0.9824619538537065
  - 0.9713173504695997
  - 0.980652709359606
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9760866584895318
  - 0.972118704484513
  - 0.9851757152365479
  - .nan
  - 0.9853788262326031
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9843995180077655
  - 0.9825187953200765
  - 0.988026285397922
  - 0.9877518227721034
  - 0.9911485411140584
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.983152827918171
  - 0.982077922077922
  - 0.9821428571428571
  - 0.9869472789115645
  - 0.9906887755102042
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9871831299877315
  - 0.9875266194146654
  - 0.9931740556721164
  - .nan
  - 0.9942186371547911
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7379863281480006
  - 0.7471044180857634
  - 0.7307203750760877
  - 0.6923010987352862
  - 0.75258687961914
  train_average_precision_macro_oob:
  - 0.7255947447505624
  - 0.7235139462946694
  - 0.7182951252479637
  - 0.6772106000516644
  - 0.7369320210571987
  train_average_precision_micro:
  - 0.9381688918915538
  - 0.9387118580262669
  - 0.9382523955317129
  - 0.9305902860249683
  - 0.9410439926876473
  train_average_precision_micro_oob:
  - 0.9320011906848223
  - 0.9316012819513666
  - 0.9328464097651518
  - 0.9228173328067113
  - 0.9366666554801535
  train_average_precision_samples:
  - 0.97406576980568
  - 0.9783945091017606
  - 0.9578087529976018
  - 0.9780425659472421
  - 0.9800659472422062
  train_average_precision_samples_oob:
  - 0.968490284005979
  - 0.9724122863111225
  - 0.9539054470709147
  - 0.9703034001370331
  - 0.9773392000685166
  train_average_precision_weighted:
  - 0.97689979433646
  - 0.9769801819229685
  - 0.9686489795456855
  - 0.9636258508592133
  - 0.974919185751449
  train_average_precision_weighted_oob:
  - 0.9719643760212627
  - 0.9687956139107402
  - 0.9618291311740971
  - 0.955804490508514
  - 0.9688796796510031
  train_f1_macro:
  - 0.9619955156950672
  - 0.9590420769919428
  - 0.9606564748201439
  - 0.9598696043165467
  - 0.9580710431654675
  train_f1_macro_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.959419964028777
  - 0.9596447841726619
  - 0.9579586330935252
  train_f1_micro:
  - 0.9619955156950672
  - 0.9590420769919427
  - 0.9606564748201439
  - 0.9598696043165468
  - 0.9580710431654677
  train_f1_micro_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.9594199640287769
  - 0.9596447841726619
  - 0.9579586330935251
  train_f1_samples:
  - 0.9619955156950672
  - 0.9590420769919427
  - 0.9606564748201439
  - 0.9598696043165468
  - 0.9580710431654677
  train_f1_samples_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.9594199640287769
  - 0.9596447841726619
  - 0.9579586330935251
  train_f1_weighted:
  - 0.9829527127157951
  - 0.9818558538968273
  - 0.9814995214129127
  - 0.9809548248290827
  - 0.9815955983069462
  train_f1_weighted_oob:
  - 0.9802682884582075
  - 0.9800915612370713
  - 0.9785307376416463
  - 0.9786854321170312
  - 0.979878018682824
  train_jaccard_macro:
  - 0.9285874744459655
  - 0.9234194049714809
  - 0.9262769741816148
  - 0.9247381563381709
  - 0.9217895145833358
  train_jaccard_macro_oob:
  - 0.9281251992087265
  - 0.9226609880499979
  - 0.9238559645083613
  - 0.9241653443087163
  - 0.9213580916638767
  train_jaccard_micro:
  - 0.9267739496705908
  - 0.9213072457536013
  - 0.9242915855505083
  - 0.9228358370258295
  - 0.9195166684647751
  train_jaccard_micro_oob:
  - 0.9265658747300216
  - 0.9206878022568512
  - 0.9220049692124879
  - 0.9224203133441383
  - 0.919309600862999
  train_jaccard_samples:
  - 0.9371218915613535
  - 0.932651492544062
  - 0.9345069399026235
  - 0.9342198968098249
  - 0.9301140905457452
  train_jaccard_samples_oob:
  - 0.9369407075236671
  - 0.9319244368483403
  - 0.932850083569508
  - 0.9340999927330862
  - 0.9300414214083279
  train_jaccard_weighted:
  - 0.9667576458236407
  - 0.9646846601644008
  - 0.9639558916331108
  - 0.9629584207927949
  - 0.964170981011843
  train_jaccard_weighted_oob:
  - 0.961565404195134
  - 0.961258174941687
  - 0.9582615893412988
  - 0.9585662848782924
  - 0.9608245767167424
  train_label_ranking_average_precision_score:
  - 0.97406576980568
  - 0.9783945091017607
  - 0.9578087529976018
  - 0.9780425659472424
  - 0.9800659472422064
  train_label_ranking_average_precision_score_oob:
  - 0.9684902840059794
  - 0.9724122863111228
  - 0.953905447070915
  - 0.9703034001370333
  - 0.9773392000685167
  train_matthews_corrcoef_macro:
  - 0.7198477816103168
  - 0.7027471104275267
  - 0.7217357611780124
  - 0.7150279058897788
  - 0.7125902757439115
  train_matthews_corrcoef_macro_oob:
  - 0.7175309503319954
  - 0.7014549413962939
  - 0.7136344044767604
  - 0.7138675512697731
  - 0.7091502703711309
  train_matthews_corrcoef_micro:
  - 0.8518250558871902
  - 0.8425737282863938
  - 0.8481544987209348
  - 0.845072866319098
  - 0.8394838844039595
  train_matthews_corrcoef_micro_oob:
  - 0.8496409931031057
  - 0.8401290129460104
  - 0.8417297784329478
  - 0.8424623822608917
  - 0.8365815778800691
  train_matthews_corrcoef_samples:
  - 0.8996489673503681
  - 0.8939983922580554
  - 0.8962571950054457
  - 0.8985157072183619
  - 0.8880371829816576
  train_matthews_corrcoef_samples_oob:
  - 0.8946885730601877
  - 0.89028021221826
  - 0.889063136943005
  - 0.8942736251030744
  - 0.8836351822421331
  train_matthews_corrcoef_weighted:
  - 0.935835455233992
  - 0.934761545490432
  - 0.9326956335996747
  - 0.9297673590401979
  - 0.9312440527508653
  train_matthews_corrcoef_weighted_oob:
  - 0.928651368860916
  - 0.9302589773288837
  - 0.9247013368827937
  - 0.9243095977325312
  - 0.925780924065276
  train_ndgc:
  - 0.9812343349141149
  - 0.9845342053829449
  - 0.9691010905432336
  - 0.9845075298894728
  - 0.985795867462165
  train_ndgc_oob:
  - 0.9772408927149828
  - 0.9800245256056834
  - 0.9664933976664465
  - 0.9788703218677707
  - 0.9838540685147236
  train_neg_coverage_error:
  - -1.1130044843049327
  - -1.109221128021486
  - -1.1537769784172662
  - -1.118705035971223
  - -1.1088129496402879
  train_neg_coverage_error_oob:
  - -1.1363228699551569
  - -1.1414503133393017
  - -1.1825539568345325
  - -1.1573741007194245
  - -1.131294964028777
  train_neg_hamming_loss_macro:
  - -0.03800448430493274
  - -0.0409579230080573
  - -0.03934352517985611
  - -0.04013039568345324
  - -0.04192895683453237
  train_neg_hamming_loss_macro_oob:
  - -0.03811659192825112
  - -0.04129364368845121
  - -0.04058003597122302
  - -0.04035521582733813
  - -0.04204136690647482
  train_neg_hamming_loss_micro:
  - -0.03800448430493274
  - -0.0409579230080573
  - -0.03934352517985611
  - -0.04013039568345324
  - -0.04192895683453238
  train_neg_hamming_loss_micro_oob:
  - -0.03811659192825112
  - -0.04129364368845121
  - -0.04058003597122302
  - -0.04035521582733813
  - -0.04204136690647482
  train_neg_hamming_loss_samples:
  - -0.03800448430493274
  - -0.0409579230080573
  - -0.03934352517985611
  - -0.04013039568345324
  - -0.04192895683453238
  train_neg_hamming_loss_samples_oob:
  - -0.03811659192825112
  - -0.04129364368845121
  - -0.04058003597122302
  - -0.04035521582733813
  - -0.04204136690647482
  train_neg_hamming_loss_weighted:
  - -0.017047287284204852
  - -0.018144146103172564
  - -0.018500478587087414
  - -0.01904517517091725
  - -0.01840440169305379
  train_neg_hamming_loss_weighted_oob:
  - -0.019731711541792568
  - -0.019908438762928575
  - -0.02146926235835366
  - -0.02131456788296869
  - -0.020121981317176102
  train_neg_label_ranking_loss:
  - -0.008957932948964338
  - -0.008803342285884811
  - -0.014516957862281599
  - -0.008500342583076395
  - -0.007590356286399451
  train_neg_label_ranking_loss_oob:
  - -0.011936792654281441
  - -0.0130771198362962
  - -0.017932082905104486
  - -0.01375685166152792
  - -0.010213257965056526
  train_precision_macro:
  - 0.9619955156950672
  - 0.9590420769919428
  - 0.9606564748201439
  - 0.9598696043165467
  - 0.9580710431654675
  train_precision_macro_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.959419964028777
  - 0.9596447841726619
  - 0.9579586330935252
  train_precision_micro:
  - 0.9619955156950672
  - 0.9590420769919427
  - 0.9606564748201439
  - 0.9598696043165468
  - 0.9580710431654677
  train_precision_micro_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.9594199640287769
  - 0.9596447841726619
  - 0.9579586330935251
  train_precision_samples:
  - 0.9619955156950672
  - 0.9590420769919427
  - 0.9606564748201439
  - 0.9598696043165468
  - 0.9580710431654677
  train_precision_samples_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.9594199640287769
  - 0.9596447841726619
  - 0.9579586330935251
  train_precision_weighted:
  - 0.9829527127157951
  - 0.9818558538968273
  - 0.9814995214129127
  - 0.9809548248290827
  - 0.9815955983069462
  train_precision_weighted_oob:
  - 0.9802682884582075
  - 0.9800915612370713
  - 0.9785307376416463
  - 0.9786854321170312
  - 0.979878018682824
  train_recall_macro:
  - 0.9619955156950672
  - 0.9590420769919428
  - 0.9606564748201439
  - 0.9598696043165467
  - 0.9580710431654675
  train_recall_macro_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.959419964028777
  - 0.9596447841726619
  - 0.9579586330935252
  train_recall_micro:
  - 0.9619955156950672
  - 0.9590420769919427
  - 0.9606564748201439
  - 0.9598696043165468
  - 0.9580710431654677
  train_recall_micro_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.9594199640287769
  - 0.9596447841726619
  - 0.9579586330935251
  train_recall_samples:
  - 0.9619955156950672
  - 0.9590420769919427
  - 0.9606564748201439
  - 0.9598696043165468
  - 0.9580710431654677
  train_recall_samples_oob:
  - 0.9618834080717489
  - 0.9587063563115488
  - 0.9594199640287769
  - 0.9596447841726619
  - 0.9579586330935251
  train_recall_weighted:
  - 0.9829527127157951
  - 0.9818558538968273
  - 0.9814995214129127
  - 0.9809548248290827
  - 0.9815955983069462
  train_recall_weighted_oob:
  - 0.9802682884582075
  - 0.9800915612370713
  - 0.9785307376416463
  - 0.9786854321170312
  - 0.979878018682824
  train_roc_auc_macro:
  - 0.9859574129324953
  - 0.9870117983586154
  - 0.9850558505043983
  - 0.9857250430066127
  - 0.9868775182478116
  train_roc_auc_macro_oob:
  - 0.9841910415229502
  - 0.9856745677289368
  - 0.9819674067718409
  - 0.9836732620810706
  - 0.9836042624832784
  train_roc_auc_micro:
  - 0.991380280754767
  - 0.9907258129287593
  - 0.991177595578361
  - 0.989868447471286
  - 0.9915421638089996
  train_roc_auc_micro_oob:
  - 0.9898488860848462
  - 0.988696405970017
  - 0.9886299680845689
  - 0.98752763798259
  - 0.9894173865383804
  train_roc_auc_samples:
  - 0.9910420670510355
  - 0.991196657714115
  - 0.9854830421377186
  - 0.9914996574169238
  - 0.9924096437136006
  train_roc_auc_samples_oob:
  - 0.9880632073457185
  - 0.9869228801637038
  - 0.9821053871188764
  - 0.9863073826652964
  - 0.9897867420349434
  train_roc_auc_weighted:
  - 0.9978895624703503
  - 0.9973740412220458
  - 0.9968563390039847
  - 0.9969530095788609
  - 0.997137697272607
  train_roc_auc_weighted_oob:
  - 0.9958670572291819
  - 0.9943993753089241
  - 0.9933287605901066
  - 0.9934288555160604
  - 0.9939591950208837
start: 2023-12-12 15:52:59.969264
wrapper: null
