active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0BAZmZmZmYawMCZmZmZmRlAgMzMzMzMDMAAZ2ZmZmb2Pw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 16:30:37.828028
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__3
  params: {}
hash: 3190e288265600567e5f28149a02559f09d48c563ec74b585c9dc8660073f8ca
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3190e28_20231222T162639616438_embedding_weak__3_scene.yml
results:
  fit_time:
  - 139.18237686157227
  - 168.9887249469757
  - 170.2040090560913
  - 163.89672327041626
  - 168.4268081188202
  score_time:
  - 12.202095031738281
  - 9.823420286178589
  - 9.092828512191772
  - 9.923664569854736
  - 9.79175329208374
  test_average_precision_macro:
  - 0.8434824340573477
  - 0.8408860399113488
  - 0.8252531372295929
  - 0.8394633454073911
  - 0.8529584113183555
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8498100954456725
  - 0.8413763576136928
  - 0.8343662020383467
  - 0.8467502666789314
  - 0.8580417041561034
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8685977731384829
  - 0.8829234972677595
  - 0.8719649122807018
  - 0.8737457044673539
  - 0.8791319444444444
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8322001145849193
  - 0.8298345672471084
  - 0.8146936490326683
  - 0.8295692931472248
  - 0.8433037789148691
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9008350730688935
  - 0.9030054644808744
  - 0.9007017543859649
  - 0.9027491408934708
  - 0.9041666666666667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9008350730688935
  - 0.9030054644808743
  - 0.9007017543859649
  - 0.9027491408934708
  - 0.9041666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9008350730688935
  - 0.9030054644808744
  - 0.900701754385965
  - 0.9027491408934708
  - 0.9041666666666667
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8952264332744498
  - 0.898108876604397
  - 0.895378640776699
  - 0.8974336477297652
  - 0.8987024500322373
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8236120005756038
  - 0.8262896283746829
  - 0.8231402140545564
  - 0.8260910151543799
  - 0.8285526887346873
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8195631528964862
  - 0.8231631382316313
  - 0.8193424832428982
  - 0.8227372377074851
  - 0.8250950570342205
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8358186698478972
  - 0.8399199843871973
  - 0.8358395989974936
  - 0.8388316151202747
  - 0.842063492063492
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8145221044579957
  - 0.8184682584852617
  - 0.8146260149543436
  - 0.8175517567693347
  - 0.819823093835653
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8685977731384827
  - 0.8829234972677594
  - 0.8719649122807014
  - 0.8737457044673538
  - 0.8791319444444446
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6299105533360613
  - 0.6329076212848065
  - 0.6288255845584422
  - 0.6331671884721127
  - 0.6446761518634893
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6305561193798721
  - 0.6298252186166411
  - 0.6294163032843305
  - 0.6319857112459084
  - 0.6416529529261661
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5076434974952835
  - 0.5104238380748056
  - 0.5058559287846467
  - 0.5021405148091848
  - 0.5273601726555347
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6112581570192108
  - 0.616620288690648
  - 0.6120815213223891
  - 0.6149794113825834
  - 0.6268641235458293
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9034000397465256
  - 0.9138564637505575
  - 0.9058256572198085
  - 0.906650979262228
  - 0.9113516493060906
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4697286012526096
  - -1.3790983606557377
  - -1.471578947368421
  - -1.420618556701031
  - -1.43125
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09916492693110647
  - -0.09699453551912568
  - -0.0992982456140351
  - -0.09725085910652921
  - -0.09583333333333334
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09916492693110647
  - -0.09699453551912568
  - -0.0992982456140351
  - -0.09725085910652921
  - -0.09583333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09916492693110647
  - -0.09699453551912568
  - -0.09929824561403508
  - -0.09725085910652922
  - -0.09583333333333334
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10477356672555005
  - -0.10189112339560301
  - -0.10462135922330097
  - -0.10256635227023471
  - -0.10129754996776275
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07463465553235908
  - -0.06244877049180328
  - -0.07521052631578948
  - -0.06953608247422681
  - -0.06776041666666667
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9008350730688935
  - 0.9030054644808744
  - 0.9007017543859649
  - 0.9027491408934708
  - 0.9041666666666667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9008350730688935
  - 0.9030054644808743
  - 0.9007017543859649
  - 0.9027491408934708
  - 0.9041666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9008350730688935
  - 0.9030054644808744
  - 0.900701754385965
  - 0.9027491408934708
  - 0.9041666666666667
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8952264332744498
  - 0.898108876604397
  - 0.895378640776699
  - 0.8974336477297652
  - 0.8987024500322373
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9008350730688935
  - 0.9030054644808744
  - 0.9007017543859649
  - 0.9027491408934708
  - 0.9041666666666667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9008350730688935
  - 0.9030054644808743
  - 0.9007017543859649
  - 0.9027491408934708
  - 0.9041666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9008350730688935
  - 0.9030054644808744
  - 0.900701754385965
  - 0.9027491408934708
  - 0.9041666666666667
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8952264332744498
  - 0.898108876604397
  - 0.895378640776699
  - 0.8974336477297652
  - 0.8987024500322373
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9410428921603994
  - 0.9441999454348703
  - 0.9375667364671939
  - 0.947678333355915
  - 0.9501807955514431
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9486602182863866
  - 0.9513712124133852
  - 0.9460260701440719
  - 0.9537699010896546
  - 0.9557663233390987
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.925365344467641
  - 0.9375512295081967
  - 0.9247894736842106
  - 0.9304639175257732
  - 0.9322395833333333
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.935988575577263
  - 0.9382822386028254
  - 0.9319374676799658
  - 0.9437143806640338
  - 0.9450447061803015
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9943232783831336
  - 0.9944523359621495
  - 0.9943132754490803
  - 0.9944431641267105
  - 0.9940176241487793
  train_average_precision_macro_oob:
  - 0.8607664575298511
  - 0.8572729433298542
  - 0.8585650484131074
  - 0.8593041572445278
  - 0.8571051284810444
  train_average_precision_micro:
  - 0.9936755625008717
  - 0.9940298209352433
  - 0.9938518489858819
  - 0.9940022118160532
  - 0.9935050785958286
  train_average_precision_micro_oob:
  - 0.8656662755450133
  - 0.8618486946289655
  - 0.8643816951330624
  - 0.8661525987312793
  - 0.8624859976747435
  train_average_precision_samples:
  - 0.9873789764868602
  - 0.9884488448844885
  - 0.9889579020013802
  - 0.9882067291016303
  - 0.9863345441965057
  train_average_precision_samples_oob:
  - 0.8875778008298755
  - 0.876741358346361
  - 0.8858307453416149
  - 0.8870577523413111
  - 0.8852188202733091
  train_average_precision_weighted:
  - 0.9942524078024658
  - 0.994382035972931
  - 0.9942759024176271
  - 0.9943540531801683
  - 0.9939249075380527
  train_average_precision_weighted_oob:
  - 0.8519762728590643
  - 0.8484133114895273
  - 0.8498200142774975
  - 0.8496706958745973
  - 0.8480752334284877
  train_f1_macro:
  - 0.9562586445366529
  - 0.955271842973771
  - 0.9569530710835058
  - 0.9550815123135622
  - 0.9548521017125066
  train_f1_macro_oob:
  - 0.8998962655601659
  - 0.8981240229286086
  - 0.8991545893719807
  - 0.8987166146375304
  - 0.8952603355820793
  train_f1_micro:
  - 0.9562586445366529
  - 0.9552718429737711
  - 0.9569530710835059
  - 0.9550815123135623
  - 0.9548521017125065
  train_f1_micro_oob:
  - 0.899896265560166
  - 0.8981240229286086
  - 0.8991545893719807
  - 0.8987166146375304
  - 0.8952603355820792
  train_f1_samples:
  - 0.9562586445366529
  - 0.9552718429737712
  - 0.9569530710835059
  - 0.9550815123135623
  - 0.9548521017125065
  train_f1_samples_oob:
  - 0.8998962655601661
  - 0.8981240229286086
  - 0.8991545893719808
  - 0.8987166146375304
  - 0.8952603355820794
  train_f1_weighted:
  - 0.9544738930806869
  - 0.9537063039569456
  - 0.9550697132455167
  - 0.953055529278214
  - 0.9530797212371482
  train_f1_weighted_oob:
  - 0.8944880090020394
  - 0.8927126184165821
  - 0.893897840589712
  - 0.8931616405380437
  - 0.8898200668701612
  train_jaccard_macro:
  - 0.9166577429051496
  - 0.9147850900587317
  - 0.917949220305808
  - 0.9145825754926801
  - 0.9140787220589033
  train_jaccard_macro_oob:
  - 0.8216183156944258
  - 0.8187507586801593
  - 0.8203537790959817
  - 0.8198977956752885
  - 0.814173763334987
  train_jaccard_micro:
  - 0.916183534868312
  - 0.9143735971402444
  - 0.9174592672235548
  - 0.9140248962655602
  - 0.913604766633565
  train_jaccard_micro_oob:
  - 0.818010372465818
  - 0.8150863088200521
  - 0.8167855183763028
  - 0.8160629921259842
  - 0.8103812729977296
  train_jaccard_samples:
  - 0.9262250543370875
  - 0.9248740663540038
  - 0.9274253179532682
  - 0.924545364451712
  - 0.92418513850792
  train_jaccard_samples_oob:
  - 0.832913455838767
  - 0.829673192883198
  - 0.8315340629005223
  - 0.8305956097319259
  - 0.8250302715793114
  train_jaccard_weighted:
  - 0.9134138812740435
  - 0.9119277590734246
  - 0.9145254255259274
  - 0.9109285085213811
  - 0.9108602701913291
  train_jaccard_weighted_oob:
  - 0.8130183886599713
  - 0.8101275818250789
  - 0.8119579776143367
  - 0.8110626779471971
  - 0.8055253574245086
  train_label_ranking_average_precision_score:
  - 0.98737897648686
  - 0.9884488448844881
  - 0.9889579020013802
  - 0.9882067291016301
  - 0.9863345441965056
  train_label_ranking_average_precision_score_oob:
  - 0.8875778008298753
  - 0.876741358346361
  - 0.8858307453416152
  - 0.887057752341311
  - 0.885218820273309
  train_matthews_corrcoef_macro:
  - 0.8494403593176169
  - 0.8461653187954635
  - 0.8523653853273787
  - 0.8462455406101252
  - 0.8445249664904569
  train_matthews_corrcoef_macro_oob:
  - 0.6216379119776702
  - 0.6166898427943057
  - 0.6181796897000039
  - 0.617082676283405
  - 0.5982566738863818
  train_matthews_corrcoef_micro:
  - 0.8465405588645284
  - 0.8438492850907744
  - 0.8491068349071034
  - 0.8428180154898984
  - 0.8416619510581286
  train_matthews_corrcoef_micro_oob:
  - 0.6225172545488328
  - 0.6178527882607187
  - 0.6194098149149148
  - 0.6194626711152998
  - 0.6026502920731025
  train_matthews_corrcoef_samples:
  - 0.7827488895502835
  - 0.7813038882670031
  - 0.788940539618322
  - 0.7824046856611074
  - 0.7766969241619842
  train_matthews_corrcoef_samples_oob:
  - 0.4769001865601854
  - 0.4670859624845092
  - 0.47154606679583544
  - 0.4706908346180581
  - 0.4510414235483595
  train_matthews_corrcoef_weighted:
  - 0.8450885575629993
  - 0.8425456043651316
  - 0.8476164402431364
  - 0.8412188139994852
  - 0.8402168200293783
  train_matthews_corrcoef_weighted_oob:
  - 0.6034722628533391
  - 0.5989715930633197
  - 0.6007884910227187
  - 0.5983870919693519
  - 0.579702408680446
  train_ndgc:
  - 0.9908335894685795
  - 0.9915173161843666
  - 0.9919562017217327
  - 0.9914486457281789
  - 0.9900323810463872
  train_ndgc_oob:
  - 0.9171646332747359
  - 0.909108445668968
  - 0.9158238160623038
  - 0.9170223929854913
  - 0.9155062973199095
  train_neg_coverage_error:
  - -1.1016597510373445
  - -1.1047420531526837
  - -1.0993788819875776
  - -1.103537981269511
  - -1.1053450960041515
  train_neg_coverage_error_oob:
  - -1.396265560165975
  - -1.4366857738405419
  - -1.406832298136646
  - -1.4105098855359002
  - -1.408406850025947
  train_neg_hamming_loss_macro:
  - -0.04374135546334717
  - -0.04472815702622893
  - -0.043046928916494136
  - -0.04491848768643774
  - -0.045147898287493514
  train_neg_hamming_loss_macro_oob:
  - -0.10010373443983402
  - -0.10187597707139136
  - -0.10084541062801933
  - -0.10128338536246966
  - -0.10473966441792078
  train_neg_hamming_loss_micro:
  - -0.04374135546334716
  - -0.04472815702622894
  - -0.043046928916494136
  - -0.04491848768643774
  - -0.045147898287493514
  train_neg_hamming_loss_micro_oob:
  - -0.10010373443983403
  - -0.10187597707139134
  - -0.10084541062801933
  - -0.10128338536246966
  - -0.10473966441792078
  train_neg_hamming_loss_samples:
  - -0.04374135546334716
  - -0.04472815702622893
  - -0.04304692891649413
  - -0.044918487686437726
  - -0.045147898287493514
  train_neg_hamming_loss_samples_oob:
  - -0.10010373443983403
  - -0.10187597707139134
  - -0.10084541062801931
  - -0.10128338536246964
  - -0.10473966441792078
  train_neg_hamming_loss_weighted:
  - -0.0455261069193132
  - -0.046293696043054486
  - -0.04493028675448336
  - -0.046944470721786015
  - -0.04692027876285183
  train_neg_hamming_loss_weighted_oob:
  - -0.10551199099796048
  - -0.10728738158341794
  - -0.10610215941028796
  - -0.10683835946195634
  - -0.11017993312983874
  train_neg_label_ranking_loss:
  - -0.005860995850622407
  - -0.005276185513288171
  - -0.00537008281573499
  - -0.005228928199791883
  - -0.006214322781525688
  train_neg_label_ranking_loss_oob:
  - -0.06326504149377593
  - -0.06967170401250651
  - -0.06523033126293996
  - -0.06462018730489075
  - -0.06491956408925792
  train_precision_macro:
  - 0.9562586445366529
  - 0.955271842973771
  - 0.9569530710835058
  - 0.9550815123135622
  - 0.9548521017125066
  train_precision_macro_oob:
  - 0.8998962655601659
  - 0.8981240229286086
  - 0.8991545893719807
  - 0.8987166146375304
  - 0.8952603355820793
  train_precision_micro:
  - 0.9562586445366529
  - 0.9552718429737711
  - 0.9569530710835059
  - 0.9550815123135623
  - 0.9548521017125065
  train_precision_micro_oob:
  - 0.899896265560166
  - 0.8981240229286086
  - 0.8991545893719807
  - 0.8987166146375304
  - 0.8952603355820792
  train_precision_samples:
  - 0.9562586445366529
  - 0.9552718429737712
  - 0.9569530710835059
  - 0.9550815123135623
  - 0.9548521017125065
  train_precision_samples_oob:
  - 0.8998962655601661
  - 0.8981240229286086
  - 0.8991545893719808
  - 0.8987166146375304
  - 0.8952603355820794
  train_precision_weighted:
  - 0.9544738930806869
  - 0.9537063039569456
  - 0.9550697132455167
  - 0.953055529278214
  - 0.9530797212371482
  train_precision_weighted_oob:
  - 0.8944880090020394
  - 0.8927126184165821
  - 0.893897840589712
  - 0.8931616405380437
  - 0.8898200668701612
  train_recall_macro:
  - 0.9562586445366529
  - 0.955271842973771
  - 0.9569530710835058
  - 0.9550815123135622
  - 0.9548521017125066
  train_recall_macro_oob:
  - 0.8998962655601659
  - 0.8981240229286086
  - 0.8991545893719807
  - 0.8987166146375304
  - 0.8952603355820793
  train_recall_micro:
  - 0.9562586445366529
  - 0.9552718429737711
  - 0.9569530710835059
  - 0.9550815123135623
  - 0.9548521017125065
  train_recall_micro_oob:
  - 0.899896265560166
  - 0.8981240229286086
  - 0.8991545893719807
  - 0.8987166146375304
  - 0.8952603355820792
  train_recall_samples:
  - 0.9562586445366529
  - 0.9552718429737712
  - 0.9569530710835059
  - 0.9550815123135623
  - 0.9548521017125065
  train_recall_samples_oob:
  - 0.8998962655601661
  - 0.8981240229286086
  - 0.8991545893719808
  - 0.8987166146375304
  - 0.8952603355820794
  train_recall_weighted:
  - 0.9544738930806869
  - 0.9537063039569456
  - 0.9550697132455167
  - 0.953055529278214
  - 0.9530797212371482
  train_recall_weighted_oob:
  - 0.8944880090020394
  - 0.8927126184165821
  - 0.893897840589712
  - 0.8931616405380437
  - 0.8898200668701612
  train_roc_auc_macro:
  - 0.9986485839377464
  - 0.998619628419903
  - 0.9986030995676215
  - 0.9986650581670037
  - 0.998548666406058
  train_roc_auc_macro_oob:
  - 0.9522205680524681
  - 0.9496432648926724
  - 0.9503015378315647
  - 0.9514305833881315
  - 0.9512960061004208
  train_roc_auc_micro:
  - 0.9985702743545495
  - 0.9986088470785942
  - 0.9985483147595143
  - 0.9986178919280392
  - 0.9984953593820224
  train_roc_auc_micro_oob:
  - 0.9573670503949434
  - 0.955033145777198
  - 0.9561486899902285
  - 0.9570858764803117
  - 0.9559527874471467
  train_roc_auc_samples:
  - 0.9941390041493775
  - 0.9947238144867119
  - 0.994629917184265
  - 0.9947710718002081
  - 0.9937856772184743
  train_roc_auc_samples_oob:
  - 0.9367349585062241
  - 0.9303282959874936
  - 0.93476966873706
  - 0.9353798126951094
  - 0.9350804359107421
  train_roc_auc_weighted:
  - 0.9986104913815671
  - 0.9985701658376315
  - 0.9985664009188437
  - 0.9986227344845913
  - 0.9985060572346787
  train_roc_auc_weighted_oob:
  - 0.9483159346524196
  - 0.9455286233426305
  - 0.9462265947325288
  - 0.9471202353160844
  - 0.9475041909515747
start: 2023-12-22 16:26:39.616438
wrapper: null
