active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gGZmZmZm9j/AzMzMzMwMwACamZmZmdk/AJqZmZmZ2T+AZmZmZmb2Pw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T9AMzMzMzMDQGBmZmZmZhbAgGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzMBMAAMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T9AMzMzMzMLQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZEcCgmZmZmZn5P2hmZmZmZhZAoJmZmZmZ+T+YmZmZmZkRwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            cGZmZmZmDkDgzMzMzMz8P8jMzMzMzBjAAJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCYmZmZmem/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ6T8AmJmZmZnJv4CZmZmZmQHAAJqZmZmZ6T8AmpmZmZnpPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmDkCAmZmZmZnJv2hmZmZmZgZAzMzMzMzMEMCYmZmZmZkBwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZGUAgMzMzMzMhwACcmZmZmdk/ADIzMzMz47+AMzMzMzMDQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 22:16:25.540448
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__1
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 1d2168906b8b9a7aea1f2290bbd7c003196818b2d79b02369323c3c5383c83f8
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1d21689_20231212T221420605240_embedding_proba__1_yeast.yml
results:
  fit_time:
  - 77.73939490318298
  - 76.51394391059875
  - 76.94658946990967
  - 77.482675075531
  - 75.81016135215759
  score_time:
  - 6.6527721881866455
  - 7.072261095046997
  - 6.927536249160767
  - 7.122421979904175
  - 6.735293388366699
  test_average_precision_macro:
  - 0.5148684388783562
  - 0.5246949595683653
  - 0.5290471937496405
  - 0.524411926982678
  - 0.5419010219943574
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7363144930168642
  - 0.7151788940396238
  - 0.7225835595503587
  - 0.7120160648592246
  - 0.738270941919783
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7681810744850451
  - 0.7601928070625442
  - 0.7708460053709577
  - 0.7513442293841865
  - 0.7814459060406862
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6873757624011133
  - 0.6892472753628649
  - 0.6835621965173903
  - 0.6732123330054361
  - 0.7074751415524181
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827568
  - 0.803866587957497
  - 0.8182358182358181
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827566
  - 0.8038665879574971
  - 0.8182358182358183
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827566
  - 0.803866587957497
  - 0.8182358182358183
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7602534595297583
  - 0.7556916523755083
  - 0.7649397932832166
  - 0.75703427190849
  - 0.7735828542280155
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6862321942150744
  - 0.6914860244141915
  - 0.6891438159905593
  - 0.6816628049381358
  - 0.7002745323532569
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6766256590509666
  - 0.681435371658733
  - 0.6797913302695318
  - 0.6720542874768661
  - 0.6923850213621513
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7018757206676215
  - 0.7068393002745114
  - 0.7040405238211135
  - 0.6956164677504518
  - 0.7189747849392486
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6172526327205141
  - 0.6125483293144224
  - 0.6229676529990408
  - 0.6134155058204309
  - 0.6347123034462823
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7681810744850449
  - 0.7601928070625439
  - 0.7708460053709575
  - 0.7513442293841868
  - 0.7814459060406856
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.21493297397485106
  - 0.22024925765847242
  - 0.2210289587467301
  - 0.20741602924238672
  - 0.2495377778225882
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5254174616161161
  - 0.5266523151373904
  - 0.529884337179545
  - 0.5125344727124401
  - 0.5528279403265637
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5311667451057861
  - 0.521468691177315
  - 0.5353449890092713
  - 0.5150780115936141
  - 0.5577288646474469
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.24523930409779435
  - 0.2345585949010809
  - 0.264621480815589
  - 0.23106679974009725
  - 0.27131713545297037
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8589939780008691
  - 0.8497616062398061
  - 0.862094361117091
  - 0.846285648159811
  - 0.8655053198216152
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -7.138364779874214
  - -6.920731707317073
  - -6.9523809523809526
  - -7.181818181818182
  - -6.958419958419959
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1928721174004193
  - -0.18945993031358885
  - -0.19062407571724344
  - -0.19613341204250295
  - -0.18176418176418177
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1928721174004193
  - -0.18945993031358885
  - -0.1906240757172434
  - -0.19613341204250295
  - -0.18176418176418177
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19287211740041926
  - -0.18945993031358885
  - -0.19062407571724338
  - -0.19613341204250292
  - -0.18176418176418174
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23974654047024166
  - -0.2443083476244919
  - -0.23506020671678346
  - -0.24296572809151004
  - -0.22641714577198446
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1645180835769335
  - -0.15975413354550985
  - -0.15537709111355963
  - -0.1758004023721261
  - -0.15657407800264941
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827568
  - 0.803866587957497
  - 0.8182358182358181
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827566
  - 0.8038665879574971
  - 0.8182358182358183
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827566
  - 0.803866587957497
  - 0.8182358182358183
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7602534595297583
  - 0.7556916523755083
  - 0.7649397932832166
  - 0.75703427190849
  - 0.7735828542280155
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827568
  - 0.803866587957497
  - 0.8182358182358181
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827566
  - 0.8038665879574971
  - 0.8182358182358183
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8071278825995807
  - 0.8105400696864111
  - 0.8093759242827566
  - 0.803866587957497
  - 0.8182358182358183
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7602534595297583
  - 0.7556916523755083
  - 0.7649397932832166
  - 0.75703427190849
  - 0.7735828542280155
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7251219042092367
  - 0.7129077730485401
  - 0.7283960925990545
  - 0.7179642850621291
  - 0.7257194701552312
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8501926119121241
  - 0.8484133885911674
  - 0.8512369713570471
  - 0.8427660254792078
  - 0.8532338759720959
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8354819164230665
  - 0.8402458664544901
  - 0.8446229088864403
  - 0.8241995976278739
  - 0.8434259219973506
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7252388659721632
  - 0.721206964350949
  - 0.7211149846271124
  - 0.7037016217490195
  - 0.7327520376120367
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9947211296275597
  - 0.9948912277329172
  - 0.9946631608051094
  - 0.994766576555648
  - 0.9951325832318236
  train_average_precision_macro_oob:
  - 0.919565317548032
  - 0.9180032687435856
  - 0.9113257259000792
  - 0.9014703728794048
  - 0.9163926528771972
  train_average_precision_micro:
  - 0.9828979837196252
  - 0.9823872365996551
  - 0.9822140725917858
  - 0.9815227558400691
  - 0.9829852941989441
  train_average_precision_micro_oob:
  - 0.9025626825395631
  - 0.904495115260259
  - 0.9027019624080641
  - 0.897806341431773
  - 0.9032720278890987
  train_average_precision_samples:
  - 0.9775107720376497
  - 0.9725095440222526
  - 0.9755398159402167
  - 0.9736265015223979
  - 0.9771697779255704
  train_average_precision_samples_oob:
  - 0.8917772513620199
  - 0.8958906536966299
  - 0.8897054940386211
  - 0.8887555677549683
  - 0.8938466227518426
  train_average_precision_weighted:
  - 0.9949642517728904
  - 0.9951326423995318
  - 0.9949192504913587
  - 0.9950706728207507
  - 0.9954095528579414
  train_average_precision_weighted_oob:
  - 0.9335453814332908
  - 0.9365570519959706
  - 0.9349341648375813
  - 0.9338171606035295
  - 0.9380072020783923
  train_f1_macro:
  - 0.9422312223858613
  - 0.9431910946196659
  - 0.9437139902496676
  - 0.9423915453403298
  - 0.9465023612750885
  train_f1_macro_oob:
  - 0.8829160530191457
  - 0.8810760667903524
  - 0.8817402866006795
  - 0.8765058014928683
  - 0.8807556080283353
  train_f1_micro:
  - 0.9422312223858615
  - 0.943191094619666
  - 0.9437139902496676
  - 0.9423915453403297
  - 0.9465023612750886
  train_f1_micro_oob:
  - 0.8829160530191458
  - 0.8810760667903526
  - 0.8817402866006796
  - 0.8765058014928683
  - 0.8807556080283353
  train_f1_samples:
  - 0.9422312223858617
  - 0.9431910946196661
  - 0.9437139902496676
  - 0.9423915453403298
  - 0.9465023612750886
  train_f1_samples_oob:
  - 0.8829160530191458
  - 0.8810760667903526
  - 0.8817402866006796
  - 0.8765058014928683
  - 0.8807556080283354
  train_f1_weighted:
  - 0.9514758353886071
  - 0.9511637587360767
  - 0.953246242908619
  - 0.9505954353660113
  - 0.9547373171506511
  train_f1_weighted_oob:
  - 0.8813330625109262
  - 0.8761547789449657
  - 0.8745842558933633
  - 0.8648370307650025
  - 0.8744730711631259
  train_jaccard_macro:
  - 0.8917598504379881
  - 0.8933650232798254
  - 0.894443673267567
  - 0.8920877886415104
  - 0.8992660692696111
  train_jaccard_macro_oob:
  - 0.7928230589471656
  - 0.789604641494219
  - 0.7904760841272234
  - 0.7824582539113507
  - 0.7892708434696452
  train_jaccard_micro:
  - 0.8907723902676737
  - 0.8924897299954355
  - 0.8934265734265734
  - 0.8910590126131163
  - 0.8984380472087974
  train_jaccard_micro_oob:
  - 0.7903757415952538
  - 0.7874316033825236
  - 0.7884932954620516
  - 0.7801605051966847
  - 0.7869198312236287
  train_jaccard_samples:
  - 0.9016128062728076
  - 0.9028240833813591
  - 0.9042112271168016
  - 0.9017151724141613
  - 0.9087515671775455
  train_jaccard_samples_oob:
  - 0.8089029421597804
  - 0.8063864961382553
  - 0.8072312412757631
  - 0.7997376795983638
  - 0.805674547197455
  train_jaccard_weighted:
  - 0.9081836850691176
  - 0.9074214498796374
  - 0.9114044627994273
  - 0.9064784485954313
  - 0.9139867007503599
  train_jaccard_weighted_oob:
  - 0.7891923125817802
  - 0.780437195907908
  - 0.7776778492564496
  - 0.7623772298559718
  - 0.7777092351004122
  train_label_ranking_average_precision_score:
  - 0.97751077203765
  - 0.9725095440222524
  - 0.975539815940217
  - 0.9736265015223974
  - 0.9771697779255701
  train_label_ranking_average_precision_score_oob:
  - 0.8917772513620201
  - 0.8958906536966313
  - 0.8897054940386229
  - 0.8887555677549704
  - 0.8938466227518455
  train_matthews_corrcoef_macro:
  - 0.6648675772132429
  - 0.67037314269151
  - 0.6668514001649472
  - 0.6617207964849966
  - 0.6854289467882985
  train_matthews_corrcoef_macro_oob:
  - 0.45678098051734173
  - 0.46056598433831725
  - 0.44908385576182486
  - 0.4360498182116808
  - 0.45378778857730745
  train_matthews_corrcoef_micro:
  - 0.8624596026560019
  - 0.8652104370133251
  - 0.8662019522809256
  - 0.8629344591356869
  - 0.8728129597201022
  train_matthews_corrcoef_micro_oob:
  - 0.7144063884991859
  - 0.7108151649399485
  - 0.7112719196738228
  - 0.6980411571401933
  - 0.708865738668579
  train_matthews_corrcoef_samples:
  - 0.8557870671420532
  - 0.8558190189886702
  - 0.85941030051339
  - 0.8573438416471942
  - 0.8660857828406526
  train_matthews_corrcoef_samples_oob:
  - 0.7059033060602905
  - 0.7050006651844649
  - 0.700560634751444
  - 0.6923211736121597
  - 0.7035369674009716
  train_matthews_corrcoef_weighted:
  - 0.8387401844762425
  - 0.8388391454194085
  - 0.8422313654062429
  - 0.835325152467997
  - 0.8516905347238117
  train_matthews_corrcoef_weighted_oob:
  - 0.636993345972612
  - 0.6256773473726336
  - 0.6149574636468229
  - 0.5898057565541555
  - 0.6181550026702195
  train_ndgc:
  - 0.9879195317544696
  - 0.9845398699344089
  - 0.986541888887784
  - 0.9859077306748316
  - 0.9876089988464523
  train_ndgc_oob:
  - 0.9363466612843231
  - 0.9384315682728879
  - 0.9338396649081615
  - 0.933384083186366
  - 0.9373104940530985
  train_neg_coverage_error:
  - -4.47680412371134
  - -4.528311688311688
  - -4.5
  - -4.537506466632178
  - -4.5
  train_neg_coverage_error_oob:
  - -5.4469072164948455
  - -5.45038961038961
  - -5.459669079627715
  - -5.472322814278324
  - -5.43646694214876
  train_neg_hamming_loss_macro:
  - -0.05776877761413844
  - -0.056808905380333945
  - -0.05628600975033241
  - -0.057608454659670384
  - -0.05349763872491146
  train_neg_hamming_loss_macro_oob:
  - -0.11708394698085418
  - -0.11892393320964749
  - -0.11825971339932041
  - -0.12349419850713175
  - -0.11924439197166471
  train_neg_hamming_loss_micro:
  - -0.05776877761413844
  - -0.05680890538033395
  - -0.0562860097503324
  - -0.057608454659670384
  - -0.05349763872491145
  train_neg_hamming_loss_micro_oob:
  - -0.1170839469808542
  - -0.11892393320964749
  - -0.11825971339932043
  - -0.12349419850713177
  - -0.1192443919716647
  train_neg_hamming_loss_samples:
  - -0.05776877761413843
  - -0.05680890538033394
  - -0.056286009750332384
  - -0.05760845465967038
  - -0.053497638724911444
  train_neg_hamming_loss_samples_oob:
  - -0.11708394698085418
  - -0.11892393320964748
  - -0.11825971339932043
  - -0.12349419850713175
  - -0.11924439197166468
  train_neg_hamming_loss_weighted:
  - -0.048524164611392896
  - -0.04883624126392343
  - -0.04675375709138091
  - -0.04940456463398861
  - -0.045262682849348784
  train_neg_hamming_loss_weighted_oob:
  - -0.11866693748907384
  - -0.12384522105503432
  - -0.12541574410663664
  - -0.1351629692349974
  - -0.1255269288368739
  train_neg_label_ranking_loss:
  - -0.011156276324722568
  - -0.012674157114787912
  - -0.012100900876015369
  - -0.013295570900330341
  - -0.011515282627480089
  train_neg_label_ranking_loss_oob:
  - -0.06219415597084964
  - -0.06043704203444463
  - -0.06295419475634426
  - -0.06281965546339946
  - -0.06037699192860793
  train_precision_macro:
  - 0.9422312223858613
  - 0.9431910946196659
  - 0.9437139902496676
  - 0.9423915453403298
  - 0.9465023612750885
  train_precision_macro_oob:
  - 0.8829160530191457
  - 0.8810760667903524
  - 0.8817402866006795
  - 0.8765058014928683
  - 0.8807556080283353
  train_precision_micro:
  - 0.9422312223858615
  - 0.943191094619666
  - 0.9437139902496676
  - 0.9423915453403297
  - 0.9465023612750886
  train_precision_micro_oob:
  - 0.8829160530191458
  - 0.8810760667903526
  - 0.8817402866006796
  - 0.8765058014928683
  - 0.8807556080283353
  train_precision_samples:
  - 0.9422312223858617
  - 0.9431910946196661
  - 0.9437139902496676
  - 0.9423915453403298
  - 0.9465023612750886
  train_precision_samples_oob:
  - 0.8829160530191458
  - 0.8810760667903526
  - 0.8817402866006796
  - 0.8765058014928683
  - 0.8807556080283354
  train_precision_weighted:
  - 0.9514758353886071
  - 0.9511637587360767
  - 0.953246242908619
  - 0.9505954353660113
  - 0.9547373171506511
  train_precision_weighted_oob:
  - 0.8813330625109262
  - 0.8761547789449657
  - 0.8745842558933633
  - 0.8648370307650025
  - 0.8744730711631259
  train_recall_macro:
  - 0.9422312223858613
  - 0.9431910946196659
  - 0.9437139902496676
  - 0.9423915453403298
  - 0.9465023612750885
  train_recall_macro_oob:
  - 0.8829160530191457
  - 0.8810760667903524
  - 0.8817402866006795
  - 0.8765058014928683
  - 0.8807556080283353
  train_recall_micro:
  - 0.9422312223858615
  - 0.943191094619666
  - 0.9437139902496676
  - 0.9423915453403297
  - 0.9465023612750886
  train_recall_micro_oob:
  - 0.8829160530191458
  - 0.8810760667903526
  - 0.8817402866006796
  - 0.8765058014928683
  - 0.8807556080283353
  train_recall_samples:
  - 0.9422312223858617
  - 0.9431910946196661
  - 0.9437139902496676
  - 0.9423915453403298
  - 0.9465023612750886
  train_recall_samples_oob:
  - 0.8829160530191458
  - 0.8810760667903526
  - 0.8817402866006796
  - 0.8765058014928683
  - 0.8807556080283354
  train_recall_weighted:
  - 0.9514758353886071
  - 0.9511637587360767
  - 0.953246242908619
  - 0.9505954353660113
  - 0.9547373171506511
  train_recall_weighted_oob:
  - 0.8813330625109262
  - 0.8761547789449657
  - 0.8745842558933633
  - 0.8648370307650025
  - 0.8744730711631259
  train_roc_auc_macro:
  - 0.9974992943784853
  - 0.9974946022870844
  - 0.9974415479391651
  - 0.997499529989562
  - 0.9977087287089496
  train_roc_auc_macro_oob:
  - 0.9632451574103608
  - 0.9628419002668822
  - 0.9636049735813318
  - 0.9610567127965616
  - 0.9633522789887173
  train_roc_auc_micro:
  - 0.9920899492665682
  - 0.9918315145176673
  - 0.9916139264233718
  - 0.9913164665412196
  - 0.9919841444772046
  train_roc_auc_micro_oob:
  - 0.9496536763375738
  - 0.9502634375139437
  - 0.9493609018474745
  - 0.9479441146971881
  - 0.9502017159284871
  train_roc_auc_samples:
  - 0.9888437236752774
  - 0.987325842885212
  - 0.9878990991239848
  - 0.9867044290996697
  - 0.9884847173725199
  train_roc_auc_samples_oob:
  - 0.9378058440291502
  - 0.9395629579655554
  - 0.9370458052436558
  - 0.9371803445366006
  - 0.9396230080713921
  train_roc_auc_weighted:
  - 0.9971700315748107
  - 0.9970903250764501
  - 0.9970625676118129
  - 0.9971339738625804
  - 0.9973743223025713
  train_roc_auc_weighted_oob:
  - 0.95824670776406
  - 0.9581936527542032
  - 0.959857526385947
  - 0.9565825192350805
  - 0.9593859171259735
start: 2023-12-12 22:14:20.605240
wrapper: null
