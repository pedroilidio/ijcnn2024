active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j8gMzMzMzMjwEBmZmZmZhbAADIzMzMz47/gzMzMzMwsQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 14:04:18.785508
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__4
  params: {}
hash: 96f88de70ebafd19f7c2fbb50a2aa8fbe656a8ae04cf70858cafd714781488fa
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/96f88de_20231222T135825661927_embedding_proba__4_scene.yml
results:
  fit_time:
  - 196.82506251335144
  - 178.71825861930847
  - 286.01022696495056
  - 275.72416639328003
  - 271.22507333755493
  score_time:
  - 11.810182332992554
  - 12.266270875930786
  - 11.44565200805664
  - 11.229772806167603
  - 10.216628313064575
  test_average_precision_macro:
  - 0.8510482779272287
  - 0.8324724037814626
  - 0.8506805720964916
  - 0.8575569921689267
  - 0.8320214676047585
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8498996392188607
  - 0.8286059817335241
  - 0.8520311673211105
  - 0.8519204153028893
  - 0.8309656573476241
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8873263888888889
  - 0.8801086218601494
  - 0.8812799452429841
  - 0.8869294605809128
  - 0.8707173447537473
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.840764038098181
  - 0.8237924480884715
  - 0.837892393054654
  - 0.8473451727423928
  - 0.8197587326836838
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9229166666666667
  - 0.9178547182620503
  - 0.9243668720054758
  - 0.925311203319502
  - 0.9129193433261955
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9229166666666667
  - 0.9178547182620502
  - 0.9243668720054757
  - 0.9253112033195021
  - 0.9129193433261956
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9229166666666667
  - 0.9178547182620501
  - 0.9243668720054756
  - 0.9253112033195021
  - 0.9129193433261955
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9186492585428755
  - 0.9137354390636879
  - 0.91939857134929
  - 0.9209775869526907
  - 0.907739963826116
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8592885095708143
  - 0.8501661892023914
  - 0.8628865408237112
  - 0.8632266874670097
  - 0.8434297987151628
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8568665377176016
  - 0.848180677540778
  - 0.8593700286350621
  - 0.861003861003861
  - 0.8397898883782009
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8780753968253968
  - 0.8711085248763457
  - 0.8800723574850885
  - 0.8822367121122308
  - 0.8621902722545121
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8521175555908915
  - 0.8432710601662436
  - 0.8545449252204994
  - 0.8558833016115955
  - 0.8348753074846549
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8873263888888888
  - 0.8801086218601492
  - 0.8812799452429841
  - 0.8869294605809124
  - 0.8707173447537471
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7296703013924338
  - 0.7082311824842048
  - 0.7329937142474398
  - 0.740696268980682
  - 0.6971577482085166
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.722839615470477
  - 0.7000585359915168
  - 0.7250342473681916
  - 0.732240930168772
  - 0.6895026507204345
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6860623304131069
  - 0.6662584172599932
  - 0.6869537520262312
  - 0.7047899479189688
  - 0.6512255872785028
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7174808039822643
  - 0.6963514536197837
  - 0.7176997950404791
  - 0.7280370379959474
  - 0.6817247140554921
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9168398946184038
  - 0.9113486982474501
  - 0.9123583374473018
  - 0.9166590939760689
  - 0.904916207489189
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4083333333333334
  - -1.4032586558044806
  - -1.3942505133470227
  - -1.3941908713692945
  - -1.4925053533190578
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07708333333333332
  - -0.08214528173794976
  - -0.0756331279945243
  - -0.07468879668049792
  - -0.08708065667380442
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07708333333333334
  - -0.08214528173794976
  - -0.0756331279945243
  - -0.07468879668049792
  - -0.08708065667380442
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07708333333333334
  - -0.08214528173794976
  - -0.07563312799452429
  - -0.07468879668049792
  - -0.08708065667380442
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08135074145712444
  - -0.08626456093631203
  - -0.08060142865070997
  - -0.07902241304730931
  - -0.09226003617388412
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06432291666666666
  - -0.06873727087576374
  - -0.06478439425051336
  - -0.062396265560165975
  - -0.07574946466809422
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9229166666666667
  - 0.9178547182620503
  - 0.9243668720054758
  - 0.925311203319502
  - 0.9129193433261955
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9229166666666667
  - 0.9178547182620502
  - 0.9243668720054757
  - 0.9253112033195021
  - 0.9129193433261956
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9229166666666667
  - 0.9178547182620501
  - 0.9243668720054756
  - 0.9253112033195021
  - 0.9129193433261955
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9186492585428755
  - 0.9137354390636879
  - 0.91939857134929
  - 0.9209775869526907
  - 0.907739963826116
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9229166666666667
  - 0.9178547182620503
  - 0.9243668720054758
  - 0.925311203319502
  - 0.9129193433261955
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9229166666666667
  - 0.9178547182620502
  - 0.9243668720054757
  - 0.9253112033195021
  - 0.9129193433261956
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9229166666666667
  - 0.9178547182620501
  - 0.9243668720054756
  - 0.9253112033195021
  - 0.9129193433261955
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9186492585428755
  - 0.9137354390636879
  - 0.91939857134929
  - 0.9209775869526907
  - 0.907739963826116
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9457649780606467
  - 0.9431956309630937
  - 0.9509282944683282
  - 0.9479853219859594
  - 0.9416620359583211
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9505902161875005
  - 0.9473296952602857
  - 0.9559132462626639
  - 0.9541021946245198
  - 0.9462720908809183
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9356770833333333
  - 0.9312627291242362
  - 0.9352156057494866
  - 0.937603734439834
  - 0.9242505353319058
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9400354152056716
  - 0.9386018050190302
  - 0.9458858402503675
  - 0.9426456983895418
  - 0.9369414197300813
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9970553667895278
  - 0.9966988188146786
  - 0.9961455671426441
  - 0.9971302127824382
  - 0.9966212535311466
  train_average_precision_macro_oob:
  - 0.9709542125526652
  - 0.9707608272260213
  - 0.9665939473697942
  - 0.971362306154873
  - 0.9686330702976363
  train_average_precision_micro:
  - 0.9971752404165
  - 0.9967220271563164
  - 0.9961963789517895
  - 0.9972191346140331
  - 0.9967736173180931
  train_average_precision_micro_oob:
  - 0.9700889158247439
  - 0.969726397088326
  - 0.9657815700030646
  - 0.97096463382935
  - 0.9681667244236403
  train_average_precision_samples:
  - 0.9912644871129561
  - 0.990909881697982
  - 0.9884982638888888
  - 0.9915584415584415
  - 0.9905068728522337
  train_average_precision_samples_oob:
  - 0.9675834630686734
  - 0.961830201809325
  - 0.957361111111111
  - 0.9663809523809523
  - 0.9629209621993127
  train_average_precision_weighted:
  - 0.9969974173166903
  - 0.9966060594347894
  - 0.9960012667892307
  - 0.9970195500085332
  - 0.996499492967047
  train_average_precision_weighted_oob:
  - 0.9703381707884453
  - 0.9699211375328171
  - 0.9653314457448564
  - 0.97025894284885
  - 0.9675273407057664
  train_f1_macro:
  - 0.9820965230928906
  - 0.9812108559498954
  - 0.9795138888888889
  - 0.9810389610389612
  - 0.9808419243986255
  train_f1_macro_oob:
  - 0.9632416536931329
  - 0.9600730688935282
  - 0.9590277777777777
  - 0.9627705627705628
  - 0.9603951890034365
  train_f1_micro:
  - 0.9820965230928905
  - 0.9812108559498957
  - 0.9795138888888889
  - 0.981038961038961
  - 0.9808419243986254
  train_f1_micro_oob:
  - 0.9632416536931326
  - 0.9600730688935282
  - 0.9590277777777778
  - 0.9627705627705627
  - 0.9603951890034365
  train_f1_samples:
  - 0.9820965230928905
  - 0.9812108559498957
  - 0.9795138888888889
  - 0.981038961038961
  - 0.9808419243986255
  train_f1_samples_oob:
  - 0.9632416536931327
  - 0.9600730688935282
  - 0.9590277777777778
  - 0.9627705627705628
  - 0.9603951890034363
  train_f1_weighted:
  - 0.9816920098086943
  - 0.9807386540301968
  - 0.9789572750362846
  - 0.9805248839211103
  - 0.9803125155635242
  train_f1_weighted_oob:
  - 0.9627333354077605
  - 0.9589146472946944
  - 0.9579445351556201
  - 0.9618954630275385
  - 0.9593261616614374
  train_jaccard_macro:
  - 0.9648780530614824
  - 0.963170635144405
  - 0.9599319766542586
  - 0.9628595476741214
  - 0.9624601458546738
  train_jaccard_macro_oob:
  - 0.9291917647692612
  - 0.9234067216220424
  - 0.9214855101560363
  - 0.928359422640355
  - 0.9240063281140424
  train_jaccard_micro:
  - 0.9648228396635228
  - 0.9631147540983607
  - 0.9598502892140184
  - 0.9627835839918429
  - 0.9624041136306162
  train_jaccard_micro_oob:
  - 0.9290898473346125
  - 0.9232120451693852
  - 0.9212808539026017
  - 0.9282136894824707
  - 0.9238079497562185
  train_jaccard_samples:
  - 0.9701114488348531
  - 0.9685604930907644
  - 0.9657366071428571
  - 0.9680890538033394
  - 0.9679553264604812
  train_jaccard_samples_oob:
  - 0.9392591494304
  - 0.9345859429366735
  - 0.9327256944444445
  - 0.9386765615337044
  - 0.9346219931271477
  train_jaccard_weighted:
  - 0.964093445057574
  - 0.9622586770399323
  - 0.9588586518438986
  - 0.9618664087590016
  - 0.9614393707713396
  train_jaccard_weighted_oob:
  - 0.9282369570542958
  - 0.9212771029017718
  - 0.9194887437017486
  - 0.9267304444404175
  - 0.922022606544327
  train_label_ranking_average_precision_score:
  - 0.991264487112956
  - 0.9909098816979818
  - 0.9884982638888888
  - 0.9915584415584414
  - 0.9905068728522335
  train_label_ranking_average_precision_score_oob:
  - 0.9675834630686732
  - 0.9618302018093248
  - 0.9573611111111109
  - 0.9663809523809523
  - 0.9629209621993126
  train_matthews_corrcoef_macro:
  - 0.9387633685323893
  - 0.9360729792059207
  - 0.9302547690495165
  - 0.9353654187153553
  - 0.9343398236790975
  train_matthews_corrcoef_macro_oob:
  - 0.8713429684099382
  - 0.8618911781276597
  - 0.8575471889865981
  - 0.8705837723824278
  - 0.861710309714995
  train_matthews_corrcoef_micro:
  - 0.9383195496050204
  - 0.935523508952008
  - 0.9295081003687811
  - 0.9347106729047705
  - 0.9336537480267073
  train_matthews_corrcoef_micro_oob:
  - 0.8712584675213918
  - 0.8603733991923125
  - 0.8562590677808098
  - 0.8696102272432824
  - 0.8602534796067933
  train_matthews_corrcoef_samples:
  - 0.9250250150203979
  - 0.9216062663173499
  - 0.9123002434551867
  - 0.9181384246410172
  - 0.9164126780472536
  train_matthews_corrcoef_samples_oob:
  - 0.8370282581292497
  - 0.8285649734544358
  - 0.821681174861875
  - 0.8367458472449335
  - 0.8217890953002215
  train_matthews_corrcoef_weighted:
  - 0.9379442090755316
  - 0.9351052938368747
  - 0.9290287301451117
  - 0.9342435853334584
  - 0.9332089494849519
  train_matthews_corrcoef_weighted_oob:
  - 0.8708081559771597
  - 0.8594736742843854
  - 0.8553374489272599
  - 0.8689017209007982
  - 0.8594278712982076
  train_ndgc:
  - 0.9935669623507809
  - 0.9933981485960718
  - 0.9916136930930443
  - 0.9938278555174351
  - 0.9930593454361148
  train_ndgc_oob:
  - 0.9764523870388209
  - 0.9721377513183176
  - 0.9688101837646599
  - 0.9754199863865087
  - 0.9730334909924082
  train_neg_coverage_error:
  - -1.0918526206538661
  - -1.099686847599165
  - -1.1020833333333333
  - -1.0924675324675324
  - -1.0871134020618556
  train_neg_coverage_error_oob:
  - -1.1743642968344576
  - -1.198329853862213
  - -1.2088541666666666
  - -1.1787012987012988
  - -1.18659793814433
  train_neg_hamming_loss_macro:
  - -0.017903476907109497
  - -0.018789144050104387
  - -0.02048611111111111
  - -0.01896103896103896
  - -0.01915807560137457
  train_neg_hamming_loss_macro_oob:
  - -0.03675834630686733
  - -0.039926931106471816
  - -0.04097222222222222
  - -0.03722943722943723
  - -0.03960481099656358
  train_neg_hamming_loss_micro:
  - -0.017903476907109497
  - -0.018789144050104383
  - -0.02048611111111111
  - -0.01896103896103896
  - -0.019158075601374572
  train_neg_hamming_loss_micro_oob:
  - -0.03675834630686733
  - -0.039926931106471816
  - -0.04097222222222222
  - -0.03722943722943723
  - -0.03960481099656357
  train_neg_hamming_loss_samples:
  - -0.017903476907109497
  - -0.018789144050104383
  - -0.020486111111111108
  - -0.01896103896103896
  - -0.01915807560137457
  train_neg_hamming_loss_samples_oob:
  - -0.036758346306867314
  - -0.039926931106471816
  - -0.040972222222222215
  - -0.03722943722943722
  - -0.03960481099656357
  train_neg_hamming_loss_weighted:
  - -0.018307990191305672
  - -0.019261345969803306
  - -0.02104272496371553
  - -0.019475116078889663
  - -0.01968748443647592
  train_neg_hamming_loss_weighted_oob:
  - -0.03726666459223957
  - -0.041085352705305625
  - -0.04205546484437994
  - -0.03810453697246151
  - -0.040673838338562675
  train_neg_label_ranking_loss:
  - -0.003749351323300467
  - -0.0039013569937369525
  - -0.004934895833333333
  - -0.003649350649350649
  - -0.003930412371134021
  train_neg_label_ranking_loss_oob:
  - -0.019006227296315518
  - -0.02254697286012526
  - -0.025247395833333335
  - -0.019896103896103898
  - -0.022306701030927835
  train_precision_macro:
  - 0.9820965230928906
  - 0.9812108559498954
  - 0.9795138888888889
  - 0.9810389610389612
  - 0.9808419243986255
  train_precision_macro_oob:
  - 0.9632416536931329
  - 0.9600730688935282
  - 0.9590277777777777
  - 0.9627705627705628
  - 0.9603951890034365
  train_precision_micro:
  - 0.9820965230928905
  - 0.9812108559498957
  - 0.9795138888888889
  - 0.981038961038961
  - 0.9808419243986254
  train_precision_micro_oob:
  - 0.9632416536931326
  - 0.9600730688935282
  - 0.9590277777777778
  - 0.9627705627705627
  - 0.9603951890034365
  train_precision_samples:
  - 0.9820965230928905
  - 0.9812108559498957
  - 0.9795138888888889
  - 0.981038961038961
  - 0.9808419243986255
  train_precision_samples_oob:
  - 0.9632416536931327
  - 0.9600730688935282
  - 0.9590277777777778
  - 0.9627705627705628
  - 0.9603951890034363
  train_precision_weighted:
  - 0.9816920098086943
  - 0.9807386540301968
  - 0.9789572750362846
  - 0.9805248839211103
  - 0.9803125155635242
  train_precision_weighted_oob:
  - 0.9627333354077605
  - 0.9589146472946944
  - 0.9579445351556201
  - 0.9618954630275385
  - 0.9593261616614374
  train_recall_macro:
  - 0.9820965230928906
  - 0.9812108559498954
  - 0.9795138888888889
  - 0.9810389610389612
  - 0.9808419243986255
  train_recall_macro_oob:
  - 0.9632416536931329
  - 0.9600730688935282
  - 0.9590277777777777
  - 0.9627705627705628
  - 0.9603951890034365
  train_recall_micro:
  - 0.9820965230928905
  - 0.9812108559498957
  - 0.9795138888888889
  - 0.981038961038961
  - 0.9808419243986254
  train_recall_micro_oob:
  - 0.9632416536931326
  - 0.9600730688935282
  - 0.9590277777777778
  - 0.9627705627705627
  - 0.9603951890034365
  train_recall_samples:
  - 0.9820965230928905
  - 0.9812108559498957
  - 0.9795138888888889
  - 0.981038961038961
  - 0.9808419243986255
  train_recall_samples_oob:
  - 0.9632416536931327
  - 0.9600730688935282
  - 0.9590277777777778
  - 0.9627705627705628
  - 0.9603951890034363
  train_recall_weighted:
  - 0.9816920098086943
  - 0.9807386540301968
  - 0.9789572750362846
  - 0.9805248839211103
  - 0.9803125155635242
  train_recall_weighted_oob:
  - 0.9627333354077605
  - 0.9589146472946944
  - 0.9579445351556201
  - 0.9618954630275385
  - 0.9593261616614374
  train_roc_auc_macro:
  - 0.9993459615604485
  - 0.9992418961182962
  - 0.9991076496270797
  - 0.9993482670662489
  - 0.9992376801074186
  train_roc_auc_macro_oob:
  - 0.9904708798912027
  - 0.9899993381316823
  - 0.9883717455191202
  - 0.9898239975208246
  - 0.9898114702495057
  train_roc_auc_micro:
  - 0.9993902542132891
  - 0.9992743794155275
  - 0.9991611543290255
  - 0.999397592850823
  - 0.9993041862906931
  train_roc_auc_micro_oob:
  - 0.9905749798610464
  - 0.9900983243460157
  - 0.9886154867682144
  - 0.9901678255912943
  - 0.9899752648928062
  train_roc_auc_samples:
  - 0.9962506486766995
  - 0.9960986430062629
  - 0.9950651041666667
  - 0.9963506493506493
  - 0.996069587628866
  train_roc_auc_samples_oob:
  - 0.9809937727036845
  - 0.9774530271398748
  - 0.9747526041666668
  - 0.9801038961038963
  - 0.9776932989690722
  train_roc_auc_weighted:
  - 0.9993266741592806
  - 0.9992114916388566
  - 0.9990622165924795
  - 0.9993150915693647
  - 0.9992018211743202
  train_roc_auc_weighted_oob:
  - 0.9901064373546662
  - 0.9894787950371492
  - 0.9877118308065616
  - 0.9892841733706113
  - 0.989251205753552
start: 2023-12-22 13:58:25.661927
wrapper: null
