active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMAAMzMzMzPjv4CZmZmZmfm/QDMzMzMzA0BAMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:45:15.039810
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__3
  params: {}
hash: 23973bf0bbba40e3350896ca843f3c936261c5d43eb4d2b5c8ec905dd8a096be
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/23973bf_20231221T074454030252_embedding_proba_weak__3_VirusGO.yml
results:
  fit_time:
  - 13.727214574813843
  - 13.28567123413086
  - 13.322756052017212
  - 13.433072090148926
  - 13.079205751419067
  score_time:
  - 2.3553247451782227
  - 2.3343052864074707
  - 2.239377021789551
  - 2.3017542362213135
  - 2.250358819961548
  test_average_precision_macro:
  - 0.9691502905705692
  - 0.9387583169265694
  - 0.9631654949561524
  - 0.9196010821107571
  - 0.8799245049233667
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9452951810344741
  - 0.94661390922173
  - 0.9115143476768742
  - 0.9323354705679445
  - 0.8800308848386151
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9734848484848484
  - 0.9571428571428572
  - 0.9244186046511628
  - 0.9529914529914529
  - 0.8961538461538461
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9718362176179514
  - 0.9552707818827728
  - 0.9553225865509604
  - 0.9513051258675825
  - 0.900229144359428
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9469696969696969
  - 0.9523809523809522
  - 0.9302325581395348
  - 0.935897435897436
  - 0.9188034188034188
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.946969696969697
  - 0.9523809523809523
  - 0.9302325581395349
  - 0.9358974358974359
  - 0.9188034188034188
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9469696969696971
  - 0.9523809523809523
  - 0.9302325581395349
  - 0.9358974358974359
  - 0.9188034188034189
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.946524064171123
  - 0.9409340659340658
  - 0.9024167806657547
  - 0.9293563579277865
  - 0.8974358974358975
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8997772981121731
  - 0.9100560713300855
  - 0.8727559908460529
  - 0.8812481430462143
  - 0.8513515554213228
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8992805755395683
  - 0.9090909090909091
  - 0.8695652173913043
  - 0.8795180722891566
  - 0.849802371541502
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9107142857142857
  - 0.9217687074829932
  - 0.8853820598006644
  - 0.9004884004884005
  - 0.8766788766788767
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.898925992434182
  - 0.8897505426827975
  - 0.8254029631176142
  - 0.869419257857912
  - 0.8147667946671269
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9734848484848484
  - 0.9571428571428572
  - 0.9244186046511628
  - 0.9529914529914529
  - 0.8961538461538461
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6071890025374732
  - 0.6939426345314481
  - 0.6204335850257633
  - 0.5120578660805594
  - 0.5294167964574393
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8233023133962742
  - 0.8505875642565953
  - 0.772123882466463
  - 0.7993110386293105
  - 0.7428023718399355
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7722053573553332
  - 0.8280246600865395
  - 0.7347612370279548
  - 0.7691970076423209
  - 0.733931655056497
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.789399891722328
  - 0.8151213059943351
  - 0.7210142223990554
  - 0.7387643885806913
  - 0.6932594310313357
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9813995521884341
  - 0.970462201890203
  - 0.9450434001639834
  - 0.9653515978045502
  - 0.9219043322760471
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2272727272727273
  - -1.380952380952381
  - -1.372093023255814
  - -1.358974358974359
  - -1.641025641025641
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05303030303030303
  - -0.047619047619047616
  - -0.06976744186046512
  - -0.06410256410256411
  - -0.0811965811965812
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05303030303030303
  - -0.047619047619047616
  - -0.06976744186046512
  - -0.0641025641025641
  - -0.0811965811965812
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.053030303030303025
  - -0.047619047619047616
  - -0.06976744186046512
  - -0.0641025641025641
  - -0.08119658119658119
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05347593582887699
  - -0.05906593406593407
  - -0.09758321933424531
  - -0.0706436420722135
  - -0.10256410256410255
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.011931818181818182
  - -0.022552910052910054
  - -0.03662790697674419
  - -0.023076923076923075
  - -0.08076923076923077
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9469696969696969
  - 0.9523809523809522
  - 0.9302325581395348
  - 0.935897435897436
  - 0.9188034188034188
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.946969696969697
  - 0.9523809523809523
  - 0.9302325581395349
  - 0.9358974358974359
  - 0.9188034188034188
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9469696969696971
  - 0.9523809523809523
  - 0.9302325581395349
  - 0.9358974358974359
  - 0.9188034188034189
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.946524064171123
  - 0.9409340659340658
  - 0.9024167806657547
  - 0.9293563579277865
  - 0.8974358974358975
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9469696969696969
  - 0.9523809523809522
  - 0.9302325581395348
  - 0.935897435897436
  - 0.9188034188034188
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.946969696969697
  - 0.9523809523809523
  - 0.9302325581395349
  - 0.9358974358974359
  - 0.9188034188034188
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9469696969696971
  - 0.9523809523809523
  - 0.9302325581395349
  - 0.9358974358974359
  - 0.9188034188034189
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.946524064171123
  - 0.9409340659340658
  - 0.9024167806657547
  - 0.9293563579277865
  - 0.8974358974358975
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9901413756193168
  - 0.9772388965332722
  - 0.9851355071943307
  - 0.9760465245972494
  - 0.9490068754774638
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9851790481450796
  - 0.9805769230769231
  - 0.9779293359856019
  - 0.975068946497518
  - 0.9528957528957529
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9880681818181819
  - 0.97744708994709
  - 0.9633720930232558
  - 0.9769230769230768
  - 0.9192307692307693
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9865762821645174
  - 0.9758890013495277
  - 0.9743170772582538
  - 0.9819818158771132
  - 0.941956003180493
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9628444963342156
  - 0.9544129675263578
  - 0.9732359368521205
  - 0.959335939480499
  - 0.981986639722488
  train_average_precision_macro_oob:
  - 0.9207683145465132
  - 0.9104805466589326
  - 0.9419787168622856
  - 0.9443862264879134
  - 0.9566439558640963
  train_average_precision_micro:
  - 0.9244099782079401
  - 0.9381645033262904
  - 0.9564489502263976
  - 0.9426753399248959
  - 0.9582363420676215
  train_average_precision_micro_oob:
  - 0.9051833261011855
  - 0.9140491138338767
  - 0.9298119481228326
  - 0.9237754607758909
  - 0.9353294789459294
  train_average_precision_samples:
  - 0.953476482617587
  - 0.9601010101010102
  - 0.9674796747967479
  - 0.9672619047619048
  - 0.9717261904761905
  train_average_precision_samples_oob:
  - 0.9462167689161555
  - 0.949191919191919
  - 0.944850948509485
  - 0.945734126984127
  - 0.966468253968254
  train_average_precision_weighted:
  - 0.9520647789095907
  - 0.9532549689359786
  - 0.9735872778539473
  - 0.9543349554047187
  - 0.9786043013169472
  train_average_precision_weighted_oob:
  - 0.9287139774709657
  - 0.9275707019290972
  - 0.9512565343477
  - 0.9445211503240147
  - 0.9603275413887329
  train_f1_macro:
  - 0.9478527607361964
  - 0.9474747474747475
  - 0.9491869918699187
  - 0.9543650793650794
  - 0.9523809523809522
  train_f1_macro_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.941468253968254
  train_f1_micro:
  - 0.9478527607361963
  - 0.9474747474747475
  - 0.9491869918699187
  - 0.9543650793650794
  - 0.9523809523809523
  train_f1_micro_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.941468253968254
  train_f1_samples:
  - 0.9478527607361963
  - 0.9474747474747474
  - 0.9491869918699188
  - 0.9543650793650794
  - 0.9523809523809523
  train_f1_samples_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.9414682539682541
  train_f1_weighted:
  - 0.9391997069865397
  - 0.9373939393939393
  - 0.9443635481130931
  - 0.9497712878254752
  - 0.948598404879193
  train_f1_weighted_oob:
  - 0.9291273692885268
  - 0.9217272727272727
  - 0.9369615337944424
  - 0.9241437954492141
  - 0.9350516068496365
  train_jaccard_macro:
  - 0.9015019610946747
  - 0.9007682789295867
  - 0.9036859555611527
  - 0.912976011905465
  - 0.909337143731343
  train_jaccard_macro_oob:
  - 0.8849632758206242
  - 0.8742925866897514
  - 0.8909420005255426
  - 0.883112557041168
  - 0.8897367191066149
  train_jaccard_micro:
  - 0.9008746355685131
  - 0.9001919385796545
  - 0.9032882011605415
  - 0.9127134724857685
  - 0.9090909090909091
  train_jaccard_micro_oob:
  - 0.884393063583815
  - 0.8732261116367077
  - 0.8904899135446686
  - 0.8823529411764706
  - 0.8894095595126523
  train_jaccard_samples:
  - 0.9154250657318143
  - 0.9145743145743147
  - 0.9179732868757259
  - 0.925170068027211
  - 0.9227607709750567
  train_jaccard_samples_oob:
  - 0.9000876424189308
  - 0.8909090909090909
  - 0.9062137049941928
  - 0.9002267573696145
  - 0.905328798185941
  train_jaccard_weighted:
  - 0.8859250235441374
  - 0.882762386903299
  - 0.8949762031939381
  - 0.904654315099764
  - 0.9024792133706797
  train_jaccard_weighted_oob:
  - 0.8680744456860504
  - 0.8558105116728153
  - 0.8818923090606362
  - 0.8597181944923602
  - 0.878285156034613
  train_label_ranking_average_precision_score:
  - 0.9534764826175867
  - 0.9601010101010099
  - 0.9674796747967479
  - 0.9672619047619048
  - 0.9717261904761905
  train_label_ranking_average_precision_score_oob:
  - 0.9462167689161551
  - 0.949191919191919
  - 0.9448509485094849
  - 0.945734126984127
  - 0.9664682539682539
  train_matthews_corrcoef_macro:
  - 0.6469701101948814
  - 0.6519125075794436
  - 0.643748475700909
  - 0.6757220573173504
  - 0.6636344865380149
  train_matthews_corrcoef_macro_oob:
  - 0.6018065122107842
  - 0.5504407599209301
  - 0.6091205186441327
  - 0.6125089197411603
  - 0.6116424431198803
  train_matthews_corrcoef_micro:
  - 0.835840485326054
  - 0.8325346383488395
  - 0.8387405298378457
  - 0.8540263713901654
  - 0.8478300354343283
  train_matthews_corrcoef_micro_oob:
  - 0.8051245937636525
  - 0.7810676073020961
  - 0.8150314837794101
  - 0.7976351854422372
  - 0.8113956066509536
  train_matthews_corrcoef_samples:
  - 0.823043340007724
  - 0.8177708204421964
  - 0.8210896208851097
  - 0.8352131226568125
  - 0.8302543444884263
  train_matthews_corrcoef_samples_oob:
  - 0.7689641310257156
  - 0.7434933048104567
  - 0.778010894884699
  - 0.7696523276426871
  - 0.7791682996548924
  train_matthews_corrcoef_weighted:
  - 0.8033039306070437
  - 0.7997532851622955
  - 0.8089899546336043
  - 0.8256684149280478
  - 0.8192512695324699
  train_matthews_corrcoef_weighted_oob:
  - 0.7677137214293875
  - 0.7323116006341738
  - 0.781993773932614
  - 0.7577982527024817
  - 0.7760448526451409
  train_ndgc:
  - 0.9660926090257649
  - 0.9711404078332762
  - 0.9774628247336457
  - 0.9759949929626182
  - 0.979644678633841
  train_ndgc_oob:
  - 0.9613594986022101
  - 0.9633430219315211
  - 0.9607043198100416
  - 0.9609707327422202
  - 0.976061893514054
  train_neg_coverage_error:
  - -1.343558282208589
  - -1.3212121212121213
  - -1.3231707317073171
  - -1.2857142857142858
  - -1.2738095238095237
  train_neg_coverage_error_oob:
  - -1.4049079754601228
  - -1.3818181818181818
  - -1.4024390243902438
  - -1.3928571428571428
  - -1.3035714285714286
  train_neg_hamming_loss_macro:
  - -0.05214723926380368
  - -0.05252525252525253
  - -0.0508130081300813
  - -0.04563492063492063
  - -0.047619047619047616
  train_neg_hamming_loss_macro_oob:
  - -0.06134969325153375
  - -0.06767676767676767
  - -0.05792682926829268
  - -0.06249999999999999
  - -0.058531746031746025
  train_neg_hamming_loss_micro:
  - -0.05214723926380368
  - -0.052525252525252523
  - -0.0508130081300813
  - -0.04563492063492063
  - -0.047619047619047616
  train_neg_hamming_loss_micro_oob:
  - -0.06134969325153374
  - -0.06767676767676768
  - -0.057926829268292686
  - -0.0625
  - -0.05853174603174603
  train_neg_hamming_loss_samples:
  - -0.05214723926380368
  - -0.052525252525252523
  - -0.05081300813008129
  - -0.04563492063492063
  - -0.047619047619047616
  train_neg_hamming_loss_samples_oob:
  - -0.06134969325153374
  - -0.06767676767676767
  - -0.057926829268292686
  - -0.062499999999999986
  - -0.058531746031746025
  train_neg_hamming_loss_weighted:
  - -0.0608002930134603
  - -0.06260606060606061
  - -0.05563645188690693
  - -0.050228712174524986
  - -0.051401595120806935
  train_neg_hamming_loss_weighted_oob:
  - -0.07087263071147332
  - -0.07827272727272727
  - -0.06303846620555759
  - -0.07585620455078583
  - -0.0649483931503636
  train_neg_label_ranking_loss:
  - -0.02147239263803681
  - -0.02075757575757576
  - -0.01676829268292683
  - -0.015029761904761907
  - -0.0125
  train_neg_label_ranking_loss_oob:
  - -0.03190184049079754
  - -0.031969696969696974
  - -0.033130081300813005
  - -0.033680555555555554
  - -0.01703042328042328
  train_precision_macro:
  - 0.9478527607361964
  - 0.9474747474747475
  - 0.9491869918699187
  - 0.9543650793650794
  - 0.9523809523809522
  train_precision_macro_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.941468253968254
  train_precision_micro:
  - 0.9478527607361963
  - 0.9474747474747475
  - 0.9491869918699187
  - 0.9543650793650794
  - 0.9523809523809523
  train_precision_micro_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.941468253968254
  train_precision_samples:
  - 0.9478527607361963
  - 0.9474747474747474
  - 0.9491869918699188
  - 0.9543650793650794
  - 0.9523809523809523
  train_precision_samples_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.9414682539682541
  train_precision_weighted:
  - 0.9391997069865397
  - 0.9373939393939393
  - 0.9443635481130931
  - 0.9497712878254752
  - 0.948598404879193
  train_precision_weighted_oob:
  - 0.9291273692885268
  - 0.9217272727272727
  - 0.9369615337944424
  - 0.9241437954492141
  - 0.9350516068496365
  train_recall_macro:
  - 0.9478527607361964
  - 0.9474747474747475
  - 0.9491869918699187
  - 0.9543650793650794
  - 0.9523809523809522
  train_recall_macro_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.941468253968254
  train_recall_micro:
  - 0.9478527607361963
  - 0.9474747474747475
  - 0.9491869918699187
  - 0.9543650793650794
  - 0.9523809523809523
  train_recall_micro_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.941468253968254
  train_recall_samples:
  - 0.9478527607361963
  - 0.9474747474747474
  - 0.9491869918699188
  - 0.9543650793650794
  - 0.9523809523809523
  train_recall_samples_oob:
  - 0.9386503067484663
  - 0.9323232323232323
  - 0.9420731707317073
  - 0.9375
  - 0.9414682539682541
  train_recall_weighted:
  - 0.9391997069865397
  - 0.9373939393939393
  - 0.9443635481130931
  - 0.9497712878254752
  - 0.948598404879193
  train_recall_weighted_oob:
  - 0.9291273692885268
  - 0.9217272727272727
  - 0.9369615337944424
  - 0.9241437954492141
  - 0.9350516068496365
  train_roc_auc_macro:
  - 0.9867625688024592
  - 0.9879031394939083
  - 0.9914421069997198
  - 0.9884927068256024
  - 0.9932035360083967
  train_roc_auc_macro_oob:
  - 0.9670380801123174
  - 0.9691961846013984
  - 0.9789976191978926
  - 0.9731334556424079
  - 0.9858626906529818
  train_roc_auc_micro:
  - 0.9841846110502827
  - 0.9857341772151899
  - 0.9884358539359398
  - 0.9875195055533458
  - 0.990499648135116
  train_roc_auc_micro_oob:
  - 0.9716155387797178
  - 0.9722151898734177
  - 0.9762236073781795
  - 0.9771196034635744
  - 0.9816601903130069
  train_roc_auc_samples:
  - 0.9785276073619632
  - 0.9792424242424244
  - 0.9832317073170732
  - 0.9849702380952382
  - 0.9875
  train_roc_auc_samples_oob:
  - 0.9680981595092025
  - 0.9680303030303031
  - 0.9668699186991869
  - 0.9663194444444445
  - 0.9829695767195767
  train_roc_auc_weighted:
  - 0.9781291103404125
  - 0.9817323731584517
  - 0.9880538699444021
  - 0.9822167387387298
  - 0.9892282026555483
  train_roc_auc_weighted_oob:
  - 0.9619715724371533
  - 0.9682373434562855
  - 0.9737174966577299
  - 0.9703587633571802
  - 0.9812389634253537
start: 2023-12-21 07:44:54.030252
wrapper: null
