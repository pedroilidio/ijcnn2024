active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmJmZmZnJvwCYmZmZmcm/AM3MzMzM/D8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 21:16:53.926593
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__0
  params: {}
hash: 48e2d547536328ae66fcdae869369b46f9365b6f01a305fafb59b4876ff4a294
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/48e2d54_20231221T211646018357_embedding_proba_weak__0_GrampositivePseAAC.yml
results:
  fit_time:
  - 0.9454662799835205
  - 0.9528365135192871
  - 0.9622492790222168
  - 0.9352688789367676
  - 0.9536266326904297
  score_time:
  - 0.9980747699737549
  - 0.9797194004058838
  - 0.9815869331359863
  - 0.9567456245422363
  - 0.9830517768859863
  test_average_precision_macro:
  - 0.43475202645465916
  - 0.40057600387539594
  - 0.4098842892971136
  - 0.3454510792764144
  - 0.3926234335647073
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.48275492660626296
  - 0.5344790177614588
  - 0.5175314975368672
  - 0.4699197770333654
  - 0.5414960670433047
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7166666666666666
  - 0.7155448717948717
  - 0.7083333333333333
  - 0.7287581699346405
  - 0.7251602564102563
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4747351877969086
  - 0.5073077160298083
  - 0.5038240658631193
  - 0.44238455341097216
  - 0.5205880921484677
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6738544474393531
  - 0.6695636094674556
  - 0.6751831501831502
  - 0.672134238310709
  - 0.6695636094674556
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6176403871358
  - 0.6224964113973193
  - 0.6173036657549128
  - 0.614350235264661
  - 0.6224964113973193
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.596958174904943
  - 0.6
  - 0.5969289827255279
  - 0.59375
  - 0.6
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5974603174603172
  - 0.5999999999999999
  - 0.5974358974358972
  - 0.5947712418300652
  - 0.5999999999999999
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5150097868204152
  - 0.5100143544107231
  - 0.5162064290091075
  - 0.5129336924232528
  - 0.5100143544107231
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7166666666666667
  - 0.7155448717948717
  - 0.7083333333333334
  - 0.7287581699346405
  - 0.7251602564102563
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.789086329038889
  - 0.7882863633510271
  - 0.7830710564905196
  - 0.7989523467800425
  - 0.7949277331999256
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7714285714285714
  - -1.7211538461538463
  - -1.7788461538461537
  - -1.7450980392156863
  - -1.7403846153846154
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2523809523809524
  - -0.25
  - -0.25240384615384615
  - -0.2549019607843137
  - -0.25
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2523809523809524
  - -0.25
  - -0.25240384615384615
  - -0.2549019607843137
  - -0.25
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2523809523809524
  - -0.25
  - -0.25240384615384615
  - -0.2549019607843137
  - -0.25
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32614555256064687
  - -0.3304363905325444
  - -0.32481684981684983
  - -0.32786576168929105
  - -0.3304363905325444
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.25317460317460316
  - -0.2403846153846154
  - -0.2556089743589744
  - -0.23937908496732027
  - -0.24679487179487178
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6738544474393531
  - 0.6695636094674556
  - 0.6751831501831502
  - 0.672134238310709
  - 0.6695636094674556
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7476190476190476
  - 0.75
  - 0.7475961538461539
  - 0.7450980392156863
  - 0.75
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6738544474393531
  - 0.6695636094674556
  - 0.6751831501831502
  - 0.672134238310709
  - 0.6695636094674556
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.663337192137581
  - 0.6898810885067544
  - 0.6964030990062239
  - 0.6175559657501309
  - 0.6546764487546229
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7612366302127149
  - 0.7818663708086785
  - 0.7643852396263972
  - 0.7532262145748988
  - 0.775949211045365
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7468253968253968
  - 0.7596153846153846
  - 0.7443910256410255
  - 0.7606209150326797
  - 0.7532051282051283
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6654465564480976
  - 0.6811933100709737
  - 0.6693877151667859
  - 0.6403645474583276
  - 0.6840904104031075
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7532712509590231
  - 0.7842503556212056
  - 0.748838631626515
  - 0.7587198531892222
  - 0.7718941099572538
  train_average_precision_macro_oob:
  - 0.35679052912327247
  - 0.3528488366499409
  - 0.34738798123410425
  - 0.3413338092646772
  - 0.3423586019314613
  train_average_precision_micro:
  - 0.8229004045553284
  - 0.8206638313595176
  - 0.8141257750086451
  - 0.8018844271202263
  - 0.8113546792150593
  train_average_precision_micro_oob:
  - 0.4980009495962629
  - 0.46950072812902677
  - 0.4834796061728552
  - 0.47541265661554644
  - 0.46156450551092754
  train_average_precision_samples:
  - 0.8446054750402575
  - 0.8495983935742971
  - 0.8399598393574297
  - 0.8337330135891287
  - 0.8471887550200803
  train_average_precision_samples_oob:
  - 0.6871980676328503
  - 0.6885542168674699
  - 0.6967871485943774
  - 0.6990407673860911
  - 0.7028112449799195
  train_average_precision_weighted:
  - 0.8200588564677525
  - 0.8283239435134966
  - 0.8144783476806758
  - 0.8038063102741396
  - 0.8174709095049064
  train_average_precision_weighted_oob:
  - 0.463534575924104
  - 0.44593408664613227
  - 0.4548948829187997
  - 0.4409008966254371
  - 0.4327036971303332
  train_f1_macro:
  - 0.7506038647342994
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021584
  - 0.7475903614457832
  train_f1_macro_oob:
  - 0.7481884057971013
  - 0.7475903614457832
  - 0.7481927710843375
  - 0.748800959232614
  - 0.7475903614457832
  train_f1_micro:
  - 0.7506038647342995
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021583
  - 0.7475903614457832
  train_f1_micro_oob:
  - 0.7481884057971014
  - 0.7475903614457832
  - 0.7481927710843373
  - 0.7488009592326139
  - 0.7475903614457832
  train_f1_samples:
  - 0.7506038647342995
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021583
  - 0.7475903614457832
  train_f1_samples_oob:
  - 0.7481884057971014
  - 0.7475903614457832
  - 0.7481927710843373
  - 0.7488009592326139
  - 0.7475903614457832
  train_f1_weighted:
  - 0.6750773294407952
  - 0.6737096356787531
  - 0.6729578601487289
  - 0.6788344980340311
  - 0.6727549817408057
  train_f1_weighted_oob:
  - 0.6717003209026983
  - 0.6727549817408057
  - 0.6713552775696086
  - 0.6721152910607076
  - 0.6727549817408057
  train_jaccard_macro:
  - 0.6218183245445961
  - 0.6185619947411074
  - 0.6206014212056463
  - 0.6252633961197591
  - 0.6179462311943094
  train_jaccard_macro_oob:
  - 0.6191601671882165
  - 0.6179462311943094
  - 0.619244360566291
  - 0.6199603680221331
  - 0.6179462311943094
  train_jaccard_micro:
  - 0.6007733204446593
  - 0.5976900866217517
  - 0.5992292870905588
  - 0.6046176046176046
  - 0.596921596921597
  train_jaccard_micro_oob:
  - 0.597684515195369
  - 0.596921596921597
  - 0.5976900866217517
  - 0.5984666986104457
  - 0.596921596921597
  train_jaccard_samples:
  - 0.6019323671497583
  - 0.5983935742971885
  - 0.5999999999999998
  - 0.6063948840927257
  - 0.5974297188755018
  train_jaccard_samples_oob:
  - 0.5980676328502413
  - 0.5974297188755018
  - 0.5980722891566264
  - 0.5987210231814547
  - 0.5974297188755018
  train_jaccard_weighted:
  - 0.5161037649975635
  - 0.5146017260442011
  - 0.5138968592713844
  - 0.5203062156208952
  - 0.5136259098268408
  train_jaccard_weighted_oob:
  - 0.5123999115978736
  - 0.5136259098268408
  - 0.5120917738276484
  - 0.512902401286592
  - 0.5136259098268408
  train_label_ranking_average_precision_score:
  - 0.8446054750402574
  - 0.849598393574297
  - 0.8399598393574293
  - 0.8337330135891278
  - 0.8471887550200802
  train_label_ranking_average_precision_score_oob:
  - 0.6871980676328512
  - 0.6885542168674704
  - 0.6967871485943773
  - 0.6990407673860914
  - 0.70281124497992
  train_matthews_corrcoef_macro:
  - 0.0450788344869974
  - 0.01504823163572115
  - 0.02451473040639267
  - 0.06372295441934762
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.08481889296799709
  - 0.0422528187066506
  - 0.05986808846892012
  - 0.11985748407132811
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.00966183574879227
  - 0.0024096385542168677
  - 0.004819277108433735
  - 0.019184652278177457
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.06399936848832123
  - 0.023847316959710842
  - 0.03260811030132613
  - 0.09064005753185451
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8843326273640995
  - 0.8883786060646204
  - 0.8809055914009112
  - 0.8762112034820477
  - 0.8864130095248359
  train_ndgc_oob:
  - 0.7670032784041203
  - 0.7682274889153966
  - 0.7743263669418611
  - 0.7757371588695623
  - 0.7788708548185684
  train_neg_coverage_error:
  - -1.4130434782608696
  - -1.3951807228915662
  - -1.4216867469879517
  - -1.4292565947242206
  - -1.3951807228915662
  train_neg_coverage_error_oob:
  - -1.8526570048309179
  - -1.8144578313253013
  - -1.8024096385542168
  - -1.8009592326139088
  - -1.7855421686746988
  train_neg_hamming_loss_macro:
  - -0.24939613526570048
  - -0.25180722891566265
  - -0.2506024096385542
  - -0.24640287769784172
  - -0.2524096385542169
  train_neg_hamming_loss_macro_oob:
  - -0.25181159420289856
  - -0.2524096385542169
  - -0.25180722891566265
  - -0.25119904076738614
  - -0.2524096385542169
  train_neg_hamming_loss_micro:
  - -0.24939613526570048
  - -0.25180722891566265
  - -0.25060240963855424
  - -0.24640287769784172
  - -0.2524096385542169
  train_neg_hamming_loss_micro_oob:
  - -0.25181159420289856
  - -0.2524096385542169
  - -0.25180722891566265
  - -0.2511990407673861
  - -0.2524096385542169
  train_neg_hamming_loss_samples:
  - -0.24939613526570048
  - -0.25180722891566265
  - -0.25060240963855424
  - -0.24640287769784172
  - -0.2524096385542169
  train_neg_hamming_loss_samples_oob:
  - -0.25181159420289856
  - -0.2524096385542169
  - -0.25180722891566265
  - -0.2511990407673861
  - -0.2524096385542169
  train_neg_hamming_loss_weighted:
  - -0.3249226705592048
  - -0.3262903643212468
  - -0.3270421398512711
  - -0.321165501965969
  - -0.32724501825919433
  train_neg_hamming_loss_weighted_oob:
  - -0.3282996790973019
  - -0.32724501825919433
  - -0.32864472243039144
  - -0.3278847089392925
  - -0.32724501825919433
  train_neg_label_ranking_loss:
  - -0.13506441223832527
  - -0.12791164658634538
  - -0.13795180722891567
  - -0.14148681055155873
  - -0.12831325301204818
  train_neg_label_ranking_loss_oob:
  - -0.28099838969404184
  - -0.2686746987951807
  - -0.2644578313253012
  - -0.26518784972022386
  - -0.258433734939759
  train_precision_macro:
  - 0.7506038647342994
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021584
  - 0.7475903614457832
  train_precision_macro_oob:
  - 0.7481884057971013
  - 0.7475903614457832
  - 0.7481927710843375
  - 0.748800959232614
  - 0.7475903614457832
  train_precision_micro:
  - 0.7506038647342995
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021583
  - 0.7475903614457832
  train_precision_micro_oob:
  - 0.7481884057971014
  - 0.7475903614457832
  - 0.7481927710843373
  - 0.7488009592326139
  - 0.7475903614457832
  train_precision_samples:
  - 0.7506038647342995
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021583
  - 0.7475903614457832
  train_precision_samples_oob:
  - 0.7481884057971014
  - 0.7475903614457832
  - 0.7481927710843373
  - 0.7488009592326139
  - 0.7475903614457832
  train_precision_weighted:
  - 0.6750773294407952
  - 0.6737096356787531
  - 0.6729578601487289
  - 0.6788344980340311
  - 0.6727549817408057
  train_precision_weighted_oob:
  - 0.6717003209026983
  - 0.6727549817408057
  - 0.6713552775696086
  - 0.6721152910607076
  - 0.6727549817408057
  train_recall_macro:
  - 0.7506038647342994
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021584
  - 0.7475903614457832
  train_recall_macro_oob:
  - 0.7481884057971013
  - 0.7475903614457832
  - 0.7481927710843375
  - 0.748800959232614
  - 0.7475903614457832
  train_recall_micro:
  - 0.7506038647342995
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021583
  - 0.7475903614457832
  train_recall_micro_oob:
  - 0.7481884057971014
  - 0.7475903614457832
  - 0.7481927710843373
  - 0.7488009592326139
  - 0.7475903614457832
  train_recall_samples:
  - 0.7506038647342995
  - 0.7481927710843373
  - 0.7493975903614458
  - 0.7535971223021583
  - 0.7475903614457832
  train_recall_samples_oob:
  - 0.7481884057971014
  - 0.7475903614457832
  - 0.7481927710843373
  - 0.7488009592326139
  - 0.7475903614457832
  train_recall_weighted:
  - 0.6750773294407952
  - 0.6737096356787531
  - 0.6729578601487289
  - 0.6788344980340311
  - 0.6727549817408057
  train_recall_weighted_oob:
  - 0.6717003209026983
  - 0.6727549817408057
  - 0.6713552775696086
  - 0.6721152910607076
  - 0.6727549817408057
  train_roc_auc_macro:
  - 0.8579018354429133
  - 0.8720743739914507
  - 0.8443075931266701
  - 0.8542011907609797
  - 0.8695192866305315
  train_roc_auc_macro_oob:
  - 0.6420256956765118
  - 0.6339680805335492
  - 0.6169890729348693
  - 0.6221789439722201
  - 0.6437151528149261
  train_roc_auc_micro:
  - 0.8934566632408358
  - 0.8975612476657711
  - 0.8910674248202852
  - 0.8841612669610629
  - 0.893518776719829
  train_roc_auc_micro_oob:
  - 0.747769822882614
  - 0.7446896893913023
  - 0.7563352826510721
  - 0.7529211913683692
  - 0.7507610884285711
  train_roc_auc_samples:
  - 0.8649355877616747
  - 0.8720883534136546
  - 0.8620481927710844
  - 0.8585131894484412
  - 0.8716867469879518
  train_roc_auc_samples_oob:
  - 0.7190016103059582
  - 0.7313253012048193
  - 0.7355421686746988
  - 0.7348121502797761
  - 0.7415662650602409
  train_roc_auc_weighted:
  - 0.8564380582100265
  - 0.8684962471295543
  - 0.8550637400113049
  - 0.8422044356430063
  - 0.8584092514559323
  train_roc_auc_weighted_oob:
  - 0.6270226721477415
  - 0.6267659183118173
  - 0.6417358530395358
  - 0.630085749675213
  - 0.628327070931116
start: 2023-12-21 21:16:46.018357
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
