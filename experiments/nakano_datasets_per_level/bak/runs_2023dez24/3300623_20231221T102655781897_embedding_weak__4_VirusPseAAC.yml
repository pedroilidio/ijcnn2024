active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+AmZmZmZn5v4CZmZmZmfm/QDMzMzMzA0AAMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:27:25.806147
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__4
  params: {}
hash: 3300623c574e55a99fee87e06fdc0a9deebafe987907699ee970c9ca073eb137
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3300623_20231221T102655781897_embedding_weak__4_VirusPseAAC.yml
results:
  fit_time:
  - 22.317014455795288
  - 21.759475469589233
  - 22.310631036758423
  - 22.68445587158203
  - 22.619690656661987
  score_time:
  - 2.0087528228759766
  - 2.1276118755340576
  - 2.104269504547119
  - 2.025851011276245
  - 2.280153751373291
  test_average_precision_macro:
  - 0.3701387604897684
  - 0.4328676042971427
  - 0.2728182860535268
  - 0.4691685578268266
  - 0.5085287652277958
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5360571667911334
  - 0.45092622076043476
  - 0.35596223214287
  - 0.4841176089316306
  - 0.5809275311566535
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7175
  - 0.6798449612403101
  - 0.6352067183462533
  - 0.6957264957264957
  - 0.7311507936507936
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4970757021587842
  - 0.4498487077376335
  - 0.3484913735706764
  - 0.4848084733473547
  - 0.5750549489586385
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8125
  - 0.8023255813953488
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968255
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8125
  - 0.8023255813953488
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968254
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8125
  - 0.802325581395349
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968255
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7151960784313726
  - 0.689767441860465
  - 0.613953488372093
  - 0.6764102564102563
  - 0.7329598506069094
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7030435611239549
  - 0.6948261698199413
  - 0.6650554666330891
  - 0.6731439453539161
  - 0.719991333237036
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6842105263157895
  - 0.6699029126213593
  - 0.6226415094339622
  - 0.647887323943662
  - 0.7027027027027027
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7011904761904763
  - 0.6838316722037653
  - 0.6406423034330012
  - 0.6556776556776558
  - 0.7154195011337869
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5718514516951037
  - 0.5465002424176274
  - 0.47576924477482857
  - 0.5312068035799298
  - 0.5894545887111164
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7174999999999999
  - 0.6798449612403101
  - 0.6352067183462531
  - 0.6957264957264957
  - 0.7311507936507936
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.08832466574168833
  - 0.013848369126862702
  - -0.035938238805566396
  - 0.008649343573251492
  - 0.11849512027180564
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.30143725042173425
  - 0.1560288647709453
  - 0.09645972567771927
  - 0.06485625901047318
  - 0.335566747483726
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.19162277660168378
  - 0.09572622711667064
  - 0.08523048986203145
  - 0.020512820512820513
  - 0.15791560790556372
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.18023665455655946
  - 0.028250673018799913
  - -0.07331400716335545
  - 0.013754727863355552
  - 0.24433601161484025
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7890087341240689
  - 0.7633010948513819
  - 0.7276103162038577
  - 0.7776978047379479
  - 0.7977235931825712
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.225
  - -2.13953488372093
  - -2.372093023255814
  - -2.358974358974359
  - -2.1904761904761907
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18750000000000003
  - -0.19767441860465115
  - -0.23255813953488372
  - -0.2136752136752137
  - -0.17460317460317457
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1875
  - -0.19767441860465115
  - -0.23255813953488372
  - -0.21367521367521367
  - -0.1746031746031746
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1875
  - -0.19767441860465113
  - -0.23255813953488372
  - -0.2136752136752137
  - -0.17460317460317462
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.28480392156862744
  - -0.3102325581395349
  - -0.38604651162790704
  - -0.3235897435897436
  - -0.26704014939309056
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19277777777777777
  - -0.19186046511627908
  - -0.24586563307493536
  - -0.20512820512820512
  - -0.20119047619047617
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8125
  - 0.8023255813953488
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968255
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8125
  - 0.8023255813953488
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968254
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8125
  - 0.802325581395349
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968255
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7151960784313726
  - 0.689767441860465
  - 0.613953488372093
  - 0.6764102564102563
  - 0.7329598506069094
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8125
  - 0.8023255813953488
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968255
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8125
  - 0.8023255813953488
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968254
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8125
  - 0.802325581395349
  - 0.7674418604651163
  - 0.7863247863247863
  - 0.8253968253968255
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7151960784313726
  - 0.689767441860465
  - 0.613953488372093
  - 0.6764102564102563
  - 0.7329598506069094
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.628904364516072
  - 0.7032825232251344
  - 0.5651170724700136
  - 0.6622267731203153
  - 0.685577880274917
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.801950409793547
  - 0.8061538461538461
  - 0.7573076923076922
  - 0.7961956521739131
  - 0.8077260755048288
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8072222222222223
  - 0.8081395348837209
  - 0.7541343669250646
  - 0.7948717948717948
  - 0.7988095238095237
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6454239734756074
  - 0.6628593884691446
  - 0.514029304029304
  - 0.6256708780350084
  - 0.6829559192097893
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9757363207400614
  - 0.9432879684647086
  - 0.8815665213690528
  - 0.9183747767319131
  - 0.9289194903158581
  train_average_precision_macro_oob:
  - 0.4103442056010727
  - 0.446334318643655
  - 0.42029336559366065
  - 0.4078083629032272
  - 0.4237594148389372
  train_average_precision_micro:
  - 0.904950506828399
  - 0.8841382688119956
  - 0.796890493687573
  - 0.8867433128307901
  - 0.9157244855141462
  train_average_precision_micro_oob:
  - 0.569808232167361
  - 0.6498095715420539
  - 0.5428017473325176
  - 0.6095796559409868
  - 0.6170608436010572
  train_average_precision_samples:
  - 0.8967065868263473
  - 0.9006097560975609
  - 0.8445121951219512
  - 0.8950396825396826
  - 0.9153535353535354
  train_average_precision_samples_oob:
  - 0.7198935462408517
  - 0.7370257452574526
  - 0.7284044715447155
  - 0.7266203703703704
  - 0.7308922558922559
  train_average_precision_weighted:
  - 0.9938078876471194
  - 0.9762121944475883
  - 0.9063698319681989
  - 0.9697572081732508
  - 0.9756612125541472
  train_average_precision_weighted_oob:
  - 0.536922523157894
  - 0.6276183311940292
  - 0.5508189249390404
  - 0.5816032613611304
  - 0.5822029922940426
  train_f1_macro:
  - 0.9221556886227544
  - 0.9227642276422764
  - 0.9115853658536586
  - 0.9236111111111112
  - 0.9272727272727272
  train_f1_macro_oob:
  - 0.8213572854291417
  - 0.8394308943089431
  - 0.8201219512195123
  - 0.8273809523809524
  - 0.8171717171717172
  train_f1_micro:
  - 0.9221556886227545
  - 0.9227642276422764
  - 0.9115853658536586
  - 0.9236111111111112
  - 0.9272727272727272
  train_f1_micro_oob:
  - 0.8213572854291418
  - 0.8394308943089431
  - 0.8201219512195121
  - 0.8273809523809523
  - 0.8171717171717172
  train_f1_samples:
  - 0.9221556886227545
  - 0.9227642276422765
  - 0.9115853658536586
  - 0.9236111111111113
  - 0.9272727272727272
  train_f1_samples_oob:
  - 0.8213572854291414
  - 0.8394308943089429
  - 0.820121951219512
  - 0.8273809523809523
  - 0.8171717171717171
  train_f1_weighted:
  - 0.9357702505436888
  - 0.938933832407631
  - 0.9168075344119777
  - 0.9376473361621877
  - 0.948560229157244
  train_f1_weighted_oob:
  - 0.7305389221556886
  - 0.7681115672542864
  - 0.7313450857280851
  - 0.7398632720414899
  - 0.7244384139906527
  train_jaccard_macro:
  - 0.8589170322877276
  - 0.8603637160891321
  - 0.8399032964160867
  - 0.8611601025879138
  - 0.868561138867344
  train_jaccard_macro_oob:
  - 0.7147516692400294
  - 0.7361420632614917
  - 0.7118769406922163
  - 0.7219320465769407
  - 0.7092204280857839
  train_jaccard_micro:
  - 0.8555555555555555
  - 0.8566037735849057
  - 0.8375350140056023
  - 0.8580645161290322
  - 0.864406779661017
  train_jaccard_micro_oob:
  - 0.6968670618120237
  - 0.723292469352014
  - 0.6950904392764858
  - 0.7055837563451777
  - 0.6908625106746371
  train_jaccard_samples:
  - 0.8704020530367834
  - 0.8736933797909407
  - 0.8571428571428571
  - 0.8740079365079364
  - 0.8792207792207791
  train_jaccard_samples_oob:
  - 0.7095808383233535
  - 0.7385307781649245
  - 0.7168989547038328
  - 0.7186791383219955
  - 0.7027417027417028
  train_jaccard_weighted:
  - 0.8825491532008164
  - 0.888646265576872
  - 0.848539596682397
  - 0.8855487581659526
  - 0.9066704059258557
  train_jaccard_weighted_oob:
  - 0.5891083653954178
  - 0.6342062280860732
  - 0.5889889061233622
  - 0.5994582410064064
  - 0.5823649307179162
  train_label_ranking_average_precision_score:
  - 0.8967065868263475
  - 0.9006097560975609
  - 0.8445121951219507
  - 0.8950396825396826
  - 0.9153535353535354
  train_label_ranking_average_precision_score_oob:
  - 0.7198935462408514
  - 0.7370257452574523
  - 0.7284044715447152
  - 0.7266203703703703
  - 0.7308922558922557
  train_matthews_corrcoef_macro:
  - 0.30697696350927856
  - 0.3103285396014039
  - 0.2900565012908858
  - 0.3068361690484334
  - 0.3190387346379458
  train_matthews_corrcoef_macro_oob:
  - 0.09078762747148861
  - 0.1435251396648923
  - 0.09676390292128471
  - 0.1087868433371343
  - 0.08956630563212138
  train_matthews_corrcoef_micro:
  - 0.7461142725016765
  - 0.7523048351975843
  - 0.711483758051377
  - 0.7503930611395178
  - 0.7668911964769615
  train_matthews_corrcoef_micro_oob:
  - 0.29163554213028947
  - 0.418171680244716
  - 0.3577396686277964
  - 0.3303052457306993
  - 0.27742310513360857
  train_matthews_corrcoef_samples:
  - 0.6402176593259743
  - 0.6534684726264366
  - 0.6224321688842881
  - 0.6455144057439857
  - 0.6443430184051812
  train_matthews_corrcoef_samples_oob:
  - 0.14956308816547703
  - 0.2673868173376241
  - 0.3015839365712821
  - 0.1762469717599306
  - 0.13169589168566484
  train_matthews_corrcoef_weighted:
  - 0.6234134897991463
  - 0.6318878219926654
  - 0.5895356763774968
  - 0.6291718515527733
  - 0.6480277180321106
  train_matthews_corrcoef_weighted_oob:
  - 0.18297923489856396
  - 0.28991497522073306
  - 0.19796325376448318
  - 0.22204870946776878
  - 0.1805364025453219
  train_ndgc:
  - 0.9247980805217457
  - 0.9272470786231156
  - 0.8863437595402518
  - 0.923630021230492
  - 0.9393629967082447
  train_ndgc_oob:
  - 0.7921342572162093
  - 0.8039020388341651
  - 0.7982866980555717
  - 0.7955508015857156
  - 0.8003715625008117
  train_neg_coverage_error:
  - -1.5089820359281436
  - -1.5426829268292683
  - -1.6951219512195121
  - -1.5416666666666667
  - -1.4848484848484849
  train_neg_coverage_error_oob:
  - -2.251497005988024
  - -2.2621951219512195
  - -2.201219512195122
  - -2.1904761904761907
  - -2.1454545454545455
  train_neg_hamming_loss_macro:
  - -0.07784431137724551
  - -0.0772357723577236
  - -0.08841463414634147
  - -0.07638888888888888
  - -0.07272727272727272
  train_neg_hamming_loss_macro_oob:
  - -0.1786427145708583
  - -0.1605691056910569
  - -0.17987804878048783
  - -0.1726190476190476
  - -0.1828282828282828
  train_neg_hamming_loss_micro:
  - -0.07784431137724551
  - -0.07723577235772358
  - -0.08841463414634146
  - -0.0763888888888889
  - -0.07272727272727272
  train_neg_hamming_loss_micro_oob:
  - -0.17864271457085829
  - -0.16056910569105692
  - -0.1798780487804878
  - -0.17261904761904762
  - -0.18282828282828284
  train_neg_hamming_loss_samples:
  - -0.07784431137724551
  - -0.07723577235772357
  - -0.08841463414634144
  - -0.07638888888888888
  - -0.07272727272727272
  train_neg_hamming_loss_samples_oob:
  - -0.17864271457085829
  - -0.1605691056910569
  - -0.17987804878048777
  - -0.17261904761904762
  - -0.1828282828282828
  train_neg_hamming_loss_weighted:
  - -0.06422974945631127
  - -0.061066167592369
  - -0.08319246558802222
  - -0.06235266383781235
  - -0.051439770842755916
  train_neg_hamming_loss_weighted_oob:
  - -0.2694610778443114
  - -0.2318884327457136
  - -0.26865491427191496
  - -0.26013672795851017
  - -0.27556158600934716
  train_neg_label_ranking_loss:
  - -0.05889886892880906
  - -0.06036585365853659
  - -0.08978658536585367
  - -0.06450066137566138
  - -0.048939393939393935
  train_neg_label_ranking_loss_oob:
  - -0.20618762475049904
  - -0.2054539295392954
  - -0.19214092140921413
  - -0.19945436507936512
  - -0.18459595959595956
  train_precision_macro:
  - 0.9221556886227544
  - 0.9227642276422764
  - 0.9115853658536586
  - 0.9236111111111112
  - 0.9272727272727272
  train_precision_macro_oob:
  - 0.8213572854291417
  - 0.8394308943089431
  - 0.8201219512195123
  - 0.8273809523809524
  - 0.8171717171717172
  train_precision_micro:
  - 0.9221556886227545
  - 0.9227642276422764
  - 0.9115853658536586
  - 0.9236111111111112
  - 0.9272727272727272
  train_precision_micro_oob:
  - 0.8213572854291418
  - 0.8394308943089431
  - 0.8201219512195121
  - 0.8273809523809523
  - 0.8171717171717172
  train_precision_samples:
  - 0.9221556886227545
  - 0.9227642276422765
  - 0.9115853658536586
  - 0.9236111111111113
  - 0.9272727272727272
  train_precision_samples_oob:
  - 0.8213572854291414
  - 0.8394308943089429
  - 0.820121951219512
  - 0.8273809523809523
  - 0.8171717171717171
  train_precision_weighted:
  - 0.9357702505436888
  - 0.938933832407631
  - 0.9168075344119777
  - 0.9376473361621877
  - 0.948560229157244
  train_precision_weighted_oob:
  - 0.7305389221556886
  - 0.7681115672542864
  - 0.7313450857280851
  - 0.7398632720414899
  - 0.7244384139906527
  train_recall_macro:
  - 0.9221556886227544
  - 0.9227642276422764
  - 0.9115853658536586
  - 0.9236111111111112
  - 0.9272727272727272
  train_recall_macro_oob:
  - 0.8213572854291417
  - 0.8394308943089431
  - 0.8201219512195123
  - 0.8273809523809524
  - 0.8171717171717172
  train_recall_micro:
  - 0.9221556886227545
  - 0.9227642276422764
  - 0.9115853658536586
  - 0.9236111111111112
  - 0.9272727272727272
  train_recall_micro_oob:
  - 0.8213572854291418
  - 0.8394308943089431
  - 0.8201219512195121
  - 0.8273809523809523
  - 0.8171717171717172
  train_recall_samples:
  - 0.9221556886227545
  - 0.9227642276422765
  - 0.9115853658536586
  - 0.9236111111111113
  - 0.9272727272727272
  train_recall_samples_oob:
  - 0.8213572854291414
  - 0.8394308943089429
  - 0.820121951219512
  - 0.8273809523809523
  - 0.8171717171717171
  train_recall_weighted:
  - 0.9357702505436888
  - 0.938933832407631
  - 0.9168075344119777
  - 0.9376473361621877
  - 0.948560229157244
  train_recall_weighted_oob:
  - 0.7305389221556886
  - 0.7681115672542864
  - 0.7313450857280851
  - 0.7398632720414899
  - 0.7244384139906527
  train_roc_auc_macro:
  - 0.9984274302452687
  - 0.9949294118087476
  - 0.9801293729017987
  - 0.9946821492634849
  - 0.9950969720782714
  train_roc_auc_macro_oob:
  - 0.697696518602096
  - 0.7336793520023818
  - 0.6856654109850068
  - 0.7249413875256429
  - 0.7331558008879783
  train_roc_auc_micro:
  - 0.9625654499040379
  - 0.9574839836924869
  - 0.9447912182522601
  - 0.9574601380733606
  - 0.9657101059972634
  train_roc_auc_micro_oob:
  - 0.8116533437680511
  - 0.8263718315565572
  - 0.8105644324023196
  - 0.8209345748470629
  - 0.8309529664730845
  train_roc_auc_samples:
  - 0.941101131071191
  - 0.9396341463414636
  - 0.9102134146341462
  - 0.9354993386243386
  - 0.9510606060606062
  train_roc_auc_samples_oob:
  - 0.793812375249501
  - 0.7945460704607046
  - 0.8078590785907859
  - 0.800545634920635
  - 0.8154040404040404
  train_roc_auc_weighted:
  - 0.9990396223984177
  - 0.9936308564893686
  - 0.969028307824616
  - 0.9945363695726298
  - 0.9980833450621329
  train_roc_auc_weighted_oob:
  - 0.7186808949312563
  - 0.7741618271035448
  - 0.7103259199891984
  - 0.7472270036572012
  - 0.7630798082067286
start: 2023-12-21 10:26:55.781897
wrapper: null
