active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz478AZ2ZmZmb2PwCcmZmZmdk/AJyZmZmZ2T8AmZmZmZn5vw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 19:13:50.358815
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__3
  params: {}
hash: ec636cd56fdb2eec77ace92c81f789be9c9c4bacc6babf3aab4757e4245b3d84
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ec636cd_20231222T190948062946_embedding_proba_weak__3_scene.yml
results:
  fit_time:
  - 154.3599100112915
  - 167.03092694282532
  - 172.2109091281891
  - 166.06163382530212
  - 175.5671901702881
  score_time:
  - 11.678868770599365
  - 9.98462700843811
  - 11.509944677352905
  - 10.809877872467041
  - 11.015928030014038
  test_average_precision_macro:
  - 0.8506840158706023
  - 0.8326387078324906
  - 0.8228941692697146
  - 0.856310166749282
  - 0.8551992985697668
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8516777253679767
  - 0.829594114934463
  - 0.8260926475720751
  - 0.8570330991965822
  - 0.8582911807663371
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.887136929460581
  - 0.872361111111111
  - 0.8633749133749135
  - 0.8847020097020096
  - 0.8997929606625259
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8373729470155004
  - 0.8223242743740088
  - 0.8117136526690549
  - 0.8449134274097913
  - 0.8469387983959077
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9215076071922547
  - 0.9145833333333333
  - 0.9164934164934166
  - 0.9216909216909218
  - 0.9292615596963424
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9215076071922544
  - 0.9145833333333333
  - 0.9164934164934165
  - 0.9216909216909217
  - 0.9292615596963423
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9215076071922547
  - 0.9145833333333333
  - 0.9164934164934165
  - 0.9216909216909217
  - 0.9292615596963424
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9162809104645864
  - 0.9098584142394822
  - 0.9120264439413375
  - 0.9171259810794695
  - 0.9256177206487766
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8579375760335397
  - 0.8452174417592527
  - 0.84846231699389
  - 0.8573842353179771
  - 0.870201037269042
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8544405258095543
  - 0.8426103646833013
  - 0.8458586504637032
  - 0.8547557840616966
  - 0.867869803416049
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8745801225054337
  - 0.8647321428571428
  - 0.867933867933868
  - 0.8766953766953766
  - 0.8867692004337967
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8493168155394315
  - 0.837385228647237
  - 0.8410833230186056
  - 0.8496942810009894
  - 0.8639123610508654
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8871369294605805
  - 0.8723611111111109
  - 0.863374913374913
  - 0.8847020097020094
  - 0.8997929606625259
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7238549824602533
  - 0.6969135078400867
  - 0.7051321388164
  - 0.7253656768327864
  - 0.7496087492546076
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7160909789661148
  - 0.6893757724646327
  - 0.6986617793470564
  - 0.7171090699864311
  - 0.7443409358011078
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6732155471515087
  - 0.6469325334726224
  - 0.661205282175522
  - 0.6812506573237156
  - 0.6967164010450121
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7077213020423303
  - 0.6827818843715127
  - 0.6923065657467641
  - 0.7122146111302746
  - 0.7388332579679355
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9172605024999975
  - 0.9060350151715585
  - 0.8993194805287588
  - 0.9148738717842503
  - 0.9262003038567759
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4087136929460582
  - -1.425
  - -1.4823284823284824
  - -1.3970893970893972
  - -1.3643892339544514
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0784923928077455
  - -0.08541666666666665
  - -0.0835065835065835
  - -0.07830907830907831
  - -0.0707384403036577
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0784923928077455
  - -0.08541666666666667
  - -0.0835065835065835
  - -0.07830907830907831
  - -0.0707384403036577
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07849239280774549
  - -0.08541666666666667
  - -0.08350658350658352
  - -0.07830907830907832
  - -0.0707384403036577
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08371908953541361
  - -0.0901415857605178
  - -0.08797355605866243
  - -0.08287401892053055
  - -0.07438227935122346
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06327800829875518
  - -0.06807291666666666
  - -0.07884615384615384
  - -0.06408523908523908
  - -0.05709109730848861
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9215076071922547
  - 0.9145833333333333
  - 0.9164934164934166
  - 0.9216909216909218
  - 0.9292615596963424
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9215076071922544
  - 0.9145833333333333
  - 0.9164934164934165
  - 0.9216909216909217
  - 0.9292615596963423
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9215076071922547
  - 0.9145833333333333
  - 0.9164934164934165
  - 0.9216909216909217
  - 0.9292615596963424
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9162809104645864
  - 0.9098584142394822
  - 0.9120264439413375
  - 0.9171259810794695
  - 0.9256177206487766
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9215076071922547
  - 0.9145833333333333
  - 0.9164934164934166
  - 0.9216909216909218
  - 0.9292615596963424
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9215076071922544
  - 0.9145833333333333
  - 0.9164934164934165
  - 0.9216909216909217
  - 0.9292615596963423
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9215076071922547
  - 0.9145833333333333
  - 0.9164934164934165
  - 0.9216909216909217
  - 0.9292615596963424
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9162809104645864
  - 0.9098584142394822
  - 0.9120264439413375
  - 0.9171259810794695
  - 0.9256177206487766
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9449792151656425
  - 0.941761607106704
  - 0.940512068938801
  - 0.9527369757173115
  - 0.9542466041011476
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9517078371239708
  - 0.9464652394343069
  - 0.9457797485738173
  - 0.9575180715009977
  - 0.959072547938094
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9367219917012448
  - 0.9319270833333333
  - 0.9211538461538461
  - 0.9359147609147609
  - 0.9429089026915114
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.939060558608693
  - 0.9370061089311181
  - 0.9349986183741255
  - 0.9484445937201225
  - 0.9500414465147139
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9876681738825885
  - 0.987868785019943
  - 0.9872196511194077
  - 0.987051058109086
  - 0.9891047468254569
  train_average_precision_macro_oob:
  - 0.9616782865638825
  - 0.9617776441757332
  - 0.9588608406986482
  - 0.9580358648641055
  - 0.9626316134713032
  train_average_precision_micro:
  - 0.986883839139858
  - 0.9862090892238896
  - 0.9861579534408051
  - 0.98642776921884
  - 0.9878594567340813
  train_average_precision_micro_oob:
  - 0.9595816290494988
  - 0.9583820524725023
  - 0.9569495350873221
  - 0.9565939217762609
  - 0.9597962829964959
  train_average_precision_samples:
  - 0.9862337662337662
  - 0.9838263276249785
  - 0.985289027345102
  - 0.9832987192800278
  - 0.9860966735966736
  train_average_precision_samples_oob:
  - 0.9598095238095239
  - 0.9598771838782216
  - 0.9579093111803393
  - 0.9577362409138109
  - 0.9564362439362439
  train_average_precision_weighted:
  - 0.9873150064660489
  - 0.9873208048424731
  - 0.9865361726313406
  - 0.9863937420775065
  - 0.9884792492933435
  train_average_precision_weighted_oob:
  - 0.9604702481430997
  - 0.9603734447987144
  - 0.9573447881125635
  - 0.9565355511924776
  - 0.9612076138310912
  train_f1_macro:
  - 0.9773160173160172
  - 0.9769935997232313
  - 0.9766355140186915
  - 0.9768085842852199
  - 0.977997227997228
  train_f1_macro_oob:
  - 0.9580086580086581
  - 0.9580522400968691
  - 0.9579439252336449
  - 0.957251644167532
  - 0.959112959112959
  train_f1_micro:
  - 0.9773160173160174
  - 0.9769935997232313
  - 0.9766355140186916
  - 0.9768085842852198
  - 0.977997227997228
  train_f1_micro_oob:
  - 0.958008658008658
  - 0.9580522400968691
  - 0.9579439252336449
  - 0.9572516441675321
  - 0.9591129591129591
  train_f1_samples:
  - 0.9773160173160174
  - 0.9769935997232312
  - 0.9766355140186916
  - 0.9768085842852199
  - 0.9779972279972279
  train_f1_samples_oob:
  - 0.9580086580086581
  - 0.9580522400968692
  - 0.9579439252336449
  - 0.9572516441675321
  - 0.9591129591129592
  train_f1_weighted:
  - 0.9766867401717353
  - 0.9761998952089429
  - 0.9760156245292456
  - 0.9763225822317984
  - 0.977394498439491
  train_f1_weighted_oob:
  - 0.9569409486931268
  - 0.9565412934425367
  - 0.9567480833388566
  - 0.9563162784254738
  - 0.9582507314727924
  train_jaccard_macro:
  - 0.9557456600250359
  - 0.9551204230500971
  - 0.9544392359795776
  - 0.9547576270022996
  - 0.957034106108686
  train_jaccard_macro_oob:
  - 0.9195736892475345
  - 0.91976515214965
  - 0.9194964255150464
  - 0.9181580541123963
  - 0.9215750968000057
  train_jaccard_micro:
  - 0.9556383338977311
  - 0.9550219817382483
  - 0.954337899543379
  - 0.9546684709066305
  - 0.956941854551619
  train_jaccard_micro_oob:
  - 0.9194017449106772
  - 0.9194820287208434
  - 0.9192825112107623
  - 0.9180082987551867
  - 0.9214380825565912
  train_jaccard_samples:
  - 0.9628818800247372
  - 0.9624014629204043
  - 0.9616896602877911
  - 0.962184146763586
  - 0.9637288387288387
  train_jaccard_samples_oob:
  - 0.9310080395794681
  - 0.9311784911162181
  - 0.9311798447312466
  - 0.9298818177322851
  - 0.9327665577665577
  train_jaccard_weighted:
  - 0.9545376088362724
  - 0.9536053361466211
  - 0.953251210625427
  - 0.9538211236419998
  - 0.9558767117049302
  train_jaccard_weighted_oob:
  - 0.9176063660354439
  - 0.9170056908770953
  - 0.917295152154695
  - 0.916431267571651
  - 0.9199810318115471
  train_label_ranking_average_precision_score:
  - 0.9862337662337661
  - 0.9838263276249783
  - 0.9852890273451019
  - 0.9832987192800277
  - 0.9860966735966735
  train_label_ranking_average_precision_score_oob:
  - 0.9598095238095236
  - 0.9598771838782213
  - 0.9579093111803391
  - 0.9577362409138107
  - 0.9564362439362437
  train_matthews_corrcoef_macro:
  - 0.9224135775416348
  - 0.9217122439978888
  - 0.9199419702656503
  - 0.9202663347283039
  - 0.9247270839893061
  train_matthews_corrcoef_macro_oob:
  - 0.8537313477081264
  - 0.8551142281871643
  - 0.8538290325901513
  - 0.8506085503656431
  - 0.8573123854399718
  train_matthews_corrcoef_micro:
  - 0.9214466546776987
  - 0.9203672317476039
  - 0.9190759744988707
  - 0.9197199305221843
  - 0.9239134029255245
  train_matthews_corrcoef_micro_oob:
  - 0.8521538278871179
  - 0.8524313410566658
  - 0.8519794357128454
  - 0.8494784056815013
  - 0.856294177490716
  train_matthews_corrcoef_samples:
  - 0.9093409758431302
  - 0.9086741830472282
  - 0.9056413830387383
  - 0.9069322722585104
  - 0.911534479966863
  train_matthews_corrcoef_samples_oob:
  - 0.8165676710643467
  - 0.8186430837212773
  - 0.8156657915809866
  - 0.8114398351726886
  - 0.8212975774599017
  train_matthews_corrcoef_weighted:
  - 0.9210172946396363
  - 0.9198563174266811
  - 0.9185996803956474
  - 0.9192884513172036
  - 0.9234236163364001
  train_matthews_corrcoef_weighted_oob:
  - 0.8516050720664833
  - 0.8515744223483517
  - 0.8512531608350266
  - 0.8488767431230343
  - 0.8558455926615508
  train_ndgc:
  - 0.9898990320240003
  - 0.9880543739047114
  - 0.9891934404983241
  - 0.9876912193999177
  - 0.9897792508909302
  train_ndgc_oob:
  - 0.9707096477329077
  - 0.9708738955293243
  - 0.969252316225253
  - 0.9691477080848256
  - 0.9682364831524869
  train_neg_coverage_error:
  - -1.1028571428571428
  - -1.107420861442657
  - -1.1059190031152648
  - -1.1085150571131879
  - -1.1034303534303533
  train_neg_coverage_error_oob:
  - -1.191168831168831
  - -1.203425012973534
  - -1.2024922118380061
  - -1.2071651090342679
  - -1.2063409563409564
  train_neg_hamming_loss_macro:
  - -0.022683982683982685
  - -0.023006400276768726
  - -0.023364485981308414
  - -0.0231914157147802
  - -0.022002772002772005
  train_neg_hamming_loss_macro_oob:
  - -0.04199134199134199
  - -0.04194775990313094
  - -0.042056074766355145
  - -0.04274835583246798
  - -0.04088704088704089
  train_neg_hamming_loss_micro:
  - -0.022683982683982685
  - -0.023006400276768726
  - -0.02336448598130841
  - -0.0231914157147802
  - -0.022002772002772
  train_neg_hamming_loss_micro_oob:
  - -0.04199134199134199
  - -0.041947759903130946
  - -0.04205607476635514
  - -0.042748355832467985
  - -0.040887040887040885
  train_neg_hamming_loss_samples:
  - -0.02268398268398268
  - -0.023006400276768722
  - -0.02336448598130841
  - -0.0231914157147802
  - -0.022002772002772
  train_neg_hamming_loss_samples_oob:
  - -0.041991341991341996
  - -0.04194775990313094
  - -0.04205607476635514
  - -0.04274835583246798
  - -0.040887040887040885
  train_neg_hamming_loss_weighted:
  - -0.023313259828264668
  - -0.023800104791057163
  - -0.023984375470754476
  - -0.023677417768201613
  - -0.022605501560508817
  train_neg_hamming_loss_weighted_oob:
  - -0.04305905130687319
  - -0.04345870655746335
  - -0.04325191666114315
  - -0.0436837215745262
  - -0.04174926852720757
  train_neg_label_ranking_loss:
  - -0.005909090909090909
  - -0.006694343539180073
  - -0.006425233644859814
  - -0.00686656282450675
  - -0.005821205821205821
  train_neg_label_ranking_loss_oob:
  - -0.022350649350649354
  - -0.024026984950700568
  - -0.024454828660436138
  - -0.025077881619937698
  - -0.02494802494802495
  train_precision_macro:
  - 0.9773160173160172
  - 0.9769935997232313
  - 0.9766355140186915
  - 0.9768085842852199
  - 0.977997227997228
  train_precision_macro_oob:
  - 0.9580086580086581
  - 0.9580522400968691
  - 0.9579439252336449
  - 0.957251644167532
  - 0.959112959112959
  train_precision_micro:
  - 0.9773160173160174
  - 0.9769935997232313
  - 0.9766355140186916
  - 0.9768085842852198
  - 0.977997227997228
  train_precision_micro_oob:
  - 0.958008658008658
  - 0.9580522400968691
  - 0.9579439252336449
  - 0.9572516441675321
  - 0.9591129591129591
  train_precision_samples:
  - 0.9773160173160174
  - 0.9769935997232312
  - 0.9766355140186916
  - 0.9768085842852199
  - 0.9779972279972279
  train_precision_samples_oob:
  - 0.9580086580086581
  - 0.9580522400968692
  - 0.9579439252336449
  - 0.9572516441675321
  - 0.9591129591129592
  train_precision_weighted:
  - 0.9766867401717353
  - 0.9761998952089429
  - 0.9760156245292456
  - 0.9763225822317984
  - 0.977394498439491
  train_precision_weighted_oob:
  - 0.9569409486931268
  - 0.9565412934425367
  - 0.9567480833388566
  - 0.9563162784254738
  - 0.9582507314727924
  train_recall_macro:
  - 0.9773160173160172
  - 0.9769935997232313
  - 0.9766355140186915
  - 0.9768085842852199
  - 0.977997227997228
  train_recall_macro_oob:
  - 0.9580086580086581
  - 0.9580522400968691
  - 0.9579439252336449
  - 0.957251644167532
  - 0.959112959112959
  train_recall_micro:
  - 0.9773160173160174
  - 0.9769935997232313
  - 0.9766355140186916
  - 0.9768085842852198
  - 0.977997227997228
  train_recall_micro_oob:
  - 0.958008658008658
  - 0.9580522400968691
  - 0.9579439252336449
  - 0.9572516441675321
  - 0.9591129591129591
  train_recall_samples:
  - 0.9773160173160174
  - 0.9769935997232312
  - 0.9766355140186916
  - 0.9768085842852199
  - 0.9779972279972279
  train_recall_samples_oob:
  - 0.9580086580086581
  - 0.9580522400968692
  - 0.9579439252336449
  - 0.9572516441675321
  - 0.9591129591129592
  train_recall_weighted:
  - 0.9766867401717353
  - 0.9761998952089429
  - 0.9760156245292456
  - 0.9763225822317984
  - 0.977394498439491
  train_recall_weighted_oob:
  - 0.9569409486931268
  - 0.9565412934425367
  - 0.9567480833388566
  - 0.9563162784254738
  - 0.9582507314727924
  train_roc_auc_macro:
  - 0.9978448755122719
  - 0.9977780369402464
  - 0.9977697646054455
  - 0.9975951036467272
  - 0.9980252911564413
  train_roc_auc_macro_oob:
  - 0.9880819995370888
  - 0.987169080656339
  - 0.9870042267022359
  - 0.9861622828707448
  - 0.987809746903202
  train_roc_auc_micro:
  - 0.9977906438846615
  - 0.9976560989065799
  - 0.9976953480483135
  - 0.9976074965701839
  - 0.9979593096294703
  train_roc_auc_micro_oob:
  - 0.9883980478866327
  - 0.987195624690815
  - 0.9870307520687847
  - 0.986454461379651
  - 0.9879145185816153
  train_roc_auc_samples:
  - 0.9940909090909091
  - 0.9933056564608199
  - 0.9935747663551402
  - 0.9931334371754933
  - 0.9941787941787943
  train_roc_auc_samples_oob:
  - 0.9776493506493507
  - 0.9759730150492996
  - 0.9755451713395639
  - 0.9749221183800624
  - 0.975051975051975
  train_roc_auc_weighted:
  - 0.9977759097560519
  - 0.9976768361798415
  - 0.9976566987557398
  - 0.9974688981146513
  - 0.9979225888499067
  train_roc_auc_weighted_oob:
  - 0.9874117477022154
  - 0.9864961039863855
  - 0.9863671210391546
  - 0.9854634467340317
  - 0.9871342657601728
start: 2023-12-22 19:09:48.062946
wrapper: null
