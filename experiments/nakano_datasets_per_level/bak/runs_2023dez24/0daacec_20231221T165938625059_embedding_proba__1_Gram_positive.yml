active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AMzMzMzPzvwCamZmZmek/AJqZmZmZ6T8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:59:49.545566
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__1
  params: {}
hash: 0daaceca60ff1c8dfe13ec600cd16c51a95bc088e065932996b878ac598ec341
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0daacec_20231221T165938625059_embedding_proba__1_Gram_positive.yml
results:
  fit_time:
  - 2.6670329570770264
  - 2.678593873977661
  - 2.80220103263855
  - 2.7115986347198486
  - 2.748552083969116
  score_time:
  - 1.4873402118682861
  - 1.5455114841461182
  - 1.645423173904419
  - 1.5850014686584473
  - 1.576969861984253
  test_average_precision_macro:
  - 0.9075547501121998
  - 0.9279640447447252
  - 0.8343964577776555
  - 0.9740978502638425
  - 0.931924282955165
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9877999095962198
  - 0.980345371325334
  - 0.9407402067006557
  - 0.9797284856475208
  - 0.9828318449229199
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9805825242718447
  - 0.9595238095238096
  - 0.9441747572815534
  - 0.964401294498382
  - 0.9626984126984128
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.974054391566903
  - 0.9807334341712985
  - 0.9324690519404283
  - 0.985169608891634
  - 0.9764497317358908
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7500000000000001
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601943
  - 0.7833333333333332
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.75
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601942
  - 0.7833333333333333
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.75
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601942
  - 0.7833333333333333
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6733569828230023
  - 0.6821768707482994
  - 0.6925877520537715
  - 0.7158576051779936
  - 0.7233560090702947
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6215210725407352
  - 0.629724072201125
  - 0.6345067882939274
  - 0.6466151241779162
  - 0.6586836643592551
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6
  - 0.6091954022988506
  - 0.615686274509804
  - 0.6316831683168317
  - 0.6438356164383562
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.601294498381877
  - 0.6114285714285713
  - 0.6207119741100323
  - 0.6414239482200645
  - 0.6533333333333331
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5132103610940053
  - 0.5230784073006847
  - 0.5366147791319739
  - 0.5610064757124726
  - 0.5709918086017579
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9805825242718447
  - 0.9595238095238096
  - 0.9441747572815534
  - 0.9644012944983819
  - 0.9626984126984126
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.030439943302418022
  - 0.0773347715632199
  - 0.14539474563164356
  - 0.1489122206708906
  - 0.21838292020779787
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.08488633392626585
  - 0.14691063206231753
  - 0.20920463247580554
  - 0.2961659766318301
  - 0.32163376045133846
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.009708737864077669
  - 0.02857142857142857
  - 0.05825242718446602
  - 0.11650485436893204
  - 0.13333333333333333
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.04800144905381303
  - 0.11449063123073135
  - 0.18374770405394925
  - 0.22298599974145814
  - 0.28935859252712626
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.985667174895979
  - 0.9699731888864153
  - 0.9590874413597719
  - 0.9736463934119296
  - 0.9722411935802923
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0485436893203883
  - -1.0952380952380953
  - -1.1650485436893203
  - -1.0970873786407767
  - -1.0952380952380953
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25
  - -0.24285714285714288
  - -0.2378640776699029
  - -0.2257281553398058
  - -0.21666666666666667
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25
  - -0.24285714285714285
  - -0.23786407766990292
  - -0.22572815533980584
  - -0.21666666666666667
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25
  - -0.24285714285714285
  - -0.23786407766990292
  - -0.22572815533980584
  - -0.21666666666666667
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32664301717699773
  - -0.31782312925170064
  - -0.3074122479462285
  - -0.2841423948220064
  - -0.2766439909297052
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.012944983818770225
  - -0.031746031746031744
  - -0.05016181229773462
  - -0.02588996763754045
  - -0.031746031746031744
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7500000000000001
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601943
  - 0.7833333333333332
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.75
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601942
  - 0.7833333333333333
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.75
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601942
  - 0.7833333333333333
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6733569828230023
  - 0.6821768707482994
  - 0.6925877520537715
  - 0.7158576051779936
  - 0.7233560090702947
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7500000000000001
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601943
  - 0.7833333333333332
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.75
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601942
  - 0.7833333333333333
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.75
  - 0.7571428571428571
  - 0.7621359223300971
  - 0.7742718446601942
  - 0.7833333333333333
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6733569828230023
  - 0.6821768707482994
  - 0.6925877520537715
  - 0.7158576051779936
  - 0.7233560090702947
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9926083473999658
  - 0.9928157429638522
  - 0.9692170113542546
  - 0.994420952744608
  - 0.9930610498691592
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9957542457542458
  - 0.9920181405895692
  - 0.973464035964036
  - 0.9922444547851714
  - 0.993922902494331
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9870550161812297
  - 0.9682539682539683
  - 0.9498381877022655
  - 0.9741100323624596
  - 0.9682539682539681
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9953701452904126
  - 0.9940112711751368
  - 0.9730282193303565
  - 0.9950919411361321
  - 0.9945571246467051
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9364051420522586
  - 0.9342523146486649
  - 0.9532433421883608
  - 0.8705893805170071
  - 0.9320825832946259
  train_average_precision_macro_oob:
  - 0.8712060592103781
  - 0.8601919854378482
  - 0.909788952491019
  - 0.8494167609409712
  - 0.87100692335952
  train_average_precision_micro:
  - 0.9854342823226185
  - 0.9875503295164343
  - 0.9898731790476245
  - 0.9827638139741527
  - 0.984259553673555
  train_average_precision_micro_oob:
  - 0.9750809328647413
  - 0.9729325217798128
  - 0.9826673914021986
  - 0.9722277001311974
  - 0.9749856618209443
  train_average_precision_samples:
  - 0.9627403846153846
  - 0.9683977455716587
  - 0.9799679487179487
  - 0.9697516025641026
  - 0.9681964573268921
  train_average_precision_samples_oob:
  - 0.9591346153846154
  - 0.9526972624798712
  - 0.9695512820512822
  - 0.9681490384615384
  - 0.961755233494364
  train_average_precision_weighted:
  - 0.9820788666671827
  - 0.9815975035091115
  - 0.9871229786465973
  - 0.9720103314878056
  - 0.9799194465919501
  train_average_precision_weighted_oob:
  - 0.9657124400888853
  - 0.9566266790733194
  - 0.9753874289028446
  - 0.9600031908799824
  - 0.9661623407224765
  train_f1_macro:
  - 0.7584134615384615
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615385
  - 0.7807971014492753
  train_f1_macro_oob:
  - 0.7572115384615385
  - 0.7596618357487922
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_f1_micro:
  - 0.7584134615384616
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615384
  - 0.7807971014492754
  train_f1_micro_oob:
  - 0.7572115384615384
  - 0.7596618357487923
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_f1_samples:
  - 0.7584134615384616
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615384
  - 0.7807971014492754
  train_f1_samples_oob:
  - 0.7572115384615384
  - 0.7596618357487923
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_f1_weighted:
  - 0.6888883789241784
  - 0.6953863578577537
  - 0.7143266935928034
  - 0.7206592749355907
  - 0.717974943947484
  train_f1_weighted_oob:
  - 0.686650908757114
  - 0.6893188174652705
  - 0.705210436937764
  - 0.6987256164887744
  - 0.7058051915031321
  train_jaccard_macro:
  - 0.6295621656366265
  - 0.6351635080893199
  - 0.6541909586465118
  - 0.6552267522649214
  - 0.6563574526464137
  train_jaccard_macro_oob:
  - 0.6283526676955965
  - 0.6314860621195006
  - 0.6464067384100098
  - 0.6397773621432874
  - 0.6444855393253336
  train_jaccard_micro:
  - 0.6108422071636012
  - 0.6171875
  - 0.6377952755905512
  - 0.6402168555938886
  - 0.6404160475482912
  train_jaccard_micro_oob:
  - 0.6092843326885881
  - 0.6124634858812074
  - 0.6289769946157612
  - 0.621832358674464
  - 0.6275184275184276
  train_jaccard_samples:
  - 0.6144230769230767
  - 0.6225442834138484
  - 0.6471153846153844
  - 0.6496794871794871
  - 0.650563607085346
  train_jaccard_samples_oob:
  - 0.6124999999999999
  - 0.616747181964573
  - 0.6365384615384614
  - 0.6275641025641024
  - 0.6351046698872784
  train_jaccard_weighted:
  - 0.5307597030535225
  - 0.5383152748433927
  - 0.5604503156328302
  - 0.5666003343367162
  - 0.5644302358499768
  train_jaccard_weighted_oob:
  - 0.5284678136523597
  - 0.5321067629220304
  - 0.5498578418162989
  - 0.5419118365204662
  - 0.5497525318016351
  train_label_ranking_average_precision_score:
  - 0.9627403846153846
  - 0.9683977455716587
  - 0.9799679487179487
  - 0.9697516025641026
  - 0.9681964573268921
  train_label_ranking_average_precision_score_oob:
  - 0.9591346153846154
  - 0.952697262479871
  - 0.9695512820512818
  - 0.9681490384615384
  - 0.9617552334943636
  train_matthews_corrcoef_macro:
  - 0.07837763399234815
  - 0.11792129030876561
  - 0.21580413533822768
  - 0.16606374116157652
  - 0.22287076460308536
  train_matthews_corrcoef_macro_oob:
  - 0.0826902181563661
  - 0.10284182234594733
  - 0.18962028754162627
  - 0.1546521207948596
  - 0.17556753710086126
  train_matthews_corrcoef_micro:
  - 0.17512789409633564
  - 0.21735270689757372
  - 0.3065106496482009
  - 0.31315622191690956
  - 0.31897589174437535
  train_matthews_corrcoef_micro_oob:
  - 0.16440422186588716
  - 0.19028104577673005
  - 0.27052951096323896
  - 0.23394053649334584
  - 0.2672695454322845
  train_matthews_corrcoef_samples:
  - 0.040865384615384616
  - 0.06280193236714976
  - 0.12259615384615384
  - 0.12740384615384615
  - 0.13285024154589373
  train_matthews_corrcoef_samples_oob:
  - 0.036057692307692304
  - 0.04830917874396135
  - 0.09615384615384616
  - 0.07211538461538461
  - 0.09420289855072464
  train_matthews_corrcoef_weighted:
  - 0.12032451146090466
  - 0.17162267812742696
  - 0.2821850154742527
  - 0.24632806337584973
  - 0.29109992442382737
  train_matthews_corrcoef_weighted_oob:
  - 0.12379059387482393
  - 0.14636863700398633
  - 0.24830816269397274
  - 0.20846239591558652
  - 0.23710756137750563
  train_ndgc:
  - 0.972486340732167
  - 0.9766619871137181
  - 0.9850999528976752
  - 0.9777072926666889
  - 0.9764945391863592
  train_ndgc_oob:
  - 0.9697381074141276
  - 0.9650043774656312
  - 0.977372978189571
  - 0.9764298019345551
  - 0.9717097586014188
  train_neg_coverage_error:
  - -1.09375
  - -1.0845410628019323
  - -1.0576923076923077
  - -1.0793269230769231
  - -1.0869565217391304
  train_neg_coverage_error_oob:
  - -1.1153846153846154
  - -1.1280193236714975
  - -1.0817307692307692
  - -1.0913461538461537
  - -1.108695652173913
  train_neg_hamming_loss_macro:
  - -0.24158653846153844
  - -0.23671497584541062
  - -0.22115384615384615
  - -0.21935096153846156
  - -0.2192028985507246
  train_neg_hamming_loss_macro_oob:
  - -0.24278846153846156
  - -0.24033816425120774
  - -0.22776442307692307
  - -0.23317307692307693
  - -0.2288647342995169
  train_neg_hamming_loss_micro:
  - -0.24158653846153846
  - -0.23671497584541062
  - -0.22115384615384615
  - -0.21935096153846154
  - -0.21920289855072464
  train_neg_hamming_loss_micro_oob:
  - -0.24278846153846154
  - -0.24033816425120774
  - -0.22776442307692307
  - -0.23317307692307693
  - -0.2288647342995169
  train_neg_hamming_loss_samples:
  - -0.24158653846153846
  - -0.23671497584541062
  - -0.22115384615384615
  - -0.21935096153846154
  - -0.21920289855072464
  train_neg_hamming_loss_samples_oob:
  - -0.24278846153846154
  - -0.24033816425120774
  - -0.22776442307692307
  - -0.23317307692307693
  - -0.2288647342995169
  train_neg_hamming_loss_weighted:
  - -0.3111116210758215
  - -0.30461364214224623
  - -0.2856733064071966
  - -0.27934072506440927
  - -0.282025056052516
  train_neg_hamming_loss_weighted_oob:
  - -0.31334909124288596
  - -0.3106811825347294
  - -0.29478956306223614
  - -0.3012743835112256
  - -0.29419480849686797
  train_neg_label_ranking_loss:
  - -0.028645833333333332
  - -0.024758454106280192
  - -0.016826923076923076
  - -0.024439102564102564
  - -0.02556360708534621
  train_neg_label_ranking_loss_oob:
  - -0.03565705128205128
  - -0.039049919484702086
  - -0.024839743589743588
  - -0.028445512820512817
  - -0.03260869565217391
  train_precision_macro:
  - 0.7584134615384615
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615385
  - 0.7807971014492753
  train_precision_macro_oob:
  - 0.7572115384615385
  - 0.7596618357487922
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_precision_micro:
  - 0.7584134615384616
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615384
  - 0.7807971014492754
  train_precision_micro_oob:
  - 0.7572115384615384
  - 0.7596618357487923
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_precision_samples:
  - 0.7584134615384616
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615384
  - 0.7807971014492754
  train_precision_samples_oob:
  - 0.7572115384615384
  - 0.7596618357487923
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_precision_weighted:
  - 0.6888883789241784
  - 0.6953863578577537
  - 0.7143266935928034
  - 0.7206592749355907
  - 0.717974943947484
  train_precision_weighted_oob:
  - 0.686650908757114
  - 0.6893188174652705
  - 0.705210436937764
  - 0.6987256164887744
  - 0.7058051915031321
  train_recall_macro:
  - 0.7584134615384615
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615385
  - 0.7807971014492753
  train_recall_macro_oob:
  - 0.7572115384615385
  - 0.7596618357487922
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_recall_micro:
  - 0.7584134615384616
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615384
  - 0.7807971014492754
  train_recall_micro_oob:
  - 0.7572115384615384
  - 0.7596618357487923
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_recall_samples:
  - 0.7584134615384616
  - 0.7632850241545893
  - 0.7788461538461539
  - 0.7806490384615384
  - 0.7807971014492754
  train_recall_samples_oob:
  - 0.7572115384615384
  - 0.7596618357487923
  - 0.7722355769230769
  - 0.7668269230769231
  - 0.7711352657004831
  train_recall_weighted:
  - 0.6888883789241784
  - 0.6953863578577537
  - 0.7143266935928034
  - 0.7206592749355907
  - 0.717974943947484
  train_recall_weighted_oob:
  - 0.686650908757114
  - 0.6893188174652705
  - 0.705210436937764
  - 0.6987256164887744
  - 0.7058051915031321
  train_roc_auc_macro:
  - 0.9939204868797499
  - 0.9937286199707887
  - 0.9948798332038026
  - 0.9897943563655209
  - 0.9935388238774996
  train_roc_auc_macro_oob:
  - 0.9880092063020522
  - 0.986451686354439
  - 0.9913194327279615
  - 0.9850765070260108
  - 0.9877461938948361
  train_roc_auc_micro:
  - 0.9938330889189215
  - 0.99469162331589
  - 0.9952804056320749
  - 0.992625204482094
  - 0.9937215450139523
  train_roc_auc_micro_oob:
  - 0.9889582195128965
  - 0.988704964791182
  - 0.9927154920397581
  - 0.9882494796746719
  - 0.988805450989789
  train_roc_auc_samples:
  - 0.9713541666666666
  - 0.9752415458937198
  - 0.9831730769230769
  - 0.9755608974358976
  - 0.9744363929146537
  train_roc_auc_samples_oob:
  - 0.9643429487179488
  - 0.9609500805152978
  - 0.9751602564102563
  - 0.9715544871794872
  - 0.967391304347826
  train_roc_auc_weighted:
  - 0.995190151282086
  - 0.9944933564683659
  - 0.9963270506417107
  - 0.9940428028909231
  - 0.9942035036827829
  train_roc_auc_weighted_oob:
  - 0.9906216456352333
  - 0.9881472582968205
  - 0.9934609174013155
  - 0.9892485911111158
  - 0.9913077657152745
start: 2023-12-21 16:59:38.625059
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
