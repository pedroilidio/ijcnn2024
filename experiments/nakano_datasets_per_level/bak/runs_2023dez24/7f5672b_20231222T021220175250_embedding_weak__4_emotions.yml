active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T/QzMzMzMwEQNDMzMzMzAxAgJmZmZmZ2b+YmZmZmZkdwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmFkAgMzMzMzMDwIAzMzMzM+M/wJmZmZmZ+T+QmZmZmZkVwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:13:06.251288
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__4
  params: {}
hash: 7f5672beeca7b70f9e92d0f95a0a8135332a7d9377e4b8bae8bb5ceab7b1ad86
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7f5672b_20231222T021220175250_embedding_weak__4_emotions.yml
results:
  fit_time:
  - 29.612566709518433
  - 28.04080843925476
  - 31.125402450561523
  - 29.076412677764893
  - 29.818366765975952
  score_time:
  - 3.773503541946411
  - 3.4178037643432617
  - 3.8704659938812256
  - 3.7013885974884033
  - 3.8345487117767334
  test_average_precision_macro:
  - 0.7467724240279954
  - 0.6553790099175664
  - 0.7264366622776683
  - 0.7475598395194915
  - 0.7309063580195012
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7037262757411499
  - 0.6081803010591208
  - 0.6558952041918017
  - 0.6666973212143298
  - 0.6219133922794781
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7955506391347099
  - 0.7295684113865931
  - 0.7586629001883238
  - 0.777659069325736
  - 0.7489247311827957
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7454999759203756
  - 0.6603807623965474
  - 0.7167831921415979
  - 0.7408402516402568
  - 0.7218321865591336
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7964601769911505
  - 0.7589531680440772
  - 0.8036723163841808
  - 0.7977207977207977
  - 0.7903225806451614
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7964601769911505
  - 0.7589531680440771
  - 0.8036723163841808
  - 0.7977207977207977
  - 0.7903225806451613
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7964601769911503
  - 0.7589531680440771
  - 0.8036723163841808
  - 0.7977207977207976
  - 0.7903225806451614
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7890121331037521
  - 0.7434620174346201
  - 0.7898226616446955
  - 0.7905407995094094
  - 0.7741231159318213
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6654803321907432
  - 0.6186321818932127
  - 0.6778954679895351
  - 0.6670721082542702
  - 0.6643506201671417
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6617647058823529
  - 0.611542730299667
  - 0.6717827626918536
  - 0.6635071090047393
  - 0.6533333333333333
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6939317319848292
  - 0.6418732782369145
  - 0.7001210653753025
  - 0.697150997150997
  - 0.6841013824884792
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6556084472231561
  - 0.599372844223236
  - 0.6596095536236808
  - 0.6573037801912859
  - 0.6434606066357547
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7955506391347098
  - 0.7295684113865931
  - 0.7586629001883237
  - 0.7776590693257359
  - 0.7489247311827959
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5128638972673233
  - 0.38840022443168176
  - 0.5346502740703439
  - 0.5126359598795557
  - 0.5282887864417912
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5236099212820219
  - 0.4101672087925178
  - 0.523387116927904
  - 0.5155586565093218
  - 0.5021486638039723
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5133139858222419
  - 0.394202698495432
  - 0.5506138828533861
  - 0.5025903292739028
  - 0.4986348665236816
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5153277778523943
  - 0.3869498139254258
  - 0.5282819325988407
  - 0.5160308988269003
  - 0.5157715946925719
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8606084223643353
  - 0.8111610869769855
  - 0.8314754430841044
  - 0.8474078464479934
  - 0.8236034647554222
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8230088495575223
  - -2.9338842975206614
  - -2.7711864406779663
  - -2.8974358974358974
  - -2.8548387096774195
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20353982300884957
  - -0.24104683195592289
  - -0.1963276836158192
  - -0.2022792022792023
  - -0.20967741935483872
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20353982300884957
  - -0.24104683195592286
  - -0.1963276836158192
  - -0.2022792022792023
  - -0.20967741935483872
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2035398230088496
  - -0.24104683195592289
  - -0.19632768361581923
  - -0.2022792022792023
  - -0.20967741935483872
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21098786689624796
  - -0.2565379825653798
  - -0.21017733835530447
  - -0.2094592004905906
  - -0.22587688406817863
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1581612586037365
  - -0.2067263544536272
  - -0.17763653483992467
  - -0.17856125356125355
  - -0.19009856630824373
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7964601769911505
  - 0.7589531680440772
  - 0.8036723163841808
  - 0.7977207977207977
  - 0.7903225806451614
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7964601769911505
  - 0.7589531680440771
  - 0.8036723163841808
  - 0.7977207977207977
  - 0.7903225806451613
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7964601769911503
  - 0.7589531680440771
  - 0.8036723163841808
  - 0.7977207977207976
  - 0.7903225806451614
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7890121331037521
  - 0.7434620174346201
  - 0.7898226616446955
  - 0.7905407995094094
  - 0.7741231159318213
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7964601769911505
  - 0.7589531680440772
  - 0.8036723163841808
  - 0.7977207977207977
  - 0.7903225806451614
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7964601769911505
  - 0.7589531680440771
  - 0.8036723163841808
  - 0.7977207977207977
  - 0.7903225806451613
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7964601769911503
  - 0.7589531680440771
  - 0.8036723163841808
  - 0.7977207977207976
  - 0.7903225806451614
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7890121331037521
  - 0.7434620174346201
  - 0.7898226616446955
  - 0.7905407995094094
  - 0.7741231159318213
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8687622115664947
  - 0.8157500962633878
  - 0.856469490612625
  - 0.8566729198009854
  - 0.8475081110639636
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8658177965682149
  - 0.8075797285491702
  - 0.8494147094248718
  - 0.8509413295636462
  - 0.8333149616314072
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8418387413962636
  - 0.7932736455463728
  - 0.8223634651600753
  - 0.8214387464387464
  - 0.8099014336917563
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8670840522627306
  - 0.8162677311692242
  - 0.8531227947872431
  - 0.8531056846854518
  - 0.8418571252585879
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9043071695734537
  - 0.8889967183866131
  - 0.9169271194203014
  - 0.8902289717289262
  - 0.8959115705301334
  train_average_precision_macro_oob:
  - 0.7290122741645814
  - 0.7391711219360088
  - 0.734950671815742
  - 0.7204526974135947
  - 0.7366618920216799
  train_average_precision_micro:
  - 0.7390154707405082
  - 0.7362332659386727
  - 0.7441911184318492
  - 0.7493825982578248
  - 0.7527780838269289
  train_average_precision_micro_oob:
  - 0.6422690851033485
  - 0.649400261439864
  - 0.6429398418181209
  - 0.6532379083047253
  - 0.6586252542160772
  train_average_precision_samples:
  - 0.8445717592592593
  - 0.8322975517890772
  - 0.8434035087719298
  - 0.8492180205415499
  - 0.8354655294953802
  train_average_precision_samples_oob:
  - 0.7696122685185185
  - 0.7688265065913371
  - 0.7591169590643274
  - 0.7702556022408963
  - 0.7646055437100213
  train_average_precision_weighted:
  - 0.8817789160982182
  - 0.8682702287925927
  - 0.8972668634346481
  - 0.8686795356351472
  - 0.8786913609563709
  train_average_precision_weighted_oob:
  - 0.7198418061205202
  - 0.729369820424135
  - 0.7285633107387114
  - 0.7130437729261232
  - 0.732885475461036
  train_f1_macro:
  - 0.8590277777777778
  - 0.8594632768361582
  - 0.8617543859649123
  - 0.8602941176470589
  - 0.8585643212508884
  train_f1_macro_oob:
  - 0.7913194444444444
  - 0.7920197740112994
  - 0.7792982456140352
  - 0.79796918767507
  - 0.7860696517412936
  train_f1_micro:
  - 0.8590277777777777
  - 0.8594632768361582
  - 0.8617543859649123
  - 0.8602941176470589
  - 0.8585643212508884
  train_f1_micro_oob:
  - 0.7913194444444445
  - 0.7920197740112994
  - 0.779298245614035
  - 0.7979691876750701
  - 0.7860696517412935
  train_f1_samples:
  - 0.8590277777777778
  - 0.8594632768361582
  - 0.8617543859649124
  - 0.8602941176470589
  - 0.8585643212508884
  train_f1_samples_oob:
  - 0.7913194444444444
  - 0.7920197740112995
  - 0.779298245614035
  - 0.79796918767507
  - 0.7860696517412936
  train_f1_weighted:
  - 0.8445109921082299
  - 0.8429629559016987
  - 0.8464691999055937
  - 0.8476142999572709
  - 0.8423945605953654
  train_f1_weighted_oob:
  - 0.7805524239007892
  - 0.7767630741072621
  - 0.7671111635591219
  - 0.7888809761192613
  - 0.7730872696488303
  train_jaccard_macro:
  - 0.7601781184079891
  - 0.7626700718092255
  - 0.7668443236733836
  - 0.7608820720729911
  - 0.7600632429625526
  train_jaccard_macro_oob:
  - 0.6593946493736961
  - 0.6636051576562733
  - 0.6441351093391271
  - 0.6680105403682671
  - 0.6534452371537759
  train_jaccard_micro:
  - 0.7528910529519173
  - 0.7535603715170278
  - 0.7570900123304563
  - 0.7548387096774194
  - 0.7521793275217933
  train_jaccard_micro_oob:
  - 0.6546969261706406
  - 0.6556562408652441
  - 0.638401839609083
  - 0.6638508593067288
  - 0.6475409836065574
  train_jaccard_samples:
  - 0.781686507936508
  - 0.7802562550443906
  - 0.7832781954887217
  - 0.782783113245298
  - 0.7809320743222662
  train_jaccard_samples_oob:
  - 0.6868055555555554
  - 0.6885794995964487
  - 0.6714285714285715
  - 0.6962084833933572
  - 0.6783734389278099
  train_jaccard_weighted:
  - 0.7394441469243492
  - 0.7395643535081328
  - 0.7455212630988036
  - 0.7424749053828463
  - 0.7372942449827905
  train_jaccard_weighted_oob:
  - 0.6450991984882105
  - 0.6441502565669811
  - 0.6284914759222214
  - 0.6555600460267863
  - 0.6368063306955273
  train_label_ranking_average_precision_score:
  - 0.8445717592592584
  - 0.8322975517890763
  - 0.8434035087719289
  - 0.849218020541549
  - 0.8354655294953796
  train_label_ranking_average_precision_score_oob:
  - 0.7696122685185174
  - 0.7688265065913362
  - 0.7591169590643264
  - 0.7702556022408954
  - 0.7646055437100207
  train_matthews_corrcoef_macro:
  - 0.6933970695344215
  - 0.7024888353989462
  - 0.7045040631039851
  - 0.6920038239749546
  - 0.6961843846952323
  train_matthews_corrcoef_macro_oob:
  - 0.49824637356537466
  - 0.5233962502902482
  - 0.4698909721521524
  - 0.5130372866288885
  - 0.48814241777307793
  train_matthews_corrcoef_micro:
  - 0.663939980735774
  - 0.6725679262818426
  - 0.6736740571985695
  - 0.6680563583241709
  - 0.6686122862669036
  train_matthews_corrcoef_micro_oob:
  - 0.4893823260617212
  - 0.5053516057734821
  - 0.46520195413584686
  - 0.5086374699196975
  - 0.4848400375011994
  train_matthews_corrcoef_samples:
  - 0.6517551618470506
  - 0.6691591071949446
  - 0.6647004409359907
  - 0.6597279100179952
  - 0.6642660414861864
  train_matthews_corrcoef_samples_oob:
  - 0.4785287927965461
  - 0.5033780053240323
  - 0.4502992157899038
  - 0.502504759897276
  - 0.48121600976384776
  train_matthews_corrcoef_weighted:
  - 0.676900646215487
  - 0.6825579032269992
  - 0.6872093679615257
  - 0.6784237607629493
  - 0.6774097127726191
  train_matthews_corrcoef_weighted_oob:
  - 0.49625205989352766
  - 0.5130424956831633
  - 0.46700659960647656
  - 0.5128483490517601
  - 0.4846853215971083
  train_ndgc:
  - 0.8881600349095674
  - 0.8787821517474484
  - 0.8873204993204593
  - 0.8909218206206412
  - 0.8805206215281172
  train_ndgc_oob:
  - 0.8395586432483841
  - 0.8381399969149687
  - 0.8320079656194278
  - 0.8406753565360167
  - 0.8355256787592001
  train_neg_coverage_error:
  - -2.2583333333333333
  - -2.336864406779661
  - -2.296842105263158
  - -2.2563025210084033
  - -2.29637526652452
  train_neg_coverage_error_oob:
  - -2.785416666666667
  - -2.8008474576271185
  - -2.8610526315789473
  - -2.823529411764706
  - -2.818763326226013
  train_neg_hamming_loss_macro:
  - -0.14097222222222222
  - -0.14053672316384183
  - -0.1382456140350877
  - -0.1397058823529412
  - -0.1414356787491116
  train_neg_hamming_loss_macro_oob:
  - -0.20868055555555554
  - -0.20798022598870056
  - -0.22070175438596493
  - -0.20203081232492995
  - -0.21393034825870647
  train_neg_hamming_loss_micro:
  - -0.14097222222222222
  - -0.1405367231638418
  - -0.13824561403508773
  - -0.13970588235294118
  - -0.1414356787491116
  train_neg_hamming_loss_micro_oob:
  - -0.20868055555555556
  - -0.20798022598870056
  - -0.2207017543859649
  - -0.20203081232492998
  - -0.21393034825870647
  train_neg_hamming_loss_samples:
  - -0.14097222222222222
  - -0.1405367231638418
  - -0.13824561403508773
  - -0.13970588235294118
  - -0.14143567874911162
  train_neg_hamming_loss_samples_oob:
  - -0.20868055555555556
  - -0.20798022598870056
  - -0.22070175438596493
  - -0.20203081232492995
  - -0.21393034825870647
  train_neg_hamming_loss_weighted:
  - -0.15548900789177003
  - -0.15703704409830127
  - -0.15353080009440642
  - -0.15238570004272894
  - -0.1576054394046346
  train_neg_hamming_loss_weighted_oob:
  - -0.21944757609921084
  - -0.22323692589273794
  - -0.23288883644087796
  - -0.21111902388073875
  - -0.22691273035116954
  train_neg_label_ranking_loss:
  - -0.08573495370370371
  - -0.09506826741996233
  - -0.08661988304093568
  - -0.08359010270774977
  - -0.08946932006633498
  train_neg_label_ranking_loss_oob:
  - -0.17383680555555556
  - -0.17429378531073447
  - -0.18257894736842104
  - -0.1774042950513539
  - -0.17514214641080317
  train_precision_macro:
  - 0.8590277777777778
  - 0.8594632768361582
  - 0.8617543859649123
  - 0.8602941176470589
  - 0.8585643212508884
  train_precision_macro_oob:
  - 0.7913194444444444
  - 0.7920197740112994
  - 0.7792982456140352
  - 0.79796918767507
  - 0.7860696517412936
  train_precision_micro:
  - 0.8590277777777777
  - 0.8594632768361582
  - 0.8617543859649123
  - 0.8602941176470589
  - 0.8585643212508884
  train_precision_micro_oob:
  - 0.7913194444444445
  - 0.7920197740112994
  - 0.779298245614035
  - 0.7979691876750701
  - 0.7860696517412935
  train_precision_samples:
  - 0.8590277777777778
  - 0.8594632768361582
  - 0.8617543859649124
  - 0.8602941176470589
  - 0.8585643212508884
  train_precision_samples_oob:
  - 0.7913194444444444
  - 0.7920197740112995
  - 0.779298245614035
  - 0.79796918767507
  - 0.7860696517412936
  train_precision_weighted:
  - 0.8445109921082299
  - 0.8429629559016987
  - 0.8464691999055937
  - 0.8476142999572709
  - 0.8423945605953654
  train_precision_weighted_oob:
  - 0.7805524239007892
  - 0.7767630741072621
  - 0.7671111635591219
  - 0.7888809761192613
  - 0.7730872696488303
  train_recall_macro:
  - 0.8590277777777778
  - 0.8594632768361582
  - 0.8617543859649123
  - 0.8602941176470589
  - 0.8585643212508884
  train_recall_macro_oob:
  - 0.7913194444444444
  - 0.7920197740112994
  - 0.7792982456140352
  - 0.79796918767507
  - 0.7860696517412936
  train_recall_micro:
  - 0.8590277777777777
  - 0.8594632768361582
  - 0.8617543859649123
  - 0.8602941176470589
  - 0.8585643212508884
  train_recall_micro_oob:
  - 0.7913194444444445
  - 0.7920197740112994
  - 0.779298245614035
  - 0.7979691876750701
  - 0.7860696517412935
  train_recall_samples:
  - 0.8590277777777778
  - 0.8594632768361582
  - 0.8617543859649124
  - 0.8602941176470589
  - 0.8585643212508884
  train_recall_samples_oob:
  - 0.7913194444444444
  - 0.7920197740112995
  - 0.779298245614035
  - 0.79796918767507
  - 0.7860696517412936
  train_recall_weighted:
  - 0.8445109921082299
  - 0.8429629559016987
  - 0.8464691999055937
  - 0.8476142999572709
  - 0.8423945605953654
  train_recall_weighted_oob:
  - 0.7805524239007892
  - 0.7767630741072621
  - 0.7671111635591219
  - 0.7888809761192613
  - 0.7730872696488303
  train_roc_auc_macro:
  - 0.9577466430700227
  - 0.9541705362639789
  - 0.9613033875390337
  - 0.9544827468769839
  - 0.9574817730234666
  train_roc_auc_macro_oob:
  - 0.8557735059085343
  - 0.8641971444383459
  - 0.8602721644729252
  - 0.8529296449816436
  - 0.8598515782693547
  train_roc_auc_micro:
  - 0.9297914742183889
  - 0.9235726645852235
  - 0.9279974761470704
  - 0.9317126584056389
  - 0.9261828540183964
  train_roc_auc_micro_oob:
  - 0.8465440767602053
  - 0.8494054686807999
  - 0.8430040949628292
  - 0.8485841309152198
  - 0.8448995070155481
  train_roc_auc_samples:
  - 0.9142650462962963
  - 0.9049317325800377
  - 0.9133801169590643
  - 0.9164098972922502
  - 0.910530679933665
  train_roc_auc_samples_oob:
  - 0.8261631944444445
  - 0.8257062146892655
  - 0.8174210526315789
  - 0.8225957049486461
  - 0.8248578535891969
  train_roc_auc_weighted:
  - 0.9463303884532485
  - 0.94277002971628
  - 0.9509215742326942
  - 0.9432900370275382
  - 0.9475516544407444
  train_roc_auc_weighted_oob:
  - 0.8514689895764601
  - 0.859135909439855
  - 0.8567064837211876
  - 0.8492596006908835
  - 0.8580714551530917
start: 2023-12-22 02:12:20.175250
wrapper: null
