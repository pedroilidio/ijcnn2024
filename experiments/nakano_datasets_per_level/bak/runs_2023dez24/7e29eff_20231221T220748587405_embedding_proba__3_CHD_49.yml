active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T/AmZmZmZnpP5CZmZmZmQHAAJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8gMzMzMzPzvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L80MzMzMzPzPzQzMzMzM/M/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAEAAAAAAAADwvwAAAAAAAPC/AAAAAAAACMAAAAAAAAAIQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:08:11.892969
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__3
  params: {}
hash: 7e29eff065217534152f86fe170c8772aaaa28f54485d4d2e1140179c68af93d
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7e29eff_20231221T220748587405_embedding_proba__3_CHD_49.yml
results:
  fit_time:
  - 9.801942825317383
  - 9.377641916275024
  - 10.060568809509277
  - 9.989819049835205
  - 10.611311912536621
  score_time:
  - 3.0476553440093994
  - 3.3709306716918945
  - 3.4888126850128174
  - 3.3133981227874756
  - 3.3245439529418945
  test_average_precision_macro:
  - 0.5368802381534447
  - 0.5737508185382624
  - 0.5097640287676757
  - 0.5318165132220224
  - 0.5700430799396646
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.696107387738126
  - 0.6448304421277696
  - 0.6946654292687287
  - 0.668613499160908
  - 0.7319966680285189
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8009174311926606
  - 0.7851190476190476
  - 0.8015376984126983
  - 0.7789839181286551
  - 0.8282921810699588
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6460752039437702
  - 0.6172162940303323
  - 0.6433359526312782
  - 0.6450705683395654
  - 0.6950580207632729
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6941896024464832
  - 0.6904761904761904
  - 0.7172619047619048
  - 0.7222222222222223
  - 0.7469135802469137
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6941896024464832
  - 0.6904761904761905
  - 0.7172619047619048
  - 0.7222222222222222
  - 0.7469135802469136
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6941896024464831
  - 0.6904761904761905
  - 0.7172619047619049
  - 0.7222222222222222
  - 0.7469135802469137
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6572143452877398
  - 0.6351546780684104
  - 0.6706969246031745
  - 0.6787395317562197
  - 0.707736482126726
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5516077665535053
  - 0.548362422513763
  - 0.5773781088271787
  - 0.5809052408997694
  - 0.6096891211779722
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.531615925058548
  - 0.5272727272727272
  - 0.5591647331786543
  - 0.5652173913043478
  - 0.5960591133004927
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.568072600182692
  - 0.5741264687693259
  - 0.606389146567718
  - 0.6059732664995822
  - 0.6388047138047137
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4981809193673831
  - 0.4689860070338707
  - 0.5079041276035786
  - 0.5175820156547164
  - 0.5500828370877952
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8192660550458714
  - 0.7851190476190475
  - 0.8015376984126982
  - 0.7789839181286549
  - 0.8375514403292184
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.11173968299645354
  - 0.0960330045397491
  - 0.16401847307204373
  - 0.1874888471676395
  - 0.20401256991945463
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.380125276581944
  - 0.3745996779453414
  - 0.4260143212517497
  - 0.43455956742398516
  - 0.49118344086889815
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4116455393180875
  - 0.40265968189429074
  - 0.4457631698787013
  - 0.4493529543661817
  - 0.4905364277783183
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11485468512908202
  - 0.08058276903528629
  - 0.16950553104358337
  - 0.2031311108128878
  - 0.20193529206613384
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8665025620224851
  - 0.8567595999063734
  - 0.8708624735243572
  - 0.8480691092881483
  - 0.8852546285537438
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6055045871559632
  - -3.5982142857142856
  - -3.625
  - -3.56140350877193
  - -3.564814814814815
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.30581039755351686
  - -0.3095238095238095
  - -0.2827380952380952
  - -0.27777777777777773
  - -0.25308641975308643
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3058103975535168
  - -0.30952380952380953
  - -0.28273809523809523
  - -0.2777777777777778
  - -0.25308641975308643
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.30581039755351686
  - -0.3095238095238095
  - -0.28273809523809523
  - -0.27777777777777773
  - -0.25308641975308643
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34278565471226025
  - -0.36484532193158953
  - -0.32930307539682535
  - -0.3212604682437802
  - -0.292263517873274
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19301732925586135
  - -0.20381944444444441
  - -0.2027529761904762
  - -0.20682261208576996
  - -0.16381172839506172
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6941896024464832
  - 0.6904761904761904
  - 0.7172619047619048
  - 0.7222222222222223
  - 0.7469135802469137
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6941896024464832
  - 0.6904761904761905
  - 0.7172619047619048
  - 0.7222222222222222
  - 0.7469135802469136
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6941896024464831
  - 0.6904761904761905
  - 0.7172619047619049
  - 0.7222222222222222
  - 0.7469135802469137
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6572143452877398
  - 0.6351546780684104
  - 0.6706969246031745
  - 0.6787395317562197
  - 0.707736482126726
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6941896024464832
  - 0.6904761904761904
  - 0.7172619047619048
  - 0.7222222222222223
  - 0.7469135802469137
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6941896024464832
  - 0.6904761904761905
  - 0.7172619047619048
  - 0.7222222222222222
  - 0.7469135802469136
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6941896024464831
  - 0.6904761904761905
  - 0.7172619047619049
  - 0.7222222222222222
  - 0.7469135802469137
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6572143452877398
  - 0.6351546780684104
  - 0.6706969246031745
  - 0.6787395317562197
  - 0.707736482126726
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5835666906825819
  - 0.5833503672358155
  - 0.5648163854236011
  - 0.5633009270670349
  - 0.5863038946525467
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7776299787169353
  - 0.7651735153187165
  - 0.7805266203703703
  - 0.7800840800779365
  - 0.8183809974229541
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7961805555555556
  - 0.7972470238095238
  - 0.79317738791423
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5864756302737725
  - 0.5353210516032274
  - 0.6033354912977037
  - 0.5943721393287983
  - 0.6449120007264607
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9959462986407052
  - 0.9956238686288864
  - 0.9961089388368128
  - 0.9967068485964218
  - 0.9966538217416606
  train_average_precision_macro_oob:
  - 0.8800083044772782
  - 0.9223289812259735
  - 0.8740885681959564
  - 0.9222449862658602
  - 0.9019116040634936
  train_average_precision_micro:
  - 0.9917277930082811
  - 0.9894313953591665
  - 0.9900215520867754
  - 0.9916703822800785
  - 0.9913153218851863
  train_average_precision_micro_oob:
  - 0.9602259502700318
  - 0.94933131590533
  - 0.9518332372828334
  - 0.9591542391673814
  - 0.9585143987848778
  train_average_precision_samples:
  - 0.9800822122571001
  - 0.9727834211186357
  - 0.9793296965136694
  - 0.9776077097505669
  - 0.986216753666418
  train_average_precision_samples_oob:
  - 0.9409255107125062
  - 0.939490845247053
  - 0.9363493855028845
  - 0.9409926933736457
  - 0.9442859806114839
  train_average_precision_weighted:
  - 0.9960448181722202
  - 0.9956805280154694
  - 0.9961606081974861
  - 0.9968190631461175
  - 0.9967067975644963
  train_average_precision_weighted_oob:
  - 0.965271795228098
  - 0.9584559146555287
  - 0.9531986464230998
  - 0.9672542780372498
  - 0.9644802282232198
  train_f1_macro:
  - 0.9637518684603886
  - 0.952972159518435
  - 0.9563581640331077
  - 0.9637188208616779
  - 0.9601043997017151
  train_f1_macro_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616252
  - 0.9202569916855631
  - 0.9153616703952275
  train_f1_micro:
  - 0.9637518684603886
  - 0.952972159518435
  - 0.9563581640331076
  - 0.963718820861678
  - 0.9601043997017151
  train_f1_micro_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616253
  - 0.9202569916855631
  - 0.9153616703952274
  train_f1_samples:
  - 0.9637518684603887
  - 0.952972159518435
  - 0.9563581640331077
  - 0.963718820861678
  - 0.960104399701715
  train_f1_samples_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616253
  - 0.9202569916855632
  - 0.9153616703952273
  train_f1_weighted:
  - 0.960476682396951
  - 0.9474992331348661
  - 0.9527735244439535
  - 0.9618473299072176
  - 0.9569277961763528
  train_f1_weighted_oob:
  - 0.8967005532990554
  - 0.8969451239175406
  - 0.9013263824211906
  - 0.9078137222865856
  - 0.9026972636597207
  train_jaccard_macro:
  - 0.9304765112722575
  - 0.9105365100135839
  - 0.9165491230587243
  - 0.9302546383456258
  - 0.9234041260516109
  train_jaccard_macro_oob:
  - 0.8408699421740473
  - 0.8360860520210704
  - 0.8433464110073081
  - 0.8534365362379074
  - 0.8453185218762206
  train_jaccard_micro:
  - 0.9300396682293545
  - 0.9101688825008983
  - 0.916366258111031
  - 0.9299781181619255
  - 0.9232699892434565
  train_jaccard_micro_oob:
  - 0.8391752577319588
  - 0.8343685300207039
  - 0.841995841995842
  - 0.8522926146307316
  - 0.8439326228944655
  train_jaccard_samples:
  - 0.9400491138159299
  - 0.9224443727829733
  - 0.9283026980543909
  - 0.9405031854011445
  - 0.9333120272717588
  train_jaccard_samples_oob:
  - 0.864157591287636
  - 0.8584542620660002
  - 0.8647103085026334
  - 0.8730698628657813
  - 0.8659209545115584
  train_jaccard_weighted:
  - 0.9244174904444143
  - 0.900562566490141
  - 0.9099693176541579
  - 0.9268405641059816
  - 0.9175215055587604
  train_jaccard_weighted_oob:
  - 0.8131881560133154
  - 0.8137965085297345
  - 0.8207842355711775
  - 0.8314696294485547
  - 0.8230423791678646
  train_label_ranking_average_precision_score:
  - 0.9823243647234676
  - 0.979555430147981
  - 0.9861017055430148
  - 0.9844104308390023
  - 0.9906910265970669
  train_label_ranking_average_precision_score_oob:
  - 0.9431676631788732
  - 0.9462628542763978
  - 0.9431213945322294
  - 0.9477954144620808
  - 0.9487602535421324
  train_matthews_corrcoef_macro:
  - 0.7620622467185343
  - 0.7399806286812546
  - 0.7469661544799123
  - 0.7631238418258005
  - 0.7554349457380124
  train_matthews_corrcoef_macro_oob:
  - 0.6423343602762754
  - 0.642030352827691
  - 0.6508967859557679
  - 0.6622460505615436
  - 0.6535493781852874
  train_matthews_corrcoef_micro:
  - 0.9260742115579627
  - 0.9041570211893624
  - 0.9109915843733545
  - 0.9261556827694352
  - 0.9183993748053518
  train_matthews_corrcoef_micro_oob:
  - 0.8220403732253267
  - 0.8162649010932116
  - 0.8253112726991081
  - 0.8378814183881319
  - 0.8275966154511653
  train_matthews_corrcoef_samples:
  - 0.9221621056662331
  - 0.8947978393951186
  - 0.9010235326579017
  - 0.9207057159937434
  - 0.9125453976382432
  train_matthews_corrcoef_samples_oob:
  - 0.816748048454508
  - 0.8165814282841578
  - 0.8232008734336528
  - 0.833445073715624
  - 0.8295189944077367
  train_matthews_corrcoef_weighted:
  - 0.9018701475854323
  - 0.8687802189218181
  - 0.8802842928726807
  - 0.9045643334268729
  - 0.8919263663882927
  train_matthews_corrcoef_weighted_oob:
  - 0.7476908151457231
  - 0.7515240528676999
  - 0.7595238443477754
  - 0.7750868777928913
  - 0.7652500476036397
  train_ndgc:
  - 0.9869003218198216
  - 0.9814134544363571
  - 0.9848793316804159
  - 0.9837360014398948
  - 0.9904382242925287
  train_ndgc_oob:
  - 0.9613553555547295
  - 0.9601378961370817
  - 0.957613769483926
  - 0.9606088131395971
  - 0.9637242142384256
  train_neg_coverage_error:
  - -2.688340807174888
  - -2.7358916478555306
  - -2.6794582392776523
  - -2.7006802721088436
  - -2.6442953020134228
  train_neg_coverage_error_oob:
  - -2.876681614349776
  - -2.9232505643340856
  - -2.9119638826185104
  - -2.893424036281179
  - -2.87248322147651
  train_neg_hamming_loss_macro:
  - -0.036248131539611365
  - -0.04702784048156509
  - -0.043641835966892396
  - -0.036281179138321996
  - -0.039895600298284865
  train_neg_hamming_loss_macro_oob:
  - -0.08744394618834082
  - -0.09029345372460496
  - -0.08577878103837472
  - -0.07974300831443688
  - -0.08463832960477256
  train_neg_hamming_loss_micro:
  - -0.03624813153961136
  - -0.04702784048156509
  - -0.0436418359668924
  - -0.036281179138321996
  - -0.039895600298284865
  train_neg_hamming_loss_micro_oob:
  - -0.08744394618834081
  - -0.09029345372460497
  - -0.08577878103837472
  - -0.07974300831443688
  - -0.08463832960477256
  train_neg_hamming_loss_samples:
  - -0.03624813153961135
  - -0.04702784048156508
  - -0.04364183596689239
  - -0.03628117913832199
  - -0.039895600298284865
  train_neg_hamming_loss_samples_oob:
  - -0.08744394618834081
  - -0.09029345372460497
  - -0.08577878103837472
  - -0.07974300831443688
  - -0.08463832960477255
  train_neg_hamming_loss_weighted:
  - -0.03952331760304902
  - -0.05250076686513399
  - -0.04722647555604666
  - -0.038152670092782386
  - -0.043072203823647216
  train_neg_hamming_loss_weighted_oob:
  - -0.10329944670094461
  - -0.10305487608245963
  - -0.09867361757880945
  - -0.09218627771341434
  - -0.09730273634027921
  train_neg_label_ranking_loss:
  - -0.017395366218236178
  - -0.020272134436919987
  - -0.014459493353398543
  - -0.015709246661627613
  - -0.011073825503355707
  train_neg_label_ranking_loss_oob:
  - -0.05253487792725461
  - -0.05383747178329571
  - -0.05464635063957863
  - -0.049634668682287726
  - -0.04953392990305742
  train_precision_macro:
  - 0.9637518684603886
  - 0.952972159518435
  - 0.9563581640331077
  - 0.9637188208616779
  - 0.9601043997017151
  train_precision_macro_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616252
  - 0.9202569916855631
  - 0.9153616703952275
  train_precision_micro:
  - 0.9637518684603886
  - 0.952972159518435
  - 0.9563581640331076
  - 0.963718820861678
  - 0.9601043997017151
  train_precision_micro_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616253
  - 0.9202569916855631
  - 0.9153616703952274
  train_precision_samples:
  - 0.9637518684603887
  - 0.952972159518435
  - 0.9563581640331077
  - 0.963718820861678
  - 0.960104399701715
  train_precision_samples_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616253
  - 0.9202569916855632
  - 0.9153616703952273
  train_precision_weighted:
  - 0.960476682396951
  - 0.9474992331348661
  - 0.9527735244439535
  - 0.9618473299072176
  - 0.9569277961763528
  train_precision_weighted_oob:
  - 0.8967005532990554
  - 0.8969451239175406
  - 0.9013263824211906
  - 0.9078137222865856
  - 0.9026972636597207
  train_recall_macro:
  - 0.9637518684603886
  - 0.952972159518435
  - 0.9563581640331077
  - 0.9637188208616779
  - 0.9601043997017151
  train_recall_macro_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616252
  - 0.9202569916855631
  - 0.9153616703952275
  train_recall_micro:
  - 0.9637518684603886
  - 0.952972159518435
  - 0.9563581640331076
  - 0.963718820861678
  - 0.9601043997017151
  train_recall_micro_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616253
  - 0.9202569916855631
  - 0.9153616703952274
  train_recall_samples:
  - 0.9637518684603887
  - 0.952972159518435
  - 0.9563581640331077
  - 0.963718820861678
  - 0.960104399701715
  train_recall_samples_oob:
  - 0.9125560538116592
  - 0.909706546275395
  - 0.9142212189616253
  - 0.9202569916855632
  - 0.9153616703952273
  train_recall_weighted:
  - 0.960476682396951
  - 0.9474992331348661
  - 0.9527735244439535
  - 0.9618473299072176
  - 0.9569277961763528
  train_recall_weighted_oob:
  - 0.8967005532990554
  - 0.8969451239175406
  - 0.9013263824211906
  - 0.9078137222865856
  - 0.9026972636597207
  train_roc_auc_macro:
  - 0.9964468890060871
  - 0.996064095696123
  - 0.9965784751384404
  - 0.9972001409447224
  - 0.9970853119885982
  train_roc_auc_macro_oob:
  - 0.9644639518571717
  - 0.9508317985089167
  - 0.9606533981805422
  - 0.9670377221262436
  - 0.9634934508459364
  train_roc_auc_micro:
  - 0.9925352747265282
  - 0.9903875441308811
  - 0.9911094932148432
  - 0.9923311678677098
  - 0.992404246916667
  train_roc_auc_micro_oob:
  - 0.9680183417171406
  - 0.9607875487458755
  - 0.964376772500947
  - 0.9673742977752823
  - 0.9686242978864855
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9960133929623406
  - 0.995536319521299
  - 0.9959852647906648
  - 0.9968622746115396
  - 0.9966470372551036
  train_roc_auc_weighted_oob:
  - 0.968454581069561
  - 0.9563081614984248
  - 0.9603082497118681
  - 0.9698286243630952
  - 0.9670700549772531
start: 2023-12-21 22:07:48.587405
wrapper: null
