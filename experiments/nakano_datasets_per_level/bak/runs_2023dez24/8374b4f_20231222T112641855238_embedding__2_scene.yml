active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb+AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j9AZmZmZmYSwIDMzMzMzATAgDMzMzMzC0CAMzMzMzMDQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 11:29:25.185284
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__2
  params: {}
hash: 8374b4f82b39b0159dc554637fec93079799c0c732f99bb9c393b7858bf45468
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8374b4f_20231222T112641855238_embedding__2_scene.yml
results:
  fit_time:
  - 106.52777290344238
  - 86.79253053665161
  - 107.66664338111877
  - 103.90160584449768
  - 102.70734810829163
  score_time:
  - 7.4810662269592285
  - 12.637685298919678
  - 7.562466382980347
  - 7.683410406112671
  - 7.666119575500488
  test_average_precision_macro:
  - 0.8291431657569239
  - 0.840974727591404
  - 0.843691819729849
  - 0.849113895427433
  - 0.8391115331735818
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8445013524725171
  - 0.8401276281075506
  - 0.8452274473677654
  - 0.8568726719063731
  - 0.8447656322686428
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8674652777777777
  - 0.8744855967078189
  - 0.8731060606060607
  - 0.88057880055788
  - 0.8704592901878916
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.817060652389963
  - 0.8325175979004117
  - 0.8333521799619524
  - 0.8371570105244597
  - 0.8288986642330325
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322315
  - 0.9016736401673641
  - 0.9004871259568547
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322314
  - 0.9016736401673641
  - 0.9004871259568545
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322314
  - 0.9016736401673641
  - 0.9004871259568547
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8957688588007736
  - 0.8944104838387471
  - 0.8971808289990107
  - 0.8961673962641384
  - 0.8949725688207021
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8250493485590996
  - 0.8197539991189586
  - 0.8239893313087393
  - 0.8248429392620275
  - 0.8225761067213697
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.820480404551201
  - 0.8168224299065421
  - 0.8212605832549389
  - 0.820952380952381
  - 0.8189873417721519
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8364583333333333
  - 0.8332843425436017
  - 0.8364325068870522
  - 0.8378661087866107
  - 0.8346257083209065
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8160312642273988
  - 0.8121188380150246
  - 0.8164585512590115
  - 0.816011053437756
  - 0.8137387206689664
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8674652777777776
  - 0.8744855967078188
  - 0.8731060606060603
  - 0.8805788005578801
  - 0.8704592901878913
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6261492121520148
  - 0.6161143746651602
  - 0.6339798984578398
  - 0.6341671978417891
  - 0.6269189632405291
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6299030525917333
  - 0.6136823350643694
  - 0.6295482827889869
  - 0.6342859417875959
  - 0.6265144007196515
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5026023138347365
  - 0.4889619676513491
  - 0.4972369938074202
  - 0.5105345528840076
  - 0.493593764451161
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6074430974199001
  - 0.6006869190637515
  - 0.6197561917104448
  - 0.6158730624788737
  - 0.6084502760393727
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9028303398827655
  - 0.9070810229385694
  - 0.9063264147778828
  - 0.9123910425994453
  - 0.9044171272012259
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4354166666666666
  - -1.4115226337448559
  - -1.4421487603305785
  - -1.4267782426778242
  - -1.4676409185803758
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09861111111111111
  - -0.10082304526748971
  - -0.09814049586776859
  - -0.09832635983263599
  - -0.09951287404314545
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09861111111111111
  - -0.10082304526748971
  - -0.0981404958677686
  - -0.09832635983263599
  - -0.09951287404314545
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09861111111111111
  - -0.10082304526748971
  - -0.0981404958677686
  - -0.09832635983263599
  - -0.09951287404314543
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1042311411992263
  - -0.10558951616125295
  - -0.10281917100098918
  - -0.10383260373586153
  - -0.10502743117929796
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06890625
  - -0.06954732510288066
  - -0.07257231404958678
  - -0.06621338912133891
  - -0.07562630480167015
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322315
  - 0.9016736401673641
  - 0.9004871259568547
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322314
  - 0.9016736401673641
  - 0.9004871259568545
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322314
  - 0.9016736401673641
  - 0.9004871259568547
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8957688588007736
  - 0.8944104838387471
  - 0.8971808289990107
  - 0.8961673962641384
  - 0.8949725688207021
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322315
  - 0.9016736401673641
  - 0.9004871259568547
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322314
  - 0.9016736401673641
  - 0.9004871259568545
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9013888888888889
  - 0.8991769547325102
  - 0.9018595041322314
  - 0.9016736401673641
  - 0.9004871259568547
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8957688588007736
  - 0.8944104838387471
  - 0.8971808289990107
  - 0.8961673962641384
  - 0.8949725688207021
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9455450936098672
  - 0.9467929780511679
  - 0.9419927787739311
  - 0.9453856983940949
  - 0.9431224977322589
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9540490033732485
  - 0.9520005822816546
  - 0.9489978542786591
  - 0.952994386985484
  - 0.9499181411128863
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.93109375
  - 0.9304526748971194
  - 0.9274276859504132
  - 0.9337866108786611
  - 0.9243736951983298
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.940164761381719
  - 0.9430888403936666
  - 0.9362270765460924
  - 0.9401951063974483
  - 0.9378160337904164
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9945927905133639
  - 0.9946553369988275
  - 0.9939300327075844
  - 0.9942050072118963
  - 0.9948783638133633
  train_average_precision_macro_oob:
  - 0.8613546999230608
  - 0.8603015400812888
  - 0.8553180420938977
  - 0.8534430110153072
  - 0.8556545434660934
  train_average_precision_micro:
  - 0.9943413671292702
  - 0.9944388291898943
  - 0.9933583916825691
  - 0.993954699711676
  - 0.9941623678662577
  train_average_precision_micro_oob:
  - 0.8660440734599624
  - 0.8657923155150574
  - 0.8614823012797848
  - 0.8593475605551117
  - 0.861905014620264
  train_average_precision_samples:
  - 0.9890589863345441
  - 0.9882873503383655
  - 0.9889928930490554
  - 0.9886383272852945
  - 0.9877679806362379
  train_average_precision_samples_oob:
  - 0.8840598512368102
  - 0.8850078084331077
  - 0.8842347027214421
  - 0.8803309141178504
  - 0.8809128630705395
  train_average_precision_weighted:
  - 0.9945403133979341
  - 0.9945710016711794
  - 0.9939008105681606
  - 0.9941205126920415
  - 0.9948019436617154
  train_average_precision_weighted_oob:
  - 0.8527457595139294
  - 0.8509113879370186
  - 0.8465534839255533
  - 0.8442678740916995
  - 0.8462585361646225
  train_f1_macro:
  - 0.9550250821657152
  - 0.9553184105500607
  - 0.9552782111284451
  - 0.956713322965267
  - 0.956777316735823
  train_f1_macro_oob:
  - 0.8971631205673759
  - 0.8994447336456707
  - 0.8984226035708095
  - 0.8944185242785553
  - 0.8948824343015215
  train_f1_micro:
  - 0.9550250821657152
  - 0.9553184105500607
  - 0.9552782111284451
  - 0.956713322965267
  - 0.956777316735823
  train_f1_micro_oob:
  - 0.8971631205673759
  - 0.8994447336456707
  - 0.8984226035708095
  - 0.8944185242785554
  - 0.8948824343015215
  train_f1_samples:
  - 0.9550250821657154
  - 0.9553184105500606
  - 0.9552782111284451
  - 0.956713322965267
  - 0.9567773167358229
  train_f1_samples_oob:
  - 0.897163120567376
  - 0.8994447336456708
  - 0.8984226035708096
  - 0.8944185242785555
  - 0.8948824343015215
  train_f1_weighted:
  - 0.9533876230980097
  - 0.9533005404290741
  - 0.953427822647497
  - 0.9551714118385652
  - 0.9550196639184643
  train_f1_weighted_oob:
  - 0.891966095162001
  - 0.8941111085963178
  - 0.8928877909833374
  - 0.8888900598547568
  - 0.8895905071706619
  train_jaccard_macro:
  - 0.9143376979078651
  - 0.9150124097932834
  - 0.9148904290001582
  - 0.9173899095344688
  - 0.9175872264968818
  train_jaccard_macro_oob:
  - 0.816762015959204
  - 0.8209241233701233
  - 0.8194125372008528
  - 0.8127473160955584
  - 0.8134618208203258
  train_jaccard_micro:
  - 0.9139215361695083
  - 0.9144589319823935
  - 0.9143852663016426
  - 0.9170186335403727
  - 0.9171362280411004
  train_jaccard_micro_oob:
  - 0.8135048231511254
  - 0.8172644856129286
  - 0.8155782848151062
  - 0.809002813379181
  - 0.8097622027534418
  train_jaccard_samples:
  - 0.9244322534410753
  - 0.9246300290027515
  - 0.9249189015179655
  - 0.9269668468735343
  - 0.9271883027069749
  train_jaccard_samples_oob:
  - 0.8280944967504384
  - 0.8321186881832376
  - 0.8311170542059776
  - 0.8231750968920486
  - 0.8241701244813276
  train_jaccard_weighted:
  - 0.9113595372531688
  - 0.9113660067790019
  - 0.9115278102313501
  - 0.9145760418621831
  - 0.9143915798810315
  train_jaccard_weighted_oob:
  - 0.8085026721544911
  - 0.8123963670176774
  - 0.8105526921390274
  - 0.8040002038161411
  - 0.8050656941610755
  train_label_ranking_average_precision_score:
  - 0.989058986334544
  - 0.9882873503383652
  - 0.988992893049055
  - 0.9886383272852944
  - 0.9877679806362376
  train_label_ranking_average_precision_score_oob:
  - 0.8840598512368103
  - 0.8850078084331074
  - 0.8842347027214422
  - 0.8803309141178502
  - 0.8809128630705392
  train_matthews_corrcoef_macro:
  - 0.8448356308017968
  - 0.8473866785225157
  - 0.8464766734838013
  - 0.8505199329996019
  - 0.8515893862458487
  train_matthews_corrcoef_macro_oob:
  - 0.6116148177650284
  - 0.6212992152594377
  - 0.6155134567091627
  - 0.5951057241764521
  - 0.5974176368224255
  train_matthews_corrcoef_micro:
  - 0.8422909569173491
  - 0.8439753205467979
  - 0.843395261353566
  - 0.8481558233651405
  - 0.8487087509715306
  train_matthews_corrcoef_micro_oob:
  - 0.6115442211606653
  - 0.6229687709023933
  - 0.6171202993041318
  - 0.598320222954476
  - 0.6011896587102804
  train_matthews_corrcoef_samples:
  - 0.7779494381018481
  - 0.7818117185147495
  - 0.7831952362166134
  - 0.7854948305756766
  - 0.7855861187369357
  train_matthews_corrcoef_samples_oob:
  - 0.4595716375285524
  - 0.4775821596063894
  - 0.4754900451343134
  - 0.442373230693506
  - 0.44550231885482605
  train_matthews_corrcoef_weighted:
  - 0.8409760646405033
  - 0.8423469010980901
  - 0.8418958965835034
  - 0.8469442374878656
  - 0.8473215068066352
  train_matthews_corrcoef_weighted_oob:
  - 0.5944864172425376
  - 0.6038246280972674
  - 0.5969020117529679
  - 0.5761610545533143
  - 0.5798693917677344
  train_ndgc:
  - 0.9920779024593713
  - 0.991472487595365
  - 0.9919866414352362
  - 0.9917223602936053
  - 0.9910723369925449
  train_ndgc_oob:
  - 0.9143763880640297
  - 0.9153218497357868
  - 0.9147351912237729
  - 0.9117105309709755
  - 0.9122766987416118
  train_neg_coverage_error:
  - -1.100155682407888
  - -1.1046330036439354
  - -1.1024440977639105
  - -1.0979782270606533
  - -1.1026970954356847
  train_neg_coverage_error_oob:
  - -1.4135962636222106
  - -1.4112441436751693
  - -1.4118564742589703
  - -1.4131674442716433
  - -1.4180497925311204
  train_neg_hamming_loss_macro:
  - -0.04497491783428473
  - -0.044681589449939274
  - -0.04472178887155486
  - -0.04328667703473302
  - -0.043222683264177046
  train_neg_hamming_loss_macro_oob:
  - -0.10283687943262411
  - -0.10055526635432936
  - -0.10157739642919049
  - -0.1055814757214446
  - -0.10511756569847856
  train_neg_hamming_loss_micro:
  - -0.04497491783428473
  - -0.04468158944993927
  - -0.04472178887155486
  - -0.043286677034733025
  - -0.04322268326417704
  train_neg_hamming_loss_micro_oob:
  - -0.10283687943262411
  - -0.10055526635432935
  - -0.1015773964291905
  - -0.10558147572144462
  - -0.10511756569847856
  train_neg_hamming_loss_samples:
  - -0.04497491783428472
  - -0.04468158944993927
  - -0.04472178887155486
  - -0.043286677034733025
  - -0.04322268326417704
  train_neg_hamming_loss_samples_oob:
  - -0.1028368794326241
  - -0.10055526635432933
  - -0.10157739642919049
  - -0.1055814757214446
  - -0.10511756569847856
  train_neg_hamming_loss_weighted:
  - -0.046612376901990354
  - -0.04669945957092597
  - -0.04657217735250291
  - -0.04482858816143471
  - -0.04498033608153557
  train_neg_hamming_loss_weighted_oob:
  - -0.10803390483799896
  - -0.10588889140368216
  - -0.10711220901666256
  - -0.11110994014524325
  - -0.11040949282933804
  train_neg_label_ranking_loss:
  - -0.005137519460300987
  - -0.005231650182196773
  - -0.005291211648465939
  - -0.005184033177812338
  - -0.005731327800829876
  train_neg_label_ranking_loss_oob:
  - -0.06656720290607161
  - -0.0646668401874024
  - -0.06527561102444097
  - -0.06675738724727838
  - -0.06709024896265561
  train_precision_macro:
  - 0.9550250821657152
  - 0.9553184105500607
  - 0.9552782111284451
  - 0.956713322965267
  - 0.956777316735823
  train_precision_macro_oob:
  - 0.8971631205673759
  - 0.8994447336456707
  - 0.8984226035708095
  - 0.8944185242785553
  - 0.8948824343015215
  train_precision_micro:
  - 0.9550250821657152
  - 0.9553184105500607
  - 0.9552782111284451
  - 0.956713322965267
  - 0.956777316735823
  train_precision_micro_oob:
  - 0.8971631205673759
  - 0.8994447336456707
  - 0.8984226035708095
  - 0.8944185242785554
  - 0.8948824343015215
  train_precision_samples:
  - 0.9550250821657154
  - 0.9553184105500606
  - 0.9552782111284451
  - 0.956713322965267
  - 0.9567773167358229
  train_precision_samples_oob:
  - 0.897163120567376
  - 0.8994447336456708
  - 0.8984226035708096
  - 0.8944185242785555
  - 0.8948824343015215
  train_precision_weighted:
  - 0.9533876230980097
  - 0.9533005404290741
  - 0.953427822647497
  - 0.9551714118385652
  - 0.9550196639184643
  train_precision_weighted_oob:
  - 0.891966095162001
  - 0.8941111085963178
  - 0.8928877909833374
  - 0.8888900598547568
  - 0.8895905071706619
  train_recall_macro:
  - 0.9550250821657152
  - 0.9553184105500607
  - 0.9552782111284451
  - 0.956713322965267
  - 0.956777316735823
  train_recall_macro_oob:
  - 0.8971631205673759
  - 0.8994447336456707
  - 0.8984226035708095
  - 0.8944185242785553
  - 0.8948824343015215
  train_recall_micro:
  - 0.9550250821657152
  - 0.9553184105500607
  - 0.9552782111284451
  - 0.956713322965267
  - 0.956777316735823
  train_recall_micro_oob:
  - 0.8971631205673759
  - 0.8994447336456707
  - 0.8984226035708095
  - 0.8944185242785554
  - 0.8948824343015215
  train_recall_samples:
  - 0.9550250821657154
  - 0.9553184105500606
  - 0.9552782111284451
  - 0.956713322965267
  - 0.9567773167358229
  train_recall_samples_oob:
  - 0.897163120567376
  - 0.8994447336456708
  - 0.8984226035708096
  - 0.8944185242785555
  - 0.8948824343015215
  train_recall_weighted:
  - 0.9533876230980097
  - 0.9533005404290741
  - 0.953427822647497
  - 0.9551714118385652
  - 0.9550196639184643
  train_recall_weighted_oob:
  - 0.891966095162001
  - 0.8941111085963178
  - 0.8928877909833374
  - 0.8888900598547568
  - 0.8895905071706619
  train_roc_auc_macro:
  - 0.998669908973095
  - 0.9987169517240027
  - 0.9985367604919543
  - 0.9985038564677057
  - 0.9987567889526395
  train_roc_auc_macro_oob:
  - 0.9516958243354082
  - 0.9508448179569715
  - 0.9509540917825859
  - 0.9498070370068947
  - 0.9494539197612735
  train_roc_auc_micro:
  - 0.9986809851197885
  - 0.9987063654086662
  - 0.9984409924584798
  - 0.99856326725016
  - 0.9986386600894265
  train_roc_auc_micro_oob:
  - 0.9567163767078384
  - 0.9565447289045832
  - 0.9559417419518662
  - 0.9557450677902667
  - 0.9557103286443979
  train_roc_auc_samples:
  - 0.994862480539699
  - 0.9947683498178033
  - 0.9947087883515341
  - 0.9948159668221876
  - 0.9942686721991701
  train_roc_auc_samples_oob:
  - 0.9334327970939285
  - 0.9353331598125977
  - 0.934724388975559
  - 0.9332426127527216
  - 0.9329097510373444
  train_roc_auc_weighted:
  - 0.9986299964601878
  - 0.9986788912098326
  - 0.9985168073367371
  - 0.9984512207650008
  - 0.9987186069621796
  train_roc_auc_weighted_oob:
  - 0.9478386310038385
  - 0.9464855427331312
  - 0.947196103208021
  - 0.9455863573532761
  - 0.9451571985143101
start: 2023-12-22 11:26:41.855238
wrapper: null
