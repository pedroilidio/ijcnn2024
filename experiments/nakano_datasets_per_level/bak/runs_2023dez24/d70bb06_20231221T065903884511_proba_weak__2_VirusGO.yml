active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T9AMzMzMzMDQAAzMzMzM+O/YGZmZmZmEsBAMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:59:14.579049
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba_weak__2
  params: {}
hash: d70bb0688a9339a361007865b6ab755688caca74bc33e5708310ba83b22b7a83
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d70bb06_20231221T065903884511_proba_weak__2_VirusGO.yml
results:
  fit_time:
  - 6.197630167007446
  - 6.245394229888916
  - 6.258082151412964
  - 6.295117378234863
  - 6.351028203964233
  score_time:
  - 0.9952428340911865
  - 0.9234800338745117
  - 0.9197690486907959
  - 1.0252783298492432
  - 0.9388806819915771
  test_average_precision_macro:
  - 0.9110773256238608
  - 0.8728620221078706
  - 0.9741090880796763
  - 0.9435052707835482
  - 0.9162533851479399
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7884808391627705
  - 0.8660241072191157
  - 0.8811436990755301
  - 0.8041502737996957
  - 0.8333381161397907
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8715447154471545
  - 0.9082621082621083
  - 0.8670634920634922
  - 0.8626811594202899
  - 0.8512820512820514
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8859289807661924
  - 0.8904701577531172
  - 0.9745221898283124
  - 0.9317849773749322
  - 0.9262402390351306
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8983739837398373
  - 0.905982905982906
  - 0.9206349206349208
  - 0.9202898550724637
  - 0.8931623931623932
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8983739837398373
  - 0.905982905982906
  - 0.9206349206349206
  - 0.9202898550724637
  - 0.8931623931623932
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8983739837398372
  - 0.9059829059829061
  - 0.9206349206349206
  - 0.9202898550724639
  - 0.893162393162393
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.87948350071736
  - 0.8953846153846154
  - 0.9251700680272109
  - 0.919732441471572
  - 0.8846153846153847
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8168221595947861
  - 0.8300840632235981
  - 0.8552366434823463
  - 0.8535294117647059
  - 0.8083933492611881
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8154981549815498
  - 0.828125
  - 0.8529411764705882
  - 0.8523489932885906
  - 0.806949806949807
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8391405342624855
  - 0.851037851037851
  - 0.8656462585034015
  - 0.8680124223602484
  - 0.8327228327228329
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7857506131625323
  - 0.8115702204771972
  - 0.8622461798397086
  - 0.8528355957767721
  - 0.793801577888929
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8715447154471545
  - 0.9082621082621082
  - 0.8670634920634919
  - 0.8626811594202898
  - 0.8512820512820511
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.34493473855371887
  - 0.34931743898146134
  - 0.29311156605012995
  - 0.3646280336411967
  - 0.2552714039695199
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6677521149868099
  - 0.7023956746695316
  - 0.7317888583991647
  - 0.7228655494485983
  - 0.6573866916683312
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6178005397106026
  - 0.6349262733222387
  - 0.5927944427643101
  - 0.65570168826453
  - 0.5457377495893119
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5675722511406104
  - 0.612092321323972
  - 0.6101506068798622
  - 0.6360359756601954
  - 0.5207536640978206
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9071107522790657
  - 0.9339062379541591
  - 0.9005587099711373
  - 0.9019234119114767
  - 0.8927159841539386
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6585365853658536
  - -1.5897435897435896
  - -1.5476190476190477
  - -1.6521739130434783
  - -1.794871794871795
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1016260162601626
  - -0.09401709401709402
  - -0.07936507936507936
  - -0.07971014492753624
  - -0.10683760683760683
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1016260162601626
  - -0.09401709401709402
  - -0.07936507936507936
  - -0.07971014492753623
  - -0.10683760683760683
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10162601626016259
  - -0.09401709401709402
  - -0.07936507936507935
  - -0.07971014492753623
  - -0.10683760683760682
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.12051649928263988
  - -0.10461538461538461
  - -0.07482993197278912
  - -0.0802675585284281
  - -0.1153846153846154
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07621951219512195
  - -0.06047008547008547
  - -0.0761904761904762
  - -0.09130434782608696
  - -0.09423076923076924
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8983739837398373
  - 0.905982905982906
  - 0.9206349206349208
  - 0.9202898550724637
  - 0.8931623931623932
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8983739837398373
  - 0.905982905982906
  - 0.9206349206349206
  - 0.9202898550724637
  - 0.8931623931623932
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8983739837398372
  - 0.9059829059829061
  - 0.9206349206349206
  - 0.9202898550724639
  - 0.893162393162393
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.87948350071736
  - 0.8953846153846154
  - 0.9251700680272109
  - 0.919732441471572
  - 0.8846153846153847
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8983739837398373
  - 0.905982905982906
  - 0.9206349206349208
  - 0.9202898550724637
  - 0.8931623931623932
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8983739837398373
  - 0.905982905982906
  - 0.9206349206349206
  - 0.9202898550724637
  - 0.8931623931623932
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8983739837398372
  - 0.9059829059829061
  - 0.9206349206349206
  - 0.9202898550724639
  - 0.893162393162393
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.87948350071736
  - 0.8953846153846154
  - 0.9251700680272109
  - 0.919732441471572
  - 0.8846153846153847
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9623022689295068
  - 0.9399279029793735
  - 0.9914233841684822
  - 0.9769427406978116
  - 0.9611691141102906
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9418803418803418
  - 0.9448913043478261
  - 0.9553634261586408
  - 0.9375
  - 0.9334239130434783
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9237804878048781
  - 0.9395299145299145
  - 0.9238095238095237
  - 0.908695652173913
  - 0.9057692307692309
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9358693009242129
  - 0.9282743506493507
  - 0.9863038548752835
  - 0.9678026714664646
  - 0.955134199134199
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9373023440202592
  - 0.9605305562118986
  - 0.9318978228038569
  - 0.9386724989139438
  - 0.9554405817279973
  train_average_precision_macro_oob:
  - 0.906973560702038
  - 0.9453067837549075
  - 0.8907052336985034
  - 0.897700495015132
  - 0.9387087690120657
  train_average_precision_micro:
  - 0.8652736342145969
  - 0.8727614343504386
  - 0.8541889715298465
  - 0.8465606598861333
  - 0.8675229773700037
  train_average_precision_micro_oob:
  - 0.8382283177178105
  - 0.8540145203292029
  - 0.8191965230883516
  - 0.8149825289574143
  - 0.8327828680670895
  train_average_precision_samples:
  - 0.9126506024096386
  - 0.9305555555555555
  - 0.8941414141414141
  - 0.8774327122153208
  - 0.9186507936507935
  train_average_precision_samples_oob:
  - 0.8786144578313253
  - 0.9024801587301587
  - 0.8746464646464647
  - 0.8423395445134576
  - 0.8912698412698412
  train_average_precision_weighted:
  - 0.931837567471634
  - 0.9486666744984306
  - 0.9246572189978132
  - 0.9327041425561796
  - 0.9477597570513179
  train_average_precision_weighted_oob:
  - 0.9094203276508361
  - 0.9413681588426226
  - 0.8956058701102197
  - 0.9019074938044805
  - 0.9300725468256317
  train_f1_macro:
  - 0.927710843373494
  - 0.9236111111111112
  - 0.9171717171717172
  - 0.922360248447205
  - 0.9156746031746033
  train_f1_macro_oob:
  - 0.9236947791164658
  - 0.9136904761904763
  - 0.907070707070707
  - 0.9140786749482402
  - 0.9126984126984127
  train_f1_micro:
  - 0.927710843373494
  - 0.9236111111111112
  - 0.9171717171717172
  - 0.922360248447205
  - 0.9156746031746031
  train_f1_micro_oob:
  - 0.9236947791164659
  - 0.9136904761904762
  - 0.907070707070707
  - 0.9140786749482401
  - 0.9126984126984127
  train_f1_samples:
  - 0.927710843373494
  - 0.9236111111111113
  - 0.9171717171717171
  - 0.922360248447205
  - 0.9156746031746034
  train_f1_samples_oob:
  - 0.9236947791164658
  - 0.9136904761904762
  - 0.9070707070707071
  - 0.9140786749482402
  - 0.9126984126984128
  train_f1_weighted:
  - 0.9291194629263322
  - 0.9230905233380481
  - 0.9142558590834453
  - 0.9231987577639751
  - 0.9198196605374822
  train_f1_weighted_oob:
  - 0.9222262183060602
  - 0.9141324846770392
  - 0.8988505747126437
  - 0.9101863354037267
  - 0.9149870344177276
  train_jaccard_macro:
  - 0.8659407010519731
  - 0.8585912936717645
  - 0.8478899664190008
  - 0.856696239997848
  - 0.8465642989223169
  train_jaccard_macro_oob:
  - 0.8591085818603034
  - 0.8422170246659166
  - 0.83126740230422
  - 0.8426117871508287
  - 0.8415896362008253
  train_jaccard_micro:
  - 0.8651685393258427
  - 0.8580645161290322
  - 0.8470149253731343
  - 0.8559077809798271
  - 0.8444647758462946
  train_jaccard_micro_oob:
  - 0.8582089552238806
  - 0.8410958904109589
  - 0.8299445471349353
  - 0.8417540514775977
  - 0.8394160583941606
  train_jaccard_samples:
  - 0.8819563970166381
  - 0.8757086167800454
  - 0.8668109668109668
  - 0.8745933155871043
  - 0.861111111111111
  train_jaccard_samples_oob:
  - 0.8755020080321284
  - 0.8598356009070296
  - 0.8506493506493505
  - 0.862762496302869
  - 0.8564342403628119
  train_jaccard_weighted:
  - 0.868035651322018
  - 0.8573382834319944
  - 0.8428199316539466
  - 0.8577094092475788
  - 0.8532417929755888
  train_jaccard_weighted_oob:
  - 0.8563447691364559
  - 0.8424463958716187
  - 0.8174406686305425
  - 0.835432300165568
  - 0.8449585419703557
  train_label_ranking_average_precision_score:
  - 0.9126506024096384
  - 0.9305555555555555
  - 0.8941414141414139
  - 0.877432712215321
  - 0.9186507936507934
  train_label_ranking_average_precision_score_oob:
  - 0.8786144578313254
  - 0.9024801587301586
  - 0.8746464646464648
  - 0.8423395445134574
  - 0.8912698412698413
  train_matthews_corrcoef_macro:
  - 0.4048956147477827
  - 0.39469216602696444
  - 0.3798796388157049
  - 0.39200010032062255
  - 0.3298977038199386
  train_matthews_corrcoef_macro_oob:
  - 0.39391626456542456
  - 0.3407445892402186
  - 0.3465336418892429
  - 0.3657371147762752
  - 0.3134327602295401
  train_matthews_corrcoef_micro:
  - 0.7640811803047197
  - 0.7481398550427881
  - 0.7309273452606222
  - 0.7510165095231662
  - 0.7200181490114218
  train_matthews_corrcoef_micro_oob:
  - 0.7500304310033962
  - 0.7126646371094608
  - 0.6953414878169666
  - 0.7225814255369555
  - 0.7092835309234722
  train_matthews_corrcoef_samples:
  - 0.6934887681442032
  - 0.6737468237166911
  - 0.6659245999701441
  - 0.6786499871491083
  - 0.6110959382949821
  train_matthews_corrcoef_samples_oob:
  - 0.672811325180145
  - 0.6204808517044857
  - 0.6262285575495445
  - 0.6501966590156727
  - 0.5954265601281149
  train_matthews_corrcoef_weighted:
  - 0.6794775334949953
  - 0.6607744768095752
  - 0.6411711966670687
  - 0.6647740071548072
  - 0.6202597623376761
  train_matthews_corrcoef_weighted_oob:
  - 0.6630769558839845
  - 0.6165290860666504
  - 0.5991958057573771
  - 0.6307030062440443
  - 0.6019685352526906
  train_ndgc:
  - 0.9370828007043717
  - 0.9493344088827818
  - 0.9229725580463135
  - 0.9104660966863342
  - 0.941615514328962
  train_ndgc_oob:
  - 0.911287966393933
  - 0.9287708957434042
  - 0.9099593043860762
  - 0.8850865092711139
  - 0.9207401221900127
  train_neg_coverage_error:
  - -1.4879518072289157
  - -1.3928571428571428
  - -1.5696969696969696
  - -1.6335403726708075
  - -1.4523809523809523
  train_neg_coverage_error_oob:
  - -1.6204819277108433
  - -1.5178571428571428
  - -1.690909090909091
  - -1.7763975155279503
  - -1.5714285714285714
  train_neg_hamming_loss_macro:
  - -0.07228915662650602
  - -0.07638888888888888
  - -0.08282828282828282
  - -0.07763975155279502
  - -0.08432539682539682
  train_neg_hamming_loss_macro_oob:
  - -0.07630522088353414
  - -0.0863095238095238
  - -0.09292929292929292
  - -0.08592132505175983
  - -0.08730158730158728
  train_neg_hamming_loss_micro:
  - -0.07228915662650602
  - -0.0763888888888889
  - -0.08282828282828283
  - -0.07763975155279502
  - -0.08432539682539683
  train_neg_hamming_loss_micro_oob:
  - -0.07630522088353414
  - -0.08630952380952381
  - -0.09292929292929293
  - -0.08592132505175984
  - -0.0873015873015873
  train_neg_hamming_loss_samples:
  - -0.07228915662650602
  - -0.07638888888888888
  - -0.08282828282828282
  - -0.07763975155279502
  - -0.08432539682539682
  train_neg_hamming_loss_samples_oob:
  - -0.07630522088353413
  - -0.08630952380952381
  - -0.09292929292929292
  - -0.08592132505175983
  - -0.08730158730158728
  train_neg_hamming_loss_weighted:
  - -0.0708805370736678
  - -0.07690947666195191
  - -0.0857441409165547
  - -0.07680124223602483
  - -0.08018033946251767
  train_neg_hamming_loss_weighted_oob:
  - -0.07777378169393995
  - -0.08586751532296087
  - -0.10114942528735633
  - -0.0898136645962733
  - -0.08501296558227253
  train_neg_label_ranking_loss:
  - -0.050368139223560905
  - -0.036309523809523805
  - -0.06400673400673401
  - -0.07351621808143548
  - -0.045453042328042335
  train_neg_label_ranking_loss_oob:
  - -0.07702476572958501
  - -0.06011904761904763
  - -0.08255892255892257
  - -0.09912008281573499
  - -0.0695436507936508
  train_precision_macro:
  - 0.927710843373494
  - 0.9236111111111112
  - 0.9171717171717172
  - 0.922360248447205
  - 0.9156746031746033
  train_precision_macro_oob:
  - 0.9236947791164658
  - 0.9136904761904763
  - 0.907070707070707
  - 0.9140786749482402
  - 0.9126984126984127
  train_precision_micro:
  - 0.927710843373494
  - 0.9236111111111112
  - 0.9171717171717172
  - 0.922360248447205
  - 0.9156746031746031
  train_precision_micro_oob:
  - 0.9236947791164659
  - 0.9136904761904762
  - 0.907070707070707
  - 0.9140786749482401
  - 0.9126984126984127
  train_precision_samples:
  - 0.927710843373494
  - 0.9236111111111113
  - 0.9171717171717171
  - 0.922360248447205
  - 0.9156746031746034
  train_precision_samples_oob:
  - 0.9236947791164658
  - 0.9136904761904762
  - 0.9070707070707071
  - 0.9140786749482402
  - 0.9126984126984128
  train_precision_weighted:
  - 0.9291194629263322
  - 0.9230905233380481
  - 0.9142558590834453
  - 0.9231987577639751
  - 0.9198196605374822
  train_precision_weighted_oob:
  - 0.9222262183060602
  - 0.9141324846770392
  - 0.8988505747126437
  - 0.9101863354037267
  - 0.9149870344177276
  train_recall_macro:
  - 0.927710843373494
  - 0.9236111111111112
  - 0.9171717171717172
  - 0.922360248447205
  - 0.9156746031746033
  train_recall_macro_oob:
  - 0.9236947791164658
  - 0.9136904761904763
  - 0.907070707070707
  - 0.9140786749482402
  - 0.9126984126984127
  train_recall_micro:
  - 0.927710843373494
  - 0.9236111111111112
  - 0.9171717171717172
  - 0.922360248447205
  - 0.9156746031746031
  train_recall_micro_oob:
  - 0.9236947791164659
  - 0.9136904761904762
  - 0.907070707070707
  - 0.9140786749482401
  - 0.9126984126984127
  train_recall_samples:
  - 0.927710843373494
  - 0.9236111111111113
  - 0.9171717171717171
  - 0.922360248447205
  - 0.9156746031746034
  train_recall_samples_oob:
  - 0.9236947791164658
  - 0.9136904761904762
  - 0.9070707070707071
  - 0.9140786749482402
  - 0.9126984126984128
  train_recall_weighted:
  - 0.9291194629263322
  - 0.9230905233380481
  - 0.9142558590834453
  - 0.9231987577639751
  - 0.9198196605374822
  train_recall_weighted_oob:
  - 0.9222262183060602
  - 0.9141324846770392
  - 0.8988505747126437
  - 0.9101863354037267
  - 0.9149870344177276
  train_roc_auc_macro:
  - 0.9796694491218089
  - 0.9853893586519972
  - 0.9765487937888983
  - 0.9812966383537961
  - 0.9841134640360147
  train_roc_auc_macro_oob:
  - 0.9671767696637206
  - 0.9772539777120443
  - 0.9578687359017203
  - 0.9662488944961457
  - 0.9713935959760295
  train_roc_auc_micro:
  - 0.9561782283550799
  - 0.9647077610986906
  - 0.9535055489136899
  - 0.9482963446475196
  - 0.9576935361029899
  train_roc_auc_micro_oob:
  - 0.9426202321724709
  - 0.9521226936589441
  - 0.9377132091061022
  - 0.9358289817232376
  - 0.9430815910375157
  train_roc_auc_samples:
  - 0.949631860776439
  - 0.9636904761904762
  - 0.935993265993266
  - 0.9264837819185645
  - 0.9545469576719576
  train_roc_auc_samples_oob:
  - 0.922975234270415
  - 0.9398809523809523
  - 0.9174410774410775
  - 0.900879917184265
  - 0.9304563492063492
  train_roc_auc_weighted:
  - 0.9682472081000427
  - 0.9773570286221249
  - 0.9655011879539405
  - 0.9717670177913409
  - 0.9747066277322957
  train_roc_auc_weighted_oob:
  - 0.9540471323165364
  - 0.970099646983678
  - 0.948825686329572
  - 0.958607723029738
  - 0.9571281187146216
start: 2023-12-21 06:59:03.884511
wrapper: null
