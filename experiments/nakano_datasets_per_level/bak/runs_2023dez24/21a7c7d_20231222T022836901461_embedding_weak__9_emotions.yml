active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBECgmZmZmZn5P6CZmZmZmfk/mJmZmZmZHcCgmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b+AMzMzMzPjP3BmZmZmZhZAkJmZmZmZGcCAMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:46:25.797986
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__9
  params: {}
hash: 21a7c7da98ec47c5c63be32004030aeee1877b38aa4c6b36f5291db3dfa5d5b6
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/21a7c7d_20231222T022836901461_embedding_weak__9_emotions.yml
results:
  fit_time:
  - 1013.4281713962555
  - 1029.5886979103088
  - 1032.9739501476288
  - 1027.6720383167267
  - 1048.5019552707672
  score_time:
  - 5.621432542800903
  - 6.368699312210083
  - 6.868801593780518
  - 6.678461074829102
  - 6.074936866760254
  test_average_precision_macro:
  - 0.7097664303134371
  - 0.7487603021435884
  - 0.7546812544447276
  - 0.6772965696673602
  - 0.7169229079581023
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6643909309120072
  - 0.6835834431214736
  - 0.6366680877615217
  - 0.601616087799545
  - 0.6443110605712126
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7625816993464052
  - 0.7895715630885122
  - 0.7574237954768929
  - 0.7512
  - 0.7255649717514123
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7103270852846632
  - 0.7473700552497451
  - 0.74120844111251
  - 0.6754472031291003
  - 0.7152368863561132
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7899159663865546
  - 0.8036723163841808
  - 0.7876106194690266
  - 0.7773333333333333
  - 0.7937853107344632
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7899159663865546
  - 0.8036723163841808
  - 0.7876106194690266
  - 0.7773333333333333
  - 0.7937853107344632
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7899159663865545
  - 0.8036723163841807
  - 0.7876106194690267
  - 0.7773333333333333
  - 0.7937853107344633
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7782658517952635
  - 0.7934274100774599
  - 0.7720127692245524
  - 0.7635633187772926
  - 0.7826406624874237
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6578979290290295
  - 0.6764048428810354
  - 0.65804732672971
  - 0.6436260308242474
  - 0.6633580464845957
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6527777777777778
  - 0.6717827626918536
  - 0.6496350364963503
  - 0.6357688113413305
  - 0.65807962529274
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.691236494597839
  - 0.70137207425343
  - 0.6833544037083858
  - 0.6697523809523808
  - 0.688135593220339
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6424200640582468
  - 0.6622117559335634
  - 0.6384477115471164
  - 0.6258863191184437
  - 0.6485869509118674
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7625816993464052
  - 0.7895715630885121
  - 0.7574237954768925
  - 0.7512000000000001
  - 0.7255649717514127
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.49045040869935236
  - 0.5356351057107646
  - 0.5107922052344148
  - 0.47811921126272044
  - 0.5078173871055675
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.49353052299225497
  - 0.5319685708342128
  - 0.4950099764487585
  - 0.46464325891786373
  - 0.5020401459428967
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.47991370030447966
  - 0.5365249427652049
  - 0.495423391619678
  - 0.476274799409646
  - 0.4762322611291589
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.48596480426346517
  - 0.5317991404531316
  - 0.5005421860298606
  - 0.4740464990817531
  - 0.5051181060161863
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8336684285952913
  - 0.8542048732423176
  - 0.8335981896497764
  - 0.8302601586736948
  - 0.8083218505648242
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8403361344537816
  - -2.7203389830508473
  - -2.9292035398230087
  - -2.896
  - -3.0847457627118646
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21008403361344538
  - -0.1963276836158192
  - -0.21238938053097345
  - -0.22266666666666665
  - -0.20621468926553674
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21008403361344538
  - -0.1963276836158192
  - -0.21238938053097345
  - -0.22266666666666668
  - -0.2062146892655367
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21008403361344538
  - -0.19632768361581923
  - -0.21238938053097342
  - -0.22266666666666665
  - -0.2062146892655367
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.22173414820473644
  - -0.20657258992254007
  - -0.2279872307754475
  - -0.23643668122270745
  - -0.21735933751257638
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.18898225957049486
  - -0.15256591337099815
  - -0.18564405113077678
  - -0.19353333333333333
  - -0.2198210922787194
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7899159663865546
  - 0.8036723163841808
  - 0.7876106194690266
  - 0.7773333333333333
  - 0.7937853107344632
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7899159663865546
  - 0.8036723163841808
  - 0.7876106194690266
  - 0.7773333333333333
  - 0.7937853107344632
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7899159663865545
  - 0.8036723163841807
  - 0.7876106194690267
  - 0.7773333333333333
  - 0.7937853107344633
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7782658517952635
  - 0.7934274100774599
  - 0.7720127692245524
  - 0.7635633187772926
  - 0.7826406624874237
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7899159663865546
  - 0.8036723163841808
  - 0.7876106194690266
  - 0.7773333333333333
  - 0.7937853107344632
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7899159663865546
  - 0.8036723163841808
  - 0.7876106194690266
  - 0.7773333333333333
  - 0.7937853107344632
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7899159663865545
  - 0.8036723163841807
  - 0.7876106194690267
  - 0.7773333333333333
  - 0.7937853107344633
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7782658517952635
  - 0.7934274100774599
  - 0.7720127692245524
  - 0.7635633187772926
  - 0.7826406624874237
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8457269584182064
  - 0.8686599696698
  - 0.8500595384044695
  - 0.824518159639716
  - 0.8379784583608855
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8409919028340082
  - 0.8577587408364072
  - 0.8458928980014125
  - 0.8103831228155461
  - 0.8311062554276271
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8110177404295053
  - 0.8474340866290019
  - 0.8143559488692232
  - 0.8064666666666667
  - 0.7801789077212805
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8449542130559088
  - 0.8665142827242158
  - 0.8401702187353202
  - 0.822003266612047
  - 0.8383920004823914
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8825999781548376
  - 0.8977120141501348
  - 0.932279554134061
  - 0.8858132650598199
  - 0.9097587383414775
  train_average_precision_macro_oob:
  - 0.7362171082867675
  - 0.7243960499613854
  - 0.7454685893069984
  - 0.736771600443344
  - 0.7492178472847998
  train_average_precision_micro:
  - 0.7351730341478339
  - 0.7355980603268316
  - 0.7592903878109667
  - 0.7346706537598928
  - 0.7406523741233723
  train_average_precision_micro_oob:
  - 0.6530786750050132
  - 0.6393053942910706
  - 0.6533729057093721
  - 0.6561848442312268
  - 0.6472517409181362
  train_average_precision_samples:
  - 0.831235349273324
  - 0.8331695906432749
  - 0.8492013888888889
  - 0.8220560303893636
  - 0.841719298245614
  train_average_precision_samples_oob:
  - 0.7797409751523674
  - 0.7535263157894737
  - 0.7564814814814815
  - 0.7688330959164292
  - 0.7679883040935673
  train_average_precision_weighted:
  - 0.8617765283403179
  - 0.8770312401185824
  - 0.9146411889249069
  - 0.8658206768711147
  - 0.8896140375999012
  train_average_precision_weighted_oob:
  - 0.7287628874795948
  - 0.7170793573391522
  - 0.7405389455660302
  - 0.7313886016933177
  - 0.7415637962163851
  train_f1_macro:
  - 0.8565400843881856
  - 0.8536842105263157
  - 0.8652777777777777
  - 0.861823361823362
  - 0.8663157894736843
  train_f1_macro_oob:
  - 0.7911392405063292
  - 0.7891228070175438
  - 0.7854166666666668
  - 0.7884615384615383
  - 0.7842105263157895
  train_f1_micro:
  - 0.8565400843881856
  - 0.8536842105263158
  - 0.8652777777777778
  - 0.8618233618233618
  - 0.8663157894736843
  train_f1_micro_oob:
  - 0.7911392405063291
  - 0.7891228070175439
  - 0.7854166666666667
  - 0.7884615384615384
  - 0.7842105263157895
  train_f1_samples:
  - 0.8565400843881856
  - 0.8536842105263158
  - 0.8652777777777778
  - 0.8618233618233619
  - 0.8663157894736843
  train_f1_samples_oob:
  - 0.7911392405063291
  - 0.7891228070175439
  - 0.7854166666666667
  - 0.7884615384615384
  - 0.7842105263157895
  train_f1_weighted:
  - 0.8412589804994868
  - 0.8375434640716787
  - 0.8500820209973754
  - 0.8441240531684219
  - 0.8488449470132023
  train_f1_weighted_oob:
  - 0.7793885657809709
  - 0.775795407345873
  - 0.7738727971503564
  - 0.7753201481870424
  - 0.7694748682730448
  train_jaccard_macro:
  - 0.7566117804831282
  - 0.7542745065212473
  - 0.7719609798426338
  - 0.766468531438421
  - 0.7756841222591214
  train_jaccard_macro_oob:
  - 0.6602567834555345
  - 0.6587816599752839
  - 0.6520481480364847
  - 0.6572899365539865
  - 0.6523454444629154
  train_jaccard_micro:
  - 0.7490774907749077
  - 0.7447199265381084
  - 0.762545899632803
  - 0.7571964956195244
  - 0.7641597028783659
  train_jaccard_micro_oob:
  - 0.6544502617801047
  - 0.6516951608229499
  - 0.6466552315608919
  - 0.6507936507936508
  - 0.645021645021645
  train_jaccard_samples:
  - 0.7783001808318263
  - 0.7726716791979948
  - 0.789156746031746
  - 0.7866707366707366
  - 0.7901654135338344
  train_jaccard_samples_oob:
  - 0.6880249146071932
  - 0.6836791979949873
  - 0.6777579365079365
  - 0.683078958078958
  - 0.678065162907268
  train_jaccard_weighted:
  - 0.7349907918213328
  - 0.7319865304890099
  - 0.7506838525096549
  - 0.7415974789304153
  - 0.7515181551050089
  train_jaccard_weighted_oob:
  - 0.6447275226100936
  - 0.6414987691222879
  - 0.6368294452582587
  - 0.6403607349890299
  - 0.6336193617139009
  train_label_ranking_average_precision_score:
  - 0.831235349273323
  - 0.8331695906432742
  - 0.8492013888888881
  - 0.8220560303893629
  - 0.8417192982456131
  train_label_ranking_average_precision_score_oob:
  - 0.7797409751523666
  - 0.7535263157894727
  - 0.7564814814814808
  - 0.7688330959164282
  - 0.7679883040935666
  train_matthews_corrcoef_macro:
  - 0.6928742892015212
  - 0.6853613270631178
  - 0.7105286277464428
  - 0.7100458845442931
  - 0.7178307385898709
  train_matthews_corrcoef_macro_oob:
  - 0.5038417953087041
  - 0.49568619267118413
  - 0.4829218262684138
  - 0.49733448835549304
  - 0.49128099150391585
  train_matthews_corrcoef_micro:
  - 0.6636228832649438
  - 0.6540189552911227
  - 0.6783202854947619
  - 0.6801563639173396
  - 0.6861329684489269
  train_matthews_corrcoef_micro_oob:
  - 0.4981371973127475
  - 0.4897623429436568
  - 0.47534648080157554
  - 0.49374364074854626
  - 0.4782356125177291
  train_matthews_corrcoef_samples:
  - 0.6603027334821772
  - 0.6458542177710263
  - 0.665887353946386
  - 0.6751738541191545
  - 0.6882049073817624
  train_matthews_corrcoef_samples_oob:
  - 0.4981429689109502
  - 0.47562676764493556
  - 0.4636716488584027
  - 0.4904254287679006
  - 0.4734618211440743
  train_matthews_corrcoef_weighted:
  - 0.6749736423684358
  - 0.6673061481737381
  - 0.6935854680272354
  - 0.6881333235900478
  - 0.6968916304743208
  train_matthews_corrcoef_weighted_oob:
  - 0.500043114247757
  - 0.4903724122297049
  - 0.47966481862383265
  - 0.49278251126868605
  - 0.48345027555383996
  train_ndgc:
  - 0.8777433527427609
  - 0.8793887662811868
  - 0.8910365667972565
  - 0.8707024381890958
  - 0.8855923428953931
  train_ndgc_oob:
  - 0.8478521141354683
  - 0.8278855524234195
  - 0.8295754362651697
  - 0.8385031492339196
  - 0.8386605289219994
  train_neg_coverage_error:
  - -2.331223628691983
  - -2.305263157894737
  - -2.2416666666666667
  - -2.358974358974359
  - -2.288421052631579
  train_neg_coverage_error_oob:
  - -2.79957805907173
  - -2.8589473684210525
  - -2.825
  - -2.8205128205128207
  - -2.776842105263158
  train_neg_hamming_loss_macro:
  - -0.14345991561181437
  - -0.1463157894736842
  - -0.13472222222222222
  - -0.13817663817663817
  - -0.1336842105263158
  train_neg_hamming_loss_macro_oob:
  - -0.2088607594936709
  - -0.21087719298245614
  - -0.21458333333333326
  - -0.21153846153846156
  - -0.21578947368421056
  train_neg_hamming_loss_micro:
  - -0.14345991561181434
  - -0.1463157894736842
  - -0.13472222222222222
  - -0.13817663817663817
  - -0.1336842105263158
  train_neg_hamming_loss_micro_oob:
  - -0.2088607594936709
  - -0.21087719298245614
  - -0.21458333333333332
  - -0.21153846153846154
  - -0.21578947368421053
  train_neg_hamming_loss_samples:
  - -0.14345991561181434
  - -0.1463157894736842
  - -0.13472222222222222
  - -0.1381766381766382
  - -0.13368421052631577
  train_neg_hamming_loss_samples_oob:
  - -0.2088607594936709
  - -0.2108771929824561
  - -0.2145833333333333
  - -0.21153846153846154
  - -0.21578947368421053
  train_neg_hamming_loss_weighted:
  - -0.15874101950051314
  - -0.16245653592832132
  - -0.14991797900262469
  - -0.15587594683157824
  - -0.1511550529867977
  train_neg_hamming_loss_weighted_oob:
  - -0.22061143421902918
  - -0.22420459265412684
  - -0.22612720284964377
  - -0.2246798518129576
  - -0.2305251317269552
  train_neg_label_ranking_loss:
  - -0.0970815752461322
  - -0.09190058479532162
  - -0.08150462962962962
  - -0.10150759734093068
  - -0.08864327485380115
  train_neg_label_ranking_loss_oob:
  - -0.16991326769807782
  - -0.1847076023391813
  - -0.1796238425925926
  - -0.1738900759734093
  - -0.17107602339181288
  train_precision_macro:
  - 0.8565400843881856
  - 0.8536842105263157
  - 0.8652777777777777
  - 0.861823361823362
  - 0.8663157894736843
  train_precision_macro_oob:
  - 0.7911392405063292
  - 0.7891228070175438
  - 0.7854166666666668
  - 0.7884615384615383
  - 0.7842105263157895
  train_precision_micro:
  - 0.8565400843881856
  - 0.8536842105263158
  - 0.8652777777777778
  - 0.8618233618233618
  - 0.8663157894736843
  train_precision_micro_oob:
  - 0.7911392405063291
  - 0.7891228070175439
  - 0.7854166666666667
  - 0.7884615384615384
  - 0.7842105263157895
  train_precision_samples:
  - 0.8565400843881856
  - 0.8536842105263158
  - 0.8652777777777778
  - 0.8618233618233619
  - 0.8663157894736843
  train_precision_samples_oob:
  - 0.7911392405063291
  - 0.7891228070175439
  - 0.7854166666666667
  - 0.7884615384615384
  - 0.7842105263157895
  train_precision_weighted:
  - 0.8412589804994868
  - 0.8375434640716787
  - 0.8500820209973754
  - 0.8441240531684219
  - 0.8488449470132023
  train_precision_weighted_oob:
  - 0.7793885657809709
  - 0.775795407345873
  - 0.7738727971503564
  - 0.7753201481870424
  - 0.7694748682730448
  train_recall_macro:
  - 0.8565400843881856
  - 0.8536842105263157
  - 0.8652777777777777
  - 0.861823361823362
  - 0.8663157894736843
  train_recall_macro_oob:
  - 0.7911392405063292
  - 0.7891228070175438
  - 0.7854166666666668
  - 0.7884615384615383
  - 0.7842105263157895
  train_recall_micro:
  - 0.8565400843881856
  - 0.8536842105263158
  - 0.8652777777777778
  - 0.8618233618233618
  - 0.8663157894736843
  train_recall_micro_oob:
  - 0.7911392405063291
  - 0.7891228070175439
  - 0.7854166666666667
  - 0.7884615384615384
  - 0.7842105263157895
  train_recall_samples:
  - 0.8565400843881856
  - 0.8536842105263158
  - 0.8652777777777778
  - 0.8618233618233619
  - 0.8663157894736843
  train_recall_samples_oob:
  - 0.7911392405063291
  - 0.7891228070175439
  - 0.7854166666666667
  - 0.7884615384615384
  - 0.7842105263157895
  train_recall_weighted:
  - 0.8412589804994868
  - 0.8375434640716787
  - 0.8500820209973754
  - 0.8441240531684219
  - 0.8488449470132023
  train_recall_weighted_oob:
  - 0.7793885657809709
  - 0.775795407345873
  - 0.7738727971503564
  - 0.7753201481870424
  - 0.7694748682730448
  train_roc_auc_macro:
  - 0.9504497324073983
  - 0.9568131144453726
  - 0.9664630162668147
  - 0.9530819458512826
  - 0.9606905438378098
  train_roc_auc_macro_oob:
  - 0.8582436500513119
  - 0.8537185443369307
  - 0.8660675293794772
  - 0.8606101326712806
  - 0.8637584354446158
  train_roc_auc_micro:
  - 0.9236519878774481
  - 0.9251829648956655
  - 0.9327457247150986
  - 0.9211714381593202
  - 0.9270912145670726
  train_roc_auc_micro_oob:
  - 0.8463770518985243
  - 0.84180966826539
  - 0.8463773143374657
  - 0.8463462002334289
  - 0.8456940715149005
  train_roc_auc_samples:
  - 0.9029184247538679
  - 0.9080994152046784
  - 0.9184953703703704
  - 0.8984924026590693
  - 0.9113567251461989
  train_roc_auc_samples_oob:
  - 0.8300867323019222
  - 0.8152923976608186
  - 0.8203761574074074
  - 0.8261099240265907
  - 0.8289239766081871
  train_roc_auc_weighted:
  - 0.9391168283119553
  - 0.9455382320505259
  - 0.9571233659201882
  - 0.9422922036542266
  - 0.949579938070959
  train_roc_auc_weighted_oob:
  - 0.8540927011712671
  - 0.8498348081552493
  - 0.8630561418941936
  - 0.857456453024559
  - 0.8596292364523069
start: 2023-12-22 02:28:36.901461
wrapper: null
