active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzM/D8AMzMzMzPzvwCYmZmZmcm/AJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 21:18:43.783165
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__4
  params: {}
hash: 60134f6d9b66cf789faf13d579a0869350b4a65962f8c9e3c700a1d0057311f1
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/60134f6_20231221T211800676896_embedding_proba_weak__4_GrampositivePseAAC.yml
results:
  fit_time:
  - 26.950255155563354
  - 26.716476678848267
  - 28.13339376449585
  - 28.7135751247406
  - 27.651732683181763
  score_time:
  - 3.9387660026550293
  - 3.7039928436279297
  - 4.3114333152771
  - 4.081326246261597
  - 4.208827018737793
  test_average_precision_macro:
  - 0.3927191027944962
  - 0.39326705051146593
  - 0.3630152363943926
  - 0.40933020417128896
  - 0.37451840987271945
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4817989844324892
  - 0.48624079664280173
  - 0.45261551431806685
  - 0.48153002928674704
  - 0.4510197577264182
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7287581699346405
  - 0.7
  - 0.6995192307692307
  - 0.703525641025641
  - 0.7019230769230769
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.470672100164406
  - 0.49006101271873287
  - 0.44411813465108124
  - 0.4828243894717826
  - 0.4654468445145564
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846153
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846154
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846154
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6682539682539683
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6746336996336997
  - 0.6626294378698225
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6192335333083365
  - 0.6207709774756927
  - 0.6224964113973193
  - 0.6175582344398223
  - 0.610810967137567
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5968688845401174
  - 0.6
  - 0.6
  - 0.5969289827255279
  - 0.5877862595419847
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6026143790849673
  - 0.5999999999999999
  - 0.5999999999999999
  - 0.5987179487179486
  - 0.5910256410256409
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5083327679278186
  - 0.5169160900972294
  - 0.5100143544107231
  - 0.5159844125295137
  - 0.5046880049290506
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7287581699346407
  - 0.6999999999999998
  - 0.699519230769231
  - 0.703525641025641
  - 0.7019230769230771
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06012210726469261
  - 0.0
  - 0.0
  - 0.014714855070600524
  - -0.009978845417201225
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.11892969170906878
  - 0.0
  - 0.0
  - 0.03961660067615511
  - -0.023281009858985943
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.03507206146264339
  - 0.0
  - 0.0
  - 0.006410256410256411
  - -0.006410256410256409
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.08315088120959278
  - 0.0
  - 0.0
  - 0.015077619942632596
  - -0.02525189827432985
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7987954655643159
  - 0.7766036961919207
  - 0.7763811663043245
  - 0.7790661692309022
  - 0.778004407178656
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7647058823529411
  - -1.7714285714285714
  - -1.7596153846153846
  - -1.8269230769230769
  - -1.7692307692307692
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25245098039215685
  - -0.25
  - -0.25
  - -0.25240384615384615
  - -0.2596153846153846
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25245098039215685
  - -0.25
  - -0.25
  - -0.25240384615384615
  - -0.25961538461538464
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25245098039215685
  - -0.25
  - -0.25
  - -0.25240384615384615
  - -0.25961538461538464
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3317460317460317
  - -0.3248072562358277
  - -0.3304363905325444
  - -0.3253663003663004
  - -0.3373705621301775
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.24264705882352938
  - -0.2571428571428571
  - -0.2532051282051282
  - -0.27163461538461536
  - -0.2564102564102564
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846153
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846154
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846154
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6682539682539683
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6746336996336997
  - 0.6626294378698225
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846153
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846154
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7475490196078431
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7403846153846154
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6682539682539683
  - 0.6751927437641724
  - 0.6695636094674556
  - 0.6746336996336997
  - 0.6626294378698225
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6208863869684764
  - 0.6651956146105917
  - 0.6928062413644065
  - 0.7083212264752964
  - 0.6205553849356971
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7494263712085494
  - 0.7505668934240364
  - 0.7574580867850099
  - 0.7510641555657633
  - 0.7500308185404339
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7573529411764707
  - 0.742857142857143
  - 0.7467948717948717
  - 0.7283653846153846
  - 0.7435897435897437
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6200973077305699
  - 0.6508731613902131
  - 0.6330038116114719
  - 0.6533833705438391
  - 0.6314673459451939
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7720029957990417
  - 0.7650943456286478
  - 0.7868917754681577
  - 0.7526569861576275
  - 0.7654008701746291
  train_average_precision_macro_oob:
  - 0.6786010636025145
  - 0.6451795637528233
  - 0.713487983804566
  - 0.6801745077360245
  - 0.7010964440335038
  train_average_precision_micro:
  - 0.8125330351078874
  - 0.8383394647136313
  - 0.8207160816268609
  - 0.8261335585190305
  - 0.8198706039386982
  train_average_precision_micro_oob:
  - 0.7805267728863523
  - 0.8143687744069527
  - 0.791903396925973
  - 0.8056724701211233
  - 0.80017536237648
  train_average_precision_samples:
  - 0.8453237410071942
  - 0.8532608695652174
  - 0.8395582329317269
  - 0.8467871485943774
  - 0.8343373493975904
  train_average_precision_samples_oob:
  - 0.8173461231015189
  - 0.8391706924315621
  - 0.821285140562249
  - 0.8463855421686747
  - 0.8172690763052209
  train_average_precision_weighted:
  - 0.8083689555168907
  - 0.830971043490907
  - 0.815380957026437
  - 0.8130891390790401
  - 0.8110646615470688
  train_average_precision_weighted_oob:
  - 0.7797450038550878
  - 0.8050391696717342
  - 0.7929812001485322
  - 0.7952727043250454
  - 0.793797742762308
  train_f1_macro:
  - 0.8663069544364508
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566266
  - 0.8650602409638555
  train_f1_macro_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_f1_micro:
  - 0.8663069544364509
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566265
  - 0.8650602409638555
  train_f1_micro_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_f1_samples:
  - 0.8663069544364509
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566265
  - 0.8650602409638555
  train_f1_samples_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_f1_weighted:
  - 0.8315950110724818
  - 0.8336916071469846
  - 0.8340914972539321
  - 0.8324667089410274
  - 0.828122034678092
  train_f1_weighted_oob:
  - 0.7966449806661847
  - 0.7971014492753623
  - 0.7963769157776691
  - 0.8041044561019196
  - 0.7997527101245077
  train_jaccard_macro:
  - 0.7699046105451577
  - 0.773040229309503
  - 0.7724614135477137
  - 0.7728359920553407
  - 0.7685632514139777
  train_jaccard_macro_oob:
  - 0.7293151508491863
  - 0.72837786307356
  - 0.7262188370583915
  - 0.7385177887250665
  - 0.7354685252696561
  train_jaccard_micro:
  - 0.7641459545214172
  - 0.767342582710779
  - 0.766897285790314
  - 0.766897285790314
  - 0.7622080679405521
  train_jaccard_micro_oob:
  - 0.7213622291021672
  - 0.7205194805194806
  - 0.7184265010351967
  - 0.7309697601668405
  - 0.7273673257023934
  train_jaccard_samples:
  - 0.7864108713029575
  - 0.7893719806763283
  - 0.7889156626506023
  - 0.7892369477911645
  - 0.7844176706827308
  train_jaccard_samples_oob:
  - 0.7413269384492405
  - 0.7404186795491141
  - 0.7381526104417668
  - 0.7519678714859437
  - 0.7481124497991966
  train_jaccard_weighted:
  - 0.7139912211429624
  - 0.71687487416983
  - 0.7175457730313591
  - 0.7152985705739193
  - 0.7091439640423016
  train_jaccard_weighted_oob:
  - 0.6641652020730204
  - 0.664254784171953
  - 0.6634651305784484
  - 0.6743163211507348
  - 0.6686508790708666
  train_label_ranking_average_precision_score:
  - 0.8453237410071939
  - 0.8532608695652171
  - 0.8395582329317265
  - 0.846787148594377
  - 0.8343373493975901
  train_label_ranking_average_precision_score_oob:
  - 0.8173461231015182
  - 0.839170692431562
  - 0.8212851405622484
  - 0.846385542168674
  - 0.8172690763052205
  train_matthews_corrcoef_macro:
  - 0.46623948409216287
  - 0.47198065898214614
  - 0.4726825510576329
  - 0.4716445331373209
  - 0.46576689166563856
  train_matthews_corrcoef_macro_oob:
  - 0.3901541330539777
  - 0.3842751647791041
  - 0.3792294348582945
  - 0.40784734897467567
  - 0.4053390488644264
  train_matthews_corrcoef_micro:
  - 0.629191428928843
  - 0.6378322758321109
  - 0.6369677571335027
  - 0.6361713214746041
  - 0.6278810452783248
  train_matthews_corrcoef_micro_oob:
  - 0.5396049554373187
  - 0.5411388190151013
  - 0.5364362064576957
  - 0.5629722897648358
  - 0.5562233484429496
  train_matthews_corrcoef_samples:
  - 0.4676258992805755
  - 0.4790082151612524
  - 0.4778539784982132
  - 0.4774812061165765
  - 0.46682421881341896
  train_matthews_corrcoef_samples_oob:
  - 0.354916067146283
  - 0.3568407024337412
  - 0.3511615682110093
  - 0.38452373558840874
  - 0.37627638683946807
  train_matthews_corrcoef_weighted:
  - 0.5962514753952849
  - 0.6052230679677949
  - 0.6039920207796902
  - 0.6033144773292887
  - 0.5949145686099401
  train_matthews_corrcoef_weighted_oob:
  - 0.5065428270690207
  - 0.5062709360528816
  - 0.5000908917620205
  - 0.5298427616540157
  - 0.5235618520246655
  train_ndgc:
  - 0.8848047088177786
  - 0.8907403934677864
  - 0.8807878972652865
  - 0.8858688991375714
  - 0.8768654134104893
  train_ndgc_oob:
  - 0.863680656270359
  - 0.8804670288801335
  - 0.8670800516565449
  - 0.8853910517668715
  - 0.8641149024447554
  train_neg_coverage_error:
  - -1.4004796163069544
  - -1.396135265700483
  - -1.419277108433735
  - -1.4144578313253011
  - -1.4409638554216868
  train_neg_coverage_error_oob:
  - -1.498800959232614
  - -1.4516908212560387
  - -1.4867469879518072
  - -1.4433734939759035
  - -1.489156626506024
  train_neg_hamming_loss_macro:
  - -0.13369304556354916
  - -0.1316425120772947
  - -0.1319277108433735
  - -0.13192771084337349
  - -0.13493975903614458
  train_neg_hamming_loss_macro_oob:
  - -0.1618705035971223
  - -0.16243961352657005
  - -0.163855421686747
  - -0.15542168674698795
  - -0.1578313253012048
  train_neg_hamming_loss_micro:
  - -0.13369304556354916
  - -0.1316425120772947
  - -0.13192771084337349
  - -0.13192771084337349
  - -0.13493975903614458
  train_neg_hamming_loss_micro_oob:
  - -0.1618705035971223
  - -0.16243961352657005
  - -0.163855421686747
  - -0.15542168674698795
  - -0.1578313253012048
  train_neg_hamming_loss_samples:
  - -0.13369304556354916
  - -0.1316425120772947
  - -0.13192771084337349
  - -0.13192771084337349
  - -0.13493975903614458
  train_neg_hamming_loss_samples_oob:
  - -0.1618705035971223
  - -0.16243961352657005
  - -0.163855421686747
  - -0.15542168674698795
  - -0.1578313253012048
  train_neg_hamming_loss_weighted:
  - -0.1684049889275183
  - -0.1663083928530153
  - -0.1659085027460678
  - -0.16753329105897274
  - -0.17187796532190816
  train_neg_hamming_loss_weighted_oob:
  - -0.20335501933381525
  - -0.20289855072463767
  - -0.20362308422233083
  - -0.19589554389808034
  - -0.20024728987549242
  train_neg_label_ranking_loss:
  - -0.13269384492406075
  - -0.1286231884057971
  - -0.13614457831325302
  - -0.1355421686746988
  - -0.1431726907630522
  train_neg_label_ranking_loss_oob:
  - -0.16546762589928055
  - -0.14633655394524958
  - -0.15843373493975904
  - -0.14497991967871487
  - -0.15923694779116468
  train_precision_macro:
  - 0.8663069544364508
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566266
  - 0.8650602409638555
  train_precision_macro_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_precision_micro:
  - 0.8663069544364509
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566265
  - 0.8650602409638555
  train_precision_micro_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_precision_samples:
  - 0.8663069544364509
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566265
  - 0.8650602409638555
  train_precision_samples_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_precision_weighted:
  - 0.8315950110724818
  - 0.8336916071469846
  - 0.8340914972539321
  - 0.8324667089410274
  - 0.828122034678092
  train_precision_weighted_oob:
  - 0.7966449806661847
  - 0.7971014492753623
  - 0.7963769157776691
  - 0.8041044561019196
  - 0.7997527101245077
  train_recall_macro:
  - 0.8663069544364508
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566266
  - 0.8650602409638555
  train_recall_macro_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_recall_micro:
  - 0.8663069544364509
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566265
  - 0.8650602409638555
  train_recall_micro_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_recall_samples:
  - 0.8663069544364509
  - 0.8683574879227053
  - 0.8680722891566265
  - 0.8680722891566265
  - 0.8650602409638555
  train_recall_samples_oob:
  - 0.8381294964028777
  - 0.8375603864734299
  - 0.8361445783132531
  - 0.844578313253012
  - 0.8421686746987952
  train_recall_weighted:
  - 0.8315950110724818
  - 0.8336916071469846
  - 0.8340914972539321
  - 0.8324667089410274
  - 0.828122034678092
  train_recall_weighted_oob:
  - 0.7966449806661847
  - 0.7971014492753623
  - 0.7963769157776691
  - 0.8041044561019196
  - 0.7997527101245077
  train_roc_auc_macro:
  - 0.8625217877511608
  - 0.8631011442653835
  - 0.8773817854992679
  - 0.8678926833476013
  - 0.8756520969791023
  train_roc_auc_macro_oob:
  - 0.8322751533743832
  - 0.8287659409041048
  - 0.8585281293662848
  - 0.8431554633694409
  - 0.8528495360210336
  train_roc_auc_micro:
  - 0.8961071770334927
  - 0.9094387459322414
  - 0.9013229380417286
  - 0.8997738637326738
  - 0.9028095365389757
  train_roc_auc_micro_oob:
  - 0.8687674641148324
  - 0.8869742832628641
  - 0.8759699910957942
  - 0.8797432756242825
  - 0.8882339479094348
  train_roc_auc_samples:
  - 0.8673061550759393
  - 0.8713768115942029
  - 0.863855421686747
  - 0.8644578313253012
  - 0.8568273092369478
  train_roc_auc_samples_oob:
  - 0.8345323741007196
  - 0.8536634460547504
  - 0.841566265060241
  - 0.8550200803212851
  - 0.8407630522088353
  train_roc_auc_weighted:
  - 0.8526146058269318
  - 0.8785207910026555
  - 0.858969571712637
  - 0.8615010155781645
  - 0.8616632280914158
  train_roc_auc_weighted_oob:
  - 0.8230788035119412
  - 0.8583837548639216
  - 0.8382631124638046
  - 0.8419491779770557
  - 0.8445755521478975
start: 2023-12-21 21:18:00.676896
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
