active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZGUCAMzMzMzMDQAAyMzMzM+O/gMzMzMzMDMBAZmZmZmYSwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 11:33:30.228123
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__3
  params: {}
hash: c6e06f58056c50731465b0c21aef223b6be0f04f8f884a9d0edf75b69455f835
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c6e06f5_20231222T112931579812_embedding__3_scene.yml
results:
  fit_time:
  - 161.6377580165863
  - 167.48830270767212
  - 172.76740169525146
  - 166.20444703102112
  - 153.58853125572205
  score_time:
  - 9.348785400390625
  - 9.831737041473389
  - 10.02954888343811
  - 9.930222272872925
  - 11.512337446212769
  test_average_precision_macro:
  - 0.8253752157713136
  - 0.8339187827831457
  - 0.8754454821854232
  - 0.8323861879887553
  - 0.8242909265899435
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8389478089144266
  - 0.840354541421663
  - 0.8807318556700234
  - 0.8357197682818899
  - 0.8307419031982105
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8756842105263157
  - 0.8666318719554627
  - 0.8993775933609959
  - 0.8579209621993127
  - 0.8538065843621397
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8122793458437019
  - 0.820858171967454
  - 0.8676321689184057
  - 0.822606828090805
  - 0.8127425623460279
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8964912280701754
  - 0.8980514961725818
  - 0.9132088520055325
  - 0.9027491408934708
  - 0.9002057613168725
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8964912280701754
  - 0.8980514961725817
  - 0.9132088520055325
  - 0.9027491408934708
  - 0.9002057613168725
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8964912280701754
  - 0.8980514961725817
  - 0.9132088520055326
  - 0.9027491408934709
  - 0.9002057613168726
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8903998368013055
  - 0.8927837387321779
  - 0.9079527067078934
  - 0.8976993193488038
  - 0.8949662105690475
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8168035154504016
  - 0.8188541121300822
  - 0.8438554123641238
  - 0.8259445197704224
  - 0.8220851994516306
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8124006359300477
  - 0.8149668455952005
  - 0.8402799872733058
  - 0.8227372377074851
  - 0.8185219831618334
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8304761904761904
  - 0.830649169897604
  - 0.8550681683461765
  - 0.8391261659302894
  - 0.8347540662355476
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8072126906776287
  - 0.810475952928791
  - 0.8353853708023579
  - 0.8177689636467131
  - 0.8135933284698253
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8756842105263155
  - 0.8666318719554625
  - 0.8993775933609958
  - 0.8579209621993125
  - 0.85380658436214
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6104291664519259
  - 0.6121390810077111
  - 0.6820995861460912
  - 0.6363912804265158
  - 0.624381445253584
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6117344446834457
  - 0.6153532155702381
  - 0.6805977504788614
  - 0.6325409547189138
  - 0.6197711770781585
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5013323849992772
  - 0.481657665354365
  - 0.5543914006403315
  - 0.5085572666845813
  - 0.49704802141294313
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5891737723992693
  - 0.5943323483030988
  - 0.6651889916583513
  - 0.6204298808870288
  - 0.6070994533500282
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9088444181872292
  - 0.9014852042879427
  - 0.9267643264275869
  - 0.8944233188568921
  - 0.8921576627471831
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4357894736842105
  - -1.4572025052192066
  - -1.387966804979253
  - -1.4824742268041238
  - -1.4526748971193415
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10350877192982456
  - -0.10194850382741823
  - -0.08679114799446751
  - -0.09725085910652921
  - -0.09979423868312758
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10350877192982456
  - -0.10194850382741823
  - -0.0867911479944675
  - -0.09725085910652921
  - -0.09979423868312758
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10350877192982455
  - -0.10194850382741823
  - -0.0867911479944675
  - -0.09725085910652918
  - -0.09979423868312758
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10960016319869442
  - -0.10721626126782216
  - -0.09204729329210656
  - -0.10230068065119612
  - -0.10503378943095257
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06710526315789474
  - -0.07453027139874739
  - -0.058609958506224066
  - -0.0829381443298969
  - -0.07608024691358023
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8964912280701754
  - 0.8980514961725818
  - 0.9132088520055325
  - 0.9027491408934708
  - 0.9002057613168725
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8964912280701754
  - 0.8980514961725817
  - 0.9132088520055325
  - 0.9027491408934708
  - 0.9002057613168725
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8964912280701754
  - 0.8980514961725817
  - 0.9132088520055326
  - 0.9027491408934709
  - 0.9002057613168726
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8903998368013055
  - 0.8927837387321779
  - 0.9079527067078934
  - 0.8976993193488038
  - 0.8949662105690475
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8964912280701754
  - 0.8980514961725818
  - 0.9132088520055325
  - 0.9027491408934708
  - 0.9002057613168725
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8964912280701754
  - 0.8980514961725817
  - 0.9132088520055325
  - 0.9027491408934708
  - 0.9002057613168725
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8964912280701754
  - 0.8980514961725817
  - 0.9132088520055326
  - 0.9027491408934709
  - 0.9002057613168726
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8903998368013055
  - 0.8927837387321779
  - 0.9079527067078934
  - 0.8976993193488038
  - 0.8949662105690475
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9421769668375792
  - 0.9427083399421682
  - 0.9523683348542873
  - 0.9395265259209044
  - 0.9398924628754046
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9515121925297091
  - 0.9506594736046183
  - 0.9576761440704153
  - 0.9463519001562479
  - 0.9492011097467272
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9328947368421052
  - 0.9254697286012527
  - 0.9413900414937759
  - 0.917061855670103
  - 0.9239197530864197
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9360242592904555
  - 0.9369495823881655
  - 0.9482330408821235
  - 0.9345815053962437
  - 0.9341432555060749
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9946993198085772
  - 0.994230194193585
  - 0.9948656310812408
  - 0.9943419625933814
  - 0.9943920922808392
  train_average_precision_macro_oob:
  - 0.8618063609345432
  - 0.8612411318215248
  - 0.8516556614931091
  - 0.8582647444250214
  - 0.8692896083384171
  train_average_precision_micro:
  - 0.9943370922924744
  - 0.993623317271904
  - 0.9946257900271843
  - 0.9941638480154799
  - 0.9937998835108196
  train_average_precision_micro_oob:
  - 0.8667842273866561
  - 0.8661325797234853
  - 0.8582028530386421
  - 0.8652882041633817
  - 0.8723235648460927
  train_average_precision_samples:
  - 0.9890441683919946
  - 0.9878112033195021
  - 0.988008658008658
  - 0.9904179673950745
  - 0.9879403088669095
  train_average_precision_samples_oob:
  - 0.8861758109040718
  - 0.8839730290456431
  - 0.8775800865800866
  - 0.8874523066250434
  - 0.888933715078952
  train_average_precision_weighted:
  - 0.9946261194365186
  - 0.9941731427476672
  - 0.9948518881870607
  - 0.9942022347053697
  - 0.9943136960859431
  train_average_precision_weighted_oob:
  - 0.853469270864123
  - 0.8530445110828084
  - 0.8426216583891488
  - 0.8485850913140303
  - 0.8610696991168315
  train_f1_macro:
  - 0.9556590752242927
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942769
  - 0.9567065764358841
  train_f1_macro_oob:
  - 0.9008799171842649
  - 0.8989453665283541
  - 0.8941991341991343
  - 0.8953347207769684
  - 0.9017005032101336
  train_f1_micro:
  - 0.9556590752242926
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942768
  - 0.9567065764358841
  train_f1_micro_oob:
  - 0.900879917184265
  - 0.8989453665283541
  - 0.8941991341991342
  - 0.8953347207769684
  - 0.9017005032101336
  train_f1_samples:
  - 0.9556590752242927
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942768
  - 0.9567065764358842
  train_f1_samples_oob:
  - 0.900879917184265
  - 0.8989453665283541
  - 0.8941991341991343
  - 0.8953347207769685
  - 0.9017005032101337
  train_f1_weighted:
  - 0.9537678857871346
  - 0.9542711113874244
  - 0.9554252037270906
  - 0.9543895524890166
  - 0.9549076832766621
  train_f1_weighted_oob:
  - 0.895895687797888
  - 0.8937208325227776
  - 0.888626342211248
  - 0.8897445462540784
  - 0.8963633141587886
  train_jaccard_macro:
  - 0.9155822767802335
  - 0.9161722844472387
  - 0.9180572134373506
  - 0.9167646528933783
  - 0.9174868109214747
  train_jaccard_macro_oob:
  - 0.8228762610708332
  - 0.8199840183762408
  - 0.8124572039151681
  - 0.8143171259916452
  - 0.8245060147581018
  train_jaccard_micro:
  - 0.9150834297042789
  - 0.9157075432640557
  - 0.9176490121202059
  - 0.9162512462612163
  - 0.917006237006237
  train_jaccard_micro_oob:
  - 0.8196373910995998
  - 0.8164402920624951
  - 0.808643908549953
  - 0.8105031792134391
  - 0.8209969191879295
  train_jaccard_samples:
  - 0.9251330967169475
  - 0.9260768622801817
  - 0.9279282622139764
  - 0.9263663842227837
  - 0.9272204457004041
  train_jaccard_samples_oob:
  - 0.8339371980676328
  - 0.8308387670420864
  - 0.8230426716141
  - 0.8250829988603141
  - 0.8355519198829975
  train_jaccard_weighted:
  - 0.9121543190094803
  - 0.913031551765438
  - 0.9150795562443851
  - 0.9133045092766078
  - 0.9142178965556339
  train_jaccard_weighted_oob:
  - 0.814862861889144
  - 0.8116359337720113
  - 0.8036096191018117
  - 0.8054830987517939
  - 0.815996703984486
  train_label_ranking_average_precision_score:
  - 0.9890441683919943
  - 0.9878112033195018
  - 0.9880086580086579
  - 0.9904179673950744
  - 0.9879403088669093
  train_label_ranking_average_precision_score_oob:
  - 0.8861758109040716
  - 0.8839730290456429
  - 0.8775800865800863
  - 0.887452306625043
  - 0.888933715078952
  train_matthews_corrcoef_macro:
  - 0.8475810344453681
  - 0.8485370844668362
  - 0.85235988525967
  - 0.8504272786350064
  - 0.851734228803741
  train_matthews_corrcoef_macro_oob:
  - 0.6272176683712162
  - 0.6185561943808722
  - 0.5954611275782612
  - 0.600551580804114
  - 0.633200736257562
  train_matthews_corrcoef_micro:
  - 0.8443754076523744
  - 0.8458248110566589
  - 0.849795157932112
  - 0.8472148558420758
  - 0.8488012471097277
  train_matthews_corrcoef_micro_oob:
  - 0.6272093964009489
  - 0.6198088145591607
  - 0.5985365770457155
  - 0.6041080864413807
  - 0.6329139123646785
  train_matthews_corrcoef_samples:
  - 0.7791592939681662
  - 0.7854704733653768
  - 0.790541475042205
  - 0.7864552798008233
  - 0.7887491268341732
  train_matthews_corrcoef_samples_oob:
  - 0.47670252521207174
  - 0.46763907670105725
  - 0.44192767443300646
  - 0.4522408825069147
  - 0.4852794035615597
  train_matthews_corrcoef_weighted:
  - 0.842877252465143
  - 0.8443981712776828
  - 0.8484636440733883
  - 0.845670496533061
  - 0.8473598483629062
  train_matthews_corrcoef_weighted_oob:
  - 0.6112740250241311
  - 0.6015703395024141
  - 0.5764675448924457
  - 0.5812600887561788
  - 0.615765714298467
  train_ndgc:
  - 0.9920124213912921
  - 0.9910680534711617
  - 0.9912764605250778
  - 0.9930890873136334
  - 0.9912385732500864
  train_ndgc_oob:
  - 0.9160687295338067
  - 0.9145410969133903
  - 0.9096902373978857
  - 0.9171907509712901
  - 0.9182469446254913
  train_neg_coverage_error:
  - -1.0957556935817805
  - -1.1011410788381744
  - -1.1028571428571428
  - -1.0988553590010406
  - -1.1046330036439354
  train_neg_coverage_error_oob:
  - -1.4057971014492754
  - -1.4139004149377594
  - -1.4301298701298701
  - -1.4053069719042663
  - -1.4102030192608017
  train_neg_hamming_loss_macro:
  - -0.044340924775707384
  - -0.04400069156293223
  - -0.04294372294372295
  - -0.043704474505723206
  - -0.04329342356411591
  train_neg_hamming_loss_macro_oob:
  - -0.09912008281573499
  - -0.10105463347164591
  - -0.10580086580086583
  - -0.10466527922303155
  - -0.0982994967898664
  train_neg_hamming_loss_micro:
  - -0.044340924775707384
  - -0.04400069156293223
  - -0.042943722943722944
  - -0.043704474505723206
  - -0.04329342356411591
  train_neg_hamming_loss_micro_oob:
  - -0.09912008281573499
  - -0.10105463347164592
  - -0.1058008658008658
  - -0.10466527922303157
  - -0.0982994967898664
  train_neg_hamming_loss_samples:
  - -0.04434092477570738
  - -0.04400069156293222
  - -0.04294372294372294
  - -0.043704474505723206
  - -0.043293423564115904
  train_neg_hamming_loss_samples_oob:
  - -0.09912008281573499
  - -0.10105463347164592
  - -0.1058008658008658
  - -0.10466527922303157
  - -0.09829949678986638
  train_neg_hamming_loss_weighted:
  - -0.04623211421286526
  - -0.04572888861257568
  - -0.04457479627290949
  - -0.04561044751098351
  - -0.0450923167233378
  train_neg_hamming_loss_weighted_oob:
  - -0.10410431220211201
  - -0.10627916747722255
  - -0.11137365778875213
  - -0.1102554537459216
  - -0.10363668584121143
  train_neg_label_ranking_loss:
  - -0.004826604554865424
  - -0.00549792531120332
  - -0.0055974025974025975
  - -0.004396462018730489
  - -0.005400832899531494
  train_neg_label_ranking_loss_oob:
  - -0.06518432252127904
  - -0.06589730290456432
  - -0.06945454545454545
  - -0.06389177939646203
  - -0.06461478396668402
  train_precision_macro:
  - 0.9556590752242927
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942769
  - 0.9567065764358841
  train_precision_macro_oob:
  - 0.9008799171842649
  - 0.8989453665283541
  - 0.8941991341991343
  - 0.8953347207769684
  - 0.9017005032101336
  train_precision_micro:
  - 0.9556590752242926
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942768
  - 0.9567065764358841
  train_precision_micro_oob:
  - 0.900879917184265
  - 0.8989453665283541
  - 0.8941991341991342
  - 0.8953347207769684
  - 0.9017005032101336
  train_precision_samples:
  - 0.9556590752242927
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942768
  - 0.9567065764358842
  train_precision_samples_oob:
  - 0.900879917184265
  - 0.8989453665283541
  - 0.8941991341991343
  - 0.8953347207769685
  - 0.9017005032101337
  train_precision_weighted:
  - 0.9537678857871346
  - 0.9542711113874244
  - 0.9554252037270906
  - 0.9543895524890166
  - 0.9549076832766621
  train_precision_weighted_oob:
  - 0.895895687797888
  - 0.8937208325227776
  - 0.888626342211248
  - 0.8897445462540784
  - 0.8963633141587886
  train_recall_macro:
  - 0.9556590752242927
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942769
  - 0.9567065764358841
  train_recall_macro_oob:
  - 0.9008799171842649
  - 0.8989453665283541
  - 0.8941991341991343
  - 0.8953347207769684
  - 0.9017005032101336
  train_recall_micro:
  - 0.9556590752242926
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942768
  - 0.9567065764358841
  train_recall_micro_oob:
  - 0.900879917184265
  - 0.8989453665283541
  - 0.8941991341991342
  - 0.8953347207769684
  - 0.9017005032101336
  train_recall_samples:
  - 0.9556590752242927
  - 0.9559993084370678
  - 0.957056277056277
  - 0.9562955254942768
  - 0.9567065764358842
  train_recall_samples_oob:
  - 0.900879917184265
  - 0.8989453665283541
  - 0.8941991341991343
  - 0.8953347207769685
  - 0.9017005032101337
  train_recall_weighted:
  - 0.9537678857871346
  - 0.9542711113874244
  - 0.9554252037270906
  - 0.9543895524890166
  - 0.9549076832766621
  train_recall_weighted_oob:
  - 0.895895687797888
  - 0.8937208325227776
  - 0.888626342211248
  - 0.8897445462540784
  - 0.8963633141587886
  train_roc_auc_macro:
  - 0.9987089439584258
  - 0.998591596236126
  - 0.9987627698604974
  - 0.9985566385143959
  - 0.9986203164128411
  train_roc_auc_macro_oob:
  - 0.9515675012451729
  - 0.9521549282552084
  - 0.9493280473593537
  - 0.9508780873475354
  - 0.9528976952621874
  train_roc_auc_micro:
  - 0.99870215768727
  - 0.9985240236170466
  - 0.9987226652271748
  - 0.9986451497649655
  - 0.9985657603420681
  train_roc_auc_micro_oob:
  - 0.9567982418186551
  - 0.9567906998019837
  - 0.9547386020797229
  - 0.9574990588655631
  - 0.9576769821828602
  train_roc_auc_samples:
  - 0.9951733954451345
  - 0.9945020746887966
  - 0.9944025974025974
  - 0.9956035379812694
  - 0.9945991671004685
  train_roc_auc_samples_oob:
  - 0.9348156774787211
  - 0.9341026970954356
  - 0.9305454545454546
  - 0.9361082206035379
  - 0.935385216033316
  train_roc_auc_weighted:
  - 0.9986655321943331
  - 0.9985529909379024
  - 0.9987474961809238
  - 0.998492312473017
  - 0.9985763351298754
  train_roc_auc_weighted_oob:
  - 0.94765528911908
  - 0.9485496597485872
  - 0.94527169422697
  - 0.9464015059067824
  - 0.9490908591894855
start: 2023-12-22 11:29:31.579812
wrapper: null
