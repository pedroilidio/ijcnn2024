active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT+QmZmZmZnpv8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzMDEAAMzMzMzMDwICZmZmZmRnAAM3MzMzMDEAAmpmZmZn5Pw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:49:00.413738
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__3
  params: {}
hash: ab5c1925ec200f7105445984ee5c2307125e83e5f9bce7ea5fdc83656c01955e
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ab5c192_20231222T094808410600_embedding_weak__3_PlantGO.yml
results:
  fit_time:
  - 23.864691734313965
  - 23.697617292404175
  - 21.69294238090515
  - 25.853858470916748
  - 25.269925355911255
  score_time:
  - 5.2014479637146
  - 5.109869718551636
  - 4.716789484024048
  - 4.869677305221558
  - 4.999683856964111
  test_average_precision_macro:
  - 0.6861021472013022
  - 0.8253355420618727
  - 0.7479105467018269
  - 0.6601770662022958
  - 0.8019919653597487
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7376887251815772
  - 0.8321165168434661
  - 0.7517213677225755
  - 0.6939046349551572
  - 0.745192787261332
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8125124007936507
  - 0.8943923360590026
  - 0.8486346848970611
  - 0.8204055059523809
  - 0.8359536082474227
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7949182975190159
  - 0.8579630867695907
  - 0.8174697657636976
  - 0.7600426830902564
  - 0.834094299479271
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9105902777777777
  - 0.9111952861952863
  - 0.912953795379538
  - 0.91015625
  - 0.9153780068728522
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9105902777777778
  - 0.9111952861952862
  - 0.9129537953795379
  - 0.91015625
  - 0.9153780068728522
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9105902777777777
  - 0.9111952861952861
  - 0.9129537953795378
  - 0.9101562499999999
  - 0.9153780068728521
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8373815165876776
  - 0.8354875771937385
  - 0.8416542125910704
  - 0.8338516982622431
  - 0.8495090819833089
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8449963106714752
  - 0.846530609742469
  - 0.8487577545457791
  - 0.8447087116465322
  - 0.8516607821368322
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8358565737051793
  - 0.836876691148048
  - 0.8398481973434535
  - 0.8351254480286738
  - 0.8439603960396039
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8371108058608058
  - 0.8374958374958372
  - 0.8403873354368404
  - 0.8366071428571429
  - 0.8456780333068992
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7298452733267193
  - 0.7281671623312485
  - 0.7366844078014146
  - 0.7252845061867973
  - 0.7453665547446613
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8125124007936507
  - 0.8943923360590029
  - 0.848634684897061
  - 0.8204055059523808
  - 0.8359536082474227
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.020970674980053797
  - 0.0
  - 0.008741099834482284
  - 0.017316961158309645
  - 0.0346237416389183
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.14687872808792174
  - 0.0
  - 0.07217218416367435
  - 0.13140649572190802
  - 0.23798495851908985
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.026041666666666668
  - 0.0
  - 0.0078380731265057
  - 0.02556818181818182
  - 0.06701030927835051
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06798076628605117
  - 0.0
  - 0.02820241644710322
  - 0.05712135055063276
  - 0.11277447276676247
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8600693683583351
  - 0.9207258970596184
  - 0.8876020359658935
  - 0.8661887205461823
  - 0.87854380980114
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.921875
  - -1.4545454545454546
  - -1.698019801980198
  - -1.9010416666666667
  - -1.7164948453608246
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08940972222222221
  - -0.08880471380471382
  - -0.08704620462046204
  - -0.08984375
  - -0.08462199312714776
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08940972222222222
  - -0.0888047138047138
  - -0.08704620462046204
  - -0.08984375
  - -0.08462199312714777
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08940972222222221
  - -0.08880471380471382
  - -0.08704620462046206
  - -0.08984375
  - -0.08462199312714777
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1626184834123223
  - -0.1645124228062617
  - -0.15834578740892957
  - -0.16614830173775674
  - -0.1504909180166912
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07237215909090909
  - -0.03498622589531681
  - -0.05576057605760576
  - -0.06840979236812571
  - -0.054763268423062235
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9105902777777777
  - 0.9111952861952863
  - 0.912953795379538
  - 0.91015625
  - 0.9153780068728522
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9105902777777778
  - 0.9111952861952862
  - 0.9129537953795379
  - 0.91015625
  - 0.9153780068728522
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9105902777777777
  - 0.9111952861952861
  - 0.9129537953795378
  - 0.9101562499999999
  - 0.9153780068728521
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8373815165876776
  - 0.8354875771937385
  - 0.8416542125910704
  - 0.8338516982622431
  - 0.8495090819833089
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9105902777777777
  - 0.9111952861952863
  - 0.912953795379538
  - 0.91015625
  - 0.9153780068728522
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9105902777777778
  - 0.9111952861952862
  - 0.9129537953795379
  - 0.91015625
  - 0.9153780068728522
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9105902777777777
  - 0.9111952861952861
  - 0.9129537953795378
  - 0.9101562499999999
  - 0.9153780068728521
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8373815165876776
  - 0.8354875771937385
  - 0.8416542125910704
  - 0.8338516982622431
  - 0.8495090819833089
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9578973534573576
  - 0.9792562663373556
  - 0.9679209080827804
  - 0.951365815004359
  - 0.9693801231983393
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9442171263724942
  - 0.9746089773759617
  - 0.9574149578627726
  - 0.939799331103679
  - 0.9539705022707856
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.927627840909091
  - 0.9650137741046831
  - 0.9442394239423941
  - 0.9315902076318743
  - 0.9452367315769377
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9682732087470786
  - 0.974842736121387
  - 0.9656663125308101
  - 0.955580579017488
  - 0.9628136111093109
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8388465161154847
  - 0.8645918259131425
  - 0.8580527476183426
  - 0.850309123966012
  - 0.8550573817577707
  train_average_precision_macro_oob:
  - 0.6396008919790178
  - 0.6585395431747757
  - 0.6762651625411852
  - 0.653007868145192
  - 0.6491510398665048
  train_average_precision_micro:
  - 0.8719764958542567
  - 0.8884713823902073
  - 0.8882376451433837
  - 0.8703275501728376
  - 0.8723188597421903
  train_average_precision_micro_oob:
  - 0.7266066371074097
  - 0.7393963662497369
  - 0.7601418203345114
  - 0.7208144188055589
  - 0.7293793188066678
  train_average_precision_samples:
  - 0.9002862595419847
  - 0.9135403947903948
  - 0.9236939535264277
  - 0.9022007148915546
  - 0.8986141480401685
  train_average_precision_samples_oob:
  - 0.8027591435988383
  - 0.8288426850926851
  - 0.8417320526695526
  - 0.8072580126969441
  - 0.8058664726713197
  train_average_precision_weighted:
  - 0.8982928094832447
  - 0.9122927058340833
  - 0.9087987226538017
  - 0.9034746834652445
  - 0.9030394141278322
  train_average_precision_weighted_oob:
  - 0.7674664501487832
  - 0.7749974129049255
  - 0.7838042255428612
  - 0.7692902008717826
  - 0.7712965602445849
  train_f1_macro:
  - 0.9156064461407971
  - 0.9114316239316239
  - 0.912048969072165
  - 0.9157124681933843
  - 0.9146471088435373
  train_f1_macro_oob:
  - 0.9156064461407972
  - 0.9099358974358974
  - 0.9109750859106529
  - 0.9146522476675147
  - 0.9145408163265305
  train_f1_micro:
  - 0.9156064461407973
  - 0.9114316239316239
  - 0.9120489690721649
  - 0.9157124681933843
  - 0.9146471088435374
  train_f1_micro_oob:
  - 0.9156064461407973
  - 0.9099358974358974
  - 0.9109750859106529
  - 0.9146522476675149
  - 0.9145408163265306
  train_f1_samples:
  - 0.9156064461407972
  - 0.9114316239316239
  - 0.9120489690721649
  - 0.915712468193384
  - 0.9146471088435373
  train_f1_samples_oob:
  - 0.9156064461407972
  - 0.9099358974358973
  - 0.9109750859106527
  - 0.9146522476675147
  - 0.9145408163265305
  train_f1_weighted:
  - 0.8505300097680982
  - 0.8374756957102928
  - 0.8394770150786954
  - 0.85069281140335
  - 0.8482474942639779
  train_f1_weighted_oob:
  - 0.8503657007102976
  - 0.8330219346214608
  - 0.8361399518166587
  - 0.8479010648432884
  - 0.8479018234512741
  train_jaccard_macro:
  - 0.8519406243622164
  - 0.8465159950125107
  - 0.8472485326748417
  - 0.8521104734222211
  - 0.8505602652769165
  train_jaccard_macro_oob:
  - 0.8519604452067107
  - 0.8446288879674441
  - 0.8458939330261268
  - 0.8506387410735652
  - 0.8504218196260172
  train_jaccard_micro:
  - 0.8443488463042628
  - 0.8372754931789185
  - 0.8383180337577731
  - 0.8445291874449985
  - 0.8427186367642738
  train_jaccard_micro_oob:
  - 0.8443488463042628
  - 0.8347544839753014
  - 0.8365052756138448
  - 0.8427273615316987
  - 0.8425381903642774
  train_jaccard_samples:
  - 0.8459133741576489
  - 0.8383601014370244
  - 0.839622748385635
  - 0.8460643682017727
  - 0.8442083426777303
  train_jaccard_samples_oob:
  - 0.845913374157649
  - 0.8356269371653986
  - 0.8376685170499604
  - 0.8441349998601907
  - 0.8440121103386409
  train_jaccard_weighted:
  - 0.7470699701427452
  - 0.7304461758054712
  - 0.732645831213156
  - 0.7474651253629692
  - 0.7440850737308579
  train_jaccard_weighted_oob:
  - 0.7468869000780598
  - 0.7249066678582279
  - 0.7284752279422244
  - 0.743667528666037
  - 0.7436348386436726
  train_label_ranking_average_precision_score:
  - 0.9002862595419847
  - 0.9135403947903953
  - 0.9236939535264279
  - 0.9022007148915545
  - 0.8986141480401686
  train_label_ranking_average_precision_score_oob:
  - 0.8027591435988382
  - 0.8288426850926852
  - 0.8417320526695526
  - 0.8072580126969436
  - 0.8058664726713197
  train_matthews_corrcoef_macro:
  - 0.03291861014781363
  - 0.03193049232732322
  - 0.031456427934507446
  - 0.045864043753645396
  - 0.030618668754674724
  train_matthews_corrcoef_macro_oob:
  - 0.039553316484888246
  - 0.004241977106071739
  - 0.022988847908196153
  - 0.029307579015186616
  - 0.030224965265083295
  train_matthews_corrcoef_micro:
  - 0.22775412020949837
  - 0.12726312395223427
  - 0.1606233370400456
  - 0.23013394516378005
  - 0.21276403987577852
  train_matthews_corrcoef_micro_oob:
  - 0.22775412020949837
  - 0.03603920514516267
  - 0.12244670260398487
  - 0.20484612207399563
  - 0.21019588018188382
  train_matthews_corrcoef_samples:
  - 0.06222530650011566
  - 0.019230769230769232
  - 0.032099343955014056
  - 0.06349757113115892
  - 0.05473098330241187
  train_matthews_corrcoef_samples_oob:
  - 0.06222530650011566
  - 0.0024475524475524478
  - 0.020384254920337394
  - 0.05193152903076567
  - 0.053455473098330236
  train_matthews_corrcoef_weighted:
  - 0.10718049844335528
  - 0.08287346050767083
  - 0.08760264593336808
  - 0.12742153069748788
  - 0.09957408489685933
  train_matthews_corrcoef_weighted_oob:
  - 0.11792345211360084
  - 0.01381155579085917
  - 0.06438237265604908
  - 0.09500655946155281
  - 0.09829373319343065
  train_ndgc:
  - 0.9258336353380361
  - 0.9362696200382451
  - 0.9435481196273208
  - 0.9269617822394296
  - 0.9246794582163014
  train_ndgc_oob:
  - 0.8523332608557483
  - 0.8728827503723102
  - 0.8822061270306887
  - 0.8553445412349032
  - 0.8547153200999209
  train_neg_coverage_error:
  - -1.508905852417303
  - -1.4346153846153846
  - -1.4033505154639174
  - -1.5330788804071247
  - -1.5191326530612246
  train_neg_coverage_error_oob:
  - -1.9783715012722647
  - -1.8102564102564103
  - -1.7783505154639174
  - -1.979643765903308
  - -2.014030612244898
  train_neg_hamming_loss_macro:
  - -0.08439355385920272
  - -0.08856837606837609
  - -0.08795103092783506
  - -0.08428753180661579
  - -0.08535289115646259
  train_neg_hamming_loss_macro_oob:
  - -0.08439355385920272
  - -0.09006410256410258
  - -0.0890249140893471
  - -0.08534775233248516
  - -0.0854591836734694
  train_neg_hamming_loss_micro:
  - -0.08439355385920272
  - -0.08856837606837607
  - -0.08795103092783506
  - -0.08428753180661577
  - -0.08535289115646258
  train_neg_hamming_loss_micro_oob:
  - -0.08439355385920272
  - -0.09006410256410256
  - -0.08902491408934708
  - -0.08534775233248516
  - -0.08545918367346939
  train_neg_hamming_loss_samples:
  - -0.08439355385920273
  - -0.08856837606837606
  - -0.08795103092783506
  - -0.08428753180661577
  - -0.08535289115646258
  train_neg_hamming_loss_samples_oob:
  - -0.08439355385920273
  - -0.09006410256410256
  - -0.08902491408934705
  - -0.08534775233248515
  - -0.08545918367346939
  train_neg_hamming_loss_weighted:
  - -0.14946999023190188
  - -0.16252430428970716
  - -0.16052298492130462
  - -0.14930718859664988
  - -0.15175250573602225
  train_neg_hamming_loss_weighted_oob:
  - -0.14963429928970248
  - -0.16697806537853932
  - -0.16386004818334127
  - -0.15209893515671163
  - -0.15209817654872598
  train_neg_label_ranking_loss:
  - -0.03715719536330223
  - -0.02934667184667185
  - -0.027179006560449862
  - -0.04006070030243058
  - -0.03770893458393459
  train_neg_label_ranking_loss_oob:
  - -0.07847945099853497
  - -0.06246632996632996
  - -0.059899033288208545
  - -0.07978598538394976
  - -0.08094658317872602
  train_precision_macro:
  - 0.9156064461407971
  - 0.9114316239316239
  - 0.912048969072165
  - 0.9157124681933843
  - 0.9146471088435373
  train_precision_macro_oob:
  - 0.9156064461407972
  - 0.9099358974358974
  - 0.9109750859106529
  - 0.9146522476675147
  - 0.9145408163265305
  train_precision_micro:
  - 0.9156064461407973
  - 0.9114316239316239
  - 0.9120489690721649
  - 0.9157124681933843
  - 0.9146471088435374
  train_precision_micro_oob:
  - 0.9156064461407973
  - 0.9099358974358974
  - 0.9109750859106529
  - 0.9146522476675149
  - 0.9145408163265306
  train_precision_samples:
  - 0.9156064461407972
  - 0.9114316239316239
  - 0.9120489690721649
  - 0.915712468193384
  - 0.9146471088435373
  train_precision_samples_oob:
  - 0.9156064461407972
  - 0.9099358974358973
  - 0.9109750859106527
  - 0.9146522476675147
  - 0.9145408163265305
  train_precision_weighted:
  - 0.8505300097680982
  - 0.8374756957102928
  - 0.8394770150786954
  - 0.85069281140335
  - 0.8482474942639779
  train_precision_weighted_oob:
  - 0.8503657007102976
  - 0.8330219346214608
  - 0.8361399518166587
  - 0.8479010648432884
  - 0.8479018234512741
  train_recall_macro:
  - 0.9156064461407971
  - 0.9114316239316239
  - 0.912048969072165
  - 0.9157124681933843
  - 0.9146471088435373
  train_recall_macro_oob:
  - 0.9156064461407972
  - 0.9099358974358974
  - 0.9109750859106529
  - 0.9146522476675147
  - 0.9145408163265305
  train_recall_micro:
  - 0.9156064461407973
  - 0.9114316239316239
  - 0.9120489690721649
  - 0.9157124681933843
  - 0.9146471088435374
  train_recall_micro_oob:
  - 0.9156064461407973
  - 0.9099358974358974
  - 0.9109750859106529
  - 0.9146522476675149
  - 0.9145408163265306
  train_recall_samples:
  - 0.9156064461407972
  - 0.9114316239316239
  - 0.9120489690721649
  - 0.915712468193384
  - 0.9146471088435373
  train_recall_samples_oob:
  - 0.9156064461407972
  - 0.9099358974358973
  - 0.9109750859106527
  - 0.9146522476675147
  - 0.9145408163265305
  train_recall_weighted:
  - 0.8505300097680982
  - 0.8374756957102928
  - 0.8394770150786954
  - 0.85069281140335
  - 0.8482474942639779
  train_recall_weighted_oob:
  - 0.8503657007102976
  - 0.8330219346214608
  - 0.8361399518166587
  - 0.8479010648432884
  - 0.8479018234512741
  train_roc_auc_macro:
  - 0.978661821965706
  - 0.981034295139739
  - 0.9817340788472956
  - 0.9797028560460422
  - 0.9763329884379216
  train_roc_auc_macro_oob:
  - 0.9496879657027865
  - 0.9562695970423345
  - 0.9587455300940225
  - 0.9510130475840078
  - 0.9484126807100351
  train_roc_auc_micro:
  - 0.9721426017125185
  - 0.9777810906261757
  - 0.9787634533985996
  - 0.9715884696380048
  - 0.9707666187332731
  train_roc_auc_micro_oob:
  - 0.9406062576018118
  - 0.9517011747054333
  - 0.9529672588620253
  - 0.9384341536851819
  - 0.9380288249915176
  train_roc_auc_samples:
  - 0.9628428046366978
  - 0.9706533281533282
  - 0.9728209934395501
  - 0.9599392996975694
  - 0.9622910654160653
  train_roc_auc_samples_oob:
  - 0.921520549001465
  - 0.93753367003367
  - 0.9401009667117914
  - 0.9202140146160503
  - 0.919053416821274
  train_roc_auc_weighted:
  - 0.9801520788967694
  - 0.981468194491029
  - 0.9837627215713335
  - 0.9808482968190084
  - 0.9771776513801695
  train_roc_auc_weighted_oob:
  - 0.9588935670433538
  - 0.9604192320812142
  - 0.9645798869015215
  - 0.9589103197489384
  - 0.9562988547323071
start: 2023-12-22 09:48:08.410600
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
