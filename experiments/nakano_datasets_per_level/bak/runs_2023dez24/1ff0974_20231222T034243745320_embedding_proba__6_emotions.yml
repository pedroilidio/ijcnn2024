active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T/QzMzMzMwEQNDMzMzMzARAMDMzMzMzA8CYmZmZmZkRwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZ+T/gzMzMzMwEQIAzMzMzM+M/gDMzMzMz4z+QmZmZmZkVwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:43:38.583876
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__6
  params: {}
hash: 1ff0974a051a4e12188220d4522c9a4d7af17a42e1b0efd7fae4c8631245f5b2
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1ff0974_20231222T034243745320_embedding_proba__6_emotions.yml
results:
  fit_time:
  - 30.793554544448853
  - 30.779407024383545
  - 34.470714807510376
  - 31.632237195968628
  - 31.991586446762085
  score_time:
  - 6.163302421569824
  - 6.53984808921814
  - 6.4408650398254395
  - 6.337454319000244
  - 6.293925046920776
  test_average_precision_macro:
  - 0.7216292928726387
  - 0.7344735073588881
  - 0.6961761554155292
  - 0.7102077022273828
  - 0.6904291384892286
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7270607852817312
  - 0.7368847386262367
  - 0.7050032976611225
  - 0.701759322846915
  - 0.6713134215447667
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7857075023741691
  - 0.8394157088122604
  - 0.7723399246704331
  - 0.7814265536723165
  - 0.7708781362007169
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7303782154725701
  - 0.7382702950639821
  - 0.7109050663027131
  - 0.7070876772455251
  - 0.6895078402656624
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7450142450142451
  - 0.7456896551724137
  - 0.7358757062146893
  - 0.7302259887005649
  - 0.7419354838709679
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7450142450142451
  - 0.7456896551724138
  - 0.7358757062146892
  - 0.730225988700565
  - 0.7419354838709677
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7450142450142452
  - 0.7456896551724138
  - 0.7358757062146893
  - 0.7302259887005648
  - 0.7419354838709679
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7319874695440306
  - 0.7393416927899686
  - 0.7266366039496192
  - 0.716674301420064
  - 0.7288262043484439
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5980375284720333
  - 0.5959192307008656
  - 0.5848173812162049
  - 0.5798519776502106
  - 0.5944233427232407
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5936435868331441
  - 0.5945017182130584
  - 0.582122905027933
  - 0.575083426028921
  - 0.5897435897435898
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6135531135531135
  - 0.6163793103448275
  - 0.5990718321226794
  - 0.5940274414850683
  - 0.6098310291858678
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5825405416789424
  - 0.5879520367650267
  - 0.573432020272117
  - 0.563756787396636
  - 0.5785958992254013
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7857075023741689
  - 0.8394157088122602
  - 0.7723399246704331
  - 0.7814265536723165
  - 0.7708781362007168
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.35647996437779383
  - 0.3377874957652817
  - 0.28801952610529213
  - 0.3030931232170181
  - 0.3208115754274356
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3608427047173989
  - 0.3563438552498695
  - 0.3043731166995385
  - 0.2997606111645605
  - 0.3158203250637436
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.19992092158031116
  - 0.27445629190169607
  - 0.18425535931151513
  - 0.17730680895178533
  - 0.18593976307188032
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.349516458634875
  - 0.34324320954505827
  - 0.289048089628697
  - 0.2869155068146538
  - 0.3046006252862933
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8512365656075528
  - 0.8900472369439905
  - 0.8433432053953566
  - 0.8495685130677059
  - 0.8433596630233661
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8205128205128207
  - -2.6206896551724137
  - -2.889830508474576
  - -2.8559322033898304
  - -2.870967741935484
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.254985754985755
  - -0.2543103448275862
  - -0.2641242937853107
  - -0.269774011299435
  - -0.25806451612903225
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.254985754985755
  - -0.2543103448275862
  - -0.2641242937853107
  - -0.269774011299435
  - -0.25806451612903225
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25498575498575493
  - -0.2543103448275862
  - -0.2641242937853107
  - -0.26977401129943507
  - -0.25806451612903225
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26801253045596934
  - -0.2606583072100313
  - -0.27336339605038096
  - -0.2833256985799359
  - -0.271173795651556
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17530864197530865
  - -0.12974137931034482
  - -0.18363935969868173
  - -0.18302730696798492
  - -0.18646953405017921
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7450142450142451
  - 0.7456896551724137
  - 0.7358757062146893
  - 0.7302259887005649
  - 0.7419354838709679
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7450142450142451
  - 0.7456896551724138
  - 0.7358757062146892
  - 0.730225988700565
  - 0.7419354838709677
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7450142450142452
  - 0.7456896551724138
  - 0.7358757062146893
  - 0.7302259887005648
  - 0.7419354838709679
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7319874695440306
  - 0.7393416927899686
  - 0.7266366039496192
  - 0.716674301420064
  - 0.7288262043484439
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7450142450142451
  - 0.7456896551724137
  - 0.7358757062146893
  - 0.7302259887005649
  - 0.7419354838709679
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7450142450142451
  - 0.7456896551724138
  - 0.7358757062146892
  - 0.730225988700565
  - 0.7419354838709677
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7450142450142452
  - 0.7456896551724138
  - 0.7358757062146893
  - 0.7302259887005648
  - 0.7419354838709679
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7319874695440306
  - 0.7393416927899686
  - 0.7266366039496192
  - 0.716674301420064
  - 0.7288262043484439
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8250887718158282
  - 0.8559482934086718
  - 0.8321107902199353
  - 0.8292552152714694
  - 0.8139163629730451
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8453542299696146
  - 0.8672077922077923
  - 0.8482961992136305
  - 0.8413598783969154
  - 0.8258165117289684
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8246913580246913
  - 0.8702586206896551
  - 0.8163606403013182
  - 0.816972693032015
  - 0.8135304659498208
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8295794974415289
  - 0.855082027428788
  - 0.8392889051977918
  - 0.8251291180715842
  - 0.8104279203022033
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8719712272897602
  - 0.8752585888014828
  - 0.8914557520188476
  - 0.8775381653590751
  - 0.8822383140194988
  train_average_precision_macro_oob:
  - 0.8594915186680842
  - 0.8621935693592633
  - 0.8820381667092265
  - 0.8605021945981637
  - 0.866448814469449
  train_average_precision_micro:
  - 0.8753818479773945
  - 0.8817552061625827
  - 0.8927756735605478
  - 0.8795783036806104
  - 0.8862965034982454
  train_average_precision_micro_oob:
  - 0.864885961031595
  - 0.8708304892124038
  - 0.8835396404545883
  - 0.8655702170794292
  - 0.8728282521770055
  train_average_precision_samples:
  - 0.8860294117647058
  - 0.9084847426042394
  - 0.9014035087719298
  - 0.8897953216374269
  - 0.9036128879412463
  train_average_precision_samples_oob:
  - 0.8726540616246499
  - 0.8986081993943628
  - 0.8918187134502924
  - 0.8827251461988305
  - 0.8912343046671405
  train_average_precision_weighted:
  - 0.8738396698767796
  - 0.8788361857721443
  - 0.8924365157527456
  - 0.8779429418066024
  - 0.8844862570839207
  train_average_precision_weighted_oob:
  - 0.86213487608988
  - 0.8669926747052409
  - 0.8841876661844601
  - 0.8621038124358341
  - 0.8694628765656092
  train_f1_macro:
  - 0.8245798319327732
  - 0.8225017470300489
  - 0.8291228070175439
  - 0.8189473684210525
  - 0.8187633262260127
  train_f1_macro_oob:
  - 0.8112745098039215
  - 0.8032844164919636
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945984
  train_f1_micro:
  - 0.8245798319327731
  - 0.822501747030049
  - 0.8291228070175438
  - 0.8189473684210526
  - 0.8187633262260128
  train_f1_micro_oob:
  - 0.8112745098039216
  - 0.8032844164919637
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945985
  train_f1_samples:
  - 0.8245798319327731
  - 0.822501747030049
  - 0.8291228070175439
  - 0.8189473684210526
  - 0.8187633262260128
  train_f1_samples_oob:
  - 0.8112745098039216
  - 0.8032844164919637
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945985
  train_f1_weighted:
  - 0.8196166854565953
  - 0.8182427710729597
  - 0.8227463039621525
  - 0.8129238446002138
  - 0.8130903775269912
  train_f1_weighted_oob:
  - 0.8073645467206048
  - 0.7995330235896274
  - 0.8112808988764044
  - 0.7960532256148272
  - 0.796124775828979
  train_jaccard_macro:
  - 0.7023334412798109
  - 0.6991132021301526
  - 0.7094146866395344
  - 0.6944350981774318
  - 0.6940937324979394
  train_jaccard_macro_oob:
  - 0.6830754145578529
  - 0.6717067003864123
  - 0.6920303359279171
  - 0.6700951432507011
  - 0.667143399864392
  train_jaccard_micro:
  - 0.7015192135835567
  - 0.6985163204747774
  - 0.7081210668264909
  - 0.6934046345811051
  - 0.6931407942238267
  train_jaccard_micro_oob:
  - 0.6824742268041237
  - 0.6712408759124088
  - 0.6908929101156926
  - 0.6691068814055637
  - 0.6665679597275689
  train_jaccard_samples:
  - 0.722939175670268
  - 0.720974343615853
  - 0.7307769423558896
  - 0.7141353383458645
  - 0.7142857142857142
  train_jaccard_samples_oob:
  - 0.7057322929171669
  - 0.6941199960067884
  - 0.7129323308270676
  - 0.6898245614035087
  - 0.6872271296578332
  train_jaccard_weighted:
  - 0.6953306184532707
  - 0.6931306442492792
  - 0.7003619399242899
  - 0.68612670947149
  - 0.686201715866063
  train_jaccard_weighted_oob:
  - 0.6776372246628344
  - 0.6665959552514085
  - 0.6837624029460572
  - 0.6623771909480125
  - 0.6619677266371742
  train_label_ranking_average_precision_score:
  - 0.8860294117647054
  - 0.9084847426042394
  - 0.9014035087719297
  - 0.8897953216374264
  - 0.903612887941246
  train_label_ranking_average_precision_score_oob:
  - 0.8726540616246495
  - 0.8986081993943625
  - 0.891818713450292
  - 0.8827251461988298
  - 0.8912343046671403
  train_matthews_corrcoef_macro:
  - 0.5831755600043663
  - 0.5751467194307187
  - 0.6005453182405996
  - 0.5702436957374286
  - 0.571830703115152
  train_matthews_corrcoef_macro_oob:
  - 0.5437429142845436
  - 0.520396290453343
  - 0.5685427641768915
  - 0.5218925199465562
  - 0.515083317003469
  train_matthews_corrcoef_micro:
  - 0.588987697930927
  - 0.5829367953363623
  - 0.6022385763222046
  - 0.5750808452658751
  - 0.577235715004749
  train_matthews_corrcoef_micro_oob:
  - 0.5540145905967779
  - 0.5326019485709919
  - 0.5723119752112761
  - 0.5293820521955261
  - 0.528712090990311
  train_matthews_corrcoef_samples:
  - 0.4900080466820848
  - 0.49246323229951666
  - 0.5037733981340964
  - 0.46213925811321693
  - 0.4759926583171917
  train_matthews_corrcoef_samples_oob:
  - 0.44451343655419445
  - 0.4309160618100749
  - 0.4671206473639621
  - 0.4057283567191072
  - 0.4159204445684313
  train_matthews_corrcoef_weighted:
  - 0.5839085060797334
  - 0.577748168315814
  - 0.5974555316917497
  - 0.5699794041069274
  - 0.5719421350243808
  train_matthews_corrcoef_weighted_oob:
  - 0.5479720407239689
  - 0.5262453800393329
  - 0.5673192416494778
  - 0.523558239906418
  - 0.5212855019040609
  train_ndgc:
  - 0.9248743201050175
  - 0.9406221016200376
  - 0.934241780617376
  - 0.9265065678732055
  - 0.9367817599690678
  train_ndgc_oob:
  - 0.9155070093709811
  - 0.9349833432760192
  - 0.9278015611550378
  - 0.9225688135022555
  - 0.9288061869536842
  train_neg_coverage_error:
  - -2.430672268907563
  - -2.3228511530398324
  - -2.334736842105263
  - -2.4021052631578947
  - -2.3539445628997866
  train_neg_coverage_error_oob:
  - -2.4978991596638656
  - -2.3941299790356396
  - -2.393684210526316
  - -2.4673684210526314
  - -2.4392324093816633
  train_neg_hamming_loss_macro:
  - -0.1754201680672269
  - -0.17749825296995106
  - -0.17087719298245616
  - -0.18105263157894735
  - -0.18123667377398722
  train_neg_hamming_loss_macro_oob:
  - -0.18872549019607843
  - -0.19671558350803633
  - -0.18280701754385964
  - -0.1982456140350877
  - -0.20007107320540152
  train_neg_hamming_loss_micro:
  - -0.17542016806722688
  - -0.1774982529699511
  - -0.17087719298245613
  - -0.18105263157894738
  - -0.1812366737739872
  train_neg_hamming_loss_micro_oob:
  - -0.18872549019607843
  - -0.19671558350803633
  - -0.18280701754385964
  - -0.19824561403508772
  - -0.20007107320540157
  train_neg_hamming_loss_samples:
  - -0.17542016806722688
  - -0.17749825296995106
  - -0.17087719298245613
  - -0.18105263157894738
  - -0.18123667377398725
  train_neg_hamming_loss_samples_oob:
  - -0.18872549019607843
  - -0.19671558350803633
  - -0.18280701754385964
  - -0.1982456140350877
  - -0.20007107320540157
  train_neg_hamming_loss_weighted:
  - -0.18038331454340473
  - -0.18175722892704024
  - -0.17725369603784744
  - -0.18707615539978614
  - -0.18690962247300874
  train_neg_hamming_loss_weighted_oob:
  - -0.19263545327939519
  - -0.20046697641037262
  - -0.18871910112359552
  - -0.20394677438517286
  - -0.203875224171021
  train_neg_label_ranking_loss:
  - -0.0953081232492997
  - -0.07360237596086652
  - -0.07626315789473682
  - -0.0886374269005848
  - -0.07991589670694148
  train_neg_label_ranking_loss_oob:
  - -0.10579481792717087
  - -0.08451549033310038
  - -0.08650877192982456
  - -0.09761403508771932
  - -0.0919805733238569
  train_precision_macro:
  - 0.8245798319327732
  - 0.8225017470300489
  - 0.8291228070175439
  - 0.8189473684210525
  - 0.8187633262260127
  train_precision_macro_oob:
  - 0.8112745098039215
  - 0.8032844164919636
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945984
  train_precision_micro:
  - 0.8245798319327731
  - 0.822501747030049
  - 0.8291228070175438
  - 0.8189473684210526
  - 0.8187633262260128
  train_precision_micro_oob:
  - 0.8112745098039216
  - 0.8032844164919637
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945985
  train_precision_samples:
  - 0.8245798319327731
  - 0.822501747030049
  - 0.8291228070175439
  - 0.8189473684210526
  - 0.8187633262260128
  train_precision_samples_oob:
  - 0.8112745098039216
  - 0.8032844164919637
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945985
  train_precision_weighted:
  - 0.8196166854565953
  - 0.8182427710729597
  - 0.8227463039621525
  - 0.8129238446002138
  - 0.8130903775269912
  train_precision_weighted_oob:
  - 0.8073645467206048
  - 0.7995330235896274
  - 0.8112808988764044
  - 0.7960532256148272
  - 0.796124775828979
  train_recall_macro:
  - 0.8245798319327732
  - 0.8225017470300489
  - 0.8291228070175439
  - 0.8189473684210525
  - 0.8187633262260127
  train_recall_macro_oob:
  - 0.8112745098039215
  - 0.8032844164919636
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945984
  train_recall_micro:
  - 0.8245798319327731
  - 0.822501747030049
  - 0.8291228070175438
  - 0.8189473684210526
  - 0.8187633262260128
  train_recall_micro_oob:
  - 0.8112745098039216
  - 0.8032844164919637
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945985
  train_recall_samples:
  - 0.8245798319327731
  - 0.822501747030049
  - 0.8291228070175439
  - 0.8189473684210526
  - 0.8187633262260128
  train_recall_samples_oob:
  - 0.8112745098039216
  - 0.8032844164919637
  - 0.8171929824561404
  - 0.8017543859649123
  - 0.7999289267945985
  train_recall_weighted:
  - 0.8196166854565953
  - 0.8182427710729597
  - 0.8227463039621525
  - 0.8129238446002138
  - 0.8130903775269912
  train_recall_weighted_oob:
  - 0.8073645467206048
  - 0.7995330235896274
  - 0.8112808988764044
  - 0.7960532256148272
  - 0.796124775828979
  train_roc_auc_macro:
  - 0.9129985606475005
  - 0.920140502207142
  - 0.9287745097417776
  - 0.9169963413107199
  - 0.9243605794819887
  train_roc_auc_macro_oob:
  - 0.9059604719693114
  - 0.9130480819489882
  - 0.9229061787737889
  - 0.9064998089131896
  - 0.9139162301229907
  train_roc_auc_micro:
  - 0.9194584836098192
  - 0.9263579689111604
  - 0.9335089429030038
  - 0.9220713244725602
  - 0.9286741480927766
  train_roc_auc_micro_oob:
  - 0.9130078791734111
  - 0.9197769197769198
  - 0.927459298326072
  - 0.9141591537057555
  - 0.9187608963853214
  train_roc_auc_samples:
  - 0.9046918767507003
  - 0.9263976240391334
  - 0.9237368421052631
  - 0.9113625730994153
  - 0.9200841032930587
  train_roc_auc_samples_oob:
  - 0.8942051820728291
  - 0.9154845096668996
  - 0.9134912280701754
  - 0.9023859649122807
  - 0.908019426676143
  train_roc_auc_weighted:
  - 0.912211076918618
  - 0.9208024431307936
  - 0.9275902169923217
  - 0.9148749236159512
  - 0.923655590310035
  train_roc_auc_weighted_oob:
  - 0.9054414423495823
  - 0.9142337902174306
  - 0.9225486757648977
  - 0.9050082872241502
  - 0.9132862116374516
start: 2023-12-22 03:42:43.745320
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
