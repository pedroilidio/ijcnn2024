active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0DAzMzMzMwMwACamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:59:02.498823
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__4
  params: {}
hash: 71f5fc164104884df367c646f9e59c28474ae02dbc98c0a69bdf50e294a6744a
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/71f5fc1_20231221T105828598559_embedding_proba_weak__4_VirusPseAAC.yml
results:
  fit_time:
  - 25.081326007843018
  - 24.44169569015503
  - 24.68261456489563
  - 24.546141862869263
  - 24.806585788726807
  score_time:
  - 2.9562313556671143
  - 3.0562756061553955
  - 3.0875473022460938
  - 3.1122751235961914
  - 2.9372525215148926
  test_average_precision_macro:
  - 0.4367954345564977
  - 0.4251442301315425
  - 0.37623435458654636
  - 0.4156196572576229
  - 0.25234868629687407
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4597851882800471
  - 0.3807247481054955
  - 0.384299849490863
  - 0.5105402667200097
  - 0.404815871122169
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6442251461988303
  - 0.6809259259259259
  - 0.6010162601626016
  - 0.7273809523809524
  - 0.6678861788617886
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4526130483066466
  - 0.39814397628996917
  - 0.3942888334207128
  - 0.517046703350389
  - 0.38773907038830685
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7719298245614036
  - 0.7999999999999999
  - 0.7560975609756097
  - 0.8055555555555555
  - 0.7804878048780487
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7719298245614035
  - 0.8
  - 0.7560975609756098
  - 0.8055555555555556
  - 0.7804878048780488
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7719298245614035
  - 0.7999999999999998
  - 0.7560975609756098
  - 0.8055555555555556
  - 0.7804878048780488
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6347368421052632
  - 0.6773333333333333
  - 0.6000000000000001
  - 0.7028388278388279
  - 0.6448780487804879
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6619676619676621
  - 0.6967617994973617
  - 0.6498794404781538
  - 0.6976574669421794
  - 0.6732085889525455
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6285714285714286
  - 0.6666666666666666
  - 0.6078431372549019
  - 0.6744186046511628
  - 0.64
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6575187969924812
  - 0.6910052910052911
  - 0.6236933797909407
  - 0.6887755102040817
  - 0.664924506387921
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4880941280941281
  - 0.5371226463506099
  - 0.462275692530022
  - 0.562661897865264
  - 0.499361394479066
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6442251461988304
  - 0.6809259259259259
  - 0.6010162601626015
  - 0.7273809523809524
  - 0.6678861788617885
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.009613226119716997
  - 0.08840338767705097
  - -0.0466351345956899
  - 0.06360896592987492
  - 0.01164500705926131
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.22153774557099876
  - 0.2381752793905317
  - 0.1052456378579252
  - 0.272003702154978
  - 0.2250950802559784
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.20743706664828276
  - 0.21033135697927452
  - 0.08892804619881808
  - 0.1848161347659138
  - 0.17267485676911304
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.019610981284222676
  - 0.09778755250053045
  - -0.0951356745752074
  - 0.12447884633386515
  - 0.023755814400893076
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7356748561512688
  - 0.7619413230783193
  - 0.7034080399857419
  - 0.7977436638046639
  - 0.7530417221506753
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.526315789473684
  - -2.088888888888889
  - -2.4390243902439024
  - -2.261904761904762
  - -2.4390243902439024
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.22807017543859645
  - -0.19999999999999998
  - -0.24390243902439027
  - -0.19444444444444442
  - -0.21951219512195122
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.22807017543859648
  - -0.2
  - -0.24390243902439024
  - -0.19444444444444445
  - -0.21951219512195122
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.22807017543859648
  - -0.2
  - -0.2439024390243902
  - -0.19444444444444442
  - -0.21951219512195122
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3652631578947369
  - -0.32266666666666666
  - -0.4
  - -0.2971611721611721
  - -0.35512195121951223
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2462719298245614
  - -0.19944444444444442
  - -0.24512195121951222
  - -0.19761904761904764
  - -0.24024390243902438
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7719298245614036
  - 0.7999999999999999
  - 0.7560975609756097
  - 0.8055555555555555
  - 0.7804878048780487
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7719298245614035
  - 0.8
  - 0.7560975609756098
  - 0.8055555555555556
  - 0.7804878048780488
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7719298245614035
  - 0.7999999999999998
  - 0.7560975609756098
  - 0.8055555555555556
  - 0.7804878048780488
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6347368421052632
  - 0.6773333333333333
  - 0.6000000000000001
  - 0.7028388278388279
  - 0.6448780487804879
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7719298245614036
  - 0.7999999999999999
  - 0.7560975609756097
  - 0.8055555555555555
  - 0.7804878048780487
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7719298245614035
  - 0.8
  - 0.7560975609756098
  - 0.8055555555555556
  - 0.7804878048780488
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7719298245614035
  - 0.7999999999999998
  - 0.7560975609756098
  - 0.8055555555555556
  - 0.7804878048780488
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6347368421052632
  - 0.6773333333333333
  - 0.6000000000000001
  - 0.7028388278388279
  - 0.6448780487804879
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5761178127164843
  - 0.6373474539261226
  - 0.6323691257514786
  - 0.6283214045852258
  - 0.4529550558962323
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7524719101123595
  - 0.7743636363636364
  - 0.7763265306122449
  - 0.8115384615384617
  - 0.7474489795918368
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7537280701754386
  - 0.8005555555555556
  - 0.7548780487804878
  - 0.8023809523809524
  - 0.7597560975609756
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5286518478359085
  - 0.5844540289788397
  - 0.5638051183051184
  - 0.6738475997686523
  - 0.5307657657657657
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9537948448110232
  - 0.9500295442975605
  - 0.9643612643186569
  - 0.9807940403107431
  - 0.943019565722059
  train_average_precision_macro_oob:
  - 0.7639995006146756
  - 0.7411195963022665
  - 0.760474611425043
  - 0.7768437614047059
  - 0.7646090517039817
  train_average_precision_micro:
  - 0.972879388024321
  - 0.9782085998861182
  - 0.9641495088043923
  - 0.9918761954643958
  - 0.965268018533143
  train_average_precision_micro_oob:
  - 0.895816753983728
  - 0.8987265460754981
  - 0.8863301594841919
  - 0.9081640953797411
  - 0.9046442548957697
  train_average_precision_samples:
  - 0.9792899408284024
  - 0.9794238683127573
  - 0.9839357429718875
  - 0.990909090909091
  - 0.9799196787148594
  train_average_precision_samples_oob:
  - 0.9086785009861933
  - 0.8982510288065843
  - 0.9088353413654618
  - 0.9116498316498316
  - 0.9269076305220884
  train_average_precision_weighted:
  - 0.9776458379197059
  - 0.9826395841826269
  - 0.9762341231474568
  - 0.9939019226560055
  - 0.9730164546761608
  train_average_precision_weighted_oob:
  - 0.8953577831368673
  - 0.8921750669868996
  - 0.8993566353090645
  - 0.9059658732206636
  - 0.8979555329130502
  train_f1_macro:
  - 0.9497041420118343
  - 0.9506172839506171
  - 0.9487951807228915
  - 0.9525252525252527
  - 0.9497991967871485
  train_f1_macro_oob:
  - 0.9289940828402367
  - 0.9351851851851851
  - 0.927710843373494
  - 0.9272727272727272
  - 0.930722891566265
  train_f1_micro:
  - 0.9497041420118343
  - 0.9506172839506173
  - 0.9487951807228916
  - 0.9525252525252526
  - 0.9497991967871486
  train_f1_micro_oob:
  - 0.9289940828402367
  - 0.9351851851851852
  - 0.927710843373494
  - 0.9272727272727272
  - 0.9307228915662651
  train_f1_samples:
  - 0.9497041420118343
  - 0.9506172839506173
  - 0.9487951807228916
  - 0.9525252525252527
  - 0.9497991967871487
  train_f1_samples_oob:
  - 0.9289940828402367
  - 0.9351851851851852
  - 0.927710843373494
  - 0.9272727272727272
  - 0.9307228915662651
  train_f1_weighted:
  - 0.9656687562247348
  - 0.9686468646864688
  - 0.966778003101515
  - 0.9737575757575757
  - 0.9669569366575212
  train_f1_weighted_oob:
  - 0.9374890151737068
  - 0.9499449944994498
  - 0.9438148634140523
  - 0.9451818181818181
  - 0.9426517953000119
  train_jaccard_macro:
  - 0.9059851399406794
  - 0.9080644578311071
  - 0.9046917752231557
  - 0.9117902778005226
  - 0.9064152801047736
  train_jaccard_macro_oob:
  - 0.868456995956996
  - 0.8799614770513383
  - 0.8681877270256563
  - 0.8678191164878998
  - 0.8715525156647775
  train_jaccard_micro:
  - 0.9042253521126761
  - 0.9058823529411765
  - 0.9025787965616046
  - 0.9093539054966249
  - 0.904397705544933
  train_jaccard_micro_oob:
  - 0.8674033149171271
  - 0.8782608695652174
  - 0.8651685393258427
  - 0.864406779661017
  - 0.8704225352112676
  train_jaccard_samples:
  - 0.916314454775993
  - 0.9191651969429748
  - 0.9155192197360872
  - 0.922077922077922
  - 0.9172403901319566
  train_jaccard_samples_oob:
  - 0.8833474218089602
  - 0.8949147560258671
  - 0.8823866896156053
  - 0.8800865800865799
  - 0.8871199082042456
  train_jaccard_weighted:
  - 0.9348494568688351
  - 0.9407634931739698
  - 0.937518296288673
  - 0.9508332775912511
  - 0.9375778321182523
  train_jaccard_weighted_oob:
  - 0.8832765371131708
  - 0.9061324533755077
  - 0.8965213217038688
  - 0.8993596744089496
  - 0.892586273725459
  train_label_ranking_average_precision_score:
  - 0.9792899408284024
  - 0.9794238683127572
  - 0.9839357429718876
  - 0.990909090909091
  - 0.9799196787148594
  train_label_ranking_average_precision_score_oob:
  - 0.9086785009861931
  - 0.8982510288065845
  - 0.9088353413654621
  - 0.9116498316498318
  - 0.9269076305220884
  train_matthews_corrcoef_macro:
  - 0.4662977525327301
  - 0.47055666309684
  - 0.4590265606291619
  - 0.46820608262613167
  - 0.4683096960593606
  train_matthews_corrcoef_macro_oob:
  - 0.3965680263608287
  - 0.4177058044103976
  - 0.3640640339217413
  - 0.3448581966296779
  - 0.4050790667745318
  train_matthews_corrcoef_micro:
  - 0.8376701616179526
  - 0.8461528249542881
  - 0.8370796142395018
  - 0.849367514184227
  - 0.8401439958656078
  train_matthews_corrcoef_micro_oob:
  - 0.7669701465579277
  - 0.7961732125080969
  - 0.7665988059414218
  - 0.7652691551513695
  - 0.7756936776209216
  train_matthews_corrcoef_samples:
  - 0.7643003019967808
  - 0.7928791368209233
  - 0.775339237052266
  - 0.7912958280748777
  - 0.77710365403307
  train_matthews_corrcoef_samples_oob:
  - 0.6781018140206487
  - 0.7217383698471336
  - 0.676801527523425
  - 0.6602204483557693
  - 0.6960199601433917
  train_matthews_corrcoef_weighted:
  - 0.7628019243972902
  - 0.7752810978432895
  - 0.7659157934270417
  - 0.7799790229098247
  - 0.7666915172198553
  train_matthews_corrcoef_weighted_oob:
  - 0.6836065649702767
  - 0.7199511606629305
  - 0.6773205322900785
  - 0.6656548590340344
  - 0.6987482702474922
  train_ndgc:
  - 0.9848724248723907
  - 0.9850269725741079
  - 0.9885620547315619
  - 0.9932896318831175
  - 0.9850826446643725
  train_ndgc_oob:
  - 0.9334129517622749
  - 0.9259456163067737
  - 0.9330477348507247
  - 0.9356030203979816
  - 0.9465636927284907
  train_neg_coverage_error:
  - -1.2485207100591715
  - -1.2962962962962963
  - -1.2650602409638554
  - -1.2303030303030302
  - -1.2650602409638554
  train_neg_coverage_error_oob:
  - -1.485207100591716
  - -1.617283950617284
  - -1.5301204819277108
  - -1.5333333333333334
  - -1.463855421686747
  train_neg_hamming_loss_macro:
  - -0.05029585798816569
  - -0.04938271604938271
  - -0.05120481927710844
  - -0.04747474747474748
  - -0.0502008032128514
  train_neg_hamming_loss_macro_oob:
  - -0.07100591715976332
  - -0.06481481481481481
  - -0.07228915662650603
  - -0.07272727272727272
  - -0.06927710843373493
  train_neg_hamming_loss_micro:
  - -0.05029585798816568
  - -0.04938271604938271
  - -0.05120481927710843
  - -0.047474747474747475
  - -0.050200803212851405
  train_neg_hamming_loss_micro_oob:
  - -0.07100591715976332
  - -0.06481481481481481
  - -0.07228915662650602
  - -0.07272727272727272
  - -0.06927710843373494
  train_neg_hamming_loss_samples:
  - -0.05029585798816568
  - -0.04938271604938271
  - -0.05120481927710843
  - -0.047474747474747475
  - -0.0502008032128514
  train_neg_hamming_loss_samples_oob:
  - -0.0710059171597633
  - -0.06481481481481481
  - -0.07228915662650602
  - -0.07272727272727272
  - -0.06927710843373494
  train_neg_hamming_loss_weighted:
  - -0.03433124377526509
  - -0.03135313531353135
  - -0.033221996898485026
  - -0.026242424242424244
  - -0.03304306334247882
  train_neg_hamming_loss_weighted_oob:
  - -0.06251098482629329
  - -0.05005500550055005
  - -0.056185136585947745
  - -0.054818181818181815
  - -0.05734820469998807
  train_neg_label_ranking_loss:
  - -0.010207100591715975
  - -0.009413580246913581
  - -0.008734939759036145
  - -0.003636363636363637
  - -0.00963855421686747
  train_neg_label_ranking_loss_oob:
  - -0.055029585798816574
  - -0.06881001371742113
  - -0.05970548862115127
  - -0.06080808080808082
  - -0.04720548862115127
  train_precision_macro:
  - 0.9497041420118343
  - 0.9506172839506171
  - 0.9487951807228915
  - 0.9525252525252527
  - 0.9497991967871485
  train_precision_macro_oob:
  - 0.9289940828402367
  - 0.9351851851851851
  - 0.927710843373494
  - 0.9272727272727272
  - 0.930722891566265
  train_precision_micro:
  - 0.9497041420118343
  - 0.9506172839506173
  - 0.9487951807228916
  - 0.9525252525252526
  - 0.9497991967871486
  train_precision_micro_oob:
  - 0.9289940828402367
  - 0.9351851851851852
  - 0.927710843373494
  - 0.9272727272727272
  - 0.9307228915662651
  train_precision_samples:
  - 0.9497041420118343
  - 0.9506172839506173
  - 0.9487951807228916
  - 0.9525252525252527
  - 0.9497991967871487
  train_precision_samples_oob:
  - 0.9289940828402367
  - 0.9351851851851852
  - 0.927710843373494
  - 0.9272727272727272
  - 0.9307228915662651
  train_precision_weighted:
  - 0.9656687562247348
  - 0.9686468646864688
  - 0.966778003101515
  - 0.9737575757575757
  - 0.9669569366575212
  train_precision_weighted_oob:
  - 0.9374890151737068
  - 0.9499449944994498
  - 0.9438148634140523
  - 0.9451818181818181
  - 0.9426517953000119
  train_recall_macro:
  - 0.9497041420118343
  - 0.9506172839506171
  - 0.9487951807228915
  - 0.9525252525252527
  - 0.9497991967871485
  train_recall_macro_oob:
  - 0.9289940828402367
  - 0.9351851851851851
  - 0.927710843373494
  - 0.9272727272727272
  - 0.930722891566265
  train_recall_micro:
  - 0.9497041420118343
  - 0.9506172839506173
  - 0.9487951807228916
  - 0.9525252525252526
  - 0.9497991967871486
  train_recall_micro_oob:
  - 0.9289940828402367
  - 0.9351851851851852
  - 0.927710843373494
  - 0.9272727272727272
  - 0.9307228915662651
  train_recall_samples:
  - 0.9497041420118343
  - 0.9506172839506173
  - 0.9487951807228916
  - 0.9525252525252527
  - 0.9497991967871487
  train_recall_samples_oob:
  - 0.9289940828402367
  - 0.9351851851851852
  - 0.927710843373494
  - 0.9272727272727272
  - 0.9307228915662651
  train_recall_weighted:
  - 0.9656687562247348
  - 0.9686468646864688
  - 0.966778003101515
  - 0.9737575757575757
  - 0.9669569366575212
  train_recall_weighted_oob:
  - 0.9374890151737068
  - 0.9499449944994498
  - 0.9438148634140523
  - 0.9451818181818181
  - 0.9426517953000119
  train_roc_auc_macro:
  - 0.9949816090104232
  - 0.9958528174898037
  - 0.9943971806681638
  - 0.9983603859992264
  - 0.9927607010390029
  train_roc_auc_macro_oob:
  - 0.9539919427791062
  - 0.9590086350004476
  - 0.9444510933864526
  - 0.9671439738430552
  - 0.9587273245895817
  train_roc_auc_micro:
  - 0.9937874945129981
  - 0.995010929664395
  - 0.9928860014464923
  - 0.9981012658227848
  - 0.992175225079183
  train_roc_auc_micro_oob:
  - 0.9595668926498562
  - 0.9554391153401054
  - 0.9531199341596628
  - 0.9598101265822785
  - 0.9630520986607477
  train_roc_auc_samples:
  - 0.9897928994082839
  - 0.9905864197530866
  - 0.991265060240964
  - 0.9963636363636365
  - 0.9903614457831323
  train_roc_auc_samples_oob:
  - 0.9449704142011833
  - 0.931189986282579
  - 0.9402945113788488
  - 0.939191919191919
  - 0.9527945113788487
  train_roc_auc_weighted:
  - 0.9939841206342857
  - 0.9954798613519728
  - 0.9916818030723935
  - 0.9986610149325139
  - 0.9919623898036705
  train_roc_auc_weighted_oob:
  - 0.972926189049272
  - 0.9752086531334067
  - 0.9741012968203294
  - 0.980685245565968
  - 0.977510399961829
start: 2023-12-21 10:58:28.598559
wrapper: null
