active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmJmZmZnJvwCamZmZmek/ADMzMzMz878AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:13:24.666985
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba__9
  params: {}
hash: ed73267fdc15b4ebed11cbb5e47e579249710982ec36ed2e608d5945d2bbe30b
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ed73267_20231221T201245371294_proba__9_GrampositivePseAAC.yml
results:
  fit_time:
  - 26.605302333831787
  - 27.072891235351562
  - 27.148821115493774
  - 26.532550573349
  - 27.205154418945312
  score_time:
  - 3.325723171234131
  - 3.2044076919555664
  - 3.2657861709594727
  - 3.419060468673706
  - 3.232497215270996
  test_average_precision_macro:
  - 0.34612824469493386
  - 0.4336823954780772
  - 0.40014028644374394
  - 0.40498447965234496
  - 0.4011351598045738
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.46101527735744563
  - 0.5364876137890842
  - 0.49937481577594767
  - 0.48883168628726104
  - 0.4889986991080273
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7233009708737863
  - 0.7171474358974359
  - 0.7313915857605178
  - 0.7015873015873015
  - 0.6995192307692307
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4499103337817976
  - 0.5365371590112282
  - 0.49230439537274057
  - 0.4740611043364683
  - 0.4801289296089858
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6688858067498844
  - 0.6759430473372781
  - 0.6696201338486191
  - 0.6738544474393531
  - 0.6720695970695971
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6151810418287802
  - 0.6245143674630844
  - 0.6190201012897639
  - 0.6176403871358
  - 0.6179965844675858
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5938104448742747
  - 0.603082851637765
  - 0.5968992248062015
  - 0.596958174904943
  - 0.5969289827255279
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5948220064724918
  - 0.6038461538461537
  - 0.5974110032362459
  - 0.5974603174603172
  - 0.5974358974358972
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.509956293014691
  - 0.5164352837708509
  - 0.5094268412177559
  - 0.5150097868204152
  - 0.5134611510617555
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7233009708737863
  - 0.717147435897436
  - 0.7313915857605173
  - 0.7015873015873016
  - 0.6995192307692307
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.03458692240008599
  - -0.017376201171422898
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.08502303018977037
  - -0.0284785885905587
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.009615384615384616
  - -0.0032362459546925564
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.046559318615500375
  - -0.022943333585568097
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7950090158473658
  - 0.7893914390199444
  - 0.7997353150319447
  - 0.7779241427048086
  - 0.7768681907535518
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7475728155339805
  - -1.7211538461538463
  - -1.7087378640776698
  - -1.7619047619047619
  - -1.7692307692307692
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25485436893203883
  - -0.24759615384615385
  - -0.2524271844660194
  - -0.2523809523809524
  - -0.25240384615384615
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25485436893203883
  - -0.24759615384615385
  - -0.2524271844660194
  - -0.2523809523809524
  - -0.25240384615384615
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25485436893203883
  - -0.24759615384615385
  - -0.2524271844660194
  - -0.2523809523809524
  - -0.25240384615384615
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33111419325011554
  - -0.32405695266272183
  - -0.33037986615138093
  - -0.32614555256064687
  - -0.327930402930403
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.24029126213592236
  - -0.2403846153846154
  - -0.23624595469255663
  - -0.25079365079365074
  - -0.25240384615384615
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6688858067498844
  - 0.6759430473372781
  - 0.6696201338486191
  - 0.6738544474393531
  - 0.6720695970695971
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7451456310679612
  - 0.7524038461538461
  - 0.7475728155339806
  - 0.7476190476190476
  - 0.7475961538461539
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6688858067498844
  - 0.6759430473372781
  - 0.6696201338486191
  - 0.6738544474393531
  - 0.6720695970695971
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5678654550698269
  - 0.6710116558322141
  - 0.652538623600397
  - 0.68170322193784
  - 0.6810070470597075
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7409027454630059
  - 0.7769045857988167
  - 0.7629999685801364
  - 0.7684473020069703
  - 0.744388301944572
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7597087378640776
  - 0.7596153846153846
  - 0.7637540453074434
  - 0.7492063492063491
  - 0.7475961538461539
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6206108468318104
  - 0.6835789203001779
  - 0.6557404313574741
  - 0.678397312440139
  - 0.6356474209131993
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7778571119578959
  - 0.7872333361842456
  - 0.7858958840486915
  - 0.7735303581438171
  - 0.7844791238899016
  train_average_precision_macro_oob:
  - 0.7191290301865922
  - 0.7239234992136537
  - 0.7097194339583418
  - 0.7115919020844459
  - 0.7265605754011386
  train_average_precision_micro:
  - 0.8472017627175642
  - 0.8436118868289819
  - 0.8346124586928113
  - 0.8491995203028854
  - 0.8521332627553287
  train_average_precision_micro_oob:
  - 0.8322437573087628
  - 0.8208481183969523
  - 0.8092930385881054
  - 0.8262232702166271
  - 0.8270862827246608
  train_average_precision_samples:
  - 0.8565705128205128
  - 0.8393574297188755
  - 0.8477564102564104
  - 0.8512479871175522
  - 0.8582329317269075
  train_average_precision_samples_oob:
  - 0.8539663461538461
  - 0.8309236947791165
  - 0.8293269230769231
  - 0.8383655394524959
  - 0.8417670682730923
  train_average_precision_weighted:
  - 0.841471393055995
  - 0.8375558716541857
  - 0.8268603344238308
  - 0.8419826054598696
  - 0.8456462561432153
  train_average_precision_weighted_oob:
  - 0.8306737338054783
  - 0.819248275013247
  - 0.8052918365106625
  - 0.8221395007146978
  - 0.8267112380694351
  train_f1_macro:
  - 0.8641826923076923
  - 0.860843373493976
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_f1_macro_oob:
  - 0.8040865384615383
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642511
  - 0.8024096385542168
  train_f1_micro:
  - 0.8641826923076923
  - 0.8608433734939759
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_f1_micro_oob:
  - 0.8040865384615384
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642513
  - 0.8024096385542169
  train_f1_samples:
  - 0.8641826923076923
  - 0.8608433734939759
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_f1_samples_oob:
  - 0.8040865384615384
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642513
  - 0.8024096385542169
  train_f1_weighted:
  - 0.8293211722488039
  - 0.8249130172240274
  - 0.8271691849816849
  - 0.8337445985240793
  - 0.8292788378393957
  train_f1_weighted_oob:
  - 0.7563316617592934
  - 0.7575063979066624
  - 0.7689789377289378
  - 0.7648142355680673
  - 0.7525162852366404
  train_jaccard_macro:
  - 0.7666204302172676
  - 0.761771238236659
  - 0.7639126986917402
  - 0.7729910945126707
  - 0.7682407171512605
  train_jaccard_macro_oob:
  - 0.6839059810994231
  - 0.6837015003980775
  - 0.6960704561186326
  - 0.6926377953581787
  - 0.6817934477425415
  train_jaccard_micro:
  - 0.7608465608465609
  - 0.7556848228450556
  - 0.7580559957739038
  - 0.767342582710779
  - 0.7622080679405521
  train_jaccard_micro_oob:
  - 0.6723618090452261
  - 0.672544080604534
  - 0.6859169199594731
  - 0.6820721178263077
  - 0.670020120724346
  train_jaccard_samples:
  - 0.7826923076923075
  - 0.7776706827309235
  - 0.7798076923076922
  - 0.7893719806763284
  - 0.7840963855421684
  train_jaccard_samples_oob:
  - 0.6871794871794871
  - 0.6877108433734938
  - 0.7022435897435896
  - 0.697906602254428
  - 0.6841767068273091
  train_jaccard_weighted:
  - 0.7101899746506901
  - 0.7041922471976816
  - 0.7072612583442259
  - 0.7168730416731129
  - 0.7105301679841778
  train_jaccard_weighted_oob:
  - 0.6102747742716025
  - 0.6118451383101461
  - 0.62673889673519
  - 0.6210102108569568
  - 0.6054274171541473
  train_label_ranking_average_precision_score:
  - 0.8565705128205126
  - 0.8393574297188751
  - 0.8477564102564096
  - 0.8512479871175518
  - 0.8582329317269072
  train_label_ranking_average_precision_score_oob:
  - 0.8539663461538457
  - 0.8309236947791159
  - 0.8293269230769224
  - 0.8383655394524954
  - 0.841767068273092
  train_matthews_corrcoef_macro:
  - 0.45814798688632113
  - 0.45339353197254517
  - 0.45681134142846563
  - 0.470926540543135
  - 0.4634831363068183
  train_matthews_corrcoef_macro_oob:
  - 0.24510842557610263
  - 0.2475126319238372
  - 0.30169756722288993
  - 0.27413641106989706
  - 0.2616408884245715
  train_matthews_corrcoef_micro:
  - 0.6235446963532947
  - 0.6150407608369711
  - 0.619727624249434
  - 0.6370366047213859
  - 0.6270563018871629
  train_matthews_corrcoef_micro_oob:
  - 0.4176750402135673
  - 0.42164497331361245
  - 0.4578849617863277
  - 0.44620911421800213
  - 0.41270913860059877
  train_matthews_corrcoef_samples:
  - 0.45950649167879626
  - 0.44995674893390086
  - 0.4550706756652848
  - 0.4776136492936446
  - 0.46441458025920207
  train_matthews_corrcoef_samples_oob:
  - 0.22115384615384615
  - 0.22548759101009547
  - 0.261375122133579
  - 0.24916594332941847
  - 0.21483060370693793
  train_matthews_corrcoef_weighted:
  - 0.5909977674141149
  - 0.5817623057686971
  - 0.5865189747277757
  - 0.604349976925317
  - 0.5944953251757032
  train_matthews_corrcoef_weighted_oob:
  - 0.3517356827332023
  - 0.3552058421190564
  - 0.4123468302701614
  - 0.38674275557808424
  - 0.3633594817672956
  train_ndgc:
  - 0.8933666483097442
  - 0.88049880332638
  - 0.8867153700724433
  - 0.8892086488597685
  - 0.8945190917690519
  train_ndgc_oob:
  - 0.8912744939253241
  - 0.8743089673191955
  - 0.8729986952530948
  - 0.8795434177914034
  - 0.882125955624505
  train_neg_coverage_error:
  - -1.375
  - -1.4216867469879517
  - -1.4182692307692308
  - -1.391304347826087
  - -1.363855421686747
  train_neg_coverage_error_oob:
  - -1.3966346153846154
  - -1.4578313253012047
  - -1.4663461538461537
  - -1.4468599033816425
  - -1.4289156626506023
  train_neg_hamming_loss_macro:
  - -0.1358173076923077
  - -0.13915662650602412
  - -0.1376201923076923
  - -0.1316425120772947
  - -0.13493975903614458
  train_neg_hamming_loss_macro_oob:
  - -0.1959134615384615
  - -0.19578313253012047
  - -0.18629807692307693
  - -0.1890096618357488
  - -0.19759036144578312
  train_neg_hamming_loss_micro:
  - -0.13581730769230768
  - -0.1391566265060241
  - -0.13762019230769232
  - -0.1316425120772947
  - -0.13493975903614458
  train_neg_hamming_loss_micro_oob:
  - -0.19591346153846154
  - -0.19578313253012047
  - -0.18629807692307693
  - -0.1890096618357488
  - -0.19759036144578312
  train_neg_hamming_loss_samples:
  - -0.13581730769230768
  - -0.1391566265060241
  - -0.13762019230769232
  - -0.1316425120772947
  - -0.13493975903614458
  train_neg_hamming_loss_samples_oob:
  - -0.19591346153846154
  - -0.19578313253012047
  - -0.18629807692307693
  - -0.1890096618357488
  - -0.19759036144578312
  train_neg_hamming_loss_weighted:
  - -0.17067882775119617
  - -0.17508698277597265
  - -0.17283081501831501
  - -0.16625540147592072
  - -0.17072116216060412
  train_neg_hamming_loss_weighted_oob:
  - -0.24366833824070666
  - -0.2424936020933376
  - -0.23102106227106228
  - -0.2351857644319327
  - -0.2474837147633597
  train_neg_label_ranking_loss:
  - -0.12299679487179487
  - -0.13714859437751
  - -0.13561698717948717
  - -0.1280193236714976
  - -0.11887550200803211
  train_neg_label_ranking_loss_oob:
  - -0.13020833333333334
  - -0.14879518072289158
  - -0.1516426282051282
  - -0.1461352657004831
  - -0.14036144578313253
  train_precision_macro:
  - 0.8641826923076923
  - 0.860843373493976
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_precision_macro_oob:
  - 0.8040865384615383
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642511
  - 0.8024096385542168
  train_precision_micro:
  - 0.8641826923076923
  - 0.8608433734939759
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_precision_micro_oob:
  - 0.8040865384615384
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642513
  - 0.8024096385542169
  train_precision_samples:
  - 0.8641826923076923
  - 0.8608433734939759
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_precision_samples_oob:
  - 0.8040865384615384
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642513
  - 0.8024096385542169
  train_precision_weighted:
  - 0.8293211722488039
  - 0.8249130172240274
  - 0.8271691849816849
  - 0.8337445985240793
  - 0.8292788378393957
  train_precision_weighted_oob:
  - 0.7563316617592934
  - 0.7575063979066624
  - 0.7689789377289378
  - 0.7648142355680673
  - 0.7525162852366404
  train_recall_macro:
  - 0.8641826923076923
  - 0.860843373493976
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_recall_macro_oob:
  - 0.8040865384615383
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642511
  - 0.8024096385542168
  train_recall_micro:
  - 0.8641826923076923
  - 0.8608433734939759
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_recall_micro_oob:
  - 0.8040865384615384
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642513
  - 0.8024096385542169
  train_recall_samples:
  - 0.8641826923076923
  - 0.8608433734939759
  - 0.8623798076923077
  - 0.8683574879227053
  - 0.8650602409638555
  train_recall_samples_oob:
  - 0.8040865384615384
  - 0.8042168674698795
  - 0.8137019230769231
  - 0.8109903381642513
  - 0.8024096385542169
  train_recall_weighted:
  - 0.8293211722488039
  - 0.8249130172240274
  - 0.8271691849816849
  - 0.8337445985240793
  - 0.8292788378393957
  train_recall_weighted_oob:
  - 0.7563316617592934
  - 0.7575063979066624
  - 0.7689789377289378
  - 0.7648142355680673
  - 0.7525162852366404
  train_roc_auc_macro:
  - 0.8948258187732377
  - 0.8857849835225045
  - 0.8762249797811537
  - 0.8905719429123173
  - 0.8937935191629666
  train_roc_auc_macro_oob:
  - 0.8818113050443637
  - 0.8676890513303914
  - 0.860600601659849
  - 0.8592819560379019
  - 0.864258328061589
  train_roc_auc_micro:
  - 0.918954050089473
  - 0.9177293698399359
  - 0.909586969836166
  - 0.919851044104184
  - 0.9246507793418548
  train_roc_auc_micro_oob:
  - 0.9041986989946778
  - 0.8982670453999104
  - 0.8892780584902772
  - 0.9021199505286812
  - 0.9029174275169699
  train_roc_auc_samples:
  - 0.8770032051282051
  - 0.8628514056224901
  - 0.8643830128205129
  - 0.8719806763285024
  - 0.8811244979919678
  train_roc_auc_samples_oob:
  - 0.8697916666666667
  - 0.8512048192771084
  - 0.8483573717948718
  - 0.8538647342995169
  - 0.8596385542168675
  train_roc_auc_weighted:
  - 0.8902705850972372
  - 0.8860221999439883
  - 0.8719980016322557
  - 0.8918674587038858
  - 0.8962559292602972
  train_roc_auc_weighted_oob:
  - 0.8806141810071589
  - 0.8695534288801751
  - 0.8544507349853896
  - 0.8735415853812367
  - 0.8740735512602948
start: 2023-12-21 20:12:45.371294
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
