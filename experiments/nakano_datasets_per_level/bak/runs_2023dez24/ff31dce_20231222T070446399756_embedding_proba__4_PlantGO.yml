active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r+AZmZmZmYWQAA0MzMzM+M/ADQzMzMz4z+AmZmZmZkVwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 07:05:45.808921
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__4
  params: {}
hash: ff31dce7924bd571adf8d6925de78ef0880b75eadf9086c8224caddc81e826c1
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ff31dce_20231222T070446399756_embedding_proba__4_PlantGO.yml
results:
  fit_time:
  - 23.41383934020996
  - 26.877479076385498
  - 25.23430061340332
  - 27.21454954147339
  - 23.910602569580078
  score_time:
  - 6.3995866775512695
  - 6.530102014541626
  - 6.303457736968994
  - 6.747112989425659
  - 6.4227025508880615
  test_average_precision_macro:
  - 0.8374709356446752
  - 0.7356376129266177
  - 0.8047377167953423
  - 0.8230406425884481
  - 0.8058127567592756
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8586304846983424
  - 0.8340716111920116
  - 0.8517296673222312
  - 0.871535918093341
  - 0.8628205351720268
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9150229635001209
  - 0.8915749601275916
  - 0.8886467236467236
  - 0.8994444444444444
  - 0.9064676616915422
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8801946434507196
  - 0.844169764380489
  - 0.8673805887628535
  - 0.8898659642002159
  - 0.8670707080665846
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9598138747884941
  - 0.9535087719298246
  - 0.9547008547008548
  - 0.9598290598290599
  - 0.9597844112769485
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9598138747884941
  - 0.9535087719298245
  - 0.9547008547008548
  - 0.9598290598290599
  - 0.9597844112769486
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9598138747884942
  - 0.9535087719298246
  - 0.9547008547008546
  - 0.9598290598290597
  - 0.9597844112769486
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9490210297316896
  - 0.9361152882205513
  - 0.9374071411454588
  - 0.9457631257631257
  - 0.9491641319469006
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9233769433173964
  - 0.9126080047283601
  - 0.9144522627989634
  - 0.9234701726337134
  - 0.9233371573205565
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9227328182187882
  - 0.9111483654652137
  - 0.9133278822567457
  - 0.9227608874281019
  - 0.9226783579115185
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9274836838288613
  - 0.9180566801619432
  - 0.9190307128768668
  - 0.9278444632290787
  - 0.9278333606691815
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9037518950332456
  - 0.8816223317240838
  - 0.8837072281627456
  - 0.898035559124471
  - 0.9040260689987427
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9150229635001209
  - 0.8915749601275919
  - 0.8886467236467236
  - 0.8994444444444444
  - 0.9064676616915425
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.35623937269166883
  - 0.3429757499342028
  - 0.3777634122010394
  - 0.4176297679607037
  - 0.35489484312842173
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7246449656312846
  - 0.6898789328921273
  - 0.6938772996886718
  - 0.7272167106070497
  - 0.7209205428032605
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6225943631153469
  - 0.618946293176105
  - 0.5975192285191316
  - 0.6246682468110348
  - 0.6223794628835271
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6409212546161004
  - 0.6076452223520086
  - 0.6254770396853506
  - 0.6607211111983649
  - 0.642647515423123
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9368265788781158
  - 0.9204197205384695
  - 0.9183459350267789
  - 0.9263303572396874
  - 0.9316046610746216
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.350253807106599
  - -1.5105263157894737
  - -1.5384615384615385
  - -1.3846153846153846
  - -1.308457711442786
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04018612521150592
  - -0.04649122807017544
  - -0.045299145299145305
  - -0.040170940170940174
  - -0.040215588723051414
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04018612521150592
  - -0.04649122807017544
  - -0.0452991452991453
  - -0.040170940170940174
  - -0.04021558872305141
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04018612521150591
  - -0.046491228070175444
  - -0.04529914529914529
  - -0.04017094017094017
  - -0.04021558872305141
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.050978970268310365
  - -0.06388471177944861
  - -0.0625928588545411
  - -0.05423687423687423
  - -0.05083586805309944
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.025219197046608213
  - -0.03315789473684211
  - -0.036554433221099886
  - -0.025624622291288954
  - -0.02198100407055631
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9598138747884941
  - 0.9535087719298246
  - 0.9547008547008548
  - 0.9598290598290599
  - 0.9597844112769485
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9598138747884941
  - 0.9535087719298245
  - 0.9547008547008548
  - 0.9598290598290599
  - 0.9597844112769486
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9598138747884942
  - 0.9535087719298246
  - 0.9547008547008546
  - 0.9598290598290597
  - 0.9597844112769486
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9490210297316896
  - 0.9361152882205513
  - 0.9374071411454588
  - 0.9457631257631257
  - 0.9491641319469006
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9598138747884941
  - 0.9535087719298246
  - 0.9547008547008548
  - 0.9598290598290599
  - 0.9597844112769485
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9598138747884941
  - 0.9535087719298245
  - 0.9547008547008548
  - 0.9598290598290599
  - 0.9597844112769486
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9598138747884942
  - 0.9535087719298246
  - 0.9547008547008546
  - 0.9598290598290597
  - 0.9597844112769486
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9490210297316896
  - 0.9361152882205513
  - 0.9374071411454588
  - 0.9457631257631257
  - 0.9491641319469006
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9671809761584543
  - 0.9650094132135459
  - 0.9610235836796353
  - 0.9810145472133219
  - 0.9823758396957816
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9770703453154707
  - 0.9748838279273062
  - 0.9719307461689276
  - 0.9835937849318132
  - 0.9845094108451351
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9747808029533916
  - 0.9668421052631578
  - 0.9634455667789
  - 0.974375377708711
  - 0.9780189959294436
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9725641810215517
  - 0.9705294143319212
  - 0.9678430085035962
  - 0.9797301211142123
  - 0.9818489775328401
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9593401415614294
  - 0.9643018652080412
  - 0.95666854379242
  - 0.9692417658069843
  - 0.9662241031686865
  train_average_precision_macro_oob:
  - 0.8008975036071448
  - 0.8190445455853425
  - 0.8260835585772491
  - 0.8302750106621142
  - 0.8198691932368996
  train_average_precision_micro:
  - 0.9673867717624987
  - 0.9645874200705999
  - 0.9634481160522173
  - 0.96394654746732
  - 0.9649351020803205
  train_average_precision_micro_oob:
  - 0.8802478028311196
  - 0.8833802032430389
  - 0.8760572024854894
  - 0.8749072353401394
  - 0.8750465687389706
  train_average_precision_samples:
  - 0.9621212121212123
  - 0.9635152284263959
  - 0.9650915283099191
  - 0.9671136653895275
  - 0.9635349635349635
  train_average_precision_samples_oob:
  - 0.9098169827043066
  - 0.9179896774122662
  - 0.9193141965172617
  - 0.9214692076761043
  - 0.9132464096749812
  train_average_precision_weighted:
  - 0.9755089723790314
  - 0.975090689616266
  - 0.9718596380551091
  - 0.9777422873874887
  - 0.9760416788563134
  train_average_precision_weighted_oob:
  - 0.8885422986697565
  - 0.8914976445376185
  - 0.8890163048559302
  - 0.8896243073279675
  - 0.8903218441208762
  train_f1_macro:
  - 0.9703371745625265
  - 0.9722927241962775
  - 0.9727543635589612
  - 0.9726479352916133
  - 0.972865722865723
  train_f1_macro_oob:
  - 0.959453691848058
  - 0.9602368866328258
  - 0.9599829714772244
  - 0.9609408258833546
  - 0.9584942084942085
  train_f1_micro:
  - 0.9703371745625267
  - 0.9722927241962775
  - 0.9727543635589613
  - 0.9726479352916134
  - 0.9728657228657228
  train_f1_micro_oob:
  - 0.9594536918480581
  - 0.9602368866328257
  - 0.9599829714772243
  - 0.9609408258833546
  - 0.9584942084942085
  train_f1_samples:
  - 0.9703371745625265
  - 0.9722927241962774
  - 0.9727543635589612
  - 0.9726479352916133
  - 0.9728657228657228
  train_f1_samples_oob:
  - 0.959453691848058
  - 0.9602368866328257
  - 0.9599829714772244
  - 0.9609408258833546
  - 0.9584942084942085
  train_f1_weighted:
  - 0.9674169817181735
  - 0.9688357913074822
  - 0.9696751571367175
  - 0.9702222524503691
  - 0.9701443149310448
  train_f1_weighted_oob:
  - 0.9492245565918372
  - 0.951006217523203
  - 0.9491634814116261
  - 0.9526823701890015
  - 0.9475394487242828
  train_jaccard_macro:
  - 0.9424893072967969
  - 0.9462096562468726
  - 0.9470302560093226
  - 0.9468509909104075
  - 0.9472656223234828
  train_jaccard_macro_oob:
  - 0.9225932511530884
  - 0.9240394410106817
  - 0.923662857193181
  - 0.9253770616688196
  - 0.9210202319308145
  train_jaccard_micro:
  - 0.9423834196891192
  - 0.9460794402140358
  - 0.9469539991711562
  - 0.9467523049829069
  - 0.9471650830113815
  train_jaccard_micro_oob:
  - 0.9220672682526662
  - 0.9235150528885273
  - 0.9230454359394188
  - 0.9248181911297757
  - 0.9202965708989805
  train_jaccard_samples:
  - 0.9464141492310507
  - 0.9500920399397557
  - 0.9509522406074131
  - 0.9508118956394819
  - 0.9509751509751511
  train_jaccard_samples_oob:
  - 0.9271489074305975
  - 0.928309254197579
  - 0.928132148821804
  - 0.9295636674947019
  - 0.9254218111360968
  train_jaccard_weighted:
  - 0.9370200446956155
  - 0.9397727658005757
  - 0.9412369470205518
  - 0.9423063246827507
  - 0.9421883935527093
  train_jaccard_weighted_oob:
  - 0.903932746152364
  - 0.9072051629329808
  - 0.9039960995850681
  - 0.9103684702808248
  - 0.9012591598283584
  train_label_ranking_average_precision_score:
  - 0.962121212121212
  - 0.9635152284263959
  - 0.9650915283099191
  - 0.9671136653895275
  - 0.9635349635349635
  train_label_ranking_average_precision_score_oob:
  - 0.909816982704307
  - 0.9179896774122667
  - 0.9193141965172619
  - 0.9214692076761047
  - 0.9132464096749816
  train_matthews_corrcoef_macro:
  - 0.49587331759779124
  - 0.5313171389459305
  - 0.5490684143784754
  - 0.5520532306428592
  - 0.5209121642865909
  train_matthews_corrcoef_macro_oob:
  - 0.36129202182620745
  - 0.3701377834549821
  - 0.386784795999033
  - 0.36574202018508806
  - 0.3568140811892442
  train_matthews_corrcoef_micro:
  - 0.8056914311934721
  - 0.8179676307239733
  - 0.8215327466968175
  - 0.8215795825824345
  - 0.8242352871137775
  train_matthews_corrcoef_micro_oob:
  - 0.7254600832270642
  - 0.7289231786872526
  - 0.727693626068896
  - 0.735940957045003
  - 0.7193656223963599
  train_matthews_corrcoef_samples:
  - 0.7198396790748172
  - 0.7397310525715616
  - 0.7475700871548226
  - 0.7431682075066547
  - 0.746409135535141
  train_matthews_corrcoef_samples_oob:
  - 0.6230262965199099
  - 0.6198742219803616
  - 0.6276834272787163
  - 0.6252452524267482
  - 0.6141202708099766
  train_matthews_corrcoef_weighted:
  - 0.758943558813879
  - 0.7762380309299609
  - 0.7839504308512015
  - 0.7849290607098821
  - 0.7790654303627926
  train_matthews_corrcoef_weighted_oob:
  - 0.6480710118839511
  - 0.6514747927456234
  - 0.6598997017385763
  - 0.657460603440439
  - 0.642671443679348
  train_ndgc:
  - 0.9721002374059642
  - 0.9730901390448693
  - 0.9743028128543915
  - 0.9758122502261161
  - 0.9730892038988568
  train_ndgc_oob:
  - 0.9339825863906241
  - 0.9399349275729763
  - 0.9408308499274333
  - 0.942505610261144
  - 0.9361543975866653
  train_neg_coverage_error:
  - -1.1638924455825865
  - -1.1535532994923858
  - -1.1494252873563218
  - -1.1532567049808429
  - -1.1647361647361647
  train_neg_coverage_error_oob:
  - -1.3841229193341869
  - -1.3578680203045685
  - -1.3320561941251596
  - -1.3588761174968071
  - -1.3835263835263836
  train_neg_hamming_loss_macro:
  - -0.029662825437473322
  - -0.027707275803722505
  - -0.027245636441038737
  - -0.02735206470838655
  - -0.02713427713427714
  train_neg_hamming_loss_macro_oob:
  - -0.040546308151941955
  - -0.03976311336717428
  - -0.04001702852277565
  - -0.03905917411664538
  - -0.041505791505791506
  train_neg_hamming_loss_micro:
  - -0.029662825437473325
  - -0.027707275803722505
  - -0.02724563644103874
  - -0.027352064708386546
  - -0.027134277134277133
  train_neg_hamming_loss_micro_oob:
  - -0.040546308151941955
  - -0.03976311336717428
  - -0.04001702852277565
  - -0.03905917411664538
  - -0.041505791505791506
  train_neg_hamming_loss_samples:
  - -0.029662825437473322
  - -0.0277072758037225
  - -0.027245636441038733
  - -0.027352064708386543
  - -0.027134277134277136
  train_neg_hamming_loss_samples_oob:
  - -0.04054630815194195
  - -0.03976311336717428
  - -0.040017028522775645
  - -0.03905917411664538
  - -0.041505791505791506
  train_neg_hamming_loss_weighted:
  - -0.03258301828182651
  - -0.031164208692517945
  - -0.030324842863282332
  - -0.029777747549630838
  - -0.029855685068955213
  train_neg_hamming_loss_weighted_oob:
  - -0.0507754434081628
  - -0.04899378247679693
  - -0.05083651858837394
  - -0.047317629810998504
  - -0.05246055127571716
  train_neg_label_ranking_loss:
  - -0.007356535909672914
  - -0.00726319882411253
  - -0.00675722744688262
  - -0.006572321770278347
  - -0.007096057096057096
  train_neg_label_ranking_loss_oob:
  - -0.02480783076173601
  - -0.023836076501051122
  - -0.02154065129799485
  - -0.0229936659055433
  - -0.025047558380891715
  train_precision_macro:
  - 0.9703371745625265
  - 0.9722927241962775
  - 0.9727543635589612
  - 0.9726479352916133
  - 0.972865722865723
  train_precision_macro_oob:
  - 0.959453691848058
  - 0.9602368866328258
  - 0.9599829714772244
  - 0.9609408258833546
  - 0.9584942084942085
  train_precision_micro:
  - 0.9703371745625267
  - 0.9722927241962775
  - 0.9727543635589613
  - 0.9726479352916134
  - 0.9728657228657228
  train_precision_micro_oob:
  - 0.9594536918480581
  - 0.9602368866328257
  - 0.9599829714772243
  - 0.9609408258833546
  - 0.9584942084942085
  train_precision_samples:
  - 0.9703371745625265
  - 0.9722927241962774
  - 0.9727543635589612
  - 0.9726479352916133
  - 0.9728657228657228
  train_precision_samples_oob:
  - 0.959453691848058
  - 0.9602368866328257
  - 0.9599829714772244
  - 0.9609408258833546
  - 0.9584942084942085
  train_precision_weighted:
  - 0.9674169817181735
  - 0.9688357913074822
  - 0.9696751571367175
  - 0.9702222524503691
  - 0.9701443149310448
  train_precision_weighted_oob:
  - 0.9492245565918372
  - 0.951006217523203
  - 0.9491634814116261
  - 0.9526823701890015
  - 0.9475394487242828
  train_recall_macro:
  - 0.9703371745625265
  - 0.9722927241962775
  - 0.9727543635589612
  - 0.9726479352916133
  - 0.972865722865723
  train_recall_macro_oob:
  - 0.959453691848058
  - 0.9602368866328258
  - 0.9599829714772244
  - 0.9609408258833546
  - 0.9584942084942085
  train_recall_micro:
  - 0.9703371745625267
  - 0.9722927241962775
  - 0.9727543635589613
  - 0.9726479352916134
  - 0.9728657228657228
  train_recall_micro_oob:
  - 0.9594536918480581
  - 0.9602368866328257
  - 0.9599829714772243
  - 0.9609408258833546
  - 0.9584942084942085
  train_recall_samples:
  - 0.9703371745625265
  - 0.9722927241962774
  - 0.9727543635589612
  - 0.9726479352916133
  - 0.9728657228657228
  train_recall_samples_oob:
  - 0.959453691848058
  - 0.9602368866328257
  - 0.9599829714772244
  - 0.9609408258833546
  - 0.9584942084942085
  train_recall_weighted:
  - 0.9674169817181735
  - 0.9688357913074822
  - 0.9696751571367175
  - 0.9702222524503691
  - 0.9701443149310448
  train_recall_weighted_oob:
  - 0.9492245565918372
  - 0.951006217523203
  - 0.9491634814116261
  - 0.9526823701890015
  - 0.9475394487242828
  train_roc_auc_macro:
  - 0.9976663910737565
  - 0.9971155175113829
  - 0.9969050487795507
  - 0.9971454197404687
  - 0.9971589975964794
  train_roc_auc_macro_oob:
  - 0.9790527567538185
  - 0.9787913935608454
  - 0.9813382210179288
  - 0.9750837972986015
  - 0.9770501543930877
  train_roc_auc_micro:
  - 0.9970632789822513
  - 0.9967488948702603
  - 0.9967563871181159
  - 0.9966579914872062
  - 0.9966606679781811
  train_roc_auc_micro_oob:
  - 0.9819898227905371
  - 0.982892117485616
  - 0.9848596651310574
  - 0.9814721140611948
  - 0.9812954093266564
  train_roc_auc_samples:
  - 0.9926434640903271
  - 0.9927368011758875
  - 0.9932427725531174
  - 0.9934276782297216
  - 0.9929039429039429
  train_roc_auc_samples_oob:
  - 0.9751921692382639
  - 0.9761639234989489
  - 0.9784593487020051
  - 0.9770063340944568
  - 0.9749524416191083
  train_roc_auc_weighted:
  - 0.9969059218232567
  - 0.9965394919858354
  - 0.9964579829366164
  - 0.9965059060745955
  - 0.9966176860242348
  train_roc_auc_weighted_oob:
  - 0.9821543597027043
  - 0.9824003736994605
  - 0.9821946879351972
  - 0.9793771213818024
  - 0.9805821295685246
start: 2023-12-22 07:04:46.399756
wrapper: null
