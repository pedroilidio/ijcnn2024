active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AMzMzMzPjv8DMzMzMzATAgJmZmZmZ+b9AMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:55:55.144063
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__7
  params: {}
hash: 3c07b119da3e18e143cf966a73c004ecd3974631599888e53b998613b3919607
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3c07b11_20231221T065510765275_embedding_proba__7_VirusGO.yml
results:
  fit_time:
  - 30.380794763565063
  - 30.415412425994873
  - 31.275269746780396
  - 31.033525705337524
  - 31.446474075317383
  score_time:
  - 4.393839597702026
  - 4.387839078903198
  - 4.606377840042114
  - 4.532715320587158
  - 4.568371534347534
  test_average_precision_macro:
  - 0.8453314659197012
  - 0.9063749461718866
  - 0.9870322880709828
  - 0.9595822349703068
  - 0.954485903180998
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9130277344299617
  - 0.9049225290754924
  - 0.9665959186974123
  - 0.8949419617596392
  - 0.9628642942957932
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9508333333333333
  - 0.9365079365079364
  - 0.9583333333333335
  - 0.9038759689922481
  - 0.982456140350877
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9014404761904763
  - 0.9317826679684265
  - 0.9868849040965914
  - 0.9621272246272246
  - 0.9646335023309498
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9416666666666668
  - 0.9285714285714285
  - 0.9507575757575758
  - 0.941860465116279
  - 0.9298245614035089
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9416666666666667
  - 0.9285714285714286
  - 0.9507575757575758
  - 0.9418604651162791
  - 0.9298245614035088
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9416666666666668
  - 0.9285714285714286
  - 0.9507575757575758
  - 0.9418604651162791
  - 0.9298245614035089
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9460000000000001
  - 0.9223809523809524
  - 0.9409965034965034
  - 0.9101687186502507
  - 0.8979591836734694
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8903564450926901
  - 0.8672815107597716
  - 0.9065611402336655
  - 0.8936094919377594
  - 0.874153985129595
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.889763779527559
  - 0.8666666666666667
  - 0.9061371841155235
  - 0.8901098901098901
  - 0.8688524590163934
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9065476190476189
  - 0.8877551020408164
  - 0.9188311688311689
  - 0.906423034330011
  - 0.8884711779448621
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8984090970477812
  - 0.856411067193676
  - 0.8889173525621259
  - 0.8381100387715801
  - 0.8202056557457253
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9508333333333333
  - 0.9365079365079364
  - 0.9583333333333335
  - 0.9038759689922479
  - 0.982456140350877
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5936067571756958
  - 0.48830806538221244
  - 0.6805030097870138
  - 0.8092386579248302
  - 0.7595881287408686
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8168034768532139
  - 0.763566247299658
  - 0.8390581667661673
  - 0.8181137838124528
  - 0.7843031218238171
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7772061402817684
  - 0.7
  - 0.7931219680932052
  - 0.8563508283206094
  - 0.7507847928456501
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7842951196044443
  - 0.6961566180384068
  - 0.8066732441013766
  - 0.789965444033598
  - 0.7463337587002835
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.964710606994033
  - 0.9544866196694944
  - 0.9700359158247978
  - 0.9307272555007314
  - 0.9887010978672451
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.45
  - -1.4285714285714286
  - -1.2954545454545454
  - -1.4651162790697674
  - -1.368421052631579
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05833333333333333
  - -0.07142857142857141
  - -0.04924242424242425
  - -0.05813953488372092
  - -0.07017543859649122
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.058333333333333334
  - -0.07142857142857142
  - -0.04924242424242424
  - -0.05813953488372093
  - -0.07017543859649122
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05833333333333333
  - -0.07142857142857142
  - -0.04924242424242424
  - -0.05813953488372093
  - -0.07017543859649122
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05399999999999999
  - -0.07761904761904762
  - -0.05900349650349649
  - -0.0898312813497492
  - -0.1020408163265306
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0375
  - -0.04404761904761905
  - -0.021022727272727273
  - -0.04993540051679586
  - -0.013157894736842105
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9416666666666668
  - 0.9285714285714285
  - 0.9507575757575758
  - 0.941860465116279
  - 0.9298245614035089
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9416666666666667
  - 0.9285714285714286
  - 0.9507575757575758
  - 0.9418604651162791
  - 0.9298245614035088
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9416666666666668
  - 0.9285714285714286
  - 0.9507575757575758
  - 0.9418604651162791
  - 0.9298245614035089
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9460000000000001
  - 0.9223809523809524
  - 0.9409965034965034
  - 0.9101687186502507
  - 0.8979591836734694
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9416666666666668
  - 0.9285714285714285
  - 0.9507575757575758
  - 0.941860465116279
  - 0.9298245614035089
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9416666666666667
  - 0.9285714285714286
  - 0.9507575757575758
  - 0.9418604651162791
  - 0.9298245614035088
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9416666666666668
  - 0.9285714285714286
  - 0.9507575757575758
  - 0.9418604651162791
  - 0.9298245614035089
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9460000000000001
  - 0.9223809523809524
  - 0.9409965034965034
  - 0.9101687186502507
  - 0.8979591836734694
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9406791702188122
  - 0.9486093911248711
  - 0.9960744162337299
  - 0.9864628073451603
  - 0.9744395192094434
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9591578947368422
  - 0.9657425742574258
  - 0.9921988388969522
  - 0.9715828360329639
  - 0.9821001026108768
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9625
  - 0.9559523809523809
  - 0.9789772727272728
  - 0.9500645994832041
  - 0.9868421052631579
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9515345268542199
  - 0.9618736842105264
  - 0.9937390422967347
  - 0.9797821350762527
  - 0.9782829763660805
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9893863542712609
  - 0.9886414104957472
  - 0.9832865974055016
  - 0.986872656823372
  - 0.9864278689975879
  train_average_precision_macro_oob:
  - 0.9668662437088207
  - 0.9291493236149724
  - 0.9299506168963506
  - 0.9277597531836618
  - 0.9465938724055416
  train_average_precision_micro:
  - 0.9749763640498212
  - 0.9756542869494772
  - 0.9727721159560032
  - 0.9785695252134714
  - 0.9726998759597988
  train_average_precision_micro_oob:
  - 0.9412904305417433
  - 0.9411622092779822
  - 0.9325499187149411
  - 0.9468320076719781
  - 0.935628991037774
  train_average_precision_samples:
  - 0.9820359281437125
  - 0.9808080808080809
  - 0.9790388548057258
  - 0.9878048780487805
  - 0.9718934911242604
  train_average_precision_samples_oob:
  - 0.9483033932135727
  - 0.9582828282828283
  - 0.9489775051124745
  - 0.9640243902439022
  - 0.941025641025641
  train_average_precision_weighted:
  - 0.9873916480892442
  - 0.9868417053376232
  - 0.9844597110259414
  - 0.9894848065395463
  - 0.9861769492941571
  train_average_precision_weighted_oob:
  - 0.9629561021737378
  - 0.9466838712118518
  - 0.9421038322773556
  - 0.9513323534898331
  - 0.95450872159823
  train_f1_macro:
  - 0.9481037924151696
  - 0.9555555555555554
  - 0.9498977505112475
  - 0.9613821138211383
  - 0.9566074950690336
  train_f1_macro_oob:
  - 0.936127744510978
  - 0.9393939393939393
  - 0.9345603271983641
  - 0.9461382113821138
  - 0.9329388560157789
  train_f1_micro:
  - 0.9481037924151696
  - 0.9555555555555556
  - 0.9498977505112475
  - 0.9613821138211383
  - 0.9566074950690335
  train_f1_micro_oob:
  - 0.936127744510978
  - 0.9393939393939394
  - 0.934560327198364
  - 0.9461382113821138
  - 0.9329388560157791
  train_f1_samples:
  - 0.9481037924151697
  - 0.9555555555555557
  - 0.9498977505112475
  - 0.9613821138211384
  - 0.9566074950690336
  train_f1_samples_oob:
  - 0.9361277445109781
  - 0.9393939393939394
  - 0.934560327198364
  - 0.9461382113821137
  - 0.9329388560157792
  train_f1_weighted:
  - 0.9390822315764511
  - 0.9482748274827482
  - 0.9418404907975461
  - 0.9553452250940418
  - 0.9477074649488444
  train_f1_weighted_oob:
  - 0.9261872295013933
  - 0.9253225322532252
  - 0.9241104294478528
  - 0.9446669093556607
  - 0.9240096773253271
  train_jaccard_macro:
  - 0.9016906396657783
  - 0.9152968503094994
  - 0.9051542538482947
  - 0.9265275828289035
  - 0.9179497543535481
  train_jaccard_macro_oob:
  - 0.8803583285439073
  - 0.8866352248944587
  - 0.8780627968161124
  - 0.898089952399809
  - 0.8751545218748752
  train_jaccard_micro:
  - 0.9013282732447818
  - 0.9148936170212766
  - 0.9045764362220059
  - 0.9256360078277887
  - 0.9168241965973535
  train_jaccard_micro_oob:
  - 0.8799249530956847
  - 0.8857142857142857
  - 0.8771593090211133
  - 0.8977820636451301
  - 0.8743068391866913
  train_jaccard_samples:
  - 0.9167379526660964
  - 0.9271284271284271
  - 0.9187846917908268
  - 0.9377177700348431
  - 0.9301211608903918
  train_jaccard_samples_oob:
  - 0.8979184488166525
  - 0.9023088023088023
  - 0.8952673093777389
  - 0.9120209059233448
  - 0.8923640462102002
  train_jaccard_weighted:
  - 0.8854393040839655
  - 0.9020603365161781
  - 0.8906098420677893
  - 0.9149128211487848
  - 0.9011367674366693
  train_jaccard_weighted_oob:
  - 0.8627504977384849
  - 0.8620821794721669
  - 0.8597977286786305
  - 0.8953405430588162
  - 0.8591603026702749
  train_label_ranking_average_precision_score:
  - 0.9820359281437125
  - 0.9808080808080807
  - 0.9790388548057258
  - 0.9878048780487805
  - 0.9718934911242602
  train_label_ranking_average_precision_score_oob:
  - 0.9483033932135727
  - 0.9582828282828283
  - 0.9489775051124743
  - 0.9640243902439022
  - 0.9410256410256408
  train_matthews_corrcoef_macro:
  - 0.6540401415574271
  - 0.6842004002260826
  - 0.655619167526733
  - 0.8276304437356351
  - 0.8031528799056438
  train_matthews_corrcoef_macro_oob:
  - 0.592611549232935
  - 0.6265403588638288
  - 0.5774960274842085
  - 0.6204772231863229
  - 0.5887548581847096
  train_matthews_corrcoef_micro:
  - 0.8333631283471378
  - 0.859363936750094
  - 0.8411072140513806
  - 0.8784987732582377
  - 0.8607932486138564
  train_matthews_corrcoef_micro_oob:
  - 0.7928679315074006
  - 0.8059863228425418
  - 0.790145093649499
  - 0.8285399004399222
  - 0.7808254092151404
  train_matthews_corrcoef_samples:
  - 0.8160888202425457
  - 0.8467034207349029
  - 0.8196852627310304
  - 0.8704959221283961
  - 0.848875825604186
  train_matthews_corrcoef_samples_oob:
  - 0.7544279424215814
  - 0.7817565857893464
  - 0.7499708985499458
  - 0.7889865046407964
  - 0.7358160221652125
  train_matthews_corrcoef_weighted:
  - 0.8026444616865979
  - 0.831137553757028
  - 0.8090846396748911
  - 0.8624318710732952
  - 0.8394743161580275
  train_matthews_corrcoef_weighted_oob:
  - 0.7562940429175751
  - 0.7693073507868127
  - 0.7483683064058835
  - 0.7959769436395726
  - 0.7277035876504611
  train_ndgc:
  - 0.9869012577836082
  - 0.9865629174650327
  - 0.9846989966471155
  - 0.9914713480819468
  - 0.97932506777207
  train_ndgc_oob:
  - 0.9628012810568378
  - 0.9702337250891646
  - 0.9638694905806416
  - 0.9756146592116262
  - 0.9570948121151236
  train_neg_coverage_error:
  - -1.2574850299401197
  - -1.2787878787878788
  - -1.2822085889570551
  - -1.2621951219512195
  - -1.2781065088757397
  train_neg_coverage_error_oob:
  - -1.3532934131736527
  - -1.3575757575757577
  - -1.3987730061349692
  - -1.3841463414634145
  - -1.378698224852071
  train_neg_hamming_loss_macro:
  - -0.051896207584830344
  - -0.044444444444444446
  - -0.050102249488752554
  - -0.03861788617886179
  - -0.04339250493096647
  train_neg_hamming_loss_macro_oob:
  - -0.06387225548902195
  - -0.06060606060606061
  - -0.065439672801636
  - -0.05386178861788618
  - -0.0670611439842209
  train_neg_hamming_loss_micro:
  - -0.05189620758483034
  - -0.044444444444444446
  - -0.050102249488752554
  - -0.03861788617886179
  - -0.04339250493096647
  train_neg_hamming_loss_micro_oob:
  - -0.06387225548902195
  - -0.06060606060606061
  - -0.065439672801636
  - -0.05386178861788618
  - -0.0670611439842209
  train_neg_hamming_loss_samples:
  - -0.05189620758483034
  - -0.04444444444444444
  - -0.050102249488752554
  - -0.038617886178861784
  - -0.04339250493096647
  train_neg_hamming_loss_samples_oob:
  - -0.06387225548902195
  - -0.06060606060606061
  - -0.06543967280163598
  - -0.053861788617886174
  - -0.0670611439842209
  train_neg_hamming_loss_weighted:
  - -0.06091776842354894
  - -0.05172517251725172
  - -0.05815950920245399
  - -0.04465477490595802
  - -0.05229253505115574
  train_neg_hamming_loss_weighted_oob:
  - -0.07381277049860674
  - -0.07467746774677467
  - -0.07588957055214723
  - -0.05533309064433928
  - -0.07599032267467282
  train_neg_label_ranking_loss:
  - -0.009131736526946108
  - -0.009545454545454546
  - -0.010889570552147239
  - -0.006402439024390244
  - -0.015236686390532545
  train_neg_label_ranking_loss_oob:
  - -0.026796407185628746
  - -0.025
  - -0.030811179277436946
  - -0.02621951219512195
  - -0.03431952662721893
  train_precision_macro:
  - 0.9481037924151696
  - 0.9555555555555554
  - 0.9498977505112475
  - 0.9613821138211383
  - 0.9566074950690336
  train_precision_macro_oob:
  - 0.936127744510978
  - 0.9393939393939393
  - 0.9345603271983641
  - 0.9461382113821138
  - 0.9329388560157789
  train_precision_micro:
  - 0.9481037924151696
  - 0.9555555555555556
  - 0.9498977505112475
  - 0.9613821138211383
  - 0.9566074950690335
  train_precision_micro_oob:
  - 0.936127744510978
  - 0.9393939393939394
  - 0.934560327198364
  - 0.9461382113821138
  - 0.9329388560157791
  train_precision_samples:
  - 0.9481037924151697
  - 0.9555555555555557
  - 0.9498977505112475
  - 0.9613821138211384
  - 0.9566074950690336
  train_precision_samples_oob:
  - 0.9361277445109781
  - 0.9393939393939394
  - 0.934560327198364
  - 0.9461382113821137
  - 0.9329388560157792
  train_precision_weighted:
  - 0.9390822315764511
  - 0.9482748274827482
  - 0.9418404907975461
  - 0.9553452250940418
  - 0.9477074649488444
  train_precision_weighted_oob:
  - 0.9261872295013933
  - 0.9253225322532252
  - 0.9241104294478528
  - 0.9446669093556607
  - 0.9240096773253271
  train_recall_macro:
  - 0.9481037924151696
  - 0.9555555555555554
  - 0.9498977505112475
  - 0.9613821138211383
  - 0.9566074950690336
  train_recall_macro_oob:
  - 0.936127744510978
  - 0.9393939393939393
  - 0.9345603271983641
  - 0.9461382113821138
  - 0.9329388560157789
  train_recall_micro:
  - 0.9481037924151696
  - 0.9555555555555556
  - 0.9498977505112475
  - 0.9613821138211383
  - 0.9566074950690335
  train_recall_micro_oob:
  - 0.936127744510978
  - 0.9393939393939394
  - 0.934560327198364
  - 0.9461382113821138
  - 0.9329388560157791
  train_recall_samples:
  - 0.9481037924151697
  - 0.9555555555555557
  - 0.9498977505112475
  - 0.9613821138211384
  - 0.9566074950690336
  train_recall_samples_oob:
  - 0.9361277445109781
  - 0.9393939393939394
  - 0.934560327198364
  - 0.9461382113821137
  - 0.9329388560157792
  train_recall_weighted:
  - 0.9390822315764511
  - 0.9482748274827482
  - 0.9418404907975461
  - 0.9553452250940418
  - 0.9477074649488444
  train_recall_weighted_oob:
  - 0.9261872295013933
  - 0.9253225322532252
  - 0.9241104294478528
  - 0.9446669093556607
  - 0.9240096773253271
  train_roc_auc_macro:
  - 0.9958065089039162
  - 0.9954137335719954
  - 0.9940206169112714
  - 0.9968445801234197
  - 0.9948553314373337
  train_roc_auc_macro_oob:
  - 0.983404742424145
  - 0.9799869425911115
  - 0.9768405739892682
  - 0.9740678650981461
  - 0.9778361948538016
  train_roc_auc_micro:
  - 0.9936726485148515
  - 0.9932181987234256
  - 0.992246143958869
  - 0.99343321705648
  - 0.9924559474710417
  train_roc_auc_micro_oob:
  - 0.9842574257425742
  - 0.9793122078705332
  - 0.9776606683804627
  - 0.9784157119892238
  - 0.9794391160945861
  train_roc_auc_samples:
  - 0.9908682634730539
  - 0.9904545454545455
  - 0.9891104294478528
  - 0.9935975609756097
  - 0.9847633136094676
  train_roc_auc_samples_oob:
  - 0.9732035928143713
  - 0.975
  - 0.969188820722563
  - 0.973780487804878
  - 0.965680473372781
  train_roc_auc_weighted:
  - 0.9930327413282444
  - 0.992371301843742
  - 0.9919194648225418
  - 0.9956543793001912
  - 0.9926586600215423
  train_roc_auc_weighted_oob:
  - 0.9790833518340959
  - 0.9769030876932847
  - 0.9730656637169542
  - 0.977477190665331
  - 0.9757053051893693
start: 2023-12-21 06:55:10.765275
wrapper: null
