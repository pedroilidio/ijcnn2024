active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AmZmZmZn5v4CZmZmZmfm/AJqZmZmZ2T9AMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:13:21.307961
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__1
  params: {}
hash: aa3530a58e3a0125544aa30755be7d15aa9687402fb91cd23b1459e470f9904f
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/aa3530a_20231221T071313349571_embedding_weak__1_VirusGO.yml
results:
  fit_time:
  - 3.79579758644104
  - 3.928495168685913
  - 3.7759363651275635
  - 3.7935855388641357
  - 3.94757080078125
  score_time:
  - 0.9877700805664062
  - 0.9095697402954102
  - 0.8690669536590576
  - 0.8566927909851074
  - 0.8763856887817383
  test_average_precision_macro:
  - 0.9515914859382341
  - 0.9436726300440076
  - 0.9156566172537383
  - 0.9514616442751317
  - 0.9615580064155006
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8826069862385478
  - 0.8594329627793964
  - 0.8690418463163766
  - 0.8599151783762494
  - 0.9064018575160513
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9007936507936507
  - 0.9058139534883721
  - 0.8875968992248061
  - 0.8829268292682928
  - 0.8907894736842106
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9523141759893599
  - 0.944431171769407
  - 0.9142854450331231
  - 0.9481484209879352
  - 0.9724949997542878
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9047619047619048
  - 0.9224806201550387
  - 0.9224806201550387
  - 0.9024390243902438
  - 0.9210526315789473
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9047619047619048
  - 0.9224806201550387
  - 0.9224806201550387
  - 0.9024390243902439
  - 0.9210526315789473
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9047619047619048
  - 0.9224806201550388
  - 0.9224806201550387
  - 0.9024390243902439
  - 0.9210526315789473
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8960622710622711
  - 0.9376744186046512
  - 0.9227906976744186
  - 0.8985365853658537
  - 0.9231578947368422
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.827527588559041
  - 0.8593903574754638
  - 0.858666451751558
  - 0.8237245164971428
  - 0.8559218559218559
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8260869565217391
  - 0.8561151079136691
  - 0.8561151079136691
  - 0.8222222222222222
  - 0.8536585365853658
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8463718820861679
  - 0.8737541528239202
  - 0.8704318936877077
  - 0.8397212543554008
  - 0.8753132832080202
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.813221457081309
  - 0.8861114119922631
  - 0.859659896840748
  - 0.8169196476087598
  - 0.8596336996336997
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9007936507936507
  - 0.905813953488372
  - 0.8875968992248061
  - 0.8829268292682926
  - 0.8907894736842104
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.34403206293142935
  - 0.30890268129851206
  - 0.3494935961116786
  - 0.26724150699321075
  - 0.39230062644866104
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6883987620995987
  - 0.7366459535132246
  - 0.7369929652600772
  - 0.6768564077378755
  - 0.7588676760890096
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5836883586682702
  - 0.6720317813046751
  - 0.637313334355525
  - 0.5844457965894727
  - 0.6692751455798336
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5952294881698013
  - 0.6121522105897053
  - 0.6477410370887314
  - 0.5451726742661499
  - 0.6770712285104237
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9289067029140319
  - 0.9359034967137632
  - 0.9158122372417176
  - 0.914322222258196
  - 0.9212517358179747
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5238095238095237
  - -1.558139534883721
  - -1.5116279069767442
  - -1.5609756097560976
  - -1.763157894736842
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09523809523809523
  - -0.07751937984496124
  - -0.07751937984496124
  - -0.09756097560975611
  - -0.07894736842105261
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09523809523809523
  - -0.07751937984496124
  - -0.07751937984496124
  - -0.0975609756097561
  - -0.07894736842105263
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09523809523809523
  - -0.07751937984496124
  - -0.07751937984496124
  - -0.0975609756097561
  - -0.07894736842105263
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10393772893772894
  - -0.06232558139534884
  - -0.07720930232558139
  - -0.10146341463414635
  - -0.07684210526315788
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05297619047619049
  - -0.06337209302325582
  - -0.0697674418604651
  - -0.06707317073170732
  - -0.07887426900584796
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9047619047619048
  - 0.9224806201550387
  - 0.9224806201550387
  - 0.9024390243902438
  - 0.9210526315789473
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9047619047619048
  - 0.9224806201550387
  - 0.9224806201550387
  - 0.9024390243902439
  - 0.9210526315789473
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9047619047619048
  - 0.9224806201550388
  - 0.9224806201550387
  - 0.9024390243902439
  - 0.9210526315789473
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8960622710622711
  - 0.9376744186046512
  - 0.9227906976744186
  - 0.8985365853658537
  - 0.9231578947368422
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9047619047619048
  - 0.9224806201550387
  - 0.9224806201550387
  - 0.9024390243902438
  - 0.9210526315789473
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9047619047619048
  - 0.9224806201550387
  - 0.9224806201550387
  - 0.9024390243902439
  - 0.9210526315789473
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9047619047619048
  - 0.9224806201550388
  - 0.9224806201550387
  - 0.9024390243902439
  - 0.9210526315789473
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8960622710622711
  - 0.9376744186046512
  - 0.9227906976744186
  - 0.8985365853658537
  - 0.9231578947368422
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9825231847124813
  - 0.9869595274007038
  - 0.9515109453344747
  - 0.9804744870921341
  - 0.9899626517273575
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9602884615384615
  - 0.9530769230769232
  - 0.9544230769230769
  - 0.9527551020408164
  - 0.9614606741573034
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9470238095238095
  - 0.9366279069767441
  - 0.9302325581395349
  - 0.9329268292682927
  - 0.9211257309941521
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9714213418160786
  - 0.9825641025641026
  - 0.9451886347886347
  - 0.9713854568854569
  - 0.9871708683473388
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9666066683436436
  - 0.9670670111692882
  - 0.9815047674227132
  - 0.9633874695350438
  - 0.966824408892437
  train_average_precision_macro_oob:
  - 0.9354192179167851
  - 0.9280860359613777
  - 0.9484049159737623
  - 0.9329408467857818
  - 0.9277154012557213
  train_average_precision_micro:
  - 0.90012043311264
  - 0.8915900289215773
  - 0.9100354648237213
  - 0.8903292945231496
  - 0.9018013028958959
  train_average_precision_micro_oob:
  - 0.8555412030209633
  - 0.8573572166601158
  - 0.8736475168274171
  - 0.852489561692088
  - 0.8666969556835029
  train_average_precision_samples:
  - 0.9196969696969697
  - 0.922459349593496
  - 0.9303861788617885
  - 0.9148594377510039
  - 0.933629191321499
  train_average_precision_samples_oob:
  - 0.8877777777777779
  - 0.9010162601626015
  - 0.898780487804878
  - 0.8866465863453815
  - 0.8980276134122287
  train_average_precision_weighted:
  - 0.9588576071032368
  - 0.9560349910694198
  - 0.9740949644913511
  - 0.9565720499253016
  - 0.9585431766460271
  train_average_precision_weighted_oob:
  - 0.934115922841535
  - 0.9251364416056411
  - 0.9500507000813834
  - 0.9326744523101397
  - 0.9301507462716033
  train_f1_macro:
  - 0.9212121212121214
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9176706827309237
  - 0.9250493096646943
  train_f1_macro_oob:
  - 0.9131313131313131
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811244
  - 0.9063116370808677
  train_f1_micro:
  - 0.9212121212121213
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9176706827309237
  - 0.9250493096646942
  train_f1_micro_oob:
  - 0.9131313131313131
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811245
  - 0.9063116370808678
  train_f1_samples:
  - 0.9212121212121213
  - 0.9166666666666665
  - 0.9156504065040652
  - 0.9176706827309236
  - 0.9250493096646941
  train_f1_samples_oob:
  - 0.9131313131313132
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811244
  - 0.9063116370808679
  train_f1_weighted:
  - 0.9238787878787877
  - 0.9165660468485873
  - 0.9175018111567255
  - 0.9236550161040201
  - 0.9294627687620832
  train_f1_weighted_oob:
  - 0.910060606060606
  - 0.9064235691861869
  - 0.907993238348225
  - 0.9128891804843136
  - 0.9010779776202472
  train_jaccard_macro:
  - 0.8549186816178507
  - 0.8471980465709135
  - 0.8454090870566843
  - 0.8498611906468585
  - 0.8613805005754158
  train_jaccard_macro_oob:
  - 0.8412713974194697
  - 0.8340659410121237
  - 0.8338820914587116
  - 0.8381880898381464
  - 0.8299763317250365
  train_jaccard_micro:
  - 0.8539325842696629
  - 0.8461538461538461
  - 0.8444236176194939
  - 0.8478664192949907
  - 0.8605504587155963
  train_jaccard_micro_oob:
  - 0.8401486988847584
  - 0.8324022346368715
  - 0.8324022346368715
  - 0.8359447004608295
  - 0.8286744815148782
  train_jaccard_samples:
  - 0.8721500721500721
  - 0.8646922183507548
  - 0.8638211382113821
  - 0.8658921399885255
  - 0.8777120315581853
  train_jaccard_samples_oob:
  - 0.8582972582972583
  - 0.8503193960511034
  - 0.852061556329849
  - 0.8547045324153758
  - 0.8481262327416174
  train_jaccard_weighted:
  - 0.8590336735326224
  - 0.8464952741685056
  - 0.8481336234309931
  - 0.8597201961213896
  - 0.8688694910816911
  train_jaccard_weighted_oob:
  - 0.835493155562352
  - 0.8297769326369434
  - 0.8323949763772789
  - 0.8412312250743877
  - 0.8205169710011192
  train_label_ranking_average_precision_score:
  - 0.9196969696969696
  - 0.9224593495934957
  - 0.9303861788617883
  - 0.9148594377510039
  - 0.933629191321499
  train_label_ranking_average_precision_score_oob:
  - 0.8877777777777777
  - 0.9010162601626015
  - 0.898780487804878
  - 0.8866465863453814
  - 0.8980276134122289
  train_matthews_corrcoef_macro:
  - 0.3737541576930134
  - 0.36187365828476253
  - 0.3625134305124698
  - 0.3435375497767877
  - 0.3886863775509395
  train_matthews_corrcoef_macro_oob:
  - 0.34960349314713285
  - 0.3179802660809489
  - 0.32818171187678497
  - 0.284001816198397
  - 0.31081891450770444
  train_matthews_corrcoef_micro:
  - 0.7414703153339391
  - 0.7294333188372063
  - 0.7256802503543792
  - 0.7298852781051298
  - 0.7522586478715134
  train_matthews_corrcoef_micro_oob:
  - 0.7128077522612805
  - 0.7006076014461692
  - 0.7005123355492997
  - 0.7047728892410372
  - 0.6842420665615755
  train_matthews_corrcoef_samples:
  - 0.6628592055505256
  - 0.6436836441070548
  - 0.6466890905632344
  - 0.6378413379609837
  - 0.6858580741248962
  train_matthews_corrcoef_samples_oob:
  - 0.6105412932351699
  - 0.593881543692626
  - 0.6101037247095759
  - 0.6016069339605781
  - 0.5933240764250693
  train_matthews_corrcoef_weighted:
  - 0.6537699324432904
  - 0.639269907632059
  - 0.635666357377906
  - 0.6361023451589535
  - 0.6682880943577351
  train_matthews_corrcoef_weighted_oob:
  - 0.6191298020974897
  - 0.5974506462597895
  - 0.6002657569201088
  - 0.5778405383958426
  - 0.5782875937414059
  train_ndgc:
  - 0.941282706127849
  - 0.9438637699670633
  - 0.9500638003285209
  - 0.9388748835199465
  - 0.9534013036196065
  train_ndgc_oob:
  - 0.9186769351200262
  - 0.9280012495945875
  - 0.927970190768711
  - 0.9185250196684936
  - 0.9271528501801701
  train_neg_coverage_error:
  - -1.4303030303030304
  - -1.4878048780487805
  - -1.4573170731707317
  - -1.4879518072289157
  - -1.3964497041420119
  train_neg_coverage_error_oob:
  - -1.593939393939394
  - -1.5670731707317074
  - -1.579268292682927
  - -1.5963855421686748
  - -1.5502958579881656
  train_neg_hamming_loss_macro:
  - -0.07878787878787878
  - -0.08333333333333333
  - -0.08434959349593496
  - -0.08232931726907632
  - -0.07495069033530573
  train_neg_hamming_loss_macro_oob:
  - -0.08686868686868687
  - -0.09146341463414635
  - -0.09146341463414635
  - -0.0893574297188755
  - -0.09368836291913214
  train_neg_hamming_loss_micro:
  - -0.07878787878787878
  - -0.08333333333333333
  - -0.08434959349593496
  - -0.0823293172690763
  - -0.07495069033530571
  train_neg_hamming_loss_micro_oob:
  - -0.08686868686868687
  - -0.09146341463414634
  - -0.09146341463414634
  - -0.0893574297188755
  - -0.09368836291913216
  train_neg_hamming_loss_samples:
  - -0.07878787878787878
  - -0.08333333333333333
  - -0.08434959349593495
  - -0.0823293172690763
  - -0.07495069033530573
  train_neg_hamming_loss_samples_oob:
  - -0.08686868686868686
  - -0.09146341463414634
  - -0.09146341463414634
  - -0.08935742971887549
  - -0.09368836291913214
  train_neg_hamming_loss_weighted:
  - -0.07612121212121212
  - -0.08343395315141271
  - -0.08249818884327458
  - -0.07634498389597995
  - -0.07053723123791669
  train_neg_hamming_loss_weighted_oob:
  - -0.08993939393939393
  - -0.0935764308138131
  - -0.09200676165177493
  - -0.08711081951568651
  - -0.09892202237975277
  train_neg_label_ranking_loss:
  - -0.041818181818181824
  - -0.0470189701897019
  - -0.041226287262872634
  - -0.04901271753681393
  - -0.034467455621301775
  train_neg_label_ranking_loss_oob:
  - -0.07112794612794612
  - -0.06226287262872629
  - -0.062110433604336046
  - -0.06895917001338689
  - -0.0628698224852071
  train_precision_macro:
  - 0.9212121212121214
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9176706827309237
  - 0.9250493096646943
  train_precision_macro_oob:
  - 0.9131313131313131
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811244
  - 0.9063116370808677
  train_precision_micro:
  - 0.9212121212121213
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9176706827309237
  - 0.9250493096646942
  train_precision_micro_oob:
  - 0.9131313131313131
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811245
  - 0.9063116370808678
  train_precision_samples:
  - 0.9212121212121213
  - 0.9166666666666665
  - 0.9156504065040652
  - 0.9176706827309236
  - 0.9250493096646941
  train_precision_samples_oob:
  - 0.9131313131313132
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811244
  - 0.9063116370808679
  train_precision_weighted:
  - 0.9238787878787877
  - 0.9165660468485873
  - 0.9175018111567255
  - 0.9236550161040201
  - 0.9294627687620832
  train_precision_weighted_oob:
  - 0.910060606060606
  - 0.9064235691861869
  - 0.907993238348225
  - 0.9128891804843136
  - 0.9010779776202472
  train_recall_macro:
  - 0.9212121212121214
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9176706827309237
  - 0.9250493096646943
  train_recall_macro_oob:
  - 0.9131313131313131
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811244
  - 0.9063116370808677
  train_recall_micro:
  - 0.9212121212121213
  - 0.9166666666666666
  - 0.915650406504065
  - 0.9176706827309237
  - 0.9250493096646942
  train_recall_micro_oob:
  - 0.9131313131313131
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811245
  - 0.9063116370808678
  train_recall_samples:
  - 0.9212121212121213
  - 0.9166666666666665
  - 0.9156504065040652
  - 0.9176706827309236
  - 0.9250493096646941
  train_recall_samples_oob:
  - 0.9131313131313132
  - 0.9085365853658537
  - 0.9085365853658537
  - 0.9106425702811244
  - 0.9063116370808679
  train_recall_weighted:
  - 0.9238787878787877
  - 0.9165660468485873
  - 0.9175018111567255
  - 0.9236550161040201
  - 0.9294627687620832
  train_recall_weighted_oob:
  - 0.910060606060606
  - 0.9064235691861869
  - 0.907993238348225
  - 0.9128891804843136
  - 0.9010779776202472
  train_roc_auc_macro:
  - 0.9867578911815179
  - 0.9864094365484307
  - 0.9923361824003671
  - 0.9877793682786535
  - 0.9883916721552636
  train_roc_auc_macro_oob:
  - 0.9668413261614078
  - 0.9697090555298166
  - 0.9830445456861766
  - 0.9762767361491481
  - 0.97364595388503
  train_roc_auc_micro:
  - 0.969889240506329
  - 0.966179002810767
  - 0.9713479020536325
  - 0.9650129685512632
  - 0.9700623079549334
  train_roc_auc_micro_oob:
  - 0.9479873417721519
  - 0.9511281051378795
  - 0.9545149527740497
  - 0.9477454672419383
  - 0.9527813002975174
  train_roc_auc_samples:
  - 0.9581818181818184
  - 0.9529810298102981
  - 0.9587737127371273
  - 0.950987282463186
  - 0.9655325443786983
  train_roc_auc_samples_oob:
  - 0.9288720538720538
  - 0.9377371273712737
  - 0.9378895663956638
  - 0.9310408299866133
  - 0.9371301775147929
  train_roc_auc_weighted:
  - 0.9781293523683314
  - 0.9772640377638471
  - 0.9868689350544783
  - 0.9803210525638895
  - 0.9813546399888857
  train_roc_auc_weighted_oob:
  - 0.9582035385251585
  - 0.9605570278538217
  - 0.9767276476667353
  - 0.9691750330608601
  - 0.967139700395379
start: 2023-12-21 07:13:13.349571
wrapper: null
