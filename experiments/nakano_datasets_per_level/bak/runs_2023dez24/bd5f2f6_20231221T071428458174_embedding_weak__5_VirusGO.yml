active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0DAzMzMzMwEwAAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:15:19.706661
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__5
  params: {}
hash: bd5f2f6b2e26adb1094dbd3edcf0f102f6d0ab8c2f414143c5307b8c6dec4a94
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bd5f2f6_20231221T071428458174_embedding_weak__5_VirusGO.yml
results:
  fit_time:
  - 43.141249656677246
  - 43.68960690498352
  - 41.923211097717285
  - 42.721773862838745
  - 42.361276149749756
  score_time:
  - 2.3785488605499268
  - 2.438053607940674
  - 2.275986671447754
  - 2.465318441390991
  - 2.1576249599456787
  test_average_precision_macro:
  - 0.9675119230698815
  - 0.977315834488936
  - 0.902057032137586
  - 0.9414575464634654
  - 0.9232564063583003
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9546601377311525
  - 0.8766676839955461
  - 0.8969567325704991
  - 0.8937626180858123
  - 0.8840394471745693
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9474358974358975
  - 0.9166666666666665
  - 0.9234126984126984
  - 0.9390243902439024
  - 0.9500000000000001
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.980702614379085
  - 0.9545743361032015
  - 0.9121351210708795
  - 0.9423233947854692
  - 0.926542339147056
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9401709401709403
  - 0.9507575757575757
  - 0.9285714285714285
  - 0.9268292682926829
  - 0.9227642276422764
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9401709401709402
  - 0.9507575757575758
  - 0.9285714285714286
  - 0.926829268292683
  - 0.9227642276422764
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9401709401709403
  - 0.9507575757575758
  - 0.9285714285714286
  - 0.926829268292683
  - 0.9227642276422765
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9461538461538461
  - 0.9532085561497324
  - 0.9214285714285714
  - 0.9321951219512195
  - 0.9033955045432807
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8880689031142803
  - 0.9074468085106383
  - 0.8701183467313021
  - 0.8642784433482108
  - 0.857997228775793
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8870967741935484
  - 0.9061371841155235
  - 0.8666666666666667
  - 0.8636363636363636
  - 0.8566037735849057
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9029304029304029
  - 0.9172077922077921
  - 0.8843537414965987
  - 0.8797909407665505
  - 0.875725900116144
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8983950247143667
  - 0.9117044453715293
  - 0.8574786767922323
  - 0.8734794456189805
  - 0.8248595112688373
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9474358974358973
  - 0.9166666666666667
  - 0.9234126984126984
  - 0.9390243902439024
  - 0.9500000000000001
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5308183255844771
  - 0.5364476007950046
  - 0.6162558233220689
  - 0.4059767443675442
  - 0.5804359290367983
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8164027139823514
  - 0.8367095374390237
  - 0.7653899543227739
  - 0.7629466408460582
  - 0.7539926580322385
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7452541298478809
  - 0.7991426740947358
  - 0.7143922232687518
  - 0.7173726258577653
  - 0.712854529844748
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7578890939824424
  - 0.7895409204530641
  - 0.7104416403528983
  - 0.678895962151365
  - 0.7065251396073857
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9666136295574521
  - 0.9411154408757588
  - 0.9423664017250202
  - 0.9568836790002622
  - 0.9642223925331126
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5384615384615385
  - -1.4090909090909092
  - -1.4523809523809523
  - -1.3902439024390243
  - -1.3902439024390243
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05982905982905982
  - -0.04924242424242423
  - -0.07142857142857142
  - -0.07317073170731707
  - -0.07723577235772358
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05982905982905983
  - -0.04924242424242424
  - -0.07142857142857142
  - -0.07317073170731707
  - -0.07723577235772358
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.059829059829059825
  - -0.04924242424242424
  - -0.07142857142857141
  - -0.07317073170731707
  - -0.07723577235772357
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05384615384615384
  - -0.04679144385026738
  - -0.07857142857142857
  - -0.06780487804878049
  - -0.09660449545671929
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.037820512820512825
  - -0.04318181818181818
  - -0.05238095238095238
  - -0.03048780487804878
  - -0.026151761517615182
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9401709401709403
  - 0.9507575757575757
  - 0.9285714285714285
  - 0.9268292682926829
  - 0.9227642276422764
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9401709401709402
  - 0.9507575757575758
  - 0.9285714285714286
  - 0.926829268292683
  - 0.9227642276422764
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9401709401709403
  - 0.9507575757575758
  - 0.9285714285714286
  - 0.926829268292683
  - 0.9227642276422765
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9461538461538461
  - 0.9532085561497324
  - 0.9214285714285714
  - 0.9321951219512195
  - 0.9033955045432807
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9401709401709403
  - 0.9507575757575757
  - 0.9285714285714285
  - 0.9268292682926829
  - 0.9227642276422764
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9401709401709402
  - 0.9507575757575758
  - 0.9285714285714286
  - 0.926829268292683
  - 0.9227642276422764
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9401709401709403
  - 0.9507575757575758
  - 0.9285714285714286
  - 0.926829268292683
  - 0.9227642276422765
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9461538461538461
  - 0.9532085561497324
  - 0.9214285714285714
  - 0.9321951219512195
  - 0.9033955045432807
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9883879787092703
  - 0.9894768448690017
  - 0.9581182472989195
  - 0.9834393216746157
  - 0.9686770438688598
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9790217391304348
  - 0.9750529319709105
  - 0.9632673267326732
  - 0.9711224489795919
  - 0.9665158371040724
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9621794871794871
  - 0.9568181818181817
  - 0.9476190476190476
  - 0.9695121951219512
  - 0.9738482384823848
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9921158243929983
  - 0.9789117926372828
  - 0.9511428571428572
  - 0.9767567567567569
  - 0.9615617809991213
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.948671873159688
  - 0.9603670927614801
  - 0.9811234470773019
  - 0.9623413345524717
  - 0.9715032688649949
  train_average_precision_macro_oob:
  - 0.9124744010255003
  - 0.9188491247771801
  - 0.9383076019020066
  - 0.9269130997957595
  - 0.9405877031093941
  train_average_precision_micro:
  - 0.8911029175506037
  - 0.9065554980750912
  - 0.9218051095229348
  - 0.9188866226379129
  - 0.9304227084063199
  train_average_precision_micro_oob:
  - 0.8571287662008612
  - 0.8782124004124789
  - 0.8884704278948462
  - 0.8975227025065144
  - 0.9077067023787915
  train_average_precision_samples:
  - 0.9484126984126983
  - 0.950920245398773
  - 0.9590909090909091
  - 0.9538152610441768
  - 0.9548192771084337
  train_average_precision_samples_oob:
  - 0.9313492063492061
  - 0.9193592365371507
  - 0.9261616161616162
  - 0.9353413654618473
  - 0.9308232931726906
  train_average_precision_weighted:
  - 0.9280562476383069
  - 0.9421288661737155
  - 0.9679501791463416
  - 0.9517366997112802
  - 0.9632494021653376
  train_average_precision_weighted_oob:
  - 0.9027363791769885
  - 0.9176075146437892
  - 0.9440697985476049
  - 0.9308457210349698
  - 0.9470581797298658
  train_f1_macro:
  - 0.939484126984127
  - 0.9304703476482618
  - 0.9484848484848486
  - 0.9487951807228915
  - 0.9397590361445783
  train_f1_macro_oob:
  - 0.9265873015873017
  - 0.9151329243353783
  - 0.9272727272727272
  - 0.9367469879518073
  - 0.9257028112449799
  train_f1_micro:
  - 0.939484126984127
  - 0.9304703476482618
  - 0.9484848484848485
  - 0.9487951807228916
  - 0.9397590361445783
  train_f1_micro_oob:
  - 0.9265873015873016
  - 0.9151329243353783
  - 0.9272727272727272
  - 0.9367469879518072
  - 0.9257028112449799
  train_f1_samples:
  - 0.9394841269841269
  - 0.9304703476482619
  - 0.9484848484848485
  - 0.9487951807228916
  - 0.9397590361445783
  train_f1_samples_oob:
  - 0.9265873015873017
  - 0.9151329243353784
  - 0.9272727272727272
  - 0.9367469879518072
  - 0.9257028112449799
  train_f1_weighted:
  - 0.9371758604431872
  - 0.9317522815370999
  - 0.9416141614161416
  - 0.9455445544554455
  - 0.9405382724929569
  train_f1_weighted_oob:
  - 0.9246817538896747
  - 0.9183835424106462
  - 0.9286828682868287
  - 0.9319157819396398
  - 0.9287897860097105
  train_jaccard_macro:
  - 0.886695763645502
  - 0.8704244461319607
  - 0.9030583003261068
  - 0.9027610646425764
  - 0.8867708022811772
  train_jaccard_macro_oob:
  - 0.8639253643483372
  - 0.8447516801122523
  - 0.8649063566152787
  - 0.8813409188117415
  - 0.8626054884168401
  train_jaccard_micro:
  - 0.8858746492048644
  - 0.869980879541109
  - 0.9020172910662824
  - 0.9025787965616046
  - 0.8863636363636364
  train_jaccard_micro_oob:
  - 0.8632162661737524
  - 0.8435438265786993
  - 0.864406779661017
  - 0.8810198300283286
  - 0.8616822429906542
  train_jaccard_samples:
  - 0.9003684807256236
  - 0.8872334209757523
  - 0.9174603174603176
  - 0.9163798049340218
  - 0.9018932874354562
  train_jaccard_samples_oob:
  - 0.8806689342403629
  - 0.8625474729769209
  - 0.881962481962482
  - 0.8981640849110727
  - 0.8785140562248995
  train_jaccard_weighted:
  - 0.8822103011851841
  - 0.8724131902273687
  - 0.889944264059291
  - 0.8968715986220822
  - 0.8879785900344818
  train_jaccard_weighted_oob:
  - 0.8602008334759637
  - 0.8498966659400068
  - 0.8670905390614938
  - 0.8726686717411
  - 0.8676776738273171
  train_label_ranking_average_precision_score:
  - 0.9484126984126985
  - 0.9509202453987728
  - 0.9590909090909091
  - 0.9538152610441766
  - 0.9548192771084336
  train_label_ranking_average_precision_score_oob:
  - 0.9313492063492064
  - 0.9193592365371507
  - 0.9261616161616162
  - 0.9353413654618473
  - 0.9308232931726909
  train_matthews_corrcoef_macro:
  - 0.5169095147929345
  - 0.4871588581246124
  - 0.7650410100162298
  - 0.6406336121034509
  - 0.5641902214796753
  train_matthews_corrcoef_macro_oob:
  - 0.40439245182087674
  - 0.35301408041283394
  - 0.458079316120742
  - 0.5841200562460219
  - 0.3949555567254763
  train_matthews_corrcoef_micro:
  - 0.8040606391944147
  - 0.7776366599447706
  - 0.8375268688668244
  - 0.8371902431220882
  - 0.8054451462311053
  train_matthews_corrcoef_micro_oob:
  - 0.7591562348825731
  - 0.7244867356262786
  - 0.765461404049651
  - 0.796679398836218
  - 0.7570708170527731
  train_matthews_corrcoef_samples:
  - 0.7694700921745616
  - 0.7259885612196986
  - 0.8317734730893468
  - 0.8169636000418409
  - 0.7625242692627973
  train_matthews_corrcoef_samples_oob:
  - 0.7041305938195934
  - 0.6438956849615135
  - 0.7089558302768173
  - 0.758854865739723
  - 0.6835108489855873
  train_matthews_corrcoef_weighted:
  - 0.7451362278566166
  - 0.7180512851149231
  - 0.816678872220605
  - 0.8103341786128693
  - 0.7694096099255685
  train_matthews_corrcoef_weighted_oob:
  - 0.6736655555191993
  - 0.6320297427523485
  - 0.7017044818607387
  - 0.7632117380139025
  - 0.6735286891994954
  train_ndgc:
  - 0.9625144212013795
  - 0.9649080051103389
  - 0.9707976187631794
  - 0.9665094171969207
  - 0.9675850026860168
  train_ndgc_oob:
  - 0.9514145579194283
  - 0.9429596383834818
  - 0.9484879495414068
  - 0.9539404217725376
  - 0.9511133728959889
  train_neg_coverage_error:
  - -1.3273809523809523
  - -1.361963190184049
  - -1.3272727272727274
  - -1.3313253012048192
  - -1.3253012048192772
  train_neg_coverage_error_oob:
  - -1.4642857142857142
  - -1.5153374233128833
  - -1.4848484848484849
  - -1.4397590361445782
  - -1.4457831325301205
  train_neg_hamming_loss_macro:
  - -0.060515873015873016
  - -0.06952965235173823
  - -0.051515151515151514
  - -0.05120481927710843
  - -0.06024096385542168
  train_neg_hamming_loss_macro_oob:
  - -0.07341269841269842
  - -0.08486707566462166
  - -0.07272727272727274
  - -0.06325301204819277
  - -0.07429718875502007
  train_neg_hamming_loss_micro:
  - -0.060515873015873016
  - -0.06952965235173825
  - -0.051515151515151514
  - -0.05120481927710843
  - -0.060240963855421686
  train_neg_hamming_loss_micro_oob:
  - -0.07341269841269842
  - -0.08486707566462168
  - -0.07272727272727272
  - -0.06325301204819277
  - -0.07429718875502007
  train_neg_hamming_loss_samples:
  - -0.06051587301587301
  - -0.06952965235173823
  - -0.051515151515151514
  - -0.05120481927710843
  - -0.060240963855421686
  train_neg_hamming_loss_samples_oob:
  - -0.0734126984126984
  - -0.08486707566462166
  - -0.07272727272727272
  - -0.06325301204819277
  - -0.07429718875502007
  train_neg_hamming_loss_weighted:
  - -0.06282413955681283
  - -0.06824771846290022
  - -0.05838583858385838
  - -0.054455445544554455
  - -0.0594617275070431
  train_neg_hamming_loss_weighted_oob:
  - -0.07531824611032532
  - -0.08161645758935385
  - -0.0713171317131713
  - -0.06808421806036025
  - -0.07121021399028951
  train_neg_label_ranking_loss:
  - -0.023875661375661376
  - -0.02368779822767553
  - -0.019090909090909092
  - -0.02175368139223561
  - -0.02108433734939759
  train_neg_label_ranking_loss_oob:
  - -0.04581679894179894
  - -0.05074982958418541
  - -0.044158249158249153
  - -0.0392904953145917
  - -0.04096385542168675
  train_precision_macro:
  - 0.939484126984127
  - 0.9304703476482618
  - 0.9484848484848486
  - 0.9487951807228915
  - 0.9397590361445783
  train_precision_macro_oob:
  - 0.9265873015873017
  - 0.9151329243353783
  - 0.9272727272727272
  - 0.9367469879518073
  - 0.9257028112449799
  train_precision_micro:
  - 0.939484126984127
  - 0.9304703476482618
  - 0.9484848484848485
  - 0.9487951807228916
  - 0.9397590361445783
  train_precision_micro_oob:
  - 0.9265873015873016
  - 0.9151329243353783
  - 0.9272727272727272
  - 0.9367469879518072
  - 0.9257028112449799
  train_precision_samples:
  - 0.9394841269841269
  - 0.9304703476482619
  - 0.9484848484848485
  - 0.9487951807228916
  - 0.9397590361445783
  train_precision_samples_oob:
  - 0.9265873015873017
  - 0.9151329243353784
  - 0.9272727272727272
  - 0.9367469879518072
  - 0.9257028112449799
  train_precision_weighted:
  - 0.9371758604431872
  - 0.9317522815370999
  - 0.9416141614161416
  - 0.9455445544554455
  - 0.9405382724929569
  train_precision_weighted_oob:
  - 0.9246817538896747
  - 0.9183835424106462
  - 0.9286828682868287
  - 0.9319157819396398
  - 0.9287897860097105
  train_recall_macro:
  - 0.939484126984127
  - 0.9304703476482618
  - 0.9484848484848486
  - 0.9487951807228915
  - 0.9397590361445783
  train_recall_macro_oob:
  - 0.9265873015873017
  - 0.9151329243353783
  - 0.9272727272727272
  - 0.9367469879518073
  - 0.9257028112449799
  train_recall_micro:
  - 0.939484126984127
  - 0.9304703476482618
  - 0.9484848484848485
  - 0.9487951807228916
  - 0.9397590361445783
  train_recall_micro_oob:
  - 0.9265873015873016
  - 0.9151329243353783
  - 0.9272727272727272
  - 0.9367469879518072
  - 0.9257028112449799
  train_recall_samples:
  - 0.9394841269841269
  - 0.9304703476482619
  - 0.9484848484848485
  - 0.9487951807228916
  - 0.9397590361445783
  train_recall_samples_oob:
  - 0.9265873015873017
  - 0.9151329243353784
  - 0.9272727272727272
  - 0.9367469879518072
  - 0.9257028112449799
  train_recall_weighted:
  - 0.9371758604431872
  - 0.9317522815370999
  - 0.9416141614161416
  - 0.9455445544554455
  - 0.9405382724929569
  train_recall_weighted_oob:
  - 0.9246817538896747
  - 0.9183835424106462
  - 0.9286828682868287
  - 0.9319157819396398
  - 0.9287897860097105
  train_roc_auc_macro:
  - 0.9837218472816164
  - 0.9867099945044776
  - 0.9916450158074096
  - 0.9874335333347545
  - 0.9899209036020177
  train_roc_auc_macro_oob:
  - 0.9664276627345437
  - 0.9704894689820929
  - 0.9820785649814937
  - 0.9696743329744466
  - 0.9751324229050377
  train_roc_auc_micro:
  - 0.9780882244551998
  - 0.9774838804689552
  - 0.9822554907775041
  - 0.9815416365314114
  - 0.9832848336931693
  train_roc_auc_micro_oob:
  - 0.9622202294671155
  - 0.9617293199382753
  - 0.965761170025632
  - 0.9681459959597974
  - 0.9694045495791483
  train_roc_auc_samples:
  - 0.9761243386243386
  - 0.9763122017723245
  - 0.9809090909090911
  - 0.9782463186077646
  - 0.9789156626506024
  train_roc_auc_samples_oob:
  - 0.9541832010582011
  - 0.9492501704158145
  - 0.9558417508417509
  - 0.9607095046854084
  - 0.9590361445783132
  train_roc_auc_weighted:
  - 0.9709739485449884
  - 0.9770753717693048
  - 0.9840149653733277
  - 0.9794132675407828
  - 0.9837442454938119
  train_roc_auc_weighted_oob:
  - 0.9568147004561428
  - 0.9659215970046601
  - 0.977498971321106
  - 0.967803289321738
  - 0.974352303056863
start: 2023-12-21 07:14:28.458174
wrapper: null
