active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMDAmZmZmZkVQMCZmZmZmRFAgMzMzMzMDMCAzMzMzMwMwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 16:39:42.666740
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__4
  params: {}
hash: a892351ea550a656c3d58ca7f41359c42dbfc41aa5877704ce494bb103de22d3
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a892351_20231222T163046701910_embedding_weak__4_scene.yml
results:
  fit_time:
  - 353.54266452789307
  - 460.62280774116516
  - 417.13268089294434
  - 441.76880049705505
  - 464.497270822525
  score_time:
  - 9.533960819244385
  - 11.33502745628357
  - 9.604627847671509
  - 9.312805891036987
  - 11.243611097335815
  test_average_precision_macro:
  - 0.8294489388412626
  - 0.84143593942342
  - 0.8502978477571476
  - 0.8363757286323522
  - 0.8246270086276319
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8359186550104424
  - 0.846123392710806
  - 0.8563950624318546
  - 0.8430967929272475
  - 0.8386929061457981
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8681473829201101
  - 0.871358543417367
  - 0.8807826694619147
  - 0.8720962199312715
  - 0.8792439862542955
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8179296122481495
  - 0.8277735925659541
  - 0.8401303206690259
  - 0.8248314528052247
  - 0.8145283205741654
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9001377410468319
  - 0.8995098039215685
  - 0.9053109713487072
  - 0.9010309278350516
  - 0.8962199312714777
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.900137741046832
  - 0.8995098039215687
  - 0.9053109713487072
  - 0.9010309278350516
  - 0.8962199312714777
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.900137741046832
  - 0.8995098039215688
  - 0.9053109713487073
  - 0.9010309278350516
  - 0.8962199312714778
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8946639969367243
  - 0.893656685975361
  - 0.9001117019984944
  - 0.8962678814033405
  - 0.8908888269713012
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8217941707386882
  - 0.8213953919290703
  - 0.8305337170422978
  - 0.8232456146172793
  - 0.8158575713427956
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8184095178459612
  - 0.8173719376391982
  - 0.8270028726460261
  - 0.8198874296435272
  - 0.8119551681195517
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8343663911845729
  - 0.833533413365346
  - 0.8440650893481081
  - 0.8354933726067746
  - 0.829160530191458
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8130435751875588
  - 0.8120523161265393
  - 0.8220544771982794
  - 0.8156423092588423
  - 0.8073911392208836
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8681473829201101
  - 0.8713585434173668
  - 0.8807826694619144
  - 0.8720962199312715
  - 0.8792439862542956
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6240156433264463
  - 0.6232541896105711
  - 0.6518611523226638
  - 0.6218758042159103
  - 0.6014625340966903
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6220917699938231
  - 0.6235437482551971
  - 0.6495435519575392
  - 0.6235090240586909
  - 0.6036431292340059
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49018651723558254
  - 0.4947773565225648
  - 0.5365469242655276
  - 0.49412187760963605
  - 0.48436966703616247
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6054681069842377
  - 0.6038360269943933
  - 0.6355783494023236
  - 0.6063167536388292
  - 0.5826126419596915
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9031558797928241
  - 0.9051294756466903
  - 0.9120474664887506
  - 0.9057835892789793
  - 0.9111027082605088
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4483471074380165
  - -1.453781512605042
  - -1.429769392033543
  - -1.420618556701031
  - -1.3958762886597937
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09986225895316804
  - -0.10049019607843136
  - -0.0946890286512928
  - -0.09896907216494844
  - -0.10378006872852234
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09986225895316804
  - -0.10049019607843138
  - -0.0946890286512928
  - -0.09896907216494845
  - -0.10378006872852234
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09986225895316804
  - -0.10049019607843136
  - -0.09468902865129279
  - -0.09896907216494845
  - -0.10378006872852233
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1053360030632758
  - -0.10634331402463898
  - -0.09988829800150555
  - -0.10373211859665948
  - -0.1091111730286988
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07288223140495868
  - -0.07274159663865547
  - -0.06755765199161425
  - -0.06927835051546391
  - -0.06417525773195876
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9001377410468319
  - 0.8995098039215685
  - 0.9053109713487072
  - 0.9010309278350516
  - 0.8962199312714777
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.900137741046832
  - 0.8995098039215687
  - 0.9053109713487072
  - 0.9010309278350516
  - 0.8962199312714777
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.900137741046832
  - 0.8995098039215688
  - 0.9053109713487073
  - 0.9010309278350516
  - 0.8962199312714778
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8946639969367243
  - 0.893656685975361
  - 0.9001117019984944
  - 0.8962678814033405
  - 0.8908888269713012
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9001377410468319
  - 0.8995098039215685
  - 0.9053109713487072
  - 0.9010309278350516
  - 0.8962199312714777
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.900137741046832
  - 0.8995098039215687
  - 0.9053109713487072
  - 0.9010309278350516
  - 0.8962199312714777
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.900137741046832
  - 0.8995098039215688
  - 0.9053109713487073
  - 0.9010309278350516
  - 0.8962199312714778
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8946639969367243
  - 0.893656685975361
  - 0.9001117019984944
  - 0.8962678814033405
  - 0.8908888269713012
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.941995564365064
  - 0.9393825760345171
  - 0.9462787465101332
  - 0.9435399003161687
  - 0.9454741160382789
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9484072145430066
  - 0.948378213608822
  - 0.9535164125607811
  - 0.9509315115955264
  - 0.9533144587492415
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9271177685950414
  - 0.9272584033613446
  - 0.9324423480083857
  - 0.9307216494845361
  - 0.9358247422680412
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9373191311059564
  - 0.9323594911638411
  - 0.9412160435752794
  - 0.9378927446303024
  - 0.940969245091318
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.994596215413898
  - 0.9944979662328587
  - 0.9950671292845428
  - 0.9939226927479511
  - 0.99329501143569
  train_average_precision_macro_oob:
  - 0.8586599872588404
  - 0.8585902753901994
  - 0.8587176538564991
  - 0.8559491087325831
  - 0.8657602545785953
  train_average_precision_micro:
  - 0.9943087036067213
  - 0.9938244795427361
  - 0.9944426595831637
  - 0.9934977808977165
  - 0.9927312928204217
  train_average_precision_micro_oob:
  - 0.8646543786805672
  - 0.8646673036293229
  - 0.8649756011346235
  - 0.8618844055990416
  - 0.8690141390621233
  train_average_precision_samples:
  - 0.9884728722482233
  - 0.9874848955636113
  - 0.9886873920552678
  - 0.9875563648976761
  - 0.9882500867152272
  train_average_precision_samples_oob:
  - 0.8840136938810886
  - 0.8825047471085794
  - 0.8851727115716752
  - 0.8813172043010752
  - 0.8837582379465835
  train_average_precision_weighted:
  - 0.9945288228782334
  - 0.9944067880078494
  - 0.9950380833180874
  - 0.9938519798235844
  - 0.9931612042159387
  train_average_precision_weighted_oob:
  - 0.8497772415267797
  - 0.8507162060308291
  - 0.8496602465911419
  - 0.8467203665921593
  - 0.8571591753064138
  train_f1_macro:
  - 0.9551048708615011
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039194
  - 0.9549947970863685
  train_f1_macro_oob:
  - 0.8979025827699774
  - 0.8982392542723976
  - 0.8946459412780657
  - 0.8982830385015609
  - 0.9012313562261532
  train_f1_micro:
  - 0.9551048708615011
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039195
  - 0.9549947970863684
  train_f1_micro_oob:
  - 0.8979025827699775
  - 0.8982392542723977
  - 0.8946459412780656
  - 0.8982830385015609
  - 0.9012313562261534
  train_f1_samples:
  - 0.9551048708615012
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039196
  - 0.9549947970863684
  train_f1_samples_oob:
  - 0.8979025827699776
  - 0.8982392542723977
  - 0.8946459412780657
  - 0.898283038501561
  - 0.9012313562261535
  train_f1_weighted:
  - 0.9529513256001938
  - 0.9542463793133643
  - 0.9541462057348263
  - 0.9540436119335576
  - 0.953101283888789
  train_f1_weighted_oob:
  - 0.8925685329299964
  - 0.893334033828934
  - 0.889300906673084
  - 0.8925297828456241
  - 0.8962042643251289
  train_jaccard_macro:
  - 0.9146865742557364
  - 0.9161830930249857
  - 0.916119671285041
  - 0.9155811882438517
  - 0.9143653312151635
  train_jaccard_macro_oob:
  - 0.8184178529522378
  - 0.8184387923464459
  - 0.8131393880864147
  - 0.8193618550834382
  - 0.8233872946083055
  train_jaccard_micro:
  - 0.9140676841406769
  - 0.9156746031746031
  - 0.9156327543424317
  - 0.915137424229843
  - 0.913866069205875
  train_jaccard_micro_oob:
  - 0.8147216105693614
  - 0.8152761457109283
  - 0.809375
  - 0.8153482880755608
  - 0.8202193986267856
  train_jaccard_samples:
  - 0.9245474580887998
  - 0.9258341347932233
  - 0.9258203799654576
  - 0.9255487835092414
  - 0.9242108914325354
  train_jaccard_samples_oob:
  - 0.8292969814030655
  - 0.8299672017952701
  - 0.8235627929928447
  - 0.8300133789207669
  - 0.8350304742084137
  train_jaccard_weighted:
  - 0.9108076605813945
  - 0.9130304962058459
  - 0.9128276754486578
  - 0.9125852771957665
  - 0.9109337631456129
  train_jaccard_weighted_oob:
  - 0.8099340808859027
  - 0.8105869364861469
  - 0.8046595802046888
  - 0.8102275566406255
  - 0.8153107533273807
  train_label_ranking_average_precision_score:
  - 0.988472872248223
  - 0.9874848955636111
  - 0.9886873920552677
  - 0.9875563648976757
  - 0.9882500867152268
  train_label_ranking_average_precision_score_oob:
  - 0.8840136938810886
  - 0.882504747108579
  - 0.8851727115716754
  - 0.8813172043010749
  - 0.8837582379465833
  train_matthews_corrcoef_macro:
  - 0.8466161352686622
  - 0.8483781807096286
  - 0.8484568407416987
  - 0.8476127304912583
  - 0.8456359594452266
  train_matthews_corrcoef_macro_oob:
  - 0.6128987257767499
  - 0.6156901803179925
  - 0.5947380035996331
  - 0.6150916988051074
  - 0.6310088258561445
  train_matthews_corrcoef_micro:
  - 0.842863945483346
  - 0.8456808980697399
  - 0.845473327317662
  - 0.8451146968623477
  - 0.8425023571015884
  train_matthews_corrcoef_micro_oob:
  - 0.6153418261274634
  - 0.6157907545385892
  - 0.5998298939909981
  - 0.6176064674689018
  - 0.6300909751605509
  train_matthews_corrcoef_samples:
  - 0.7807617109292844
  - 0.7825328041856188
  - 0.7831189265183836
  - 0.784418305781745
  - 0.7785038705746865
  train_matthews_corrcoef_samples_oob:
  - 0.465214236182158
  - 0.4656290183601518
  - 0.4414479510453474
  - 0.46888807131729476
  - 0.48451643881980855
  train_matthews_corrcoef_weighted:
  - 0.8411201794471892
  - 0.8441631902220669
  - 0.8439973434450677
  - 0.8437437679370845
  - 0.8409901092869538
  train_matthews_corrcoef_weighted_oob:
  - 0.5952414905270156
  - 0.5999798974912731
  - 0.5766587430086194
  - 0.5954245669083166
  - 0.6151306337122032
  train_ndgc:
  - 0.9916690136570848
  - 0.9908328886225968
  - 0.9917852747145751
  - 0.9910012951982707
  - 0.9914424683572322
  train_ndgc_oob:
  - 0.9142517845513289
  - 0.9132844658821703
  - 0.9152710649658117
  - 0.9126673792017578
  - 0.9143446723669446
  train_neg_coverage_error:
  - -1.1045241809672386
  - -1.1015018125323666
  - -1.0979274611398964
  - -1.1082206035379814
  - -1.1040582726326742
  train_neg_coverage_error_oob:
  - -1.4123764950598023
  - -1.418953909891248
  - -1.4031088082901555
  - -1.4365244536940687
  - -1.4162330905306972
  train_neg_hamming_loss_macro:
  - -0.04489512913849888
  - -0.04401864319005697
  - -0.04404145077720207
  - -0.04431148109608047
  - -0.04500520291363163
  train_neg_hamming_loss_macro_oob:
  - -0.10209741723002252
  - -0.10176074572760228
  - -0.10535405872193437
  - -0.10171696149843913
  - -0.09876864377384668
  train_neg_hamming_loss_micro:
  - -0.04489512913849887
  - -0.044018643190056966
  - -0.04404145077720207
  - -0.04431148109608047
  - -0.04500520291363164
  train_neg_hamming_loss_micro_oob:
  - -0.10209741723002254
  - -0.10176074572760228
  - -0.10535405872193437
  - -0.10171696149843913
  - -0.09876864377384668
  train_neg_hamming_loss_samples:
  - -0.044895129138498864
  - -0.044018643190056966
  - -0.04404145077720207
  - -0.04431148109608047
  - -0.04500520291363164
  train_neg_hamming_loss_samples_oob:
  - -0.10209741723002252
  - -0.10176074572760228
  - -0.10535405872193436
  - -0.10171696149843913
  - -0.09876864377384668
  train_neg_hamming_loss_weighted:
  - -0.04704867439980618
  - -0.0457536206866358
  - -0.04585379426517368
  - -0.04595638806644239
  - -0.04689871611121096
  train_neg_hamming_loss_weighted_oob:
  - -0.10743146707000356
  - -0.10666596617106604
  - -0.11069909332691617
  - -0.10747021715437591
  - -0.10379573567487099
  train_neg_label_ranking_loss:
  - -0.005564222568902755
  - -0.00576126359399275
  - -0.00516839378238342
  - -0.006009365244536941
  - -0.005502081165452654
  train_neg_label_ranking_loss_oob:
  - -0.06606864274570982
  - -0.06755567063697565
  - -0.0647538860103627
  - -0.06944588969823103
  - -0.06618106139438085
  train_precision_macro:
  - 0.9551048708615011
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039194
  - 0.9549947970863685
  train_precision_macro_oob:
  - 0.8979025827699774
  - 0.8982392542723976
  - 0.8946459412780657
  - 0.8982830385015609
  - 0.9012313562261532
  train_precision_micro:
  - 0.9551048708615011
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039195
  - 0.9549947970863684
  train_precision_micro_oob:
  - 0.8979025827699775
  - 0.8982392542723977
  - 0.8946459412780656
  - 0.8982830385015609
  - 0.9012313562261534
  train_precision_samples:
  - 0.9551048708615012
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039196
  - 0.9549947970863684
  train_precision_samples_oob:
  - 0.8979025827699776
  - 0.8982392542723977
  - 0.8946459412780657
  - 0.898283038501561
  - 0.9012313562261535
  train_precision_weighted:
  - 0.9529513256001938
  - 0.9542463793133643
  - 0.9541462057348263
  - 0.9540436119335576
  - 0.953101283888789
  train_precision_weighted_oob:
  - 0.8925685329299964
  - 0.893334033828934
  - 0.889300906673084
  - 0.8925297828456241
  - 0.8962042643251289
  train_recall_macro:
  - 0.9551048708615011
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039194
  - 0.9549947970863685
  train_recall_macro_oob:
  - 0.8979025827699774
  - 0.8982392542723976
  - 0.8946459412780657
  - 0.8982830385015609
  - 0.9012313562261532
  train_recall_micro:
  - 0.9551048708615011
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039195
  - 0.9549947970863684
  train_recall_micro_oob:
  - 0.8979025827699775
  - 0.8982392542723977
  - 0.8946459412780656
  - 0.8982830385015609
  - 0.9012313562261534
  train_recall_samples:
  - 0.9551048708615012
  - 0.955981356809943
  - 0.9559585492227979
  - 0.9556885189039196
  - 0.9549947970863684
  train_recall_samples_oob:
  - 0.8979025827699776
  - 0.8982392542723977
  - 0.8946459412780657
  - 0.898283038501561
  - 0.9012313562261535
  train_recall_weighted:
  - 0.9529513256001938
  - 0.9542463793133643
  - 0.9541462057348263
  - 0.9540436119335576
  - 0.953101283888789
  train_recall_weighted_oob:
  - 0.8925685329299964
  - 0.893334033828934
  - 0.889300906673084
  - 0.8925297828456241
  - 0.8962042643251289
  train_roc_auc_macro:
  - 0.9986354151191509
  - 0.998643091410754
  - 0.9987651974003429
  - 0.9985149306665657
  - 0.998427784515381
  train_roc_auc_macro_oob:
  - 0.9500855548582358
  - 0.9519085382609173
  - 0.9515147697527669
  - 0.9497288099810702
  - 0.9525887151676858
  train_roc_auc_micro:
  - 0.9986531084092061
  - 0.9985644315295064
  - 0.9986919333414398
  - 0.9984850819607407
  - 0.9984533193485741
  train_roc_auc_micro_oob:
  - 0.9565206486513437
  - 0.9566241346889958
  - 0.9573567523086454
  - 0.9550021765726215
  - 0.9576201987767935
  train_roc_auc_samples:
  - 0.9944357774310973
  - 0.9942387364060072
  - 0.9948316062176167
  - 0.9939906347554631
  - 0.9944979188345473
  train_roc_auc_samples_oob:
  - 0.9339313572542901
  - 0.9324443293630245
  - 0.9352461139896373
  - 0.930554110301769
  - 0.9338189386056192
  train_roc_auc_weighted:
  - 0.9985905048436036
  - 0.9985908682844343
  - 0.998747464363988
  - 0.9984724244972591
  - 0.9983633011459302
  train_roc_auc_weighted_oob:
  - 0.9458312539581392
  - 0.9483322946189775
  - 0.947478492912911
  - 0.9457137595134371
  - 0.9486052265065554
start: 2023-12-22 16:30:46.701910
wrapper: null
