active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMBAMzMzMzMDQIBmZmZmZvY/gJmZmZmZ+b8AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:06:38.645105
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__3
  params: {}
hash: 2bd7d25da64f631fef4db6584d3868024bfeb15792125802f4ca8d63d50e3972
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2bd7d25_20231221T100624528473_embedding_proba__3_VirusPseAAC.yml
results:
  fit_time:
  - 6.432820796966553
  - 6.500555753707886
  - 6.56467604637146
  - 6.430891036987305
  - 6.676299095153809
  score_time:
  - 2.416564702987671
  - 2.481071710586548
  - 2.3945271968841553
  - 2.4455063343048096
  - 2.339433431625366
  test_average_precision_macro:
  - 0.37999283385740035
  - 0.3457100681356706
  - 0.4687439549043882
  - 0.32461421823115716
  - 0.44128287416647766
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4122055229046236
  - 0.4856134981313086
  - 0.48853859197180016
  - 0.40074959626532936
  - 0.3804063367770373
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6852272727272727
  - 0.7256410256410256
  - 0.673125
  - 0.6751291989664083
  - 0.6292682926829268
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.40092211886661533
  - 0.49724893747790705
  - 0.48727153092877107
  - 0.40633897264465507
  - 0.4248448703924511
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7992424242424242
  - 0.7991452991452993
  - 0.7833333333333333
  - 0.8023255813953488
  - 0.7560975609756097
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7992424242424242
  - 0.7991452991452992
  - 0.7833333333333333
  - 0.8023255813953488
  - 0.7560975609756098
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7992424242424245
  - 0.7991452991452992
  - 0.7833333333333333
  - 0.8023255813953487
  - 0.7560975609756099
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6913636363636363
  - 0.6792255363683934
  - 0.6658653846153846
  - 0.6780665754673961
  - 0.6
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6906516697375538
  - 0.6912673244068591
  - 0.6718553314297996
  - 0.6982753451622948
  - 0.6526295826806288
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6656151419558359
  - 0.6654804270462633
  - 0.6438356164383562
  - 0.6699029126213593
  - 0.6078431372549019
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6856060606060607
  - 0.6874236874236875
  - 0.6630952380952382
  - 0.6843853820598007
  - 0.6248548199767713
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5481978934631356
  - 0.5322410147991543
  - 0.5215068619323938
  - 0.5335875728382491
  - 0.46788598262307074
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6852272727272726
  - 0.7256410256410256
  - 0.673125
  - 0.6751291989664082
  - 0.6292682926829268
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.02660116403680764
  - 0.04615996213174504
  - 0.03487030167202857
  - 0.08394683378949669
  - -0.04541052739908269
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.20685911463928705
  - 0.2660620469693683
  - 0.19583399409849728
  - 0.23178198658028878
  - 0.1052456378579252
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.16511161509243982
  - 0.22086139390045814
  - 0.14952847075210474
  - 0.16225664473568982
  - 0.0860932226374318
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0534464545733968
  - 0.09608808443751009
  - 0.07351305350550132
  - 0.1009512001173079
  - -0.09263747589412868
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.765861285422854
  - 0.7981953939795522
  - 0.7603046554189179
  - 0.7581851688850726
  - 0.7254070638029445
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.090909090909091
  - -2.3076923076923075
  - -2.4
  - -2.2325581395348837
  - -2.4878048780487805
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20075757575757577
  - -0.2008547008547009
  - -0.21666666666666667
  - -0.19767441860465115
  - -0.24390243902439027
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20075757575757575
  - -0.20085470085470086
  - -0.21666666666666667
  - -0.19767441860465115
  - -0.24390243902439024
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2007575757575757
  - -0.20085470085470084
  - -0.21666666666666665
  - -0.19767441860465115
  - -0.24390243902439024
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.30863636363636365
  - -0.3207744636316065
  - -0.33413461538461536
  - -0.32193342453260376
  - -0.4
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19374999999999998
  - -0.20092592592592595
  - -0.21736111111111112
  - -0.2156330749354005
  - -0.24878048780487802
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7992424242424242
  - 0.7991452991452993
  - 0.7833333333333333
  - 0.8023255813953488
  - 0.7560975609756097
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7992424242424242
  - 0.7991452991452992
  - 0.7833333333333333
  - 0.8023255813953488
  - 0.7560975609756098
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7992424242424245
  - 0.7991452991452992
  - 0.7833333333333333
  - 0.8023255813953487
  - 0.7560975609756099
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6913636363636363
  - 0.6792255363683934
  - 0.6658653846153846
  - 0.6780665754673961
  - 0.6
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7992424242424242
  - 0.7991452991452993
  - 0.7833333333333333
  - 0.8023255813953488
  - 0.7560975609756097
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7992424242424242
  - 0.7991452991452992
  - 0.7833333333333333
  - 0.8023255813953488
  - 0.7560975609756098
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7992424242424245
  - 0.7991452991452992
  - 0.7833333333333333
  - 0.8023255813953487
  - 0.7560975609756099
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6913636363636363
  - 0.6792255363683934
  - 0.6658653846153846
  - 0.6780665754673961
  - 0.6
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6304855888801967
  - 0.4985347355316396
  - 0.6451084111729892
  - 0.5528272163566281
  - 0.5686438539379716
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7792523364485981
  - 0.7926089354660782
  - 0.786620294599018
  - 0.7708629345457989
  - 0.7450000000000001
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8062499999999999
  - 0.7990740740740742
  - 0.7826388888888889
  - 0.7843669250645994
  - 0.751219512195122
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6066109681109682
  - 0.6138509539154007
  - 0.597068088915915
  - 0.5708676291029233
  - 0.5196885456885457
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9857749955623055
  - 0.9550117507705903
  - 0.9508949115768323
  - 0.9665822145283429
  - 0.9663909936904364
  train_average_precision_macro_oob:
  - 0.836357743492714
  - 0.7701225688136196
  - 0.7560069589434281
  - 0.7803181412348191
  - 0.7736791384621288
  train_average_precision_micro:
  - 0.9905898507207188
  - 0.9893883861040921
  - 0.9889270213038864
  - 0.9908838113123097
  - 0.992190914580381
  train_average_precision_micro_oob:
  - 0.898279091454096
  - 0.9049935379492554
  - 0.9138392243446631
  - 0.9192441535678927
  - 0.907500027937244
  train_average_precision_samples:
  - 0.992842535787321
  - 0.978174603174603
  - 0.9800399201596806
  - 0.9898373983739837
  - 0.9899598393574296
  train_average_precision_samples_oob:
  - 0.9042944785276074
  - 0.8988095238095238
  - 0.9146706586826348
  - 0.921239837398374
  - 0.9123493975903614
  train_average_precision_weighted:
  - 0.9973330572004953
  - 0.9879069106702985
  - 0.9879158721681941
  - 0.9915461941500227
  - 0.9911880254805491
  train_average_precision_weighted_oob:
  - 0.9337575631776093
  - 0.9047224945830034
  - 0.9113652981277095
  - 0.9111801714024877
  - 0.9171241309234529
  train_f1_macro:
  - 0.9519427402862984
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577235
  - 0.9528112449799196
  train_f1_macro_oob:
  - 0.9243353783231084
  - 0.9295634920634921
  - 0.9341317365269463
  - 0.9339430894308943
  - 0.9236947791164658
  train_f1_micro:
  - 0.9519427402862985
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577236
  - 0.9528112449799196
  train_f1_micro_oob:
  - 0.9243353783231084
  - 0.9295634920634921
  - 0.9341317365269461
  - 0.9339430894308943
  - 0.9236947791164659
  train_f1_samples:
  - 0.9519427402862987
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577237
  - 0.9528112449799198
  train_f1_samples_oob:
  - 0.9243353783231085
  - 0.929563492063492
  - 0.9341317365269461
  - 0.9339430894308944
  - 0.9236947791164658
  train_f1_weighted:
  - 0.9723622669015367
  - 0.9751935256861366
  - 0.9747904191616766
  - 0.9696942118674918
  - 0.9714600978170107
  train_f1_weighted_oob:
  - 0.9380428840430056
  - 0.9446106028618344
  - 0.950508982035928
  - 0.9527969906564737
  - 0.9383872122151974
  train_jaccard_macro:
  - 0.9106681200075815
  - 0.9169560480901254
  - 0.9146460435485065
  - 0.9110354387127559
  - 0.9120809377847321
  train_jaccard_macro_oob:
  - 0.8618415490760182
  - 0.8699183153127333
  - 0.8786141377184121
  - 0.8780793572362295
  - 0.8614563377733221
  train_jaccard_micro:
  - 0.9082926829268293
  - 0.9145299145299145
  - 0.9122137404580153
  - 0.9088263821532493
  - 0.909875359539789
  train_jaccard_micro_oob:
  - 0.8593155893536122
  - 0.8683966635773864
  - 0.8764044943820225
  - 0.8760724499523356
  - 0.8582089552238806
  train_jaccard_samples:
  - 0.9202453987730062
  - 0.9251700680272108
  - 0.92329626461363
  - 0.9205865272938444
  - 0.9228341939185314
  train_jaccard_samples_oob:
  - 0.8758399065147531
  - 0.885062358276644
  - 0.8916452808668379
  - 0.8914053426248547
  - 0.8746414228341939
  train_jaccard_weighted:
  - 0.9480445389839401
  - 0.9534324511850928
  - 0.9527579115541707
  - 0.9427134252659906
  - 0.9461097504561277
  train_jaccard_weighted_oob:
  - 0.8856135980842393
  - 0.896636435058617
  - 0.9077646982198202
  - 0.9118703709175723
  - 0.8870667551246282
  train_label_ranking_average_precision_score:
  - 0.992842535787321
  - 0.978174603174603
  - 0.9800399201596806
  - 0.9898373983739837
  - 0.9899598393574296
  train_label_ranking_average_precision_score_oob:
  - 0.9042944785276072
  - 0.8988095238095238
  - 0.9146706586826348
  - 0.9212398373983739
  - 0.9123493975903616
  train_matthews_corrcoef_macro:
  - 0.47016204555925006
  - 0.5609297742781866
  - 0.47241155115307376
  - 0.5358657939529817
  - 0.47292057853116026
  train_matthews_corrcoef_macro_oob:
  - 0.35891347723524686
  - 0.3958617212571672
  - 0.3962055637461357
  - 0.40579828137438767
  - 0.33844452908819855
  train_matthews_corrcoef_micro:
  - 0.8505916349640316
  - 0.858556739800224
  - 0.8533645950445048
  - 0.849800974934807
  - 0.8511427764207598
  train_matthews_corrcoef_micro_oob:
  - 0.7599727759515849
  - 0.7715142428785607
  - 0.7868006733215029
  - 0.7890137674799474
  - 0.7545016827999129
  train_matthews_corrcoef_samples:
  - 0.7854522864811178
  - 0.7951578986863274
  - 0.7868215962244888
  - 0.7867784274483127
  - 0.7971181681640701
  train_matthews_corrcoef_samples_oob:
  - 0.6526472950976825
  - 0.6764401594506072
  - 0.6976458553998166
  - 0.6957735234863986
  - 0.6465157585255159
  train_matthews_corrcoef_weighted:
  - 0.7809199190443913
  - 0.7996220538167123
  - 0.7832128435083792
  - 0.7856064336178824
  - 0.780030361608267
  train_matthews_corrcoef_weighted_oob:
  - 0.6688744110602116
  - 0.6969068614308065
  - 0.706032717248638
  - 0.7134716229016304
  - 0.6526899020765454
  train_ndgc:
  - 0.9946682806967574
  - 0.9838427292942187
  - 0.9851719701454241
  - 0.9924503628484324
  - 0.9925413223321862
  train_ndgc_oob:
  - 0.9314356608399659
  - 0.9261128503188939
  - 0.9374441300069358
  - 0.9424246608812772
  - 0.9365808909841378
  train_neg_coverage_error:
  - -1.2576687116564418
  - -1.255952380952381
  - -1.2455089820359282
  - -1.25
  - -1.2409638554216869
  train_neg_coverage_error_oob:
  - -1.6441717791411044
  - -1.5476190476190477
  - -1.5149700598802396
  - -1.5
  - -1.5240963855421688
  train_neg_hamming_loss_macro:
  - -0.04805725971370143
  - -0.044642857142857144
  - -0.04590818363273453
  - -0.047764227642276426
  - -0.047188755020080325
  train_neg_hamming_loss_macro_oob:
  - -0.07566462167689161
  - -0.07043650793650792
  - -0.0658682634730539
  - -0.06605691056910569
  - -0.07630522088353414
  train_neg_hamming_loss_micro:
  - -0.04805725971370143
  - -0.044642857142857144
  - -0.04590818363273453
  - -0.047764227642276426
  - -0.04718875502008032
  train_neg_hamming_loss_micro_oob:
  - -0.07566462167689161
  - -0.07043650793650794
  - -0.0658682634730539
  - -0.06605691056910569
  - -0.07630522088353414
  train_neg_hamming_loss_samples:
  - -0.04805725971370143
  - -0.04464285714285714
  - -0.04590818363273453
  - -0.04776422764227642
  - -0.04718875502008031
  train_neg_hamming_loss_samples_oob:
  - -0.07566462167689161
  - -0.07043650793650794
  - -0.0658682634730539
  - -0.06605691056910569
  - -0.07630522088353414
  train_neg_hamming_loss_weighted:
  - -0.027637733098463225
  - -0.024806474313863472
  - -0.02520958083832335
  - -0.030305788132508192
  - -0.028539902182989383
  train_neg_hamming_loss_weighted_oob:
  - -0.06195711595699448
  - -0.05538939713816561
  - -0.049491017964071855
  - -0.047203009343526274
  - -0.06161278778480257
  train_neg_label_ranking_loss:
  - -0.003680981595092025
  - -0.009523809523809523
  - -0.009580838323353293
  - -0.004878048780487805
  - -0.004819277108433735
  train_neg_label_ranking_loss_oob:
  - -0.07314246762099523
  - -0.06479828042328042
  - -0.06001330671989354
  - -0.05167682926829268
  - -0.056994645247657294
  train_precision_macro:
  - 0.9519427402862984
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577235
  - 0.9528112449799196
  train_precision_macro_oob:
  - 0.9243353783231084
  - 0.9295634920634921
  - 0.9341317365269463
  - 0.9339430894308943
  - 0.9236947791164658
  train_precision_micro:
  - 0.9519427402862985
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577236
  - 0.9528112449799196
  train_precision_micro_oob:
  - 0.9243353783231084
  - 0.9295634920634921
  - 0.9341317365269461
  - 0.9339430894308943
  - 0.9236947791164659
  train_precision_samples:
  - 0.9519427402862987
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577237
  - 0.9528112449799198
  train_precision_samples_oob:
  - 0.9243353783231085
  - 0.929563492063492
  - 0.9341317365269461
  - 0.9339430894308944
  - 0.9236947791164658
  train_precision_weighted:
  - 0.9723622669015367
  - 0.9751935256861366
  - 0.9747904191616766
  - 0.9696942118674918
  - 0.9714600978170107
  train_precision_weighted_oob:
  - 0.9380428840430056
  - 0.9446106028618344
  - 0.950508982035928
  - 0.9527969906564737
  - 0.9383872122151974
  train_recall_macro:
  - 0.9519427402862984
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577235
  - 0.9528112449799196
  train_recall_macro_oob:
  - 0.9243353783231084
  - 0.9295634920634921
  - 0.9341317365269463
  - 0.9339430894308943
  - 0.9236947791164658
  train_recall_micro:
  - 0.9519427402862985
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577236
  - 0.9528112449799196
  train_recall_micro_oob:
  - 0.9243353783231084
  - 0.9295634920634921
  - 0.9341317365269461
  - 0.9339430894308943
  - 0.9236947791164659
  train_recall_samples:
  - 0.9519427402862987
  - 0.9553571428571429
  - 0.9540918163672655
  - 0.9522357723577237
  - 0.9528112449799198
  train_recall_samples_oob:
  - 0.9243353783231085
  - 0.929563492063492
  - 0.9341317365269461
  - 0.9339430894308944
  - 0.9236947791164658
  train_recall_weighted:
  - 0.9723622669015367
  - 0.9751935256861366
  - 0.9747904191616766
  - 0.9696942118674918
  - 0.9714600978170107
  train_recall_weighted_oob:
  - 0.9380428840430056
  - 0.9446106028618344
  - 0.950508982035928
  - 0.9527969906564737
  - 0.9383872122151974
  train_roc_auc_macro:
  - 0.999417614850164
  - 0.9973031454773104
  - 0.9973151998287199
  - 0.9981622061521414
  - 0.9977132022871289
  train_roc_auc_macro_oob:
  - 0.9669218891867889
  - 0.9714983874474603
  - 0.9612310717589461
  - 0.950907158121835
  - 0.9644509047841309
  train_roc_auc_micro:
  - 0.9970590486883739
  - 0.9971728421503534
  - 0.996577306733167
  - 0.9972042723801173
  - 0.9973002967803077
  train_roc_auc_micro_oob:
  - 0.9512350719608044
  - 0.9594468072086406
  - 0.9604488778054863
  - 0.9637190802056131
  - 0.9590680100755667
  train_roc_auc_samples:
  - 0.996319018404908
  - 0.9904761904761903
  - 0.9904191616766468
  - 0.9951219512195121
  - 0.9951807228915662
  train_roc_auc_samples_oob:
  - 0.9268575323790048
  - 0.9352017195767195
  - 0.9399866932801063
  - 0.9483231707317074
  - 0.9430053547523427
  train_roc_auc_weighted:
  - 0.9998011836047836
  - 0.9990665311641093
  - 0.9991893755008604
  - 0.9992692819833366
  - 0.9990624822374323
  train_roc_auc_weighted_oob:
  - 0.9806135253649011
  - 0.9844684682729008
  - 0.983067073412551
  - 0.9793904068367877
  - 0.9809846883968973
start: 2023-12-21 10:06:24.528473
wrapper: null
