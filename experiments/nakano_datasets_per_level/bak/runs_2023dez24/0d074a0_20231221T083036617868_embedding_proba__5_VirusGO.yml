active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b/AzMzMzMwEwAAzMzMzM+O/oJmZmZmZFUAAMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:31:00.310267
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__5
  params: {}
hash: 0d074a062b80eff0b06cb67b3eccc8cd2b00ae2d27ecbac5c5bc7936dcaa584f
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0d074a0_20231221T083036617868_embedding_proba__5_VirusGO.yml
results:
  fit_time:
  - 13.355002403259277
  - 13.587472677230835
  - 13.571369171142578
  - 13.38988447189331
  - 13.534348726272583
  score_time:
  - 3.4674317836761475
  - 3.530397653579712
  - 3.2982723712921143
  - 3.3145487308502197
  - 3.476484775543213
  test_average_precision_macro:
  - 0.9077192546175432
  - 0.9282285031258098
  - 0.8327013963752871
  - 0.9301113742722739
  - 0.9091660050239999
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9097397325527457
  - 0.8615230257153288
  - 0.8598458681448016
  - 0.9246739376143206
  - 0.8909952083605238
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9476744186046512
  - 0.9450757575757575
  - 0.9285714285714286
  - 0.9791666666666666
  - 0.965079365079365
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.926657087618775
  - 0.8846526847765237
  - 0.8655652327834992
  - 0.9369398092237228
  - 0.8995591978928347
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8255813953488372
  - 0.8143939393939394
  - 0.8055555555555555
  - 0.7962962962962963
  - 0.8055555555555555
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8255813953488372
  - 0.8143939393939394
  - 0.8055555555555556
  - 0.7962962962962963
  - 0.8055555555555556
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8255813953488373
  - 0.8143939393939396
  - 0.8055555555555556
  - 0.7962962962962964
  - 0.8055555555555558
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7428443649373881
  - 0.6981818181818181
  - 0.6985714285714286
  - 0.6904761904761906
  - 0.7063492063492064
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7180382398075568
  - 0.711244687310261
  - 0.6972115829604458
  - 0.6841633225354156
  - 0.6954939267509567
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7029702970297029
  - 0.6869009584664537
  - 0.6744186046511628
  - 0.6615384615384615
  - 0.6744186046511628
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7109634551495018
  - 0.6899350649350651
  - 0.6802721088435375
  - 0.6785714285714286
  - 0.6802721088435375
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.602068031508121
  - 0.553480510018215
  - 0.5550191391207324
  - 0.5429660758564413
  - 0.5624097819570898
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9476744186046512
  - 0.9450757575757577
  - 0.9285714285714286
  - 0.9791666666666666
  - 0.965079365079365
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1193513744609146
  - 0.023618493043794556
  - 0.03156475079494043
  - 0.09566369034260606
  - 0.0451938453788867
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3323870519647563
  - 0.130592738781658
  - 0.12686850487761128
  - 0.2841868446726189
  - 0.17756523242094968
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.13714806037444252
  - 0.024202524183348905
  - 0.023809523809523808
  - 0.12867932033426877
  - 0.038867988857944666
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.24137049755887474
  - 0.051015944974596245
  - 0.06439209162167847
  - 0.19106962668213814
  - 0.0903876907577734
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9649534665618822
  - 0.959480577679616
  - 0.9485626034050806
  - 0.9852074439858103
  - 0.9769506000434728
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4883720930232558
  - -1.25
  - -1.4761904761904763
  - -1.4444444444444444
  - -1.3571428571428572
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1744186046511628
  - -0.18560606060606058
  - -0.19444444444444442
  - -0.2037037037037037
  - -0.19444444444444442
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1744186046511628
  - -0.1856060606060606
  - -0.19444444444444445
  - -0.2037037037037037
  - -0.19444444444444445
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1744186046511628
  - -0.18560606060606058
  - -0.19444444444444442
  - -0.2037037037037037
  - -0.19444444444444442
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2571556350626118
  - -0.3018181818181818
  - -0.30142857142857143
  - -0.30952380952380953
  - -0.29365079365079366
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04534883720930232
  - -0.023863636363636365
  - -0.05416666666666666
  - -0.01419753086419753
  - -0.021428571428571425
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8255813953488372
  - 0.8143939393939394
  - 0.8055555555555555
  - 0.7962962962962963
  - 0.8055555555555555
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8255813953488372
  - 0.8143939393939394
  - 0.8055555555555556
  - 0.7962962962962963
  - 0.8055555555555556
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8255813953488373
  - 0.8143939393939396
  - 0.8055555555555556
  - 0.7962962962962964
  - 0.8055555555555558
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7428443649373881
  - 0.6981818181818181
  - 0.6985714285714286
  - 0.6904761904761906
  - 0.7063492063492064
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8255813953488372
  - 0.8143939393939394
  - 0.8055555555555555
  - 0.7962962962962963
  - 0.8055555555555555
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8255813953488372
  - 0.8143939393939394
  - 0.8055555555555556
  - 0.7962962962962963
  - 0.8055555555555556
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8255813953488373
  - 0.8143939393939396
  - 0.8055555555555556
  - 0.7962962962962964
  - 0.8055555555555558
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7428443649373881
  - 0.6981818181818181
  - 0.6985714285714286
  - 0.6904761904761906
  - 0.7063492063492064
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9720679211855683
  - 0.9712788024191533
  - 0.901032326185835
  - 0.9724950410064208
  - 0.973372875465976
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.969100074682599
  - 0.9784112149532711
  - 0.9451980198019803
  - 0.9751924721984602
  - 0.9759047897766072
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9546511627906976
  - 0.9761363636363637
  - 0.9458333333333334
  - 0.9858024691358024
  - 0.9785714285714286
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9656344510190664
  - 0.9450187434397961
  - 0.9203695906432747
  - 0.971576493573836
  - 0.962638950316969
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.964728877499685
  - 0.9560332959404186
  - 0.9537650885474575
  - 0.9556634555991921
  - 0.9481458142904821
  train_average_precision_macro_oob:
  - 0.9007927046143095
  - 0.9066306311424284
  - 0.9097351938451906
  - 0.9214874216789543
  - 0.8975478728689529
  train_average_precision_micro:
  - 0.936685285688887
  - 0.9407006319636428
  - 0.9432510393604058
  - 0.953305682016754
  - 0.9463087333812704
  train_average_precision_micro_oob:
  - 0.8683949895848218
  - 0.8820399156872933
  - 0.8922228251226478
  - 0.9111639927064578
  - 0.9109897211267913
  train_average_precision_samples:
  - 0.9654471544715446
  - 0.9877300613496932
  - 0.9712121212121212
  - 0.9615009746588693
  - 0.9683838383838383
  train_average_precision_samples_oob:
  - 0.9379065040650406
  - 0.9541922290388548
  - 0.9463636363636362
  - 0.9516569200779728
  - 0.9418181818181819
  train_average_precision_weighted:
  - 0.9542788281234084
  - 0.9542018142989402
  - 0.9533935619214604
  - 0.9584561585062846
  - 0.9538474826216984
  train_average_precision_weighted_oob:
  - 0.8892889144806128
  - 0.9021127212939386
  - 0.9107940939793355
  - 0.9204107490828002
  - 0.9165809105825987
  train_f1_macro:
  - 0.8241869918699186
  - 0.8159509202453986
  - 0.8212121212121213
  - 0.8343079922027289
  - 0.8272727272727273
  train_f1_macro_oob:
  - 0.8018292682926829
  - 0.8016359918200409
  - 0.8070707070707072
  - 0.8099415204678362
  - 0.805050505050505
  train_f1_micro:
  - 0.8241869918699187
  - 0.8159509202453987
  - 0.8212121212121212
  - 0.834307992202729
  - 0.8272727272727273
  train_f1_micro_oob:
  - 0.801829268292683
  - 0.8016359918200409
  - 0.807070707070707
  - 0.8099415204678363
  - 0.805050505050505
  train_f1_samples:
  - 0.8241869918699185
  - 0.8159509202453987
  - 0.8212121212121208
  - 0.834307992202729
  - 0.8272727272727273
  train_f1_samples_oob:
  - 0.801829268292683
  - 0.8016359918200406
  - 0.8070707070707068
  - 0.8099415204678363
  - 0.8050505050505049
  train_f1_weighted:
  - 0.7366768292682927
  - 0.725505679402296
  - 0.7313231323132313
  - 0.7555094633134559
  - 0.7418664254485149
  train_f1_weighted_oob:
  - 0.6909451219512195
  - 0.696288647269635
  - 0.7024602460246023
  - 0.7057298418459942
  - 0.6964269561284487
  train_jaccard_macro:
  - 0.7170793415940805
  - 0.7066293242619275
  - 0.7136088906756163
  - 0.7293214304898942
  - 0.7208287566238377
  train_jaccard_macro_oob:
  - 0.6931498371295222
  - 0.6914405133785614
  - 0.698370249403435
  - 0.7023801442455778
  - 0.696690063129585
  train_jaccard_micro:
  - 0.7009507346585998
  - 0.689119170984456
  - 0.6966580976863753
  - 0.7157190635451505
  - 0.7054263565891473
  train_jaccard_micro_oob:
  - 0.6692111959287532
  - 0.6689419795221843
  - 0.676545300592718
  - 0.6805896805896806
  - 0.6737109044801353
  train_jaccard_samples:
  - 0.7126887340301974
  - 0.6985100788781771
  - 0.7069264069264071
  - 0.727234753550543
  - 0.7173160173160174
  train_jaccard_samples_oob:
  - 0.6772648083623695
  - 0.6770376862401403
  - 0.6848484848484849
  - 0.68796992481203
  - 0.6813852813852815
  train_jaccard_weighted:
  - 0.5946079871431406
  - 0.5821784576044379
  - 0.5884855785181314
  - 0.6170962117316546
  - 0.6006415560318941
  train_jaccard_weighted_oob:
  - 0.5456704452540895
  - 0.5511787296119085
  - 0.5573980468888703
  - 0.5620785099570368
  - 0.5513074693929434
  train_label_ranking_average_precision_score:
  - 0.9654471544715446
  - 0.9877300613496932
  - 0.9712121212121212
  - 0.9615009746588693
  - 0.9683838383838382
  train_label_ranking_average_precision_score_oob:
  - 0.9379065040650406
  - 0.9541922290388549
  - 0.9463636363636364
  - 0.9516569200779728
  - 0.9418181818181819
  train_matthews_corrcoef_macro:
  - 0.1185864398154469
  - 0.10495298295667188
  - 0.1133246026266695
  - 0.13243523498417495
  - 0.1251731625607659
  train_matthews_corrcoef_macro_oob:
  - 0.04304164608789666
  - 0.05647952082009731
  - 0.06922625874717153
  - 0.05403256453713965
  - 0.06205469158201518
  train_matthews_corrcoef_micro:
  - 0.33255918463525624
  - 0.29732920536875973
  - 0.31790237442250874
  - 0.3670576200200795
  - 0.35023978992650334
  train_matthews_corrcoef_micro_oob:
  - 0.137540009753196
  - 0.1741059292446526
  - 0.2058124979276322
  - 0.17485534548102086
  - 0.17882561302097857
  train_matthews_corrcoef_samples:
  - 0.1522989983148455
  - 0.1146754588239453
  - 0.12219562218283865
  - 0.1822355418723297
  - 0.1662253862074893
  train_matthews_corrcoef_samples_oob:
  - 0.03536585365853658
  - 0.04722310795154005
  - 0.05877191876424865
  - 0.05146198830409357
  - 0.04402976402465062
  train_matthews_corrcoef_weighted:
  - 0.24194346738600256
  - 0.21240915644126962
  - 0.23037255650767385
  - 0.2698449370306003
  - 0.25564068579795446
  train_matthews_corrcoef_weighted_oob:
  - 0.08719373454141045
  - 0.11343818232498842
  - 0.14015513965228407
  - 0.1092864120119274
  - 0.1264755267740088
  train_ndgc:
  - 0.9750284278516709
  - 0.9918524098429117
  - 0.9801991825747839
  - 0.9725256281029544
  - 0.9776313421521865
  train_ndgc_oob:
  - 0.9557795247258745
  - 0.9688272393530369
  - 0.9631106922952603
  - 0.9654209380384267
  - 0.9587795354525444
  train_neg_coverage_error:
  - -1.298780487804878
  - -1.2822085889570551
  - -1.3515151515151516
  - -1.304093567251462
  - -1.3515151515151516
  train_neg_coverage_error_oob:
  - -1.420731707317073
  - -1.4171779141104295
  - -1.4484848484848485
  - -1.3625730994152048
  - -1.4303030303030304
  train_neg_hamming_loss_macro:
  - -0.17581300813008136
  - -0.18404907975460125
  - -0.1787878787878788
  - -0.16569200779727095
  - -0.17272727272727273
  train_neg_hamming_loss_macro_oob:
  - -0.19817073170731705
  - -0.19836400817995914
  - -0.19292929292929292
  - -0.19005847953216373
  - -0.19494949494949496
  train_neg_hamming_loss_micro:
  - -0.1758130081300813
  - -0.18404907975460122
  - -0.1787878787878788
  - -0.16569200779727095
  - -0.17272727272727273
  train_neg_hamming_loss_micro_oob:
  - -0.19817073170731708
  - -0.1983640081799591
  - -0.19292929292929292
  - -0.19005847953216373
  - -0.19494949494949496
  train_neg_hamming_loss_samples:
  - -0.17581300813008127
  - -0.18404907975460122
  - -0.17878787878787877
  - -0.16569200779727095
  - -0.17272727272727273
  train_neg_hamming_loss_samples_oob:
  - -0.19817073170731708
  - -0.1983640081799591
  - -0.1929292929292929
  - -0.19005847953216373
  - -0.19494949494949493
  train_neg_hamming_loss_weighted:
  - -0.26332317073170736
  - -0.27449432059770396
  - -0.2686768676867687
  - -0.24449053668654397
  - -0.258133574551485
  train_neg_hamming_loss_weighted_oob:
  - -0.3090548780487805
  - -0.3037113527303651
  - -0.29753975397539756
  - -0.2942701581540057
  - -0.3035730438715514
  train_neg_label_ranking_loss:
  - -0.015548780487804876
  - -0.0070552147239263795
  - -0.020589225589225588
  - -0.021198830409356724
  - -0.02378787878787879
  train_neg_label_ranking_loss_oob:
  - -0.03611111111111111
  - -0.029669393319700064
  - -0.03648148148148148
  - -0.031432748538011694
  - -0.03816498316498316
  train_precision_macro:
  - 0.8241869918699186
  - 0.8159509202453986
  - 0.8212121212121213
  - 0.8343079922027289
  - 0.8272727272727273
  train_precision_macro_oob:
  - 0.8018292682926829
  - 0.8016359918200409
  - 0.8070707070707072
  - 0.8099415204678362
  - 0.805050505050505
  train_precision_micro:
  - 0.8241869918699187
  - 0.8159509202453987
  - 0.8212121212121212
  - 0.834307992202729
  - 0.8272727272727273
  train_precision_micro_oob:
  - 0.801829268292683
  - 0.8016359918200409
  - 0.807070707070707
  - 0.8099415204678363
  - 0.805050505050505
  train_precision_samples:
  - 0.8241869918699185
  - 0.8159509202453987
  - 0.8212121212121208
  - 0.834307992202729
  - 0.8272727272727273
  train_precision_samples_oob:
  - 0.801829268292683
  - 0.8016359918200406
  - 0.8070707070707068
  - 0.8099415204678363
  - 0.8050505050505049
  train_precision_weighted:
  - 0.7366768292682927
  - 0.725505679402296
  - 0.7313231323132313
  - 0.7555094633134559
  - 0.7418664254485149
  train_precision_weighted_oob:
  - 0.6909451219512195
  - 0.696288647269635
  - 0.7024602460246023
  - 0.7057298418459942
  - 0.6964269561284487
  train_recall_macro:
  - 0.8241869918699186
  - 0.8159509202453986
  - 0.8212121212121213
  - 0.8343079922027289
  - 0.8272727272727273
  train_recall_macro_oob:
  - 0.8018292682926829
  - 0.8016359918200409
  - 0.8070707070707072
  - 0.8099415204678362
  - 0.805050505050505
  train_recall_micro:
  - 0.8241869918699187
  - 0.8159509202453987
  - 0.8212121212121212
  - 0.834307992202729
  - 0.8272727272727273
  train_recall_micro_oob:
  - 0.801829268292683
  - 0.8016359918200409
  - 0.807070707070707
  - 0.8099415204678363
  - 0.805050505050505
  train_recall_samples:
  - 0.8241869918699185
  - 0.8159509202453987
  - 0.8212121212121208
  - 0.834307992202729
  - 0.8272727272727273
  train_recall_samples_oob:
  - 0.801829268292683
  - 0.8016359918200406
  - 0.8070707070707068
  - 0.8099415204678363
  - 0.8050505050505049
  train_recall_weighted:
  - 0.7366768292682927
  - 0.725505679402296
  - 0.7313231323132313
  - 0.7555094633134559
  - 0.7418664254485149
  train_recall_weighted_oob:
  - 0.6909451219512195
  - 0.696288647269635
  - 0.7024602460246023
  - 0.7057298418459942
  - 0.6964269561284487
  train_roc_auc_macro:
  - 0.9865218092484428
  - 0.9807356128689061
  - 0.9777144637862336
  - 0.9774086252670279
  - 0.9809109866213115
  train_roc_auc_macro_oob:
  - 0.9648516783837566
  - 0.9597666808794845
  - 0.9646660714875944
  - 0.9629956668676899
  - 0.9696601728381138
  train_roc_auc_micro:
  - 0.9851913265306124
  - 0.9830209502909053
  - 0.9815707141780168
  - 0.984596184809869
  - 0.9820857688742598
  train_roc_auc_micro_oob:
  - 0.9687181122448979
  - 0.9664757068490353
  - 0.9670678996833694
  - 0.9744835965978129
  - 0.972551690218111
  train_roc_auc_samples:
  - 0.984451219512195
  - 0.9929447852760735
  - 0.9794107744107745
  - 0.9788011695906432
  - 0.9762121212121212
  train_roc_auc_samples_oob:
  - 0.9638888888888889
  - 0.9703306066802999
  - 0.9635185185185186
  - 0.9685672514619883
  - 0.9618350168350168
  train_roc_auc_weighted:
  - 0.9767428145932384
  - 0.973820098663017
  - 0.9742276251837722
  - 0.9774472656869079
  - 0.9777845937818164
  train_roc_auc_weighted_oob:
  - 0.9551751190018487
  - 0.9505228492281682
  - 0.9584144727466453
  - 0.9615085955562128
  - 0.9670386937349011
start: 2023-12-21 08:30:36.617868
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
