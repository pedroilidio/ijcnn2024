active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0BAMzMzMzMDQIBmZmZmZvY/YGZmZmZmFsCAmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:57:40.075956
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__0
  params: {}
hash: 74dba9277fe2d50bb4ab0434390d4c54df76baa2c2a2803093dde07e5902df81
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/74dba92_20231221T105735734254_embedding_proba_weak__0_VirusPseAAC.yml
results:
  fit_time:
  - 1.1158173084259033
  - 1.071676254272461
  - 1.0916523933410645
  - 1.0955963134765625
  - 1.0548722743988037
  score_time:
  - 0.5780611038208008
  - 0.5954229831695557
  - 0.6057157516479492
  - 0.6684446334838867
  - 0.6351141929626465
  test_average_precision_macro:
  - 0.3472490581432702
  - 0.45659158822551243
  - 0.4609839850761328
  - 0.2841663976968702
  - 0.5127742239036991
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.43583000869884125
  - 0.4578502588328644
  - 0.505196917195383
  - 0.35438509846249355
  - 0.5352576976809474
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6780701754385965
  - 0.67008547008547
  - 0.7084722222222222
  - 0.65
  - 0.6903100775193799
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4072660778060599
  - 0.46724761723221236
  - 0.5277027550748743
  - 0.3811090868021783
  - 0.5588088860412452
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7719298245614034
  - 0.782051282051282
  - 0.7958333333333333
  - 0.8085106382978724
  - 0.810077519379845
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7719298245614035
  - 0.782051282051282
  - 0.7958333333333333
  - 0.8085106382978723
  - 0.810077519379845
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7719298245614034
  - 0.7820512820512818
  - 0.7958333333333334
  - 0.8085106382978726
  - 0.8100775193798452
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.634736842105263
  - 0.657948717948718
  - 0.6835
  - 0.687526074259491
  - 0.712266301869585
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6618233618233619
  - 0.6711147898094129
  - 0.6853893627349005
  - 0.7060752541757443
  - 0.7011295888698678
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6285714285714286
  - 0.6421052631578947
  - 0.6608996539792388
  - 0.6785714285714286
  - 0.6807817589576547
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.636591478696742
  - 0.6532356532356534
  - 0.6702380952380953
  - 0.6854103343465048
  - 0.6877076411960134
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.48779975579975576
  - 0.5137533166073076
  - 0.5387024874439063
  - 0.5439160686060917
  - 0.5691109416783751
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6780701754385965
  - 0.67008547008547
  - 0.7084722222222222
  - 0.65
  - 0.6903100775193798
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.04930519679508876
  - -0.011671905915741345
  - 0.0368434699681928
  - -0.013950329346096545
  - 0.06371569554960754
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - -0.049858106308217756
  - 0.06716760093059165
  - 0.126974741359733
  - 0.04346742370781032
  - 0.17807177997518137
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - -0.01358494121096942
  - 0.035897435897435895
  - 0.0358113883008419
  - 0.02127659574468085
  - 0.046511627906976744
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.10058260146198107
  - -0.02381068806811234
  - 0.07516067873511331
  - -0.029541873909380918
  - 0.12706673051939174
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7597404110163367
  - 0.7574370244498463
  - 0.7855207872871796
  - 0.7369335187138809
  - 0.7698791083885189
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.3421052631578947
  - -2.358974358974359
  - -2.25
  - -2.25531914893617
  - -2.2093023255813953
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.22807017543859645
  - -0.21794871794871798
  - -0.2041666666666667
  - -0.19148936170212763
  - -0.18992248062015502
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.22807017543859648
  - -0.21794871794871795
  - -0.20416666666666666
  - -0.19148936170212766
  - -0.18992248062015504
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.22807017543859648
  - -0.21794871794871795
  - -0.20416666666666666
  - -0.19148936170212763
  - -0.18992248062015502
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.36526315789473685
  - -0.34205128205128205
  - -0.3165
  - -0.312473925740509
  - -0.28773369813041494
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21842105263157896
  - -0.20769230769230773
  - -0.19520833333333334
  - -0.23404255319148937
  - -0.20406976744186042
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7719298245614034
  - 0.782051282051282
  - 0.7958333333333333
  - 0.8085106382978724
  - 0.810077519379845
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7719298245614035
  - 0.782051282051282
  - 0.7958333333333333
  - 0.8085106382978723
  - 0.810077519379845
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7719298245614034
  - 0.7820512820512818
  - 0.7958333333333334
  - 0.8085106382978726
  - 0.8100775193798452
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.634736842105263
  - 0.657948717948718
  - 0.6835
  - 0.687526074259491
  - 0.712266301869585
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7719298245614034
  - 0.782051282051282
  - 0.7958333333333333
  - 0.8085106382978724
  - 0.810077519379845
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7719298245614035
  - 0.782051282051282
  - 0.7958333333333333
  - 0.8085106382978723
  - 0.810077519379845
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7719298245614034
  - 0.7820512820512818
  - 0.7958333333333334
  - 0.8085106382978726
  - 0.8100775193798452
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.634736842105263
  - 0.657948717948718
  - 0.6835
  - 0.687526074259491
  - 0.712266301869585
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6313366599182538
  - 0.6324010412245706
  - 0.6533102880104497
  - 0.542648379466923
  - 0.7465654253154254
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7802247191011236
  - 0.7911956521739131
  - 0.7999999999999999
  - 0.7540106951871657
  - 0.8186984938903097
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7815789473684212
  - 0.7923076923076925
  - 0.8047916666666666
  - 0.7659574468085106
  - 0.7959302325581394
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.569105253260851
  - 0.6068917748917748
  - 0.656673696175648
  - 0.5314530833078673
  - 0.7370018434724317
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9083170985333671
  - 0.9351070113756356
  - 0.9689235022367156
  - 0.9678221288515406
  - 0.9169274478835719
  train_average_precision_macro_oob:
  - 0.2917591683312558
  - 0.2791799801770405
  - 0.30023309682853677
  - 0.3091809223371873
  - 0.2763065441063783
  train_average_precision_micro:
  - 0.8800301082790728
  - 0.8772262403065048
  - 0.8815685270917022
  - 0.8809309655328834
  - 0.871664277005993
  train_average_precision_micro_oob:
  - 0.4066285484465927
  - 0.4082271945642195
  - 0.3930226436947901
  - 0.41632604849154736
  - 0.40050664515818024
  train_average_precision_samples:
  - 0.8747534516765285
  - 0.8747023809523808
  - 0.8682634730538922
  - 0.8807291666666668
  - 0.875
  train_average_precision_samples_oob:
  - 0.6774490466798159
  - 0.6605489417989419
  - 0.6783433133732535
  - 0.6836805555555555
  - 0.6462737127371273
  train_average_precision_weighted:
  - 0.9667276339640758
  - 0.9785401701084272
  - 0.994086446459772
  - 0.9920941510932731
  - 0.9730673777777653
  train_average_precision_weighted_oob:
  - 0.3679338278563544
  - 0.36973817991197894
  - 0.35263470794525265
  - 0.3681555802564018
  - 0.3623762779441055
  train_f1_macro:
  - 0.913214990138067
  - 0.9166666666666669
  - 0.9221556886227544
  - 0.9218750000000001
  - 0.920731707317073
  train_f1_macro_oob:
  - 0.7978303747534516
  - 0.7966269841269842
  - 0.7894211576846307
  - 0.7864583333333334
  - 0.7896341463414633
  train_f1_micro:
  - 0.9132149901380671
  - 0.9166666666666666
  - 0.9221556886227545
  - 0.921875
  - 0.9207317073170732
  train_f1_micro_oob:
  - 0.7978303747534516
  - 0.7966269841269841
  - 0.7894211576846307
  - 0.7864583333333334
  - 0.7896341463414634
  train_f1_samples:
  - 0.9132149901380671
  - 0.9166666666666666
  - 0.9221556886227545
  - 0.921875
  - 0.9207317073170732
  train_f1_samples_oob:
  - 0.7978303747534515
  - 0.796626984126984
  - 0.7894211576846306
  - 0.7864583333333334
  - 0.7896341463414634
  train_f1_weighted:
  - 0.9179213779366102
  - 0.9243281471004243
  - 0.9359696448686785
  - 0.9404539800995025
  - 0.9337762407474821
  train_f1_weighted_oob:
  - 0.6824945808190286
  - 0.679602781706742
  - 0.6653228197071204
  - 0.665516169154229
  - 0.6655442300691664
  train_jaccard_macro:
  - 0.8424004957258457
  - 0.8489455654663106
  - 0.8589170322877276
  - 0.8586486273549655
  - 0.8560715514275885
  train_jaccard_macro_oob:
  - 0.6895143845399954
  - 0.688335688739724
  - 0.6811108738391027
  - 0.675928350702225
  - 0.6812091342946928
  train_jaccard_micro:
  - 0.8402903811252269
  - 0.8461538461538461
  - 0.8555555555555555
  - 0.855072463768116
  - 0.8531073446327684
  train_jaccard_micro_oob:
  - 0.6636587366694011
  - 0.6619950535861501
  - 0.6521022258862325
  - 0.648068669527897
  - 0.6523929471032746
  train_jaccard_samples:
  - 0.8561566638489716
  - 0.8613945578231293
  - 0.8699743370402052
  - 0.8714285714285716
  - 0.8691927990708478
  train_jaccard_samples_oob:
  - 0.672865595942519
  - 0.671201814058957
  - 0.6595380667236955
  - 0.6583333333333334
  - 0.6607142857142857
  train_jaccard_weighted:
  - 0.8501144390614648
  - 0.8618424298473393
  - 0.8828989909288767
  - 0.8911290919288517
  - 0.8783851639634644
  train_jaccard_weighted_oob:
  - 0.5381530987156178
  - 0.5343262224594003
  - 0.5203684590372675
  - 0.5201172434555201
  - 0.5206687510551568
  train_label_ranking_average_precision_score:
  - 0.8747534516765285
  - 0.8747023809523808
  - 0.8682634730538922
  - 0.8807291666666665
  - 0.875
  train_label_ranking_average_precision_score_oob:
  - 0.677449046679816
  - 0.660548941798942
  - 0.6783433133732536
  - 0.6836805555555556
  - 0.6462737127371275
  train_matthews_corrcoef_macro:
  - 0.28797093469250007
  - 0.29553540409660983
  - 0.3071269842968704
  - 0.3124560574035901
  - 0.3048660038901392
  train_matthews_corrcoef_macro_oob:
  - 0.0037053410047008426
  - 0.005021595394055415
  - -0.034069098915670684
  - -0.002027659963810303
  - -0.010977068955116555
  train_matthews_corrcoef_micro:
  - 0.7135649357218649
  - 0.7273406101067562
  - 0.7478816773496765
  - 0.7553097771403388
  - 0.7459914197189155
  train_matthews_corrcoef_micro_oob:
  - 0.08350984629012018
  - 0.08947349359474234
  - -0.013645827737413827
  - 0.08158341044364749
  - 0.034513818483167785
  train_matthews_corrcoef_samples:
  - 0.5983215923517025
  - 0.6175524085682821
  - 0.632749314442741
  - 0.6423051844420975
  - 0.627768728337008
  train_matthews_corrcoef_samples_oob:
  - 0.03687843510079098
  - 0.036100661095639
  - -0.0025895540840339877
  - 0.037382117688026184
  - 0.014832045927034609
  train_matthews_corrcoef_weighted:
  - 0.5865351027607085
  - 0.6019297293672807
  - 0.6253455754448822
  - 0.6343641420503948
  - 0.6233838011824325
  train_matthews_corrcoef_weighted_oob:
  - 0.006510496115145281
  - 0.009993472021833054
  - -0.07043977475640972
  - -0.0038743531294026727
  - -0.02310546213294843
  train_ndgc:
  - 0.9086953376390807
  - 0.90830758826018
  - 0.9037490163400904
  - 0.9138017023598533
  - 0.9079966453256563
  train_ndgc_oob:
  - 0.7607542682615442
  - 0.7472604682613151
  - 0.760192560875294
  - 0.7654547836598977
  - 0.7369708810163945
  train_neg_coverage_error:
  - -1.5798816568047338
  - -1.5952380952380953
  - -1.6287425149700598
  - -1.64375
  - -1.6219512195121952
  train_neg_coverage_error_oob:
  - -2.2662721893491122
  - -2.3333333333333335
  - -2.311377245508982
  - -2.30625
  - -2.3780487804878048
  train_neg_hamming_loss_macro:
  - -0.08678500986193294
  - -0.08333333333333333
  - -0.07784431137724551
  - -0.078125
  - -0.07926829268292683
  train_neg_hamming_loss_macro_oob:
  - -0.20216962524654833
  - -0.2033730158730159
  - -0.21057884231536927
  - -0.21354166666666666
  - -0.21036585365853658
  train_neg_hamming_loss_micro:
  - -0.08678500986193294
  - -0.08333333333333333
  - -0.07784431137724551
  - -0.078125
  - -0.07926829268292683
  train_neg_hamming_loss_micro_oob:
  - -0.20216962524654833
  - -0.20337301587301587
  - -0.21057884231536927
  - -0.21354166666666666
  - -0.21036585365853658
  train_neg_hamming_loss_samples:
  - -0.08678500986193294
  - -0.08333333333333333
  - -0.07784431137724551
  - -0.078125
  - -0.07926829268292683
  train_neg_hamming_loss_samples_oob:
  - -0.20216962524654836
  - -0.2033730158730159
  - -0.2105788423153693
  - -0.21354166666666669
  - -0.21036585365853658
  train_neg_hamming_loss_weighted:
  - -0.08207862206338977
  - -0.07567185289957568
  - -0.06403035513132152
  - -0.059546019900497515
  - -0.0662237592525179
  train_neg_hamming_loss_weighted_oob:
  - -0.3175054191809713
  - -0.32039721829325785
  - -0.33467718029287963
  - -0.3344838308457711
  - -0.3344557699308336
  train_neg_label_ranking_loss:
  - -0.07299474030243261
  - -0.07640542328042328
  - -0.08038922155688621
  - -0.07381944444444444
  - -0.07948848238482385
  train_neg_label_ranking_loss_oob:
  - -0.2107001972386588
  - -0.226984126984127
  - -0.22140718562874254
  - -0.21052083333333335
  - -0.23084349593495934
  train_precision_macro:
  - 0.913214990138067
  - 0.9166666666666669
  - 0.9221556886227544
  - 0.9218750000000001
  - 0.920731707317073
  train_precision_macro_oob:
  - 0.7978303747534516
  - 0.7966269841269842
  - 0.7894211576846307
  - 0.7864583333333334
  - 0.7896341463414633
  train_precision_micro:
  - 0.9132149901380671
  - 0.9166666666666666
  - 0.9221556886227545
  - 0.921875
  - 0.9207317073170732
  train_precision_micro_oob:
  - 0.7978303747534516
  - 0.7966269841269841
  - 0.7894211576846307
  - 0.7864583333333334
  - 0.7896341463414634
  train_precision_samples:
  - 0.9132149901380671
  - 0.9166666666666666
  - 0.9221556886227545
  - 0.921875
  - 0.9207317073170732
  train_precision_samples_oob:
  - 0.7978303747534515
  - 0.796626984126984
  - 0.7894211576846306
  - 0.7864583333333334
  - 0.7896341463414634
  train_precision_weighted:
  - 0.9179213779366102
  - 0.9243281471004243
  - 0.9359696448686785
  - 0.9404539800995025
  - 0.9337762407474821
  train_precision_weighted_oob:
  - 0.6824945808190286
  - 0.679602781706742
  - 0.6653228197071204
  - 0.665516169154229
  - 0.6655442300691664
  train_recall_macro:
  - 0.913214990138067
  - 0.9166666666666669
  - 0.9221556886227544
  - 0.9218750000000001
  - 0.920731707317073
  train_recall_macro_oob:
  - 0.7978303747534516
  - 0.7966269841269842
  - 0.7894211576846307
  - 0.7864583333333334
  - 0.7896341463414633
  train_recall_micro:
  - 0.9132149901380671
  - 0.9166666666666666
  - 0.9221556886227545
  - 0.921875
  - 0.9207317073170732
  train_recall_micro_oob:
  - 0.7978303747534516
  - 0.7966269841269841
  - 0.7894211576846307
  - 0.7864583333333334
  - 0.7896341463414634
  train_recall_samples:
  - 0.9132149901380671
  - 0.9166666666666666
  - 0.9221556886227545
  - 0.921875
  - 0.9207317073170732
  train_recall_samples_oob:
  - 0.7978303747534515
  - 0.796626984126984
  - 0.7894211576846306
  - 0.7864583333333334
  - 0.7896341463414634
  train_recall_weighted:
  - 0.9179213779366102
  - 0.9243281471004243
  - 0.9359696448686785
  - 0.9404539800995025
  - 0.9337762407474821
  train_recall_weighted_oob:
  - 0.6824945808190286
  - 0.679602781706742
  - 0.6653228197071204
  - 0.665516169154229
  - 0.6655442300691664
  train_roc_auc_macro:
  - 0.994025850473697
  - 0.99585262345679
  - 0.9991144833450697
  - 0.9981763538748832
  - 0.9953035016820618
  train_roc_auc_macro_oob:
  - 0.5878921892724486
  - 0.5792939942113228
  - 0.5811701324087646
  - 0.5855340480801795
  - 0.539704898233915
  train_roc_auc_micro:
  - 0.9519521533434132
  - 0.9498378497899418
  - 0.95052599009901
  - 0.9495473882235725
  - 0.9460043333778108
  train_roc_auc_micro_oob:
  - 0.7780690630639419
  - 0.7707478564233595
  - 0.769214108910891
  - 0.772442137140385
  - 0.7634877972843319
  train_roc_auc_samples:
  - 0.9270052596975674
  - 0.9235945767195768
  - 0.9196107784431137
  - 0.9261805555555555
  - 0.9205115176151762
  train_roc_auc_samples_oob:
  - 0.7892998027613412
  - 0.773015873015873
  - 0.7785928143712574
  - 0.7894791666666666
  - 0.7691565040650407
  train_roc_auc_weighted:
  - 0.9974615925644852
  - 0.9984873487348735
  - 0.9996967249067468
  - 0.9994634669788313
  - 0.99830793858283
  train_roc_auc_weighted_oob:
  - 0.5701782847968053
  - 0.5588760425389803
  - 0.5550951391735217
  - 0.5469811043114465
  - 0.5270384978440034
start: 2023-12-21 10:57:35.734254
wrapper: null
