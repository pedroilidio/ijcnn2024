active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AMzMzMzPzvwCamZmZmek/ADMzMzMz878AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 18:59:07.868823
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__4
  params: {}
hash: 07a601bc0b9fc2c90aaf9f4a2356b158ba2a3556972766f8c43a422e24b4547f
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/07a601b_20231221T185828436519_embedding_weak__4_GrampositivePseAAC.yml
results:
  fit_time:
  - 24.661369800567627
  - 25.937514781951904
  - 26.39054226875305
  - 25.775185585021973
  - 25.132463455200195
  score_time:
  - 3.1522631645202637
  - 3.4119198322296143
  - 3.1716554164886475
  - 3.468839406967163
  - 3.5642433166503906
  test_average_precision_macro:
  - 0.39364160084060806
  - 0.467679381975575
  - 0.4266423095659909
  - 0.38686040253566184
  - 0.3781934361546045
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4950551276316635
  - 0.5718293807789397
  - 0.53024164314248
  - 0.4950673305050063
  - 0.5042547673744066
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7443910256410255
  - 0.7134920634920634
  - 0.7346278317152102
  - 0.7126984126984128
  - 0.6993464052287581
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4799472988352743
  - 0.5684861335552993
  - 0.5356060298989578
  - 0.4819103833712875
  - 0.4930846799771711
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941749
  - 0.75
  - 0.7647058823529411
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941747
  - 0.75
  - 0.7647058823529411
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941747
  - 0.75
  - 0.7647058823529411
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6825073964497042
  - 0.7217233560090703
  - 0.7083644510828978
  - 0.6757412398921834
  - 0.6914592760180995
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6343728288957587
  - 0.6559791986307237
  - 0.6448288802472333
  - 0.6210582021136503
  - 0.6385419544994013
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6124031007751938
  - 0.640625
  - 0.6284584980237155
  - 0.6
  - 0.6190476190476191
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6397435897435897
  - 0.6698412698412697
  - 0.6634304207119737
  - 0.6330158730158728
  - 0.6444444444444442
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5263907482990291
  - 0.5698258137987909
  - 0.5536524229566395
  - 0.5182575784145621
  - 0.5340632771483835
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7443910256410254
  - 0.7134920634920635
  - 0.7346278317152103
  - 0.7126984126984126
  - 0.6993464052287582
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.10181285203652977
  - 0.15481078961994024
  - 0.13795974747615058
  - 0.08664553504818037
  - 0.11286889199775924
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2303291636761592
  - 0.31555555555555553
  - 0.3041240058383506
  - 0.22488429641401234
  - 0.2576402070359426
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.16025641025641027
  - 0.2253968253968254
  - 0.23537880520248833
  - 0.17057793907164723
  - 0.17232696342342768
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1394105793595496
  - 0.21871050848328472
  - 0.19872648161165765
  - 0.12012112247945249
  - 0.1630571928523235
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8095788775680586
  - 0.7867877289721742
  - 0.8029548382134717
  - 0.7863839964627188
  - 0.7759949919395908
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6634615384615385
  - -1.723809523809524
  - -1.7087378640776698
  - -1.7619047619047619
  - -1.803921568627451
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2403846153846154
  - -0.21904761904761905
  - -0.22815533980582522
  - -0.25
  - -0.23529411764705882
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2403846153846154
  - -0.21904761904761905
  - -0.22815533980582525
  - -0.25
  - -0.23529411764705882
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2403846153846154
  - -0.21904761904761905
  - -0.22815533980582525
  - -0.25
  - -0.23529411764705882
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3174926035502959
  - -0.2782766439909297
  - -0.29163554891710236
  - -0.32425876010781673
  - -0.3085407239819004
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22115384615384615
  - -0.24126984126984125
  - -0.23139158576051783
  - -0.25
  - -0.2630718954248366
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941749
  - 0.75
  - 0.7647058823529411
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941747
  - 0.75
  - 0.7647058823529411
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941747
  - 0.75
  - 0.7647058823529411
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6825073964497042
  - 0.7217233560090703
  - 0.7083644510828978
  - 0.6757412398921834
  - 0.6914592760180995
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941749
  - 0.75
  - 0.7647058823529411
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941747
  - 0.75
  - 0.7647058823529411
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7596153846153846
  - 0.780952380952381
  - 0.7718446601941747
  - 0.75
  - 0.7647058823529411
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6825073964497042
  - 0.7217233560090703
  - 0.7083644510828978
  - 0.6757412398921834
  - 0.6914592760180995
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7105282472197932
  - 0.7193220415309327
  - 0.6602403769962315
  - 0.6772847694633408
  - 0.615817170667917
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7781681459566075
  - 0.7990022675736962
  - 0.7814685314685313
  - 0.759734406922245
  - 0.7586348684210525
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7788461538461539
  - 0.7587301587301588
  - 0.7686084142394821
  - 0.7500000000000001
  - 0.7369281045751634
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6820025600922736
  - 0.7303035966861994
  - 0.6903937104957029
  - 0.6562181790955377
  - 0.6368459332796301
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9995596504621213
  - 0.9998741738297721
  - 0.9992104242814046
  - 0.9996081087663284
  - 0.9993145314417814
  train_average_precision_macro_oob:
  - 0.5665894186211264
  - 0.5865929333119704
  - 0.6000143026507951
  - 0.6204851806529663
  - 0.5573252782415048
  train_average_precision_micro:
  - 0.9785305552728377
  - 0.9790921708057085
  - 0.9817921047644032
  - 0.9803913230468538
  - 0.9791710930080268
  train_average_precision_micro_oob:
  - 0.6740062549246949
  - 0.7070202673873411
  - 0.6911576981359484
  - 0.7515174716308037
  - 0.6714976199234453
  train_average_precision_samples:
  - 0.9732931726907631
  - 0.977254428341385
  - 0.9765625
  - 0.9762479871175523
  - 0.9760191846522782
  train_average_precision_samples_oob:
  - 0.7748995983935743
  - 0.7747584541062802
  - 0.7758413461538461
  - 0.8103864734299517
  - 0.7695843325339728
  train_average_precision_weighted:
  - 0.9994796555784232
  - 0.9998718832822449
  - 0.9991707310369962
  - 0.9994774783551047
  - 0.9991455071711659
  train_average_precision_weighted_oob:
  - 0.7164198193733341
  - 0.7490872696442251
  - 0.7352490033087429
  - 0.7843597004034502
  - 0.7102738262880537
  train_f1_macro:
  - 0.9337349397590362
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_f1_macro_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_f1_micro:
  - 0.9337349397590361
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_f1_micro_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_f1_samples:
  - 0.9337349397590361
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_f1_samples_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_f1_weighted:
  - 0.9351237887109296
  - 0.9410408432147562
  - 0.9309424912796034
  - 0.9492985321887418
  - 0.941404394384254
  train_f1_weighted_oob:
  - 0.7390976795008195
  - 0.7530395488061392
  - 0.7444177987883239
  - 0.7617326428712102
  - 0.7537588067970444
  train_jaccard_macro:
  - 0.8791656586425434
  - 0.8877383717797822
  - 0.8758196513633058
  - 0.9028046530843339
  - 0.8900024299492905
  train_jaccard_macro_oob:
  - 0.669478824664639
  - 0.6818121569339842
  - 0.6757659272943379
  - 0.6887423932985675
  - 0.6802738302655211
  train_jaccard_micro:
  - 0.8757062146892656
  - 0.8839590443686007
  - 0.8728193584693303
  - 0.9012629161882894
  - 0.8879456706281834
  train_jaccard_micro_oob:
  - 0.656686626746507
  - 0.670196671709531
  - 0.663168415792104
  - 0.6778115501519757
  - 0.6688344172086043
  train_jaccard_samples:
  - 0.8942971887550201
  - 0.9017713365539453
  - 0.8916666666666667
  - 0.9169082125603863
  - 0.9050359712230215
  train_jaccard_samples_oob:
  - 0.673895582329317
  - 0.687600644122383
  - 0.6788461538461538
  - 0.696940418679549
  - 0.6872901678657072
  train_jaccard_weighted:
  - 0.8816363286157718
  - 0.8926980538625205
  - 0.8738007946382914
  - 0.9051888838827163
  - 0.8913523361885652
  train_jaccard_weighted_oob:
  - 0.5889913599858135
  - 0.605955296032724
  - 0.5955731419515694
  - 0.6170451239606379
  - 0.6069931479296562
  train_label_ranking_average_precision_score:
  - 0.9732931726907629
  - 0.9772544283413847
  - 0.9765624999999998
  - 0.9762479871175522
  - 0.9760191846522779
  train_label_ranking_average_precision_score_oob:
  - 0.774899598393574
  - 0.7747584541062801
  - 0.7758413461538457
  - 0.8103864734299514
  - 0.7695843325339727
  train_matthews_corrcoef_macro:
  - 0.5979866042992514
  - 0.6079912214356215
  - 0.5965900086212693
  - 0.6392568745616839
  - 0.6200039089245808
  train_matthews_corrcoef_macro_oob:
  - 0.19246966685641959
  - 0.2171064595274437
  - 0.20939833571997707
  - 0.22686578653079476
  - 0.21006479419214158
  train_matthews_corrcoef_micro:
  - 0.8230580074257766
  - 0.8357248646641919
  - 0.8182546697710272
  - 0.8615365037410798
  - 0.8412096590638546
  train_matthews_corrcoef_micro_oob:
  - 0.3621639970962144
  - 0.40569645106124885
  - 0.38495361111443754
  - 0.4245907212041759
  - 0.39593834298724057
  train_matthews_corrcoef_samples:
  - 0.7415230139941418
  - 0.7602223449458184
  - 0.7335449532172578
  - 0.7964542290037895
  - 0.7653589940968327
  train_matthews_corrcoef_samples_oob:
  - 0.20219441831933244
  - 0.2328471436575738
  - 0.20731734840350072
  - 0.2564123201410127
  - 0.23239972086935962
  train_matthews_corrcoef_weighted:
  - 0.800441621343943
  - 0.8159697291469721
  - 0.7964367111574391
  - 0.8435714853400311
  - 0.8205193214998927
  train_matthews_corrcoef_weighted_oob:
  - 0.2813568275195868
  - 0.3206564545390023
  - 0.30536922982104353
  - 0.3360773239071433
  - 0.3108390743750811
  train_ndgc:
  - 0.9799911233802527
  - 0.9829334702793766
  - 0.9824616185891505
  - 0.9822094441815459
  - 0.9820234535673588
  train_ndgc_oob:
  - 0.8327734061950618
  - 0.8326228312427275
  - 0.8332983236488917
  - 0.8589571307681501
  - 0.8287715852681118
  train_neg_coverage_error:
  - -1.1012048192771084
  - -1.0917874396135265
  - -1.0865384615384615
  - -1.0893719806763285
  - -1.0887290167865706
  train_neg_coverage_error_oob:
  - -1.5927710843373495
  - -1.5869565217391304
  - -1.5769230769230769
  - -1.5096618357487923
  - -1.5947242206235013
  train_neg_hamming_loss_macro:
  - -0.06626506024096385
  - -0.06159420289855072
  - -0.06790865384615385
  - -0.05193236714975845
  - -0.059352517985611516
  train_neg_hamming_loss_macro_oob:
  - -0.2072289156626506
  - -0.19746376811594202
  - -0.20252403846153844
  - -0.1920289855072464
  - -0.19844124700239807
  train_neg_hamming_loss_micro:
  - -0.06626506024096386
  - -0.06159420289855073
  - -0.06790865384615384
  - -0.051932367149758456
  - -0.05935251798561151
  train_neg_hamming_loss_micro_oob:
  - -0.20722891566265061
  - -0.19746376811594202
  - -0.20252403846153846
  - -0.19202898550724637
  - -0.19844124700239807
  train_neg_hamming_loss_samples:
  - -0.06626506024096386
  - -0.06159420289855073
  - -0.06790865384615384
  - -0.051932367149758456
  - -0.05935251798561151
  train_neg_hamming_loss_samples_oob:
  - -0.20722891566265061
  - -0.19746376811594202
  - -0.20252403846153846
  - -0.19202898550724637
  - -0.19844124700239807
  train_neg_hamming_loss_weighted:
  - -0.06487621128907037
  - -0.05895915678524374
  - -0.06905750872039655
  - -0.050701467811258234
  - -0.05859560561574606
  train_neg_hamming_loss_weighted_oob:
  - -0.2609023204991805
  - -0.2469604511938608
  - -0.2555822012116762
  - -0.2382673571287897
  - -0.24624119320295554
  train_neg_label_ranking_loss:
  - -0.030321285140562246
  - -0.02717391304347826
  - -0.026241987179487176
  - -0.02717391304347826
  - -0.027777777777777776
  train_neg_label_ranking_loss_oob:
  - -0.19357429718875502
  - -0.19223027375201285
  - -0.19010416666666666
  - -0.1668679549114332
  - -0.1960431654676259
  train_precision_macro:
  - 0.9337349397590362
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_precision_macro_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_precision_micro:
  - 0.9337349397590361
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_precision_micro_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_precision_samples:
  - 0.9337349397590361
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_precision_samples_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_precision_weighted:
  - 0.9351237887109296
  - 0.9410408432147562
  - 0.9309424912796034
  - 0.9492985321887418
  - 0.941404394384254
  train_precision_weighted_oob:
  - 0.7390976795008195
  - 0.7530395488061392
  - 0.7444177987883239
  - 0.7617326428712102
  - 0.7537588067970444
  train_recall_macro:
  - 0.9337349397590362
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_recall_macro_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_recall_micro:
  - 0.9337349397590361
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_recall_micro_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_recall_samples:
  - 0.9337349397590361
  - 0.9384057971014492
  - 0.9320913461538461
  - 0.9480676328502415
  - 0.9406474820143885
  train_recall_samples_oob:
  - 0.7927710843373494
  - 0.802536231884058
  - 0.7974759615384616
  - 0.8079710144927537
  - 0.8015587529976019
  train_recall_weighted:
  - 0.9351237887109296
  - 0.9410408432147562
  - 0.9309424912796034
  - 0.9492985321887418
  - 0.941404394384254
  train_recall_weighted_oob:
  - 0.7390976795008195
  - 0.7530395488061392
  - 0.7444177987883239
  - 0.7617326428712102
  - 0.7537588067970444
  train_roc_auc_macro:
  - 0.9998073046826991
  - 0.9999546281576932
  - 0.9996650951987424
  - 0.9998037933289732
  - 0.9996935679488049
  train_roc_auc_macro_oob:
  - 0.774061059192407
  - 0.7882349012015657
  - 0.8090122150015233
  - 0.8105979776891623
  - 0.802196417076194
  train_roc_auc_micro:
  - 0.9836320312935715
  - 0.9832207372595095
  - 0.98712942461972
  - 0.9849747320787436
  - 0.9851948384483243
  train_roc_auc_micro_oob:
  - 0.8448110404458642
  - 0.8537674594770079
  - 0.8517506781301818
  - 0.8770049335833996
  - 0.8492369074257018
  train_roc_auc_samples:
  - 0.9696787148594378
  - 0.9728260869565217
  - 0.9737580128205129
  - 0.9728260869565217
  - 0.9722222222222223
  train_roc_auc_samples_oob:
  - 0.806425702811245
  - 0.807769726247987
  - 0.8098958333333334
  - 0.8331320450885668
  - 0.8039568345323741
  train_roc_auc_weighted:
  - 0.9997650461687564
  - 0.9999523182891847
  - 0.9996438081558608
  - 0.9997383911052975
  - 0.9996115684567669
  train_roc_auc_weighted_oob:
  - 0.8223309608064296
  - 0.8390373071792715
  - 0.8323576937792071
  - 0.8724595771617607
  - 0.8340538778407771
start: 2023-12-21 18:58:28.436519
wrapper: null
