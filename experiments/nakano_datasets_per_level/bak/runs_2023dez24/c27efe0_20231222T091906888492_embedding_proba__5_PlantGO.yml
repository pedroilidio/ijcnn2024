active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMzA8AAMzMzMzMDwAA0MzMzM+M/gGZmZmZmFkAAZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:20:23.031031
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__5
  params: {}
hash: c27efe0c1f6801c44b40f186cd2ba30aa6d540f6aeb886ee65359458f50d3f37
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c27efe0_20231222T091906888492_embedding_proba__5_PlantGO.yml
results:
  fit_time:
  - 34.505138635635376
  - 35.21650719642639
  - 36.82250428199768
  - 39.80946087837219
  - 39.162214040756226
  score_time:
  - 7.278326749801636
  - 7.407885789871216
  - 7.34412956237793
  - 7.599036931991577
  - 8.104106903076172
  test_average_precision_macro:
  - 0.7877809748502905
  - 0.7185016914393746
  - 0.7947824077498543
  - 0.7096237741399486
  - 0.780236577870186
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7879505382609703
  - 0.7704408444828288
  - 0.8308801507706831
  - 0.8156530912064205
  - 0.7681471274337509
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8918069584736251
  - 0.8695929351232381
  - 0.8685083435083435
  - 0.8693045112781955
  - 0.8858069454516155
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.822585844918906
  - 0.7975373115899744
  - 0.8491640369174328
  - 0.8225897986925866
  - 0.810399627032586
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9137205387205386
  - 0.9170875420875421
  - 0.9145299145299145
  - 0.9166666666666669
  - 0.9132825719120136
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9137205387205387
  - 0.9170875420875421
  - 0.9145299145299145
  - 0.9166666666666666
  - 0.9132825719120136
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9137205387205387
  - 0.9170875420875422
  - 0.9145299145299144
  - 0.9166666666666667
  - 0.9132825719120137
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.84400609872308
  - 0.8528138528138527
  - 0.8457142857142855
  - 0.8545772012970816
  - 0.8448663921080356
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8496070558835278
  - 0.8542268110028642
  - 0.8507064717625149
  - 0.8533104887047598
  - 0.8487147050891893
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8411468423091825
  - 0.8468713563933152
  - 0.84251968503937
  - 0.8461538461538461
  - 0.8404048267808486
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8424908424908423
  - 0.8485958485958485
  - 0.8440800225415609
  - 0.8487912087912084
  - 0.8420259943102582
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7391058316279037
  - 0.750175858687447
  - 0.7405934945404434
  - 0.7521916964033757
  - 0.7405269926859879
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8918069584736251
  - 0.8695929351232383
  - 0.8685083435083435
  - 0.8693045112781955
  - 0.8858069454516155
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.04611102240624081
  - 0.03199928716880444
  - 0.04228365705961268
  - 0.09718138915912249
  - 0.04631593264707045
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1743942248826309
  - 0.23840504003013593
  - 0.2086422194102069
  - 0.3009637127752785
  - 0.18001784430745396
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.044536271808999085
  - 0.07943067033976126
  - 0.05128205128205128
  - 0.115311004784689
  - 0.05399169358560222
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11327968275508249
  - 0.11006909682650384
  - 0.11727857494392596
  - 0.19266874397676576
  - 0.11300813056189431
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.920139381955359
  - 0.9027888507316962
  - 0.9031191595022561
  - 0.9030299620739763
  - 0.9166352738249752
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4444444444444444
  - -1.6161616161616161
  - -1.5384615384615385
  - -1.563157894736842
  - -1.4923857868020305
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08627946127946129
  - -0.08291245791245792
  - -0.08547008547008549
  - -0.08333333333333333
  - -0.08671742808798645
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08627946127946128
  - -0.08291245791245791
  - -0.08547008547008547
  - -0.08333333333333333
  - -0.08671742808798646
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08627946127946129
  - -0.0829124579124579
  - -0.08547008547008546
  - -0.08333333333333333
  - -0.08671742808798648
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1559939012769202
  - -0.14718614718614717
  - -0.15428571428571428
  - -0.14542279870291844
  - -0.15513360789196437
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03154269972451791
  - -0.04820936639118457
  - -0.039021842355175695
  - -0.03922824738614212
  - -0.033871712044300874
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9137205387205386
  - 0.9170875420875421
  - 0.9145299145299145
  - 0.9166666666666669
  - 0.9132825719120136
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9137205387205387
  - 0.9170875420875421
  - 0.9145299145299145
  - 0.9166666666666666
  - 0.9132825719120136
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9137205387205387
  - 0.9170875420875422
  - 0.9145299145299144
  - 0.9166666666666667
  - 0.9132825719120137
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.84400609872308
  - 0.8528138528138527
  - 0.8457142857142855
  - 0.8545772012970816
  - 0.8448663921080356
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9137205387205386
  - 0.9170875420875421
  - 0.9145299145299145
  - 0.9166666666666669
  - 0.9132825719120136
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9137205387205387
  - 0.9170875420875421
  - 0.9145299145299145
  - 0.9166666666666666
  - 0.9132825719120136
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9137205387205387
  - 0.9170875420875422
  - 0.9145299145299144
  - 0.9166666666666667
  - 0.9132825719120137
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.84400609872308
  - 0.8528138528138527
  - 0.8457142857142855
  - 0.8545772012970816
  - 0.8448663921080356
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.96618591108308
  - 0.949477634891053
  - 0.974821036366098
  - 0.962723150103668
  - 0.9716172964704372
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9700033568165173
  - 0.961064943059403
  - 0.9725329756315673
  - 0.9685861475768452
  - 0.9707095637230835
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.968457300275482
  - 0.9517906336088153
  - 0.9609781576448243
  - 0.9607717526138578
  - 0.966128287955699
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9626415387991336
  - 0.9621292166306383
  - 0.973977078819601
  - 0.964325637799596
  - 0.9661188301186234
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8834588052233713
  - 0.8646187554026908
  - 0.879940996081848
  - 0.8730871652547935
  - 0.8566764694539565
  train_average_precision_macro_oob:
  - 0.7929608534648468
  - 0.7793122090361471
  - 0.7842380116786534
  - 0.8035221220981925
  - 0.7531691080479254
  train_average_precision_micro:
  - 0.9109838269353794
  - 0.900086331691144
  - 0.9096243884807093
  - 0.9021221603562807
  - 0.9023289957227022
  train_average_precision_micro_oob:
  - 0.8557876521422548
  - 0.8459826968701554
  - 0.8461892840384907
  - 0.839158726886957
  - 0.8442528697102705
  train_average_precision_samples:
  - 0.9281761294261294
  - 0.9210333185333185
  - 0.9335973767966104
  - 0.930415558778503
  - 0.9308619393126435
  train_average_precision_samples_oob:
  - 0.9007661782661783
  - 0.8967714692714693
  - 0.896831985241947
  - 0.8986207250166641
  - 0.8969356543300204
  train_average_precision_weighted:
  - 0.9192057422727467
  - 0.9098912048497345
  - 0.9185083423868445
  - 0.9102096478645623
  - 0.9091412890872149
  train_average_precision_weighted_oob:
  - 0.8695241422957666
  - 0.8595331241307582
  - 0.8648084911571494
  - 0.8589641038069362
  - 0.857020347476116
  train_f1_macro:
  - 0.9302350427350426
  - 0.9294871794871793
  - 0.9280544912728822
  - 0.9318950930626059
  - 0.928723858301323
  train_f1_macro_oob:
  - 0.9162393162393161
  - 0.9161324786324786
  - 0.9130481055768412
  - 0.9169839255499155
  - 0.916346564233888
  train_f1_micro:
  - 0.9302350427350428
  - 0.9294871794871795
  - 0.9280544912728821
  - 0.9318950930626058
  - 0.9287238583013231
  train_f1_micro_oob:
  - 0.9162393162393162
  - 0.9161324786324786
  - 0.9130481055768412
  - 0.9169839255499154
  - 0.9163465642338882
  train_f1_samples:
  - 0.9302350427350428
  - 0.9294871794871795
  - 0.928054491272882
  - 0.9318950930626057
  - 0.928723858301323
  train_f1_samples_oob:
  - 0.9162393162393162
  - 0.9161324786324785
  - 0.9130481055768414
  - 0.9169839255499153
  - 0.9163465642338879
  train_f1_weighted:
  - 0.882454299358214
  - 0.8843134577454105
  - 0.8769079628496073
  - 0.8890360742897011
  - 0.8784780287461857
  train_f1_weighted_oob:
  - 0.8506007239103326
  - 0.8533227127901685
  - 0.842196981719528
  - 0.8541962373998604
  - 0.8513236216609481
  train_jaccard_macro:
  - 0.8737912860575493
  - 0.8723520794262846
  - 0.8705621032174591
  - 0.8762697068923438
  - 0.8715315234578256
  train_jaccard_macro_oob:
  - 0.8529701567933786
  - 0.8524900847827217
  - 0.8486345771523013
  - 0.8538706026100401
  - 0.8531024147106377
  train_jaccard_micro:
  - 0.8695695595725557
  - 0.8682634730538922
  - 0.8657664813343924
  - 0.8724752475247525
  - 0.8669322709163346
  train_jaccard_micro_oob:
  - 0.8454258675078864
  - 0.8452439625431247
  - 0.8400078331538235
  - 0.8466946587247339
  - 0.8456085072863332
  train_jaccard_samples:
  - 0.8725443786982248
  - 0.8712989574528035
  - 0.8687999101792204
  - 0.8755731578066603
  - 0.8696627316345625
  train_jaccard_samples_oob:
  - 0.8472640180332487
  - 0.8471513102282332
  - 0.8413203654582965
  - 0.8484855246276565
  - 0.847431441797639
  train_jaccard_weighted:
  - 0.7941728357939791
  - 0.7962888786297988
  - 0.7861819389811874
  - 0.8035350136826563
  - 0.7881542027057933
  train_jaccard_weighted_oob:
  - 0.747610858454449
  - 0.7507648660225046
  - 0.7365767540108047
  - 0.7522236443405239
  - 0.7482862080711828
  train_label_ranking_average_precision_score:
  - 0.9281761294261297
  - 0.9210333185333187
  - 0.9335973767966111
  - 0.9304155587785031
  - 0.9308619393126437
  train_label_ranking_average_precision_score_oob:
  - 0.9007661782661788
  - 0.8967714692714698
  - 0.8968319852419475
  - 0.8986207250166645
  - 0.8969356543300202
  train_matthews_corrcoef_macro:
  - 0.16700654395873626
  - 0.1568105211838838
  - 0.1584268915796835
  - 0.20607359605638756
  - 0.15956661123110857
  train_matthews_corrcoef_macro_oob:
  - 0.07757417169638749
  - 0.0526637690627502
  - 0.04940634713562636
  - 0.05536000142209194
  - 0.06247595051739269
  train_matthews_corrcoef_micro:
  - 0.45753220514917414
  - 0.45040701322611426
  - 0.430519860364171
  - 0.46938003082353313
  - 0.43876421611249966
  train_matthews_corrcoef_micro_oob:
  - 0.2523218699699269
  - 0.25414061274631583
  - 0.1731190345273438
  - 0.25207794541161943
  - 0.252338437041521
  train_matthews_corrcoef_samples:
  - 0.23629414200933202
  - 0.2324097172821243
  - 0.21375606553297088
  - 0.25021995241318584
  - 0.2157285496149358
  train_matthews_corrcoef_samples_oob:
  - 0.07871983665350765
  - 0.08041958041958042
  - 0.03924300476024614
  - 0.08064143977849562
  - 0.07861904300862481
  train_matthews_corrcoef_weighted:
  - 0.3699157552379519
  - 0.3565636712920787
  - 0.34691439593230144
  - 0.3896696537980481
  - 0.354369481740603
  train_matthews_corrcoef_weighted_oob:
  - 0.18617720713204855
  - 0.14500812279255174
  - 0.11945223988242575
  - 0.14825182531793296
  - 0.15827126647193188
  train_ndgc:
  - 0.9473532803708954
  - 0.9419934982207845
  - 0.9515206866315847
  - 0.948828293586939
  - 0.9487655639824295
  train_ndgc_oob:
  - 0.9270222776127773
  - 0.9239758983543133
  - 0.9242597073504737
  - 0.9252984177252205
  - 0.9235101555873544
  train_neg_coverage_error:
  - -1.3282051282051281
  - -1.3923076923076922
  - -1.3116219667943805
  - -1.3464467005076142
  - -1.3303457106274008
  train_neg_coverage_error_oob:
  - -1.441025641025641
  - -1.485897435897436
  - -1.4533844189016603
  - -1.4796954314720812
  - -1.4916773367477594
  train_neg_hamming_loss_macro:
  - -0.06976495726495727
  - -0.07051282051282051
  - -0.07194550872711793
  - -0.06810490693739424
  - -0.07127614169867691
  train_neg_hamming_loss_macro_oob:
  - -0.08376068376068375
  - -0.08386752136752136
  - -0.0869518944231588
  - -0.0830160744500846
  - -0.08365343576611182
  train_neg_hamming_loss_micro:
  - -0.06976495726495727
  - -0.07051282051282051
  - -0.07194550872711793
  - -0.06810490693739425
  - -0.07127614169867691
  train_neg_hamming_loss_micro_oob:
  - -0.08376068376068375
  - -0.08386752136752136
  - -0.08695189442315879
  - -0.0830160744500846
  - -0.08365343576611182
  train_neg_hamming_loss_samples:
  - -0.06976495726495727
  - -0.0705128205128205
  - -0.07194550872711793
  - -0.06810490693739425
  - -0.07127614169867691
  train_neg_hamming_loss_samples_oob:
  - -0.08376068376068377
  - -0.08386752136752137
  - -0.0869518944231588
  - -0.0830160744500846
  - -0.08365343576611184
  train_neg_hamming_loss_weighted:
  - -0.11754570064178604
  - -0.1156865422545896
  - -0.1230920371503926
  - -0.11096392571029905
  - -0.12152197125381427
  train_neg_hamming_loss_weighted_oob:
  - -0.14939927608966755
  - -0.14667728720983159
  - -0.15780301828047183
  - -0.14580376260013955
  - -0.1486763783390519
  train_neg_label_ranking_loss:
  - -0.02066304066304066
  - -0.02522101355434689
  - -0.01917450365726228
  - -0.022646729562973218
  - -0.021488465534560283
  train_neg_label_ranking_loss_oob:
  - -0.03038418371751705
  - -0.03317059483726151
  - -0.031531363012844496
  - -0.03401869797808884
  - -0.03538608448979767
  train_precision_macro:
  - 0.9302350427350426
  - 0.9294871794871793
  - 0.9280544912728822
  - 0.9318950930626059
  - 0.928723858301323
  train_precision_macro_oob:
  - 0.9162393162393161
  - 0.9161324786324786
  - 0.9130481055768412
  - 0.9169839255499155
  - 0.916346564233888
  train_precision_micro:
  - 0.9302350427350428
  - 0.9294871794871795
  - 0.9280544912728821
  - 0.9318950930626058
  - 0.9287238583013231
  train_precision_micro_oob:
  - 0.9162393162393162
  - 0.9161324786324786
  - 0.9130481055768412
  - 0.9169839255499154
  - 0.9163465642338882
  train_precision_samples:
  - 0.9302350427350428
  - 0.9294871794871795
  - 0.928054491272882
  - 0.9318950930626057
  - 0.928723858301323
  train_precision_samples_oob:
  - 0.9162393162393162
  - 0.9161324786324785
  - 0.9130481055768414
  - 0.9169839255499153
  - 0.9163465642338879
  train_precision_weighted:
  - 0.882454299358214
  - 0.8843134577454105
  - 0.8769079628496073
  - 0.8890360742897011
  - 0.8784780287461857
  train_precision_weighted_oob:
  - 0.8506007239103326
  - 0.8533227127901685
  - 0.842196981719528
  - 0.8541962373998604
  - 0.8513236216609481
  train_recall_macro:
  - 0.9302350427350426
  - 0.9294871794871793
  - 0.9280544912728822
  - 0.9318950930626059
  - 0.928723858301323
  train_recall_macro_oob:
  - 0.9162393162393161
  - 0.9161324786324786
  - 0.9130481055768412
  - 0.9169839255499155
  - 0.916346564233888
  train_recall_micro:
  - 0.9302350427350428
  - 0.9294871794871795
  - 0.9280544912728821
  - 0.9318950930626058
  - 0.9287238583013231
  train_recall_micro_oob:
  - 0.9162393162393162
  - 0.9161324786324786
  - 0.9130481055768412
  - 0.9169839255499154
  - 0.9163465642338882
  train_recall_samples:
  - 0.9302350427350428
  - 0.9294871794871795
  - 0.928054491272882
  - 0.9318950930626057
  - 0.928723858301323
  train_recall_samples_oob:
  - 0.9162393162393162
  - 0.9161324786324785
  - 0.9130481055768414
  - 0.9169839255499153
  - 0.9163465642338879
  train_recall_weighted:
  - 0.882454299358214
  - 0.8843134577454105
  - 0.8769079628496073
  - 0.8890360742897011
  - 0.8784780287461857
  train_recall_weighted_oob:
  - 0.8506007239103326
  - 0.8533227127901685
  - 0.842196981719528
  - 0.8541962373998604
  - 0.8513236216609481
  train_roc_auc_macro:
  - 0.9808881775031738
  - 0.9802618115777779
  - 0.9853665074781545
  - 0.9805590344959557
  - 0.9768647225048771
  train_roc_auc_macro_oob:
  - 0.969003637181297
  - 0.9704340057002977
  - 0.9758617772375587
  - 0.9721103405258612
  - 0.9658848938067859
  train_roc_auc_micro:
  - 0.9836524007319951
  - 0.9814308199592088
  - 0.9846725425380194
  - 0.9822847211980197
  - 0.980724405896177
  train_roc_auc_micro_oob:
  - 0.9737577388659984
  - 0.9722821196148808
  - 0.9739214556033102
  - 0.973108035079455
  - 0.9697242552691974
  train_roc_auc_samples:
  - 0.9793369593369594
  - 0.9747789864456531
  - 0.9808254963427377
  - 0.9773532704370268
  - 0.9785115344654397
  train_roc_auc_samples_oob:
  - 0.9696158162824831
  - 0.9668294051627385
  - 0.9684686369871554
  - 0.9659813020219111
  - 0.9646139155102024
  train_roc_auc_weighted:
  - 0.9797104370850125
  - 0.9797539551616707
  - 0.9835661352381685
  - 0.9801744940455415
  - 0.9791572342810311
  train_roc_auc_weighted_oob:
  - 0.971344757657451
  - 0.972946244400891
  - 0.9750795915762634
  - 0.9723656939590264
  - 0.9710484341230095
start: 2023-12-22 09:19:06.888492
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
