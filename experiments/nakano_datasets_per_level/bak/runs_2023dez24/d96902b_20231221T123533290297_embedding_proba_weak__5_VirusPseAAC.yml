active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMAAmpmZmZnZP4BmZmZmZvY/ADMzMzMz479AMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:36:33.444920
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__5
  params: {}
hash: d96902b02b1e7e225db21e9d93829eeadb2d26b7d9c9ad19148ce6bb0f85ba47
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d96902b_20231221T123533290297_embedding_proba_weak__5_VirusPseAAC.yml
results:
  fit_time:
  - 48.58713245391846
  - 48.24349617958069
  - 48.31104326248169
  - 48.83565926551819
  - 49.47216773033142
  score_time:
  - 3.4445953369140625
  - 3.5001771450042725
  - 3.667668104171753
  - 3.5968270301818848
  - 3.5938966274261475
  test_average_precision_macro:
  - 0.4753779162814437
  - 0.3882977026694257
  - 0.41636385447827323
  - 0.3123869391565673
  - 0.40877718757913056
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.38396031201567293
  - 0.45074492501210683
  - 0.37692729389164337
  - 0.3997399499575978
  - 0.3886729359407992
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6551851851851852
  - 0.6790650406504065
  - 0.655
  - 0.6257936507936508
  - 0.6685185185185185
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.42328281928851524
  - 0.4467939888889997
  - 0.3928840877208571
  - 0.4076568802689388
  - 0.37044690832996985
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8148148148148149
  - 0.7926829268292682
  - 0.7875
  - 0.8015873015873017
  - 0.782051282051282
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8148148148148148
  - 0.7926829268292683
  - 0.7875
  - 0.8015873015873016
  - 0.782051282051282
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8148148148148151
  - 0.7926829268292683
  - 0.7875
  - 0.8015873015873017
  - 0.7820512820512819
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7111111111111111
  - 0.6724055475848877
  - 0.6765000000000001
  - 0.6857142857142857
  - 0.6505781799899447
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7093824489301555
  - 0.683287608602862
  - 0.6751891623498373
  - 0.6945676044234766
  - 0.6724728910243251
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6875
  - 0.6565656565656566
  - 0.6494845360824743
  - 0.6688741721854304
  - 0.6421052631578947
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6904761904761906
  - 0.6620209059233451
  - 0.6565476190476192
  - 0.6734693877551022
  - 0.6526251526251529
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5693347757771605
  - 0.5276715349744296
  - 0.5315058138242291
  - 0.5393792737056777
  - 0.5027714411825078
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6551851851851852
  - 0.6790650406504065
  - 0.655
  - 0.6257936507936508
  - 0.6685185185185184
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - -0.022944414976636292
  - 0.0
  - 0.00500918524878475
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - -0.033182511319614236
  - 0.0
  - 0.06343140162988953
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - -0.005
  - 0.0
  - 0.020512820512820513
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - -0.04680660655233804
  - 0.0
  - 0.0100183704975695
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7450697050574959
  - 0.7615320954456203
  - 0.7455213984191281
  - 0.7201153828774272
  - 0.7575946107050487
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.088888888888889
  - -2.341463414634146
  - -2.225
  - -2.4523809523809526
  - -2.4615384615384617
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18518518518518515
  - -0.2073170731707317
  - -0.2125
  - -0.19841269841269846
  - -0.21794871794871798
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18518518518518517
  - -0.2073170731707317
  - -0.2125
  - -0.1984126984126984
  - -0.21794871794871795
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18518518518518515
  - -0.20731707317073167
  - -0.2125
  - -0.19841269841269837
  - -0.2179487179487179
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2888888888888889
  - -0.32759445241511237
  - -0.3235
  - -0.3142857142857143
  - -0.34942182001005523
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19611111111111107
  - -0.2201219512195122
  - -0.196875
  - -0.25297619047619047
  - -0.22037037037037038
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8148148148148149
  - 0.7926829268292682
  - 0.7875
  - 0.8015873015873017
  - 0.782051282051282
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8148148148148148
  - 0.7926829268292683
  - 0.7875
  - 0.8015873015873016
  - 0.782051282051282
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8148148148148151
  - 0.7926829268292683
  - 0.7875
  - 0.8015873015873017
  - 0.7820512820512819
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7111111111111111
  - 0.6724055475848877
  - 0.6765000000000001
  - 0.6857142857142857
  - 0.6505781799899447
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8148148148148149
  - 0.7926829268292682
  - 0.7875
  - 0.8015873015873017
  - 0.782051282051282
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8148148148148148
  - 0.7926829268292683
  - 0.7875
  - 0.8015873015873016
  - 0.782051282051282
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8148148148148151
  - 0.7926829268292683
  - 0.7875
  - 0.8015873015873017
  - 0.7820512820512819
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7111111111111111
  - 0.6724055475848877
  - 0.6765000000000001
  - 0.6857142857142857
  - 0.6505781799899447
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7283982490223523
  - 0.5308657773171839
  - 0.6523009208089426
  - 0.6307937308427864
  - 0.5760566684586292
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8059090909090909
  - 0.7598793363499246
  - 0.778
  - 0.7632673267326733
  - 0.7470266795242687
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8038888888888887
  - 0.7798780487804878
  - 0.803125
  - 0.7470238095238095
  - 0.7796296296296297
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6334485839363888
  - 0.5343747439015981
  - 0.5761809745047731
  - 0.5684861177333578
  - 0.4654549698667346
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.715459967063142
  - 0.7089473727236157
  - 0.7161989609233146
  - 0.7314483704130258
  - 0.7182880231168077
  train_average_precision_macro_oob:
  - 0.5636902570256335
  - 0.5889562924837769
  - 0.5855597661083506
  - 0.6023666167610225
  - 0.6067234765123761
  train_average_precision_micro:
  - 0.7591519399968092
  - 0.7799893265194664
  - 0.7552138855118729
  - 0.7744920261878001
  - 0.7796643194062137
  train_average_precision_micro_oob:
  - 0.6914502822323958
  - 0.711497588263139
  - 0.6958612188191401
  - 0.7196192450399415
  - 0.7198700323733164
  train_average_precision_samples:
  - 0.7950617283950618
  - 0.8446787148594376
  - 0.8194610778443113
  - 0.8207575757575758
  - 0.8115079365079364
  train_average_precision_samples_oob:
  - 0.737482853223594
  - 0.7553547523427041
  - 0.7598802395209581
  - 0.7942760942760944
  - 0.7724206349206348
  train_average_precision_weighted:
  - 0.7469939559031272
  - 0.7591472597859982
  - 0.7413763020664746
  - 0.7593416167849876
  - 0.7621935611501198
  train_average_precision_weighted_oob:
  - 0.6967549060452086
  - 0.710544531019213
  - 0.6929717919643432
  - 0.7001421659355758
  - 0.721835435647354
  train_f1_macro:
  - 0.8569958847736624
  - 0.859437751004016
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_f1_macro_oob:
  - 0.8312757201646089
  - 0.8423694779116465
  - 0.8493013972055888
  - 0.8343434343434345
  - 0.8402777777777778
  train_f1_micro:
  - 0.8569958847736625
  - 0.8594377510040161
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_f1_micro_oob:
  - 0.831275720164609
  - 0.8423694779116466
  - 0.8493013972055888
  - 0.8343434343434344
  - 0.8402777777777778
  train_f1_samples:
  - 0.8569958847736624
  - 0.859437751004016
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_f1_samples_oob:
  - 0.8312757201646088
  - 0.8423694779116465
  - 0.8493013972055887
  - 0.8343434343434342
  - 0.8402777777777777
  train_f1_weighted:
  - 0.8060750519496392
  - 0.8090271533896782
  - 0.8124147744115728
  - 0.8066006600660065
  - 0.8063551291163232
  train_f1_weighted_oob:
  - 0.7536975919814202
  - 0.7744710184019662
  - 0.7857947471393846
  - 0.759015901590159
  - 0.7699301113480218
  train_jaccard_macro:
  - 0.7565979980157609
  - 0.7603638732244041
  - 0.7643445833512992
  - 0.7573454345335726
  - 0.75843087541329
  train_jaccard_macro_oob:
  - 0.7245255819247541
  - 0.7386637239280128
  - 0.7474822649137195
  - 0.7285066780897228
  - 0.7359184229239544
  train_jaccard_micro:
  - 0.7497749774977498
  - 0.7535211267605634
  - 0.7578947368421053
  - 0.7506631299734748
  - 0.7515204170286707
  train_jaccard_micro_oob:
  - 0.7112676056338029
  - 0.7276669557675629
  - 0.738074588031223
  - 0.7157712305025996
  - 0.7245508982035929
  train_jaccard_samples:
  - 0.7644032921810701
  - 0.7670682730923696
  - 0.7715996578272027
  - 0.7647907647907649
  - 0.7643140589569162
  train_jaccard_samples_oob:
  - 0.7245737801293357
  - 0.7411072862880094
  - 0.7522098659823211
  - 0.72987012987013
  - 0.7388038548752834
  train_jaccard_weighted:
  - 0.679007971536081
  - 0.6833400465442241
  - 0.6878498166435317
  - 0.6801236615118393
  - 0.6800008407706705
  train_jaccard_weighted_oob:
  - 0.6136979333243971
  - 0.6393866390223023
  - 0.6532482625065572
  - 0.6210861698202912
  - 0.6340825670607025
  train_label_ranking_average_precision_score:
  - 0.7950617283950616
  - 0.8446787148594376
  - 0.8194610778443112
  - 0.8207575757575757
  - 0.8115079365079364
  train_label_ranking_average_precision_score_oob:
  - 0.7374828532235939
  - 0.7553547523427041
  - 0.759880239520958
  - 0.7942760942760942
  - 0.7724206349206348
  train_matthews_corrcoef_macro:
  - 0.19125186959656096
  - 0.18958126345742776
  - 0.19330205844835469
  - 0.1884084435571701
  - 0.18451035862515244
  train_matthews_corrcoef_macro_oob:
  - 0.14187371377394267
  - 0.1555254250086788
  - 0.16854481318441217
  - 0.14268707091009034
  - 0.14863283989134524
  train_matthews_corrcoef_micro:
  - 0.5139939545511846
  - 0.5079777003784027
  - 0.5198258550192928
  - 0.5061094943581325
  - 0.49509772734576146
  train_matthews_corrcoef_micro_oob:
  - 0.39381117708832836
  - 0.4275563881754194
  - 0.4608548245557387
  - 0.3946033320517727
  - 0.4073156112332439
  train_matthews_corrcoef_samples:
  - 0.32557893062401616
  - 0.3275979528403919
  - 0.3284517248106009
  - 0.32958339497881856
  - 0.31023386019368343
  train_matthews_corrcoef_samples_oob:
  - 0.2107365023691546
  - 0.2418030926735123
  - 0.28007047254992046
  - 0.21471023469233777
  - 0.22934417933413515
  train_matthews_corrcoef_weighted:
  - 0.3892216184095439
  - 0.38515005761113386
  - 0.3963247809733054
  - 0.3832731389753622
  - 0.3746902537231685
  train_matthews_corrcoef_weighted_oob:
  - 0.28873251288261687
  - 0.316250447705206
  - 0.3455455369899364
  - 0.2896309607541454
  - 0.30152176834596184
  train_ndgc:
  - 0.8490314795905087
  - 0.8861763932067254
  - 0.8665760372410864
  - 0.8675814023476185
  - 0.8609498383716021
  train_ndgc_oob:
  - 0.8060993601073728
  - 0.8193207729765397
  - 0.8227679368164391
  - 0.8486472677186393
  - 0.8328389432283533
  train_neg_coverage_error:
  - -1.9691358024691359
  - -1.7530120481927711
  - -1.81437125748503
  - -1.8484848484848484
  - -1.8095238095238095
  train_neg_coverage_error_oob:
  - -2.191358024691358
  - -2.0481927710843375
  - -2.0479041916167664
  - -1.9636363636363636
  - -2.005952380952381
  train_neg_hamming_loss_macro:
  - -0.14300411522633746
  - -0.14056224899598393
  - -0.1377245508982036
  - -0.14242424242424243
  - -0.14186507936507936
  train_neg_hamming_loss_macro_oob:
  - -0.16872427983539096
  - -0.1576305220883534
  - -0.1506986027944112
  - -0.16565656565656564
  - -0.1597222222222222
  train_neg_hamming_loss_micro:
  - -0.14300411522633744
  - -0.14056224899598393
  - -0.1377245508982036
  - -0.14242424242424243
  - -0.14186507936507936
  train_neg_hamming_loss_micro_oob:
  - -0.16872427983539096
  - -0.1576305220883534
  - -0.1506986027944112
  - -0.16565656565656567
  - -0.1597222222222222
  train_neg_hamming_loss_samples:
  - -0.14300411522633744
  - -0.14056224899598396
  - -0.1377245508982036
  - -0.14242424242424243
  - -0.14186507936507936
  train_neg_hamming_loss_samples_oob:
  - -0.16872427983539096
  - -0.1576305220883534
  - -0.15069860279441116
  - -0.16565656565656564
  - -0.1597222222222222
  train_neg_hamming_loss_weighted:
  - -0.1939249480503606
  - -0.19097284661032188
  - -0.18758522558842708
  - -0.1933993399339934
  - -0.19364487088367688
  train_neg_hamming_loss_weighted_oob:
  - -0.2463024080185796
  - -0.22552898159803395
  - -0.2142052528606154
  - -0.24098409840984097
  - -0.23006988865197825
  train_neg_label_ranking_loss:
  - -0.13887174211248285
  - -0.1023929049531459
  - -0.11751497005988024
  - -0.12141414141414142
  - -0.11800595238095238
  train_neg_label_ranking_loss_oob:
  - -0.18285322359396433
  - -0.1636044176706827
  - -0.1609946773120426
  - -0.14414141414141413
  - -0.15357142857142855
  train_precision_macro:
  - 0.8569958847736624
  - 0.859437751004016
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_precision_macro_oob:
  - 0.8312757201646089
  - 0.8423694779116465
  - 0.8493013972055888
  - 0.8343434343434345
  - 0.8402777777777778
  train_precision_micro:
  - 0.8569958847736625
  - 0.8594377510040161
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_precision_micro_oob:
  - 0.831275720164609
  - 0.8423694779116466
  - 0.8493013972055888
  - 0.8343434343434344
  - 0.8402777777777778
  train_precision_samples:
  - 0.8569958847736624
  - 0.859437751004016
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_precision_samples_oob:
  - 0.8312757201646088
  - 0.8423694779116465
  - 0.8493013972055887
  - 0.8343434343434342
  - 0.8402777777777777
  train_precision_weighted:
  - 0.8060750519496392
  - 0.8090271533896782
  - 0.8124147744115728
  - 0.8066006600660065
  - 0.8063551291163232
  train_precision_weighted_oob:
  - 0.7536975919814202
  - 0.7744710184019662
  - 0.7857947471393846
  - 0.759015901590159
  - 0.7699301113480218
  train_recall_macro:
  - 0.8569958847736624
  - 0.859437751004016
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_recall_macro_oob:
  - 0.8312757201646089
  - 0.8423694779116465
  - 0.8493013972055888
  - 0.8343434343434345
  - 0.8402777777777778
  train_recall_micro:
  - 0.8569958847736625
  - 0.8594377510040161
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_recall_micro_oob:
  - 0.831275720164609
  - 0.8423694779116466
  - 0.8493013972055888
  - 0.8343434343434344
  - 0.8402777777777778
  train_recall_samples:
  - 0.8569958847736624
  - 0.859437751004016
  - 0.8622754491017964
  - 0.8575757575757575
  - 0.8581349206349206
  train_recall_samples_oob:
  - 0.8312757201646088
  - 0.8423694779116465
  - 0.8493013972055887
  - 0.8343434343434342
  - 0.8402777777777777
  train_recall_weighted:
  - 0.8060750519496392
  - 0.8090271533896782
  - 0.8124147744115728
  - 0.8066006600660065
  - 0.8063551291163232
  train_recall_weighted_oob:
  - 0.7536975919814202
  - 0.7744710184019662
  - 0.7857947471393846
  - 0.759015901590159
  - 0.7699301113480218
  train_roc_auc_macro:
  - 0.8203527684392419
  - 0.8448915116479685
  - 0.8319266374061738
  - 0.8141579474534509
  - 0.8517838123938696
  train_roc_auc_macro_oob:
  - 0.7642219650996122
  - 0.8104587988644091
  - 0.7861797327165888
  - 0.7936141066979632
  - 0.8322120356635446
  train_roc_auc_micro:
  - 0.8806737816638806
  - 0.8963734785193529
  - 0.888292079207921
  - 0.8835314369000352
  - 0.8980438575400569
  train_roc_auc_micro_oob:
  - 0.8477497749774978
  - 0.8613473512938453
  - 0.8617883663366337
  - 0.8640121626375836
  - 0.8729339670914326
  train_roc_auc_samples:
  - 0.8611282578875171
  - 0.8976070950468542
  - 0.8824850299401198
  - 0.8785858585858585
  - 0.8819940476190476
  train_roc_auc_samples_oob:
  - 0.8171467764060356
  - 0.8363955823293171
  - 0.8390053226879574
  - 0.8558585858585859
  - 0.8464285714285713
  train_roc_auc_weighted:
  - 0.7750364080146295
  - 0.8051539792309726
  - 0.7845905092049307
  - 0.7930908810593855
  - 0.8087084061566536
  train_roc_auc_weighted_oob:
  - 0.7558240874531977
  - 0.792571703858919
  - 0.7695740396261095
  - 0.7848139739655331
  - 0.8089212170359419
start: 2023-12-21 12:35:33.290297
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
