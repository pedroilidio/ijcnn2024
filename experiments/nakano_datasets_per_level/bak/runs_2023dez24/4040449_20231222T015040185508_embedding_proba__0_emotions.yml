active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZGcBoZmZmZmYSQGhmZmZmZhJAoJmZmZmZ+T+YmZmZmZkRwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b/gzMzMzMwMQIAzMzMzM+M/wJmZmZmZ+T+QmZmZmZkVwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:50:49.106975
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__0
  params: {}
hash: 4040449212a9dc50d8b35992c5e262a0ca92d2edcda0c43431edfafa3bc58cbd
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4040449_20231222T015040185508_embedding_proba__0_emotions.yml
results:
  fit_time:
  - 1.0524506568908691
  - 1.036545991897583
  - 1.0052366256713867
  - 1.0802624225616455
  - 1.0877609252929688
  score_time:
  - 1.1643705368041992
  - 1.1504089832305908
  - 1.2462255954742432
  - 1.1927363872528076
  - 1.2726497650146484
  test_average_precision_macro:
  - 0.7552678333075425
  - 0.7681850635287284
  - 0.7090141437544978
  - 0.7356715662641605
  - 0.77252274917165
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7527786510597022
  - 0.7763421855430956
  - 0.7156367090967225
  - 0.7433571741371903
  - 0.7633206614713633
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8025443510737628
  - 0.8140579710144927
  - 0.8076035781544255
  - 0.8118233618233618
  - 0.8275313620071684
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7561427975484786
  - 0.7728800117480622
  - 0.7107112227352909
  - 0.7323976555214601
  - 0.7731017314361445
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8095238095238094
  - 0.8246376811594204
  - 0.8107344632768362
  - 0.8005698005698005
  - 0.8293010752688171
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8095238095238095
  - 0.8246376811594203
  - 0.8107344632768362
  - 0.8005698005698005
  - 0.8293010752688172
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8095238095238095
  - 0.8246376811594203
  - 0.810734463276836
  - 0.8005698005698006
  - 0.8293010752688174
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8062804068996019
  - 0.8221198156682027
  - 0.8063402385436284
  - 0.7934277797291497
  - 0.8257993774759479
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6824491954600633
  - 0.7032453571789815
  - 0.6841508932683494
  - 0.6728695959536921
  - 0.711997414540949
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.68
  - 0.7016029593094945
  - 0.6817102137767221
  - 0.667458432304038
  - 0.7083811710677382
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7124849939975989
  - 0.7320910973084886
  - 0.7062953995157383
  - 0.6949531949531947
  - 0.7355990783410137
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.677499577688497
  - 0.6996160703712544
  - 0.677735023310137
  - 0.6622240517514848
  - 0.7064685556470345
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8025443510737629
  - 0.8140579710144927
  - 0.8076035781544253
  - 0.8118233618233616
  - 0.8275313620071685
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5296192992438895
  - 0.5585401387167334
  - 0.5096640024326305
  - 0.49254740530938784
  - 0.5803468629428875
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5392039737754383
  - 0.5753912223292259
  - 0.5294551640886802
  - 0.5093038647144057
  - 0.5843753563893594
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49718476230676373
  - 0.5259354659359038
  - 0.5169722954632566
  - 0.47998893678361215
  - 0.571775396944346
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5325528018643094
  - 0.5650009165245188
  - 0.5131904250267796
  - 0.4881247045954944
  - 0.5835307603644391
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8674774592270988
  - 0.8702428598496604
  - 0.8701219039717171
  - 0.8720945647095341
  - 0.8873457213603211
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.823529411764706
  - -2.7217391304347824
  - -2.6864406779661016
  - -2.6923076923076925
  - -2.661290322580645
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1904761904761905
  - -0.1753623188405797
  - -0.18926553672316382
  - -0.19943019943019943
  - -0.17069892473118278
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19047619047619047
  - -0.1753623188405797
  - -0.18926553672316385
  - -0.19943019943019943
  - -0.17069892473118278
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19047619047619047
  - -0.17536231884057968
  - -0.18926553672316387
  - -0.1994301994301994
  - -0.17069892473118278
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.19371959310039805
  - -0.17788018433179725
  - -0.19365976145637162
  - -0.20657222027085043
  - -0.17420062252405208
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15924369747899156
  - -0.1493961352657005
  - -0.15018832391713746
  - -0.1510446343779677
  - -0.13528225806451613
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8095238095238094
  - 0.8246376811594204
  - 0.8107344632768362
  - 0.8005698005698005
  - 0.8293010752688171
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8095238095238095
  - 0.8246376811594203
  - 0.8107344632768362
  - 0.8005698005698005
  - 0.8293010752688172
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8095238095238095
  - 0.8246376811594203
  - 0.810734463276836
  - 0.8005698005698006
  - 0.8293010752688174
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8062804068996019
  - 0.8221198156682027
  - 0.8063402385436284
  - 0.7934277797291497
  - 0.8257993774759479
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8095238095238094
  - 0.8246376811594204
  - 0.8107344632768362
  - 0.8005698005698005
  - 0.8293010752688171
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8095238095238095
  - 0.8246376811594203
  - 0.8107344632768362
  - 0.8005698005698005
  - 0.8293010752688172
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8095238095238095
  - 0.8246376811594203
  - 0.810734463276836
  - 0.8005698005698006
  - 0.8293010752688174
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8062804068996019
  - 0.8221198156682027
  - 0.8063402385436284
  - 0.7934277797291497
  - 0.8257993774759479
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.858432627388893
  - 0.8660804968229378
  - 0.8481995787191173
  - 0.8549488163399969
  - 0.8674567658737379
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8718684571511082
  - 0.8822790113112693
  - 0.865016184884071
  - 0.8714276260434688
  - 0.8764364885080919
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8407563025210083
  - 0.8506038647342995
  - 0.8498116760828625
  - 0.8489553656220323
  - 0.8647177419354839
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8580161928440508
  - 0.8669496913676779
  - 0.8461742751445472
  - 0.8496941353279263
  - 0.8666452097453938
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9469195531163649
  - 0.9463342667824293
  - 0.9452407190536
  - 0.945647857611504
  - 0.9460246402448592
  train_average_precision_macro_oob:
  - 0.7323618968143757
  - 0.7138197487378973
  - 0.7372045843266734
  - 0.7318482212330927
  - 0.7180607278008625
  train_average_precision_micro:
  - 0.9355922936713456
  - 0.9342057616841487
  - 0.9329308999521245
  - 0.9321718913957392
  - 0.930225811753687
  train_average_precision_micro_oob:
  - 0.7459534863994984
  - 0.7352680361357793
  - 0.7475094749380756
  - 0.7446657771159292
  - 0.7375930954057617
  train_average_precision_samples:
  - 0.9407993436474449
  - 0.9447931194793119
  - 0.9375555555555556
  - 0.9429738562091503
  - 0.9338190002369107
  train_average_precision_samples_oob:
  - 0.8132090951711205
  - 0.8112157136215714
  - 0.8077134502923977
  - 0.8052170868347338
  - 0.7946280502250651
  train_average_precision_weighted:
  - 0.9495967880051304
  - 0.9485429640111134
  - 0.9469585112787026
  - 0.9479146037717544
  - 0.9480197142883782
  train_average_precision_weighted_oob:
  - 0.7352727459789553
  - 0.7141177008687086
  - 0.7362516724056811
  - 0.734298373362776
  - 0.7200791541596829
  train_f1_macro:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.8816526610644259
  - 0.878820184790334
  train_f1_macro_oob:
  - 0.8122362869198311
  - 0.8106694560669457
  - 0.8171929824561402
  - 0.81687675070028
  - 0.8109452736318409
  train_f1_micro:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.8816526610644257
  - 0.8788201847903341
  train_f1_micro_oob:
  - 0.8122362869198312
  - 0.8106694560669456
  - 0.8171929824561404
  - 0.8168767507002801
  - 0.8109452736318408
  train_f1_samples:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.881652661064426
  - 0.8788201847903341
  train_f1_samples_oob:
  - 0.8122362869198312
  - 0.8106694560669456
  - 0.8171929824561405
  - 0.8168767507002802
  - 0.8109452736318409
  train_f1_weighted:
  - 0.8892117376294592
  - 0.8859351300076546
  - 0.8828699551569507
  - 0.8824734618256751
  - 0.8780456483814694
  train_f1_weighted_oob:
  - 0.8077723436900652
  - 0.8059605821112096
  - 0.811907009676658
  - 0.8135238347307425
  - 0.806268172126381
  train_jaccard_macro:
  - 0.8003988505951423
  - 0.796386336932617
  - 0.7932774134072796
  - 0.79127625020477
  - 0.7863759770215074
  train_jaccard_macro_oob:
  - 0.6861985536119767
  - 0.684440379701042
  - 0.6935805266661639
  - 0.6923788280495975
  - 0.684872385645488
  train_jaccard_micro:
  - 0.797724399494311
  - 0.793060331353548
  - 0.7907634307257304
  - 0.7883531621790858
  - 0.7838351822503962
  train_jaccard_micro_oob:
  - 0.6838365896980462
  - 0.6816182937554969
  - 0.6908929101156926
  - 0.6904409588635692
  - 0.6820083682008368
  train_jaccard_samples:
  - 0.8190174804098854
  - 0.8147240486152618
  - 0.812531328320802
  - 0.8095938375350139
  - 0.8068027210884354
  train_jaccard_samples_oob:
  - 0.7121961020695197
  - 0.7105399481968518
  - 0.7199498746867168
  - 0.7200080032012804
  - 0.7103665346735709
  train_jaccard_weighted:
  - 0.8029645561559009
  - 0.7982206961195479
  - 0.7924972826861089
  - 0.7922715135195572
  - 0.7848397870910314
  train_jaccard_weighted_oob:
  - 0.6796477673543755
  - 0.6774402531166892
  - 0.6858344396498801
  - 0.6873392975534707
  - 0.6779492470787248
  train_label_ranking_average_precision_score:
  - 0.9407993436474447
  - 0.9447931194793114
  - 0.9375555555555553
  - 0.9429738562091501
  - 0.9338190002369102
  train_label_ranking_average_precision_score_oob:
  - 0.8132090951711195
  - 0.8112157136215699
  - 0.8077134502923964
  - 0.8052170868347326
  - 0.7946280502250638
  train_matthews_corrcoef_macro:
  - 0.720472245874597
  - 0.7145367951399234
  - 0.7163120189052791
  - 0.709078035237963
  - 0.7047632323405795
  train_matthews_corrcoef_macro_oob:
  - 0.5247946713543926
  - 0.5215363221248178
  - 0.5433462288459208
  - 0.5395856245190698
  - 0.5205627982552622
  train_matthews_corrcoef_micro:
  - 0.7298721883569982
  - 0.7234416866205937
  - 0.7211809556223839
  - 0.7165822784048134
  - 0.7103195401000661
  train_matthews_corrcoef_micro_oob:
  - 0.5379030886994701
  - 0.5353727986067798
  - 0.5546396629038767
  - 0.5521386843574854
  - 0.5377540670849779
  train_matthews_corrcoef_samples:
  - 0.7137881743086283
  - 0.7116893928171456
  - 0.7008348039517438
  - 0.6932354395240493
  - 0.6843507711521067
  train_matthews_corrcoef_samples_oob:
  - 0.507877262687998
  - 0.5173505991686757
  - 0.5196640422224454
  - 0.5216772936573143
  - 0.4963003551042214
  train_matthews_corrcoef_weighted:
  - 0.7294465227291844
  - 0.7224300182946841
  - 0.7209783327899256
  - 0.7165098666439823
  - 0.7089913658871456
  train_matthews_corrcoef_weighted_oob:
  - 0.5257761973093869
  - 0.521463154460042
  - 0.5413367883982007
  - 0.542404332681395
  - 0.5214872928856323
  train_ndgc:
  - 0.9599922964690927
  - 0.9638091501976924
  - 0.9589985326205119
  - 0.9621759969754526
  - 0.9559440623912256
  train_ndgc_oob:
  - 0.8730619180893917
  - 0.8734029745249441
  - 0.870369900796805
  - 0.8670326063693014
  - 0.8592646438169644
  train_neg_coverage_error:
  - -2.090717299578059
  - -2.100418410041841
  - -2.1410526315789475
  - -2.1050420168067228
  - -2.1577825159914714
  train_neg_coverage_error_oob:
  - -2.679324894514768
  - -2.721757322175732
  - -2.738947368421053
  - -2.7184873949579833
  - -2.7739872068230276
  train_neg_hamming_loss_macro:
  - -0.11251758087201125
  - -0.11541143654114365
  - -0.11684210526315787
  - -0.11834733893557421
  - -0.12117981520966598
  train_neg_hamming_loss_macro_oob:
  - -0.1877637130801688
  - -0.18933054393305437
  - -0.18280701754385964
  - -0.1831232492997199
  - -0.1890547263681592
  train_neg_hamming_loss_micro:
  - -0.11251758087201125
  - -0.11541143654114365
  - -0.1168421052631579
  - -0.11834733893557423
  - -0.12117981520966596
  train_neg_hamming_loss_micro_oob:
  - -0.1877637130801688
  - -0.1893305439330544
  - -0.18280701754385964
  - -0.18312324929971988
  - -0.1890547263681592
  train_neg_hamming_loss_samples:
  - -0.11251758087201125
  - -0.11541143654114365
  - -0.1168421052631579
  - -0.11834733893557423
  - -0.12117981520966595
  train_neg_hamming_loss_samples_oob:
  - -0.1877637130801688
  - -0.1893305439330544
  - -0.1828070175438596
  - -0.18312324929971988
  - -0.18905472636815918
  train_neg_hamming_loss_weighted:
  - -0.11078826237054085
  - -0.1140648699923456
  - -0.11713004484304933
  - -0.11752653817432485
  - -0.12195435161853073
  train_neg_hamming_loss_weighted_oob:
  - -0.1922276563099348
  - -0.19403941788879028
  - -0.18809299032334198
  - -0.18647616526925734
  - -0.19373182787361892
  train_neg_label_ranking_loss:
  - -0.03939287388654477
  - -0.03869711761971176
  - -0.042286549707602344
  - -0.03880135387488329
  - -0.04641080312722103
  train_neg_label_ranking_loss_oob:
  - -0.147063994374121
  - -0.14971524872152486
  - -0.15087719298245614
  - -0.15295868347338937
  - -0.16154347311063727
  train_precision_macro:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.8816526610644259
  - 0.878820184790334
  train_precision_macro_oob:
  - 0.8122362869198311
  - 0.8106694560669457
  - 0.8171929824561402
  - 0.81687675070028
  - 0.8109452736318409
  train_precision_micro:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.8816526610644257
  - 0.8788201847903341
  train_precision_micro_oob:
  - 0.8122362869198312
  - 0.8106694560669456
  - 0.8171929824561404
  - 0.8168767507002801
  - 0.8109452736318408
  train_precision_samples:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.881652661064426
  - 0.8788201847903341
  train_precision_samples_oob:
  - 0.8122362869198312
  - 0.8106694560669456
  - 0.8171929824561405
  - 0.8168767507002802
  - 0.8109452736318409
  train_precision_weighted:
  - 0.8892117376294592
  - 0.8859351300076546
  - 0.8828699551569507
  - 0.8824734618256751
  - 0.8780456483814694
  train_precision_weighted_oob:
  - 0.8077723436900652
  - 0.8059605821112096
  - 0.811907009676658
  - 0.8135238347307425
  - 0.806268172126381
  train_recall_macro:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.8816526610644259
  - 0.878820184790334
  train_recall_macro_oob:
  - 0.8122362869198311
  - 0.8106694560669457
  - 0.8171929824561402
  - 0.81687675070028
  - 0.8109452736318409
  train_recall_micro:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.8816526610644257
  - 0.8788201847903341
  train_recall_micro_oob:
  - 0.8122362869198312
  - 0.8106694560669456
  - 0.8171929824561404
  - 0.8168767507002801
  - 0.8109452736318408
  train_recall_samples:
  - 0.8874824191279888
  - 0.8845885634588564
  - 0.8831578947368421
  - 0.881652661064426
  - 0.8788201847903341
  train_recall_samples_oob:
  - 0.8122362869198312
  - 0.8106694560669456
  - 0.8171929824561405
  - 0.8168767507002802
  - 0.8109452736318409
  train_recall_weighted:
  - 0.8892117376294592
  - 0.8859351300076546
  - 0.8828699551569507
  - 0.8824734618256751
  - 0.8780456483814694
  train_recall_weighted_oob:
  - 0.8077723436900652
  - 0.8059605821112096
  - 0.811907009676658
  - 0.8135238347307425
  - 0.806268172126381
  train_roc_auc_macro:
  - 0.9751150191179511
  - 0.9747577168873093
  - 0.9734875196111079
  - 0.9743682198847948
  - 0.9734442398745494
  train_roc_auc_macro_oob:
  - 0.8556643120870753
  - 0.8498583255826433
  - 0.8538065763398387
  - 0.853724394177107
  - 0.8474476914622847
  train_roc_auc_micro:
  - 0.9678444963895575
  - 0.967325704638131
  - 0.9663310690418062
  - 0.9666550959218557
  - 0.9651881404531353
  train_roc_auc_micro_oob:
  - 0.872599402888354
  - 0.8675236601387334
  - 0.8729135843750143
  - 0.8724070904456719
  - 0.8664073516969071
  train_roc_auc_samples:
  - 0.9606071261134552
  - 0.9613028823802883
  - 0.9577134502923976
  - 0.9611986461251167
  - 0.953589196872779
  train_roc_auc_samples_oob:
  - 0.852936005625879
  - 0.8502847512784751
  - 0.849122807017544
  - 0.8470413165266106
  - 0.8384565268893627
  train_roc_auc_weighted:
  - 0.9755259507440524
  - 0.9750084049771113
  - 0.9733528848544588
  - 0.9745173033131397
  - 0.9733946977846649
  train_roc_auc_weighted_oob:
  - 0.855158805733655
  - 0.8487402896153139
  - 0.8525378615589676
  - 0.85369799125051
  - 0.8466867090701176
start: 2023-12-22 01:50:40.185508
wrapper: null
