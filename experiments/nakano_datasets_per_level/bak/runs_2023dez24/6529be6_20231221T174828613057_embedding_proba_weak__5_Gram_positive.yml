active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmpmZmZnpPwCYmZmZmcm/AJqZmZmZ6T8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:49:35.110257
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__5
  params: {}
hash: 6529be64d3805e6a9625538e33ef1befcaccb52218783e13ff0974b3f02d6352
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6529be6_20231221T174828613057_embedding_proba_weak__5_Gram_positive.yml
results:
  fit_time:
  - 49.688880920410156
  - 49.52422308921814
  - 48.67835307121277
  - 50.62756586074829
  - 50.87384390830994
  score_time:
  - 4.406867980957031
  - 4.2528181076049805
  - 4.272714853286743
  - 4.406155347824097
  - 4.531327724456787
  test_average_precision_macro:
  - 0.848789862470859
  - 0.8157262935807524
  - 0.931738090285001
  - 0.9956646670226935
  - 0.9782163462121676
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.971945179781923
  - 0.9543387245522729
  - 0.9787027521888703
  - 0.9900113939551837
  - 0.9726372757511574
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9571428571428572
  - 0.9619741100323626
  - 0.9447115384615384
  - 0.9692556634304208
  - 0.9559294871794871
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9646692193302369
  - 0.9498241159052783
  - 0.981212455192187
  - 0.9957720652917129
  - 0.9749898896543503
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9259658580413297
  - 0.8852688573562362
  - 0.8956959706959708
  - 0.924403808087473
  - 0.9267399267399268
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8797524348207402
  - 0.834449305924393
  - 0.8490609241474033
  - 0.8787088135939654
  - 0.883021205451112
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8791946308724832
  - 0.8270509977827051
  - 0.844789356984479
  - 0.876993166287016
  - 0.8823529411764706
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.900952380952381
  - 0.8550161812297733
  - 0.8666666666666666
  - 0.8951456310679611
  - 0.905128205128205
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8624187561876238
  - 0.8025857199519785
  - 0.8159112426463764
  - 0.8609223213817143
  - 0.8636059290264897
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9571428571428572
  - 0.9619741100323624
  - 0.9447115384615384
  - 0.9692556634304207
  - 0.9559294871794872
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6235021589074663
  - 0.553100954157561
  - 0.5844923708092041
  - 0.6138557820877546
  - 0.6212606534485559
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8266235388742259
  - 0.7400499637687271
  - 0.7740990163348347
  - 0.823754471047914
  - 0.8309562111101493
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7650793650793651
  - 0.6569579288025891
  - 0.6730769230769231
  - 0.7378640776699029
  - 0.7788461538461539
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7986378681753473
  - 0.7104402698610991
  - 0.7421311372100253
  - 0.8007291509427352
  - 0.8076013932899595
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9688038109372538
  - 0.971702187630395
  - 0.9590382124402689
  - 0.9772295996879348
  - 0.9671665896724104
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1238095238095238
  - -1.1067961165048543
  - -1.1346153846153846
  - -1.0679611650485437
  - -1.125
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0642857142857143
  - -0.09466019417475728
  - -0.08413461538461538
  - -0.06553398058252427
  - -0.0625
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06428571428571428
  - -0.09466019417475728
  - -0.08413461538461539
  - -0.06553398058252427
  - -0.0625
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06428571428571428
  - -0.09466019417475728
  - -0.08413461538461539
  - -0.06553398058252427
  - -0.0625
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07403414195867027
  - -0.114731142643764
  - -0.10430402930402931
  - -0.0755961919125271
  - -0.07326007326007326
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0365079365079365
  - -0.03236245954692557
  - -0.041666666666666664
  - -0.022653721682847894
  - -0.038461538461538464
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9259658580413297
  - 0.8852688573562362
  - 0.8956959706959708
  - 0.924403808087473
  - 0.9267399267399268
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9357142857142857
  - 0.9053398058252428
  - 0.9158653846153846
  - 0.9344660194174758
  - 0.9375
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9259658580413297
  - 0.8852688573562362
  - 0.8956959706959708
  - 0.924403808087473
  - 0.9267399267399268
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9830027315656735
  - 0.9795230779890742
  - 0.9923953480848862
  - 0.9984847390838139
  - 0.988791170097737
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9864199014541521
  - 0.9813311688311688
  - 0.9901087122952075
  - 0.9962610362271028
  - 0.9885469300260298
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9634920634920635
  - 0.9676375404530745
  - 0.9583333333333333
  - 0.977346278317152
  - 0.9615384615384616
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9909362499592277
  - 0.9898949504422047
  - 0.9925241545893719
  - 0.9984578607476006
  - 0.9852696879699915
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9489983345814736
  - 0.8985691335317314
  - 0.874679163711764
  - 0.9701780108031673
  - 0.9242564333077846
  train_average_precision_macro_oob:
  - 0.918437308298211
  - 0.8633630544819291
  - 0.8309038737131851
  - 0.9111437119404395
  - 0.8788198939492898
  train_average_precision_micro:
  - 0.988605398942402
  - 0.9834070072817722
  - 0.9814542697240025
  - 0.9844229037718256
  - 0.9844520879764004
  train_average_precision_micro_oob:
  - 0.9811810676041754
  - 0.9737278612132914
  - 0.9735987306801693
  - 0.9745532535650762
  - 0.9787458289680563
  train_average_precision_samples:
  - 0.9720209339774556
  - 0.9707532051282052
  - 0.9688755020080322
  - 0.9679487179487178
  - 0.9712851405622491
  train_average_precision_samples_oob:
  - 0.965780998389694
  - 0.9671474358974359
  - 0.9556224899598394
  - 0.9629407051282051
  - 0.9660642570281125
  train_average_precision_weighted:
  - 0.9864556661653474
  - 0.9766096075637574
  - 0.9710338128671893
  - 0.9849768992730468
  - 0.9785754574463783
  train_average_precision_weighted_oob:
  - 0.9766876551977657
  - 0.9656654269916205
  - 0.9611759429629152
  - 0.971965454417353
  - 0.9683888952556485
  train_f1_macro:
  - 0.9281400966183575
  - 0.911658653846154
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_f1_macro_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433736
  train_f1_micro:
  - 0.9281400966183575
  - 0.9116586538461539
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_f1_micro_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433734
  train_f1_samples:
  - 0.9281400966183575
  - 0.9116586538461539
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_f1_samples_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433734
  train_f1_weighted:
  - 0.9133157242322084
  - 0.8920162474756748
  - 0.9155300628350724
  - 0.9110634157509158
  - 0.9253934397878595
  train_f1_weighted_oob:
  - 0.9166927327703055
  - 0.8907655590233156
  - 0.9080763244365019
  - 0.9131868131868132
  - 0.9242520320516515
  train_jaccard_macro:
  - 0.8677512951393072
  - 0.8406649639818435
  - 0.8672492896630828
  - 0.8573961939911884
  - 0.8762582297596375
  train_jaccard_macro_oob:
  - 0.8719808916975031
  - 0.8408360507673104
  - 0.8585531880181374
  - 0.8585502090612253
  - 0.8731677075978219
  train_jaccard_micro:
  - 0.8659154929577465
  - 0.8376587520706792
  - 0.8651685393258427
  - 0.8561070831009482
  - 0.8757062146892656
  train_jaccard_micro_oob:
  - 0.8701298701298701
  - 0.8366445916114791
  - 0.8557853549468977
  - 0.8571428571428571
  - 0.8725324309080654
  train_jaccard_samples:
  - 0.8863123993558775
  - 0.8596153846153846
  - 0.8862650602409637
  - 0.8782051282051282
  - 0.8949397590361445
  train_jaccard_samples_oob:
  - 0.8904991948470209
  - 0.8589743589743589
  - 0.8775903614457831
  - 0.8794871794871794
  - 0.8926907630522087
  train_jaccard_weighted:
  - 0.8421152989412275
  - 0.8074299189151452
  - 0.846123191476681
  - 0.8373050741979939
  - 0.861299672439081
  train_jaccard_weighted_oob:
  - 0.8480021721166641
  - 0.8070748039629079
  - 0.8342245186387321
  - 0.8411141652780497
  - 0.8593405458311372
  train_label_ranking_average_precision_score:
  - 0.9720209339774556
  - 0.9707532051282051
  - 0.968875502008032
  - 0.9679487179487178
  - 0.9712851405622491
  train_label_ranking_average_precision_score_oob:
  - 0.965780998389694
  - 0.9671474358974359
  - 0.9556224899598392
  - 0.9629407051282051
  - 0.9660642570281124
  train_matthews_corrcoef_macro:
  - 0.6062719167942772
  - 0.5671617627079585
  - 0.5997864392552203
  - 0.5893391234365503
  - 0.6150672944508739
  train_matthews_corrcoef_macro_oob:
  - 0.6112428285302964
  - 0.5653537418180787
  - 0.5874021934955929
  - 0.5884132233239148
  - 0.608134773235542
  train_matthews_corrcoef_micro:
  - 0.8068643659466141
  - 0.7612210301924516
  - 0.8051360750418961
  - 0.7913554886587576
  - 0.8219274046879833
  train_matthews_corrcoef_micro_oob:
  - 0.8132181601863908
  - 0.7591836784580289
  - 0.7901583252094876
  - 0.79272666528639
  - 0.8167308339805611
  train_matthews_corrcoef_samples:
  - 0.7220064821316978
  - 0.6550193121916167
  - 0.7234795588815814
  - 0.7043269230769231
  - 0.7439326525483588
  train_matthews_corrcoef_samples_oob:
  - 0.7332786238386223
  - 0.6542180301403347
  - 0.7017928118936296
  - 0.7083333333333333
  - 0.7393285956748095
  train_matthews_corrcoef_weighted:
  - 0.7789956338965214
  - 0.7312088029888404
  - 0.7782370435343353
  - 0.7644071192486046
  - 0.7963120306721213
  train_matthews_corrcoef_weighted_oob:
  - 0.78591889062165
  - 0.7283546677890432
  - 0.7621208336160398
  - 0.7665778296698675
  - 0.7911095523693936
  train_ndgc:
  - 0.9792140648832011
  - 0.9784463886637649
  - 0.9769765624201564
  - 0.9762928112249548
  - 0.9788123684614646
  train_ndgc_oob:
  - 0.9745319545248554
  - 0.975633689076215
  - 0.96710150408888
  - 0.972509297719239
  - 0.9749284433633036
  train_neg_coverage_error:
  - -1.0748792270531402
  - -1.0793269230769231
  - -1.0843373493975903
  - -1.0889423076923077
  - -1.074698795180723
  train_neg_coverage_error_oob:
  - -1.0942028985507246
  - -1.1009615384615385
  - -1.1156626506024097
  - -1.1129807692307692
  - -1.0939759036144578
  train_neg_hamming_loss_macro:
  - -0.07185990338164251
  - -0.08834134615384615
  - -0.07228915662650603
  - -0.07752403846153846
  - -0.06626506024096385
  train_neg_hamming_loss_macro_oob:
  - -0.06944444444444445
  - -0.08894230769230768
  - -0.07771084337349399
  - -0.07692307692307693
  - -0.0680722891566265
  train_neg_hamming_loss_micro:
  - -0.07185990338164251
  - -0.08834134615384616
  - -0.07228915662650602
  - -0.07752403846153846
  - -0.06626506024096386
  train_neg_hamming_loss_micro_oob:
  - -0.06944444444444445
  - -0.0889423076923077
  - -0.07771084337349397
  - -0.07692307692307693
  - -0.06807228915662651
  train_neg_hamming_loss_samples:
  - -0.07185990338164251
  - -0.08834134615384616
  - -0.07228915662650602
  - -0.07752403846153846
  - -0.06626506024096386
  train_neg_hamming_loss_samples_oob:
  - -0.06944444444444445
  - -0.0889423076923077
  - -0.07771084337349397
  - -0.07692307692307693
  - -0.06807228915662651
  train_neg_hamming_loss_weighted:
  - -0.08668427576779157
  - -0.10798375252432534
  - -0.08446993716492764
  - -0.08893658424908425
  - -0.07460656021214043
  train_neg_hamming_loss_weighted_oob:
  - -0.0833072672296945
  - -0.10923444097668443
  - -0.09192367556349802
  - -0.08681318681318682
  - -0.07574796794834843
  train_neg_label_ranking_loss:
  - -0.022544283413848627
  - -0.02363782051282051
  - -0.02550200803212851
  - -0.026241987179487176
  - -0.022289156626506025
  train_neg_label_ranking_loss_oob:
  - -0.028985507246376812
  - -0.03084935897435897
  - -0.03634538152610441
  - -0.034054487179487176
  - -0.028514056224899595
  train_precision_macro:
  - 0.9281400966183575
  - 0.911658653846154
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_precision_macro_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433736
  train_precision_micro:
  - 0.9281400966183575
  - 0.9116586538461539
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_precision_micro_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433734
  train_precision_samples:
  - 0.9281400966183575
  - 0.9116586538461539
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_precision_samples_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433734
  train_precision_weighted:
  - 0.9133157242322084
  - 0.8920162474756748
  - 0.9155300628350724
  - 0.9110634157509158
  - 0.9253934397878595
  train_precision_weighted_oob:
  - 0.9166927327703055
  - 0.8907655590233156
  - 0.9080763244365019
  - 0.9131868131868132
  - 0.9242520320516515
  train_recall_macro:
  - 0.9281400966183575
  - 0.911658653846154
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_recall_macro_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433736
  train_recall_micro:
  - 0.9281400966183575
  - 0.9116586538461539
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_recall_micro_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433734
  train_recall_samples:
  - 0.9281400966183575
  - 0.9116586538461539
  - 0.927710843373494
  - 0.9224759615384616
  - 0.9337349397590361
  train_recall_samples_oob:
  - 0.9305555555555556
  - 0.9110576923076923
  - 0.922289156626506
  - 0.9230769230769231
  - 0.9319277108433734
  train_recall_weighted:
  - 0.9133157242322084
  - 0.8920162474756748
  - 0.9155300628350724
  - 0.9110634157509158
  - 0.9253934397878595
  train_recall_weighted_oob:
  - 0.9166927327703055
  - 0.8907655590233156
  - 0.9080763244365019
  - 0.9131868131868132
  - 0.9242520320516515
  train_roc_auc_macro:
  - 0.9958398171837372
  - 0.9899482020931277
  - 0.9907781529600471
  - 0.9931020404410005
  - 0.9920828007316813
  train_roc_auc_macro_oob:
  - 0.9913001537063981
  - 0.9807662589328439
  - 0.9843387394817857
  - 0.9829387408961389
  - 0.987738476293956
  train_roc_auc_micro:
  - 0.9960225524181139
  - 0.9931295588080246
  - 0.992900014639145
  - 0.9938447404685347
  - 0.9941289323440354
  train_roc_auc_micro_oob:
  - 0.9921225247404981
  - 0.9870891681283608
  - 0.9887008914468869
  - 0.9880301638340223
  - 0.9911105717741874
  train_roc_auc_samples:
  - 0.9774557165861513
  - 0.9763621794871795
  - 0.9744979919678716
  - 0.9737580128205129
  - 0.977710843373494
  train_roc_auc_samples_oob:
  - 0.9710144927536232
  - 0.969150641025641
  - 0.9636546184738954
  - 0.9659455128205128
  - 0.9714859437751003
  train_roc_auc_weighted:
  - 0.9969346312919597
  - 0.9939360205640537
  - 0.9935734998666641
  - 0.9942268943291077
  - 0.9936656561744567
  train_roc_auc_weighted_oob:
  - 0.9923141491261499
  - 0.9880106624083211
  - 0.9904391152380542
  - 0.990015810980469
  - 0.9909692265705139
start: 2023-12-21 17:48:28.613057
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
