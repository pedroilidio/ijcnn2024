active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZAcCAZmZmZmYGQADNzMzMzPw/AJiZmZmZyb+AmZmZmZkBwA==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 19:31:53.632359
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__3
  params: {}
hash: 6713e505b57965bec59fa411c1d564c1f04e912490053d1af555c41859025c7f
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6713e50_20231221T193124704356_embedding_proba_weak__3_GrampositivePseAAC.yml
results:
  fit_time:
  - 15.620808124542236
  - 15.175013542175293
  - 15.2310152053833
  - 16.473050832748413
  - 15.625752925872803
  score_time:
  - 3.2845089435577393
  - 3.334622859954834
  - 3.192676544189453
  - 3.25356388092041
  - 3.1518759727478027
  test_average_precision_macro:
  - 0.39583650024639955
  - 0.4514747456583465
  - 0.392609519164072
  - 0.3802738086887505
  - 0.42176969843292667
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4939895316118206
  - 0.5727237791539197
  - 0.5416383359314529
  - 0.4686269518604552
  - 0.472973351838026
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6933962264150944
  - 0.778052805280528
  - 0.7230392156862744
  - 0.689102564102564
  - 0.7051886792452831
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.47984368084309614
  - 0.5527284551720679
  - 0.5213429203242205
  - 0.4416145964911487
  - 0.47741365188031615
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6659843360626558
  - 0.7493992117658369
  - 0.7021337946943482
  - 0.639423076923077
  - 0.6771982912068352
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6133125078884261
  - 0.6909407952813318
  - 0.639941317414129
  - 0.5882583574462278
  - 0.6203329953486875
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5909943714821764
  - 0.6763485477178424
  - 0.6222664015904572
  - 0.5639097744360902
  - 0.6
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6477987421383645
  - 0.7267326732673265
  - 0.675816993464052
  - 0.6186813186813187
  - 0.6578616352201256
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5077438527646783
  - 0.6052672641671818
  - 0.5448897523797762
  - 0.47788445943742963
  - 0.5188706630790548
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6933962264150942
  - 0.778052805280528
  - 0.7230392156862744
  - 0.689102564102564
  - 0.7051886792452831
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.12113340347395046
  - 0.28995841102530245
  - 0.1620456790363584
  - 0.052696921842718014
  - 0.15247069983910438
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2819132481368683
  - 0.45619991920406383
  - 0.33701295220744215
  - 0.22391604535954301
  - 0.3039234737753019
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2672955974842768
  - 0.4173732726572203
  - 0.31045751633986923
  - 0.21153846153846154
  - 0.289308176100629
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1629236074201571
  - 0.37877285131492533
  - 0.23524837318466796
  - 0.08450932142586587
  - 0.20026662670338563
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7715238546510259
  - 0.8359864555816842
  - 0.7937064977864802
  - 0.7686998541302767
  - 0.7803766252958858
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8018867924528301
  - -1.613861386138614
  - -1.7156862745098038
  - -1.7980769230769231
  - -1.7641509433962264
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2570754716981132
  - -0.19306930693069307
  - -0.23284313725490197
  - -0.27884615384615385
  - -0.25
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25707547169811323
  - -0.19306930693069307
  - -0.23284313725490197
  - -0.27884615384615385
  - -0.25
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25707547169811323
  - -0.19306930693069307
  - -0.23284313725490197
  - -0.27884615384615385
  - -0.25
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3340156639373443
  - -0.25060078823416326
  - -0.29786620530565167
  - -0.3605769230769231
  - -0.32280170879316483
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.26729559748427667
  - -0.19471947194719474
  - -0.23856209150326796
  - -0.2612179487179487
  - -0.25471698113207547
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6659843360626558
  - 0.7493992117658369
  - 0.7021337946943482
  - 0.639423076923077
  - 0.6771982912068352
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7429245283018868
  - 0.806930693069307
  - 0.7671568627450981
  - 0.7211538461538461
  - 0.75
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6659843360626558
  - 0.7493992117658369
  - 0.7021337946943482
  - 0.639423076923077
  - 0.6771982912068352
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6783833358265059
  - 0.725688850928398
  - 0.6195716436250414
  - 0.6791176839830683
  - 0.6431754552368678
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.763438946244215
  - 0.8099216204883399
  - 0.787357426630783
  - 0.7477480219111381
  - 0.755310312092085
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7327044025157234
  - 0.8052805280528053
  - 0.7614379084967321
  - 0.7387820512820512
  - 0.7452830188679247
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6612691923626274
  - 0.7178849121290175
  - 0.6936071360102786
  - 0.6394753312111789
  - 0.6475041569762224
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9622218655311315
  - 0.9527604801884857
  - 0.960280417310934
  - 0.9647028908082045
  - 0.9598603481702401
  train_average_precision_macro_oob:
  - 0.8459495933344654
  - 0.8844496355490079
  - 0.8626501058526921
  - 0.9052323396212925
  - 0.838512521473983
  train_average_precision_micro:
  - 0.9140365132565127
  - 0.8923992626918595
  - 0.9115746618508905
  - 0.919634417131932
  - 0.9059641448274215
  train_average_precision_micro_oob:
  - 0.8778423241429631
  - 0.8507188190416728
  - 0.8775229110334368
  - 0.8843037120315264
  - 0.864342363548487
  train_average_precision_samples:
  - 0.9630750605326877
  - 0.961323763955343
  - 0.9608313349320544
  - 0.9636546184738957
  - 0.9588377723970944
  train_average_precision_samples_oob:
  - 0.9543987086359966
  - 0.9529505582137162
  - 0.951039168665068
  - 0.9536144578313253
  - 0.9497578692493946
  train_average_precision_weighted:
  - 0.949798835155421
  - 0.9374930273007299
  - 0.9470739296375886
  - 0.9529597296288167
  - 0.9465252503098686
  train_average_precision_weighted_oob:
  - 0.9236556697287359
  - 0.9113651008988152
  - 0.922613420197778
  - 0.933792782608746
  - 0.9144877677138425
  train_f1_macro:
  - 0.9697336561743342
  - 0.9700956937799042
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917675
  train_f1_macro_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_f1_micro:
  - 0.9697336561743342
  - 0.9700956937799043
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917676
  train_f1_micro_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_f1_samples:
  - 0.9697336561743342
  - 0.9700956937799043
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917676
  train_f1_samples_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_f1_weighted:
  - 0.9700559165258592
  - 0.9703463203463204
  - 0.970351509766059
  - 0.9735806535494496
  - 0.9662584702214017
  train_f1_weighted_oob:
  - 0.954424837853688
  - 0.9539131920710868
  - 0.9508478727706671
  - 0.9547542688740572
  - 0.9507377149128154
  train_jaccard_macro:
  - 0.9419269788130358
  - 0.9427834580558395
  - 0.9427546500570545
  - 0.9482293328664366
  - 0.9364813184435833
  train_jaccard_macro_oob:
  - 0.9201855992215584
  - 0.9214992893735705
  - 0.9156883034957964
  - 0.9230649832213709
  - 0.9173274271231999
  train_jaccard_micro:
  - 0.9412455934195064
  - 0.9419279907084785
  - 0.9417927823050058
  - 0.9472140762463344
  - 0.9355594610427651
  train_jaccard_micro_oob:
  - 0.9198140615920977
  - 0.9207352096496266
  - 0.9150401836969001
  - 0.9224088013896931
  - 0.9164733178654292
  train_jaccard_samples:
  - 0.9570621468926553
  - 0.9578947368421052
  - 0.957154276578737
  - 0.9611244979919679
  - 0.9528652138821629
  train_jaccard_samples_oob:
  - 0.9412429378531074
  - 0.9438596491228071
  - 0.938609112709832
  - 0.9440963855421687
  - 0.9396287328490718
  train_jaccard_weighted:
  - 0.942723532579868
  - 0.9434224431840439
  - 0.9435833972808932
  - 0.9497736678426154
  - 0.9359263525660568
  train_jaccard_weighted_oob:
  - 0.9132191588688193
  - 0.9126985184813133
  - 0.9069956980290367
  - 0.9141180566206506
  - 0.907008243306094
  train_label_ranking_average_precision_score:
  - 0.9630750605326877
  - 0.9613237639553427
  - 0.9608313349320543
  - 0.9636546184738954
  - 0.9588377723970944
  train_label_ranking_average_precision_score_oob:
  - 0.9543987086359965
  - 0.9529505582137159
  - 0.9510391686650678
  - 0.953614457831325
  - 0.9497578692493945
  train_matthews_corrcoef_macro:
  - 0.7035181315217638
  - 0.7065590947838203
  - 0.7062646077677772
  - 0.711295364049761
  - 0.6969669720707538
  train_matthews_corrcoef_macro_oob:
  - 0.6769457246532158
  - 0.682242193997243
  - 0.6736372828713704
  - 0.6815058504777527
  - 0.674839170539723
  train_matthews_corrcoef_micro:
  - 0.9199369415730356
  - 0.9207773963513559
  - 0.9208371002299574
  - 0.9283991544273102
  - 0.9121635582502864
  train_matthews_corrcoef_micro_oob:
  - 0.888155674851248
  - 0.8894766510111016
  - 0.8812362705428713
  - 0.891787721543822
  - 0.8834486388758807
  train_matthews_corrcoef_samples:
  - 0.9245493627912795
  - 0.9237005646536594
  - 0.9250589219072456
  - 0.9335331014505737
  - 0.9184671203499057
  train_matthews_corrcoef_samples_oob:
  - 0.8810817223872837
  - 0.8859649122807017
  - 0.8754565566928111
  - 0.8847101217792273
  - 0.8780695748428373
  train_matthews_corrcoef_weighted:
  - 0.905815856674447
  - 0.9057352982238703
  - 0.9055688043964385
  - 0.9141779568760015
  - 0.8977324237456952
  train_matthews_corrcoef_weighted_oob:
  - 0.87090327887339
  - 0.8712818799455557
  - 0.8626416552518882
  - 0.8730019385562574
  - 0.8647457050577515
  train_ndgc:
  - 0.9726300321236757
  - 0.971375845326386
  - 0.9709747157375928
  - 0.9730960244600754
  - 0.96946425988449
  train_ndgc_oob:
  - 0.9662685568190856
  - 0.9648376747102234
  - 0.9638352789292661
  - 0.9655221654239622
  - 0.9627857633848116
  train_neg_coverage_error:
  - -1.0944309927360776
  - -1.0885167464114833
  - -1.0983213429256595
  - -1.0843373493975903
  - -1.1065375302663438
  train_neg_coverage_error_oob:
  - -1.1355932203389831
  - -1.138755980861244
  - -1.1486810551558753
  - -1.1301204819277109
  - -1.1501210653753027
  train_neg_hamming_loss_macro:
  - -0.03026634382566586
  - -0.029904306220095694
  - -0.02997601918465228
  - -0.027108433734939763
  - -0.033292978208232446
  train_neg_hamming_loss_macro_oob:
  - -0.04176755447941889
  - -0.04126794258373206
  - -0.04436450839328537
  - -0.04036144578313253
  - -0.04358353510895884
  train_neg_hamming_loss_micro:
  - -0.03026634382566586
  - -0.029904306220095694
  - -0.02997601918465228
  - -0.02710843373493976
  - -0.033292978208232446
  train_neg_hamming_loss_micro_oob:
  - -0.041767554479418885
  - -0.04126794258373206
  - -0.04436450839328537
  - -0.04036144578313253
  - -0.043583535108958835
  train_neg_hamming_loss_samples:
  - -0.03026634382566586
  - -0.029904306220095694
  - -0.02997601918465228
  - -0.02710843373493976
  - -0.033292978208232446
  train_neg_hamming_loss_samples_oob:
  - -0.041767554479418885
  - -0.04126794258373206
  - -0.04436450839328537
  - -0.04036144578313253
  - -0.043583535108958835
  train_neg_hamming_loss_weighted:
  - -0.02994408347414079
  - -0.02965367965367965
  - -0.029648490233941116
  - -0.026419346450550402
  - -0.03374152977859843
  train_neg_hamming_loss_weighted_oob:
  - -0.045575162146312014
  - -0.04608680792891318
  - -0.04915212722933291
  - -0.04524573112594262
  - -0.04926228508718449
  train_neg_label_ranking_loss:
  - -0.02824858757062147
  - -0.027910685805422643
  - -0.029576338928856912
  - -0.02650602409638554
  - -0.03228410008071025
  train_neg_label_ranking_loss_oob:
  - -0.04136400322841
  - -0.04465709728867623
  - -0.045563549160671464
  - -0.04156626506024096
  - -0.04620661824051654
  train_precision_macro:
  - 0.9697336561743342
  - 0.9700956937799042
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917675
  train_precision_macro_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_precision_micro:
  - 0.9697336561743342
  - 0.9700956937799043
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917676
  train_precision_micro_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_precision_samples:
  - 0.9697336561743342
  - 0.9700956937799043
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917676
  train_precision_samples_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_precision_weighted:
  - 0.9700559165258592
  - 0.9703463203463204
  - 0.970351509766059
  - 0.9735806535494496
  - 0.9662584702214017
  train_precision_weighted_oob:
  - 0.954424837853688
  - 0.9539131920710868
  - 0.9508478727706671
  - 0.9547542688740572
  - 0.9507377149128154
  train_recall_macro:
  - 0.9697336561743342
  - 0.9700956937799042
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917675
  train_recall_macro_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_recall_micro:
  - 0.9697336561743342
  - 0.9700956937799043
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917676
  train_recall_micro_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_recall_samples:
  - 0.9697336561743342
  - 0.9700956937799043
  - 0.9700239808153477
  - 0.9728915662650602
  - 0.9667070217917676
  train_recall_samples_oob:
  - 0.9582324455205811
  - 0.958732057416268
  - 0.9556354916067147
  - 0.9596385542168675
  - 0.9564164648910412
  train_recall_weighted:
  - 0.9700559165258592
  - 0.9703463203463204
  - 0.970351509766059
  - 0.9735806535494496
  - 0.9662584702214017
  train_recall_weighted_oob:
  - 0.954424837853688
  - 0.9539131920710868
  - 0.9508478727706671
  - 0.9547542688740572
  - 0.9507377149128154
  train_roc_auc_macro:
  - 0.9873330090370045
  - 0.9850913852431417
  - 0.9864455398740433
  - 0.9874664329306518
  - 0.9862567490714761
  train_roc_auc_macro_oob:
  - 0.9665976897077039
  - 0.9775416175690885
  - 0.9654777115058892
  - 0.9769013539596534
  - 0.9624111826999028
  train_roc_auc_micro:
  - 0.9856484043534404
  - 0.9837973528069375
  - 0.9849653419989448
  - 0.9860783939220306
  - 0.9842891678559986
  train_roc_auc_micro_oob:
  - 0.9651821862348179
  - 0.9650901414879052
  - 0.9664601218696844
  - 0.968577993598685
  - 0.9608112700123301
  train_roc_auc_samples:
  - 0.9717514124293785
  - 0.9720893141945773
  - 0.970423661071143
  - 0.9734939759036144
  - 0.9677158999192896
  train_roc_auc_samples_oob:
  - 0.95863599677159
  - 0.9553429027113237
  - 0.9544364508393285
  - 0.958433734939759
  - 0.9537933817594834
  train_roc_auc_weighted:
  - 0.9831616389196602
  - 0.9802728808290543
  - 0.9819044094405042
  - 0.9832825353243241
  - 0.9816711951658622
  train_roc_auc_weighted_oob:
  - 0.9760618281467218
  - 0.9764936412519606
  - 0.9735768792800822
  - 0.9777882998135409
  - 0.9724879515851196
start: 2023-12-21 19:31:24.704356
wrapper: null
