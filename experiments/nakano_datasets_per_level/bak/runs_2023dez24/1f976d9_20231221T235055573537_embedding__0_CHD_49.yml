active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/NDMzMzMz8z+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACMAAAAAAAAAIwAAAAAAAAAhAAAAAAAAAAEAAAAAAAADwPw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:51:04.339025
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__0
  params: {}
hash: 1f976d9abf986c6de5e959454ed40e1a588652bfc086576efb2b71e9c963d671
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1f976d9_20231221T235055573537_embedding__0_CHD_49.yml
results:
  fit_time:
  - 1.2876482009887695
  - 1.268941879272461
  - 1.3037056922912598
  - 1.2242560386657715
  - 1.245124101638794
  score_time:
  - 1.1066982746124268
  - 1.1160361766815186
  - 1.0882618427276611
  - 1.0860531330108643
  - 1.128126621246338
  test_average_precision_macro:
  - 0.5489776609891382
  - 0.49499809117186294
  - 0.5402654956690923
  - 0.5528370288517293
  - 0.5798084957553462
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7012947508161285
  - 0.6711558140765042
  - 0.709750037047093
  - 0.7340486929770852
  - 0.697923009917134
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7986232943469785
  - 0.7841252436647174
  - 0.791139403292181
  - 0.8005988786952091
  - 0.8092676767676767
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6730186206478888
  - 0.6146927224108294
  - 0.6636308916479251
  - 0.6897990051128585
  - 0.6626461515671014
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5818713450292399
  - 0.5862573099415206
  - 0.5570987654320988
  - 0.5672782874617738
  - 0.5636363636363636
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5818713450292398
  - 0.5862573099415205
  - 0.5570987654320988
  - 0.5672782874617737
  - 0.5636363636363636
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5818713450292398
  - 0.5862573099415205
  - 0.5570987654320988
  - 0.5672782874617737
  - 0.5636363636363636
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.4600049073733284
  - 0.4687768371978898
  - 0.4316363401729255
  - 0.4383318258172891
  - 0.4410191884240327
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.45030253382401714
  - 0.45306601223645854
  - 0.4276279709833017
  - 0.43903878991309564
  - 0.4327355878027504
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.41030927835051545
  - 0.41468459152016546
  - 0.386096256684492
  - 0.3959445037353255
  - 0.3924050632911392
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.42577656261866786
  - 0.433249791144528
  - 0.40692239858906526
  - 0.4135430318916558
  - 0.4095670995670997
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3146610729523507
  - 0.32031657320963164
  - 0.292324302448852
  - 0.2961772735301046
  - 0.2994066874350915
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7986232943469788
  - 0.7841252436647173
  - 0.8003986625514402
  - 0.8189475025484202
  - 0.8092676767676765
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.005119796850491378
  - 0.0
  - 0.012697672330939928
  - -0.007062928512718949
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.06643527469113612
  - 0.0
  - 0.04466682687733844
  - 0.031161547273454684
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.015018637364625526
  - 0.0
  - 0.0029011721652920913
  - 0.0040655781409087086
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.00902229934492187
  - 0.0
  - 0.017973465764217787
  - -0.01246399149303344
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8704647444631388
  - 0.8577778549988273
  - 0.8634549799464291
  - 0.8660920751046284
  - 0.8780758264085597
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.5789473684210527
  - -3.7017543859649122
  - -3.8055555555555554
  - -3.614678899082569
  - -3.7545454545454544
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4181286549707603
  - -0.4137426900584796
  - -0.44290123456790126
  - -0.4327217125382263
  - -0.43636363636363634
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.41812865497076024
  - -0.4137426900584795
  - -0.44290123456790126
  - -0.4327217125382263
  - -0.43636363636363634
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4181286549707603
  - -0.4137426900584796
  - -0.44290123456790126
  - -0.4327217125382263
  - -0.43636363636363634
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5399950926266716
  - -0.5312231628021101
  - -0.5683636598270745
  - -0.5616681741827111
  - -0.5589808115759672
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1933723196881092
  - -0.21527777777777776
  - -0.20910493827160495
  - -0.1760958205912334
  - -0.1961363636363636
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5818713450292399
  - 0.5862573099415206
  - 0.5570987654320988
  - 0.5672782874617738
  - 0.5636363636363636
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5818713450292398
  - 0.5862573099415205
  - 0.5570987654320988
  - 0.5672782874617737
  - 0.5636363636363636
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5818713450292398
  - 0.5862573099415205
  - 0.5570987654320988
  - 0.5672782874617737
  - 0.5636363636363636
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.4600049073733284
  - 0.4687768371978898
  - 0.4316363401729255
  - 0.4383318258172891
  - 0.4410191884240327
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5818713450292399
  - 0.5862573099415206
  - 0.5570987654320988
  - 0.5672782874617738
  - 0.5636363636363636
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5818713450292398
  - 0.5862573099415205
  - 0.5570987654320988
  - 0.5672782874617737
  - 0.5636363636363636
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5818713450292398
  - 0.5862573099415205
  - 0.5570987654320988
  - 0.5672782874617737
  - 0.5636363636363636
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.4600049073733284
  - 0.4687768371978898
  - 0.4316363401729255
  - 0.4383318258172891
  - 0.4410191884240327
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6131668090631993
  - 0.577544375012638
  - 0.6162999053331931
  - 0.5969996472690945
  - 0.6143452410540143
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7953930491618934
  - 0.775072917032716
  - 0.7879197351530303
  - 0.8073277502854969
  - 0.7919305347000065
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8066276803118909
  - 0.7847222222222222
  - .nan
  - .nan
  - 0.8038636363636363
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6158592167093412
  - 0.5756687511960228
  - 0.6042355139916116
  - 0.6478932808634635
  - 0.5769985716220658
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7924306578283119
  - 0.8050586941172716
  - 0.7890088808600019
  - 0.7925250840480191
  - 0.7866475631764015
  train_average_precision_macro_oob:
  - 0.4910529970517123
  - 0.5021129717779614
  - 0.49411432403363653
  - 0.5097839808385828
  - 0.5069399374141951
  train_average_precision_micro:
  - 0.8403539239934374
  - 0.843661467720132
  - 0.8408468524191807
  - 0.847205901344487
  - 0.8448307289249308
  train_average_precision_micro_oob:
  - 0.6782387995024992
  - 0.6871493852523118
  - 0.6746710136350322
  - 0.6863669282865766
  - 0.6865954420701276
  train_average_precision_samples:
  - 0.845386117409927
  - 0.8578451751070798
  - 0.851485210042257
  - 0.8579970104633782
  - 0.8657833957553058
  train_average_precision_samples_oob:
  - 0.7824609473418996
  - 0.7854906777525824
  - 0.7807637335321899
  - 0.7847502491280517
  - 0.786410736579276
  train_average_precision_weighted:
  - 0.8498780957619898
  - 0.8604988153884036
  - 0.8531718875376193
  - 0.8559542419725322
  - 0.8526532259528008
  train_average_precision_weighted_oob:
  - 0.6124883278733733
  - 0.6232074730677613
  - 0.6130587583383208
  - 0.6313543052382152
  - 0.629472460219014
  train_f1_macro:
  - 0.583522297808012
  - 0.5842781557067271
  - 0.5909768829231916
  - 0.5814648729446935
  - 0.5872659176029963
  train_f1_macro_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883668
  - 0.570627802690583
  - 0.5745318352059925
  train_f1_micro:
  - 0.5835222978080121
  - 0.5842781557067271
  - 0.5909768829231916
  - 0.5814648729446936
  - 0.5872659176029963
  train_f1_micro_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883669
  - 0.570627802690583
  - 0.5745318352059925
  train_f1_samples:
  - 0.583522297808012
  - 0.584278155706727
  - 0.5909768829231916
  - 0.5814648729446935
  - 0.5872659176029962
  train_f1_samples_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883669
  - 0.570627802690583
  - 0.5745318352059925
  train_f1_weighted:
  - 0.47050373377972476
  - 0.4725773962871943
  - 0.48046657483661087
  - 0.46513531038577516
  - 0.474762845655529
  train_f1_weighted_oob:
  - 0.4466150625462518
  - 0.44916954565421274
  - 0.45246817697800956
  - 0.4474305088982985
  - 0.4522358862445565
  train_jaccard_macro:
  - 0.4484094715020985
  - 0.4488150238470146
  - 0.4550029704611159
  - 0.44753771968804373
  - 0.4521045601321436
  train_jaccard_macro_oob:
  - 0.4386838290269481
  - 0.43967557125492734
  - 0.44380410752708194
  - 0.4398626439613824
  - 0.44332247257246693
  train_jaccard_micro:
  - 0.4119530416221985
  - 0.41270688734650296
  - 0.41942312781159036
  - 0.40990516332982085
  - 0.41569459172852596
  train_jaccard_micro_oob:
  - 0.39815059445178336
  - 0.3996297275852949
  - 0.40345368916797486
  - 0.3992156862745098
  - 0.4030478192327903
  train_jaccard_samples:
  - 0.43236151603498546
  - 0.4313033149767844
  - 0.4383731853530512
  - 0.4291275988585407
  - 0.43550659078748966
  train_jaccard_samples_oob:
  - 0.41714717633084974
  - 0.41760167270371357
  - 0.42114723457005343
  - 0.41708403703919394
  - 0.42158470742740406
  train_jaccard_weighted:
  - 0.3196391544885844
  - 0.3209302450403275
  - 0.3273390398333277
  - 0.31712335684856935
  - 0.3229440848246709
  train_jaccard_weighted_oob:
  - 0.3030872748722531
  - 0.30475676348993214
  - 0.30781498064902646
  - 0.30469621866450936
  - 0.30740831838051846
  train_label_ranking_average_precision_score:
  - 0.8521888384983616
  - 0.864647896195515
  - 0.8559594829729049
  - 0.860239162929745
  - 0.872524968789013
  train_label_ranking_average_precision_score_oob:
  - 0.7892636684303338
  - 0.7922933988410165
  - 0.7852380064628383
  - 0.786992401594419
  - 0.7931523096129827
  train_matthews_corrcoef_macro:
  - 0.04478409887717385
  - 0.03139708869579671
  - 0.042758594157082865
  - 0.0400519853269446
  - 0.030057089376616792
  train_matthews_corrcoef_macro_oob:
  - 0.012207386854657531
  - 0.014715367975209162
  - 0.004944118540474283
  - -0.013977040272653314
  - 0.0008043729596185063
  train_matthews_corrcoef_micro:
  - 0.14877364820404873
  - 0.1521757891435095
  - 0.1564036643304532
  - 0.11863443284600986
  - 0.1443421063743491
  train_matthews_corrcoef_micro_oob:
  - 0.053737265047043146
  - 0.07391955666376185
  - 0.044493799414706506
  - -0.01675897193692499
  - 0.04822567266646959
  train_matthews_corrcoef_samples:
  - 0.051174534082062684
  - 0.04823002093591881
  - 0.054310210567499836
  - 0.0325375680269165
  - 0.04758429672301187
  train_matthews_corrcoef_samples_oob:
  - 0.008184787427819359
  - 0.010980997342555589
  - 0.006953068351493919
  - -0.0004484304932735426
  - 0.009787045277792672
  train_matthews_corrcoef_weighted:
  - 0.07322397347266985
  - 0.055561340205127166
  - 0.07178057620388889
  - 0.06329591350778858
  - 0.05317185889721711
  train_matthews_corrcoef_weighted_oob:
  - 0.019364120792231185
  - 0.02604080824932302
  - 0.008756919126709036
  - -0.024691147798729024
  - 0.0014229589889314259
  train_ndgc:
  - 0.897667881768525
  - 0.9068612068061679
  - 0.9041160794771272
  - 0.9089589762776135
  - 0.9137082239373674
  train_ndgc_oob:
  - 0.8563092305786499
  - 0.8600316475582869
  - 0.8577413148291622
  - 0.860354560242183
  - 0.8585282783975314
  train_neg_coverage_error:
  - -3.4263038548752833
  - -3.376417233560091
  - -3.384787472035794
  - -3.3856502242152464
  - -3.3146067415730336
  train_neg_coverage_error_oob:
  - -3.7891156462585034
  - -3.7732426303854876
  - -3.7606263982102908
  - -3.733183856502242
  - -3.7168539325842698
  train_neg_hamming_loss_macro:
  - -0.4164777021919879
  - -0.41572184429327286
  - -0.4090231170768084
  - -0.41853512705530643
  - -0.41273408239700377
  train_neg_hamming_loss_macro_oob:
  - -0.43046107331821615
  - -0.4289493575207861
  - -0.42505592841163314
  - -0.42937219730941706
  - -0.4254681647940075
  train_neg_hamming_loss_micro:
  - -0.41647770219198793
  - -0.41572184429327286
  - -0.40902311707680833
  - -0.41853512705530643
  - -0.41273408239700377
  train_neg_hamming_loss_micro_oob:
  - -0.4304610733182162
  - -0.4289493575207861
  - -0.4250559284116331
  - -0.42937219730941706
  - -0.4254681647940075
  train_neg_hamming_loss_samples:
  - -0.41647770219198793
  - -0.4157218442932728
  - -0.40902311707680833
  - -0.41853512705530643
  - -0.4127340823970037
  train_neg_hamming_loss_samples_oob:
  - -0.43046107331821615
  - -0.42894935752078606
  - -0.4250559284116331
  - -0.42937219730941706
  - -0.42546816479400745
  train_neg_hamming_loss_weighted:
  - -0.5294962662202752
  - -0.5274226037128057
  - -0.5195334251633891
  - -0.5348646896142248
  - -0.5252371543444709
  train_neg_hamming_loss_weighted_oob:
  - -0.5533849374537482
  - -0.5508304543457873
  - -0.5475318230219904
  - -0.5525694911017015
  - -0.5477641137554435
  train_neg_label_ranking_loss:
  - -0.14174225245653818
  - -0.12901234567901235
  - -0.13740367884663188
  - -0.13423019431988042
  - -0.12077403245942571
  train_neg_label_ranking_loss_oob:
  - -0.21210632401108592
  - -0.20947971781305116
  - -0.2121613223962217
  - -0.20670777279521674
  - -0.20467540574282148
  train_precision_macro:
  - 0.583522297808012
  - 0.5842781557067271
  - 0.5909768829231916
  - 0.5814648729446935
  - 0.5872659176029963
  train_precision_macro_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883668
  - 0.570627802690583
  - 0.5745318352059925
  train_precision_micro:
  - 0.5835222978080121
  - 0.5842781557067271
  - 0.5909768829231916
  - 0.5814648729446936
  - 0.5872659176029963
  train_precision_micro_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883669
  - 0.570627802690583
  - 0.5745318352059925
  train_precision_samples:
  - 0.583522297808012
  - 0.584278155706727
  - 0.5909768829231916
  - 0.5814648729446935
  - 0.5872659176029962
  train_precision_samples_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883669
  - 0.570627802690583
  - 0.5745318352059925
  train_precision_weighted:
  - 0.47050373377972476
  - 0.4725773962871943
  - 0.48046657483661087
  - 0.46513531038577516
  - 0.474762845655529
  train_precision_weighted_oob:
  - 0.4466150625462518
  - 0.44916954565421274
  - 0.45246817697800956
  - 0.4474305088982985
  - 0.4522358862445565
  train_recall_macro:
  - 0.583522297808012
  - 0.5842781557067271
  - 0.5909768829231916
  - 0.5814648729446935
  - 0.5872659176029963
  train_recall_macro_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883668
  - 0.570627802690583
  - 0.5745318352059925
  train_recall_micro:
  - 0.5835222978080121
  - 0.5842781557067271
  - 0.5909768829231916
  - 0.5814648729446936
  - 0.5872659176029963
  train_recall_micro_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883669
  - 0.570627802690583
  - 0.5745318352059925
  train_recall_samples:
  - 0.583522297808012
  - 0.584278155706727
  - 0.5909768829231916
  - 0.5814648729446935
  - 0.5872659176029962
  train_recall_samples_oob:
  - 0.5695389266817839
  - 0.5710506424792139
  - 0.5749440715883669
  - 0.570627802690583
  - 0.5745318352059925
  train_recall_weighted:
  - 0.47050373377972476
  - 0.4725773962871943
  - 0.48046657483661087
  - 0.46513531038577516
  - 0.474762845655529
  train_recall_weighted_oob:
  - 0.4466150625462518
  - 0.44916954565421274
  - 0.45246817697800956
  - 0.4474305088982985
  - 0.4522358862445565
  train_roc_auc_macro:
  - 0.788376891873357
  - 0.7985934420505073
  - 0.7973087210660381
  - 0.796753093239945
  - 0.7958471330615544
  train_roc_auc_macro_oob:
  - 0.5251251163859513
  - 0.5526957217575621
  - 0.5597258810050726
  - 0.5795116745895936
  - 0.6037176406320351
  train_roc_auc_micro:
  - 0.8681710296684118
  - 0.8714488074461896
  - 0.8700334968875453
  - 0.8723092288888483
  - 0.8731451544981239
  train_roc_auc_micro_oob:
  - 0.7737486910994764
  - 0.778586969168121
  - 0.7757447304196629
  - 0.7823838863856103
  - 0.7809719593826148
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7848266985313797
  - 0.791834722089261
  - 0.7895451461027017
  - 0.7920691761506288
  - 0.7974606074735603
  train_roc_auc_weighted_oob:
  - 0.5474835272661173
  - 0.5661092237558841
  - 0.5660539850322298
  - 0.5766681056057491
  - 0.5858526428847133
start: 2023-12-21 23:50:55.573537
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
