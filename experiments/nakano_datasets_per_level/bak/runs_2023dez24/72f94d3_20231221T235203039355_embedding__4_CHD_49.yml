active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z80MzMzMzPzP8zMzMzMzPy/zMzMzMzM/L80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAMAAAAAAAADwvwAAAAAAAAAAAAAAAAAACEAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:52:33.440773
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__4
  params: {}
hash: 72f94d36c8fc17d1a3deb4bf039d1363849f9aee65d79d1dafaed506c388662a
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/72f94d3_20231221T235203039355_embedding__4_CHD_49.yml
results:
  fit_time:
  - 13.882161378860474
  - 13.942458629608154
  - 14.34599232673645
  - 16.287739038467407
  - 14.238379001617432
  score_time:
  - 3.6896774768829346
  - 3.852640390396118
  - 3.4322378635406494
  - 3.8831372261047363
  - 3.4374935626983643
  test_average_precision_macro:
  - 0.5080719851487668
  - 0.47408959376435234
  - 0.5266993015849715
  - 0.5574486377970679
  - 0.4945557208070556
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.678229197188366
  - 0.671674722981117
  - 0.690375412002784
  - 0.7146736294072862
  - 0.6644085156338919
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7752581120943952
  - 0.7727058531746032
  - 0.7973098098098096
  - 0.7924511316872428
  - 0.7876251251251251
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6316215879431953
  - 0.5912295503381403
  - 0.6394296176255962
  - 0.6720430602684166
  - 0.6005702216355353
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5811209439528023
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790124
  - 0.5720720720720721
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5811209439528023
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790124
  - 0.5720720720720721
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5811209439528024
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790123
  - 0.5720720720720721
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.4561261373551041
  - 0.4505325814536341
  - 0.44527572555254213
  - 0.4310841983852365
  - 0.4446973289078552
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.45106100416950445
  - 0.44625574601619
  - 0.43411951635525403
  - 0.42341935499803257
  - 0.44317528256824673
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4095634095634096
  - 0.4043887147335423
  - 0.3947643979057592
  - 0.3831376734258271
  - 0.40063091482649843
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4273493468183734
  - 0.42096088435374146
  - 0.4132132132132133
  - 0.4007535674202341
  - 0.41973401973401986
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3104952083559014
  - 0.3056706620249835
  - 0.3040705955273385
  - 0.2928175015961067
  - 0.3012114449457812
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7752581120943954
  - 0.772705853174603
  - 0.7973098098098099
  - 0.8017103909465026
  - 0.8056431431431433
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8507050428720646
  - 0.8548548265318517
  - 0.8706698731557475
  - 0.8662861438021253
  - 0.8576054855417514
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6991150442477876
  - -3.794642857142857
  - -3.774774774774775
  - -3.8703703703703702
  - -3.6216216216216215
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4188790560471977
  - -0.42410714285714285
  - -0.43393393393393387
  - -0.4459876543209877
  - -0.42792792792792794
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.41887905604719766
  - -0.42410714285714285
  - -0.4339339339339339
  - -0.44598765432098764
  - -0.42792792792792794
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.41887905604719766
  - -0.42410714285714285
  - -0.4339339339339339
  - -0.44598765432098764
  - -0.42792792792792794
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5438738626448959
  - -0.5494674185463659
  - -0.5547242744474578
  - -0.5689158016147635
  - -0.5553026710921448
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2167895771878073
  - -0.2279513888888889
  - -0.20613113113113113
  - -0.2015946502057613
  - -0.19084084084084085
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5811209439528023
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790124
  - 0.5720720720720721
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5811209439528023
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790124
  - 0.5720720720720721
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5811209439528024
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790123
  - 0.5720720720720721
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.4561261373551041
  - 0.4505325814536341
  - 0.44527572555254213
  - 0.4310841983852365
  - 0.4446973289078552
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5811209439528023
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790124
  - 0.5720720720720721
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5811209439528023
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790124
  - 0.5720720720720721
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5811209439528024
  - 0.5758928571428571
  - 0.566066066066066
  - 0.5540123456790123
  - 0.5720720720720721
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.4561261373551041
  - 0.4505325814536341
  - 0.44527572555254213
  - 0.4310841983852365
  - 0.4446973289078552
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5166655354087634
  - 0.5558431100297999
  - 0.5746121939292318
  - 0.5938915523121788
  - 0.5966687301394026
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7828429970687066
  - 0.763479758828596
  - 0.7814562242434812
  - 0.7968694277645517
  - 0.7818483215913802
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7832104228121928
  - 0.7720486111111112
  - 0.793868868868869
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5900655001233029
  - 0.5382351647142937
  - 0.5791621414109575
  - 0.590771260404206
  - 0.5425644497917105
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8104108955089021
  - 0.8178046903972941
  - 0.8217149359728738
  - 0.8146799034518533
  - 0.8124997088630366
  train_average_precision_macro_oob:
  - 0.5731794151507367
  - 0.6040940170237536
  - 0.5761613336897559
  - 0.5768137038333112
  - 0.5886270543799688
  train_average_precision_micro:
  - 0.8885423201968192
  - 0.8919754183631109
  - 0.8905262463899687
  - 0.8847248994391721
  - 0.8877676715985712
  train_average_precision_micro_oob:
  - 0.7484497686494784
  - 0.7607476790545042
  - 0.7497012713824635
  - 0.7431367033080554
  - 0.753108459480158
  train_average_precision_samples:
  - 0.8938536953242834
  - 0.8924222473037372
  - 0.8823573573573573
  - 0.8905014914243102
  - 0.8916103603603603
  train_average_precision_samples_oob:
  - 0.7967980140774258
  - 0.8033421118635564
  - 0.795095095095095
  - 0.7909924185930897
  - 0.7969782282282283
  train_average_precision_weighted:
  - 0.8748639919082452
  - 0.8819009213290293
  - 0.8788659363108211
  - 0.8721955242013992
  - 0.876747607604627
  train_average_precision_weighted_oob:
  - 0.7151601281425696
  - 0.7436080574500485
  - 0.719227990841082
  - 0.714107906558537
  - 0.7299888680108321
  train_f1_macro:
  - 0.6546003016591252
  - 0.6512415349887134
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_f1_macro_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951952
  train_f1_micro:
  - 0.6546003016591252
  - 0.6512415349887133
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_f1_micro_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951952
  train_f1_samples:
  - 0.6546003016591252
  - 0.6512415349887133
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_f1_samples_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951951
  train_f1_weighted:
  - 0.5883929556813344
  - 0.5811509463297128
  - 0.5779283220228102
  - 0.583219323535341
  - 0.590429793350456
  train_f1_weighted_oob:
  - 0.4457604805524461
  - 0.45172901730099724
  - 0.4491696420830279
  - 0.45191330949403136
  - 0.4473420674379698
  train_jaccard_macro:
  - 0.5087729701994859
  - 0.5054845765363912
  - 0.5052803010477414
  - 0.509441949880808
  - 0.5107320663612103
  train_jaccard_macro_oob:
  - 0.437736410875605
  - 0.44073534741515835
  - 0.4422783641208938
  - 0.4446055366533011
  - 0.43926306347760063
  train_jaccard_micro:
  - 0.48654708520179374
  - 0.48284518828451883
  - 0.48123436196830693
  - 0.4858725761772853
  - 0.4886839899413244
  train_jaccard_micro_oob:
  - 0.3972602739726027
  - 0.4011597258829731
  - 0.4013677012098895
  - 0.4038209892698246
  - 0.39879233394591757
  train_jaccard_samples:
  - 0.5108920491273433
  - 0.5059765666989143
  - 0.5028752778752779
  - 0.5105891126025355
  - 0.510961935961936
  train_jaccard_samples_oob:
  - 0.41523476523476527
  - 0.4195108127388037
  - 0.4190914940914941
  - 0.42176414189837014
  - 0.4166676416676417
  train_jaccard_weighted:
  - 0.42046919014257633
  - 0.4132830953105683
  - 0.4101589029831338
  - 0.41524286334975186
  - 0.4225043262623425
  train_jaccard_weighted_oob:
  - 0.3028569158439227
  - 0.3071139082014422
  - 0.30489246497504374
  - 0.30722009280880314
  - 0.3043418674564908
  train_label_ranking_average_precision_score:
  - 0.9006410256410252
  - 0.8991942563330815
  - 0.8891141141141136
  - 0.8949757643549581
  - 0.8938626126126121
  train_label_ranking_average_precision_score_oob:
  - 0.8035853443941665
  - 0.8101141208929005
  - 0.8018518518518511
  - 0.7954666915237373
  - 0.7992304804804793
  train_matthews_corrcoef_macro:
  - 0.12775120275013943
  - 0.1448714361834531
  - 0.1267720274885141
  - 0.122509389126546
  - 0.13921096075755693
  train_matthews_corrcoef_macro_oob:
  - 0.00883486686800772
  - 0.020432594765521516
  - 0.010022554582220523
  - 0.009048118386594991
  - -0.0004197697402652301
  train_matthews_corrcoef_micro:
  - 0.35439638525330874
  - 0.34478234011343173
  - 0.3374534402353394
  - 0.34255542512871506
  - 0.3552002711114155
  train_matthews_corrcoef_micro_oob:
  - 0.04448606369942583
  - 0.073989466378793
  - 0.050022722580681606
  - 0.04484570998576716
  - 0.025017518988443777
  train_matthews_corrcoef_samples:
  - 0.2432495513789174
  - 0.23275296884680133
  - 0.22303589123438153
  - 0.23359184333323138
  - 0.24118988541713798
  train_matthews_corrcoef_samples_oob:
  - 0.003873585202640972
  - 0.010931421733785586
  - 0.004446162879580067
  - 0.0037088781935496903
  - 0.002431687224174851
  train_matthews_corrcoef_weighted:
  - 0.20556840740184493
  - 0.21881611936685028
  - 0.20145292105222576
  - 0.19803504911618003
  - 0.21845350178527867
  train_matthews_corrcoef_weighted_oob:
  - 0.015607238683205273
  - 0.033913178657365955
  - 0.017730188421041033
  - 0.01600638265765098
  - -0.0007421909618638942
  train_ndgc:
  - 0.9331884423291551
  - 0.9309359494755259
  - 0.9236947625364951
  - 0.9315361680368157
  - 0.9336758320202772
  train_ndgc_oob:
  - 0.8680788771483915
  - 0.8712165321815685
  - 0.8661756469803716
  - 0.8632462691371634
  - 0.8690657177476724
  train_neg_coverage_error:
  - -3.262443438914027
  - -3.2325056433408577
  - -3.268018018018018
  - -3.261744966442953
  - -3.2837837837837838
  train_neg_coverage_error_oob:
  - -3.7149321266968327
  - -3.6659142212189617
  - -3.7027027027027026
  - -3.704697986577181
  - -3.725225225225225
  train_neg_hamming_loss_macro:
  - -0.34539969834087475
  - -0.3487584650112867
  - -0.3502252252252252
  - -0.3460104399701715
  - -0.3434684684684684
  train_neg_hamming_loss_macro_oob:
  - -0.43137254901960786
  - -0.42738901429646353
  - -0.42717717717717724
  - -0.42468307233407904
  - -0.4298048048048048
  train_neg_hamming_loss_micro:
  - -0.3453996983408748
  - -0.34875846501128666
  - -0.3502252252252252
  - -0.3460104399701715
  - -0.34346846846846846
  train_neg_hamming_loss_micro_oob:
  - -0.43137254901960786
  - -0.42738901429646353
  - -0.4271771771771772
  - -0.42468307233407904
  - -0.4298048048048048
  train_neg_hamming_loss_samples:
  - -0.3453996983408748
  - -0.34875846501128666
  - -0.3502252252252252
  - -0.34601043997017145
  - -0.34346846846846846
  train_neg_hamming_loss_samples_oob:
  - -0.43137254901960786
  - -0.4273890142964635
  - -0.4271771771771772
  - -0.424683072334079
  - -0.42980480480480476
  train_neg_hamming_loss_weighted:
  - -0.41160704431866557
  - -0.4188490536702872
  - -0.4220716779771898
  - -0.4167806764646589
  - -0.409570206649544
  train_neg_hamming_loss_weighted_oob:
  - -0.5542395194475539
  - -0.5482709826990029
  - -0.5508303579169721
  - -0.5480866905059686
  - -0.5526579325620302
  train_neg_label_ranking_loss:
  - -0.10226872800402212
  - -0.10171808377225984
  - -0.11058558558558557
  - -0.10974397216007954
  - -0.10852727727727729
  train_neg_label_ranking_loss_oob:
  - -0.19509175465057818
  - -0.18840606972661147
  - -0.19710335335335336
  - -0.20464827243350736
  - -0.19867992992992992
  train_precision_macro:
  - 0.6546003016591252
  - 0.6512415349887134
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_precision_macro_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951952
  train_precision_micro:
  - 0.6546003016591252
  - 0.6512415349887133
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_precision_micro_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951952
  train_precision_samples:
  - 0.6546003016591252
  - 0.6512415349887133
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_precision_samples_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951951
  train_precision_weighted:
  - 0.5883929556813344
  - 0.5811509463297128
  - 0.5779283220228102
  - 0.583219323535341
  - 0.590429793350456
  train_precision_weighted_oob:
  - 0.4457604805524461
  - 0.45172901730099724
  - 0.4491696420830279
  - 0.45191330949403136
  - 0.4473420674379698
  train_recall_macro:
  - 0.6546003016591252
  - 0.6512415349887134
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_recall_macro_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951952
  train_recall_micro:
  - 0.6546003016591252
  - 0.6512415349887133
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_recall_micro_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951952
  train_recall_samples:
  - 0.6546003016591252
  - 0.6512415349887133
  - 0.6497747747747747
  - 0.6539895600298284
  - 0.6565315315315315
  train_recall_samples_oob:
  - 0.5686274509803921
  - 0.5726109857035365
  - 0.5728228228228228
  - 0.5753169276659209
  - 0.5701951951951951
  train_recall_weighted:
  - 0.5883929556813344
  - 0.5811509463297128
  - 0.5779283220228102
  - 0.583219323535341
  - 0.590429793350456
  train_recall_weighted_oob:
  - 0.4457604805524461
  - 0.45172901730099724
  - 0.4491696420830279
  - 0.45191330949403136
  - 0.4473420674379698
  train_roc_auc_macro:
  - 0.8022603706663897
  - 0.8150590170370098
  - 0.8348580448812369
  - 0.7998972448489038
  - 0.7965343744400544
  train_roc_auc_macro_oob:
  - 0.6339022025831762
  - 0.6663403533534293
  - 0.6527790133308816
  - 0.6560128581825012
  - 0.6422883427062221
  train_roc_auc_micro:
  - 0.8933911427830084
  - 0.8971151399472742
  - 0.8964744380653931
  - 0.892677807736671
  - 0.8932990766086648
  train_roc_auc_micro_oob:
  - 0.8040677820816962
  - 0.8139554340532117
  - 0.8075884827348587
  - 0.8040694068537079
  - 0.8064188542637092
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8103537471741008
  - 0.822038337395033
  - 0.8241084016234232
  - 0.8036353886437174
  - 0.8119248724759375
  train_roc_auc_weighted_oob:
  - 0.684911093915926
  - 0.7066593870184711
  - 0.6923952086920335
  - 0.6808787884812592
  - 0.6941074650692258
start: 2023-12-21 23:52:03.039355
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
