active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMCAZmZmZmb2PwCamZmZmdk/ADMzMzMz47+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:00:04.515805
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__5
  params: {}
hash: b439bff7312c279b1db02e82c8257e62de55d2fc4b5a379fb04d7b392beec08a
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b439bff_20231221T105904560935_embedding_proba_weak__5_VirusPseAAC.yml
results:
  fit_time:
  - 49.21519923210144
  - 49.670897245407104
  - 49.40664291381836
  - 48.48013424873352
  - 48.24970984458923
  score_time:
  - 3.8146464824676514
  - 3.6460092067718506
  - 3.698150157928467
  - 3.8496487140655518
  - 3.5640087127685547
  test_average_precision_macro:
  - 0.42634574560883953
  - 0.25582035933214226
  - 0.42583929716066193
  - 0.44628755202317577
  - 0.50615493221418
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4386679328712195
  - 0.41378179808280136
  - 0.44792865348862104
  - 0.46035332426395525
  - 0.4790288218328788
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6412878787878787
  - 0.6603472222222222
  - 0.7032520325203252
  - 0.7007936507936507
  - 0.6728472222222222
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4521268714107364
  - 0.3911027087921778
  - 0.47936331817417555
  - 0.4851664065744972
  - 0.502885896552532
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.787878787878788
  - 0.7833333333333333
  - 0.7926829268292682
  - 0.8214285714285715
  - 0.7999999999999999
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7878787878787878
  - 0.7833333333333333
  - 0.7926829268292683
  - 0.8214285714285714
  - 0.8
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7878787878787878
  - 0.7833333333333334
  - 0.7926829268292683
  - 0.8214285714285713
  - 0.8
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6656468531468531
  - 0.6520408163265307
  - 0.6829268292682926
  - 0.7312271062271061
  - 0.6848958333333334
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6801927708598288
  - 0.6753433396724655
  - 0.6834756142739389
  - 0.7144689019126801
  - 0.6917504390737156
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.65
  - 0.6438356164383562
  - 0.6565656565656566
  - 0.696969696969697
  - 0.6666666666666666
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6677489177489178
  - 0.6589285714285715
  - 0.6747967479674798
  - 0.7205215419501134
  - 0.6892857142857143
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5231743226376575
  - 0.5103197574503069
  - 0.542132360432156
  - 0.5905669106006437
  - 0.5387795746014405
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6412878787878787
  - 0.6603472222222222
  - 0.7032520325203252
  - 0.7007936507936506
  - 0.6728472222222222
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.010960899109613426
  - 0.012171396931243328
  - 0.04479612612783195
  - 0.148955960852161
  - 0.03895389609297468
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.18790873207235295
  - 0.19950440164757982
  - 0.27918893701826625
  - 0.35561583603618574
  - 0.26142134858371285
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.15295050291215237
  - 0.14814297554212938
  - 0.23675263053096013
  - 0.27496864995358367
  - 0.2282455532033676
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.024777047748043828
  - 0.03370895708659652
  - 0.0895922522556639
  - 0.22872875076204585
  - 0.09328198363508011
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7340930905511704
  - 0.7485903113946043
  - 0.7832373221366505
  - 0.7766752988763476
  - 0.7589267682897461
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.3863636363636362
  - -2.325
  - -2.268292682926829
  - -2.3095238095238093
  - -2.375
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21212121212121207
  - -0.2166666666666667
  - -0.20731707317073175
  - -0.17857142857142858
  - -0.20000000000000004
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21212121212121213
  - -0.21666666666666667
  - -0.2073170731707317
  - -0.17857142857142858
  - -0.2
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2121212121212121
  - -0.2166666666666667
  - -0.20731707317073167
  - -0.17857142857142855
  - -0.19999999999999998
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3343531468531469
  - -0.34795918367346934
  - -0.3170731707317073
  - -0.26877289377289376
  - -0.3151041666666667
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23295454545454544
  - -0.22743055555555552
  - -0.1932249322493225
  - -0.2101190476190476
  - -0.23395833333333335
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.787878787878788
  - 0.7833333333333333
  - 0.7926829268292682
  - 0.8214285714285715
  - 0.7999999999999999
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7878787878787878
  - 0.7833333333333333
  - 0.7926829268292683
  - 0.8214285714285714
  - 0.8
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7878787878787878
  - 0.7833333333333334
  - 0.7926829268292683
  - 0.8214285714285713
  - 0.8
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6656468531468531
  - 0.6520408163265307
  - 0.6829268292682926
  - 0.7312271062271061
  - 0.6848958333333334
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.787878787878788
  - 0.7833333333333333
  - 0.7926829268292682
  - 0.8214285714285715
  - 0.7999999999999999
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7878787878787878
  - 0.7833333333333333
  - 0.7926829268292683
  - 0.8214285714285714
  - 0.8
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7878787878787878
  - 0.7833333333333334
  - 0.7926829268292683
  - 0.8214285714285713
  - 0.8
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6656468531468531
  - 0.6520408163265307
  - 0.6829268292682926
  - 0.7312271062271061
  - 0.6848958333333334
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6374906702112585
  - 0.4370411812067822
  - 0.6231868180397592
  - 0.6510346536275328
  - 0.6700186339632471
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7729499274310596
  - 0.751362325034726
  - 0.7842131724484666
  - 0.7820192307692307
  - 0.7838541666666666
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7670454545454546
  - 0.7725694444444444
  - 0.8067750677506774
  - 0.7898809523809524
  - 0.7660416666666666
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6025221227144304
  - 0.5114582064709942
  - 0.6270672122748248
  - 0.6392712550607288
  - 0.623658325044994
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9437553216709204
  - 0.9746510046252076
  - 0.9728091744176303
  - 0.9661077389235838
  - 0.9373976991084377
  train_average_precision_macro_oob:
  - 0.7059136518485065
  - 0.8139450442822698
  - 0.7544185182528067
  - 0.742719543521645
  - 0.6972621943543817
  train_average_precision_micro:
  - 0.9758371207010079
  - 0.9815222486887928
  - 0.9944055791987908
  - 0.9904821046222659
  - 0.9516903818432161
  train_average_precision_micro_oob:
  - 0.8934849923132524
  - 0.9261213496544682
  - 0.9257191829147965
  - 0.9108238107736706
  - 0.866829094208245
  train_average_precision_samples:
  - 0.9744376278118608
  - 0.9840319361277444
  - 0.9951807228915662
  - 0.9853535353535352
  - 0.9535928143712575
  train_average_precision_samples_oob:
  - 0.894972733469666
  - 0.9450099800399201
  - 0.9322289156626506
  - 0.9105050505050504
  - 0.8828343313373254
  train_average_precision_weighted:
  - 0.9762730321587303
  - 0.9867629992825219
  - 0.9923552173771665
  - 0.9873036569345023
  - 0.9644100140544236
  train_average_precision_weighted_oob:
  - 0.8689853652013394
  - 0.9222905228971998
  - 0.9087657074148964
  - 0.8882908536536324
  - 0.8514356178927095
  train_f1_macro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_f1_macro_oob:
  - 0.925357873210634
  - 0.934131736526946
  - 0.930722891566265
  - 0.9272727272727272
  - 0.934131736526946
  train_f1_micro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_f1_micro_oob:
  - 0.9253578732106339
  - 0.9341317365269461
  - 0.9307228915662651
  - 0.9272727272727272
  - 0.9341317365269461
  train_f1_samples:
  - 0.948875255623722
  - 0.9590818363273454
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_f1_samples_oob:
  - 0.9253578732106338
  - 0.9341317365269461
  - 0.9307228915662651
  - 0.9272727272727272
  - 0.9341317365269463
  train_f1_weighted:
  - 0.9660122699386503
  - 0.9729506504232914
  - 0.9706887250494517
  - 0.974030303030303
  - 0.9591992485617
  train_f1_weighted_oob:
  - 0.9387423312883436
  - 0.9502079584673018
  - 0.949319666726608
  - 0.9426969696969697
  - 0.9429376541035577
  train_jaccard_macro:
  - 0.9047878891273506
  - 0.9232752779165079
  - 0.910199619501945
  - 0.9154826390827564
  - 0.8993200052138418
  train_jaccard_macro_oob:
  - 0.8636438051386034
  - 0.8779722461760496
  - 0.8735359120602193
  - 0.8671366538624943
  - 0.8771863008241647
  train_jaccard_micro:
  - 0.9027237354085603
  - 0.9213806327900288
  - 0.9080459770114943
  - 0.9130434782608695
  - 0.8977272727272727
  train_jaccard_micro_oob:
  - 0.8610846812559467
  - 0.8764044943820225
  - 0.8704225352112676
  - 0.864406779661017
  - 0.8764044943820225
  train_jaccard_samples:
  - 0.9154250657318143
  - 0.9315654405474764
  - 0.921113023522662
  - 0.9253968253968254
  - 0.9118905047048761
  train_jaccard_samples_oob:
  - 0.8780309669880222
  - 0.8920729968634159
  - 0.8858290304073436
  - 0.8828282828282827
  - 0.8929284288565724
  train_jaccard_weighted:
  - 0.9358879080354836
  - 0.9485431579940341
  - 0.944672455085506
  - 0.9511539802383742
  - 0.9227411855097472
  train_jaccard_weighted_oob:
  - 0.8871493483934867
  - 0.9066653490435135
  - 0.9065852917356159
  - 0.8942001305789172
  - 0.892564553187085
  train_label_ranking_average_precision_score:
  - 0.9744376278118608
  - 0.9840319361277444
  - 0.9951807228915662
  - 0.9853535353535352
  - 0.9535928143712575
  train_label_ranking_average_precision_score_oob:
  - 0.894972733469666
  - 0.9450099800399201
  - 0.9322289156626508
  - 0.9105050505050506
  - 0.8828343313373254
  train_matthews_corrcoef_macro:
  - 0.4636731348766016
  - 0.655582444960983
  - 0.4682515962230758
  - 0.4782544000397031
  - 0.4609930058660165
  train_matthews_corrcoef_macro_oob:
  - 0.36664370449619904
  - 0.41091576239427163
  - 0.369460090053277
  - 0.3628174083951319
  - 0.42510697955969673
  train_matthews_corrcoef_micro:
  - 0.8382054641020169
  - 0.8706915616549074
  - 0.8472614832704376
  - 0.8559441973109534
  - 0.8279719202288895
  train_matthews_corrcoef_micro_oob:
  - 0.7598764817835069
  - 0.7881663953737069
  - 0.7773482585631815
  - 0.7652691551513695
  - 0.7877803716689405
  train_matthews_corrcoef_samples:
  - 0.7823686459664001
  - 0.8182420369161053
  - 0.7769700947206907
  - 0.8084031938139575
  - 0.7767145582578261
  train_matthews_corrcoef_samples_oob:
  - 0.6687973290365393
  - 0.6936643520221677
  - 0.6587022903108493
  - 0.6774365801432404
  - 0.7235729340114015
  train_matthews_corrcoef_weighted:
  - 0.7660318340404327
  - 0.8331608922809604
  - 0.7758751775712068
  - 0.7851607769090427
  - 0.7524581239094816
  train_matthews_corrcoef_weighted_oob:
  - 0.6719437982781532
  - 0.7130745378687042
  - 0.6890849447070705
  - 0.674874211343544
  - 0.7101039077082388
  train_ndgc:
  - 0.9813936123786494
  - 0.988165982121472
  - 0.9963063422122562
  - 0.9891948207145641
  - 0.9656561883022442
  train_ndgc_oob:
  - 0.9227550511344669
  - 0.9603964039310493
  - 0.951209661884251
  - 0.9345956942771665
  - 0.9140350901129406
  train_neg_coverage_error:
  - -1.2822085889570551
  - -1.251497005988024
  - -1.2349397590361446
  - -1.2424242424242424
  - -1.3233532934131738
  train_neg_coverage_error_oob:
  - -1.5766871165644172
  - -1.407185628742515
  - -1.4397590361445782
  - -1.5393939393939393
  - -1.6347305389221556
  train_neg_hamming_loss_macro:
  - -0.05112474437627812
  - -0.040918163672654696
  - -0.04819277108433736
  - -0.04545454545454546
  - -0.05389221556886228
  train_neg_hamming_loss_macro_oob:
  - -0.07464212678936605
  - -0.0658682634730539
  - -0.06927710843373495
  - -0.07272727272727274
  - -0.0658682634730539
  train_neg_hamming_loss_micro:
  - -0.05112474437627812
  - -0.04091816367265469
  - -0.04819277108433735
  - -0.045454545454545456
  - -0.05389221556886228
  train_neg_hamming_loss_micro_oob:
  - -0.07464212678936605
  - -0.0658682634730539
  - -0.06927710843373494
  - -0.07272727272727272
  - -0.0658682634730539
  train_neg_hamming_loss_samples:
  - -0.05112474437627811
  - -0.04091816367265468
  - -0.048192771084337345
  - -0.045454545454545456
  - -0.05389221556886228
  train_neg_hamming_loss_samples_oob:
  - -0.07464212678936603
  - -0.0658682634730539
  - -0.06927710843373494
  - -0.07272727272727272
  - -0.0658682634730539
  train_neg_hamming_loss_weighted:
  - -0.03398773006134969
  - -0.027049349576708653
  - -0.029311274950548465
  - -0.025969696969696972
  - -0.04080075143829987
  train_neg_hamming_loss_weighted_oob:
  - -0.06125766871165644
  - -0.04979204153269815
  - -0.050680333273392074
  - -0.05730303030303031
  - -0.057062345896442414
  train_neg_label_ranking_loss:
  - -0.010582822085889572
  - -0.00718562874251497
  - -0.004819277108433735
  - -0.006363636363636364
  - -0.02065868263473054
  train_neg_label_ranking_loss_oob:
  - -0.06891615541922291
  - -0.03502994011976048
  - -0.041549531459170015
  - -0.061346801346801344
  - -0.07889221556886228
  train_precision_macro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_precision_macro_oob:
  - 0.925357873210634
  - 0.934131736526946
  - 0.930722891566265
  - 0.9272727272727272
  - 0.934131736526946
  train_precision_micro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_precision_micro_oob:
  - 0.9253578732106339
  - 0.9341317365269461
  - 0.9307228915662651
  - 0.9272727272727272
  - 0.9341317365269461
  train_precision_samples:
  - 0.948875255623722
  - 0.9590818363273454
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_precision_samples_oob:
  - 0.9253578732106338
  - 0.9341317365269461
  - 0.9307228915662651
  - 0.9272727272727272
  - 0.9341317365269463
  train_precision_weighted:
  - 0.9660122699386503
  - 0.9729506504232914
  - 0.9706887250494517
  - 0.974030303030303
  - 0.9591992485617
  train_precision_weighted_oob:
  - 0.9387423312883436
  - 0.9502079584673018
  - 0.949319666726608
  - 0.9426969696969697
  - 0.9429376541035577
  train_recall_macro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_recall_macro_oob:
  - 0.925357873210634
  - 0.934131736526946
  - 0.930722891566265
  - 0.9272727272727272
  - 0.934131736526946
  train_recall_micro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_recall_micro_oob:
  - 0.9253578732106339
  - 0.9341317365269461
  - 0.9307228915662651
  - 0.9272727272727272
  - 0.9341317365269461
  train_recall_samples:
  - 0.948875255623722
  - 0.9590818363273454
  - 0.9518072289156626
  - 0.9545454545454546
  - 0.9461077844311377
  train_recall_samples_oob:
  - 0.9253578732106338
  - 0.9341317365269461
  - 0.9307228915662651
  - 0.9272727272727272
  - 0.9341317365269463
  train_recall_weighted:
  - 0.9660122699386503
  - 0.9729506504232914
  - 0.9706887250494517
  - 0.974030303030303
  - 0.9591992485617
  train_recall_weighted_oob:
  - 0.9387423312883436
  - 0.9502079584673018
  - 0.949319666726608
  - 0.9426969696969697
  - 0.9429376541035577
  train_roc_auc_macro:
  - 0.9938901311636913
  - 0.9971036852987935
  - 0.9978060134310134
  - 0.99766664002774
  - 0.9915328041650566
  train_roc_auc_macro_oob:
  - 0.9575006432986175
  - 0.9735844221593251
  - 0.9664012799320636
  - 0.959712309911318
  - 0.9446209221933053
  train_roc_auc_micro:
  - 0.9939910025706942
  - 0.9969851476907712
  - 0.9981100785381269
  - 0.9973670886075949
  - 0.9886296623912723
  train_roc_auc_micro_oob:
  - 0.95603470437018
  - 0.9713743164176896
  - 0.9677586908226165
  - 0.9601835443037975
  - 0.9477247039166544
  train_roc_auc_samples:
  - 0.9894171779141104
  - 0.9928143712574851
  - 0.9951807228915662
  - 0.9936363636363635
  - 0.9793413173652695
  train_roc_auc_samples_oob:
  - 0.931083844580777
  - 0.9649700598802398
  - 0.95845046854083
  - 0.9386531986531986
  - 0.9211077844311376
  train_roc_auc_weighted:
  - 0.9938207776514532
  - 0.9958903931637845
  - 0.9991263918502724
  - 0.9986622078809032
  - 0.9890798385417875
  train_roc_auc_weighted_oob:
  - 0.9713983906594392
  - 0.9841926157309235
  - 0.9847891584645316
  - 0.9807292280010229
  - 0.9631598607573159
start: 2023-12-21 10:59:04.560935
wrapper: null
