active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AZmZmZmb2P2BmZmZmZhbAAJqZmZmZ2T+gmZmZmZkRQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:14:56.457425
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__8
  params: {}
hash: 8491487d97db02ba26edab1c84b5e4dc3ba64e41e563084ca22cdd857609cda3
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8491487_20231221T110611536227_embedding_proba_weak__8_VirusPseAAC.yml
results:
  fit_time:
  - 492.1192514896393
  - 494.2854619026184
  - 510.7183518409729
  - 509.86246514320374
  - 510.3094425201416
  score_time:
  - 5.413174629211426
  - 5.3295814990997314
  - 5.29175877571106
  - 5.278764724731445
  - 4.967165946960449
  test_average_precision_macro:
  - 0.4130729073707846
  - 0.3415992246826027
  - 0.396590439584993
  - 0.4034622565351047
  - 0.39841869440022576
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.44869335279532757
  - 0.4617645097585783
  - 0.3790056717131937
  - 0.40925656650678005
  - 0.4350658166586433
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.5973544973544973
  - 0.5952083333333333
  - 0.6132978723404255
  - 0.608130081300813
  - 0.6896396396396395
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4551558518385291
  - 0.4954935416560465
  - 0.4021140552130429
  - 0.4409138290877208
  - 0.4575057185138656
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7896825396825397
  - 0.8125
  - 0.8085106382978724
  - 0.7886178861788617
  - 0.7702702702702702
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7896825396825397
  - 0.8125
  - 0.8085106382978723
  - 0.7886178861788617
  - 0.7702702702702703
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7896825396825398
  - 0.8125
  - 0.8085106382978725
  - 0.7886178861788619
  - 0.7702702702702704
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6746031746031746
  - 0.7125
  - 0.6996726677577741
  - 0.651219512195122
  - 0.6420297848869279
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6804280133799585
  - 0.7052801864207648
  - 0.7028529453517173
  - 0.6832602744032449
  - 0.6573245238966546
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6524590163934426
  - 0.6842105263157895
  - 0.6785714285714286
  - 0.6510067114093959
  - 0.6263736263736264
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6791383219954649
  - 0.7011904761904763
  - 0.6982776089159068
  - 0.6713124274099883
  - 0.6480051480051481
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5322779552150935
  - 0.5685012590264823
  - 0.5574903704146539
  - 0.5059795743000823
  - 0.4976131960006849
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.5973544973544973
  - 0.5952083333333331
  - 0.6132978723404254
  - 0.6081300813008129
  - 0.6896396396396395
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03867063408064478
  - 0.07736380436803335
  - 0.04122629236798647
  - 0.04482254288620587
  - 0.011054381845391833
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2741890903541013
  - 0.31316761008012295
  - 0.23962427388437993
  - 0.19569986269187806
  - 0.2114847221493365
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.24430495137185293
  - 0.21615124735378854
  - 0.19459680625854345
  - 0.1450898365378174
  - 0.1791446601509229
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.07734126816128956
  - 0.15782216091078802
  - 0.08164730977012792
  - 0.04418540395037422
  - 0.022529534776526684
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7021348143537148
  - 0.6963869707305577
  - 0.7108004489754794
  - 0.7085622479062448
  - 0.7704407509676894
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.5952380952380953
  - -2.7
  - -2.425531914893617
  - -2.4634146341463414
  - -2.5405405405405403
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21031746031746032
  - -0.1875
  - -0.19148936170212763
  - -0.21138211382113822
  - -0.22972972972972971
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21031746031746032
  - -0.1875
  - -0.19148936170212766
  - -0.21138211382113822
  - -0.22972972972972974
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2103174603174603
  - -0.1875
  - -0.19148936170212758
  - -0.2113821138211382
  - -0.22972972972972974
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3253968253968254
  - -0.2875
  - -0.30032733224222585
  - -0.348780487804878
  - -0.35797021511307225
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2749338624338624
  - -0.29937500000000006
  - -0.26914893617021274
  - -0.24695121951219512
  - -0.24421921921921919
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7896825396825397
  - 0.8125
  - 0.8085106382978724
  - 0.7886178861788617
  - 0.7702702702702702
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7896825396825397
  - 0.8125
  - 0.8085106382978723
  - 0.7886178861788617
  - 0.7702702702702703
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7896825396825398
  - 0.8125
  - 0.8085106382978725
  - 0.7886178861788619
  - 0.7702702702702704
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6746031746031746
  - 0.7125
  - 0.6996726677577741
  - 0.651219512195122
  - 0.6420297848869279
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7896825396825397
  - 0.8125
  - 0.8085106382978724
  - 0.7886178861788617
  - 0.7702702702702702
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7896825396825397
  - 0.8125
  - 0.8085106382978723
  - 0.7886178861788617
  - 0.7702702702702703
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7896825396825398
  - 0.8125
  - 0.8085106382978725
  - 0.7886178861788619
  - 0.7702702702702704
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6746031746031746
  - 0.7125
  - 0.6996726677577741
  - 0.651219512195122
  - 0.6420297848869279
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5309048882710979
  - 0.5482523952792494
  - 0.5931202798325069
  - 0.6460324592038147
  - 0.558973425636139
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7268559164959516
  - 0.7634736842105263
  - 0.7391304347826086
  - 0.7678571428571429
  - 0.7586410286658015
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7250661375661376
  - 0.7006249999999999
  - 0.7308510638297872
  - 0.7530487804878049
  - 0.7557807807807808
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5370367094206104
  - 0.6093425897773723
  - 0.5556565243764523
  - 0.587303228694533
  - 0.5866885254311193
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9410574158677513
  - 0.9468675147816846
  - 0.9411883277672218
  - 0.9809129972729207
  - 0.9510978334061834
  train_average_precision_macro_oob:
  - 0.7553214216144452
  - 0.7387940084343035
  - 0.6877057789666295
  - 0.7574509680978045
  - 0.7722320827045209
  train_average_precision_micro:
  - 0.9589605901659289
  - 0.9558432459261827
  - 0.9821161823700438
  - 0.9768874459870975
  - 0.9835341561436396
  train_average_precision_micro_oob:
  - 0.8980491000226756
  - 0.8649704909100127
  - 0.8921397293213815
  - 0.8993545554757816
  - 0.9177893295822701
  train_average_precision_samples:
  - 0.9868686868686868
  - 0.9670658682634731
  - 0.9776041666666666
  - 0.9799196787148594
  - 0.986764705882353
  train_average_precision_samples_oob:
  - 0.9234343434343435
  - 0.9008982035928143
  - 0.8865972222222223
  - 0.9157630522088352
  - 0.9347058823529412
  train_average_precision_weighted:
  - 0.963368098035009
  - 0.965751477075369
  - 0.9789241728780109
  - 0.9889797511115758
  - 0.98328884375689
  train_average_precision_weighted_oob:
  - 0.9011902786372136
  - 0.8600478713456284
  - 0.867341865283752
  - 0.8926307182183183
  - 0.9024782463679991
  train_f1_macro:
  - 0.9555555555555556
  - 0.9461077844311377
  - 0.9500000000000001
  - 0.9538152610441766
  - 0.9519607843137255
  train_f1_macro_oob:
  - 0.9323232323232324
  - 0.9221556886227545
  - 0.9302083333333334
  - 0.927710843373494
  - 0.9333333333333335
  train_f1_micro:
  - 0.9555555555555556
  - 0.9461077844311377
  - 0.95
  - 0.9538152610441767
  - 0.9519607843137254
  train_f1_micro_oob:
  - 0.9323232323232323
  - 0.9221556886227545
  - 0.9302083333333333
  - 0.927710843373494
  - 0.9333333333333333
  train_f1_samples:
  - 0.9555555555555557
  - 0.9461077844311377
  - 0.95
  - 0.9538152610441768
  - 0.9519607843137255
  train_f1_samples_oob:
  - 0.9323232323232322
  - 0.9221556886227545
  - 0.9302083333333334
  - 0.927710843373494
  - 0.9333333333333335
  train_f1_weighted:
  - 0.9724106739032111
  - 0.9590324301891267
  - 0.9669375000000001
  - 0.9714899200763452
  - 0.9707041437264562
  train_f1_weighted_oob:
  - 0.9441278456203829
  - 0.9317602418924527
  - 0.948875
  - 0.9420255278539902
  - 0.9473485946102579
  train_jaccard_macro:
  - 0.9174198044814602
  - 0.8993200052138418
  - 0.9069703576837805
  - 0.9140507977768982
  - 0.9103763546262437
  train_jaccard_macro_oob:
  - 0.8746445056063861
  - 0.8572591834545187
  - 0.8724357340475204
  - 0.8672154964430175
  - 0.8769334837604353
  train_jaccard_micro:
  - 0.9148936170212766
  - 0.8977272727272727
  - 0.9047619047619048
  - 0.9117082533589251
  - 0.9083255378858747
  train_jaccard_micro_oob:
  - 0.8732261116367077
  - 0.8555555555555555
  - 0.8695228821811101
  - 0.8651685393258427
  - 0.875
  train_jaccard_samples:
  - 0.9255411255411256
  - 0.9110350727117192
  - 0.9169642857142858
  - 0.9238382099827883
  - 0.9197478991596637
  train_jaccard_samples_oob:
  - 0.8883116883116882
  - 0.8728257770173936
  - 0.8857142857142858
  - 0.8828169822145725
  - 0.8903361344537816
  train_jaccard_weighted:
  - 0.9479538902656368
  - 0.9224387895867288
  - 0.9375389708625089
  - 0.9461354109162377
  - 0.9446938156320273
  train_jaccard_weighted_oob:
  - 0.8953185803391285
  - 0.873702148631236
  - 0.9055722535478443
  - 0.8923495503424216
  - 0.9017735933015154
  train_label_ranking_average_precision_score:
  - 0.9868686868686868
  - 0.9670658682634731
  - 0.9776041666666666
  - 0.9799196787148594
  - 0.986764705882353
  train_label_ranking_average_precision_score_oob:
  - 0.9234343434343436
  - 0.9008982035928145
  - 0.8865972222222224
  - 0.9157630522088355
  - 0.934705882352941
  train_matthews_corrcoef_macro:
  - 0.48578841763429986
  - 0.4600215609758256
  - 0.4717059415488046
  - 0.4822205944959976
  - 0.4652822863127455
  train_matthews_corrcoef_macro_oob:
  - 0.4042547595036785
  - 0.3590607662815681
  - 0.3836083572752471
  - 0.38172021687309726
  - 0.396187541872367
  train_matthews_corrcoef_micro:
  - 0.8592795385205413
  - 0.8267617879430134
  - 0.8447639912892305
  - 0.853495939296057
  - 0.845058113698948
  train_matthews_corrcoef_micro_oob:
  - 0.7824526249995537
  - 0.7450635844334057
  - 0.7806725350205745
  - 0.7665988059414218
  - 0.7821425125433459
  train_matthews_corrcoef_samples:
  - 0.801690155739535
  - 0.769258659322375
  - 0.7805852110030598
  - 0.7988793050178067
  - 0.7861849296668844
  train_matthews_corrcoef_samples_oob:
  - 0.6855855510014282
  - 0.6386629033004089
  - 0.6756181285517968
  - 0.6747559714196888
  - 0.6973768908662902
  train_matthews_corrcoef_weighted:
  - 0.7868285693761762
  - 0.7498028998073952
  - 0.7720966469179039
  - 0.7800124332747622
  - 0.7751581621252014
  train_matthews_corrcoef_weighted_oob:
  - 0.7025366799640322
  - 0.6535439907365045
  - 0.6981049876580478
  - 0.6818189552449816
  - 0.7023620662767834
  train_ndgc:
  - 0.9902593288528144
  - 0.9761545470684999
  - 0.9835882272594214
  - 0.9850826446643725
  - 0.9901380342281633
  train_ndgc_oob:
  - 0.9452831878198257
  - 0.9280439892548452
  - 0.9177452976397837
  - 0.9393129120279029
  - 0.953336539020122
  train_neg_coverage_error:
  - -1.2484848484848485
  - -1.2874251497005988
  - -1.3125
  - -1.2650602409638554
  - -1.2294117647058824
  train_neg_coverage_error_oob:
  - -1.5212121212121212
  - -1.5209580838323353
  - -1.69375
  - -1.5301204819277108
  - -1.411764705882353
  train_neg_hamming_loss_macro:
  - -0.044444444444444446
  - -0.05389221556886228
  - -0.05000000000000001
  - -0.04618473895582329
  - -0.048039215686274506
  train_neg_hamming_loss_macro_oob:
  - -0.06767676767676768
  - -0.07784431137724551
  - -0.06979166666666668
  - -0.07228915662650602
  - -0.06666666666666667
  train_neg_hamming_loss_micro:
  - -0.044444444444444446
  - -0.05389221556886228
  - -0.05
  - -0.04618473895582329
  - -0.04803921568627451
  train_neg_hamming_loss_micro_oob:
  - -0.06767676767676768
  - -0.07784431137724551
  - -0.06979166666666667
  - -0.07228915662650602
  - -0.06666666666666667
  train_neg_hamming_loss_samples:
  - -0.04444444444444444
  - -0.05389221556886228
  - -0.049999999999999996
  - -0.04618473895582329
  - -0.048039215686274506
  train_neg_hamming_loss_samples_oob:
  - -0.06767676767676768
  - -0.07784431137724551
  - -0.06979166666666667
  - -0.07228915662650602
  - -0.06666666666666667
  train_neg_hamming_loss_weighted:
  - -0.027589326096788786
  - -0.040967569810873294
  - -0.0330625
  - -0.028510079923655018
  - -0.029295856273543898
  train_neg_hamming_loss_weighted_oob:
  - -0.05587215437961707
  - -0.06823975810754729
  - -0.051125
  - -0.05797447214600977
  - -0.05265140538974211
  train_neg_label_ranking_loss:
  - -0.006060606060606061
  - -0.014670658682634731
  - -0.01203125
  - -0.00963855421686747
  - -0.007058823529411764
  train_neg_label_ranking_loss_oob:
  - -0.05461279461279461
  - -0.05813373253493014
  - -0.08255208333333333
  - -0.05676037483266399
  - -0.03888888888888889
  train_precision_macro:
  - 0.9555555555555556
  - 0.9461077844311377
  - 0.9500000000000001
  - 0.9538152610441766
  - 0.9519607843137255
  train_precision_macro_oob:
  - 0.9323232323232324
  - 0.9221556886227545
  - 0.9302083333333334
  - 0.927710843373494
  - 0.9333333333333335
  train_precision_micro:
  - 0.9555555555555556
  - 0.9461077844311377
  - 0.95
  - 0.9538152610441767
  - 0.9519607843137254
  train_precision_micro_oob:
  - 0.9323232323232323
  - 0.9221556886227545
  - 0.9302083333333333
  - 0.927710843373494
  - 0.9333333333333333
  train_precision_samples:
  - 0.9555555555555557
  - 0.9461077844311377
  - 0.95
  - 0.9538152610441768
  - 0.9519607843137255
  train_precision_samples_oob:
  - 0.9323232323232322
  - 0.9221556886227545
  - 0.9302083333333334
  - 0.927710843373494
  - 0.9333333333333335
  train_precision_weighted:
  - 0.9724106739032111
  - 0.9590324301891267
  - 0.9669375000000001
  - 0.9714899200763452
  - 0.9707041437264562
  train_precision_weighted_oob:
  - 0.9441278456203829
  - 0.9317602418924527
  - 0.948875
  - 0.9420255278539902
  - 0.9473485946102579
  train_recall_macro:
  - 0.9555555555555556
  - 0.9461077844311377
  - 0.9500000000000001
  - 0.9538152610441766
  - 0.9519607843137255
  train_recall_macro_oob:
  - 0.9323232323232324
  - 0.9221556886227545
  - 0.9302083333333334
  - 0.927710843373494
  - 0.9333333333333335
  train_recall_micro:
  - 0.9555555555555556
  - 0.9461077844311377
  - 0.95
  - 0.9538152610441767
  - 0.9519607843137254
  train_recall_micro_oob:
  - 0.9323232323232323
  - 0.9221556886227545
  - 0.9302083333333333
  - 0.927710843373494
  - 0.9333333333333333
  train_recall_samples:
  - 0.9555555555555557
  - 0.9461077844311377
  - 0.95
  - 0.9538152610441768
  - 0.9519607843137255
  train_recall_samples_oob:
  - 0.9323232323232322
  - 0.9221556886227545
  - 0.9302083333333334
  - 0.927710843373494
  - 0.9333333333333335
  train_recall_weighted:
  - 0.9724106739032111
  - 0.9590324301891267
  - 0.9669375000000001
  - 0.9714899200763452
  - 0.9707041437264562
  train_recall_weighted_oob:
  - 0.9441278456203829
  - 0.9317602418924527
  - 0.948875
  - 0.9420255278539902
  - 0.9473485946102579
  train_roc_auc_macro:
  - 0.9936765479618309
  - 0.9920776564241273
  - 0.99529731732403
  - 0.9970531710776093
  - 0.9961081808394222
  train_roc_auc_macro_oob:
  - 0.9422069247246814
  - 0.9530392698165304
  - 0.9472346422913648
  - 0.9503249093138436
  - 0.9618382831018356
  train_roc_auc_micro:
  - 0.9935682802716456
  - 0.9917141089108912
  - 0.9945131578947369
  - 0.9945008354739755
  - 0.9961652326485823
  train_roc_auc_micro_oob:
  - 0.9577776516656262
  - 0.9554084158415842
  - 0.9473618421052632
  - 0.9583385290670124
  - 0.9672055037352805
  train_roc_auc_samples:
  - 0.9939393939393939
  - 0.9853293413173654
  - 0.98796875
  - 0.9903614457831326
  - 0.9929411764705883
  train_roc_auc_samples_oob:
  - 0.9453872053872053
  - 0.9418662674650699
  - 0.9174479166666668
  - 0.9432396251673358
  - 0.9611111111111112
  train_roc_auc_weighted:
  - 0.9929955591846015
  - 0.9887112838405671
  - 0.9971956223192231
  - 0.9953840842166303
  - 0.9962466449994632
  train_roc_auc_weighted_oob:
  - 0.9731882429571443
  - 0.9619606290121
  - 0.9685981735458143
  - 0.9695499673869044
  - 0.9776950346089728
start: 2023-12-21 11:06:11.536227
wrapper: null
