active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAADwvwAAAAAAAABAAAAAAAAA8L8AAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:58:24.175068
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__1
  params: {}
hash: 6dbd31a5ea49bf27d9c7751b896567f1fae45bf1430dea71b228b6088d969f13
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6dbd31a_20231222T005810123514_embedding_proba_weak__1_CHD_49.yml
results:
  fit_time:
  - 4.246262311935425
  - 4.768317222595215
  - 4.706658601760864
  - 4.797412395477295
  - 4.494307994842529
  score_time:
  - 1.8478941917419434
  - 1.8025610446929932
  - 1.8252367973327637
  - 1.849823236465454
  - 1.8982963562011719
  test_average_precision_macro:
  - 0.5175069999137843
  - 0.49158566867851033
  - 0.5715374652333435
  - 0.5704949423694101
  - 0.5276207014971436
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6575373757113405
  - 0.6794790429245317
  - 0.7035606793540834
  - 0.7165215559179482
  - 0.6559249204774633
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7832082082082081
  - 0.7692708333333333
  - 0.8012359836901122
  - 0.8062996031746031
  - 0.7887762762762763
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6281412221495206
  - 0.6225833351624672
  - 0.6706066224789305
  - 0.6813080002715577
  - 0.6302310551671599
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5915915915915916
  - 0.6086309523809524
  - 0.5902140672782874
  - 0.6101190476190476
  - 0.5885885885885885
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5915915915915916
  - 0.6086309523809523
  - 0.5902140672782875
  - 0.6101190476190477
  - 0.5885885885885885
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5915915915915918
  - 0.6086309523809523
  - 0.5902140672782875
  - 0.6101190476190477
  - 0.5885885885885886
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.4794057215109846
  - 0.5104840716774515
  - 0.4885958205912335
  - 0.5115017361111112
  - 0.4741784037558685
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.45598334035298516
  - 0.4687999374927531
  - 0.45103936579431286
  - 0.4699031909339131
  - 0.45388793318173426
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4200426439232409
  - 0.4374331550802139
  - 0.41865509761388287
  - 0.43897216274089934
  - 0.41702127659574467
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4394680394680396
  - 0.4599489795918368
  - 0.43822629969418964
  - 0.4582096474953618
  - 0.43406263406263407
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3274569783095859
  - 0.3506735050085512
  - 0.3327628251458081
  - 0.35138455509371486
  - 0.3233245182482154
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8012262262262262
  - 0.7692708333333335
  - 0.8012359836901122
  - 0.8062996031746031
  - 0.7977852852852854
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.019702302872005455
  - 0.03022489471347962
  - 0.022659327670862206
  - 0.028390101697962994
  - 0.0018836110798564436
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.11779878181720829
  - 0.1953952610393817
  - 0.16687137797122142
  - 0.19393140589673033
  - 0.10680766439382032
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0832257743377429
  - 0.1193525102643385
  - 0.10389667614420499
  - 0.10916380688452547
  - 0.05421102772811672
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.03904057003398845
  - 0.05199216049359069
  - 0.032396563772379365
  - 0.044276503823115626
  - -0.007448849366308866
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8503746766207704
  - 0.850566256611202
  - 0.8724892652756473
  - 0.8713436812843961
  - 0.8563643766864972
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.5315315315315314
  - -3.8482142857142856
  - -3.6788990825688073
  - -3.607142857142857
  - -3.5855855855855854
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4084084084084085
  - -0.3913690476190476
  - -0.4097859327217126
  - -0.3898809523809524
  - -0.4114114114114114
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4084084084084084
  - -0.3913690476190476
  - -0.40978593272171254
  - -0.3898809523809524
  - -0.4114114114114114
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4084084084084083
  - -0.39136904761904756
  - -0.40978593272171254
  - -0.3898809523809524
  - -0.4114114114114114
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5205942784890154
  - -0.4895159283225485
  - -0.5114041794087665
  - -0.4884982638888889
  - -0.5258215962441315
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19311811811811813
  - -0.22596726190476193
  - -0.20211518858307845
  - -0.19233630952380953
  - -0.1966216216216216
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5915915915915916
  - 0.6086309523809524
  - 0.5902140672782874
  - 0.6101190476190476
  - 0.5885885885885885
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5915915915915916
  - 0.6086309523809523
  - 0.5902140672782875
  - 0.6101190476190477
  - 0.5885885885885885
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5915915915915918
  - 0.6086309523809523
  - 0.5902140672782875
  - 0.6101190476190477
  - 0.5885885885885886
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.4794057215109846
  - 0.5104840716774515
  - 0.4885958205912335
  - 0.5115017361111112
  - 0.4741784037558685
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5915915915915916
  - 0.6086309523809524
  - 0.5902140672782874
  - 0.6101190476190476
  - 0.5885885885885885
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5915915915915916
  - 0.6086309523809523
  - 0.5902140672782875
  - 0.6101190476190477
  - 0.5885885885885885
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5915915915915918
  - 0.6086309523809523
  - 0.5902140672782875
  - 0.6101190476190477
  - 0.5885885885885886
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.4794057215109846
  - 0.5104840716774515
  - 0.4885958205912335
  - 0.5115017361111112
  - 0.4741784037558685
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5501878606774607
  - 0.5333267248026733
  - 0.6389084677805997
  - 0.6654319867122386
  - 0.6035019936962259
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7813786434590412
  - 0.7691569754287524
  - 0.7889534001214329
  - 0.8026801215277778
  - 0.7823906791534547
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7740327380952381
  - 0.7978848114169217
  - 0.8076636904761906
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5612723444651664
  - 0.5831000893980637
  - 0.6146281003445638
  - 0.6361728504804043
  - 0.566335627735722
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8262346979389377
  - 0.8192320114447872
  - 0.8163002995937237
  - 0.8169341469720824
  - 0.8254362703447488
  train_average_precision_macro_oob:
  - 0.676149842083607
  - 0.6700640390016189
  - 0.6713451463400125
  - 0.6615829392125014
  - 0.6966160506299847
  train_average_precision_micro:
  - 0.8941371128082662
  - 0.8770599999928428
  - 0.8905118439140205
  - 0.8734575313679027
  - 0.8896093419074599
  train_average_precision_micro_oob:
  - 0.8263532279501773
  - 0.8021713162502789
  - 0.8232128279206776
  - 0.7945099535173807
  - 0.820632085995861
  train_average_precision_samples:
  - 0.9050519269269269
  - 0.8917011537496865
  - 0.8953942451420029
  - 0.8903059944820666
  - 0.8951107357357357
  train_average_precision_samples_oob:
  - 0.8611423923923924
  - 0.8410020065211938
  - 0.8469076980568011
  - 0.8353837471783294
  - 0.8454923673673673
  train_average_precision_weighted:
  - 0.8846977798602489
  - 0.8718740951962923
  - 0.8827011597372288
  - 0.8671871183659133
  - 0.8820598624926171
  train_average_precision_weighted_oob:
  - 0.8106264616023602
  - 0.7877681458206033
  - 0.8019667080133571
  - 0.7795931910208608
  - 0.806043238587435
  train_f1_macro:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849028
  - 0.6877351392024078
  - 0.6970720720720721
  train_f1_macro_oob:
  - 0.6313813813813812
  - 0.6139954853273139
  - 0.6248131539611359
  - 0.6297968397291196
  - 0.6268768768768769
  train_f1_micro:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849028
  - 0.6877351392024078
  - 0.6970720720720721
  train_f1_micro_oob:
  - 0.6313813813813813
  - 0.6139954853273137
  - 0.624813153961136
  - 0.6297968397291196
  - 0.6268768768768769
  train_f1_samples:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849029
  - 0.6877351392024077
  - 0.6970720720720721
  train_f1_samples_oob:
  - 0.6313813813813813
  - 0.6139954853273137
  - 0.6248131539611359
  - 0.6297968397291196
  - 0.626876876876877
  train_f1_weighted:
  - 0.6305599409348319
  - 0.6139146549429751
  - 0.6327612969989652
  - 0.6212410614216484
  - 0.6322276108861474
  train_f1_weighted_oob:
  - 0.5474484947022
  - 0.5205890760692775
  - 0.5367015271723792
  - 0.5441995927323241
  - 0.5413645352669743
  train_jaccard_macro:
  - 0.5478139087681404
  - 0.539035273727806
  - 0.5524426077875716
  - 0.5430110985057
  - 0.5529957857196183
  train_jaccard_macro_oob:
  - 0.4873748235983794
  - 0.47241876021253826
  - 0.48239369208593647
  - 0.4860218599551829
  - 0.48340495165113145
  train_jaccard_micro:
  - 0.5297157622739018
  - 0.5192912260645899
  - 0.5344036697247706
  - 0.5240825688073395
  - 0.5350043215211755
  train_jaccard_micro_oob:
  - 0.46132748217224356
  - 0.44299674267100975
  - 0.4543478260869565
  - 0.4596375617792422
  - 0.45653362493165667
  train_jaccard_samples:
  - 0.5557378807378808
  - 0.5453949361398571
  - 0.5592471803234136
  - 0.5471998280124691
  - 0.5594165594165594
  train_jaccard_samples_oob:
  - 0.48537108537108536
  - 0.46463604115974316
  - 0.4750917244190787
  - 0.4798882081049124
  - 0.47585800085800084
  train_jaccard_weighted:
  - 0.462862777631624
  - 0.4464210975263424
  - 0.4652945129006481
  - 0.45356850830603296
  - 0.46524281506574705
  train_jaccard_weighted_oob:
  - 0.38185755256413273
  - 0.358788767256901
  - 0.3727060381694851
  - 0.3790859209604784
  - 0.3765313773668462
  train_label_ranking_average_precision_score:
  - 0.9073041791791786
  - 0.8984731627790312
  - 0.9021207025411054
  - 0.8970780035114109
  - 0.8996152402402396
  train_label_ranking_average_precision_score_oob:
  - 0.8633946446446443
  - 0.8477740155505383
  - 0.8536341554559035
  - 0.8421557562076735
  - 0.8499968718718713
  train_matthews_corrcoef_macro:
  - 0.2747425811171049
  - 0.26684080743683664
  - 0.2796655830056849
  - 0.26671130213348787
  - 0.292784178290107
  train_matthews_corrcoef_macro_oob:
  - 0.09193086885026713
  - 0.07481214522302192
  - 0.09087131497842116
  - 0.09715072476843241
  - 0.10394907040138479
  train_matthews_corrcoef_micro:
  - 0.43013061289453436
  - 0.40816255561333026
  - 0.43394928621435436
  - 0.41545533888768743
  - 0.4387235903804468
  train_matthews_corrcoef_micro_oob:
  - 0.2853617481397132
  - 0.2336953369131439
  - 0.2632549381015924
  - 0.2758871364571871
  - 0.2785587705021265
  train_matthews_corrcoef_samples:
  - 0.3438308979454636
  - 0.3057588140239196
  - 0.3237175023850826
  - 0.30777202309115387
  - 0.3263428125729193
  train_matthews_corrcoef_samples_oob:
  - 0.1891310670541711
  - 0.12890810047742263
  - 0.14789276972866877
  - 0.1704340059994655
  - 0.15840668886268083
  train_matthews_corrcoef_weighted:
  - 0.34916160037437827
  - 0.3285398052293507
  - 0.3543589983960755
  - 0.33239774383739285
  - 0.36307346023736736
  train_matthews_corrcoef_weighted_oob:
  - 0.1454371010115948
  - 0.11418057879866969
  - 0.14279556062776935
  - 0.14654503552480375
  - 0.15978582908942082
  train_ndgc:
  - 0.9400253107079423
  - 0.9304027863495986
  - 0.934009302362094
  - 0.9322735961153711
  - 0.9333298566859826
  train_ndgc_oob:
  - 0.91110779699228
  - 0.8950892225087068
  - 0.9004842774632029
  - 0.8928793517065357
  - 0.8987828554358928
  train_neg_coverage_error:
  - -3.1576576576576576
  - -3.1918735891647856
  - -3.188340807174888
  - -3.2641083521444694
  - -3.2072072072072073
  train_neg_coverage_error_oob:
  - -3.373873873873874
  - -3.419864559819413
  - -3.376681614349776
  - -3.4988713318284423
  - -3.445945945945946
  train_neg_hamming_loss_macro:
  - -0.3074324324324324
  - -0.3164033107599699
  - -0.3034379671150972
  - -0.3122648607975922
  - -0.30292792792792794
  train_neg_hamming_loss_macro_oob:
  - -0.3686186186186186
  - -0.3860045146726862
  - -0.37518684603886404
  - -0.37020316027088035
  - -0.3731231231231231
  train_neg_hamming_loss_micro:
  - -0.30743243243243246
  - -0.3164033107599699
  - -0.3034379671150972
  - -0.3122648607975922
  - -0.30292792792792794
  train_neg_hamming_loss_micro_oob:
  - -0.3686186186186186
  - -0.3860045146726862
  - -0.375186846038864
  - -0.37020316027088035
  - -0.3731231231231231
  train_neg_hamming_loss_samples:
  - -0.30743243243243246
  - -0.31640331075996997
  - -0.3034379671150972
  - -0.31226486079759214
  - -0.30292792792792794
  train_neg_hamming_loss_samples_oob:
  - -0.36861861861861867
  - -0.3860045146726862
  - -0.37518684603886393
  - -0.37020316027088035
  - -0.3731231231231232
  train_neg_hamming_loss_weighted:
  - -0.3694400590651681
  - -0.38608534505702485
  - -0.36723870300103484
  - -0.3787589385783517
  - -0.3677723891138525
  train_neg_hamming_loss_weighted_oob:
  - -0.45255150529779997
  - -0.47941092393072243
  - -0.4632984728276208
  - -0.4558004072676759
  - -0.45863546473302574
  train_neg_label_ranking_loss:
  - -0.09265515515515514
  - -0.09823175319789315
  - -0.09750249128051819
  - -0.10482192124404313
  - -0.09873623623623623
  train_neg_label_ranking_loss_oob:
  - -0.13562937937937938
  - -0.14490218209179834
  - -0.14006601893373194
  - -0.15642086782041636
  - -0.14366866866866868
  train_precision_macro:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849028
  - 0.6877351392024078
  - 0.6970720720720721
  train_precision_macro_oob:
  - 0.6313813813813812
  - 0.6139954853273139
  - 0.6248131539611359
  - 0.6297968397291196
  - 0.6268768768768769
  train_precision_micro:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849028
  - 0.6877351392024078
  - 0.6970720720720721
  train_precision_micro_oob:
  - 0.6313813813813813
  - 0.6139954853273137
  - 0.624813153961136
  - 0.6297968397291196
  - 0.6268768768768769
  train_precision_samples:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849029
  - 0.6877351392024077
  - 0.6970720720720721
  train_precision_samples_oob:
  - 0.6313813813813813
  - 0.6139954853273137
  - 0.6248131539611359
  - 0.6297968397291196
  - 0.626876876876877
  train_precision_weighted:
  - 0.6305599409348319
  - 0.6139146549429751
  - 0.6327612969989652
  - 0.6212410614216484
  - 0.6322276108861474
  train_precision_weighted_oob:
  - 0.5474484947022
  - 0.5205890760692775
  - 0.5367015271723792
  - 0.5441995927323241
  - 0.5413645352669743
  train_recall_macro:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849028
  - 0.6877351392024078
  - 0.6970720720720721
  train_recall_macro_oob:
  - 0.6313813813813812
  - 0.6139954853273139
  - 0.6248131539611359
  - 0.6297968397291196
  - 0.6268768768768769
  train_recall_micro:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849028
  - 0.6877351392024078
  - 0.6970720720720721
  train_recall_micro_oob:
  - 0.6313813813813813
  - 0.6139954853273137
  - 0.624813153961136
  - 0.6297968397291196
  - 0.6268768768768769
  train_recall_samples:
  - 0.6925675675675675
  - 0.6835966892400301
  - 0.6965620328849029
  - 0.6877351392024077
  - 0.6970720720720721
  train_recall_samples_oob:
  - 0.6313813813813813
  - 0.6139954853273137
  - 0.6248131539611359
  - 0.6297968397291196
  - 0.626876876876877
  train_recall_weighted:
  - 0.6305599409348319
  - 0.6139146549429751
  - 0.6327612969989652
  - 0.6212410614216484
  - 0.6322276108861474
  train_recall_weighted_oob:
  - 0.5474484947022
  - 0.5205890760692775
  - 0.5367015271723792
  - 0.5441995927323241
  - 0.5413645352669743
  train_roc_auc_macro:
  - 0.8335217478620268
  - 0.8224010230731563
  - 0.8147887215533834
  - 0.8106611381924242
  - 0.8346199536114839
  train_roc_auc_macro_oob:
  - 0.7708646419047128
  - 0.7542568683868399
  - 0.7582453890371547
  - 0.7368506488638058
  - 0.761795075949844
  train_roc_auc_micro:
  - 0.90571201477702
  - 0.8995266641075743
  - 0.9036675628548998
  - 0.8932789881848667
  - 0.9028961116269663
  train_roc_auc_micro_oob:
  - 0.8655321066276475
  - 0.8534084513546354
  - 0.8624524137742153
  - 0.8451255646599108
  - 0.8581730990227354
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8328903193130298
  - 0.8166822556037406
  - 0.8311477083799255
  - 0.8082084068506331
  - 0.8250991201168687
  train_roc_auc_weighted_oob:
  - 0.7746209896144727
  - 0.7443474701663046
  - 0.7671065984537554
  - 0.7269035510225837
  - 0.7597628291981665
start: 2023-12-22 00:58:10.123514
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
