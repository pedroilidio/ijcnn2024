active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMAAMzMzMzPjv4BmZmZmZvY/QDMzMzMzA0AAmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:06:23.093335
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__2
  params: {}
hash: f36d09aee9d014cce21e8f7fadd0ac7d0b4612924ee2bd3c2841861d0b47dadc
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f36d09a_20231221T100612774092_embedding_proba__2_VirusPseAAC.yml
results:
  fit_time:
  - 4.309211254119873
  - 4.352011442184448
  - 4.2482452392578125
  - 4.139171361923218
  - 4.255489110946655
  score_time:
  - 1.860865592956543
  - 1.8089489936828613
  - 1.6938273906707764
  - 1.8569560050964355
  - 1.6898822784423828
  test_average_precision_macro:
  - 0.4187299058622207
  - 0.4505808629493309
  - 0.28509445967098873
  - 0.32295810988931845
  - 0.4331774325699988
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.38557311011109746
  - 0.4469723722627673
  - 0.44102048167242347
  - 0.48155519884815
  - 0.46499235788800125
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6437037037037037
  - 0.667063492063492
  - 0.6358333333333334
  - 0.7035612535612535
  - 0.7063008130081301
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4131334253468665
  - 0.4630689608190062
  - 0.4188607588657276
  - 0.4673733433696656
  - 0.4676656741501936
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7851851851851852
  - 0.7976190476190476
  - 0.7833333333333333
  - 0.8034188034188033
  - 0.7845528455284553
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7851851851851852
  - 0.7976190476190477
  - 0.7833333333333333
  - 0.8034188034188035
  - 0.7845528455284553
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7851851851851852
  - 0.7976190476190474
  - 0.7833333333333333
  - 0.8034188034188033
  - 0.7845528455284554
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6559829059829059
  - 0.6904761904761905
  - 0.6520408163265307
  - 0.6964102564102564
  - 0.6580487804878049
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6785388459802907
  - 0.6871680272564576
  - 0.673693456302152
  - 0.6937413399243529
  - 0.6762131960139469
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6463414634146342
  - 0.6633663366336634
  - 0.6438356164383562
  - 0.6714285714285714
  - 0.6454849498327759
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.662962962962963
  - 0.6808390022675738
  - 0.6666666666666667
  - 0.6941391941391942
  - 0.6637630662020906
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5143902518832032
  - 0.5457579829680919
  - 0.5068853063529195
  - 0.5488460847095831
  - 0.5159965538230395
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6437037037037037
  - 0.6670634920634919
  - 0.6358333333333334
  - 0.7035612535612535
  - 0.7063008130081301
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.00863382332336215
  - 0.03737957621454791
  - 0.019461935795192814
  - 0.06467657979220871
  - 0.009106205734692159
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.14448221250478785
  - 0.21749493721177668
  - 0.24800809011326733
  - 0.2798971084244134
  - 0.18477444576496999
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.11101993096778827
  - 0.15946110943097686
  - 0.2198683298050514
  - 0.22002920077138946
  - 0.14667303322238695
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.02042487814679894
  - 0.07561665491501417
  - 0.04888518084420566
  - 0.1319402227761058
  - 0.018576659698771997
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7363593768120986
  - 0.7519735582789971
  - 0.7279617078921831
  - 0.7831727802041
  - 0.7798960933429944
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2444444444444445
  - -2.3095238095238093
  - -2.425
  - -2.3333333333333335
  - -2.2439024390243905
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21481481481481482
  - -0.2023809523809524
  - -0.2166666666666667
  - -0.19658119658119658
  - -0.21544715447154475
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21481481481481482
  - -0.20238095238095238
  - -0.21666666666666667
  - -0.19658119658119658
  - -0.21544715447154472
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21481481481481476
  - -0.20238095238095238
  - -0.21666666666666665
  - -0.19658119658119658
  - -0.2154471544715447
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34401709401709396
  - -0.30952380952380953
  - -0.34795918367346934
  - -0.3035897435897436
  - -0.34195121951219515
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21302469135802463
  - -0.21964285714285708
  - -0.24
  - -0.21175213675213675
  - -0.20914634146341465
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7851851851851852
  - 0.7976190476190476
  - 0.7833333333333333
  - 0.8034188034188033
  - 0.7845528455284553
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7851851851851852
  - 0.7976190476190477
  - 0.7833333333333333
  - 0.8034188034188035
  - 0.7845528455284553
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7851851851851852
  - 0.7976190476190474
  - 0.7833333333333333
  - 0.8034188034188033
  - 0.7845528455284554
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6559829059829059
  - 0.6904761904761905
  - 0.6520408163265307
  - 0.6964102564102564
  - 0.6580487804878049
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7851851851851852
  - 0.7976190476190476
  - 0.7833333333333333
  - 0.8034188034188033
  - 0.7845528455284553
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7851851851851852
  - 0.7976190476190477
  - 0.7833333333333333
  - 0.8034188034188035
  - 0.7845528455284553
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7851851851851852
  - 0.7976190476190474
  - 0.7833333333333333
  - 0.8034188034188033
  - 0.7845528455284554
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6559829059829059
  - 0.6904761904761905
  - 0.6520408163265307
  - 0.6964102564102564
  - 0.6580487804878049
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6004927541945001
  - 0.6282362525157011
  - 0.5751415393359127
  - 0.5657025669119323
  - 0.6630511248158307
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7677311220889204
  - 0.7741683738171886
  - 0.7717704883000321
  - 0.7609782608695652
  - 0.7962244897959184
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7869753086419752
  - 0.7803571428571429
  - 0.76
  - 0.7882478632478632
  - 0.7908536585365853
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.560722181469935
  - 0.5739196218298386
  - 0.587728067815755
  - 0.5704712064251538
  - 0.6423095733095733
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9543566028776956
  - 0.9488986393168378
  - 0.9932567235801475
  - 0.9563805059406628
  - 0.9373257407749559
  train_average_precision_macro_oob:
  - 0.773780144713034
  - 0.8259189552441316
  - 0.9126449312118462
  - 0.7875006264982521
  - 0.8045139586384131
  train_average_precision_micro:
  - 0.9854693396272043
  - 0.9934602381706408
  - 0.9935106073403212
  - 0.9899758532345122
  - 0.9900938830630709
  train_average_precision_micro_oob:
  - 0.8810718262165466
  - 0.9148387677358304
  - 0.9128959651915537
  - 0.9049025831333686
  - 0.9038877789903685
  train_average_precision_samples:
  - 0.9855967078189299
  - 0.9888888888888888
  - 0.9900199600798402
  - 0.984126984126984
  - 0.9829317269076304
  train_average_precision_samples_oob:
  - 0.8935699588477366
  - 0.9151515151515152
  - 0.9220558882235528
  - 0.9069444444444444
  - 0.9018072289156626
  train_average_precision_weighted:
  - 0.9864071293364916
  - 0.9897486772486771
  - 0.9982169029530851
  - 0.9887241367527461
  - 0.9861069126679278
  train_average_precision_weighted_oob:
  - 0.9144650938857649
  - 0.9405494243179564
  - 0.9559948398177172
  - 0.9171174000042847
  - 0.9278180194049211
  train_f1_macro:
  - 0.948559670781893
  - 0.9535353535353536
  - 0.9520958083832336
  - 0.9583333333333334
  - 0.9518072289156626
  train_f1_macro_oob:
  - 0.9146090534979425
  - 0.9242424242424243
  - 0.9121756487025948
  - 0.9226190476190476
  - 0.9307228915662651
  train_f1_micro:
  - 0.948559670781893
  - 0.9535353535353536
  - 0.9520958083832335
  - 0.9583333333333334
  - 0.9518072289156626
  train_f1_micro_oob:
  - 0.9146090534979424
  - 0.9242424242424242
  - 0.9121756487025948
  - 0.9226190476190477
  - 0.9307228915662651
  train_f1_samples:
  - 0.9485596707818931
  - 0.9535353535353536
  - 0.9520958083832335
  - 0.9583333333333334
  - 0.9518072289156626
  train_f1_samples_oob:
  - 0.9146090534979423
  - 0.9242424242424242
  - 0.9121756487025947
  - 0.9226190476190477
  - 0.9307228915662651
  train_f1_weighted:
  - 0.9721296296296296
  - 0.9733755465098748
  - 0.9672576030205599
  - 0.9785773220179161
  - 0.9705654300369796
  train_f1_weighted_oob:
  - 0.9221913580246912
  - 0.937826021408111
  - 0.9165806318397686
  - 0.9377357378595002
  - 0.9425623285220088
  train_jaccard_macro:
  - 0.9049305496775943
  - 0.9135682638652135
  - 0.9106121952797936
  - 0.922801696958691
  - 0.9102229596911074
  train_jaccard_macro_oob:
  - 0.8452756418206127
  - 0.86178239329676
  - 0.8406866109752609
  - 0.8589141509173751
  - 0.8720399558710575
  train_jaccard_micro:
  - 0.9021526418786693
  - 0.9111969111969112
  - 0.9085714285714286
  - 0.92
  - 0.9080459770114943
  train_jaccard_micro_oob:
  - 0.842654028436019
  - 0.8591549295774648
  - 0.8385321100917431
  - 0.856353591160221
  - 0.8704225352112676
  train_jaccard_samples:
  - 0.9156378600823046
  - 0.9227994227994227
  - 0.921300256629598
  - 0.9294217687074829
  - 0.9208261617900172
  train_jaccard_samples_oob:
  - 0.860817166372722
  - 0.8759018759018758
  - 0.8552894211576845
  - 0.8724489795918366
  - 0.8866896156052784
  train_jaccard_weighted:
  - 0.9483281771714523
  - 0.9499104936517632
  - 0.9379938235317039
  - 0.9600001558290788
  - 0.9444737548616756
  train_jaccard_weighted_oob:
  - 0.8577979649183195
  - 0.8852802249632956
  - 0.8478945110885472
  - 0.8852782125911715
  - 0.8927388838503325
  train_label_ranking_average_precision_score:
  - 0.9855967078189299
  - 0.9888888888888888
  - 0.9900199600798402
  - 0.984126984126984
  - 0.9829317269076304
  train_label_ranking_average_precision_score_oob:
  - 0.8935699588477366
  - 0.9151515151515152
  - 0.9220558882235527
  - 0.9069444444444444
  - 0.9018072289156628
  train_matthews_corrcoef_macro:
  - 0.45300264938495577
  - 0.47429257802820995
  - 0.5727816164794144
  - 0.4921418217048282
  - 0.4690685805441614
  train_matthews_corrcoef_macro_oob:
  - 0.2943327554488911
  - 0.349207804250841
  - 0.3162157469420795
  - 0.33450611114550993
  - 0.3973723770397646
  train_matthews_corrcoef_micro:
  - 0.8392732344378651
  - 0.853617056312384
  - 0.8486908396079772
  - 0.8676686405492824
  - 0.8478887659766691
  train_matthews_corrcoef_micro_oob:
  - 0.7260610303909717
  - 0.7554354763267654
  - 0.7129632357184659
  - 0.7469386762187423
  - 0.7777599641814696
  train_matthews_corrcoef_samples:
  - 0.7646258298849069
  - 0.7891755432300358
  - 0.7950229312020096
  - 0.7999952771993429
  - 0.7899781564982044
  train_matthews_corrcoef_samples_oob:
  - 0.6063406711372576
  - 0.6477236504226405
  - 0.622027705195246
  - 0.6262469717599305
  - 0.6950995601162832
  train_matthews_corrcoef_weighted:
  - 0.770640074125854
  - 0.7831540155138395
  - 0.7874066890863123
  - 0.7955699931489248
  - 0.7768151323275713
  train_matthews_corrcoef_weighted_oob:
  - 0.600136088031568
  - 0.6599284039959298
  - 0.6047434701369011
  - 0.6472031744641428
  - 0.696818148919371
  train_ndgc:
  - 0.989270737698413
  - 0.9917026045670997
  - 0.992585985072712
  - 0.9882364227040823
  - 0.9873059594018938
  train_ndgc_oob:
  - 0.9233838372333585
  - 0.9376171687578033
  - 0.9436419563375731
  - 0.9323285271577346
  - 0.9286209874986459
  train_neg_coverage_error:
  - -1.271604938271605
  - -1.2484848484848485
  - -1.2395209580838322
  - -1.2380952380952381
  - -1.2590361445783131
  train_neg_coverage_error_oob:
  - -1.6481481481481481
  - -1.503030303030303
  - -1.4910179640718564
  - -1.5238095238095237
  - -1.5542168674698795
  train_neg_hamming_loss_macro:
  - -0.05144032921810699
  - -0.046464646464646465
  - -0.04790419161676648
  - -0.041666666666666664
  - -0.048192771084337345
  train_neg_hamming_loss_macro_oob:
  - -0.0853909465020576
  - -0.07575757575757576
  - -0.08782435129740518
  - -0.07738095238095237
  - -0.06927710843373493
  train_neg_hamming_loss_micro:
  - -0.051440329218107
  - -0.046464646464646465
  - -0.04790419161676647
  - -0.041666666666666664
  - -0.04819277108433735
  train_neg_hamming_loss_micro_oob:
  - -0.08539094650205761
  - -0.07575757575757576
  - -0.08782435129740519
  - -0.07738095238095238
  - -0.06927710843373494
  train_neg_hamming_loss_samples:
  - -0.05144032921810699
  - -0.04646464646464646
  - -0.04790419161676647
  - -0.041666666666666664
  - -0.048192771084337345
  train_neg_hamming_loss_samples_oob:
  - -0.0853909465020576
  - -0.07575757575757576
  - -0.08782435129740519
  - -0.07738095238095238
  - -0.06927710843373494
  train_neg_hamming_loss_weighted:
  - -0.027870370370370372
  - -0.02662445349012513
  - -0.03274239697944013
  - -0.021422677982083922
  - -0.0294345699630204
  train_neg_hamming_loss_weighted_oob:
  - -0.07780864197530864
  - -0.062173978591889036
  - -0.08341936816023127
  - -0.062264262140499765
  - -0.05743767147799116
  train_neg_label_ranking_loss:
  - -0.007407407407407407
  - -0.006060606060606061
  - -0.004790419161676647
  - -0.007142857142857143
  - -0.008433734939759036
  train_neg_label_ranking_loss_oob:
  - -0.07676611796982168
  - -0.0546969696969697
  - -0.05006653359946773
  - -0.05973875661375662
  - -0.06347054886211513
  train_precision_macro:
  - 0.948559670781893
  - 0.9535353535353536
  - 0.9520958083832336
  - 0.9583333333333334
  - 0.9518072289156626
  train_precision_macro_oob:
  - 0.9146090534979425
  - 0.9242424242424243
  - 0.9121756487025948
  - 0.9226190476190476
  - 0.9307228915662651
  train_precision_micro:
  - 0.948559670781893
  - 0.9535353535353536
  - 0.9520958083832335
  - 0.9583333333333334
  - 0.9518072289156626
  train_precision_micro_oob:
  - 0.9146090534979424
  - 0.9242424242424242
  - 0.9121756487025948
  - 0.9226190476190477
  - 0.9307228915662651
  train_precision_samples:
  - 0.9485596707818931
  - 0.9535353535353536
  - 0.9520958083832335
  - 0.9583333333333334
  - 0.9518072289156626
  train_precision_samples_oob:
  - 0.9146090534979423
  - 0.9242424242424242
  - 0.9121756487025947
  - 0.9226190476190477
  - 0.9307228915662651
  train_precision_weighted:
  - 0.9721296296296296
  - 0.9733755465098748
  - 0.9672576030205599
  - 0.9785773220179161
  - 0.9705654300369796
  train_precision_weighted_oob:
  - 0.9221913580246912
  - 0.937826021408111
  - 0.9165806318397686
  - 0.9377357378595002
  - 0.9425623285220088
  train_recall_macro:
  - 0.948559670781893
  - 0.9535353535353536
  - 0.9520958083832336
  - 0.9583333333333334
  - 0.9518072289156626
  train_recall_macro_oob:
  - 0.9146090534979425
  - 0.9242424242424243
  - 0.9121756487025948
  - 0.9226190476190476
  - 0.9307228915662651
  train_recall_micro:
  - 0.948559670781893
  - 0.9535353535353536
  - 0.9520958083832335
  - 0.9583333333333334
  - 0.9518072289156626
  train_recall_micro_oob:
  - 0.9146090534979424
  - 0.9242424242424242
  - 0.9121756487025948
  - 0.9226190476190477
  - 0.9307228915662651
  train_recall_samples:
  - 0.9485596707818931
  - 0.9535353535353536
  - 0.9520958083832335
  - 0.9583333333333334
  - 0.9518072289156626
  train_recall_samples_oob:
  - 0.9146090534979423
  - 0.9242424242424242
  - 0.9121756487025947
  - 0.9226190476190477
  - 0.9307228915662651
  train_recall_weighted:
  - 0.9721296296296296
  - 0.9733755465098748
  - 0.9672576030205599
  - 0.9785773220179161
  - 0.9705654300369796
  train_recall_weighted_oob:
  - 0.9221913580246912
  - 0.937826021408111
  - 0.9165806318397686
  - 0.9377357378595002
  - 0.9425623285220088
  train_roc_auc_macro:
  - 0.9966940345336078
  - 0.9978004854550123
  - 0.9995587867540604
  - 0.997541980332097
  - 0.9974872739028523
  train_roc_auc_macro_oob:
  - 0.9695422386807958
  - 0.9849598297886529
  - 0.9824780891527366
  - 0.9581711673662588
  - 0.977067587713336
  train_roc_auc_micro:
  - 0.9953432642487047
  - 0.9980578728663401
  - 0.9982552081727775
  - 0.9966955752647226
  - 0.9971194852482729
  train_roc_auc_micro_oob:
  - 0.9456800518134715
  - 0.9643544003682475
  - 0.9633470409440372
  - 0.9576382576222883
  - 0.9565927625508143
  train_roc_auc_samples:
  - 0.9925925925925927
  - 0.9939393939393939
  - 0.9952095808383233
  - 0.9928571428571429
  - 0.9915662650602409
  train_roc_auc_samples_oob:
  - 0.9232338820301784
  - 0.9453030303030304
  - 0.9499334664005322
  - 0.9402612433862435
  - 0.936529451137885
  train_roc_auc_weighted:
  - 0.9987013328054632
  - 0.9994186187321792
  - 0.9997061928219564
  - 0.9991689980362628
  - 0.9990867524252426
  train_roc_auc_weighted_oob:
  - 0.9828336449365035
  - 0.9891079171989416
  - 0.9853662995239556
  - 0.9831920679960582
  - 0.9845974476044727
start: 2023-12-21 10:06:12.774092
wrapper: null
