active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b80MzMzMzPzP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAEMAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:07:28.897893
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__1
  params: {}
hash: 9ddda2e53c8d3a8dea0126c17aa31ed860bfa7a77e264fc38b63072a8bdca634
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9ddda2e_20231221T220717279379_embedding_proba__1_CHD_49.yml
results:
  fit_time:
  - 3.3498411178588867
  - 3.0984303951263428
  - 3.250290632247925
  - 3.3265621662139893
  - 3.146024465560913
  score_time:
  - 1.6591875553131104
  - 1.6590073108673096
  - 1.6836307048797607
  - 1.6276891231536865
  - 1.6845264434814453
  test_average_precision_macro:
  - 0.5390082739146713
  - 0.5392921197324712
  - 0.5107642618551417
  - 0.5575273979969699
  - 0.5231323405475672
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6824855016036735
  - 0.7138322333110354
  - 0.6930658324286052
  - 0.6985955506812773
  - 0.712286592439766
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7923550724637681
  - 0.7951826826826826
  - 0.7924439347604485
  - 0.8016819571865446
  - 0.8024649649649649
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6447821696906129
  - 0.6736709266853383
  - 0.6394078868317401
  - 0.664526494446178
  - 0.6500155172033263
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7202898550724637
  - 0.7132132132132133
  - 0.7064220183486238
  - 0.7217125382262997
  - 0.7117117117117117
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7202898550724638
  - 0.7132132132132132
  - 0.7064220183486238
  - 0.7217125382262997
  - 0.7117117117117117
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7202898550724637
  - 0.7132132132132132
  - 0.7064220183486238
  - 0.7217125382262999
  - 0.7117117117117119
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6773281179479463
  - 0.6657116480438036
  - 0.6709158216642523
  - 0.6848448038870952
  - 0.670357857857858
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5793271869201447
  - 0.5740785847593334
  - 0.5660341146930526
  - 0.5804952123006692
  - 0.572507311838201
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5628539071347678
  - 0.5542590431738623
  - 0.5460992907801419
  - 0.5645933014354066
  - 0.5524475524475524
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5995068699416525
  - 0.5917280917280918
  - 0.5878192144247191
  - 0.6034512887723897
  - 0.5870090870090869
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5166492096674747
  - 0.5044566584645099
  - 0.5114050971133115
  - 0.5257354665410386
  - 0.5112977271585154
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7923550724637684
  - 0.7951826826826826
  - 0.7924439347604485
  - 0.8200305810397552
  - 0.8114739739739739
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.15005255495156095
  - 0.128817216669898
  - 0.1135538734243086
  - 0.1529164739889111
  - 0.12407168667814623
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4274707074353274
  - 0.4157807361395732
  - 0.40556462832256995
  - 0.4341443905983375
  - 0.4122202040808654
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.45227079194692255
  - 0.42156764833760496
  - 0.423918504832885
  - 0.44838096415052026
  - 0.44315435638547507
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.15013197089600433
  - 0.12359547630972972
  - 0.12402154037082545
  - 0.1548046160565289
  - 0.12422150091120053
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8622283338056518
  - 0.8677004710616429
  - 0.8653758879564147
  - 0.8652847241530013
  - 0.8711881742333054
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.5739130434782607
  - -3.630630630630631
  - -3.688073394495413
  - -3.623853211009174
  - -3.6666666666666665
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.27971014492753626
  - -0.2867867867867868
  - -0.29357798165137616
  - -0.2782874617737003
  - -0.2882882882882883
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2797101449275362
  - -0.28678678678678676
  - -0.29357798165137616
  - -0.2782874617737003
  - -0.2882882882882883
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2797101449275362
  - -0.2867867867867868
  - -0.29357798165137616
  - -0.2782874617737003
  - -0.28828828828828823
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32267188205205355
  - -0.33428835195619655
  - -0.32908417833574766
  - -0.31515519611290477
  - -0.32964214214214216
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19640096618357486
  - -0.20025025025025026
  - -0.20094291539245668
  - -0.18906727828746178
  - -0.19394394394394393
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7202898550724637
  - 0.7132132132132133
  - 0.7064220183486238
  - 0.7217125382262997
  - 0.7117117117117117
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7202898550724638
  - 0.7132132132132132
  - 0.7064220183486238
  - 0.7217125382262997
  - 0.7117117117117117
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7202898550724637
  - 0.7132132132132132
  - 0.7064220183486238
  - 0.7217125382262999
  - 0.7117117117117119
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6773281179479463
  - 0.6657116480438036
  - 0.6709158216642523
  - 0.6848448038870952
  - 0.670357857857858
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7202898550724637
  - 0.7132132132132133
  - 0.7064220183486238
  - 0.7217125382262997
  - 0.7117117117117117
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7202898550724638
  - 0.7132132132132132
  - 0.7064220183486238
  - 0.7217125382262997
  - 0.7117117117117117
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7202898550724637
  - 0.7132132132132132
  - 0.7064220183486238
  - 0.7217125382262999
  - 0.7117117117117119
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6773281179479463
  - 0.6657116480438036
  - 0.6709158216642523
  - 0.6848448038870952
  - 0.670357857857858
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6310704392661807
  - 0.5586985877368861
  - 0.5522984959086678
  - 0.5920712850320625
  - 0.6052666688963598
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7926809274391875
  - 0.8022031755989999
  - 0.7815813245851757
  - 0.7936750562523142
  - 0.797609861845973
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8035990338164252
  - 0.7997497497497498
  - 0.7990570846075434
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6122625442216559
  - 0.6278372296293568
  - 0.5727871576965885
  - 0.6039316279037533
  - 0.6180514455457007
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9889492890473237
  - 0.9880235113324743
  - 0.9885936938125676
  - 0.990164721780764
  - 0.9875095045268827
  train_average_precision_macro_oob:
  - 0.7465735656324055
  - 0.7661322511319982
  - 0.791794560896289
  - 0.8003569203646089
  - 0.8144120076797194
  train_average_precision_micro:
  - 0.9710317097906088
  - 0.9687077974267796
  - 0.9686114271854548
  - 0.971915829748453
  - 0.9690981606593879
  train_average_precision_micro_oob:
  - 0.8390122734881326
  - 0.8302971830960986
  - 0.8210391017893595
  - 0.840043485465543
  - 0.8316760430791003
  train_average_precision_samples:
  - 0.9462563131313131
  - 0.9506850600600601
  - 0.9487481315396114
  - 0.9574925261584455
  - 0.9447635135135136
  train_average_precision_samples_oob:
  - 0.8541698232323232
  - 0.8569913663663663
  - 0.8470198056801196
  - 0.8496013951170902
  - 0.846214964964965
  train_average_precision_weighted:
  - 0.9891971721446625
  - 0.988394221056613
  - 0.9888092727549567
  - 0.9905233314479548
  - 0.9879809064359526
  train_average_precision_weighted_oob:
  - 0.8364161066949872
  - 0.8250555321935197
  - 0.8209859265274071
  - 0.8418984998294956
  - 0.8268661740495747
  train_f1_macro:
  - 0.9185606060606061
  - 0.9110360360360361
  - 0.9118086696562032
  - 0.9174140508221226
  - 0.9114114114114114
  train_f1_macro_oob:
  - 0.8037878787878787
  - 0.8006756756756758
  - 0.8030642750373692
  - 0.8053064275037368
  - 0.793918918918919
  train_f1_micro:
  - 0.9185606060606061
  - 0.911036036036036
  - 0.9118086696562033
  - 0.9174140508221226
  - 0.9114114114114115
  train_f1_micro_oob:
  - 0.8037878787878788
  - 0.8006756756756757
  - 0.8030642750373692
  - 0.8053064275037369
  - 0.793918918918919
  train_f1_samples:
  - 0.9185606060606061
  - 0.911036036036036
  - 0.9118086696562033
  - 0.9174140508221226
  - 0.9114114114114115
  train_f1_samples_oob:
  - 0.8037878787878787
  - 0.8006756756756757
  - 0.8030642750373692
  - 0.8053064275037369
  - 0.793918918918919
  train_f1_weighted:
  - 0.8992702616718364
  - 0.8909372819294491
  - 0.8892138196347658
  - 0.8976951847572797
  - 0.893374362124362
  train_f1_weighted_oob:
  - 0.7688717887536785
  - 0.7674887681415096
  - 0.7678209092934971
  - 0.7691934125756359
  - 0.7592393529893531
  train_jaccard_macro:
  - 0.8517574590828042
  - 0.8390027157752229
  - 0.8413755653471866
  - 0.850019897748915
  - 0.8395050180586425
  train_jaccard_macro_oob:
  - 0.679948120926824
  - 0.6755638466885713
  - 0.6786399555131694
  - 0.6822614353183055
  - 0.6666476651630521
  train_jaccard_micro:
  - 0.8493870402802102
  - 0.8366080661840745
  - 0.8379120879120879
  - 0.8474283741801864
  - 0.8372413793103448
  train_jaccard_micro_oob:
  - 0.6719442685243825
  - 0.6676056338028169
  - 0.6709334998438964
  - 0.6740694401000938
  - 0.6582633053221288
  train_jaccard_samples:
  - 0.871038961038961
  - 0.8597490347490346
  - 0.8598868246850309
  - 0.8678945120649155
  - 0.8608322608322608
  train_jaccard_samples_oob:
  - 0.7092109405745769
  - 0.7044635544635544
  - 0.7094083046997846
  - 0.709920796692097
  - 0.6961614211614211
  train_jaccard_weighted:
  - 0.819024631547848
  - 0.805289967438007
  - 0.80397432202502
  - 0.8168116844232294
  - 0.808998947040269
  train_jaccard_weighted_oob:
  - 0.6254458454226997
  - 0.6238267225664618
  - 0.6239783889695151
  - 0.6261837111031475
  - 0.6127867805449071
  train_label_ranking_average_precision_score:
  - 0.9530744949494947
  - 0.9574418168168165
  - 0.9554745889387145
  - 0.9597346786248128
  - 0.9492680180180176
  train_label_ranking_average_precision_score_oob:
  - 0.8609880050505043
  - 0.8637481231231224
  - 0.853746263079222
  - 0.8518435475834575
  - 0.8507194694694684
  train_matthews_corrcoef_macro:
  - 0.6474831856790456
  - 0.6338085394259884
  - 0.6295954431991287
  - 0.6453095163636856
  - 0.6351440128146943
  train_matthews_corrcoef_macro_oob:
  - 0.3355374545394199
  - 0.33158258851852085
  - 0.33595270584160897
  - 0.342071204231916
  - 0.31462529539096706
  train_matthews_corrcoef_micro:
  - 0.8346634241498913
  - 0.8190416001668319
  - 0.8207482727127449
  - 0.8317032805068981
  - 0.8193474043489088
  train_matthews_corrcoef_micro_oob:
  - 0.600308655875775
  - 0.5947537367265183
  - 0.5991355448727527
  - 0.6031323333918047
  - 0.5798829003352804
  train_matthews_corrcoef_samples:
  - 0.8270097457797358
  - 0.8158769193868295
  - 0.8211580681329831
  - 0.8255785603009186
  - 0.8148360980814975
  train_matthews_corrcoef_samples_oob:
  - 0.605669178660643
  - 0.6044298595226492
  - 0.6045298865371075
  - 0.6116549552041178
  - 0.5842641216543268
  train_matthews_corrcoef_weighted:
  - 0.737001707156523
  - 0.7183894431499431
  - 0.7067260106645882
  - 0.7343899815933798
  - 0.7272892057432548
  train_matthews_corrcoef_weighted_oob:
  - 0.3467744987089938
  - 0.3455033989331303
  - 0.34824266032472384
  - 0.35352733626137123
  - 0.327926300632041
  train_ndgc:
  - 0.9633672949561869
  - 0.9675954986575205
  - 0.9656615873969736
  - 0.9736121256104935
  - 0.9637545931784236
  train_ndgc_oob:
  - 0.9043589500858653
  - 0.9059241599527696
  - 0.8985265537789716
  - 0.9021706315143693
  - 0.8990594119283338
  train_neg_coverage_error:
  - -2.859090909090909
  - -2.8445945945945947
  - -2.8295964125560538
  - -2.818385650224215
  - -2.864864864864865
  train_neg_coverage_error_oob:
  - -3.340909090909091
  - -3.3018018018018016
  - -3.318385650224215
  - -3.3295964125560538
  - -3.369369369369369
  train_neg_hamming_loss_macro:
  - -0.08143939393939394
  - -0.08896396396396396
  - -0.08819133034379671
  - -0.08258594917787743
  - -0.08858858858858859
  train_neg_hamming_loss_macro_oob:
  - -0.1962121212121212
  - -0.19932432432432431
  - -0.1969357249626308
  - -0.19469357249626307
  - -0.2060810810810811
  train_neg_hamming_loss_micro:
  - -0.08143939393939394
  - -0.08896396396396396
  - -0.08819133034379671
  - -0.08258594917787743
  - -0.08858858858858859
  train_neg_hamming_loss_micro_oob:
  - -0.1962121212121212
  - -0.19932432432432431
  - -0.1969357249626308
  - -0.19469357249626307
  - -0.20608108108108109
  train_neg_hamming_loss_samples:
  - -0.08143939393939392
  - -0.08896396396396396
  - -0.0881913303437967
  - -0.08258594917787741
  - -0.08858858858858858
  train_neg_hamming_loss_samples_oob:
  - -0.19621212121212123
  - -0.19932432432432431
  - -0.1969357249626308
  - -0.19469357249626307
  - -0.20608108108108109
  train_neg_hamming_loss_weighted:
  - -0.10072973832816352
  - -0.10906271807055096
  - -0.11078618036523431
  - -0.10230481524272035
  - -0.10662563787563789
  train_neg_hamming_loss_weighted_oob:
  - -0.2311282112463215
  - -0.23251123185849035
  - -0.23217909070650286
  - -0.23080658742436402
  - -0.240760647010647
  train_neg_label_ranking_loss:
  - -0.04188131313131313
  - -0.041260010010010006
  - -0.0406203288490284
  - -0.038814150473343294
  - -0.04565815815815816
  train_neg_label_ranking_loss_oob:
  - -0.131155303030303
  - -0.12787787787787785
  - -0.13366342800199302
  - -0.13433607374190332
  - -0.13968343343343342
  train_precision_macro:
  - 0.9185606060606061
  - 0.9110360360360361
  - 0.9118086696562032
  - 0.9174140508221226
  - 0.9114114114114114
  train_precision_macro_oob:
  - 0.8037878787878787
  - 0.8006756756756758
  - 0.8030642750373692
  - 0.8053064275037368
  - 0.793918918918919
  train_precision_micro:
  - 0.9185606060606061
  - 0.911036036036036
  - 0.9118086696562033
  - 0.9174140508221226
  - 0.9114114114114115
  train_precision_micro_oob:
  - 0.8037878787878788
  - 0.8006756756756757
  - 0.8030642750373692
  - 0.8053064275037369
  - 0.793918918918919
  train_precision_samples:
  - 0.9185606060606061
  - 0.911036036036036
  - 0.9118086696562033
  - 0.9174140508221226
  - 0.9114114114114115
  train_precision_samples_oob:
  - 0.8037878787878787
  - 0.8006756756756757
  - 0.8030642750373692
  - 0.8053064275037369
  - 0.793918918918919
  train_precision_weighted:
  - 0.8992702616718364
  - 0.8909372819294491
  - 0.8892138196347658
  - 0.8976951847572797
  - 0.893374362124362
  train_precision_weighted_oob:
  - 0.7688717887536785
  - 0.7674887681415096
  - 0.7678209092934971
  - 0.7691934125756359
  - 0.7592393529893531
  train_recall_macro:
  - 0.9185606060606061
  - 0.9110360360360361
  - 0.9118086696562032
  - 0.9174140508221226
  - 0.9114114114114114
  train_recall_macro_oob:
  - 0.8037878787878787
  - 0.8006756756756758
  - 0.8030642750373692
  - 0.8053064275037368
  - 0.793918918918919
  train_recall_micro:
  - 0.9185606060606061
  - 0.911036036036036
  - 0.9118086696562033
  - 0.9174140508221226
  - 0.9114114114114115
  train_recall_micro_oob:
  - 0.8037878787878788
  - 0.8006756756756757
  - 0.8030642750373692
  - 0.8053064275037369
  - 0.793918918918919
  train_recall_samples:
  - 0.9185606060606061
  - 0.911036036036036
  - 0.9118086696562033
  - 0.9174140508221226
  - 0.9114114114114115
  train_recall_samples_oob:
  - 0.8037878787878787
  - 0.8006756756756757
  - 0.8030642750373692
  - 0.8053064275037369
  - 0.793918918918919
  train_recall_weighted:
  - 0.8992702616718364
  - 0.8909372819294491
  - 0.8892138196347658
  - 0.8976951847572797
  - 0.893374362124362
  train_recall_weighted_oob:
  - 0.7688717887536785
  - 0.7674887681415096
  - 0.7678209092934971
  - 0.7691934125756359
  - 0.7592393529893531
  train_roc_auc_macro:
  - 0.990026845966414
  - 0.9895055242759471
  - 0.9899044539680211
  - 0.99159042675941
  - 0.98974618962668
  train_roc_auc_macro_oob:
  - 0.8535561831618693
  - 0.8489960257930466
  - 0.8492814221108588
  - 0.8642620127823704
  - 0.8583375931898707
  train_roc_auc_micro:
  - 0.974925938198941
  - 0.9731059006683959
  - 0.9735044016779918
  - 0.976138836676659
  - 0.9736686832903938
  train_roc_auc_micro_oob:
  - 0.8794865905622853
  - 0.8744346497312915
  - 0.8747778348613808
  - 0.8799836850647036
  - 0.8744801251380199
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.988627714968035
  - 0.988252998793178
  - 0.9886091513191865
  - 0.9906725556720456
  - 0.9887895273942883
  train_roc_auc_weighted_oob:
  - 0.8359631279733777
  - 0.8344549833891848
  - 0.8183614752301931
  - 0.8417389315329602
  - 0.8369024853542522
start: 2023-12-21 22:07:17.279379
wrapper: null
