active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z80MzMzMzPzP5iZmZmZmem/zMzMzMzM/L+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:02:09.682111
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__6
  params: {}
hash: 94d32029a65d9544f5a8190fccfb2bafa1878f0253efc7d944dd88a977f19921
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/94d3202_20231222T000116892302_embedding_proba__6_CHD_49.yml
results:
  fit_time:
  - 28.93172597885132
  - 30.058045148849487
  - 30.34544348716736
  - 29.902607917785645
  - 32.94038152694702
  score_time:
  - 5.676252126693726
  - 6.170541524887085
  - 6.017424821853638
  - 5.841058015823364
  - 6.36434531211853
  test_average_precision_macro:
  - 0.49623764384492475
  - 0.5124000749592424
  - 0.5231290261732752
  - 0.5292546188363001
  - 0.516551889900064
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6409315149400301
  - 0.6370474840596536
  - 0.6295286448896908
  - 0.6705313576193653
  - 0.6272649240055338
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7851278269419862
  - 0.7441691691691691
  - 0.76758008008008
  - 0.7668918918918918
  - 0.776439857288481
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6272359875480594
  - 0.6367666941205377
  - 0.6233652568891076
  - 0.6546432073235054
  - 0.6237571878993831
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6253687315634218
  - 0.6216216216216216
  - 0.6201201201201202
  - 0.6336336336336337
  - 0.6009174311926605
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6253687315634219
  - 0.6216216216216216
  - 0.6201201201201201
  - 0.6336336336336337
  - 0.6009174311926605
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6253687315634219
  - 0.6216216216216217
  - 0.6201201201201202
  - 0.6336336336336336
  - 0.6009174311926605
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5221550542191201
  - 0.5168525168525169
  - 0.5303428428428428
  - 0.5507069569569568
  - 0.491852184512735
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.48727329851523954
  - 0.4838988305236765
  - 0.4772270037047934
  - 0.4883811241326111
  - 0.4650895061188411
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.45493562231759654
  - 0.45098039215686275
  - 0.44940152339499456
  - 0.46373626373626375
  - 0.42950819672131146
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4818411676818756
  - 0.47675987675987685
  - 0.47550797550797563
  - 0.4926718926718928
  - 0.4482346399777593
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3621626367555453
  - 0.3582117087767657
  - 0.36825102769950596
  - 0.38760241187254707
  - 0.3380304571700649
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7851278269419862
  - 0.7621871871871873
  - 0.7675800800800803
  - 0.7668918918918918
  - 0.7856141692150866
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.09029453782200185
  - 0.11868723791804903
  - 0.09138490680085752
  - 0.12199117091123633
  - 0.053318944985639376
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.20417401787038195
  - 0.22145380306675214
  - 0.2140693419222205
  - 0.2586611905298956
  - 0.16507582420033326
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.15798394498139287
  - 0.1601300444161387
  - 0.1861627163337614
  - 0.20555776745210333
  - 0.13662493914638227
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.09338995558610648
  - 0.13079940098911758
  - 0.1052702981525505
  - 0.15415716412461145
  - 0.024233077708087525
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8596922658437386
  - 0.8218385302456891
  - 0.8474491126231009
  - 0.8440440290944828
  - 0.8516598183609572
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6991150442477876
  - -3.7117117117117115
  - -3.8378378378378377
  - -3.8018018018018016
  - -3.743119266055046
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.37463126843657824
  - -0.37837837837837834
  - -0.3798798798798799
  - -0.3663663663663663
  - -0.39908256880733944
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3746312684365782
  - -0.3783783783783784
  - -0.37987987987987987
  - -0.3663663663663664
  - -0.39908256880733944
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.37463126843657807
  - -0.37837837837837845
  - -0.37987987987987987
  - -0.36636636636636627
  - -0.39908256880733933
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.47784494578088005
  - -0.4831474831474831
  - -0.46965715715715717
  - -0.44929304304304307
  - -0.5081478154872651
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21764995083579156
  - -0.25070070070070066
  - -0.25475475475475473
  - -0.24316816816816814
  - -0.21699796126401633
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6253687315634218
  - 0.6216216216216216
  - 0.6201201201201202
  - 0.6336336336336337
  - 0.6009174311926605
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6253687315634219
  - 0.6216216216216216
  - 0.6201201201201201
  - 0.6336336336336337
  - 0.6009174311926605
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6253687315634219
  - 0.6216216216216217
  - 0.6201201201201202
  - 0.6336336336336336
  - 0.6009174311926605
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5221550542191201
  - 0.5168525168525169
  - 0.5303428428428428
  - 0.5507069569569568
  - 0.491852184512735
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6253687315634218
  - 0.6216216216216216
  - 0.6201201201201202
  - 0.6336336336336337
  - 0.6009174311926605
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6253687315634219
  - 0.6216216216216216
  - 0.6201201201201201
  - 0.6336336336336337
  - 0.6009174311926605
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6253687315634219
  - 0.6216216216216217
  - 0.6201201201201202
  - 0.6336336336336336
  - 0.6009174311926605
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5221550542191201
  - 0.5168525168525169
  - 0.5303428428428428
  - 0.5507069569569568
  - 0.491852184512735
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5465717462391169
  - 0.5453280329445364
  - 0.573912154200467
  - 0.5986395013792706
  - 0.5789383334658846
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7381139629656109
  - 0.7137375782112624
  - 0.7128986625514404
  - 0.7521127278071722
  - 0.7407266646397082
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7823500491642085
  - .nan
  - 0.7452452452452452
  - 0.7568318318318318
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5739980773522156
  - 0.5347110492982777
  - 0.5513698506369028
  - 0.6131856901614657
  - 0.5512557866018728
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8135970879884266
  - 0.8207530281007255
  - 0.8138748015591188
  - 0.8237959561794259
  - 0.8204376572777571
  train_average_precision_macro_oob:
  - 0.7332227576003246
  - 0.7388922650202518
  - 0.7318097543859875
  - 0.7295201362006232
  - 0.7346796764794855
  train_average_precision_micro:
  - 0.8817195251634037
  - 0.8811029574571487
  - 0.8832523730889907
  - 0.8823230289972812
  - 0.8791454885712111
  train_average_precision_micro_oob:
  - 0.8740244834792225
  - 0.8760791633942232
  - 0.8782442636996979
  - 0.8756121861391083
  - 0.8741913762185725
  train_average_precision_samples:
  - 0.890956510809452
  - 0.8994838588588588
  - 0.8881199949949948
  - 0.8949136636636638
  - 0.9004172894867962
  train_average_precision_samples_oob:
  - 0.876464303670186
  - 0.8918324574574574
  - 0.8835372872872873
  - 0.8843405905905907
  - 0.8879017189835576
  train_average_precision_weighted:
  - 0.8765656475916885
  - 0.8791983641269775
  - 0.8796667739159095
  - 0.8818696165196408
  - 0.8777566285642837
  train_average_precision_weighted_oob:
  - 0.8663020320830175
  - 0.8699153591074779
  - 0.8712986913320535
  - 0.8722372359123413
  - 0.8693492361841123
  train_f1_macro:
  - 0.7756410256410255
  - 0.774024024024024
  - 0.7706456456456457
  - 0.7710210210210211
  - 0.7780269058295963
  train_f1_macro_oob:
  - 0.7658371040723981
  - 0.7556306306306307
  - 0.7563813813813813
  - 0.7597597597597597
  - 0.7679372197309416
  train_f1_micro:
  - 0.7756410256410257
  - 0.774024024024024
  - 0.7706456456456456
  - 0.771021021021021
  - 0.7780269058295964
  train_f1_micro_oob:
  - 0.7658371040723982
  - 0.7556306306306306
  - 0.7563813813813813
  - 0.7597597597597597
  - 0.7679372197309418
  train_f1_samples:
  - 0.7756410256410258
  - 0.7740240240240239
  - 0.7706456456456455
  - 0.7710210210210211
  - 0.7780269058295964
  train_f1_samples_oob:
  - 0.7658371040723982
  - 0.7556306306306306
  - 0.7563813813813814
  - 0.7597597597597597
  - 0.7679372197309418
  train_f1_weighted:
  - 0.7157421129802767
  - 0.7150822288256843
  - 0.7089239589239588
  - 0.7097724910224911
  - 0.7183359550473866
  train_f1_weighted_oob:
  - 0.7066726315291595
  - 0.6967713787085514
  - 0.6959754772254773
  - 0.6988104800604801
  - 0.7085025708449746
  train_jaccard_macro:
  - 0.6478278937130774
  - 0.6452606473770492
  - 0.6418164277266726
  - 0.6421607051074583
  - 0.650932755513721
  train_jaccard_macro_oob:
  - 0.6345837009694707
  - 0.6213505122633434
  - 0.6228356987375487
  - 0.6273770744639628
  - 0.6374198333155242
  train_jaccard_micro:
  - 0.6335078534031413
  - 0.6313533374157991
  - 0.6268702290076336
  - 0.6273671350030544
  - 0.636697247706422
  train_jaccard_micro_oob:
  - 0.620531622364803
  - 0.6072398190045248
  - 0.6082100814971325
  - 0.612590799031477
  - 0.6232939035486806
  train_jaccard_samples:
  - 0.660040939452704
  - 0.657046332046332
  - 0.6537323037323037
  - 0.6535070785070785
  - 0.6628550074738415
  train_jaccard_samples_oob:
  - 0.6467571644042233
  - 0.6311347061347061
  - 0.6344165594165594
  - 0.6389425139425139
  - 0.648814862267777
  train_jaccard_weighted:
  - 0.564125422552318
  - 0.5626636280438793
  - 0.5554203243041136
  - 0.5562134969202257
  - 0.5669141435409115
  train_jaccard_weighted_oob:
  - 0.5520852666340881
  - 0.5395159860784744
  - 0.538315905166243
  - 0.5420650389192757
  - 0.5540337630908959
  train_label_ranking_average_precision_score:
  - 0.8977438411261939
  - 0.9017361111111102
  - 0.8948767517517511
  - 0.9016704204204203
  - 0.9049015944195312
  train_label_ranking_average_precision_score_oob:
  - 0.8832516339869274
  - 0.8940847097097089
  - 0.8902940440440437
  - 0.8910973473473468
  - 0.8923860239162923
  train_matthews_corrcoef_macro:
  - 0.4564299882663782
  - 0.4510032774960319
  - 0.44649976386955803
  - 0.4424334192892769
  - 0.45812087178238414
  train_matthews_corrcoef_macro_oob:
  - 0.43512594976554037
  - 0.4132498421016119
  - 0.41532902566954344
  - 0.4185158364605348
  - 0.4368783780406331
  train_matthews_corrcoef_micro:
  - 0.5869731708201646
  - 0.582476988783146
  - 0.5764752434636911
  - 0.5760755549813312
  - 0.5885214956166425
  train_matthews_corrcoef_micro_oob:
  - 0.5683544998915679
  - 0.5486550130577698
  - 0.5495011483437278
  - 0.5545427008333051
  - 0.5692122116547761
  train_matthews_corrcoef_samples:
  - 0.5157375698461849
  - 0.53176316317388
  - 0.5170386824283904
  - 0.509850990635824
  - 0.5213171962000315
  train_matthews_corrcoef_samples_oob:
  - 0.5001043037484186
  - 0.49024877655198634
  - 0.4926892399841352
  - 0.4857414798799418
  - 0.49772693594459705
  train_matthews_corrcoef_weighted:
  - 0.5203822104974546
  - 0.5167446340484723
  - 0.5120576655787242
  - 0.5091292811062567
  - 0.5239874261093247
  train_matthews_corrcoef_weighted_oob:
  - 0.5018585939446751
  - 0.4819424080285076
  - 0.48409617069554356
  - 0.4868280800972841
  - 0.5043996075185632
  train_ndgc:
  - 0.9308938245779877
  - 0.9396172015594841
  - 0.9279207032506613
  - 0.9341632760088562
  - 0.9387046939679123
  train_ndgc_oob:
  - 0.9212024802368913
  - 0.9358053636728416
  - 0.9265918416961746
  - 0.9281240236860301
  - 0.9317302332539192
  train_neg_coverage_error:
  - -3.253393665158371
  - -3.189189189189189
  - -3.225225225225225
  - -3.231981981981982
  - -3.1681614349775784
  train_neg_coverage_error_oob:
  - -3.3552036199095023
  - -3.2882882882882885
  - -3.277027027027027
  - -3.324324324324324
  - -3.2600896860986546
  train_neg_hamming_loss_macro:
  - -0.22435897435897437
  - -0.225975975975976
  - -0.22935435435435436
  - -0.22897897897897898
  - -0.2219730941704036
  train_neg_hamming_loss_macro_oob:
  - -0.23416289592760178
  - -0.24436936936936937
  - -0.24361861861861864
  - -0.24024024024024024
  - -0.23206278026905824
  train_neg_hamming_loss_micro:
  - -0.22435897435897437
  - -0.22597597597597596
  - -0.22935435435435436
  - -0.22897897897897898
  - -0.2219730941704036
  train_neg_hamming_loss_micro_oob:
  - -0.2341628959276018
  - -0.24436936936936937
  - -0.2436186186186186
  - -0.24024024024024024
  - -0.2320627802690583
  train_neg_hamming_loss_samples:
  - -0.22435897435897434
  - -0.225975975975976
  - -0.2293543543543544
  - -0.22897897897897895
  - -0.2219730941704036
  train_neg_hamming_loss_samples_oob:
  - -0.2341628959276018
  - -0.24436936936936937
  - -0.2436186186186186
  - -0.2402402402402402
  - -0.2320627802690583
  train_neg_hamming_loss_weighted:
  - -0.2842578870197235
  - -0.28491777117431566
  - -0.29107604107604107
  - -0.29022750897750904
  - -0.28166404495261343
  train_neg_hamming_loss_weighted_oob:
  - -0.29332736847084045
  - -0.3032286212914485
  - -0.3040245227745228
  - -0.30118951993952
  - -0.2914974291550254
  train_neg_label_ranking_loss:
  - -0.10317370537958773
  - -0.10572447447447447
  - -0.1085523023023023
  - -0.10073198198198197
  - -0.09908445440956652
  train_neg_label_ranking_loss_oob:
  - -0.12192684766214178
  - -0.11647272272272274
  - -0.11328203203203203
  - -0.11648523523523524
  - -0.11249999999999999
  train_precision_macro:
  - 0.7756410256410255
  - 0.774024024024024
  - 0.7706456456456457
  - 0.7710210210210211
  - 0.7780269058295963
  train_precision_macro_oob:
  - 0.7658371040723981
  - 0.7556306306306307
  - 0.7563813813813813
  - 0.7597597597597597
  - 0.7679372197309416
  train_precision_micro:
  - 0.7756410256410257
  - 0.774024024024024
  - 0.7706456456456456
  - 0.771021021021021
  - 0.7780269058295964
  train_precision_micro_oob:
  - 0.7658371040723982
  - 0.7556306306306306
  - 0.7563813813813813
  - 0.7597597597597597
  - 0.7679372197309418
  train_precision_samples:
  - 0.7756410256410258
  - 0.7740240240240239
  - 0.7706456456456455
  - 0.7710210210210211
  - 0.7780269058295964
  train_precision_samples_oob:
  - 0.7658371040723982
  - 0.7556306306306306
  - 0.7563813813813814
  - 0.7597597597597597
  - 0.7679372197309418
  train_precision_weighted:
  - 0.7157421129802767
  - 0.7150822288256843
  - 0.7089239589239588
  - 0.7097724910224911
  - 0.7183359550473866
  train_precision_weighted_oob:
  - 0.7066726315291595
  - 0.6967713787085514
  - 0.6959754772254773
  - 0.6988104800604801
  - 0.7085025708449746
  train_recall_macro:
  - 0.7756410256410255
  - 0.774024024024024
  - 0.7706456456456457
  - 0.7710210210210211
  - 0.7780269058295963
  train_recall_macro_oob:
  - 0.7658371040723981
  - 0.7556306306306307
  - 0.7563813813813813
  - 0.7597597597597597
  - 0.7679372197309416
  train_recall_micro:
  - 0.7756410256410257
  - 0.774024024024024
  - 0.7706456456456456
  - 0.771021021021021
  - 0.7780269058295964
  train_recall_micro_oob:
  - 0.7658371040723982
  - 0.7556306306306306
  - 0.7563813813813813
  - 0.7597597597597597
  - 0.7679372197309418
  train_recall_samples:
  - 0.7756410256410258
  - 0.7740240240240239
  - 0.7706456456456455
  - 0.7710210210210211
  - 0.7780269058295964
  train_recall_samples_oob:
  - 0.7658371040723982
  - 0.7556306306306306
  - 0.7563813813813814
  - 0.7597597597597597
  - 0.7679372197309418
  train_recall_weighted:
  - 0.7157421129802767
  - 0.7150822288256843
  - 0.7089239589239588
  - 0.7097724910224911
  - 0.7183359550473866
  train_recall_weighted_oob:
  - 0.7066726315291595
  - 0.6967713787085514
  - 0.6959754772254773
  - 0.6988104800604801
  - 0.7085025708449746
  train_roc_auc_macro:
  - 0.8241626596866082
  - 0.8201480078678774
  - 0.8189990931672263
  - 0.8124163637198247
  - 0.8215976377473204
  train_roc_auc_macro_oob:
  - 0.806627319119321
  - 0.796916345974406
  - 0.802314268743542
  - 0.7669856917287773
  - 0.8009536012940423
  train_roc_auc_micro:
  - 0.8848428001519756
  - 0.8872698645917403
  - 0.8893517666543982
  - 0.8884278961170409
  - 0.8875326512222109
  train_roc_auc_micro_oob:
  - 0.8760054488842761
  - 0.8821564150496543
  - 0.8841363406330511
  - 0.8810596475892528
  - 0.881952571604558
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.816634282959213
  - 0.8197835791880924
  - 0.8222719554660379
  - 0.8178100703971048
  - 0.8155758266042195
  train_roc_auc_weighted_oob:
  - 0.8087145296893754
  - 0.8173201918660201
  - 0.8178248961050962
  - 0.8088207132522006
  - 0.8108536407809406
start: 2023-12-22 00:01:16.892302
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
