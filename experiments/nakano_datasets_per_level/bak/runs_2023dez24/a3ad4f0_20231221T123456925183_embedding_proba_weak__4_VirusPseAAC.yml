active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/gGZmZmZm9j8AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:35:31.330476
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__4
  params: {}
hash: a3ad4f0592c21c85c3bca68ba6b52daf9b4cf2ff7f08e961096a98e8f4bc69a7
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a3ad4f0_20231221T123456925183_embedding_proba_weak__4_VirusPseAAC.yml
results:
  fit_time:
  - 24.566645860671997
  - 24.15013360977173
  - 25.330063581466675
  - 25.0976140499115
  - 24.76098608970642
  score_time:
  - 2.9682650566101074
  - 3.0483522415161133
  - 3.081223487854004
  - 3.0325469970703125
  - 3.0824038982391357
  test_average_precision_macro:
  - 0.41421561491383363
  - 0.2720742345138658
  - 0.4108275753908453
  - 0.454370528285621
  - 0.4224377230512288
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.39344255406357753
  - 0.3738146024779438
  - 0.41219237067976394
  - 0.4039317806705509
  - 0.40527128702846954
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6662698412698413
  - 0.6594850948509485
  - 0.6362433862433863
  - 0.6391666666666667
  - 0.6499999999999999
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4212793374297191
  - 0.3922236314737229
  - 0.45005005724498626
  - 0.4253691004058897
  - 0.4178999226068503
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7976190476190476
  - 0.7967479674796748
  - 0.7976190476190478
  - 0.7916666666666666
  - 0.7936507936507936
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7976190476190477
  - 0.7967479674796748
  - 0.7976190476190477
  - 0.7916666666666666
  - 0.7936507936507936
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7976190476190478
  - 0.7967479674796749
  - 0.7976190476190478
  - 0.7916666666666667
  - 0.7936507936507937
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6895424836601307
  - 0.6673170731707317
  - 0.6776190476190476
  - 0.675
  - 0.6825396825396826
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6873043997481778
  - 0.6908549766353463
  - 0.6906128021635896
  - 0.6812122532946332
  - 0.6832132249965706
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6633663366336634
  - 0.6621621621621622
  - 0.6633663366336634
  - 0.6551724137931034
  - 0.6578947368421053
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6695011337868481
  - 0.6684088269454124
  - 0.6695011337868481
  - 0.6607142857142858
  - 0.663265306122449
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5450841424207683
  - 0.5209935149540954
  - 0.5313114770955082
  - 0.5301811841857609
  - 0.5378483784483178
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6662698412698412
  - 0.6594850948509485
  - 0.636243386243386
  - 0.6391666666666665
  - 0.6499999999999998
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - -0.02146403054055949
  - 0.0
  - -0.02146403054055949
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - -0.031403095266735466
  - 0.0
  - -0.031794368145181356
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - -0.004761904761904762
  - 0.0
  - -0.004761904761904762
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - -0.04378662230274136
  - 0.0
  - -0.04292806108111898
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7531326727749933
  - 0.7435430540980025
  - 0.7322515082637179
  - 0.7348943917414849
  - 0.7419814708427273
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2857142857142856
  - -2.4634146341463414
  - -2.4285714285714284
  - -2.3
  - -2.4285714285714284
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2023809523809524
  - -0.2032520325203252
  - -0.2023809523809524
  - -0.20833333333333337
  - -0.20634920634920637
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20238095238095238
  - -0.2032520325203252
  - -0.20238095238095238
  - -0.20833333333333334
  - -0.20634920634920634
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20238095238095233
  - -0.20325203252032517
  - -0.20238095238095233
  - -0.20833333333333331
  - -0.20634920634920634
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.31045751633986923
  - -0.33268292682926826
  - -0.3223809523809523
  - -0.325
  - -0.31746031746031744
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21369047619047615
  - -0.25447154471544714
  - -0.23862433862433863
  - -0.21437499999999998
  - -0.23630952380952383
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7976190476190476
  - 0.7967479674796748
  - 0.7976190476190478
  - 0.7916666666666666
  - 0.7936507936507936
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7976190476190477
  - 0.7967479674796748
  - 0.7976190476190477
  - 0.7916666666666666
  - 0.7936507936507936
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7976190476190478
  - 0.7967479674796749
  - 0.7976190476190478
  - 0.7916666666666667
  - 0.7936507936507937
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6895424836601307
  - 0.6673170731707317
  - 0.6776190476190476
  - 0.675
  - 0.6825396825396826
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7976190476190476
  - 0.7967479674796748
  - 0.7976190476190478
  - 0.7916666666666666
  - 0.7936507936507936
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7976190476190477
  - 0.7967479674796748
  - 0.7976190476190477
  - 0.7916666666666666
  - 0.7936507936507936
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7976190476190478
  - 0.7967479674796749
  - 0.7976190476190478
  - 0.7916666666666667
  - 0.7936507936507937
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6895424836601307
  - 0.6673170731707317
  - 0.6776190476190476
  - 0.675
  - 0.6825396825396826
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6249120174010525
  - 0.4461276905330614
  - 0.6619551042496586
  - 0.6630227574121437
  - 0.6206886965312441
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7740708223587942
  - 0.7290816326530614
  - 0.7817821782178217
  - 0.7803157894736842
  - 0.7691932494390791
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7863095238095238
  - 0.7455284552845528
  - 0.7613756613756614
  - 0.785625
  - 0.7636904761904763
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.541095763541584
  - 0.4741966034357339
  - 0.592766330460297
  - 0.5665288434214265
  - 0.5684977148754239
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7331419686375655
  - 0.7068638113690753
  - 0.7416319501113344
  - 0.7255333423680742
  - 0.7075984454571754
  train_average_precision_macro_oob:
  - 0.6074521263846514
  - 0.5857945554433687
  - 0.6221767746081652
  - 0.5642646981917878
  - 0.634227259239938
  train_average_precision_micro:
  - 0.7740151991393742
  - 0.7584339817427971
  - 0.776321768284715
  - 0.7804264391625563
  - 0.797231927873475
  train_average_precision_micro_oob:
  - 0.7202008740714297
  - 0.6934787690541943
  - 0.715960072784427
  - 0.72258524048144
  - 0.737373279025479
  train_average_precision_samples:
  - 0.8191414141414142
  - 0.8129518072289156
  - 0.8458585858585859
  - 0.8198602794411177
  - 0.8325252525252526
  train_average_precision_samples_oob:
  - 0.7774242424242425
  - 0.7737951807228916
  - 0.7879797979797979
  - 0.7864604125083168
  - 0.7737373737373737
  train_average_precision_weighted:
  - 0.7585575855691232
  - 0.7469053355785918
  - 0.7567012758333622
  - 0.7632155194857947
  - 0.7749987778981454
  train_average_precision_weighted_oob:
  - 0.7178745225205987
  - 0.6893070727355628
  - 0.7172786142414534
  - 0.7197565325651313
  - 0.7513183551030723
  train_f1_macro:
  - 0.8606060606060607
  - 0.859437751004016
  - 0.8646464646464648
  - 0.8622754491017964
  - 0.8616161616161616
  train_f1_macro_oob:
  - 0.8474747474747475
  - 0.8383534136546186
  - 0.8464646464646465
  - 0.8353293413173654
  - 0.8353535353535354
  train_f1_micro:
  - 0.8606060606060606
  - 0.8594377510040161
  - 0.8646464646464647
  - 0.8622754491017964
  - 0.8616161616161616
  train_f1_micro_oob:
  - 0.8474747474747475
  - 0.8383534136546185
  - 0.8464646464646465
  - 0.8353293413173652
  - 0.8353535353535354
  train_f1_samples:
  - 0.8606060606060605
  - 0.8594377510040159
  - 0.8646464646464644
  - 0.8622754491017962
  - 0.8616161616161616
  train_f1_samples_oob:
  - 0.8474747474747474
  - 0.8383534136546182
  - 0.8464646464646463
  - 0.8353293413173651
  - 0.8353535353535353
  train_f1_weighted:
  - 0.8102517714458012
  - 0.8090182512227126
  - 0.821032103210321
  - 0.8140451769727871
  - 0.8124528870797526
  train_f1_weighted_oob:
  - 0.7834464043419266
  - 0.7686090898246452
  - 0.7842184218421842
  - 0.7596193751111637
  - 0.7588421528720035
  train_jaccard_macro:
  - 0.7618848041592097
  - 0.7600914414887651
  - 0.7668422732212842
  - 0.7642153643246113
  - 0.7632663093047981
  train_jaccard_macro_oob:
  - 0.7449355937102146
  - 0.7331810954957211
  - 0.7430656086700947
  - 0.7305424638148854
  - 0.7302205321759727
  train_jaccard_micro:
  - 0.7553191489361702
  - 0.7535211267605634
  - 0.7615658362989324
  - 0.7578947368421053
  - 0.7568766637089619
  train_jaccard_micro_oob:
  - 0.7353198948290973
  - 0.7216940363007779
  - 0.7338003502626971
  - 0.7172236503856041
  - 0.7172593235039029
  train_jaccard_samples:
  - 0.7670995670995672
  - 0.7666379804934021
  - 0.7753246753246754
  - 0.7694610778443114
  - 0.76998556998557
  train_jaccard_samples_oob:
  - 0.7477633477633479
  - 0.736374067699369
  - 0.7483405483405484
  - 0.7285429141716567
  - 0.7308802308802309
  train_jaccard_weighted:
  - 0.6848499301571659
  - 0.6835268459965113
  - 0.6995038000068365
  - 0.6899815473428578
  - 0.6878567708015275
  train_jaccard_weighted_oob:
  - 0.6502492419433553
  - 0.6325046487971197
  - 0.6513572136012625
  - 0.6219217113100012
  - 0.6203712430152931
  train_label_ranking_average_precision_score:
  - 0.819141414141414
  - 0.8129518072289156
  - 0.8458585858585859
  - 0.8198602794411177
  - 0.8325252525252526
  train_label_ranking_average_precision_score_oob:
  - 0.7774242424242422
  - 0.7737951807228913
  - 0.7879797979797979
  - 0.7864604125083167
  - 0.7737373737373736
  train_matthews_corrcoef_macro:
  - 0.1921726420973254
  - 0.22830025538293297
  - 0.20152973712232347
  - 0.1943665289822043
  - 0.19382456371939064
  train_matthews_corrcoef_macro_oob:
  - 0.16706895194125093
  - 0.14793467438208616
  - 0.16683888902958097
  - 0.13831723746484278
  - 0.14188322544335644
  train_matthews_corrcoef_micro:
  - 0.5165006596890355
  - 0.5093541443000598
  - 0.5363847474751129
  - 0.5198258550192928
  - 0.5208647492754842
  train_matthews_corrcoef_micro_oob:
  - 0.4569424945387966
  - 0.40885048001454416
  - 0.4555211008851187
  - 0.3896785621886001
  - 0.3958346398239236
  train_matthews_corrcoef_samples:
  - 0.330566895949536
  - 0.3329148717116855
  - 0.3499927553907356
  - 0.32391248401839745
  - 0.33724952263983277
  train_matthews_corrcoef_samples_oob:
  - 0.26738962734872007
  - 0.23630836580864897
  - 0.2774046600959801
  - 0.19623813722057915
  - 0.21358755628910314
  train_matthews_corrcoef_weighted:
  - 0.392960267377152
  - 0.41026775463139326
  - 0.4100414153349258
  - 0.3958109432561678
  - 0.3966710755705274
  train_matthews_corrcoef_weighted_oob:
  - 0.3417207538431103
  - 0.29824495482010227
  - 0.33984761228972
  - 0.28277229869587994
  - 0.29076418965334616
  train_ndgc:
  - 0.8659644266561796
  - 0.861579157764169
  - 0.8862530099052945
  - 0.8666958221894959
  - 0.8770630320439154
  train_ndgc_oob:
  - 0.8361103880516904
  - 0.8330217582240559
  - 0.8425176949059768
  - 0.8419729613744729
  - 0.8332082124040464
  train_neg_coverage_error:
  - -1.8363636363636364
  - -1.8614457831325302
  - -1.793939393939394
  - -1.8023952095808384
  - -1.8242424242424242
  train_neg_coverage_error_oob:
  - -2.018181818181818
  - -2.0180722891566263
  - -1.9878787878787878
  - -2.0
  - -2.018181818181818
  train_neg_hamming_loss_macro:
  - -0.13939393939393938
  - -0.14056224899598393
  - -0.13535353535353534
  - -0.1377245508982036
  - -0.1383838383838384
  train_neg_hamming_loss_macro_oob:
  - -0.1525252525252525
  - -0.1616465863453815
  - -0.15353535353535352
  - -0.16467065868263472
  - -0.16464646464646462
  train_neg_hamming_loss_micro:
  - -0.1393939393939394
  - -0.14056224899598393
  - -0.13535353535353536
  - -0.1377245508982036
  - -0.1383838383838384
  train_neg_hamming_loss_micro_oob:
  - -0.15252525252525254
  - -0.16164658634538154
  - -0.15353535353535352
  - -0.16467065868263472
  - -0.16464646464646465
  train_neg_hamming_loss_samples:
  - -0.1393939393939394
  - -0.1405622489959839
  - -0.13535353535353534
  - -0.13772455089820357
  - -0.1383838383838384
  train_neg_hamming_loss_samples_oob:
  - -0.1525252525252525
  - -0.1616465863453815
  - -0.1535353535353535
  - -0.1646706586826347
  - -0.16464646464646462
  train_neg_hamming_loss_weighted:
  - -0.1897482285541987
  - -0.19098174877728732
  - -0.17896789678967898
  - -0.18595482302721292
  - -0.18754711292024728
  train_neg_hamming_loss_weighted_oob:
  - -0.21655359565807325
  - -0.2313909101753549
  - -0.21578157815781576
  - -0.2403806248888362
  - -0.2411578471279964
  train_neg_label_ranking_loss:
  - -0.12045454545454545
  - -0.12394578313253012
  - -0.10946127946127945
  - -0.11503659347970725
  - -0.1149158249158249
  train_neg_label_ranking_loss_oob:
  - -0.153013468013468
  - -0.15481927710843374
  - -0.15095959595959596
  - -0.15342648037258813
  - -0.15437710437710436
  train_precision_macro:
  - 0.8606060606060607
  - 0.859437751004016
  - 0.8646464646464648
  - 0.8622754491017964
  - 0.8616161616161616
  train_precision_macro_oob:
  - 0.8474747474747475
  - 0.8383534136546186
  - 0.8464646464646465
  - 0.8353293413173654
  - 0.8353535353535354
  train_precision_micro:
  - 0.8606060606060606
  - 0.8594377510040161
  - 0.8646464646464647
  - 0.8622754491017964
  - 0.8616161616161616
  train_precision_micro_oob:
  - 0.8474747474747475
  - 0.8383534136546185
  - 0.8464646464646465
  - 0.8353293413173652
  - 0.8353535353535354
  train_precision_samples:
  - 0.8606060606060605
  - 0.8594377510040159
  - 0.8646464646464644
  - 0.8622754491017962
  - 0.8616161616161616
  train_precision_samples_oob:
  - 0.8474747474747474
  - 0.8383534136546182
  - 0.8464646464646463
  - 0.8353293413173651
  - 0.8353535353535353
  train_precision_weighted:
  - 0.8102517714458012
  - 0.8090182512227126
  - 0.821032103210321
  - 0.8140451769727871
  - 0.8124528870797526
  train_precision_weighted_oob:
  - 0.7834464043419266
  - 0.7686090898246452
  - 0.7842184218421842
  - 0.7596193751111637
  - 0.7588421528720035
  train_recall_macro:
  - 0.8606060606060607
  - 0.859437751004016
  - 0.8646464646464648
  - 0.8622754491017964
  - 0.8616161616161616
  train_recall_macro_oob:
  - 0.8474747474747475
  - 0.8383534136546186
  - 0.8464646464646465
  - 0.8353293413173654
  - 0.8353535353535354
  train_recall_micro:
  - 0.8606060606060606
  - 0.8594377510040161
  - 0.8646464646464647
  - 0.8622754491017964
  - 0.8616161616161616
  train_recall_micro_oob:
  - 0.8474747474747475
  - 0.8383534136546185
  - 0.8464646464646465
  - 0.8353293413173652
  - 0.8353535353535354
  train_recall_samples:
  - 0.8606060606060605
  - 0.8594377510040159
  - 0.8646464646464644
  - 0.8622754491017962
  - 0.8616161616161616
  train_recall_samples_oob:
  - 0.8474747474747474
  - 0.8383534136546182
  - 0.8464646464646463
  - 0.8353293413173651
  - 0.8353535353535353
  train_recall_weighted:
  - 0.8102517714458012
  - 0.8090182512227126
  - 0.821032103210321
  - 0.8140451769727871
  - 0.8124528870797526
  train_recall_weighted_oob:
  - 0.7834464043419266
  - 0.7686090898246452
  - 0.7842184218421842
  - 0.7596193751111637
  - 0.7588421528720035
  train_roc_auc_macro:
  - 0.8302236999606398
  - 0.8428529943640224
  - 0.844648548493014
  - 0.8453729452227415
  - 0.8374644711888543
  train_roc_auc_macro_oob:
  - 0.816684219910135
  - 0.8047734122252042
  - 0.8212069508001295
  - 0.8068265510422905
  - 0.8390840088850088
  train_roc_auc_micro:
  - 0.888680803838854
  - 0.8936391750006234
  - 0.8956500980047244
  - 0.895730198019802
  - 0.8990724451254501
  train_roc_auc_micro_oob:
  - 0.8710061858010328
  - 0.8634187096291494
  - 0.8720472935618435
  - 0.8676423267326733
  - 0.8747832447395468
  train_roc_auc_samples:
  - 0.8795454545454545
  - 0.87605421686747
  - 0.8905387205387204
  - 0.8849634065202928
  - 0.8850841750841751
  train_roc_auc_samples_oob:
  - 0.846986531986532
  - 0.8451807228915663
  - 0.8490404040404039
  - 0.8465735196274118
  - 0.8456228956228956
  train_roc_auc_weighted:
  - 0.7909432528461371
  - 0.8094736953799606
  - 0.805492254882929
  - 0.8074377794026438
  - 0.8149208878357597
  train_roc_auc_weighted_oob:
  - 0.7935133925152745
  - 0.7848907963960507
  - 0.7955563917476908
  - 0.8149876716840992
  - 0.8234827653462325
start: 2023-12-21 12:34:56.925183
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
