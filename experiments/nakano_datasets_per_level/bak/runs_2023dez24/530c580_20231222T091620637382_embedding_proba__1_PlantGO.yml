active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv0AzMzMzM+O/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZ2b+AZmZmZmYSQAA0MzMzM+M/AGZmZmZm9r8AMzMzMzMLwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:16:42.465814
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__1
  params: {}
hash: 530c5800a972b584fe4580e9ac4da84e4216376c3eb5b72f308dc72f7eb44bdf
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/530c580_20231222T091620637382_embedding_proba__1_PlantGO.yml
results:
  fit_time:
  - 5.251290559768677
  - 5.373537302017212
  - 5.383153915405273
  - 5.222079038619995
  - 4.774396181106567
  score_time:
  - 2.9512345790863037
  - 2.842111110687256
  - 2.920954942703247
  - 2.9399149417877197
  - 3.1392548084259033
  test_average_precision_macro:
  - 0.8210476462032109
  - 0.748761504973059
  - 0.7949782304813121
  - 0.841940760457173
  - 0.720844567509825
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8502641266883301
  - 0.8043434488448559
  - 0.8344111417597032
  - 0.8745282759774752
  - 0.819644533285178
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9086309523809523
  - 0.8775887143688189
  - 0.8754662004662004
  - 0.8892272983643541
  - 0.8631610433117971
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8603505902810313
  - 0.7998642152670541
  - 0.8652404469784162
  - 0.8913140785420776
  - 0.8290905928526457
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478632
  - 0.9115905245346871
  - 0.9158291457286433
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478632
  - 0.9115905245346869
  - 0.9158291457286433
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478631
  - 0.9115905245346869
  - 0.9158291457286433
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8548324990373507
  - 0.831513338319621
  - 0.8443880019351717
  - 0.8351589633983434
  - 0.8489380866597137
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8517464957273382
  - 0.8435567723889789
  - 0.8486517560431257
  - 0.8472357062768391
  - 0.8525382490156312
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8447058823529412
  - 0.8336
  - 0.8403460479748329
  - 0.8375437232802176
  - 0.8447276940903824
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8465575241085445
  - 0.8347390829066219
  - 0.8417582417582415
  - 0.8381212695933506
  - 0.8461538461538459
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.753087665780825
  - 0.7222550892446239
  - 0.7386761099223139
  - 0.7279176572323081
  - 0.7452359100987486
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9086309523809524
  - 0.877588714368819
  - 0.8754662004662004
  - 0.8892272983643542
  - 0.863161043311797
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03609250705931857
  - 0.01314370554178239
  - 0.028522372795027368
  - 0.0
  - 0.042829829103534243
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.24585594855721332
  - 0.09305248420096078
  - 0.1968647679726985
  - 0.0
  - 0.21701957316301898
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.07142857142857142
  - 0.010471204188481676
  - 0.046153846153846156
  - 0.0
  - 0.0598446779351302
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11644940956874482
  - 0.0428109266218055
  - 0.09202501411225811
  - 0.0
  - 0.11954091551288552
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9321979360659715
  - 0.9103336974330353
  - 0.9078722016851074
  - 0.9180948450385291
  - 0.8986449638341363
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4183673469387754
  - -1.5602094240837696
  - -1.5692307692307692
  - -1.4111675126903553
  - -1.5628140703517588
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08418367346938775
  - -0.09075043630017453
  - -0.08675213675213676
  - -0.08840947546531303
  - -0.08417085427135679
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08418367346938775
  - -0.09075043630017451
  - -0.08675213675213675
  - -0.08840947546531303
  - -0.08417085427135679
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08418367346938775
  - -0.09075043630017453
  - -0.08675213675213674
  - -0.08840947546531304
  - -0.08417085427135679
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1451675009626492
  - -0.16848666168037893
  - -0.15561199806482826
  - -0.1648410366016564
  - -0.15106191334028632
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.028270803270803273
  - -0.03654785199287817
  - -0.04118881118881119
  - -0.030895246885094603
  - -0.04296482412060302
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478632
  - 0.9115905245346871
  - 0.9158291457286433
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478632
  - 0.9115905245346869
  - 0.9158291457286433
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478631
  - 0.9115905245346869
  - 0.9158291457286433
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8548324990373507
  - 0.831513338319621
  - 0.8443880019351717
  - 0.8351589633983434
  - 0.8489380866597137
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478632
  - 0.9115905245346871
  - 0.9158291457286433
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478632
  - 0.9115905245346869
  - 0.9158291457286433
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9158163265306123
  - 0.9092495636998255
  - 0.9132478632478631
  - 0.9115905245346869
  - 0.9158291457286433
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8548324990373507
  - 0.831513338319621
  - 0.8443880019351717
  - 0.8351589633983434
  - 0.8489380866597137
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9742914143023937
  - 0.9544677781995992
  - 0.964269388259615
  - 0.9817882552033869
  - 0.9638691863741928
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9773871451243167
  - 0.9688314807190888
  - 0.9707294474393531
  - 0.9829793847622642
  - 0.9698718004300777
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9717291967291967
  - 0.9634521480071219
  - 0.9588111888111888
  - 0.9691047531149054
  - 0.957035175879397
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9735125899315682
  - 0.9561290069869864
  - 0.9711086342034196
  - 0.9806803893908036
  - 0.9684041751899141
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8773889166345471
  - 0.8838395790390342
  - 0.8751512024431198
  - 0.8696260920585206
  - 0.8835314700944491
  train_average_precision_macro_oob:
  - 0.751348941847367
  - 0.7702560614674249
  - 0.7664348274409418
  - 0.7500590922916915
  - 0.7735211830836857
  train_average_precision_micro:
  - 0.9087372583048424
  - 0.911107980090342
  - 0.9121116936310932
  - 0.910170676796074
  - 0.9148309653902885
  train_average_precision_micro_oob:
  - 0.8325383392715028
  - 0.8311025713236101
  - 0.8454202548007744
  - 0.8352738812617511
  - 0.8396103641764554
  train_average_precision_samples:
  - 0.9277910637245675
  - 0.9352725842560659
  - 0.9220347057511808
  - 0.9283839400036583
  - 0.9380993596333774
  train_average_precision_samples_oob:
  - 0.8776296948291834
  - 0.894481252899296
  - 0.8800178854776556
  - 0.8929694327581651
  - 0.8935327046366841
  train_average_precision_weighted:
  - 0.9197526133035381
  - 0.9219210267446277
  - 0.9209455618614303
  - 0.9197918623613671
  - 0.9243875289769088
  train_average_precision_weighted_oob:
  - 0.8376270621900349
  - 0.8335143007426362
  - 0.8468869608647799
  - 0.84090900007527
  - 0.8474551394132699
  train_f1_macro:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197104
  - 0.9114383269312847
  - 0.9161317928968763
  train_f1_macro_oob:
  - 0.9120843989769821
  - 0.9105252011859383
  - 0.9138995317156238
  - 0.9099445155783185
  - 0.9120667522464698
  train_f1_micro:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197105
  - 0.9114383269312847
  - 0.9161317928968763
  train_f1_micro_oob:
  - 0.9120843989769821
  - 0.9105252011859382
  - 0.9138995317156237
  - 0.9099445155783183
  - 0.9120667522464698
  train_f1_samples:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197105
  - 0.9114383269312846
  - 0.9161317928968762
  train_f1_samples_oob:
  - 0.9120843989769821
  - 0.910525201185938
  - 0.9138995317156235
  - 0.9099445155783182
  - 0.9120667522464697
  train_f1_weighted:
  - 0.8481173376050095
  - 0.8386788267933807
  - 0.8461842625543694
  - 0.8373486134948527
  - 0.8516302038839831
  train_f1_weighted_oob:
  - 0.8384074657249562
  - 0.8343631346661354
  - 0.8453510163331408
  - 0.8333030635997373
  - 0.8400693165950203
  train_jaccard_macro:
  - 0.8511188353986657
  - 0.8471963561951826
  - 0.8506878269673107
  - 0.8465770281193907
  - 0.8526903357309105
  train_jaccard_macro_oob:
  - 0.8475155829617816
  - 0.8454943975171938
  - 0.8496532943157815
  - 0.8446122905615608
  - 0.8472309486418657
  train_jaccard_micro:
  - 0.8432527990571597
  - 0.8380692876605683
  - 0.8425335817236984
  - 0.8372868065085277
  - 0.8452427951046191
  train_jaccard_micro_oob:
  - 0.8383779018513077
  - 0.8357469141801924
  - 0.8414502694757472
  - 0.8347689898198903
  - 0.8383480825958702
  train_jaccard_samples:
  - 0.8447991905792417
  - 0.8390214613848668
  - 0.8439756922515542
  - 0.8383982214968129
  - 0.8469833119383825
  train_jaccard_samples_oob:
  - 0.8394873668530957
  - 0.8364801653238757
  - 0.8428248635145185
  - 0.835640415922106
  - 0.8396196871164778
  train_jaccard_weighted:
  - 0.7437690143636766
  - 0.7320992204412914
  - 0.7416210693407205
  - 0.7304352872342629
  - 0.7488056314756402
  train_jaccard_weighted_oob:
  - 0.7315249660015947
  - 0.726805810470557
  - 0.7403313931201992
  - 0.725268600243576
  - 0.7335569919377146
  train_label_ranking_average_precision_score:
  - 0.9277910637245677
  - 0.9352725842560661
  - 0.9220347057511813
  - 0.9283839400036586
  - 0.9380993596333778
  train_label_ranking_average_precision_score_oob:
  - 0.877629694829184
  - 0.8944812528992965
  - 0.8800178854776561
  - 0.8929694327581655
  - 0.8935327046366845
  train_matthews_corrcoef_macro:
  - 0.03810026845710177
  - 0.023126346952297133
  - 0.06140851705221587
  - 0.03177621122688167
  - 0.06411346996711494
  train_matthews_corrcoef_macro_oob:
  - 0.03424011248859813
  - 0.0
  - 0.027337119422979214
  - 0.011635542046079932
  - 0.027690557788542847
  train_matthews_corrcoef_micro:
  - 0.22026999663874708
  - 0.1184372796698671
  - 0.20785510660260428
  - 0.1312811484854741
  - 0.253142401624233
  train_matthews_corrcoef_micro_oob:
  - 0.13888876396862074
  - 0.0
  - 0.19151358944050345
  - 0.0463802072577467
  - 0.15007455243518608
  train_matthews_corrcoef_samples:
  - 0.05986979772146013
  - 0.016518424396442185
  - 0.051830511841065324
  - 0.020486555697823303
  - 0.07490166845305068
  train_matthews_corrcoef_samples_oob:
  - 0.02534294350151128
  - 0.0
  - 0.04458376872169975
  - 0.002560819462227913
  - 0.030458629945151125
  train_matthews_corrcoef_weighted:
  - 0.11363487741089304
  - 0.06466351950804047
  - 0.12261480170181198
  - 0.07735203070748667
  - 0.16085154638379734
  train_matthews_corrcoef_weighted_oob:
  - 0.08567341136153483
  - 0.0
  - 0.08911317221156213
  - 0.026967611920591498
  - 0.07873006198273977
  train_ndgc:
  - 0.9469114835171554
  - 0.9527370584901115
  - 0.9425012498438312
  - 0.9474266714474293
  - 0.9545247432300541
  train_ndgc_oob:
  - 0.9097820186111385
  - 0.9225132958809682
  - 0.9113002513258875
  - 0.9212645292412358
  - 0.9215001701119688
  train_neg_coverage_error:
  - -1.3184143222506395
  - -1.2922490470139771
  - -1.3282247765006385
  - -1.3329065300896288
  - -1.2926829268292683
  train_neg_coverage_error_oob:
  - -1.5012787723785166
  - -1.4155019059720457
  - -1.5019157088122606
  - -1.4827144686299616
  - -1.4415917843388961
  train_neg_hamming_loss_macro:
  - -0.08503836317135549
  - -0.08809826344769166
  - -0.08546189868028947
  - -0.08856167306871533
  - -0.08386820710312365
  train_neg_hamming_loss_macro_oob:
  - -0.08791560102301789
  - -0.08947479881406184
  - -0.08610046828437633
  - -0.09005548442168161
  - -0.08793324775353016
  train_neg_hamming_loss_micro:
  - -0.0850383631713555
  - -0.08809826344769166
  - -0.08546189868028949
  - -0.08856167306871532
  - -0.08386820710312366
  train_neg_hamming_loss_micro_oob:
  - -0.0879156010230179
  - -0.08947479881406184
  - -0.08610046828437633
  - -0.09005548442168161
  - -0.08793324775353016
  train_neg_hamming_loss_samples:
  - -0.0850383631713555
  - -0.08809826344769164
  - -0.08546189868028947
  - -0.08856167306871533
  - -0.08386820710312368
  train_neg_hamming_loss_samples_oob:
  - -0.0879156010230179
  - -0.08947479881406183
  - -0.08610046828437634
  - -0.0900554844216816
  - -0.08793324775353016
  train_neg_hamming_loss_weighted:
  - -0.1518826623949905
  - -0.1613211732066194
  - -0.1538157374456307
  - -0.1626513865051473
  - -0.14836979611601694
  train_neg_hamming_loss_weighted_oob:
  - -0.16159253427504372
  - -0.16563686533386465
  - -0.1546489836668591
  - -0.1666969364002627
  - -0.1599306834049798
  train_neg_label_ranking_loss:
  - -0.020247875171148826
  - -0.017833780413195915
  - -0.021698251136309882
  - -0.020636367947507513
  - -0.01795425370521648
  train_neg_label_ranking_loss_oob:
  - -0.035883773799374824
  - -0.028936334971913114
  - -0.03609186802034822
  - -0.03342817849860103
  - -0.03058310965884779
  train_precision_macro:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197104
  - 0.9114383269312847
  - 0.9161317928968763
  train_precision_macro_oob:
  - 0.9120843989769821
  - 0.9105252011859383
  - 0.9138995317156238
  - 0.9099445155783185
  - 0.9120667522464698
  train_precision_micro:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197105
  - 0.9114383269312847
  - 0.9161317928968763
  train_precision_micro_oob:
  - 0.9120843989769821
  - 0.9105252011859382
  - 0.9138995317156237
  - 0.9099445155783183
  - 0.9120667522464698
  train_precision_samples:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197105
  - 0.9114383269312846
  - 0.9161317928968762
  train_precision_samples_oob:
  - 0.9120843989769821
  - 0.910525201185938
  - 0.9138995317156235
  - 0.9099445155783182
  - 0.9120667522464697
  train_precision_weighted:
  - 0.8481173376050095
  - 0.8386788267933807
  - 0.8461842625543694
  - 0.8373486134948527
  - 0.8516302038839831
  train_precision_weighted_oob:
  - 0.8384074657249562
  - 0.8343631346661354
  - 0.8453510163331408
  - 0.8333030635997373
  - 0.8400693165950203
  train_recall_macro:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197104
  - 0.9114383269312847
  - 0.9161317928968763
  train_recall_macro_oob:
  - 0.9120843989769821
  - 0.9105252011859383
  - 0.9138995317156238
  - 0.9099445155783185
  - 0.9120667522464698
  train_recall_micro:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197105
  - 0.9114383269312847
  - 0.9161317928968763
  train_recall_micro_oob:
  - 0.9120843989769821
  - 0.9105252011859382
  - 0.9138995317156237
  - 0.9099445155783183
  - 0.9120667522464698
  train_recall_samples:
  - 0.9149616368286445
  - 0.9119017365523083
  - 0.9145381013197105
  - 0.9114383269312846
  - 0.9161317928968762
  train_recall_samples_oob:
  - 0.9120843989769821
  - 0.910525201185938
  - 0.9138995317156235
  - 0.9099445155783182
  - 0.9120667522464697
  train_recall_weighted:
  - 0.8481173376050095
  - 0.8386788267933807
  - 0.8461842625543694
  - 0.8373486134948527
  - 0.8516302038839831
  train_recall_weighted_oob:
  - 0.8384074657249562
  - 0.8343631346661354
  - 0.8453510163331408
  - 0.8333030635997373
  - 0.8400693165950203
  train_roc_auc_macro:
  - 0.9838276121382118
  - 0.9858495644265043
  - 0.9855428213113332
  - 0.9825026222485752
  - 0.9844488571887569
  train_roc_auc_macro_oob:
  - 0.9677401233536931
  - 0.9743664892762071
  - 0.9706435614449248
  - 0.968493524797963
  - 0.972091034119345
  train_roc_auc_micro:
  - 0.9860205389869505
  - 0.9870101862677028
  - 0.9859895988712624
  - 0.9849931290686977
  - 0.9870590393063043
  train_roc_auc_micro_oob:
  - 0.9740757823924597
  - 0.9776503529032893
  - 0.9745300359394683
  - 0.9740558569559723
  - 0.9770078726978688
  train_roc_auc_samples:
  - 0.9797521248288512
  - 0.9821662195868041
  - 0.9783017488636901
  - 0.9793636320524925
  - 0.9820457462947835
  train_roc_auc_samples_oob:
  - 0.9641162262006252
  - 0.9710636650280868
  - 0.9639081319796517
  - 0.966571821501399
  - 0.9694168903411523
  train_roc_auc_weighted:
  - 0.9856128118625916
  - 0.9854353955543351
  - 0.9860164537969779
  - 0.9834851769409951
  - 0.984611992235755
  train_roc_auc_weighted_oob:
  - 0.9722852917250062
  - 0.9723626989454935
  - 0.9732826228296032
  - 0.9704893501633977
  - 0.9729227597378607
start: 2023-12-22 09:16:20.637382
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
