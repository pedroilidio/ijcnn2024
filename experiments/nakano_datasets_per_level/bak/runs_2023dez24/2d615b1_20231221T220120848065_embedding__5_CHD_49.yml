active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpvzQzMzMzM/M/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAAAAQAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:01:55.879517
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__5
  params: {}
hash: 2d615b1e475c39330b8886f42c55cccb4ec292bda9306b0702eb267effebeef4
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2d615b1_20231221T220120848065_embedding__5_CHD_49.yml
results:
  fit_time:
  - 18.290971040725708
  - 18.95315980911255
  - 19.010780572891235
  - 19.173845767974854
  - 20.849515438079834
  score_time:
  - 4.2836549282073975
  - 3.7431581020355225
  - 3.896573305130005
  - 3.781661033630371
  - 4.107558012008667
  test_average_precision_macro:
  - 0.5506261949995642
  - 0.521740992075539
  - 0.550685346114914
  - 0.5023103244473154
  - 0.4805980158147974
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7101772044452083
  - 0.6971170419048519
  - 0.70148221755556
  - 0.6707233671249724
  - 0.6462854833556773
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7873358585858586
  - 0.7809760448521917
  - 0.7897397397397397
  - 0.7790426587301588
  - 0.7752581120943952
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6810587751925652
  - 0.6443683423788578
  - 0.6699006755082184
  - 0.611663443057544
  - 0.5855845412896776
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.703030303030303
  - 0.709480122324159
  - 0.6981981981981983
  - 0.7083333333333334
  - 0.696165191740413
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.703030303030303
  - 0.709480122324159
  - 0.6981981981981982
  - 0.7083333333333334
  - 0.696165191740413
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7030303030303031
  - 0.709480122324159
  - 0.6981981981981983
  - 0.7083333333333334
  - 0.6961651917404129
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6617927527018438
  - 0.6736566186107471
  - 0.6543385490753911
  - 0.6694878472222222
  - 0.6522680858964045
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5619785048968493
  - 0.566993849598931
  - 0.5612186949550274
  - 0.5663289246140732
  - 0.5543088216653459
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5420560747663551
  - 0.5497630331753555
  - 0.5363321799307958
  - 0.5483870967741935
  - 0.5339366515837104
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5706493506493507
  - 0.579816513761468
  - 0.5655083655083656
  - 0.581845238095238
  - 0.575056506914914
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5010076109773984
  - 0.5134804248554948
  - 0.4959888333385824
  - 0.5091636571099465
  - 0.4898160783881104
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7873358585858585
  - 0.7809760448521916
  - 0.8167667667667671
  - 0.7790426587301591
  - 0.7752581120943952
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05174680293475468
  - 0.09920571455258577
  - 0.052253835619694156
  - 0.09381913162245072
  - 0.055880875113979316
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3934347172461289
  - 0.40536196822122655
  - 0.37614413218030485
  - 0.4008301740530178
  - 0.37485087270025164
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4114101204787896
  - 0.4065881218716303
  - 0.4197605465450472
  - 0.41502900364298245
  - 0.3824427537248135
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.057546243564045335
  - 0.1049675049292574
  - 0.057222637354155705
  - 0.0989844844795251
  - 0.06635004733515895
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8672371373393419
  - 0.8578634896496594
  - 0.8567380051055682
  - 0.8579187660737805
  - 0.8481807717838576
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8545454545454545
  - -3.8073394495412844
  - -3.5855855855855854
  - -3.8392857142857144
  - -3.752212389380531
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.296969696969697
  - -0.290519877675841
  - -0.3018018018018018
  - -0.2916666666666667
  - -0.30383480825958703
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.296969696969697
  - -0.290519877675841
  - -0.30180180180180183
  - -0.2916666666666667
  - -0.30383480825958703
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.296969696969697
  - -0.290519877675841
  - -0.30180180180180183
  - -0.29166666666666663
  - -0.303834808259587
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33820724729815643
  - -0.32634338138925295
  - -0.3456614509246088
  - -0.3305121527777778
  - -0.3477319141035955
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2123989898989899
  - -0.22023445463812438
  - -0.17765265265265265
  - -0.22256944444444446
  - -0.22524582104228127
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.703030303030303
  - 0.709480122324159
  - 0.6981981981981983
  - 0.7083333333333334
  - 0.696165191740413
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.703030303030303
  - 0.709480122324159
  - 0.6981981981981982
  - 0.7083333333333334
  - 0.696165191740413
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7030303030303031
  - 0.709480122324159
  - 0.6981981981981983
  - 0.7083333333333334
  - 0.6961651917404129
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6617927527018438
  - 0.6736566186107471
  - 0.6543385490753911
  - 0.6694878472222222
  - 0.6522680858964045
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.703030303030303
  - 0.709480122324159
  - 0.6981981981981983
  - 0.7083333333333334
  - 0.696165191740413
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.703030303030303
  - 0.709480122324159
  - 0.6981981981981982
  - 0.7083333333333334
  - 0.696165191740413
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7030303030303031
  - 0.709480122324159
  - 0.6981981981981983
  - 0.7083333333333334
  - 0.6961651917404129
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6617927527018438
  - 0.6736566186107471
  - 0.6543385490753911
  - 0.6694878472222222
  - 0.6522680858964045
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6238989010280472
  - 0.5491720104901826
  - 0.6151752116209007
  - 0.5440350406326758
  - 0.524719503108262
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7910979394936614
  - 0.7865640042153633
  - 0.8065018188515909
  - 0.7795500578703702
  - 0.7761434993577851
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7876010101010101
  - 0.7797655453618757
  - .nan
  - 0.7774305555555555
  - 0.7747541789577188
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6327888141728164
  - 0.5857859525366113
  - 0.6173378817491157
  - 0.5461431565915518
  - 0.5347403115633526
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9998675920935814
  - 0.9994448472458543
  - 0.9997748659880171
  - 0.9997298578374684
  - 0.999776212801838
  train_average_precision_macro_oob:
  - 0.6918906067594742
  - 0.6811092795383153
  - 0.6765635746527897
  - 0.6737244209046639
  - 0.6764329397627497
  train_average_precision_micro:
  - 0.9600831614380815
  - 0.9616350717323036
  - 0.9610560715366434
  - 0.9620131195993827
  - 0.9627235395698376
  train_average_precision_micro_oob:
  - 0.7657997462524189
  - 0.7689080860072908
  - 0.7622347474191924
  - 0.7606026859271892
  - 0.7681201896947051
  train_average_precision_samples:
  - 0.9312047440699125
  - 0.9260058545092178
  - 0.9388795045045045
  - 0.9272824178580384
  - 0.9307095274007039
  train_average_precision_samples_oob:
  - 0.8098096129837702
  - 0.8092270802192326
  - 0.8135354104104104
  - 0.8163374717832956
  - 0.8197272498743086
  train_average_precision_weighted:
  - 0.9998858734785737
  - 0.9995311302759816
  - 0.9998090158307562
  - 0.999752097634364
  - 0.9997961411133971
  train_average_precision_weighted_oob:
  - 0.8249894526754177
  - 0.8157790652044122
  - 0.8090004622577482
  - 0.8043780423257416
  - 0.8085023049389776
  train_f1_macro:
  - 0.9295880149812734
  - 0.9207772795216741
  - 0.9260510510510511
  - 0.9224981188863808
  - 0.9283559577677224
  train_f1_macro_oob:
  - 0.751685393258427
  - 0.7627055306427505
  - 0.7548798798798799
  - 0.7569601203912718
  - 0.7567873303167421
  train_f1_micro:
  - 0.9295880149812734
  - 0.9207772795216741
  - 0.926051051051051
  - 0.9224981188863808
  - 0.9283559577677225
  train_f1_micro_oob:
  - 0.751685393258427
  - 0.7627055306427504
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7567873303167421
  train_f1_samples:
  - 0.9295880149812734
  - 0.9207772795216742
  - 0.9260510510510511
  - 0.9224981188863808
  - 0.9283559577677225
  train_f1_samples_oob:
  - 0.751685393258427
  - 0.7627055306427506
  - 0.7548798798798798
  - 0.7569601203912716
  - 0.7567873303167421
  train_f1_weighted:
  - 0.9019197207678882
  - 0.8938570897056808
  - 0.8994399805210616
  - 0.8963914189647824
  - 0.9010013187715683
  train_f1_weighted_oob:
  - 0.7197678294801655
  - 0.7294906691209588
  - 0.7243514220410472
  - 0.7244727620009788
  - 0.7269511106899464
  train_jaccard_macro:
  - 0.8775284720472777
  - 0.8618697624415685
  - 0.8710461519246987
  - 0.8646831993054344
  - 0.8747602719233925
  train_jaccard_macro_oob:
  - 0.6151597205262083
  - 0.6282293716664932
  - 0.618898714106994
  - 0.6221135858343931
  - 0.6216295902873036
  train_jaccard_micro:
  - 0.8684394681595521
  - 0.853185595567867
  - 0.8622859140160783
  - 0.8561452513966481
  - 0.8662913441238564
  train_jaccard_micro_oob:
  - 0.6021602160216022
  - 0.6164300815463606
  - 0.6062707265601447
  - 0.6089588377723971
  - 0.6087352138307552
  train_jaccard_samples:
  - 0.8857142857142857
  - 0.8725389707452487
  - 0.8794508794508794
  - 0.8756530151564011
  - 0.8838073691014867
  train_jaccard_samples_oob:
  - 0.6316221606109246
  - 0.6482276318599188
  - 0.637001287001287
  - 0.6418037192303558
  - 0.6389355742296917
  train_jaccard_weighted:
  - 0.8341095550455948
  - 0.8198817460583174
  - 0.8295463698637884
  - 0.823939341729156
  - 0.8315721223114191
  train_jaccard_weighted_oob:
  - 0.5648054081220636
  - 0.5760017759217397
  - 0.57051218683915
  - 0.5708693276463602
  - 0.5739924756785026
  train_label_ranking_average_precision_score:
  - 0.9379463171036199
  - 0.9327323119083204
  - 0.9388795045045037
  - 0.9340544268873835
  - 0.9374968577174454
  train_label_ranking_average_precision_score_oob:
  - 0.8165511860174774
  - 0.8159535376183348
  - 0.8135354104104099
  - 0.8231094808126406
  - 0.8265145801910501
  train_matthews_corrcoef_macro:
  - 0.6129977002918007
  - 0.593627611803993
  - 0.6063288236393559
  - 0.5961134556068074
  - 0.6088041481356369
  train_matthews_corrcoef_macro_oob:
  - 0.22199585302971073
  - 0.2505806517366557
  - 0.22330322323003834
  - 0.23359447047926443
  - 0.22919386781839868
  train_matthews_corrcoef_micro:
  - 0.8590012537621758
  - 0.8401195800224381
  - 0.851462681600453
  - 0.8437322445563933
  - 0.8565042269323558
  train_matthews_corrcoef_micro_oob:
  - 0.48808721256068766
  - 0.511061371504432
  - 0.49568773296577917
  - 0.50009494332935
  - 0.5001191468492987
  train_matthews_corrcoef_samples:
  - 0.8527452410254551
  - 0.8359424836521584
  - 0.8515204524798754
  - 0.8339201200092025
  - 0.8516748149175418
  train_matthews_corrcoef_samples_oob:
  - 0.479272049930503
  - 0.5087512990225469
  - 0.4919788262783417
  - 0.49377661656934785
  - 0.49619249259172465
  train_matthews_corrcoef_weighted:
  - 0.6377719650883701
  - 0.6221802781370709
  - 0.6324927997074427
  - 0.6257573161798857
  - 0.6327513591509211
  train_matthews_corrcoef_weighted_oob:
  - 0.24642314444259716
  - 0.2723371475971414
  - 0.24934807422290123
  - 0.25573364400516785
  - 0.2563387839192317
  train_ndgc:
  - 0.9529201670185056
  - 0.9497245453032055
  - 0.9612725687260485
  - 0.9502725822219287
  - 0.9523091688621623
  train_ndgc_oob:
  - 0.8721451535171127
  - 0.8728211865582375
  - 0.8775792150980639
  - 0.8761751153009163
  - 0.8799565548037572
  train_neg_coverage_error:
  - -2.856179775280899
  - -2.874439461883408
  - -2.8783783783783785
  - -2.880361173814898
  - -2.8755656108597285
  train_neg_coverage_error_oob:
  - -3.487640449438202
  - -3.513452914798206
  - -3.5382882882882885
  - -3.474040632054176
  - -3.4728506787330318
  train_neg_hamming_loss_macro:
  - -0.07041198501872659
  - -0.07922272047832586
  - -0.07394894894894895
  - -0.07750188111361926
  - -0.07164404223227754
  train_neg_hamming_loss_macro_oob:
  - -0.24831460674157305
  - -0.23729446935724963
  - -0.24512012012012016
  - -0.2430398796087284
  - -0.24321266968325794
  train_neg_hamming_loss_micro:
  - -0.07041198501872659
  - -0.07922272047832586
  - -0.07394894894894895
  - -0.07750188111361926
  - -0.07164404223227752
  train_neg_hamming_loss_micro_oob:
  - -0.24831460674157305
  - -0.23729446935724963
  - -0.24512012012012013
  - -0.24303987960872836
  - -0.24321266968325791
  train_neg_hamming_loss_samples:
  - -0.07041198501872659
  - -0.07922272047832585
  - -0.07394894894894893
  - -0.07750188111361925
  - -0.07164404223227752
  train_neg_hamming_loss_samples_oob:
  - -0.24831460674157305
  - -0.23729446935724957
  - -0.2451201201201201
  - -0.24303987960872833
  - -0.24321266968325791
  train_neg_hamming_loss_weighted:
  - -0.0980802792321117
  - -0.10614291029431924
  - -0.10056001947893839
  - -0.10360858103521758
  - -0.09899868122843176
  train_neg_hamming_loss_weighted_oob:
  - -0.2802321705198345
  - -0.2705093308790413
  - -0.2756485779589528
  - -0.27552723799902135
  - -0.27304888931005344
  train_neg_label_ranking_loss:
  - -0.04639825218476904
  - -0.051880916791230684
  - -0.04750375375375376
  - -0.050426385753699524
  - -0.047121669180492716
  train_neg_label_ranking_loss_oob:
  - -0.1636267166042447
  - -0.1662244643746886
  - -0.1685247747747748
  - -0.1611863556558816
  - -0.15512820512820513
  train_precision_macro:
  - 0.9295880149812734
  - 0.9207772795216741
  - 0.9260510510510511
  - 0.9224981188863808
  - 0.9283559577677224
  train_precision_macro_oob:
  - 0.751685393258427
  - 0.7627055306427505
  - 0.7548798798798799
  - 0.7569601203912718
  - 0.7567873303167421
  train_precision_micro:
  - 0.9295880149812734
  - 0.9207772795216741
  - 0.926051051051051
  - 0.9224981188863808
  - 0.9283559577677225
  train_precision_micro_oob:
  - 0.751685393258427
  - 0.7627055306427504
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7567873303167421
  train_precision_samples:
  - 0.9295880149812734
  - 0.9207772795216742
  - 0.9260510510510511
  - 0.9224981188863808
  - 0.9283559577677225
  train_precision_samples_oob:
  - 0.751685393258427
  - 0.7627055306427506
  - 0.7548798798798798
  - 0.7569601203912716
  - 0.7567873303167421
  train_precision_weighted:
  - 0.9019197207678882
  - 0.8938570897056808
  - 0.8994399805210616
  - 0.8963914189647824
  - 0.9010013187715683
  train_precision_weighted_oob:
  - 0.7197678294801655
  - 0.7294906691209588
  - 0.7243514220410472
  - 0.7244727620009788
  - 0.7269511106899464
  train_recall_macro:
  - 0.9295880149812734
  - 0.9207772795216741
  - 0.9260510510510511
  - 0.9224981188863808
  - 0.9283559577677224
  train_recall_macro_oob:
  - 0.751685393258427
  - 0.7627055306427505
  - 0.7548798798798799
  - 0.7569601203912718
  - 0.7567873303167421
  train_recall_micro:
  - 0.9295880149812734
  - 0.9207772795216741
  - 0.926051051051051
  - 0.9224981188863808
  - 0.9283559577677225
  train_recall_micro_oob:
  - 0.751685393258427
  - 0.7627055306427504
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7567873303167421
  train_recall_samples:
  - 0.9295880149812734
  - 0.9207772795216742
  - 0.9260510510510511
  - 0.9224981188863808
  - 0.9283559577677225
  train_recall_samples_oob:
  - 0.751685393258427
  - 0.7627055306427506
  - 0.7548798798798798
  - 0.7569601203912716
  - 0.7567873303167421
  train_recall_weighted:
  - 0.9019197207678882
  - 0.8938570897056808
  - 0.8994399805210616
  - 0.8963914189647824
  - 0.9010013187715683
  train_recall_weighted_oob:
  - 0.7197678294801655
  - 0.7294906691209588
  - 0.7243514220410472
  - 0.7244727620009788
  - 0.7269511106899464
  train_roc_auc_macro:
  - 0.9999106286658144
  - 0.9996620197170887
  - 0.9998563482944506
  - 0.9997948297049906
  - 0.9998400930492334
  train_roc_auc_macro_oob:
  - 0.732623730227831
  - 0.7468644319330644
  - 0.723740919893651
  - 0.7012001924044173
  - 0.7205453520456929
  train_roc_auc_micro:
  - 0.9687066276401314
  - 0.969731801859104
  - 0.9685060163827681
  - 0.9697419076960029
  - 0.9706279593667215
  train_roc_auc_micro_oob:
  - 0.8411191729306088
  - 0.8429601909874243
  - 0.8394970341936978
  - 0.8414616262205429
  - 0.8434974470935339
  train_roc_auc_samples:
  - .nan
  - .nan
  - 0.9524962462462462
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - 0.8314752252252252
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9999077348753974
  - 0.9996836783119304
  - 0.9998521491249189
  - 0.9997788978829275
  - 0.9998374724084845
  train_roc_auc_weighted_oob:
  - 0.7866798414481933
  - 0.7749821195485238
  - 0.7722965893440054
  - 0.75750071246334
  - 0.7702973969174743
start: 2023-12-21 22:01:20.848065
wrapper: null
