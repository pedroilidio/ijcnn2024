active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+YmZmZmZnpvzQzMzMzM/M/mJmZmZmZ6b80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAADwvwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwvw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:02:43.650175
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__6
  params: {}
hash: b02b2861b7bc8fba9a576c7a8e90cb50f3a0c142b3efd1c25ecc4f511e7cf2d0
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b02b286_20231221T220159104381_embedding__6_CHD_49.yml
results:
  fit_time:
  - 25.41947031021118
  - 26.37064027786255
  - 27.808793306350708
  - 26.89879274368286
  - 27.795008897781372
  score_time:
  - 4.284493446350098
  - 4.435306787490845
  - 4.631686210632324
  - 4.395484447479248
  - 4.709239959716797
  test_average_precision_macro:
  - 0.5445681756976547
  - 0.49190217414164855
  - 0.5300348616814625
  - 0.5392587670403527
  - 0.5505268658673389
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6984751721401521
  - 0.6739160967961451
  - 0.7011704565930346
  - 0.7020317110809278
  - 0.7002645846279947
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7827327327327327
  - 0.783060515873016
  - 0.7942424242424241
  - 0.790391414141414
  - 0.7825768849206349
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6646458922128536
  - 0.6102367479181919
  - 0.6589386366360632
  - 0.6565338888315964
  - 0.6753085790634281
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7057057057057058
  - 0.6979166666666666
  - 0.7075757575757575
  - 0.709090909090909
  - 0.7142857142857143
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7057057057057057
  - 0.6979166666666666
  - 0.7075757575757575
  - 0.7090909090909091
  - 0.7142857142857143
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7057057057057057
  - 0.6979166666666666
  - 0.7075757575757577
  - 0.709090909090909
  - 0.7142857142857143
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6645708208208209
  - 0.6552822177822177
  - 0.6657416267942584
  - 0.6705733291099145
  - 0.6688936063936064
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5641524732883592
  - 0.5543683911244859
  - 0.5692694485767359
  - 0.5673407756691272
  - 0.5745723574361752
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5452436194895591
  - 0.536
  - 0.5474794841735052
  - 0.5492957746478874
  - 0.5555555555555556
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.581042081042081
  - 0.5652636054421769
  - 0.5807792207792208
  - 0.5857142857142857
  - 0.591245361781076
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.504482540936217
  - 0.4930183725927918
  - 0.506484805411483
  - 0.5109411259511164
  - 0.5069700822899109
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.791741741741742
  - 0.7830605158730161
  - 0.8033333333333332
  - 0.7994823232323232
  - 0.7825768849206348
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.09803600424778099
  - 0.057311403919136694
  - 0.08739184941462108
  - 0.10248729907975601
  - 0.10155659501593926
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3969534268633784
  - 0.377431187172043
  - 0.39927060090310623
  - 0.4059400663506377
  - 0.4131654216127928
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4073295321316248
  - 0.3934401423274928
  - 0.4023831394062852
  - 0.42685408683016773
  - 0.42111503874137235
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.09612708335394553
  - 0.05900443535749291
  - 0.09241811919875513
  - 0.09857103613618522
  - 0.10917834353327341
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8560600142070726
  - 0.8610783000898824
  - 0.8635414966123813
  - 0.8631123241763252
  - 0.8569829229189531
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.828828828828829
  - -3.8125
  - -3.6818181818181817
  - -3.7181818181818183
  - -3.7142857142857144
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2942942942942943
  - -0.30208333333333337
  - -0.2924242424242424
  - -0.29090909090909095
  - -0.2857142857142857
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.29429429429429427
  - -0.3020833333333333
  - -0.2924242424242424
  - -0.2909090909090909
  - -0.2857142857142857
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29429429429429427
  - -0.30208333333333337
  - -0.2924242424242424
  - -0.2909090909090909
  - -0.2857142857142857
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3354291791791792
  - -0.34471778221778226
  - -0.3342583732057416
  - -0.32942667089008554
  - -0.33110639360639355
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21686686686686688
  - -0.2183531746031746
  - -0.1977272727272727
  - -0.20820707070707067
  - -0.2094494047619048
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7057057057057058
  - 0.6979166666666666
  - 0.7075757575757575
  - 0.709090909090909
  - 0.7142857142857143
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7057057057057057
  - 0.6979166666666666
  - 0.7075757575757575
  - 0.7090909090909091
  - 0.7142857142857143
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7057057057057057
  - 0.6979166666666666
  - 0.7075757575757577
  - 0.709090909090909
  - 0.7142857142857143
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6645708208208209
  - 0.6552822177822177
  - 0.6657416267942584
  - 0.6705733291099145
  - 0.6688936063936064
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7057057057057058
  - 0.6979166666666666
  - 0.7075757575757575
  - 0.709090909090909
  - 0.7142857142857143
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7057057057057057
  - 0.6979166666666666
  - 0.7075757575757575
  - 0.7090909090909091
  - 0.7142857142857143
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7057057057057057
  - 0.6979166666666666
  - 0.7075757575757577
  - 0.709090909090909
  - 0.7142857142857143
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6645708208208209
  - 0.6552822177822177
  - 0.6657416267942584
  - 0.6705733291099145
  - 0.6688936063936064
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6079931834263369
  - 0.5387758193611237
  - 0.5548061610389846
  - 0.6137593422215167
  - 0.6286529245948085
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7867706496178718
  - 0.7731258378926773
  - 0.7949847953216373
  - 0.7920523862458082
  - 0.7993224392188122
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7816468253968255
  - .nan
  - .nan
  - 0.7905505952380951
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6044659917426441
  - 0.5627776489180192
  - 0.5747867845628664
  - 0.6085014497712317
  - 0.6288961867263626
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9998650308939939
  - 0.9999211152589704
  - 0.9990376221728221
  - 0.9995713277420472
  - 0.9999334134676512
  train_average_precision_macro_oob:
  - 0.6800788069831906
  - 0.675415872269185
  - 0.6717006562903158
  - 0.6792809938836077
  - 0.6918932076180324
  train_average_precision_micro:
  - 0.9606214026187216
  - 0.96029376489595
  - 0.9616840092838055
  - 0.9663725990763977
  - 0.9597679755906717
  train_average_precision_micro_oob:
  - 0.7616193324304978
  - 0.7593397659487192
  - 0.769099131998615
  - 0.7747115007664233
  - 0.7571520916930621
  train_average_precision_samples:
  - 0.9421108608608608
  - 0.9234041886129923
  - 0.9339263420724095
  - 0.9340792759051185
  - 0.9314867067970906
  train_average_precision_samples_oob:
  - 0.8155655655655655
  - 0.8114998745924253
  - 0.8157521847690387
  - 0.8243352059925093
  - 0.8144093303235515
  train_average_precision_weighted:
  - 0.9998728880636777
  - 0.9999335857230792
  - 0.9991928170832759
  - 0.9996215719603979
  - 0.9999286451792343
  train_average_precision_weighted_oob:
  - 0.8094865959346781
  - 0.8031793083706952
  - 0.8041272969507935
  - 0.8133698900560424
  - 0.8182755543078833
  train_f1_macro:
  - 0.9301801801801801
  - 0.9292701279157262
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_f1_macro_oob:
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7640449438202248
  - 0.7677902621722849
  - 0.7498118886380737
  train_f1_micro:
  - 0.9301801801801802
  - 0.9292701279157262
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_f1_micro_oob:
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7640449438202247
  - 0.7677902621722846
  - 0.7498118886380737
  train_f1_samples:
  - 0.9301801801801802
  - 0.929270127915726
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_f1_samples_oob:
  - 0.7548798798798799
  - 0.7569601203912717
  - 0.7640449438202247
  - 0.7677902621722845
  - 0.7498118886380738
  train_f1_weighted:
  - 0.9028696528696528
  - 0.902948325513416
  - 0.8939823476974619
  - 0.8987311711888524
  - 0.9032516673954751
  train_f1_weighted_oob:
  - 0.7223902223902224
  - 0.7261019780254415
  - 0.7315615724459509
  - 0.7371120160934204
  - 0.7183805483003007
  train_jaccard_macro:
  - 0.8784297956530261
  - 0.8766500232618996
  - 0.862840804313911
  - 0.8743042021388522
  - 0.8772567784047788
  train_jaccard_macro_oob:
  - 0.6196174257210328
  - 0.6230290461157686
  - 0.6300365211604412
  - 0.6358155870349514
  - 0.6124308668587384
  train_jaccard_micro:
  - 0.8694736842105263
  - 0.8678847505270555
  - 0.8541666666666666
  - 0.8651763884037723
  - 0.8685413005272408
  train_jaccard_micro_oob:
  - 0.6062707265601447
  - 0.6089588377723971
  - 0.6181818181818182
  - 0.6231003039513677
  - 0.5997592536864279
  train_jaccard_samples:
  - 0.8855641355641355
  - 0.8849833387079437
  - 0.8722846441947565
  - 0.8831460674157303
  - 0.8850370848113511
  train_jaccard_samples_oob:
  - 0.638052338052338
  - 0.6397515952820693
  - 0.648892455858748
  - 0.651995719636169
  - 0.6323444050306352
  train_jaccard_weighted:
  - 0.8355517979349093
  - 0.8354266824488726
  - 0.8201314483165872
  - 0.8285965976405021
  - 0.8359581055349561
  train_jaccard_weighted_oob:
  - 0.5683590056743274
  - 0.5739813734189891
  - 0.579210646258565
  - 0.5868109747398637
  - 0.5629938789027472
  train_label_ranking_average_precision_score:
  - 0.9466153653653653
  - 0.9301761976423367
  - 0.938420724094881
  - 0.9385736579275898
  - 0.9382587158264356
  train_label_ranking_average_precision_score_oob:
  - 0.8200700700700693
  - 0.8182718836217703
  - 0.8202465667915102
  - 0.8288295880149801
  - 0.8211813393528958
  train_matthews_corrcoef_macro:
  - 0.6125063827439249
  - 0.6100126707852207
  - 0.5965400536055614
  - 0.6092984987151123
  - 0.612304557655203
  train_matthews_corrcoef_macro_oob:
  - 0.22982083577312676
  - 0.23665642156234934
  - 0.25380167223290356
  - 0.25302044575845584
  - 0.21512508517741677
  train_matthews_corrcoef_micro:
  - 0.8600138506138801
  - 0.8578890821781896
  - 0.8420040024823747
  - 0.8554559557918804
  - 0.8589974948670168
  train_matthews_corrcoef_micro_oob:
  - 0.4951809860094831
  - 0.5001640972480808
  - 0.5144080865780098
  - 0.5219677355315306
  - 0.4852024087302345
  train_matthews_corrcoef_samples:
  - 0.8593239616318264
  - 0.8497173428043236
  - 0.8384453685431644
  - 0.8509672358223627
  - 0.8589589502269666
  train_matthews_corrcoef_samples_oob:
  - 0.49781464749109255
  - 0.5036497516794042
  - 0.5147925824681556
  - 0.5197582430421588
  - 0.4792716965152162
  train_matthews_corrcoef_weighted:
  - 0.6388427392412069
  - 0.638160262238302
  - 0.6218697622965481
  - 0.633817197971926
  - 0.6372697185463772
  train_matthews_corrcoef_weighted_oob:
  - 0.2523493816148196
  - 0.2625539323692707
  - 0.2737975885258689
  - 0.2801896586258761
  - 0.23920871865893745
  train_ndgc:
  - 0.9609230967236517
  - 0.9476576720713855
  - 0.9561351798268454
  - 0.9548636236602712
  - 0.9533749517999947
  train_ndgc_oob:
  - 0.8777409196275996
  - 0.8732143616201644
  - 0.8765117949531611
  - 0.8819371598039536
  - 0.8764796320486913
  train_neg_coverage_error:
  - -2.831081081081081
  - -2.8961625282167045
  - -2.885393258426966
  - -2.844943820224719
  - -2.871331828442438
  train_neg_coverage_error_oob:
  - -3.4684684684684686
  - -3.528216704288939
  - -3.4966292134831463
  - -3.4426966292134833
  - -3.492099322799097
  train_neg_hamming_loss_macro:
  - -0.06981981981981981
  - -0.07072987208427389
  - -0.07865168539325844
  - -0.07228464419475655
  - -0.07035364936042136
  train_neg_hamming_loss_macro_oob:
  - -0.2451201201201201
  - -0.2430398796087284
  - -0.23595505617977527
  - -0.23220973782771537
  - -0.25018811136192626
  train_neg_hamming_loss_micro:
  - -0.06981981981981981
  - -0.07072987208427389
  - -0.07865168539325842
  - -0.07228464419475655
  - -0.07035364936042136
  train_neg_hamming_loss_micro_oob:
  - -0.24512012012012013
  - -0.24303987960872836
  - -0.23595505617977527
  - -0.23220973782771537
  - -0.25018811136192626
  train_neg_hamming_loss_samples:
  - -0.0698198198198198
  - -0.07072987208427388
  - -0.07865168539325842
  - -0.07228464419475655
  - -0.07035364936042138
  train_neg_hamming_loss_samples_oob:
  - -0.2451201201201201
  - -0.24303987960872833
  - -0.23595505617977527
  - -0.23220973782771534
  - -0.25018811136192626
  train_neg_hamming_loss_weighted:
  - -0.09713034713034713
  - -0.09705167448658401
  - -0.10601765230253814
  - -0.10126882881114764
  - -0.09674833260452492
  train_neg_hamming_loss_weighted_oob:
  - -0.2776097776097776
  - -0.2738980219745587
  - -0.2684384275540492
  - -0.26288798390657964
  - -0.2816194516996994
  train_neg_label_ranking_loss:
  - -0.04206706706706707
  - -0.05230122899423125
  - -0.049825218476903875
  - -0.04548689138576778
  - -0.045830198143967896
  train_neg_label_ranking_loss_oob:
  - -0.15851476476476478
  - -0.16720591923752195
  - -0.1624594257178527
  - -0.15196629213483145
  - -0.16267870579382993
  train_precision_macro:
  - 0.9301801801801801
  - 0.9292701279157262
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_precision_macro_oob:
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7640449438202248
  - 0.7677902621722849
  - 0.7498118886380737
  train_precision_micro:
  - 0.9301801801801802
  - 0.9292701279157262
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_precision_micro_oob:
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7640449438202247
  - 0.7677902621722846
  - 0.7498118886380737
  train_precision_samples:
  - 0.9301801801801802
  - 0.929270127915726
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_precision_samples_oob:
  - 0.7548798798798799
  - 0.7569601203912717
  - 0.7640449438202247
  - 0.7677902621722845
  - 0.7498118886380738
  train_precision_weighted:
  - 0.9028696528696528
  - 0.902948325513416
  - 0.8939823476974619
  - 0.8987311711888524
  - 0.9032516673954751
  train_precision_weighted_oob:
  - 0.7223902223902224
  - 0.7261019780254415
  - 0.7315615724459509
  - 0.7371120160934204
  - 0.7183805483003007
  train_recall_macro:
  - 0.9301801801801801
  - 0.9292701279157262
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_recall_macro_oob:
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7640449438202248
  - 0.7677902621722849
  - 0.7498118886380737
  train_recall_micro:
  - 0.9301801801801802
  - 0.9292701279157262
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_recall_micro_oob:
  - 0.7548798798798799
  - 0.7569601203912716
  - 0.7640449438202247
  - 0.7677902621722846
  - 0.7498118886380737
  train_recall_samples:
  - 0.9301801801801802
  - 0.929270127915726
  - 0.9213483146067416
  - 0.9277153558052434
  - 0.9296463506395787
  train_recall_samples_oob:
  - 0.7548798798798799
  - 0.7569601203912717
  - 0.7640449438202247
  - 0.7677902621722845
  - 0.7498118886380738
  train_recall_weighted:
  - 0.9028696528696528
  - 0.902948325513416
  - 0.8939823476974619
  - 0.8987311711888524
  - 0.9032516673954751
  train_recall_weighted_oob:
  - 0.7223902223902224
  - 0.7261019780254415
  - 0.7315615724459509
  - 0.7371120160934204
  - 0.7183805483003007
  train_roc_auc_macro:
  - 0.999893914542637
  - 0.999952939155781
  - 0.9994096085407325
  - 0.9997096030618202
  - 0.9999319214540255
  train_roc_auc_macro_oob:
  - 0.7292969371695178
  - 0.7241545882409169
  - 0.7457062555958528
  - 0.7338063894805721
  - 0.733500585247759
  train_roc_auc_micro:
  - 0.9694176711446448
  - 0.9691487875933775
  - 0.9689603928372912
  - 0.972969289140239
  - 0.9682842668771987
  train_roc_auc_micro_oob:
  - 0.8427332535885166
  - 0.8440284587754047
  - 0.8424294499739823
  - 0.8499695039014961
  - 0.8411624975761101
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9998825048717427
  - 0.9999571529447843
  - 0.9994364217275294
  - 0.9997250240677216
  - 0.999913748119555
  train_roc_auc_weighted_oob:
  - 0.7710251456740915
  - 0.7627618572942216
  - 0.7788765103445154
  - 0.7821037338490648
  - 0.7712073517889558
start: 2023-12-21 22:01:59.104381
wrapper: null
