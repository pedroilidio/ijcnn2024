active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AmpmZmZnZPwCamZmZmdk/wMzMzMzMBMBAMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:33:26.406979
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__7
  params: {}
hash: c0d2b668b251ef1bef03a9b4a8bc7631c71881a1ee49237b16c764e3d737aceb
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c0d2b66_20231221T103003590096_embedding_weak__7_VirusPseAAC.yml
results:
  fit_time:
  - 188.8827669620514
  - 187.63627409934998
  - 190.08285069465637
  - 192.93879795074463
  - 190.54279828071594
  score_time:
  - 3.110731601715088
  - 3.224971294403076
  - 3.3808655738830566
  - 3.506105422973633
  - 3.3166146278381348
  test_average_precision_macro:
  - 0.46031599038636756
  - 0.4729944014720309
  - 0.373083748308811
  - 0.377906568952271
  - 0.41365785142242434
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4465362380005635
  - 0.500980206415929
  - 0.555358656254051
  - 0.36594301198382106
  - 0.44289773530918
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6912144702842377
  - 0.7115853658536585
  - 0.6792682926829269
  - 0.6458333333333334
  - 0.681359649122807
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4665189149659851
  - 0.5054144168686066
  - 0.5631939134600837
  - 0.3594624184110918
  - 0.46392135501217197
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.810077519379845
  - 0.7886178861788617
  - 0.8130081300813008
  - 0.787878787878788
  - 0.7807017543859649
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.810077519379845
  - 0.7886178861788617
  - 0.8130081300813008
  - 0.7878787878787878
  - 0.7807017543859649
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8100775193798451
  - 0.7886178861788619
  - 0.8130081300813009
  - 0.787878787878788
  - 0.7807017543859649
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7045143638850889
  - 0.6747967479674797
  - 0.7164036346245815
  - 0.6536363636363636
  - 0.658968850698174
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7030637177126615
  - 0.6772296889811127
  - 0.7034529061221425
  - 0.6857666934783411
  - 0.6689359906341039
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6807817589576547
  - 0.6510067114093959
  - 0.684931506849315
  - 0.65
  - 0.6402877697841727
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6937984496124031
  - 0.6596980255516842
  - 0.6986062717770035
  - 0.6650432900432901
  - 0.6585213032581454
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5617255024829118
  - 0.5296405098465037
  - 0.5724166766631167
  - 0.5147549043690186
  - 0.5153038721001755
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6912144702842377
  - 0.7115853658536585
  - 0.6792682926829268
  - 0.6458333333333334
  - 0.681359649122807
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.062401977625658044
  - -0.001188110114961647
  - 0.08113299059673006
  - -0.001731080059806887
  - 0.0117474128770936
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.21388281403748488
  - 0.06846244874906114
  - 0.288745808969882
  - 0.13408172858569048
  - 0.13134807340394408
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.12243979218761283
  - 0.02234701868333751
  - 0.17913610223417037
  - 0.09048042795645886
  - 0.09694137457850424
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.13113235941178572
  - -0.0023762202299232927
  - 0.17247944041154956
  - -0.0035314033220060458
  - 0.02148147545331966
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7729043751514864
  - 0.7845991255144882
  - 0.7616318380189447
  - 0.7346236250362819
  - 0.7646165973601581
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2325581395348837
  - -2.2195121951219514
  - -2.3902439024390243
  - -2.2954545454545454
  - -2.3947368421052633
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18992248062015504
  - -0.21138211382113822
  - -0.1869918699186992
  - -0.21212121212121213
  - -0.2192982456140351
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18992248062015504
  - -0.21138211382113822
  - -0.18699186991869918
  - -0.21212121212121213
  - -0.21929824561403508
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18992248062015502
  - -0.2113821138211382
  - -0.1869918699186992
  - -0.21212121212121204
  - -0.2192982456140351
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29548563611491113
  - -0.3252032520325203
  - -0.2835963653754185
  - -0.3463636363636363
  - -0.34103114930182604
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20019379844961244
  - -0.20426829268292682
  - -0.22405149051490517
  - -0.23238636363636364
  - -0.21973684210526315
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.810077519379845
  - 0.7886178861788617
  - 0.8130081300813008
  - 0.787878787878788
  - 0.7807017543859649
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.810077519379845
  - 0.7886178861788617
  - 0.8130081300813008
  - 0.7878787878787878
  - 0.7807017543859649
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8100775193798451
  - 0.7886178861788619
  - 0.8130081300813009
  - 0.787878787878788
  - 0.7807017543859649
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7045143638850889
  - 0.6747967479674797
  - 0.7164036346245815
  - 0.6536363636363636
  - 0.658968850698174
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.810077519379845
  - 0.7886178861788617
  - 0.8130081300813008
  - 0.787878787878788
  - 0.7807017543859649
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.810077519379845
  - 0.7886178861788617
  - 0.8130081300813008
  - 0.7878787878787878
  - 0.7807017543859649
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8100775193798451
  - 0.7886178861788619
  - 0.8130081300813009
  - 0.787878787878788
  - 0.7807017543859649
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7045143638850889
  - 0.6747967479674797
  - 0.7164036346245815
  - 0.6536363636363636
  - 0.658968850698174
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6607377513259867
  - 0.6810728796022915
  - 0.6085386171703306
  - 0.588057087199244
  - 0.6434853613162437
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7949228000378895
  - 0.8010055304172952
  - 0.799798893916541
  - 0.7661682242990654
  - 0.7857712917569262
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7998062015503876
  - 0.7957317073170732
  - 0.7759485094850949
  - 0.7676136363636363
  - 0.7802631578947369
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6081586563939506
  - 0.6737481426062741
  - 0.6833678495706479
  - 0.5307397397397398
  - 0.6014446904302847
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9395271621985808
  - 0.9144104676796475
  - 0.9895479020357717
  - 0.922417765963842
  - 0.9355022547933776
  train_average_precision_macro_oob:
  - 0.45801353788750987
  - 0.3993190184212505
  - 0.47724039902341314
  - 0.44747236299704213
  - 0.405386786433306
  train_average_precision_micro:
  - 0.9053799939157445
  - 0.8926613883138619
  - 0.9046849236972557
  - 0.8949016992454433
  - 0.9068496206901473
  train_average_precision_micro_oob:
  - 0.622745506297706
  - 0.5782028801267758
  - 0.6310451307169412
  - 0.629424058691489
  - 0.5960698023580402
  train_average_precision_samples:
  - 0.9070121951219512
  - 0.8905622489959838
  - 0.9001004016064258
  - 0.890081799591002
  - 0.9063116370808679
  train_average_precision_samples_oob:
  - 0.7209349593495934
  - 0.7269912985274432
  - 0.7340696117804552
  - 0.7374573960463531
  - 0.7357823800131492
  train_average_precision_weighted:
  - 0.9767889598914685
  - 0.9669420942660875
  - 0.9902750269771211
  - 0.9671436381383566
  - 0.9756464780995614
  train_average_precision_weighted_oob:
  - 0.6165324801620319
  - 0.5528296693952119
  - 0.6036806575966795
  - 0.6140291968940366
  - 0.5717012495744518
  train_f1_macro:
  - 0.9258130081300813
  - 0.9246987951807228
  - 0.9257028112449799
  - 0.9253578732106339
  - 0.923076923076923
  train_f1_macro_oob:
  - 0.8262195121951219
  - 0.822289156626506
  - 0.8273092369477912
  - 0.8394683026584867
  - 0.8185404339250493
  train_f1_micro:
  - 0.9258130081300813
  - 0.9246987951807228
  - 0.9257028112449799
  - 0.9253578732106339
  - 0.9230769230769231
  train_f1_micro_oob:
  - 0.8262195121951219
  - 0.822289156626506
  - 0.8273092369477911
  - 0.8394683026584867
  - 0.8185404339250493
  train_f1_samples:
  - 0.9258130081300814
  - 0.9246987951807228
  - 0.92570281124498
  - 0.9253578732106338
  - 0.9230769230769232
  train_f1_samples_oob:
  - 0.8262195121951219
  - 0.8222891566265058
  - 0.827309236947791
  - 0.8394683026584866
  - 0.8185404339250492
  train_f1_weighted:
  - 0.9448185899769443
  - 0.9407780375232273
  - 0.9391596235689027
  - 0.9456964101318107
  - 0.9367767511003585
  train_f1_weighted_oob:
  - 0.74278000242689
  - 0.7312833423245221
  - 0.7450698315650662
  - 0.7713053513940352
  - 0.7235841081994928
  train_jaccard_macro:
  - 0.8660056591192684
  - 0.863250649855607
  - 0.8651758506389718
  - 0.8648840827354753
  - 0.86043434188815
  train_jaccard_macro_oob:
  - 0.7191255112240408
  - 0.715339267720251
  - 0.7204032890386972
  - 0.7342055008585295
  - 0.7114585176405658
  train_jaccard_micro:
  - 0.8618732261116367
  - 0.8599439775910365
  - 0.8616822429906542
  - 0.8610846812559467
  - 0.8571428571428571
  train_jaccard_micro_oob:
  - 0.7038961038961039
  - 0.6982097186700768
  - 0.7054794520547946
  - 0.7233480176211454
  - 0.6928213689482471
  train_jaccard_samples:
  - 0.8776132404181184
  - 0.8752151462994836
  - 0.8780837636259323
  - 0.8775927548933683
  - 0.871513102282333
  train_jaccard_samples_oob:
  - 0.71965737514518
  - 0.7125645438898452
  - 0.7184452094090649
  - 0.7402862985685073
  - 0.704705550859397
  train_jaccard_weighted:
  - 0.8995548999420672
  - 0.8912704935307652
  - 0.8882860443036641
  - 0.900797358681235
  - 0.8842426702916109
  train_jaccard_weighted_oob:
  - 0.6015024491673967
  - 0.5886905467202309
  - 0.6048254736211083
  - 0.6354179246692216
  - 0.5803091712699181
  train_label_ranking_average_precision_score:
  - 0.9070121951219511
  - 0.8905622489959838
  - 0.9001004016064258
  - 0.890081799591002
  - 0.9063116370808679
  train_label_ranking_average_precision_score_oob:
  - 0.7209349593495933
  - 0.7269912985274429
  - 0.7340696117804552
  - 0.7374573960463527
  - 0.7357823800131491
  train_matthews_corrcoef_macro:
  - 0.31676030372982694
  - 0.31065126576564167
  - 0.4165081630353409
  - 0.3166701355721035
  - 0.3073106260768596
  train_matthews_corrcoef_macro_oob:
  - 0.11250962622903342
  - 0.09552348216413904
  - 0.11282236526824323
  - 0.14577373479550038
  - 0.082245823330363
  train_matthews_corrcoef_micro:
  - 0.7626176651237049
  - 0.7556937271421058
  - 0.7591469137737031
  - 0.7623799513310224
  - 0.7488686790159402
  train_matthews_corrcoef_micro_oob:
  - 0.3416434245363043
  - 0.305816490341595
  - 0.3369929945050006
  - 0.4217017031474418
  - 0.2699194661160727
  train_matthews_corrcoef_samples:
  - 0.6454677125071238
  - 0.6445860544745138
  - 0.657270228022707
  - 0.6657516123238413
  - 0.6363537678171043
  train_matthews_corrcoef_samples_oob:
  - 0.20201111053740675
  - 0.17727222123033573
  - 0.1821804023355543
  - 0.28569120128458403
  - 0.13724694196569262
  train_matthews_corrcoef_weighted:
  - 0.6430974475693333
  - 0.6353105257123387
  - 0.6493427029257764
  - 0.6441294914908915
  - 0.6270214247582263
  train_matthews_corrcoef_weighted_oob:
  - 0.22894498317192077
  - 0.19550787579265927
  - 0.2296720543838581
  - 0.2970099543647806
  - 0.16828036051067882
  train_ndgc:
  - 0.9331814392859716
  - 0.9205280274329019
  - 0.927637909554408
  - 0.9203820542970921
  - 0.9320018159074204
  train_ndgc_oob:
  - 0.7916826776802738
  - 0.7974172891071062
  - 0.8019349837229638
  - 0.8056016138145694
  - 0.803110227167957
  train_neg_coverage_error:
  - -1.5182926829268293
  - -1.5542168674698795
  - -1.5
  - -1.5828220858895705
  - -1.514792899408284
  train_neg_coverage_error_oob:
  - -2.2560975609756095
  - -2.2228915662650603
  - -2.180722891566265
  - -2.2024539877300615
  - -2.165680473372781
  train_neg_hamming_loss_macro:
  - -0.07418699186991871
  - -0.07530120481927711
  - -0.07429718875502007
  - -0.07464212678936605
  - -0.07692307692307691
  train_neg_hamming_loss_macro_oob:
  - -0.1737804878048781
  - -0.177710843373494
  - -0.17269076305220887
  - -0.16053169734151326
  - -0.1814595660749507
  train_neg_hamming_loss_micro:
  - -0.0741869918699187
  - -0.07530120481927711
  - -0.07429718875502007
  - -0.07464212678936605
  - -0.07692307692307693
  train_neg_hamming_loss_micro_oob:
  - -0.17378048780487804
  - -0.17771084337349397
  - -0.17269076305220885
  - -0.1605316973415133
  - -0.1814595660749507
  train_neg_hamming_loss_samples:
  - -0.0741869918699187
  - -0.07530120481927711
  - -0.07429718875502007
  - -0.07464212678936606
  - -0.07692307692307691
  train_neg_hamming_loss_samples_oob:
  - -0.17378048780487804
  - -0.17771084337349397
  - -0.17269076305220882
  - -0.1605316973415133
  - -0.1814595660749507
  train_neg_hamming_loss_weighted:
  - -0.055181410023055454
  - -0.059221962476772756
  - -0.06084037643109752
  - -0.05430358986818928
  - -0.06322324889964147
  train_neg_hamming_loss_weighted_oob:
  - -0.2572199975731101
  - -0.268716657675478
  - -0.25493016843493377
  - -0.22869464860596486
  - -0.2764158918005072
  train_neg_label_ranking_loss:
  - -0.05442073170731708
  - -0.06467536813922357
  - -0.054668674698795175
  - -0.06540558963871848
  - -0.05938527284681131
  train_neg_label_ranking_loss_oob:
  - -0.2069275067750678
  - -0.19770749665327977
  - -0.19456157965194115
  - -0.19069529652351735
  - -0.19220907297830375
  train_precision_macro:
  - 0.9258130081300813
  - 0.9246987951807228
  - 0.9257028112449799
  - 0.9253578732106339
  - 0.923076923076923
  train_precision_macro_oob:
  - 0.8262195121951219
  - 0.822289156626506
  - 0.8273092369477912
  - 0.8394683026584867
  - 0.8185404339250493
  train_precision_micro:
  - 0.9258130081300813
  - 0.9246987951807228
  - 0.9257028112449799
  - 0.9253578732106339
  - 0.9230769230769231
  train_precision_micro_oob:
  - 0.8262195121951219
  - 0.822289156626506
  - 0.8273092369477911
  - 0.8394683026584867
  - 0.8185404339250493
  train_precision_samples:
  - 0.9258130081300814
  - 0.9246987951807228
  - 0.92570281124498
  - 0.9253578732106338
  - 0.9230769230769232
  train_precision_samples_oob:
  - 0.8262195121951219
  - 0.8222891566265058
  - 0.827309236947791
  - 0.8394683026584866
  - 0.8185404339250492
  train_precision_weighted:
  - 0.9448185899769443
  - 0.9407780375232273
  - 0.9391596235689027
  - 0.9456964101318107
  - 0.9367767511003585
  train_precision_weighted_oob:
  - 0.74278000242689
  - 0.7312833423245221
  - 0.7450698315650662
  - 0.7713053513940352
  - 0.7235841081994928
  train_recall_macro:
  - 0.9258130081300813
  - 0.9246987951807228
  - 0.9257028112449799
  - 0.9253578732106339
  - 0.923076923076923
  train_recall_macro_oob:
  - 0.8262195121951219
  - 0.822289156626506
  - 0.8273092369477912
  - 0.8394683026584867
  - 0.8185404339250493
  train_recall_micro:
  - 0.9258130081300813
  - 0.9246987951807228
  - 0.9257028112449799
  - 0.9253578732106339
  - 0.9230769230769231
  train_recall_micro_oob:
  - 0.8262195121951219
  - 0.822289156626506
  - 0.8273092369477911
  - 0.8394683026584867
  - 0.8185404339250493
  train_recall_samples:
  - 0.9258130081300814
  - 0.9246987951807228
  - 0.92570281124498
  - 0.9253578732106338
  - 0.9230769230769232
  train_recall_samples_oob:
  - 0.8262195121951219
  - 0.8222891566265058
  - 0.827309236947791
  - 0.8394683026584866
  - 0.8185404339250492
  train_recall_weighted:
  - 0.9448185899769443
  - 0.9407780375232273
  - 0.9391596235689027
  - 0.9456964101318107
  - 0.9367767511003585
  train_recall_weighted_oob:
  - 0.74278000242689
  - 0.7312833423245221
  - 0.7450698315650662
  - 0.7713053513940352
  - 0.7235841081994928
  train_roc_auc_macro:
  - 0.9959044309324828
  - 0.9936478244150818
  - 0.9978328862448853
  - 0.9930561187538113
  - 0.9949594955414153
  train_roc_auc_macro_oob:
  - 0.7462805300725094
  - 0.7249335297096492
  - 0.7435397732259285
  - 0.7387144936837499
  - 0.6924740398243493
  train_roc_auc_micro:
  - 0.9646531073877102
  - 0.9579586345004537
  - 0.9657310929628588
  - 0.9597963662345617
  - 0.9625652208245005
  train_roc_auc_micro_oob:
  - 0.8298482046980932
  - 0.8222910604211646
  - 0.8277355361556995
  - 0.8283849647851382
  - 0.8198720791092916
  train_roc_auc_samples:
  - 0.9455792682926829
  - 0.9353246318607763
  - 0.9453313253012049
  - 0.9345944103612817
  - 0.9406147271531887
  train_roc_auc_samples_oob:
  - 0.7930724932249321
  - 0.8022925033467201
  - 0.8054384203480589
  - 0.8093047034764825
  - 0.8077909270216962
  train_roc_auc_weighted:
  - 0.9961055839165129
  - 0.994595237197849
  - 0.9960906741659658
  - 0.9936841384896833
  - 0.9967141679706544
  train_roc_auc_weighted_oob:
  - 0.7824029291128495
  - 0.7406631704392899
  - 0.7672034680323618
  - 0.7679429772262992
  - 0.741939047212775
start: 2023-12-21 10:30:03.590096
wrapper: null
