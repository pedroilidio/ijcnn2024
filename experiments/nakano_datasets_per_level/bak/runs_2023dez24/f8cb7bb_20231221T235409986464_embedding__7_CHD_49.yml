active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ZmZmZmZmBsCgmZmZmZnJPzQzMzMzM/M/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAADwPwAAAAAAAPC/AAAAAAAA8D8AAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:55:11.148568
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__7
  params: {}
hash: f8cb7bb2b5a8960382971543e87149dca7451b4f8f0d4cbae3d0bfa58dbc5a96
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f8cb7bb_20231221T235409986464_embedding__7_CHD_49.yml
results:
  fit_time:
  - 40.56333017349243
  - 39.53910541534424
  - 39.57824420928955
  - 40.09953856468201
  - 40.86652898788452
  score_time:
  - 6.130323886871338
  - 5.2851479053497314
  - 5.008193731307983
  - 5.708703279495239
  - 6.423481702804565
  test_average_precision_macro:
  - 0.501261949456041
  - 0.49053041604591985
  - 0.4793201203156651
  - 0.4948572453567561
  - 0.5315859397242552
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6748713777212563
  - 0.6808563546359763
  - 0.6535438566789266
  - 0.6868026484609162
  - 0.6846948282387206
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.779563492063492
  - 0.7956944444444445
  - 0.7791046626984126
  - 0.7870328282828283
  - 0.7808308308308309
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6055572381261115
  - 0.6155847953237845
  - 0.5905871578438555
  - 0.6258857367444057
  - 0.6431644714563084
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5684523809523809
  - 0.5696969696969697
  - 0.5773809523809524
  - 0.5666666666666665
  - 0.5720720720720721
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5684523809523809
  - 0.5696969696969697
  - 0.5773809523809523
  - 0.5666666666666667
  - 0.5720720720720721
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.568452380952381
  - 0.5696969696969697
  - 0.5773809523809523
  - 0.5666666666666667
  - 0.5720720720720721
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.4548645320197044
  - 0.4438277511961723
  - 0.44918546365914785
  - 0.4382072472981564
  - 0.45000945000945003
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4339958460901501
  - 0.4396940297380035
  - 0.44819958187402426
  - 0.438479113283118
  - 0.44107504356904487
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.3970893970893971
  - 0.3983050847457627
  - 0.40585774058577406
  - 0.3953488372093023
  - 0.40063091482649843
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4154336734693878
  - 0.41727272727272735
  - 0.4233418367346939
  - 0.4105194805194807
  - 0.4211497211497212
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3115682463014454
  - 0.3015296876893838
  - 0.30509732674916784
  - 0.2958174308851124
  - 0.3055536744053262
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7795634920634924
  - 0.8047853535353536
  - 0.7791046626984128
  - 0.7870328282828285
  - 0.7988488488488491
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.008657570606823631
  - -0.005964104195811834
  - 0.0
  - 0.00900937462695559
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.04468384087489168
  - 0.032866787763108946
  - 0.0
  - 0.044699015626767424
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0018181818181818182
  - 0.005646924393157821
  - 0.0
  - 0.005697797585888972
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.015492494770105444
  - -0.010672607508294862
  - 0.0
  - 0.015876660181767893
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8579933653193171
  - 0.8675136304760505
  - 0.856094706381728
  - 0.8655193244787899
  - 0.8508674923955909
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.892857142857143
  - -3.7454545454545456
  - -3.7589285714285716
  - -3.7818181818181817
  - -3.684684684684685
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.43154761904761907
  - -0.43030303030303035
  - -0.4226190476190476
  - -0.4333333333333333
  - -0.42792792792792794
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.43154761904761907
  - -0.4303030303030303
  - -0.4226190476190476
  - -0.43333333333333335
  - -0.42792792792792794
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.431547619047619
  - -0.4303030303030303
  - -0.42261904761904756
  - -0.4333333333333333
  - -0.427927927927928
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5451354679802956
  - -0.5561722488038278
  - -0.5508145363408521
  - -0.5617927527018437
  - -0.5499905499905501
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22988591269841271
  - -0.1979040404040404
  - -0.2165922619047619
  - -0.2097979797979798
  - -0.20217717717717718
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5684523809523809
  - 0.5696969696969697
  - 0.5773809523809524
  - 0.5666666666666665
  - 0.5720720720720721
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5684523809523809
  - 0.5696969696969697
  - 0.5773809523809523
  - 0.5666666666666667
  - 0.5720720720720721
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.568452380952381
  - 0.5696969696969697
  - 0.5773809523809523
  - 0.5666666666666667
  - 0.5720720720720721
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.4548645320197044
  - 0.4438277511961723
  - 0.44918546365914785
  - 0.4382072472981564
  - 0.45000945000945003
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5684523809523809
  - 0.5696969696969697
  - 0.5773809523809524
  - 0.5666666666666665
  - 0.5720720720720721
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5684523809523809
  - 0.5696969696969697
  - 0.5773809523809523
  - 0.5666666666666667
  - 0.5720720720720721
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.568452380952381
  - 0.5696969696969697
  - 0.5773809523809523
  - 0.5666666666666667
  - 0.5720720720720721
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.4548645320197044
  - 0.4438277511961723
  - 0.44918546365914785
  - 0.4382072472981564
  - 0.45000945000945003
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5453304858032249
  - 0.5322006904854293
  - 0.491663085906171
  - 0.49545270873048874
  - 0.6279004366559398
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7580068604441236
  - 0.7733426900584797
  - 0.7652477446847092
  - 0.7700160801765079
  - 0.7835664335664335
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7701140873015874
  - .nan
  - 0.7834077380952381
  - 0.7902020202020202
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5328431647892689
  - 0.5434346515980455
  - 0.49682080646062077
  - 0.5466213061505828
  - 0.5833572888526449
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8055211750046558
  - 0.8140350029319979
  - 0.8047174227527405
  - 0.8131266125584721
  - 0.8133965433627098
  train_average_precision_macro_oob:
  - 0.6002117167374837
  - 0.5825935555778453
  - 0.5910521811916934
  - 0.5997416577438548
  - 0.5961116807214862
  train_average_precision_micro:
  - 0.8856016424692359
  - 0.8859472039436097
  - 0.8837475213289456
  - 0.8864153807239412
  - 0.8869521188503438
  train_average_precision_micro_oob:
  - 0.76805915512714
  - 0.7543342549657104
  - 0.7658463828807025
  - 0.7572326639373823
  - 0.7655013281374378
  train_average_precision_samples:
  - 0.8799943566591422
  - 0.885
  - 0.8879796839729119
  - 0.8889606741573033
  - 0.8924142892892893
  train_average_precision_samples_oob:
  - 0.8025771256583897
  - 0.7888639200998753
  - 0.7986236518685729
  - 0.7968445692883894
  - 0.8047891641641641
  train_average_precision_weighted:
  - 0.87127744467171
  - 0.8747810437231226
  - 0.8678273568858677
  - 0.8768929208090449
  - 0.8729177799180261
  train_average_precision_weighted_oob:
  - 0.7467357797872782
  - 0.7247737974646549
  - 0.7369930062710685
  - 0.7393420671532998
  - 0.7416935873382814
  train_f1_macro:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226486
  - 0.6565543071161049
  - 0.6580330330330332
  train_f1_macro_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.5816403310759969
  - 0.5760299625468165
  - 0.5803303303303303
  train_f1_micro:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226486
  - 0.6565543071161049
  - 0.6580330330330331
  train_f1_micro_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.581640331075997
  - 0.5760299625468165
  - 0.5803303303303303
  train_f1_samples:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226487
  - 0.6565543071161047
  - 0.658033033033033
  train_f1_samples_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.5816403310759969
  - 0.5760299625468165
  - 0.5803303303303303
  train_f1_weighted:
  - 0.5986863172209858
  - 0.5900336001097147
  - 0.5902609811442551
  - 0.5896621369884503
  - 0.5910137886577678
  train_f1_weighted_oob:
  - 0.45192189853451037
  - 0.4619593859898318
  - 0.4687564576154105
  - 0.4567641233798067
  - 0.4638322877851674
  train_jaccard_macro:
  - 0.5201046952498392
  - 0.5117115396911273
  - 0.5104695438538075
  - 0.5106762161288093
  - 0.5123919181049726
  train_jaccard_macro_oob:
  - 0.4443775169509571
  - 0.44566005030534755
  - 0.44664270065068634
  - 0.4434415803197689
  - 0.446594373593676
  train_jaccard_micro:
  - 0.4978867286559594
  - 0.4895397489539749
  - 0.4886586390366844
  - 0.48870922776693615
  - 0.49034965034965033
  train_jaccard_micro_oob:
  - 0.40374966992342226
  - 0.40748550342646284
  - 0.41007957559681696
  - 0.40452393477117304
  - 0.40877842411422527
  train_jaccard_samples:
  - 0.5182209062570237
  - 0.5115462814339219
  - 0.5120831012478867
  - 0.5138372488934286
  - 0.5126662376662378
  train_jaccard_samples_oob:
  - 0.4218541428473709
  - 0.42614232209737823
  - 0.42917436213147275
  - 0.4239710102631451
  - 0.42712452712452714
  train_jaccard_weighted:
  - 0.430047597626385
  - 0.4218048503575115
  - 0.42206776387521905
  - 0.42157878410269106
  - 0.422762172916148
  train_jaccard_weighted_oob:
  - 0.30640515734776297
  - 0.3139455787482251
  - 0.3186119117212738
  - 0.31089306559479124
  - 0.3152465773264985
  train_label_ranking_average_precision_score:
  - 0.8867663656884868
  - 0.8894943820224709
  - 0.894751693002257
  - 0.8957022471910108
  - 0.8946665415415411
  train_label_ranking_average_precision_score_oob:
  - 0.8093491346877342
  - 0.7933583021223455
  - 0.805395660897917
  - 0.8035861423220961
  - 0.8070414164164156
  train_matthews_corrcoef_macro:
  - 0.15762083904794275
  - 0.1405468133584327
  - 0.14317115294759067
  - 0.12833585943826645
  - 0.14477270022458327
  train_matthews_corrcoef_macro_oob:
  - 0.021845879553926275
  - 0.02499774058239441
  - 0.02737730362213728
  - 0.019026209875526588
  - 0.03007646580658842
  train_matthews_corrcoef_micro:
  - 0.3720620411490201
  - 0.35546380427617175
  - 0.356608872392913
  - 0.3532108421062499
  - 0.3579841106990713
  train_matthews_corrcoef_micro_oob:
  - 0.08077470612891374
  - 0.10417178251802726
  - 0.13258225461523418
  - 0.07973419071358297
  - 0.11861780675882494
  train_matthews_corrcoef_samples:
  - 0.27119041357979046
  - 0.23949459654709115
  - 0.24038604340467332
  - 0.23769273240358
  - 0.2527538800458946
  train_matthews_corrcoef_samples_oob:
  - 0.013902590505832627
  - 0.02692569261094395
  - 0.037978675033718
  - 0.017214196172212155
  - 0.03131030050304731
  train_matthews_corrcoef_weighted:
  - 0.2401776698534677
  - 0.21978039403845198
  - 0.22240729832310685
  - 0.2059456959878971
  - 0.22494865727788413
  train_matthews_corrcoef_weighted_oob:
  - 0.03652749791490599
  - 0.04187934812949668
  - 0.04826234343850182
  - 0.031402322306023696
  - 0.05100496693381585
  train_ndgc:
  - 0.9228785616374906
  - 0.9266558835509605
  - 0.9264061721570754
  - 0.92997381516374
  - 0.9334456651465346
  train_ndgc_oob:
  - 0.8717714527881568
  - 0.8636152631036431
  - 0.8697545760949189
  - 0.8669392289267766
  - 0.8748590957139587
  train_neg_coverage_error:
  - -3.293453724604966
  - -3.2853932584269665
  - -3.2437923250564333
  - -3.2674157303370785
  - -3.2882882882882885
  train_neg_coverage_error_oob:
  - -3.659142212189616
  - -3.804494382022472
  - -3.7539503386004514
  - -3.6808988764044943
  - -3.7072072072072073
  train_neg_hamming_loss_macro:
  - -0.33521444695259595
  - -0.34269662921348315
  - -0.34349134687735144
  - -0.3434456928838951
  - -0.341966966966967
  train_neg_hamming_loss_macro_oob:
  - -0.42475545522949587
  - -0.4209737827715356
  - -0.418359668924003
  - -0.42397003745318357
  - -0.4196696696696696
  train_neg_hamming_loss_micro:
  - -0.33521444695259595
  - -0.34269662921348315
  - -0.3434913468773514
  - -0.34344569288389515
  - -0.341966966966967
  train_neg_hamming_loss_micro_oob:
  - -0.42475545522949587
  - -0.4209737827715356
  - -0.418359668924003
  - -0.4239700374531835
  - -0.4196696696696697
  train_neg_hamming_loss_samples:
  - -0.33521444695259595
  - -0.34269662921348315
  - -0.34349134687735144
  - -0.3434456928838951
  - -0.341966966966967
  train_neg_hamming_loss_samples_oob:
  - -0.4247554552294958
  - -0.4209737827715355
  - -0.41835966892400295
  - -0.42397003745318346
  - -0.4196696696696696
  train_neg_hamming_loss_weighted:
  - -0.4013136827790143
  - -0.4099663998902854
  - -0.40973901885574504
  - -0.4103378630115497
  - -0.4089862113422323
  train_neg_hamming_loss_weighted_oob:
  - -0.5480781014654896
  - -0.5380406140101682
  - -0.5312435423845895
  - -0.5432358766201933
  - -0.5361677122148326
  train_neg_label_ranking_loss:
  - -0.11329320290945573
  - -0.11036204744069912
  - -0.10632054176072234
  - -0.10693508114856429
  - -0.10852102102102103
  train_neg_label_ranking_loss_oob:
  - -0.1899987459242538
  - -0.20781523096129836
  - -0.1980122899423125
  - -0.1935705368289638
  - -0.1931619119119119
  train_precision_macro:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226486
  - 0.6565543071161049
  - 0.6580330330330332
  train_precision_macro_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.5816403310759969
  - 0.5760299625468165
  - 0.5803303303303303
  train_precision_micro:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226486
  - 0.6565543071161049
  - 0.6580330330330331
  train_precision_micro_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.581640331075997
  - 0.5760299625468165
  - 0.5803303303303303
  train_precision_samples:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226487
  - 0.6565543071161047
  - 0.658033033033033
  train_precision_samples_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.5816403310759969
  - 0.5760299625468165
  - 0.5803303303303303
  train_precision_weighted:
  - 0.5986863172209858
  - 0.5900336001097147
  - 0.5902609811442551
  - 0.5896621369884503
  - 0.5910137886577678
  train_precision_weighted_oob:
  - 0.45192189853451037
  - 0.4619593859898318
  - 0.4687564576154105
  - 0.4567641233798067
  - 0.4638322877851674
  train_recall_macro:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226486
  - 0.6565543071161049
  - 0.6580330330330332
  train_recall_macro_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.5816403310759969
  - 0.5760299625468165
  - 0.5803303303303303
  train_recall_micro:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226486
  - 0.6565543071161049
  - 0.6580330330330331
  train_recall_micro_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.581640331075997
  - 0.5760299625468165
  - 0.5803303303303303
  train_recall_samples:
  - 0.664785553047404
  - 0.6573033707865169
  - 0.6565086531226487
  - 0.6565543071161047
  - 0.658033033033033
  train_recall_samples_oob:
  - 0.5752445447705041
  - 0.5790262172284644
  - 0.5816403310759969
  - 0.5760299625468165
  - 0.5803303303303303
  train_recall_weighted:
  - 0.5986863172209858
  - 0.5900336001097147
  - 0.5902609811442551
  - 0.5896621369884503
  - 0.5910137886577678
  train_recall_weighted_oob:
  - 0.45192189853451037
  - 0.4619593859898318
  - 0.4687564576154105
  - 0.4567641233798067
  - 0.4638322877851674
  train_roc_auc_macro:
  - 0.8029707670894727
  - 0.7986889542016619
  - 0.7878060236048637
  - 0.7943825695893102
  - 0.8096504124481229
  train_roc_auc_macro_oob:
  - 0.6439731441519168
  - 0.653303655440452
  - 0.6520979228153185
  - 0.6675698272124834
  - 0.652820857594235
  train_roc_auc_micro:
  - 0.8923251227998836
  - 0.891335757844982
  - 0.887633668125118
  - 0.8930872760669315
  - 0.8925942787768419
  train_roc_auc_micro_oob:
  - 0.8170945986534756
  - 0.8043301175065731
  - 0.8062525495970554
  - 0.8129468927640588
  - 0.8142890319079712
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7999693847650027
  - 0.8090178137122527
  - 0.8019760772622431
  - 0.8083374229714749
  - 0.8071231400053205
  train_roc_auc_weighted_oob:
  - 0.7032428568641016
  - 0.6916167962122334
  - 0.7004293000641243
  - 0.7026507404612009
  - 0.7035511691798347
start: 2023-12-21 23:54:09.986464
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
