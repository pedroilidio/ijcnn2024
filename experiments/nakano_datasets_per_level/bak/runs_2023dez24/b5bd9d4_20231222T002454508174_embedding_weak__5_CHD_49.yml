active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ZmZmZmZmDsA0MzMzMzPzPzQzMzMzM/M/oJmZmZmZyT80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAADwvwAAAAAAABBAAAAAAAAAFMAAAAAAAAAAQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:26:03.919996
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__5
  params: {}
hash: b5bd9d49a227b4e1d4089a0ccf0d175308bbc769c7536f0f252a3e11de5c06ad
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b5bd9d4_20231222T002454508174_embedding_weak__5_CHD_49.yml
results:
  fit_time:
  - 49.06938982009888
  - 50.07996201515198
  - 53.864240884780884
  - 50.46764135360718
  - 51.599082946777344
  score_time:
  - 3.798729419708252
  - 4.439908504486084
  - 4.177823543548584
  - 4.073105812072754
  - 4.3703532218933105
  test_average_precision_macro:
  - 0.5874463262218248
  - 0.49332135975409935
  - 0.5321657153947293
  - 0.47075026815918486
  - 0.49197625066257933
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7075176175270703
  - 0.6694207666172255
  - 0.72786719292387
  - 0.6565831201516735
  - 0.6884711575037892
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7741491491491491
  - 0.7903521825396825
  - 0.8143431983385253
  - 0.777801724137931
  - 0.7814347604485218
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6621368778867992
  - 0.6117250479392423
  - 0.6609297620988254
  - 0.5885300934841181
  - 0.6094101326563094
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551401
  - 0.5905172413793104
  - 0.5642201834862386
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551402
  - 0.5905172413793104
  - 0.5642201834862385
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551402
  - 0.5905172413793104
  - 0.5642201834862386
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.451441131853503
  - 0.44630369630369626
  - 0.4215773077553698
  - 0.47256503327283733
  - 0.4338000965717045
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.42793364442842424
  - 0.4454931890695854
  - 0.4302268088004324
  - 0.4576106329630016
  - 0.43669281197389737
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.39184952978056425
  - 0.40292275574112735
  - 0.3851132686084142
  - 0.41896024464831805
  - 0.3929712460063898
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4097422097422099
  - 0.416454081632653
  - 0.4041833555852247
  - 0.43776683087027923
  - 0.4130624726955003
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.30926526739061666
  - 0.30289712218614895
  - 0.28348908333376294
  - 0.3245719279219331
  - 0.2926417577862144
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7831581581581585
  - 0.7903521825396826
  - 0.8330347871235723
  - 0.7778017241379309
  - 0.7814347604485221
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8520320680145724
  - 0.8693135051634778
  - 0.8784133134102869
  - 0.8554310289167291
  - 0.8579118901793982
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.90990990990991
  - -3.7232142857142856
  - -3.7009345794392523
  - -3.6982758620689653
  - -3.81651376146789
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.43693693693693697
  - -0.42559523809523814
  - -0.44392523364485975
  - -0.40948275862068967
  - -0.43577981651376146
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4369369369369369
  - -0.4255952380952381
  - -0.4439252336448598
  - -0.40948275862068967
  - -0.43577981651376146
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4369369369369369
  - -0.4255952380952381
  - -0.4439252336448598
  - -0.40948275862068956
  - -0.43577981651376135
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.548558868146497
  - -0.5536963036963037
  - -0.5784226922446303
  - -0.5274349667271628
  - -0.5661999034282956
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2287037037037037
  - -0.2039186507936508
  - -0.18169781931464174
  - -0.22193486590038314
  - -0.21218144750254844
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551401
  - 0.5905172413793104
  - 0.5642201834862386
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551402
  - 0.5905172413793104
  - 0.5642201834862385
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551402
  - 0.5905172413793104
  - 0.5642201834862386
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.451441131853503
  - 0.44630369630369626
  - 0.4215773077553698
  - 0.47256503327283733
  - 0.4338000965717045
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551401
  - 0.5905172413793104
  - 0.5642201834862386
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551402
  - 0.5905172413793104
  - 0.5642201834862385
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5630630630630631
  - 0.5744047619047619
  - 0.5560747663551402
  - 0.5905172413793104
  - 0.5642201834862386
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.451441131853503
  - 0.44630369630369626
  - 0.4215773077553698
  - 0.47256503327283733
  - 0.4338000965717045
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6135595910348712
  - 0.49699070991104394
  - 0.631821420888409
  - 0.5507918084687803
  - 0.5691723314778365
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.769475372279496
  - 0.7754900539874633
  - 0.7957442626173276
  - 0.7659452768173476
  - 0.771016973327628
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7960813492063492
  - .nan
  - 0.7780651340996168
  - 0.7878185524974517
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6096546170797431
  - 0.5187402387057374
  - 0.5905525649899791
  - 0.5707251808881124
  - 0.5173362692996553
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8325531302697821
  - 0.8158363771334088
  - 0.8049426066187815
  - 0.8248708101497061
  - 0.8135912898440355
  train_average_precision_macro_oob:
  - 0.6162272532101524
  - 0.5897499541778864
  - 0.5809978794442952
  - 0.5965822342717454
  - 0.5823849272630544
  train_average_precision_micro:
  - 0.894649771938653
  - 0.8865483361257538
  - 0.8811854714074558
  - 0.8922122339972328
  - 0.8861424225086111
  train_average_precision_micro_oob:
  - 0.7690996428708974
  - 0.7575497615026976
  - 0.744264003042722
  - 0.7620186694535496
  - 0.7479152648202375
  train_average_precision_samples:
  - 0.8941691691691692
  - 0.8785929270127917
  - 0.8912574404761904
  - 0.9008731966590737
  - 0.885341928251121
  train_average_precision_samples_oob:
  - 0.8030593093093095
  - 0.7901460998244293
  - 0.7936414930555554
  - 0.8103296633763604
  - 0.7916510961634281
  train_average_precision_weighted:
  - 0.88543445733712
  - 0.8779778797230927
  - 0.8682771367072192
  - 0.8815477221744219
  - 0.8755265901333656
  train_average_precision_weighted_oob:
  - 0.7603788583448794
  - 0.732181383535903
  - 0.7156125703752824
  - 0.7352682195707612
  - 0.7259181387087157
  train_f1_macro:
  - 0.6602852852852853
  - 0.6576373212942062
  - 0.6592261904761906
  - 0.6575550493545937
  - 0.6535874439461883
  train_f1_macro_oob:
  - 0.5746996996996998
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_f1_micro:
  - 0.6602852852852853
  - 0.6576373212942062
  - 0.6592261904761905
  - 0.6575550493545937
  - 0.6535874439461884
  train_f1_micro_oob:
  - 0.5746996996996997
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_f1_samples:
  - 0.6602852852852852
  - 0.657637321294206
  - 0.6592261904761906
  - 0.6575550493545936
  - 0.6535874439461884
  train_f1_samples_oob:
  - 0.5746996996996997
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_f1_weighted:
  - 0.5905500153966412
  - 0.5918022841249768
  - 0.5936332357703326
  - 0.5916533772364473
  - 0.5863160281647191
  train_f1_weighted_oob:
  - 0.4493786073540675
  - 0.4595491630521709
  - 0.45479278241375015
  - 0.44875311052105826
  - 0.45263135260242154
  train_jaccard_macro:
  - 0.5160449710589337
  - 0.5117363671964339
  - 0.5133662936558916
  - 0.5117844904618029
  - 0.5080840514111817
  train_jaccard_macro_oob:
  - 0.44468595811218586
  - 0.44342184990511874
  - 0.44317782279741547
  - 0.43870193582803263
  - 0.44185620428748207
  train_jaccard_micro:
  - 0.49285514149621745
  - 0.4899103139013453
  - 0.4916759156492786
  - 0.48981900452488686
  - 0.48542880932556204
  train_jaccard_micro_oob:
  - 0.4032130629444298
  - 0.40523394131641555
  - 0.40365535248041773
  - 0.3988316516197557
  - 0.4021482839926644
  train_jaccard_samples:
  - 0.5152724152724153
  - 0.5123410825442428
  - 0.5128198438466295
  - 0.5123006833712984
  - 0.5101644245142004
  train_jaccard_samples_oob:
  - 0.4216645216645217
  - 0.42514340437591003
  - 0.4214507962275819
  - 0.4169876440947056
  - 0.4194756663366529
  train_jaccard_weighted:
  - 0.42189473687291473
  - 0.4237368999310876
  - 0.4255522759706353
  - 0.42333453190635534
  - 0.41875742079308376
  train_jaccard_weighted_oob:
  - 0.304664938252111
  - 0.31230240571054907
  - 0.3099229311805902
  - 0.30404757244628705
  - 0.30817085850443776
  train_label_ranking_average_precision_score:
  - 0.898673673673673
  - 0.8853649360421365
  - 0.8934895833333326
  - 0.9077069096431285
  - 0.8920683856502238
  train_label_ranking_average_precision_score_oob:
  - 0.8075638138138133
  - 0.7969181088537732
  - 0.7958736359126971
  - 0.8171633763604139
  - 0.7983775535625297
  train_matthews_corrcoef_macro:
  - 0.1549963058606305
  - 0.14718402891993584
  - 0.1300320143048238
  - 0.14745938687944946
  - 0.12318031984816706
  train_matthews_corrcoef_macro_oob:
  - 0.018169582706105924
  - 0.020851636898356205
  - 0.005102698321365096
  - 0.017136171012357385
  - 0.01100149141437222
  train_matthews_corrcoef_micro:
  - 0.3601959204627147
  - 0.3575564795562876
  - 0.35540458161790384
  - 0.364626931448937
  - 0.34555660054740167
  train_matthews_corrcoef_micro_oob:
  - 0.06340712875421779
  - 0.10250337597726174
  - 0.044468342671256
  - 0.08616911957916244
  - 0.054732089474923196
  train_matthews_corrcoef_samples:
  - 0.2509331850182355
  - 0.24187994279228303
  - 0.2356714447349411
  - 0.2598973076254247
  - 0.24215453911605375
  train_matthews_corrcoef_samples_oob:
  - 0.009726748896699404
  - 0.024069449301923493
  - 0.005112330545871401
  - 0.01691061197756539
  - 0.005428945995590824
  train_matthews_corrcoef_weighted:
  - 0.23407402229199203
  - 0.22466010635666997
  - 0.2087105067876416
  - 0.22868051260488725
  - 0.19928773907688302
  train_matthews_corrcoef_weighted_oob:
  - 0.03002132591865639
  - 0.03679058447511017
  - 0.008995340894333239
  - 0.030298304109032937
  - 0.019451634340319844
  train_ndgc:
  - 0.9332468674469571
  - 0.9215968109094231
  - 0.9340312230983064
  - 0.93801292225238
  - 0.9268638915790329
  train_ndgc_oob:
  - 0.870838183625087
  - 0.8613137943683407
  - 0.8664760249770762
  - 0.87830350648669
  - 0.8644940056631011
  train_neg_coverage_error:
  - -3.2454954954954953
  - -3.3002257336343117
  - -3.2745535714285716
  - -3.2574031890660593
  - -3.286995515695067
  train_neg_coverage_error_oob:
  - -3.6328828828828827
  - -3.7223476297968396
  - -3.7098214285714284
  - -3.6993166287015944
  - -3.7600896860986546
  train_neg_hamming_loss_macro:
  - -0.33971471471471465
  - -0.34236267870579384
  - -0.34077380952380953
  - -0.3424449506454062
  - -0.34641255605381166
  train_neg_hamming_loss_macro_oob:
  - -0.42530030030030036
  - -0.4232505643340858
  - -0.42485119047619047
  - -0.42976461655277154
  - -0.4263826606875934
  train_neg_hamming_loss_micro:
  - -0.3397147147147147
  - -0.34236267870579384
  - -0.34077380952380953
  - -0.3424449506454062
  - -0.34641255605381166
  train_neg_hamming_loss_micro_oob:
  - -0.4253003003003003
  - -0.42325056433408575
  - -0.42485119047619047
  - -0.42976461655277143
  - -0.4263826606875934
  train_neg_hamming_loss_samples:
  - -0.33971471471471465
  - -0.3423626787057939
  - -0.3407738095238096
  - -0.3424449506454062
  - -0.34641255605381166
  train_neg_hamming_loss_samples_oob:
  - -0.4253003003003003
  - -0.42325056433408575
  - -0.4248511904761904
  - -0.42976461655277143
  - -0.4263826606875934
  train_neg_hamming_loss_weighted:
  - -0.40944998460335885
  - -0.4081977158750231
  - -0.40636676422966744
  - -0.40834662276355277
  - -0.413683971835281
  train_neg_hamming_loss_weighted_oob:
  - -0.5506213926459326
  - -0.5404508369478291
  - -0.5452072175862499
  - -0.5512468894789418
  - -0.5473686473975784
  train_neg_label_ranking_loss:
  - -0.103490990990991
  - -0.11427138199147228
  - -0.10967261904761905
  - -0.10057580359402683
  - -0.11235052316890883
  train_neg_label_ranking_loss_oob:
  - -0.18403403403403404
  - -0.20070855279658892
  - -0.1972780257936508
  - -0.18466211085801063
  - -0.20539985052316895
  train_precision_macro:
  - 0.6602852852852853
  - 0.6576373212942062
  - 0.6592261904761906
  - 0.6575550493545937
  - 0.6535874439461883
  train_precision_macro_oob:
  - 0.5746996996996998
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_precision_micro:
  - 0.6602852852852853
  - 0.6576373212942062
  - 0.6592261904761905
  - 0.6575550493545937
  - 0.6535874439461884
  train_precision_micro_oob:
  - 0.5746996996996997
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_precision_samples:
  - 0.6602852852852852
  - 0.657637321294206
  - 0.6592261904761906
  - 0.6575550493545936
  - 0.6535874439461884
  train_precision_samples_oob:
  - 0.5746996996996997
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_precision_weighted:
  - 0.5905500153966412
  - 0.5918022841249768
  - 0.5936332357703326
  - 0.5916533772364473
  - 0.5863160281647191
  train_precision_weighted_oob:
  - 0.4493786073540675
  - 0.4595491630521709
  - 0.45479278241375015
  - 0.44875311052105826
  - 0.45263135260242154
  train_recall_macro:
  - 0.6602852852852853
  - 0.6576373212942062
  - 0.6592261904761906
  - 0.6575550493545937
  - 0.6535874439461883
  train_recall_macro_oob:
  - 0.5746996996996998
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_recall_micro:
  - 0.6602852852852853
  - 0.6576373212942062
  - 0.6592261904761905
  - 0.6575550493545937
  - 0.6535874439461884
  train_recall_micro_oob:
  - 0.5746996996996997
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_recall_samples:
  - 0.6602852852852852
  - 0.657637321294206
  - 0.6592261904761906
  - 0.6575550493545936
  - 0.6535874439461884
  train_recall_samples_oob:
  - 0.5746996996996997
  - 0.5767494356659142
  - 0.5751488095238095
  - 0.5702353834472286
  - 0.5736173393124065
  train_recall_weighted:
  - 0.5905500153966412
  - 0.5918022841249768
  - 0.5936332357703326
  - 0.5916533772364473
  - 0.5863160281647191
  train_recall_weighted_oob:
  - 0.4493786073540675
  - 0.4595491630521709
  - 0.45479278241375015
  - 0.44875311052105826
  - 0.45263135260242154
  train_roc_auc_macro:
  - 0.8313946833273277
  - 0.812911871857212
  - 0.7938482125638916
  - 0.8192063403432913
  - 0.8104057943793697
  train_roc_auc_macro_oob:
  - 0.6850913922921312
  - 0.6595619342270641
  - 0.6663304964245463
  - 0.6627396645478322
  - 0.6324558621318239
  train_roc_auc_micro:
  - 0.9001074957574278
  - 0.8947974089771646
  - 0.8875046887544009
  - 0.8969614016037862
  - 0.8926320147021005
  train_roc_auc_micro_oob:
  - 0.8195642278518744
  - 0.8072216912749199
  - 0.8030315802813763
  - 0.8126225016695112
  - 0.8025953335769999
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8321928903699133
  - 0.8164742744611913
  - 0.8014771351085912
  - 0.8124609329184975
  - 0.8088805913228282
  train_roc_auc_weighted_oob:
  - 0.7184108390159369
  - 0.7009540242531599
  - 0.6889717473146973
  - 0.6941569187747967
  - 0.6924945525854435
start: 2023-12-22 00:24:54.508174
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
