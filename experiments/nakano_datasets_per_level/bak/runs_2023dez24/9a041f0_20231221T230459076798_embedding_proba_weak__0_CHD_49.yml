active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z/MzMzMzMz8v5iZmZmZmem/oJmZmZmZyT80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAGMAAAAAAAAAQQAAAAAAAAAAAAAAAAAAA8D8AAAAAAADwPw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:05:08.019275
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__0
  params: {}
hash: 9a041f0cbaea23bb9ecba8b4f099e5064ec8cc024233edb5ffa082ecab493003
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9a041f0_20231221T230459076798_embedding_proba_weak__0_CHD_49.yml
results:
  fit_time:
  - 1.2150166034698486
  - 1.2200422286987305
  - 1.3286957740783691
  - 1.2596418857574463
  - 1.2471797466278076
  score_time:
  - 1.1559555530548096
  - 1.072242259979248
  - 1.1714799404144287
  - 1.1280202865600586
  - 1.1161084175109863
  test_average_precision_macro:
  - 0.4814482132719964
  - 0.5980987326611956
  - 0.5539669021345662
  - 0.543370959097263
  - 0.5601683172431376
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6614063382918148
  - 0.7383214070888356
  - 0.6957275777466234
  - 0.7067849449837151
  - 0.7201002009780801
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.761301044634378
  - 0.8229361370716511
  - 0.7957707707707707
  - 0.7891666666666666
  - 0.8039141414141415
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6087843751715803
  - 0.7126640724233677
  - 0.6541058447084787
  - 0.66006555193374
  - 0.697751811997073
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6908831908831908
  - 0.7367601246105919
  - 0.7117117117117117
  - 0.7242424242424241
  - 0.7181818181818181
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6908831908831908
  - 0.7367601246105919
  - 0.7117117117117117
  - 0.7242424242424242
  - 0.7181818181818181
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6908831908831908
  - 0.7367601246105918
  - 0.7117117117117117
  - 0.7242424242424242
  - 0.7181818181818181
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6358374568900884
  - 0.7102159200773445
  - 0.6715152652652653
  - 0.6864433811802233
  - 0.6786811779769527
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5507018716577541
  - 0.5983343572250378
  - 0.570776619944549
  - 0.5848873273838299
  - 0.578798185941043
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5277475516866159
  - 0.5832305795314426
  - 0.5524475524475524
  - 0.5676959619952494
  - 0.5602836879432624
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5646353646353646
  - 0.6155803697859772
  - 0.5916773916773918
  - 0.6009090909090907
  - 0.5894883903974814
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.47207842467130395
  - 0.5574656750198446
  - 0.5121070962923286
  - 0.5276826547626036
  - 0.517956360948135
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7613010446343781
  - 0.8229361370716515
  - 0.7957707707707706
  - 0.8073484848484848
  - 0.8130050505050508
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.06682852091409436
  - 0.18084745273710223
  - 0.1245930201894845
  - 0.13741137264215972
  - 0.10767372668648428
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3639646897456846
  - 0.465880574801623
  - 0.40928531334024243
  - 0.4380350877192982
  - 0.4195237308334191
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3821864063289835
  - 0.48020868482156004
  - 0.4184873797153488
  - 0.4551831526059616
  - 0.4321516413988613
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06292139875463355
  - 0.19193100994455356
  - 0.12571781884538957
  - 0.14206380693505508
  - 0.12311376543878338
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8401693382436957
  - 0.8881564482541003
  - 0.8678372506575109
  - 0.8580159077759911
  - 0.8715964097888758
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.623931623931624
  - -3.7757009345794392
  - -3.7027027027027026
  - -3.6454545454545455
  - -3.6545454545454548
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3091168091168091
  - -0.2632398753894081
  - -0.2882882882882883
  - -0.27575757575757576
  - -0.2818181818181818
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3091168091168091
  - -0.2632398753894081
  - -0.2882882882882883
  - -0.27575757575757576
  - -0.2818181818181818
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.30911680911680917
  - -0.26323987538940813
  - -0.2882882882882883
  - -0.27575757575757576
  - -0.2818181818181818
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3641625431099116
  - -0.2897840799226555
  - -0.3284847347347347
  - -0.3135566188197767
  - -0.3213188220230474
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23012820512820512
  - -0.1773624091381101
  - -0.20140140140140142
  - -0.18808080808080807
  - -0.1856818181818182
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6908831908831908
  - 0.7367601246105919
  - 0.7117117117117117
  - 0.7242424242424241
  - 0.7181818181818181
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6908831908831908
  - 0.7367601246105919
  - 0.7117117117117117
  - 0.7242424242424242
  - 0.7181818181818181
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6908831908831908
  - 0.7367601246105918
  - 0.7117117117117117
  - 0.7242424242424242
  - 0.7181818181818181
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6358374568900884
  - 0.7102159200773445
  - 0.6715152652652653
  - 0.6864433811802233
  - 0.6786811779769527
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6908831908831908
  - 0.7367601246105919
  - 0.7117117117117117
  - 0.7242424242424241
  - 0.7181818181818181
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6908831908831908
  - 0.7367601246105919
  - 0.7117117117117117
  - 0.7242424242424242
  - 0.7181818181818181
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6908831908831908
  - 0.7367601246105918
  - 0.7117117117117117
  - 0.7242424242424242
  - 0.7181818181818181
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6358374568900884
  - 0.7102159200773445
  - 0.6715152652652653
  - 0.6864433811802233
  - 0.6786811779769527
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5183771180319773
  - 0.6375697664940507
  - 0.6182758508757228
  - 0.6319728839463145
  - 0.5818623023625745
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7735958601539821
  - 0.8112950626959247
  - 0.7885526895943563
  - 0.8044350877192983
  - 0.8029011836979323
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7698717948717948
  - 0.8226375908618901
  - 0.7985985985985987
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5707961359452318
  - 0.6237518149111829
  - 0.5873735707198109
  - 0.6191088720655705
  - 0.6462249799393303
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9462454749508682
  - 0.9425791181914199
  - 0.9413887636989752
  - 0.9441847187038866
  - 0.9458098621056462
  train_average_precision_macro_oob:
  - 0.5433173591102098
  - 0.5049475904424261
  - 0.518549259820627
  - 0.503243913739179
  - 0.5144004512867865
  train_average_precision_micro:
  - 0.8879467963952377
  - 0.8743188463299022
  - 0.8828369244890063
  - 0.8776694748901772
  - 0.8791461139556969
  train_average_precision_micro_oob:
  - 0.7113745297387627
  - 0.6902448985329268
  - 0.6954181384048601
  - 0.6869394791473568
  - 0.6907291544454338
  train_average_precision_samples:
  - 0.871857559614409
  - 0.860053943452381
  - 0.8688125625625625
  - 0.8648127340823969
  - 0.8619475655430712
  train_average_precision_samples_oob:
  - 0.8022513952308472
  - 0.7782180059523809
  - 0.7910222722722722
  - 0.7895630461922597
  - 0.7869007490636705
  train_average_precision_weighted:
  - 0.948803276646598
  - 0.9437659911512157
  - 0.9429527544800477
  - 0.9461496894505946
  - 0.9484244980242779
  train_average_precision_weighted_oob:
  - 0.6660077079150164
  - 0.6308602463937023
  - 0.6427914506489015
  - 0.6259350197485126
  - 0.6318455075333266
  train_f1_macro:
  - 0.8375190258751902
  - 0.8210565476190476
  - 0.8292042042042042
  - 0.8213483146067416
  - 0.8220973782771536
  train_f1_macro_oob:
  - 0.723744292237443
  - 0.7012648809523809
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_f1_micro:
  - 0.8375190258751902
  - 0.8210565476190477
  - 0.8292042042042042
  - 0.8213483146067416
  - 0.8220973782771536
  train_f1_micro_oob:
  - 0.723744292237443
  - 0.7012648809523809
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_f1_samples:
  - 0.8375190258751902
  - 0.8210565476190477
  - 0.8292042042042043
  - 0.8213483146067416
  - 0.8220973782771537
  train_f1_samples_oob:
  - 0.723744292237443
  - 0.7012648809523808
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_f1_weighted:
  - 0.808253016604762
  - 0.7885191237177883
  - 0.7985317047817049
  - 0.7893753122459176
  - 0.7905022902556473
  train_f1_weighted_oob:
  - 0.6869896852221199
  - 0.6576553508881662
  - 0.6752878315378315
  - 0.6658640518009855
  - 0.665274243432643
  train_jaccard_macro:
  - 0.7261355265906208
  - 0.7042519251307571
  - 0.7148219287715086
  - 0.7038864667688957
  - 0.7048266996591538
  train_jaccard_macro_oob:
  - 0.5833922726184824
  - 0.5598104691965149
  - 0.5743620578451978
  - 0.56459782632541
  - 0.5646132403506665
  train_jaccard_micro:
  - 0.7204582651391161
  - 0.6964342063742506
  - 0.7082398204552741
  - 0.6968541468064824
  - 0.6979332273449921
  train_jaccard_micro_oob:
  - 0.5670840787119857
  - 0.5399598968776855
  - 0.5565293602103418
  - 0.5451388888888888
  - 0.5455861070911722
  train_jaccard_samples:
  - 0.7523809523809523
  - 0.7291028911564625
  - 0.7378914628914628
  - 0.7290636704119849
  - 0.7293739967897271
  train_jaccard_samples_oob:
  - 0.60140643222835
  - 0.5738443104514533
  - 0.5906536406536408
  - 0.5810535531883846
  - 0.5822608103506979
  train_jaccard_weighted:
  - 0.6798145580812205
  - 0.6529046642963797
  - 0.6661800573275786
  - 0.6536610476167604
  - 0.655346907138415
  train_jaccard_weighted_oob:
  - 0.5280722847310355
  - 0.4954971318791383
  - 0.5146973289405187
  - 0.5053526496615203
  - 0.5047731410756705
  train_label_ranking_average_precision_score:
  - 0.8787068746829017
  - 0.866750372023809
  - 0.8755693193193184
  - 0.8670599250936322
  - 0.8664419475655427
  train_label_ranking_average_precision_score_oob:
  - 0.809100710299339
  - 0.7849144345238086
  - 0.7977790290290284
  - 0.7918102372034947
  - 0.7913951310861412
  train_matthews_corrcoef_macro:
  - 0.41364515044731953
  - 0.3831509262129833
  - 0.39689697790401257
  - 0.3855437952005767
  - 0.38661109514453235
  train_matthews_corrcoef_macro_oob:
  - 0.13959337461819318
  - 0.07061953968143748
  - 0.11405433150913401
  - 0.09079603771656584
  - 0.0937114872730903
  train_matthews_corrcoef_micro:
  - 0.6694266461974492
  - 0.6326552643765401
  - 0.6504266856984934
  - 0.6346614214986879
  - 0.6364016202475541
  train_matthews_corrcoef_micro_oob:
  - 0.4362327552903032
  - 0.38450750639682774
  - 0.4148169173373734
  - 0.39573926004129856
  - 0.39810496950568086
  train_matthews_corrcoef_samples:
  - 0.6672736854482035
  - 0.6280170996962947
  - 0.6455969057472026
  - 0.6296984493408478
  - 0.635532317034793
  train_matthews_corrcoef_samples_oob:
  - 0.45109293661284733
  - 0.39824841452419957
  - 0.43162737191495304
  - 0.4128447012081313
  - 0.40658282493452264
  train_matthews_corrcoef_weighted:
  - 0.4314909777088723
  - 0.40641701675746095
  - 0.41851132606551267
  - 0.4050456070727955
  - 0.40439769640176865
  train_matthews_corrcoef_weighted_oob:
  - 0.14434758452610552
  - 0.07569370572606783
  - 0.12095710952042982
  - 0.09955224561853965
  - 0.09649372882407609
  train_ndgc:
  - 0.9153833768984055
  - 0.9059354585066346
  - 0.9130054963486556
  - 0.9107603186358715
  - 0.9090987600944483
  train_ndgc_oob:
  - 0.8706329462301072
  - 0.8536709887079006
  - 0.8624778122183515
  - 0.8627014755047293
  - 0.8610726594551824
  train_neg_coverage_error:
  - -3.2465753424657535
  - -3.189732142857143
  - -3.2162162162162162
  - -3.2337078651685394
  - -3.253932584269663
  train_neg_coverage_error_oob:
  - -3.682648401826484
  - -3.716517857142857
  - -3.6936936936936937
  - -3.7168539325842698
  - -3.7348314606741573
  train_neg_hamming_loss_macro:
  - -0.16248097412480975
  - -0.17894345238095236
  - -0.17079579579579582
  - -0.1786516853932584
  - -0.17790262172284643
  train_neg_hamming_loss_macro_oob:
  - -0.2762557077625571
  - -0.29873511904761907
  - -0.2849099099099099
  - -0.2943820224719101
  - -0.2940074906367041
  train_neg_hamming_loss_micro:
  - -0.16248097412480975
  - -0.17894345238095238
  - -0.1707957957957958
  - -0.17865168539325843
  - -0.17790262172284643
  train_neg_hamming_loss_micro_oob:
  - -0.2762557077625571
  - -0.29873511904761907
  - -0.2849099099099099
  - -0.2943820224719101
  - -0.2940074906367041
  train_neg_hamming_loss_samples:
  - -0.16248097412480975
  - -0.17894345238095236
  - -0.1707957957957958
  - -0.17865168539325843
  - -0.17790262172284643
  train_neg_hamming_loss_samples_oob:
  - -0.2762557077625571
  - -0.29873511904761907
  - -0.2849099099099099
  - -0.2943820224719101
  - -0.29400749063670406
  train_neg_hamming_loss_weighted:
  - -0.19174698339523794
  - -0.21148087628221166
  - -0.20146829521829523
  - -0.2106246877540825
  - -0.2094977097443527
  train_neg_hamming_loss_weighted_oob:
  - -0.31301031477787994
  - -0.34234464911183393
  - -0.32471216846216844
  - -0.33413594819901454
  - -0.334725756567357
  train_neg_label_ranking_loss:
  - -0.10533992897006594
  - -0.11302083333333333
  - -0.10892142142142143
  - -0.11348314606741573
  - -0.11488139825218477
  train_neg_label_ranking_loss_oob:
  - -0.18913622526636226
  - -0.21139632936507938
  - -0.2011136136136136
  - -0.2078589263420724
  - -0.20794631710362044
  train_precision_macro:
  - 0.8375190258751902
  - 0.8210565476190476
  - 0.8292042042042042
  - 0.8213483146067416
  - 0.8220973782771536
  train_precision_macro_oob:
  - 0.723744292237443
  - 0.7012648809523809
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_precision_micro:
  - 0.8375190258751902
  - 0.8210565476190477
  - 0.8292042042042042
  - 0.8213483146067416
  - 0.8220973782771536
  train_precision_micro_oob:
  - 0.723744292237443
  - 0.7012648809523809
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_precision_samples:
  - 0.8375190258751902
  - 0.8210565476190477
  - 0.8292042042042043
  - 0.8213483146067416
  - 0.8220973782771537
  train_precision_samples_oob:
  - 0.723744292237443
  - 0.7012648809523808
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_precision_weighted:
  - 0.808253016604762
  - 0.7885191237177883
  - 0.7985317047817049
  - 0.7893753122459176
  - 0.7905022902556473
  train_precision_weighted_oob:
  - 0.6869896852221199
  - 0.6576553508881662
  - 0.6752878315378315
  - 0.6658640518009855
  - 0.665274243432643
  train_recall_macro:
  - 0.8375190258751902
  - 0.8210565476190476
  - 0.8292042042042042
  - 0.8213483146067416
  - 0.8220973782771536
  train_recall_macro_oob:
  - 0.723744292237443
  - 0.7012648809523809
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_recall_micro:
  - 0.8375190258751902
  - 0.8210565476190477
  - 0.8292042042042042
  - 0.8213483146067416
  - 0.8220973782771536
  train_recall_micro_oob:
  - 0.723744292237443
  - 0.7012648809523809
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_recall_samples:
  - 0.8375190258751902
  - 0.8210565476190477
  - 0.8292042042042043
  - 0.8213483146067416
  - 0.8220973782771537
  train_recall_samples_oob:
  - 0.723744292237443
  - 0.7012648809523808
  - 0.7150900900900901
  - 0.7056179775280899
  - 0.7059925093632958
  train_recall_weighted:
  - 0.808253016604762
  - 0.7885191237177883
  - 0.7985317047817049
  - 0.7893753122459176
  - 0.7905022902556473
  train_recall_weighted_oob:
  - 0.6869896852221199
  - 0.6576553508881662
  - 0.6752878315378315
  - 0.6658640518009855
  - 0.665274243432643
  train_roc_auc_macro:
  - 0.952625225939784
  - 0.9495685877212662
  - 0.947507393043224
  - 0.9508407627287774
  - 0.9543866986023742
  train_roc_auc_macro_oob:
  - 0.6218494060730347
  - 0.5756846110418199
  - 0.569421733017747
  - 0.5683085276648606
  - 0.5921102172881901
  train_roc_auc_micro:
  - 0.9108813350389444
  - 0.9057499382622349
  - 0.9095978445896209
  - 0.9051114529266734
  - 0.9053979496994145
  train_roc_auc_micro_oob:
  - 0.8012647266420873
  - 0.785632885725096
  - 0.7958087964666911
  - 0.786560160652042
  - 0.7876310054164931
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9488180326991078
  - 0.9422571362347052
  - 0.9413244272307589
  - 0.9458676428641636
  - 0.9509964886237491
  train_roc_auc_weighted_oob:
  - 0.616625658358938
  - 0.5943000657206269
  - 0.6071154353043124
  - 0.58579746689948
  - 0.5887785506193423
start: 2023-12-21 23:04:59.076798
wrapper: null
