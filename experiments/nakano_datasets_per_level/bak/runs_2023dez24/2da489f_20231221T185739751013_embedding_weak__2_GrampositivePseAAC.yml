active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmJmZmZnJvwCamZmZmek/gJmZmZmZAcAAmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 18:57:58.214185
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__2
  params: {}
hash: 2da489f1380a853968ef092881d44be3edf16411e6e3fabfc000d207d0cebb5e
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2da489f_20231221T185739751013_embedding_weak__2_GrampositivePseAAC.yml
results:
  fit_time:
  - 7.807016611099243
  - 8.27256727218628
  - 8.59485936164856
  - 8.489420413970947
  - 8.26597547531128
  score_time:
  - 2.5289251804351807
  - 2.151824951171875
  - 1.9981098175048828
  - 2.1060502529144287
  - 2.2472944259643555
  test_average_precision_macro:
  - 0.3610084863492471
  - 0.4395404439915616
  - 0.42523920935061804
  - 0.3863274287275197
  - 0.4639144174165507
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.46418172786544853
  - 0.5481558224375376
  - 0.5683281645067656
  - 0.49176509032893817
  - 0.5574109659808557
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7168284789644012
  - 0.7075320512820512
  - 0.727346278317152
  - 0.7075471698113207
  - 0.727346278317152
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4286741145927545
  - 0.5395880904300692
  - 0.5550653070747907
  - 0.4840223332411433
  - 0.5760334908014701
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582525
  - 0.7783018867924528
  - 0.7791262135922331
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582524
  - 0.7783018867924528
  - 0.779126213592233
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582524
  - 0.7783018867924528
  - 0.779126213592233
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6755974607916356
  - 0.7163919413919413
  - 0.7156460044809558
  - 0.7180491278034888
  - 0.71209858103062
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.621041429747454
  - 0.6499502220432454
  - 0.6589528445777503
  - 0.6522303637022484
  - 0.6553718566383846
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6
  - 0.6345776031434185
  - 0.6414342629482072
  - 0.637065637065637
  - 0.6381709741550696
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6284789644012944
  - 0.664102564102564
  - 0.6673139158576048
  - 0.6591194968553458
  - 0.6621359223300965
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5181422203231493
  - 0.562662686560804
  - 0.5632295394818987
  - 0.5644744763334163
  - 0.5578928942216487
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7168284789644013
  - 0.7075320512820511
  - 0.7273462783171522
  - 0.7075471698113206
  - 0.7273462783171522
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07883649882318905
  - 0.14683702190061068
  - 0.1641132051187213
  - 0.14367008090158223
  - 0.1474498408986535
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.20852006782316748
  - 0.303989862261161
  - 0.3189813332513372
  - 0.29080080483815696
  - 0.3060453849738265
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.14800016442578925
  - 0.21794871794871795
  - 0.21596132947433294
  - 0.18238993710691825
  - 0.19978009970087016
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11004164637133423
  - 0.20900577347302718
  - 0.23026264263952517
  - 0.2063344152840081
  - 0.2130620466998034
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7894025254508987
  - 0.7823821563205808
  - 0.7969805099785674
  - 0.7819692389839094
  - 0.7977326314429957
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7572815533980584
  - -1.75
  - -1.7087378640776698
  - -1.7735849056603774
  - -1.7087378640776698
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.24999999999999997
  - -0.22355769230769232
  - -0.21844660194174756
  - -0.22169811320754718
  - -0.22087378640776698
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25
  - -0.22355769230769232
  - -0.21844660194174756
  - -0.22169811320754718
  - -0.220873786407767
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25
  - -0.22355769230769232
  - -0.21844660194174756
  - -0.22169811320754718
  - -0.220873786407767
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32440253920836437
  - -0.2836080586080586
  - -0.28435399551904406
  - -0.28195087219651116
  - -0.28790141896938015
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2483818770226537
  - -0.24839743589743588
  - -0.23300970873786409
  - -0.2578616352201258
  - -0.2313915857605178
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582525
  - 0.7783018867924528
  - 0.7791262135922331
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582524
  - 0.7783018867924528
  - 0.779126213592233
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582524
  - 0.7783018867924528
  - 0.779126213592233
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6755974607916356
  - 0.7163919413919413
  - 0.7156460044809558
  - 0.7180491278034888
  - 0.71209858103062
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582525
  - 0.7783018867924528
  - 0.7791262135922331
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582524
  - 0.7783018867924528
  - 0.779126213592233
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.75
  - 0.7764423076923077
  - 0.7815533980582524
  - 0.7783018867924528
  - 0.779126213592233
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6755974607916356
  - 0.7163919413919413
  - 0.7156460044809558
  - 0.7180491278034888
  - 0.71209858103062
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6518081362459693
  - 0.7493686493394536
  - 0.6585986361757817
  - 0.6598795779396787
  - 0.7486654795763501
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.750999000999001
  - 0.7838003368549993
  - 0.7805007492507493
  - 0.7639136110122227
  - 0.800355894105894
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7516181229773462
  - 0.751602564102564
  - 0.7669902912621359
  - 0.7421383647798743
  - 0.7686084142394822
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6349074621058384
  - 0.7157757352558831
  - 0.6785450819672131
  - 0.660843558838679
  - 0.7221972203729768
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.998815843345197
  - 0.996988521724263
  - 0.999138616362475
  - 0.9993086069334741
  - 0.9993414954434394
  train_average_precision_macro_oob:
  - 0.5378689451138003
  - 0.560371979043739
  - 0.5240328149635936
  - 0.525254341205839
  - 0.5533465255999562
  train_average_precision_micro:
  - 0.979697345556287
  - 0.9736574471497196
  - 0.9774046302802124
  - 0.9797262120293904
  - 0.9790647057995222
  train_average_precision_micro_oob:
  - 0.6553986178497746
  - 0.6676369842740898
  - 0.6271009482368956
  - 0.6526545845769423
  - 0.6537989462816604
  train_average_precision_samples:
  - 0.9751602564102565
  - 0.9771084337349397
  - 0.9741586538461539
  - 0.9771993543179984
  - 0.974959935897436
  train_average_precision_samples_oob:
  - 0.7614182692307693
  - 0.7674698795180723
  - 0.7363782051282052
  - 0.7554479418886199
  - 0.759415064102564
  train_average_precision_weighted:
  - 0.9984286608590204
  - 0.9960335517734816
  - 0.9987647832379863
  - 0.9993010934689533
  - 0.9991898648687986
  train_average_precision_weighted_oob:
  - 0.6851279526771672
  - 0.7145037425312698
  - 0.6595126933261132
  - 0.6723643010837541
  - 0.6912639173617433
  train_f1_macro:
  - 0.9296875
  - 0.9325301204819276
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_f1_macro_oob:
  - 0.7956730769230769
  - 0.794578313253012
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_f1_micro:
  - 0.9296875
  - 0.9325301204819277
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_f1_micro_oob:
  - 0.7956730769230769
  - 0.7945783132530121
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_f1_samples:
  - 0.9296875
  - 0.9325301204819277
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_f1_samples_oob:
  - 0.7956730769230769
  - 0.7945783132530121
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_f1_weighted:
  - 0.9281198366073068
  - 0.9329970600103763
  - 0.92107467413255
  - 0.9212523443714763
  - 0.92583073251331
  train_f1_weighted_oob:
  - 0.7425073434918303
  - 0.7404796218366287
  - 0.7267819441894622
  - 0.7320826147798469
  - 0.7314404718193502
  train_jaccard_macro:
  - 0.871772474423236
  - 0.8772370687590392
  - 0.8586029849837395
  - 0.8614081916593743
  - 0.8670972100468393
  train_jaccard_macro_oob:
  - 0.6733360369926573
  - 0.6720428021423734
  - 0.6591631471748336
  - 0.665960383302088
  - 0.663749691762961
  train_jaccard_micro:
  - 0.8686131386861314
  - 0.873589164785553
  - 0.8530066815144766
  - 0.8572231590781337
  - 0.8633818589025756
  train_jaccard_micro_oob:
  - 0.6606786427145709
  - 0.6591704147926037
  - 0.6450815620365793
  - 0.652
  - 0.6499752107089737
  train_jaccard_samples:
  - 0.8878205128205128
  - 0.8923694779116466
  - 0.8737179487179486
  - 0.8769975786924937
  - 0.8830128205128204
  train_jaccard_samples_oob:
  - 0.6807692307692306
  - 0.6774297188755019
  - 0.6618589743589742
  - 0.6684422921711056
  - 0.6650641025641024
  train_jaccard_weighted:
  - 0.8688877487851104
  - 0.8781099707859807
  - 0.8591489848575123
  - 0.8579510733975956
  - 0.8656327961955509
  train_jaccard_weighted_oob:
  - 0.5929282516992418
  - 0.5905196948655971
  - 0.5740796319694318
  - 0.5807986699139287
  - 0.5800650611314352
  train_label_ranking_average_precision_score:
  - 0.9751602564102563
  - 0.9771084337349396
  - 0.9741586538461535
  - 0.9771993543179982
  - 0.9749599358974357
  train_label_ranking_average_precision_score_oob:
  - 0.761418269230769
  - 0.767469879518072
  - 0.7363782051282046
  - 0.7554479418886196
  - 0.7594150641025641
  train_matthews_corrcoef_macro:
  - 0.5895381436695857
  - 0.5935736399103606
  - 0.5555505844375428
  - 0.5695563022221244
  - 0.5819368773088929
  train_matthews_corrcoef_macro_oob:
  - 0.19665327943296135
  - 0.19486908320884183
  - 0.1655552970789117
  - 0.18648521722715394
  - 0.18169911554424323
  train_matthews_corrcoef_micro:
  - 0.8116944601956647
  - 0.8191642011011496
  - 0.7866147473609961
  - 0.7941012807637414
  - 0.8034736370609821
  train_matthews_corrcoef_micro_oob:
  - 0.3707402830517705
  - 0.3669786611565304
  - 0.3194765609466484
  - 0.34644393642738475
  - 0.3382526747891462
  train_matthews_corrcoef_samples:
  - 0.7239295686018732
  - 0.7359005240343026
  - 0.689474440396745
  - 0.6980857168928777
  - 0.7119103378326425
  train_matthews_corrcoef_samples_oob:
  - 0.22355769230769232
  - 0.21183297253619993
  - 0.1746794871794872
  - 0.18923656304692316
  - 0.1774552096275142
  train_matthews_corrcoef_weighted:
  - 0.788696354026206
  - 0.7970553338952645
  - 0.7567887105156897
  - 0.7683641814013467
  - 0.779304001860123
  train_matthews_corrcoef_weighted_oob:
  - 0.2888554520639324
  - 0.286626958141348
  - 0.24323117931025967
  - 0.27165956411592634
  - 0.2634099151188032
  train_ndgc:
  - 0.9814077876075274
  - 0.9828075500090007
  - 0.980687242404398
  - 0.982892146962862
  - 0.9811193886059741
  train_ndgc_oob:
  - 0.8225454822260947
  - 0.8271669523807587
  - 0.8041273636325352
  - 0.8182950739329443
  - 0.821091696160659
  train_neg_coverage_error:
  - -1.0913461538461537
  - -1.091566265060241
  - -1.0913461538461537
  - -1.0920096852300243
  - -1.09375
  train_neg_coverage_error_oob:
  - -1.6201923076923077
  - -1.6048192771084338
  - -1.6754807692307692
  - -1.6416464891041163
  - -1.6370192307692308
  train_neg_hamming_loss_macro:
  - -0.0703125
  - -0.06746987951807229
  - -0.07932692307692307
  - -0.07687651331719128
  - -0.0733173076923077
  train_neg_hamming_loss_macro_oob:
  - -0.20432692307692307
  - -0.20542168674698794
  - -0.2157451923076923
  - -0.2106537530266344
  - -0.21213942307692307
  train_neg_hamming_loss_micro:
  - -0.0703125
  - -0.06746987951807229
  - -0.07932692307692307
  - -0.07687651331719128
  - -0.0733173076923077
  train_neg_hamming_loss_micro_oob:
  - -0.20432692307692307
  - -0.20542168674698796
  - -0.21574519230769232
  - -0.2106537530266344
  - -0.21213942307692307
  train_neg_hamming_loss_samples:
  - -0.0703125
  - -0.06746987951807229
  - -0.07932692307692307
  - -0.07687651331719128
  - -0.0733173076923077
  train_neg_hamming_loss_samples_oob:
  - -0.20432692307692307
  - -0.20542168674698796
  - -0.21574519230769232
  - -0.2106537530266344
  - -0.21213942307692307
  train_neg_hamming_loss_weighted:
  - -0.07188016339269322
  - -0.06700293998962356
  - -0.07892532586744996
  - -0.07874765562852382
  - -0.07416926748668992
  train_neg_hamming_loss_weighted_oob:
  - -0.25749265650816966
  - -0.2595203781633712
  - -0.27321805581053793
  - -0.2679173852201532
  - -0.2685595281806499
  train_neg_label_ranking_loss:
  - -0.02784455128205128
  - -0.02791164658634538
  - -0.02784455128205128
  - -0.027239709443099273
  - -0.028846153846153848
  train_neg_label_ranking_loss_oob:
  - -0.20432692307692307
  - -0.19859437751004014
  - -0.22255608974358973
  - -0.2098466505246166
  - -0.20933493589743588
  train_precision_macro:
  - 0.9296875
  - 0.9325301204819276
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_precision_macro_oob:
  - 0.7956730769230769
  - 0.794578313253012
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_precision_micro:
  - 0.9296875
  - 0.9325301204819277
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_precision_micro_oob:
  - 0.7956730769230769
  - 0.7945783132530121
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_precision_samples:
  - 0.9296875
  - 0.9325301204819277
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_precision_samples_oob:
  - 0.7956730769230769
  - 0.7945783132530121
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_precision_weighted:
  - 0.9281198366073068
  - 0.9329970600103763
  - 0.92107467413255
  - 0.9212523443714763
  - 0.92583073251331
  train_precision_weighted_oob:
  - 0.7425073434918303
  - 0.7404796218366287
  - 0.7267819441894622
  - 0.7320826147798469
  - 0.7314404718193502
  train_recall_macro:
  - 0.9296875
  - 0.9325301204819276
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_recall_macro_oob:
  - 0.7956730769230769
  - 0.794578313253012
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_recall_micro:
  - 0.9296875
  - 0.9325301204819277
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_recall_micro_oob:
  - 0.7956730769230769
  - 0.7945783132530121
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_recall_samples:
  - 0.9296875
  - 0.9325301204819277
  - 0.9206730769230769
  - 0.9231234866828087
  - 0.9266826923076923
  train_recall_samples_oob:
  - 0.7956730769230769
  - 0.7945783132530121
  - 0.7842548076923077
  - 0.7893462469733656
  - 0.7878605769230769
  train_recall_weighted:
  - 0.9281198366073068
  - 0.9329970600103763
  - 0.92107467413255
  - 0.9212523443714763
  - 0.92583073251331
  train_recall_weighted_oob:
  - 0.7425073434918303
  - 0.7404796218366287
  - 0.7267819441894622
  - 0.7320826147798469
  - 0.7314404718193502
  train_roc_auc_macro:
  - 0.9994286159520037
  - 0.9991076290479546
  - 0.9995301430059358
  - 0.9997076017124629
  - 0.9997039963057606
  train_roc_auc_macro_oob:
  - 0.7583718079841488
  - 0.7627441173729983
  - 0.7686271982293396
  - 0.7768603572008724
  - 0.780663679596618
  train_roc_auc_micro:
  - 0.9844552434079995
  - 0.9818089360423456
  - 0.984535756390718
  - 0.9842988766881232
  - 0.9846661107436908
  train_roc_auc_micro_oob:
  - 0.8408967612694215
  - 0.8489047608040744
  - 0.822083560974207
  - 0.8360217089486306
  - 0.8362423440779826
  train_roc_auc_samples:
  - 0.9721554487179488
  - 0.9720883534136546
  - 0.9721554487179487
  - 0.9727602905569007
  - 0.9711538461538461
  train_roc_auc_samples_oob:
  - 0.7956730769230769
  - 0.80140562248996
  - 0.7774439102564101
  - 0.7901533494753835
  - 0.7906650641025641
  train_roc_auc_weighted:
  - 0.999241791096215
  - 0.9988256479280019
  - 0.9993184261654017
  - 0.9996993159730124
  - 0.9996285059041822
  train_roc_auc_weighted_oob:
  - 0.8096702845108587
  - 0.8242134837534051
  - 0.7915656726505711
  - 0.805122822581372
  - 0.8077537222485234
start: 2023-12-21 18:57:39.751013
wrapper: null
