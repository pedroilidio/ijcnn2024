active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b8AMjMzMzPjv0BmZmZmZhbAAJmZmZmZ+b/gzMzMzMwiQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 13:52:41.849446
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__1
  params: {}
hash: ebb7e8d54dfdd39563c82b21196125feb0b3df332a67aeef69852e887e37d7ea
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ebb7e8d_20231222T135059010791_embedding_proba__1_scene.yml
results:
  fit_time:
  - 44.41151213645935
  - 57.557281255722046
  - 65.13716506958008
  - 57.239875078201294
  - 57.54032921791077
  score_time:
  - 9.788886308670044
  - 6.011937618255615
  - 5.2690043449401855
  - 6.068622827529907
  - 5.983791828155518
  test_average_precision_macro:
  - 0.8626114891789145
  - 0.8276111834610208
  - 0.8557277084661861
  - 0.8614469029495763
  - 0.8525530598359016
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8704483244813797
  - 0.829929318086276
  - 0.870603870462857
  - 0.8651122609410244
  - 0.8565072573168935
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8931331953071083
  - 0.8606154910096818
  - 0.8823750855578372
  - 0.888095238095238
  - 0.8839336158192089
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8530539358031441
  - 0.8187546236063908
  - 0.8458286164665731
  - 0.8506380194240368
  - 0.8430874317376409
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9227053140096619
  - 0.911134163208852
  - 0.917864476386037
  - 0.9209799861973774
  - 0.9103107344632769
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9227053140096618
  - 0.911134163208852
  - 0.917864476386037
  - 0.9209799861973775
  - 0.9103107344632768
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9227053140096618
  - 0.9111341632088521
  - 0.917864476386037
  - 0.9209799861973775
  - 0.9103107344632769
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.918263597990595
  - 0.9073879748153607
  - 0.9128066154115532
  - 0.9164018489094323
  - 0.9057672838901408
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.859060612370595
  - 0.8385910123312907
  - 0.8519847554494833
  - 0.8558553506684219
  - 0.8382874798253858
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8565022421524664
  - 0.8367735789139409
  - 0.8481973434535104
  - 0.8535337384074193
  - 0.8353856124432922
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8741989549442966
  - 0.8562043074491207
  - 0.866383103549428
  - 0.8714384304446415
  - 0.8549737691686844
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8516918110992748
  - 0.8323632574585951
  - 0.8435651403358864
  - 0.8481636616794508
  - 0.8308133480278829
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.893133195307108
  - 0.8606154910096817
  - 0.882375085557837
  - 0.8880952380952379
  - 0.8839336158192087
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7214599561470437
  - 0.6786010667838318
  - 0.6982402736424974
  - 0.7163245601518002
  - 0.6783200321748574
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7162128701102172
  - 0.6717927788941169
  - 0.6949803710205302
  - 0.7095718156886701
  - 0.6745065500371414
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6415767415583999
  - 0.5960113341623603
  - 0.6183039460056281
  - 0.6391876109044694
  - 0.597481754874665
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7077109386859635
  - 0.6680976716702522
  - 0.6818784101137957
  - 0.7024958199665355
  - 0.6649261470770922
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9210057674689661
  - 0.8969355961959941
  - 0.9132661206079682
  - 0.9181262053599583
  - 0.9147350131763227
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3768115942028984
  - -1.4896265560165975
  - -1.3963039014373717
  - -1.3768115942028984
  - -1.4279661016949152
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07729468599033816
  - -0.08886583679114801
  - -0.08213552361396304
  - -0.0790200138026225
  - -0.08968926553672317
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07729468599033816
  - -0.088865836791148
  - -0.08213552361396304
  - -0.0790200138026225
  - -0.08968926553672317
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07729468599033816
  - -0.08886583679114798
  - -0.08213552361396304
  - -0.0790200138026225
  - -0.08968926553672316
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08173640200940505
  - -0.0926120251846393
  - -0.0871933845884469
  - -0.08359815109056767
  - -0.09423271610985923
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.060455486542443065
  - -0.08122406639004151
  - -0.06565708418891171
  - -0.05890269151138717
  - -0.06430084745762711
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9227053140096619
  - 0.911134163208852
  - 0.917864476386037
  - 0.9209799861973774
  - 0.9103107344632769
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9227053140096618
  - 0.911134163208852
  - 0.917864476386037
  - 0.9209799861973775
  - 0.9103107344632768
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9227053140096618
  - 0.9111341632088521
  - 0.917864476386037
  - 0.9209799861973775
  - 0.9103107344632769
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.918263597990595
  - 0.9073879748153607
  - 0.9128066154115532
  - 0.9164018489094323
  - 0.9057672838901408
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9227053140096619
  - 0.911134163208852
  - 0.917864476386037
  - 0.9209799861973774
  - 0.9103107344632769
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9227053140096618
  - 0.911134163208852
  - 0.917864476386037
  - 0.9209799861973775
  - 0.9103107344632768
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9227053140096618
  - 0.9111341632088521
  - 0.917864476386037
  - 0.9209799861973775
  - 0.9103107344632769
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.918263597990595
  - 0.9073879748153607
  - 0.9128066154115532
  - 0.9164018489094323
  - 0.9057672838901408
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9550526526771189
  - 0.939688876577954
  - 0.9533183198698344
  - 0.9533163694624074
  - 0.9464474723766602
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9612228177741328
  - 0.9444399267482672
  - 0.9597928628042297
  - 0.9601045307506558
  - 0.9536514315084298
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9395445134575569
  - 0.9187759336099586
  - 0.9343429158110883
  - 0.9410973084886128
  - 0.9356991525423728
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9508342250139528
  - 0.9353732640650189
  - 0.9491593266058549
  - 0.9480253617782219
  - 0.9416246768705482
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9948301981930027
  - 0.9947884752655124
  - 0.9944224458577632
  - 0.9952476236857345
  - 0.994375378162763
  train_average_precision_macro_oob:
  - 0.9315779449542215
  - 0.9361476997511966
  - 0.9328165560205912
  - 0.9334627473471054
  - 0.9327768991426834
  train_average_precision_micro:
  - 0.9949343730110499
  - 0.99456957789349
  - 0.9943013972580662
  - 0.9949630865461531
  - 0.9943720194813341
  train_average_precision_micro_oob:
  - 0.9299227659607787
  - 0.9341552878649991
  - 0.9300887331328409
  - 0.9326971424513624
  - 0.9298014216058976
  train_average_precision_samples:
  - 0.9873960498960499
  - 0.9874025974025974
  - 0.9887152777777778
  - 0.9869629244629246
  - 0.9873385012919896
  train_average_precision_samples_oob:
  - 0.9295045045045046
  - 0.937056277056277
  - 0.9343229166666667
  - 0.932510395010395
  - 0.9335701981050819
  train_average_precision_weighted:
  - 0.994693686246608
  - 0.9946262441213952
  - 0.9942849279273392
  - 0.995110517982903
  - 0.9942528411880899
  train_average_precision_weighted_oob:
  - 0.9281336247816141
  - 0.9328718821170339
  - 0.9300767105156997
  - 0.9303901837660243
  - 0.9297579649687177
  train_f1_macro:
  - 0.9702875952875955
  - 0.9728138528138528
  - 0.9715277777777777
  - 0.9709805959805959
  - 0.9710594315245479
  train_f1_macro_oob:
  - 0.9313063063063063
  - 0.9346320346320347
  - 0.9327256944444445
  - 0.9336451836451837
  - 0.9350559862187767
  train_f1_micro:
  - 0.9702875952875953
  - 0.9728138528138528
  - 0.9715277777777778
  - 0.9709805959805959
  - 0.9710594315245478
  train_f1_micro_oob:
  - 0.9313063063063063
  - 0.9346320346320346
  - 0.9327256944444444
  - 0.9336451836451837
  - 0.935055986218777
  train_f1_samples:
  - 0.9702875952875953
  - 0.9728138528138527
  - 0.9715277777777778
  - 0.970980595980596
  - 0.9710594315245478
  train_f1_samples_oob:
  - 0.9313063063063064
  - 0.9346320346320348
  - 0.9327256944444445
  - 0.9336451836451837
  - 0.935055986218777
  train_f1_weighted:
  - 0.9691332500660679
  - 0.9717934895293386
  - 0.9706906013372
  - 0.9701835530738383
  - 0.9700698649977113
  train_f1_weighted_oob:
  - 0.9280583889090415
  - 0.9314871292229782
  - 0.9298486084259707
  - 0.930910610949277
  - 0.9321171370609673
  train_jaccard_macro:
  - 0.9424700588042403
  - 0.9472130665114903
  - 0.9447585123014983
  - 0.943700887054265
  - 0.9439009808493055
  train_jaccard_macro_oob:
  - 0.8727586724384633
  - 0.8785452077977141
  - 0.8749827669404341
  - 0.876602501791759
  - 0.8791283431140209
  train_jaccard_micro:
  - 0.9422898965256162
  - 0.9470667565745111
  - 0.9446320054017556
  - 0.9435979459550468
  - 0.9437468608739327
  train_jaccard_micro_oob:
  - 0.8714436248682824
  - 0.8772856562373019
  - 0.8739324928832859
  - 0.8755483346872461
  - 0.8780329990294403
  train_jaccard_samples:
  - 0.950091575091575
  - 0.9544465058750773
  - 0.9523189484126983
  - 0.9510197010197009
  - 0.951285837332349
  train_jaccard_samples_oob:
  - 0.8863850113850114
  - 0.8920964749536178
  - 0.888938492063492
  - 0.8903697653697653
  - 0.8922972806693736
  train_jaccard_weighted:
  - 0.9403041089832861
  - 0.9452875966137129
  - 0.943173418890594
  - 0.9421969735503757
  - 0.942031057346348
  train_jaccard_weighted_oob:
  - 0.8671668163880871
  - 0.8731104689023759
  - 0.8700050287668484
  - 0.8718521434142179
  - 0.8740051205937654
  train_label_ranking_average_precision_score:
  - 0.9873960498960498
  - 0.9874025974025972
  - 0.9887152777777776
  - 0.9869629244629242
  - 0.9873385012919895
  train_label_ranking_average_precision_score_oob:
  - 0.9295045045045045
  - 0.9370562770562769
  - 0.9343229166666666
  - 0.9325103950103949
  - 0.9335701981050814
  train_matthews_corrcoef_macro:
  - 0.8989945066519707
  - 0.9075107583044592
  - 0.9027384511698914
  - 0.9006508841941883
  - 0.900777381473532
  train_matthews_corrcoef_macro_oob:
  - 0.7575398382381535
  - 0.7700065641590411
  - 0.7628705952978954
  - 0.7654645738870651
  - 0.7701754504619963
  train_matthews_corrcoef_micro:
  - 0.8971156311076478
  - 0.9058749423394059
  - 0.9015941513526525
  - 0.8996009658933107
  - 0.8992068428002256
  train_matthews_corrcoef_micro_oob:
  - 0.7521471871435117
  - 0.7646593289858796
  - 0.7581048954297368
  - 0.7612546670478624
  - 0.7651411257721973
  train_matthews_corrcoef_samples:
  - 0.8642344452434754
  - 0.8778837738653655
  - 0.8688092885573226
  - 0.8647373269835825
  - 0.8651891590461473
  train_matthews_corrcoef_samples_oob:
  - 0.667604389232032
  - 0.6870940710747863
  - 0.6785082062221338
  - 0.679708879378488
  - 0.6824669138430639
  train_matthews_corrcoef_weighted:
  - 0.8962428392252451
  - 0.90510164917934
  - 0.9009280996340251
  - 0.899006644417866
  - 0.8984484491109673
  train_matthews_corrcoef_weighted_oob:
  - 0.7486734759113451
  - 0.7614360262045249
  - 0.7553637352523876
  - 0.7583302988555488
  - 0.7622443194488657
  train_ndgc:
  - 0.9907922313968185
  - 0.9908640915115599
  - 0.9917702749383062
  - 0.9904678535581019
  - 0.9907049793649142
  train_ndgc_oob:
  - 0.9482943034079998
  - 0.9537761638619667
  - 0.9520568091492645
  - 0.950370956749371
  - 0.9511292802847223
  train_neg_coverage_error:
  - -1.1039501039501038
  - -1.1033766233766233
  - -1.103125
  - -1.104989604989605
  - -1.0956072351421189
  train_neg_coverage_error_oob:
  - -1.2822245322245323
  - -1.2623376623376623
  - -1.2786458333333333
  - -1.2765072765072765
  - -1.2656330749354006
  train_neg_hamming_loss_macro:
  - -0.029712404712404716
  - -0.027186147186147185
  - -0.02847222222222222
  - -0.029019404019404022
  - -0.02894056847545219
  train_neg_hamming_loss_macro_oob:
  - -0.0686936936936937
  - -0.06536796536796537
  - -0.06727430555555555
  - -0.06635481635481637
  - -0.06494401378122308
  train_neg_hamming_loss_micro:
  - -0.029712404712404713
  - -0.027186147186147185
  - -0.02847222222222222
  - -0.02901940401940402
  - -0.028940568475452195
  train_neg_hamming_loss_micro_oob:
  - -0.0686936936936937
  - -0.06536796536796537
  - -0.06727430555555555
  - -0.06635481635481635
  - -0.06494401378122308
  train_neg_hamming_loss_samples:
  - -0.029712404712404713
  - -0.027186147186147185
  - -0.02847222222222222
  - -0.029019404019404015
  - -0.02894056847545219
  train_neg_hamming_loss_samples_oob:
  - -0.06869369369369369
  - -0.06536796536796537
  - -0.06727430555555555
  - -0.06635481635481635
  - -0.06494401378122308
  train_neg_hamming_loss_weighted:
  - -0.030866749933932153
  - -0.028206510470661413
  - -0.02930939866280007
  - -0.029816446926161765
  - -0.02993013500228881
  train_neg_hamming_loss_weighted_oob:
  - -0.0719416110909586
  - -0.06851287077702173
  - -0.07015139157402932
  - -0.06908938905072304
  - -0.06788286293903259
  train_neg_label_ranking_loss:
  - -0.005574324324324325
  - -0.005688311688311688
  - -0.004960937500000001
  - -0.0057562370062370066
  - -0.005516795865633075
  train_neg_label_ranking_loss_oob:
  - -0.03972193347193348
  - -0.036259740259740256
  - -0.037994791666666666
  - -0.03868243243243244
  - -0.03825581395348838
  train_precision_macro:
  - 0.9702875952875955
  - 0.9728138528138528
  - 0.9715277777777777
  - 0.9709805959805959
  - 0.9710594315245479
  train_precision_macro_oob:
  - 0.9313063063063063
  - 0.9346320346320347
  - 0.9327256944444445
  - 0.9336451836451837
  - 0.9350559862187767
  train_precision_micro:
  - 0.9702875952875953
  - 0.9728138528138528
  - 0.9715277777777778
  - 0.9709805959805959
  - 0.9710594315245478
  train_precision_micro_oob:
  - 0.9313063063063063
  - 0.9346320346320346
  - 0.9327256944444444
  - 0.9336451836451837
  - 0.935055986218777
  train_precision_samples:
  - 0.9702875952875953
  - 0.9728138528138527
  - 0.9715277777777778
  - 0.970980595980596
  - 0.9710594315245478
  train_precision_samples_oob:
  - 0.9313063063063064
  - 0.9346320346320348
  - 0.9327256944444445
  - 0.9336451836451837
  - 0.935055986218777
  train_precision_weighted:
  - 0.9691332500660679
  - 0.9717934895293386
  - 0.9706906013372
  - 0.9701835530738383
  - 0.9700698649977113
  train_precision_weighted_oob:
  - 0.9280583889090415
  - 0.9314871292229782
  - 0.9298486084259707
  - 0.930910610949277
  - 0.9321171370609673
  train_recall_macro:
  - 0.9702875952875955
  - 0.9728138528138528
  - 0.9715277777777777
  - 0.9709805959805959
  - 0.9710594315245479
  train_recall_macro_oob:
  - 0.9313063063063063
  - 0.9346320346320347
  - 0.9327256944444445
  - 0.9336451836451837
  - 0.9350559862187767
  train_recall_micro:
  - 0.9702875952875953
  - 0.9728138528138528
  - 0.9715277777777778
  - 0.9709805959805959
  - 0.9710594315245478
  train_recall_micro_oob:
  - 0.9313063063063063
  - 0.9346320346320346
  - 0.9327256944444444
  - 0.9336451836451837
  - 0.935055986218777
  train_recall_samples:
  - 0.9702875952875953
  - 0.9728138528138527
  - 0.9715277777777778
  - 0.970980595980596
  - 0.9710594315245478
  train_recall_samples_oob:
  - 0.9313063063063064
  - 0.9346320346320348
  - 0.9327256944444445
  - 0.9336451836451837
  - 0.935055986218777
  train_recall_weighted:
  - 0.9691332500660679
  - 0.9717934895293386
  - 0.9706906013372
  - 0.9701835530738383
  - 0.9700698649977113
  train_recall_weighted_oob:
  - 0.9280583889090415
  - 0.9314871292229782
  - 0.9298486084259707
  - 0.930910610949277
  - 0.9321171370609673
  train_roc_auc_macro:
  - 0.9987833291780978
  - 0.9987527132692665
  - 0.9987019513657324
  - 0.998872744203804
  - 0.9987011509964825
  train_roc_auc_macro_oob:
  - 0.9764238065044495
  - 0.9773081594550801
  - 0.9765751337717856
  - 0.9767630928180959
  - 0.9764554022451343
  train_roc_auc_micro:
  - 0.9988602450293372
  - 0.9987736820927895
  - 0.9987308044918823
  - 0.9988666723628487
  - 0.9987517435930309
  train_roc_auc_micro_oob:
  - 0.9773143692987702
  - 0.9788302965288992
  - 0.9777079192368625
  - 0.9780326493239185
  - 0.9778280186372751
  train_roc_auc_samples:
  - 0.9944256756756756
  - 0.9943116883116883
  - 0.9950390625000001
  - 0.9942437629937629
  - 0.9944832041343669
  train_roc_auc_samples_oob:
  - 0.9602780665280667
  - 0.9637402597402598
  - 0.9620052083333335
  - 0.9613175675675675
  - 0.9617441860465116
  train_roc_auc_weighted:
  - 0.9987352286152013
  - 0.9986960828741527
  - 0.9986537732115495
  - 0.9988244259519257
  - 0.9986559910073679
  train_roc_auc_weighted_oob:
  - 0.9747731755097402
  - 0.9756724102889955
  - 0.9750113027298465
  - 0.975182447120326
  - 0.9747529663534384
start: 2023-12-22 13:50:59.010791
wrapper: null
