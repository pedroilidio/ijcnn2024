active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMAAmpmZmZnZP4CZmZmZmfm/AJqZmZmZ2T9AMzMzMzMLQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:25:39.356536
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__4
  params: {}
hash: 123eb5b57fbbd952ac384ce0da3f2c21f798ec0547c823938a097d230340a885
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/123eb5b_20231221T082523526574_embedding__4_VirusGO.yml
results:
  fit_time:
  - 8.236843824386597
  - 8.574151277542114
  - 8.752211809158325
  - 8.532982110977173
  - 8.891420125961304
  score_time:
  - 1.9264366626739502
  - 1.9870405197143555
  - 1.9566559791564941
  - 1.8400671482086182
  - 1.925140380859375
  test_average_precision_macro:
  - 0.954651681451217
  - 0.8862292904778011
  - 0.9141446653996862
  - 0.8967782249999742
  - 0.8813245515902893
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8876966951880991
  - 0.918673696360702
  - 0.895394381307108
  - 0.8439106108867378
  - 0.8547525367198933
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9696969696969696
  - 0.9455284552845529
  - 0.9302325581395349
  - 0.8699186991869918
  - 0.9429824561403507
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9411661080004733
  - 0.9190138697377814
  - 0.9168590462684891
  - 0.9067103028182197
  - 0.892729761672122
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8068181818181818
  - 0.7926829268292682
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7763157894736842
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8068181818181818
  - 0.7926829268292683
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7763157894736842
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8068181818181821
  - 0.7926829268292683
  - 0.8062015503875972
  - 0.8008130081300814
  - 0.7763157894736842
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7045454545454545
  - 0.6829268292682926
  - 0.6827906976744186
  - 0.692882030861125
  - 0.6413828689370484
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.698407707107552
  - 0.6812234548100626
  - 0.7020652270589985
  - 0.691415272395111
  - 0.6659359159359161
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6761904761904762
  - 0.6565656565656566
  - 0.6753246753246753
  - 0.6677966101694915
  - 0.6344086021505376
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6812770562770564
  - 0.6631823461091755
  - 0.6794019933554819
  - 0.672473867595819
  - 0.6422305764411029
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5611836337962015
  - 0.5376280415044036
  - 0.5373434283755675
  - 0.5492212855265849
  - 0.4934629640511993
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9696969696969696
  - 0.9455284552845529
  - 0.9302325581395349
  - 0.8699186991869918
  - 0.9429824561403507
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.978423875970901
  - 0.9653685124814216
  - 0.9474923175800373
  - 0.9045522829990097
  - 0.9628139962309034
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.25
  - -1.5853658536585367
  - -1.4186046511627908
  - -1.5853658536585367
  - -1.5789473684210527
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19318181818181815
  - -0.2073170731707317
  - -0.1937984496124031
  - -0.19918699186991873
  - -0.2236842105263158
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19318181818181818
  - -0.2073170731707317
  - -0.1937984496124031
  - -0.1991869918699187
  - -0.2236842105263158
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19318181818181815
  - -0.20731707317073167
  - -0.19379844961240308
  - -0.19918699186991867
  - -0.2236842105263158
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29545454545454547
  - -0.3170731707317073
  - -0.31720930232558137
  - -0.30711796913887507
  - -0.3586171310629515
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.01647727272727273
  - -0.04966124661246613
  - -0.05232558139534884
  - -0.07560975609756097
  - -0.03684210526315789
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8068181818181818
  - 0.7926829268292682
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7763157894736842
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8068181818181818
  - 0.7926829268292683
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7763157894736842
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8068181818181821
  - 0.7926829268292683
  - 0.8062015503875972
  - 0.8008130081300814
  - 0.7763157894736842
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7045454545454545
  - 0.6829268292682926
  - 0.6827906976744186
  - 0.692882030861125
  - 0.6413828689370484
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8068181818181818
  - 0.7926829268292682
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7763157894736842
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8068181818181818
  - 0.7926829268292683
  - 0.8062015503875969
  - 0.8008130081300813
  - 0.7763157894736842
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8068181818181821
  - 0.7926829268292683
  - 0.8062015503875972
  - 0.8008130081300814
  - 0.7763157894736842
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7045454545454545
  - 0.6829268292682926
  - 0.6827906976744186
  - 0.692882030861125
  - 0.6413828689370484
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9882080610021786
  - 0.9773118706942236
  - 0.9633360283360283
  - 0.9779901329901329
  - 0.9637005160487133
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.981404768480162
  - 0.9642031171442936
  - 0.9690384615384615
  - 0.9649849787630789
  - 0.9605627561759166
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9835227272727274
  - 0.9503387533875338
  - 0.9476744186046512
  - 0.924390243902439
  - 0.9631578947368421
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.982788671023965
  - 0.970724617350915
  - 0.9635916839916839
  - 0.9694334567803955
  - 0.9546758868000078
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9464935651607891
  - 0.968424705807172
  - 0.95908514605611
  - 0.9611873180154888
  - 0.9666799895814767
  train_average_precision_macro_oob:
  - 0.8730285901734313
  - 0.921924648978761
  - 0.8979809856859701
  - 0.8939655842615434
  - 0.9285072309330323
  train_average_precision_micro:
  - 0.9179035420784258
  - 0.9398608003508001
  - 0.9357077123089772
  - 0.9398926625727503
  - 0.9459784562385983
  train_average_precision_micro_oob:
  - 0.8291574812244031
  - 0.8750643386571128
  - 0.8556126636309281
  - 0.8630871561630702
  - 0.8966469471593869
  train_average_precision_samples:
  - 0.9481595092024541
  - 0.953714859437751
  - 0.960060975609756
  - 0.9568273092369478
  - 0.9598619329388559
  train_average_precision_samples_oob:
  - 0.9002044989775052
  - 0.9261044176706829
  - 0.913109756097561
  - 0.9086345381526103
  - 0.9411242603550296
  train_average_precision_weighted:
  - 0.9461644809837966
  - 0.9632054489747491
  - 0.9589631157655565
  - 0.9627005443003588
  - 0.9633611390239836
  train_average_precision_weighted_oob:
  - 0.8747878896915467
  - 0.9119837177892077
  - 0.8941618962240991
  - 0.9020343224713372
  - 0.9173037565505202
  train_f1_macro:
  - 0.7975460122699386
  - 0.7981927710843374
  - 0.7947154471544714
  - 0.8022088353413656
  - 0.8057199211045365
  train_f1_macro_oob:
  - 0.7944785276073619
  - 0.7981927710843374
  - 0.7947154471544714
  - 0.7971887550200804
  - 0.8027613412228796
  train_f1_micro:
  - 0.7975460122699386
  - 0.7981927710843374
  - 0.7947154471544715
  - 0.8022088353413654
  - 0.8057199211045365
  train_f1_micro_oob:
  - 0.7944785276073619
  - 0.7981927710843374
  - 0.7947154471544715
  - 0.7971887550200804
  - 0.8027613412228797
  train_f1_samples:
  - 0.7975460122699385
  - 0.7981927710843372
  - 0.7947154471544714
  - 0.8022088353413652
  - 0.8057199211045364
  train_f1_samples_oob:
  - 0.7944785276073618
  - 0.7981927710843372
  - 0.7947154471544714
  - 0.79718875502008
  - 0.8027613412228797
  train_f1_weighted:
  - 0.6822024845099656
  - 0.6819217167176167
  - 0.6818401352330354
  - 0.6917027716778443
  - 0.69916688745621
  train_f1_weighted_oob:
  - 0.6760675151848121
  - 0.6819217167176167
  - 0.6818401352330354
  - 0.6815538014125468
  - 0.6932497276928964
  train_jaccard_macro:
  - 0.6885974811975881
  - 0.6899038730062433
  - 0.6845815546880051
  - 0.693512190008363
  - 0.6974844252988269
  train_jaccard_macro_oob:
  - 0.685475473919289
  - 0.6899038730062433
  - 0.6845815546880051
  - 0.6883934727712367
  - 0.6943846454015414
  train_jaccard_micro:
  - 0.6632653061224489
  - 0.6641604010025063
  - 0.6593591905564924
  - 0.6697401508801342
  - 0.6746490503715937
  train_jaccard_micro_oob:
  - 0.6590330788804071
  - 0.6641604010025063
  - 0.6593591905564924
  - 0.662771285475793
  - 0.6705107084019769
  train_jaccard_samples:
  - 0.6688577271399359
  - 0.6696787148594379
  - 0.6655052264808363
  - 0.6768502581755594
  - 0.6810369118061426
  train_jaccard_samples_oob:
  - 0.6649138182880515
  - 0.6696787148594379
  - 0.6655052264808363
  - 0.6686746987951808
  - 0.6759650605804453
  train_jaccard_weighted:
  - 0.5366170817552814
  - 0.5365957337601076
  - 0.5364938128069449
  - 0.5461742789790917
  - 0.5551163132034131
  train_jaccard_weighted_oob:
  - 0.530373067198683
  - 0.5365957337601076
  - 0.5364938128069449
  - 0.535826931415246
  - 0.5489167534088424
  train_label_ranking_average_precision_score:
  - 0.9481595092024541
  - 0.953714859437751
  - 0.9600609756097562
  - 0.9568273092369477
  - 0.959861932938856
  train_label_ranking_average_precision_score_oob:
  - 0.9002044989775054
  - 0.9261044176706826
  - 0.913109756097561
  - 0.9086345381526105
  - 0.9411242603550296
  train_matthews_corrcoef_macro:
  - 0.02731791823540765
  - 0.0
  - 0.0
  - 0.05299383011590269
  - 0.03201838760119144
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.015194743527951726
  - 0.015865610686761195
  train_matthews_corrcoef_micro:
  - 0.10906133266393724
  - 0.0
  - 0.0
  - 0.1538673955044191
  - 0.1265658537061567
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.06265807299497743
  - 0.06318915116285483
  train_matthews_corrcoef_samples:
  - 0.011640285865650475
  - 0.0
  - 0.0
  - 0.03171633171124911
  - 0.023668639053254437
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0038099730845402163
  - 0.005917159763313609
  train_matthews_corrcoef_weighted:
  - 0.0546358364708153
  - 0.0
  - 0.0
  - 0.10778389659967351
  - 0.06403677520238288
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.031437400402658744
  - 0.03173122137352239
  train_ndgc:
  - 0.9637909392777713
  - 0.966515702921357
  - 0.9717839725416683
  - 0.9696389512449147
  - 0.9714852841014451
  train_ndgc_oob:
  - 0.9289488477842954
  - 0.9469944784981942
  - 0.9387375740868797
  - 0.9355035582041027
  - 0.958739502329413
  train_neg_coverage_error:
  - -1.4355828220858895
  - -1.355421686746988
  - -1.3658536585365855
  - -1.3614457831325302
  - -1.349112426035503
  train_neg_coverage_error_oob:
  - -1.6134969325153374
  - -1.4457831325301205
  - -1.5365853658536586
  - -1.5602409638554218
  - -1.4319526627218935
  train_neg_hamming_loss_macro:
  - -0.20245398773006137
  - -0.2018072289156627
  - -0.20528455284552846
  - -0.19779116465863456
  - -0.1942800788954635
  train_neg_hamming_loss_macro_oob:
  - -0.20552147239263807
  - -0.2018072289156627
  - -0.20528455284552846
  - -0.20281124497991967
  - -0.19723865877712032
  train_neg_hamming_loss_micro:
  - -0.20245398773006135
  - -0.20180722891566266
  - -0.20528455284552846
  - -0.19779116465863453
  - -0.1942800788954635
  train_neg_hamming_loss_micro_oob:
  - -0.20552147239263804
  - -0.20180722891566266
  - -0.20528455284552846
  - -0.20281124497991967
  - -0.19723865877712032
  train_neg_hamming_loss_samples:
  - -0.20245398773006135
  - -0.20180722891566266
  - -0.2052845528455285
  - -0.1977911646586345
  - -0.19428007889546348
  train_neg_hamming_loss_samples_oob:
  - -0.20552147239263804
  - -0.20180722891566266
  - -0.2052845528455285
  - -0.2028112449799197
  - -0.1972386587771203
  train_neg_hamming_loss_weighted:
  - -0.3177975154900345
  - -0.3180782832823833
  - -0.3181598647669645
  - -0.3082972283221556
  - -0.3008331125437899
  train_neg_hamming_loss_weighted_oob:
  - -0.3239324848151879
  - -0.3180782832823833
  - -0.3181598647669645
  - -0.3184461985874532
  - -0.30675027230710356
  train_neg_label_ranking_loss:
  - -0.034815950920245406
  - -0.027259036144578315
  - -0.02347560975609756
  - -0.024313922356091033
  - -0.02825443786982249
  train_neg_label_ranking_loss_oob:
  - -0.06808111792774368
  - -0.04307228915662651
  - -0.05303184281842819
  - -0.058634538152610445
  - -0.041633793556870476
  train_precision_macro:
  - 0.7975460122699386
  - 0.7981927710843374
  - 0.7947154471544714
  - 0.8022088353413656
  - 0.8057199211045365
  train_precision_macro_oob:
  - 0.7944785276073619
  - 0.7981927710843374
  - 0.7947154471544714
  - 0.7971887550200804
  - 0.8027613412228796
  train_precision_micro:
  - 0.7975460122699386
  - 0.7981927710843374
  - 0.7947154471544715
  - 0.8022088353413654
  - 0.8057199211045365
  train_precision_micro_oob:
  - 0.7944785276073619
  - 0.7981927710843374
  - 0.7947154471544715
  - 0.7971887550200804
  - 0.8027613412228797
  train_precision_samples:
  - 0.7975460122699385
  - 0.7981927710843372
  - 0.7947154471544714
  - 0.8022088353413652
  - 0.8057199211045364
  train_precision_samples_oob:
  - 0.7944785276073618
  - 0.7981927710843372
  - 0.7947154471544714
  - 0.79718875502008
  - 0.8027613412228797
  train_precision_weighted:
  - 0.6822024845099656
  - 0.6819217167176167
  - 0.6818401352330354
  - 0.6917027716778443
  - 0.69916688745621
  train_precision_weighted_oob:
  - 0.6760675151848121
  - 0.6819217167176167
  - 0.6818401352330354
  - 0.6815538014125468
  - 0.6932497276928964
  train_recall_macro:
  - 0.7975460122699386
  - 0.7981927710843374
  - 0.7947154471544714
  - 0.8022088353413656
  - 0.8057199211045365
  train_recall_macro_oob:
  - 0.7944785276073619
  - 0.7981927710843374
  - 0.7947154471544714
  - 0.7971887550200804
  - 0.8027613412228796
  train_recall_micro:
  - 0.7975460122699386
  - 0.7981927710843374
  - 0.7947154471544715
  - 0.8022088353413654
  - 0.8057199211045365
  train_recall_micro_oob:
  - 0.7944785276073619
  - 0.7981927710843374
  - 0.7947154471544715
  - 0.7971887550200804
  - 0.8027613412228797
  train_recall_samples:
  - 0.7975460122699385
  - 0.7981927710843372
  - 0.7947154471544714
  - 0.8022088353413652
  - 0.8057199211045364
  train_recall_samples_oob:
  - 0.7944785276073618
  - 0.7981927710843372
  - 0.7947154471544714
  - 0.79718875502008
  - 0.8027613412228797
  train_recall_weighted:
  - 0.6822024845099656
  - 0.6819217167176167
  - 0.6818401352330354
  - 0.6917027716778443
  - 0.69916688745621
  train_recall_weighted_oob:
  - 0.6760675151848121
  - 0.6819217167176167
  - 0.6818401352330354
  - 0.6815538014125468
  - 0.6932497276928964
  train_roc_auc_macro:
  - 0.9789159590834825
  - 0.985609922398635
  - 0.9879442902261811
  - 0.9859319906186562
  - 0.9850062205168043
  train_roc_auc_macro_oob:
  - 0.9584421559859665
  - 0.9741067055526011
  - 0.9735139676374968
  - 0.9584756796403613
  - 0.9745506658931787
  train_roc_auc_micro:
  - 0.9750827586648483
  - 0.9830282549516568
  - 0.9818661213947482
  - 0.9810875952764025
  - 0.9819506404019265
  train_roc_auc_micro_oob:
  - 0.9505048758780101
  - 0.9670828248693639
  - 0.9628649565723836
  - 0.9533665881885215
  - 0.9702594040865782
  train_roc_auc_samples:
  - 0.9651840490797545
  - 0.9727409638554219
  - 0.9765243902439025
  - 0.975686077643909
  - 0.9717455621301775
  train_roc_auc_samples_oob:
  - 0.9319188820722563
  - 0.9569277108433736
  - 0.9469681571815718
  - 0.9413654618473895
  - 0.9583662064431296
  train_roc_auc_weighted:
  - 0.9735325508967292
  - 0.9811448933184007
  - 0.9836716990043398
  - 0.9815520467410127
  - 0.9822206225147402
  train_roc_auc_weighted_oob:
  - 0.9484938313969078
  - 0.9671857882305644
  - 0.9656031982634105
  - 0.9534776811103644
  - 0.9678770187637614
start: 2023-12-21 08:25:23.526574
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
