active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T+AmZmZmZkBwADNzMzMzPw/ADMzMzMz878AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:12:41.757811
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba__8
  params: {}
hash: 99859a26ef2ddc9bea1ef1a0474179dc8d151df7356ed3d8b5f5d3ae89093162
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/99859a2_20231221T201211106200_proba__8_GrampositivePseAAC.yml
results:
  fit_time:
  - 18.515021085739136
  - 18.853387355804443
  - 18.5750732421875
  - 18.258610010147095
  - 19.069528579711914
  score_time:
  - 3.0448436737060547
  - 3.173863172531128
  - 3.0388808250427246
  - 3.149690628051758
  - 3.104896068572998
  test_average_precision_macro:
  - 0.420705190670684
  - 0.40858820512653116
  - 0.3594196642161744
  - 0.385268000183753
  - 0.3023707900563189
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5687216596345962
  - 0.5505804344007743
  - 0.4772749014185643
  - 0.48757689500910606
  - 0.3696221334268744
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7160194174757282
  - 0.7209119496855345
  - 0.6985294117647057
  - 0.7126984126984126
  - 0.6472491909385112
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.560788543913286
  - 0.5338142962862635
  - 0.4559442402959848
  - 0.4757933772984141
  - 0.3837419831856492
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339807
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339806
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339806
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6775379394853427
  - 0.676931292274831
  - 0.672134238310709
  - 0.6738544474393531
  - 0.6663554891710232
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6276762271045198
  - 0.6203929674207407
  - 0.614350235264661
  - 0.6176403871358
  - 0.6197216872176006
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6062378167641326
  - 0.6
  - 0.59375
  - 0.596958174904943
  - 0.5968992248062015
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6077669902912621
  - 0.5999999999999999
  - 0.5947712418300652
  - 0.5974603174603172
  - 0.5974110032362459
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.518706856287803
  - 0.5184281303170373
  - 0.5129336924232528
  - 0.5150097868204152
  - 0.5064871621764286
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7160194174757278
  - 0.7209119496855345
  - 0.6985294117647061
  - 0.7126984126984128
  - 0.6472491909385117
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.049035968093863555
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12097167578182677
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.019417475728155338
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06665083041884366
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7880823713863323
  - 0.7918334316975015
  - 0.7763743142442587
  - 0.786413510308725
  - 0.7370890822996307
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.766990291262136
  - -1.7452830188679245
  - -1.7843137254901962
  - -1.7809523809523808
  - -1.9320388349514563
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.24514563106796117
  - -0.25
  - -0.2549019607843137
  - -0.2523809523809524
  - -0.2524271844660194
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24514563106796117
  - -0.25
  - -0.2549019607843137
  - -0.2523809523809524
  - -0.2524271844660194
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24514563106796117
  - -0.25
  - -0.2549019607843137
  - -0.2523809523809524
  - -0.2524271844660194
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32246206051465737
  - -0.3230687077251691
  - -0.32786576168929105
  - -0.32614555256064687
  - -0.33364451082897684
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.255663430420712
  - -0.24842767295597487
  - -0.25326797385620914
  - -0.25555555555555554
  - -0.30744336569579284
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339807
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339806
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339806
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6775379394853427
  - 0.676931292274831
  - 0.672134238310709
  - 0.6738544474393531
  - 0.6663554891710232
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339807
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339806
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7548543689320388
  - 0.75
  - 0.7450980392156863
  - 0.7476190476190476
  - 0.7475728155339806
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6775379394853427
  - 0.676931292274831
  - 0.672134238310709
  - 0.6738544474393531
  - 0.6663554891710232
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6261785925118089
  - 0.6216277667822476
  - 0.6534006782435738
  - 0.661710503618389
  - 0.5628935519009429
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7766990291262136
  - 0.7695502551323128
  - 0.7577808704453441
  - 0.7440211513039299
  - 0.6970217282717284
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7443365695792881
  - 0.7515723270440251
  - 0.7467320261437909
  - 0.7444444444444445
  - 0.6925566343042072
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6883639984991369
  - 0.6833349665000594
  - 0.6464071470615071
  - 0.6397379343729521
  - 0.5633264702595964
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7883716564838785
  - 0.7781718912918463
  - 0.7736034004530168
  - 0.7852033263987638
  - 0.7825712709777144
  train_average_precision_macro_oob:
  - 0.7561386193582493
  - 0.6746352538045627
  - 0.7266580052309748
  - 0.6810828373046675
  - 0.7314983272060263
  train_average_precision_micro:
  - 0.8365702893607648
  - 0.8359259816315028
  - 0.8413680325872143
  - 0.854628120747485
  - 0.8383534011942415
  train_average_precision_micro_oob:
  - 0.8176457822764774
  - 0.8128421173050822
  - 0.8188865327364563
  - 0.8305890153080141
  - 0.816323286346916
  train_average_precision_samples:
  - 0.8389423076923077
  - 0.8496771589991928
  - 0.8479216626698642
  - 0.8679549114331724
  - 0.8491586538461539
  train_average_precision_samples_oob:
  - 0.8319310897435899
  - 0.8353510895883777
  - 0.8369304556354916
  - 0.84561191626409
  - 0.8307291666666666
  train_average_precision_weighted:
  - 0.8308803946675839
  - 0.8306092693008282
  - 0.8349808976585031
  - 0.8497220195431909
  - 0.8327125239987088
  train_average_precision_weighted_oob:
  - 0.8201133143652404
  - 0.8060114778708621
  - 0.8193289856571132
  - 0.8219281042397477
  - 0.8184592101962451
  train_f1_macro:
  - 0.8611778846153846
  - 0.8638014527845037
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_f1_macro_oob:
  - 0.8040865384615385
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692306
  train_f1_micro:
  - 0.8611778846153846
  - 0.8638014527845036
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_f1_micro_oob:
  - 0.8040865384615384
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692307
  train_f1_samples:
  - 0.8611778846153846
  - 0.8638014527845036
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_f1_samples_oob:
  - 0.8040865384615384
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692307
  train_f1_weighted:
  - 0.8265968406593407
  - 0.8281742644625221
  - 0.8229426005734792
  - 0.8324528782770885
  - 0.8300842206719294
  train_f1_weighted_oob:
  - 0.757154304029304
  - 0.7572189221988027
  - 0.7604436737006576
  - 0.7594330332835181
  - 0.7534021020745363
  train_jaccard_macro:
  - 0.7619406970054158
  - 0.7662097608110446
  - 0.7602209407672061
  - 0.7711337569740744
  - 0.7675427618690674
  train_jaccard_macro_oob:
  - 0.6835404930410426
  - 0.6850554835975396
  - 0.688277685231459
  - 0.6880124853283753
  - 0.6797897137424443
  train_jaccard_micro:
  - 0.7562005277044855
  - 0.7602557272242941
  - 0.7539432176656151
  - 0.7654584221748401
  - 0.7617787188988883
  train_jaccard_micro_oob:
  - 0.6723618090452261
  - 0.6737588652482269
  - 0.6772247360482655
  - 0.6769620253164557
  - 0.6681704260651629
  train_jaccard_samples:
  - 0.7782051282051282
  - 0.7820823244552056
  - 0.77585931254996
  - 0.7874396135265699
  - 0.783974358974359
  train_jaccard_samples_oob:
  - 0.6868589743589744
  - 0.6884584342211459
  - 0.6927258193445243
  - 0.6921095008051528
  - 0.6826923076923076
  train_jaccard_weighted:
  - 0.7062222253083462
  - 0.708727787128814
  - 0.7010889804152448
  - 0.7149297723889942
  - 0.711633369445306
  train_jaccard_weighted_oob:
  - 0.611379245819174
  - 0.6112819636825854
  - 0.6154189544000483
  - 0.6141299163279431
  - 0.6067157159493345
  train_label_ranking_average_precision_score:
  - 0.8389423076923072
  - 0.8496771589991927
  - 0.8479216626698637
  - 0.8679549114331717
  - 0.8491586538461533
  train_label_ranking_average_precision_score_oob:
  - 0.8319310897435893
  - 0.8353510895883776
  - 0.8369304556354911
  - 0.8456119162640896
  - 0.8307291666666663
  train_matthews_corrcoef_macro:
  - 0.4520228097548581
  - 0.45946864999493386
  - 0.4472869148438764
  - 0.46725637509792184
  - 0.46344359104354715
  train_matthews_corrcoef_macro_oob:
  - 0.25543765095948395
  - 0.25145292650630185
  - 0.25493923945980385
  - 0.2705622674469045
  - 0.2381567765652572
  train_matthews_corrcoef_micro:
  - 0.6160563478520561
  - 0.6240790988268946
  - 0.6098029154607078
  - 0.6333927570493061
  - 0.6262098027514451
  train_matthews_corrcoef_micro_oob:
  - 0.42111396676643587
  - 0.4250920154779279
  - 0.43135756539553544
  - 0.4323116477643787
  - 0.40732483825601773
  train_matthews_corrcoef_samples:
  - 0.45127896828742514
  - 0.46079758129965737
  - 0.44263153541772093
  - 0.4727827314192485
  - 0.46431418398648855
  train_matthews_corrcoef_samples_oob:
  - 0.2229135836720406
  - 0.22695411817813285
  - 0.23501199040767387
  - 0.23467318970623005
  - 0.21153846153846154
  train_matthews_corrcoef_weighted:
  - 0.582835536509143
  - 0.5912438803142709
  - 0.5770143698839617
  - 0.6006842807822265
  - 0.5933290534885743
  train_matthews_corrcoef_weighted_oob:
  - 0.3613367886094003
  - 0.3600948992833061
  - 0.36574363643664926
  - 0.378564211652023
  - 0.34136080785933487
  train_ndgc:
  - 0.8800611129207088
  - 0.8881194694038257
  - 0.8867225668621477
  - 0.9016550623064506
  - 0.8876137223497873
  train_ndgc_oob:
  - 0.8748752480575834
  - 0.8774842119653594
  - 0.8785722724015597
  - 0.8848956572621145
  - 0.8738862191262711
  train_neg_coverage_error:
  - -1.4326923076923077
  - -1.4067796610169492
  - -1.3980815347721822
  - -1.3478260869565217
  - -1.3990384615384615
  train_neg_coverage_error_oob:
  - -1.4591346153846154
  - -1.4576271186440677
  - -1.4244604316546763
  - -1.4154589371980677
  - -1.4591346153846154
  train_neg_hamming_loss_macro:
  - -0.13882211538461536
  - -0.13619854721549635
  - -0.14028776978417268
  - -0.13285024154589373
  - -0.13521634615384615
  train_neg_hamming_loss_macro_oob:
  - -0.1959134615384615
  - -0.19491525423728814
  - -0.19244604316546762
  - -0.1926328502415459
  - -0.19891826923076922
  train_neg_hamming_loss_micro:
  - -0.1388221153846154
  - -0.13619854721549637
  - -0.14028776978417265
  - -0.13285024154589373
  - -0.13521634615384615
  train_neg_hamming_loss_micro_oob:
  - -0.19591346153846154
  - -0.19491525423728814
  - -0.19244604316546762
  - -0.1926328502415459
  - -0.19891826923076922
  train_neg_hamming_loss_samples:
  - -0.1388221153846154
  - -0.13619854721549637
  - -0.14028776978417265
  - -0.13285024154589373
  - -0.13521634615384615
  train_neg_hamming_loss_samples_oob:
  - -0.19591346153846154
  - -0.19491525423728814
  - -0.19244604316546762
  - -0.1926328502415459
  - -0.19891826923076922
  train_neg_hamming_loss_weighted:
  - -0.17340315934065934
  - -0.17182573553747799
  - -0.17705739942652085
  - -0.16754712172291156
  - -0.16991577932807053
  train_neg_hamming_loss_weighted_oob:
  - -0.24284569597069594
  - -0.24278107780119726
  - -0.2395563262993424
  - -0.24056696671648187
  - -0.24659789792546355
  train_neg_label_ranking_loss:
  - -0.1408253205128205
  - -0.13196125907990314
  - -0.13109512390087927
  - -0.11352657004830918
  - -0.13060897435897434
  train_neg_label_ranking_loss_oob:
  - -0.14943910256410253
  - -0.14850686037126715
  - -0.13988808952837728
  - -0.1360708534621578
  - -0.15044070512820512
  train_precision_macro:
  - 0.8611778846153846
  - 0.8638014527845037
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_precision_macro_oob:
  - 0.8040865384615385
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692306
  train_precision_micro:
  - 0.8611778846153846
  - 0.8638014527845036
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_precision_micro_oob:
  - 0.8040865384615384
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692307
  train_precision_samples:
  - 0.8611778846153846
  - 0.8638014527845036
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_precision_samples_oob:
  - 0.8040865384615384
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692307
  train_precision_weighted:
  - 0.8265968406593407
  - 0.8281742644625221
  - 0.8229426005734792
  - 0.8324528782770885
  - 0.8300842206719294
  train_precision_weighted_oob:
  - 0.757154304029304
  - 0.7572189221988027
  - 0.7604436737006576
  - 0.7594330332835181
  - 0.7534021020745363
  train_recall_macro:
  - 0.8611778846153846
  - 0.8638014527845037
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_recall_macro_oob:
  - 0.8040865384615385
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692306
  train_recall_micro:
  - 0.8611778846153846
  - 0.8638014527845036
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_recall_micro_oob:
  - 0.8040865384615384
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692307
  train_recall_samples:
  - 0.8611778846153846
  - 0.8638014527845036
  - 0.8597122302158273
  - 0.8671497584541062
  - 0.8647836538461539
  train_recall_samples_oob:
  - 0.8040865384615384
  - 0.8050847457627118
  - 0.8075539568345323
  - 0.8073671497584541
  - 0.8010817307692307
  train_recall_weighted:
  - 0.8265968406593407
  - 0.8281742644625221
  - 0.8229426005734792
  - 0.8324528782770885
  - 0.8300842206719294
  train_recall_weighted_oob:
  - 0.757154304029304
  - 0.7572189221988027
  - 0.7604436737006576
  - 0.7594330332835181
  - 0.7534021020745363
  train_roc_auc_macro:
  - 0.8781646577137597
  - 0.8866318373049373
  - 0.8862941894660883
  - 0.8813120357570555
  - 0.8871154125436466
  train_roc_auc_macro_oob:
  - 0.8634833638447388
  - 0.8716301715596237
  - 0.8603656967740239
  - 0.8608678132447416
  - 0.8702423539623039
  train_roc_auc_micro:
  - 0.9132196447710919
  - 0.9119389508636006
  - 0.9169474004024223
  - 0.9224175139307441
  - 0.9123807880687428
  train_roc_auc_micro_oob:
  - 0.8981358138110549
  - 0.893082457111234
  - 0.899104008743988
  - 0.9010070394047958
  - 0.8929023971782115
  train_roc_auc_samples:
  - 0.8591746794871794
  - 0.8680387409200968
  - 0.8689048760991208
  - 0.8864734299516909
  - 0.8693910256410255
  train_roc_auc_samples_oob:
  - 0.8505608974358976
  - 0.8514931396287329
  - 0.8601119104716227
  - 0.8639291465378423
  - 0.8495592948717949
  train_roc_auc_weighted:
  - 0.8788665385833212
  - 0.8766013792532723
  - 0.8823168230209116
  - 0.8959816150939821
  - 0.8804502997822182
  train_roc_auc_weighted_oob:
  - 0.8680279861253196
  - 0.8610554837550806
  - 0.8641271325641539
  - 0.8751732335502102
  - 0.8661399427809441
start: 2023-12-21 20:12:11.106200
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
