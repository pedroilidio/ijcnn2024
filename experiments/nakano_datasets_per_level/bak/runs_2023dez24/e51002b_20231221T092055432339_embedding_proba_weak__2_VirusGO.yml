active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0DAzMzMzMwEwEAzMzMzMwNAADMzMzMz47+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:21:09.268510
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__2
  params: {}
hash: e51002b9da6702fa960e22f9c1a9195e481c9a56ab704375995023ec56a6b7ac
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e51002b_20231221T092055432339_embedding_proba_weak__2_VirusGO.yml
results:
  fit_time:
  - 7.782661199569702
  - 8.000133752822876
  - 7.5654075145721436
  - 7.660006999969482
  - 7.907784461975098
  score_time:
  - 1.682166337966919
  - 1.7399239540100098
  - 1.7871124744415283
  - 1.9144110679626465
  - 1.7661364078521729
  test_average_precision_macro:
  - 0.918575300557023
  - 0.9346424466536924
  - 0.9250547036825151
  - 0.9408047429498115
  - 0.9585449041787949
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.907302443554418
  - 0.891808786269173
  - 0.8934797675369851
  - 0.946498069930318
  - 0.905414718323532
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9572649572649572
  - 0.9204545454545454
  - 0.967948717948718
  - 0.9551587301587302
  - 0.9147286821705425
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9246595310296472
  - 0.9355594031113061
  - 0.9278457408604467
  - 0.9610376100507678
  - 0.9325306588836
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.841880341880342
  - 0.8522727272727272
  - 0.8333333333333334
  - 0.8333333333333334
  - 0.8682170542635658
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8418803418803419
  - 0.8522727272727273
  - 0.8333333333333334
  - 0.8333333333333334
  - 0.8682170542635659
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8418803418803418
  - 0.8522727272727274
  - 0.8333333333333334
  - 0.8333333333333335
  - 0.868217054263566
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7681841967556253
  - 0.7954545454545455
  - 0.7697435897435898
  - 0.7600732600732601
  - 0.8130232558139534
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7393733850129198
  - 0.752458235437334
  - 0.7245411124078722
  - 0.7267426994662434
  - 0.7742849377878339
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7269372693726938
  - 0.7425742574257426
  - 0.7142857142857143
  - 0.7142857142857143
  - 0.7671232876712328
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.747863247863248
  - 0.7564935064935067
  - 0.7301587301587303
  - 0.7261904761904763
  - 0.7823920265780732
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6323801613668723
  - 0.6692846904557658
  - 0.6331091785650115
  - 0.6225052633994389
  - 0.6889277471395956
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9572649572649572
  - 0.9204545454545454
  - 0.967948717948718
  - 0.9551587301587302
  - 0.9147286821705427
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1604123963585816
  - 0.15720589983863212
  - 0.15791405466245031
  - 0.14495134935350248
  - 0.19244815577675958
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.45175395145262565
  - 0.4407989389511092
  - 0.4260571131633998
  - 0.39866273604864966
  - 0.5244438218856712
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.29826809056496606
  - 0.27420252418334895
  - 0.25377863066925715
  - 0.21184206181192924
  - 0.35499793172249655
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3339196822158229
  - 0.31441179967726424
  - 0.3119199243484877
  - 0.2915321530517294
  - 0.4038629611809698
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9700641340025188
  - 0.9423304691197439
  - 0.9785589162944899
  - 0.971385760472098
  - 0.9368739191029941
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3846153846153846
  - -1.3863636363636365
  - -1.3846153846153846
  - -1.4761904761904763
  - -1.3488372093023255
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.15811965811965809
  - -0.14772727272727273
  - -0.16666666666666666
  - -0.16666666666666666
  - -0.13178294573643412
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1581196581196581
  - -0.14772727272727273
  - -0.16666666666666666
  - -0.16666666666666666
  - -0.13178294573643412
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.15811965811965814
  - -0.14772727272727273
  - -0.16666666666666666
  - -0.16666666666666666
  - -0.1317829457364341
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23181580324437467
  - -0.2045454545454545
  - -0.23025641025641025
  - -0.23992673992673993
  - -0.18697674418604657
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.023076923076923078
  - -0.042045454545454546
  - -0.017948717948717947
  - -0.036309523809523805
  - -0.037209302325581395
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.841880341880342
  - 0.8522727272727272
  - 0.8333333333333334
  - 0.8333333333333334
  - 0.8682170542635658
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8418803418803419
  - 0.8522727272727273
  - 0.8333333333333334
  - 0.8333333333333334
  - 0.8682170542635659
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8418803418803418
  - 0.8522727272727274
  - 0.8333333333333334
  - 0.8333333333333335
  - 0.868217054263566
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7681841967556253
  - 0.7954545454545455
  - 0.7697435897435898
  - 0.7600732600732601
  - 0.8130232558139534
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.841880341880342
  - 0.8522727272727272
  - 0.8333333333333334
  - 0.8333333333333334
  - 0.8682170542635658
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8418803418803419
  - 0.8522727272727273
  - 0.8333333333333334
  - 0.8333333333333334
  - 0.8682170542635659
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8418803418803418
  - 0.8522727272727274
  - 0.8333333333333334
  - 0.8333333333333335
  - 0.868217054263566
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7681841967556253
  - 0.7954545454545455
  - 0.7697435897435898
  - 0.7600732600732601
  - 0.8130232558139534
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.958817163228928
  - 0.9651007625272331
  - 0.968036503138805
  - 0.989657951874707
  - 0.9767757350110292
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9680088251516824
  - 0.9652029826014913
  - 0.9679347826086957
  - 0.9793269230769232
  - 0.9778846153846155
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.976923076923077
  - 0.9579545454545454
  - 0.982051282051282
  - 0.9636904761904762
  - 0.9627906976744186
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9464882056718791
  - 0.9652505446623094
  - 0.9618814229249013
  - 0.9926024195103142
  - 0.9546399168399168
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9622277195497788
  - 0.9651660962734057
  - 0.9550108502371653
  - 0.9589853429720853
  - 0.9469488198134975
  train_average_precision_macro_oob:
  - 0.9234490792651461
  - 0.9314474909634555
  - 0.9138701025928211
  - 0.9339457491696579
  - 0.9266809909474407
  train_average_precision_micro:
  - 0.9474968180987565
  - 0.9684641995437727
  - 0.9279115523855843
  - 0.9268257816666096
  - 0.9446017652664428
  train_average_precision_micro_oob:
  - 0.9061024102213112
  - 0.9366501250878111
  - 0.8841251389826353
  - 0.8891154264244931
  - 0.9185918938118521
  train_average_precision_samples:
  - 0.9732142857142857
  - 0.9782208588957054
  - 0.9672619047619048
  - 0.9625252525252525
  - 0.9659552845528455
  train_average_precision_samples_oob:
  - 0.9409722222222221
  - 0.9436946148602589
  - 0.9498015873015873
  - 0.9346464646464645
  - 0.9524390243902439
  train_average_precision_weighted:
  - 0.9618124800428793
  - 0.977964514272431
  - 0.9474710223622825
  - 0.9521357568187844
  - 0.9555248717525451
  train_average_precision_weighted_oob:
  - 0.9288690673923152
  - 0.9537118268776033
  - 0.9114926419725645
  - 0.9291810861078617
  - 0.9388614435063408
  train_f1_macro:
  - 0.8432539682539684
  - 0.8640081799591002
  - 0.8482142857142859
  - 0.8454545454545456
  - 0.8526422764227641
  train_f1_macro_oob:
  - 0.8373015873015874
  - 0.8548057259713701
  - 0.8422619047619048
  - 0.8383838383838383
  - 0.8495934959349593
  train_f1_micro:
  - 0.8432539682539683
  - 0.8640081799591002
  - 0.8482142857142857
  - 0.8454545454545455
  - 0.8526422764227642
  train_f1_micro_oob:
  - 0.8373015873015873
  - 0.8548057259713702
  - 0.8422619047619048
  - 0.8383838383838383
  - 0.8495934959349594
  train_f1_samples:
  - 0.8432539682539684
  - 0.8640081799591001
  - 0.8482142857142857
  - 0.8454545454545455
  - 0.8526422764227641
  train_f1_samples_oob:
  - 0.8373015873015872
  - 0.8548057259713701
  - 0.8422619047619048
  - 0.8383838383838382
  - 0.8495934959349593
  train_f1_weighted:
  - 0.7775627492376261
  - 0.8185147880230748
  - 0.7827086280056578
  - 0.7793636363636364
  - 0.7986295580777589
  train_f1_weighted_oob:
  - 0.7655113769645789
  - 0.7995604798095413
  - 0.7703323903818954
  - 0.7649090909090909
  - 0.7924414392658777
  train_jaccard_macro:
  - 0.739285342008886
  - 0.7662960281938233
  - 0.7464898118079176
  - 0.7424647940696035
  - 0.7508358115465711
  train_jaccard_macro_oob:
  - 0.7320480181895476
  - 0.7540071134239748
  - 0.7395463719120693
  - 0.7338647402480566
  - 0.7469592247051602
  train_jaccard_micro:
  - 0.7289879931389366
  - 0.7605760576057605
  - 0.7364341085271318
  - 0.7322834645669292
  - 0.7431355181576617
  train_jaccard_micro_oob:
  - 0.7201365187713311
  - 0.7464285714285714
  - 0.7275064267352185
  - 0.7217391304347827
  - 0.7385159010600707
  train_jaccard_samples:
  - 0.7430555555555556
  - 0.7808939526730938
  - 0.7490079365079365
  - 0.748917748917749
  - 0.7635017421602788
  train_jaccard_samples_oob:
  - 0.7337018140589568
  - 0.7673093777388255
  - 0.7400793650793651
  - 0.7367965367965369
  - 0.7587108013937284
  train_jaccard_weighted:
  - 0.643169842268029
  - 0.6959563201540372
  - 0.6499265740626055
  - 0.6453010467686429
  - 0.6700215690802758
  train_jaccard_weighted_oob:
  - 0.6285109798863403
  - 0.6706411186742831
  - 0.6354897188336137
  - 0.6277266786292625
  - 0.6621580812570885
  train_label_ranking_average_precision_score:
  - 0.9732142857142857
  - 0.9782208588957054
  - 0.9672619047619048
  - 0.9625252525252525
  - 0.9659552845528456
  train_label_ranking_average_precision_score_oob:
  - 0.9409722222222221
  - 0.9436946148602589
  - 0.9498015873015873
  - 0.9346464646464645
  - 0.9524390243902439
  train_matthews_corrcoef_macro:
  - 0.15560020981202516
  - 0.20078238946425717
  - 0.16024546105999127
  - 0.15768690838793495
  - 0.1785866216238341
  train_matthews_corrcoef_macro_oob:
  - 0.14493147953316424
  - 0.18395401830680744
  - 0.14666967386491095
  - 0.14274329221626425
  - 0.17402717161919343
  train_matthews_corrcoef_micro:
  - 0.428656841768603
  - 0.5374601151997603
  - 0.4471385766440242
  - 0.4391504454413678
  - 0.4849470905949865
  train_matthews_corrcoef_micro_oob:
  - 0.39950326795677854
  - 0.49817362503530627
  - 0.4169511865583818
  - 0.40286797926736795
  - 0.47247395713460205
  train_matthews_corrcoef_samples:
  - 0.25292916540656596
  - 0.39913892181760374
  - 0.2698455153333637
  - 0.2815736015531479
  - 0.3461114491473682
  train_matthews_corrcoef_samples_oob:
  - 0.21901626900120275
  - 0.3551985680742394
  - 0.24069452368990518
  - 0.2391493591289055
  - 0.3274229670493965
  train_matthews_corrcoef_weighted:
  - 0.3156166473939347
  - 0.4108872971532613
  - 0.32781406611932207
  - 0.32130118583518535
  - 0.36014852901826216
  train_matthews_corrcoef_weighted_oob:
  - 0.29397133295934846
  - 0.3762450698504991
  - 0.29958718185232336
  - 0.2907348958546651
  - 0.35091803658625875
  train_ndgc:
  - 0.9804311156398339
  - 0.98571371772828
  - 0.9764154793849713
  - 0.9731802730542206
  - 0.9760076572879807
  train_ndgc_oob:
  - 0.9580435173358652
  - 0.9615987231753532
  - 0.9645727921785853
  - 0.952994909132747
  - 0.9662649032653352
  train_neg_coverage_error:
  - -1.2916666666666667
  - -1.3190184049079754
  - -1.2857142857142858
  - -1.3393939393939394
  - -1.353658536585366
  train_neg_coverage_error_oob:
  - -1.3988095238095237
  - -1.4478527607361964
  - -1.3928571428571428
  - -1.4484848484848485
  - -1.396341463414634
  train_neg_hamming_loss_macro:
  - -0.15674603174603174
  - -0.1359918200408998
  - -0.15178571428571427
  - -0.1545454545454545
  - -0.14735772357723578
  train_neg_hamming_loss_macro_oob:
  - -0.1626984126984127
  - -0.14519427402862986
  - -0.15773809523809526
  - -0.1616161616161616
  - -0.15040650406504066
  train_neg_hamming_loss_micro:
  - -0.15674603174603174
  - -0.1359918200408998
  - -0.15178571428571427
  - -0.15454545454545454
  - -0.14735772357723578
  train_neg_hamming_loss_micro_oob:
  - -0.1626984126984127
  - -0.14519427402862986
  - -0.15773809523809523
  - -0.16161616161616163
  - -0.15040650406504066
  train_neg_hamming_loss_samples:
  - -0.15674603174603177
  - -0.13599182004089977
  - -0.15178571428571427
  - -0.15454545454545454
  - -0.14735772357723576
  train_neg_hamming_loss_samples_oob:
  - -0.1626984126984127
  - -0.14519427402862983
  - -0.15773809523809523
  - -0.1616161616161616
  - -0.15040650406504064
  train_neg_hamming_loss_weighted:
  - -0.22243725076237392
  - -0.1814852119769252
  - -0.2172913719943423
  - -0.22063636363636366
  - -0.20137044192224102
  train_neg_hamming_loss_weighted_oob:
  - -0.23448862303542106
  - -0.20043952019045877
  - -0.22966760961810467
  - -0.23509090909090913
  - -0.2075585607341222
  train_neg_label_ranking_loss:
  - -0.016071428571428573
  - -0.013258350374914794
  - -0.015625
  - -0.02303030303030303
  - -0.021409214092140923
  train_neg_label_ranking_loss_oob:
  - -0.034970238095238096
  - -0.035480572597137015
  - -0.03392857142857143
  - -0.044158249158249153
  - -0.029166666666666667
  train_precision_macro:
  - 0.8432539682539684
  - 0.8640081799591002
  - 0.8482142857142859
  - 0.8454545454545456
  - 0.8526422764227641
  train_precision_macro_oob:
  - 0.8373015873015874
  - 0.8548057259713701
  - 0.8422619047619048
  - 0.8383838383838383
  - 0.8495934959349593
  train_precision_micro:
  - 0.8432539682539683
  - 0.8640081799591002
  - 0.8482142857142857
  - 0.8454545454545455
  - 0.8526422764227642
  train_precision_micro_oob:
  - 0.8373015873015873
  - 0.8548057259713702
  - 0.8422619047619048
  - 0.8383838383838383
  - 0.8495934959349594
  train_precision_samples:
  - 0.8432539682539684
  - 0.8640081799591001
  - 0.8482142857142857
  - 0.8454545454545455
  - 0.8526422764227641
  train_precision_samples_oob:
  - 0.8373015873015872
  - 0.8548057259713701
  - 0.8422619047619048
  - 0.8383838383838382
  - 0.8495934959349593
  train_precision_weighted:
  - 0.7775627492376261
  - 0.8185147880230748
  - 0.7827086280056578
  - 0.7793636363636364
  - 0.7986295580777589
  train_precision_weighted_oob:
  - 0.7655113769645789
  - 0.7995604798095413
  - 0.7703323903818954
  - 0.7649090909090909
  - 0.7924414392658777
  train_recall_macro:
  - 0.8432539682539684
  - 0.8640081799591002
  - 0.8482142857142859
  - 0.8454545454545456
  - 0.8526422764227641
  train_recall_macro_oob:
  - 0.8373015873015874
  - 0.8548057259713701
  - 0.8422619047619048
  - 0.8383838383838383
  - 0.8495934959349593
  train_recall_micro:
  - 0.8432539682539683
  - 0.8640081799591002
  - 0.8482142857142857
  - 0.8454545454545455
  - 0.8526422764227642
  train_recall_micro_oob:
  - 0.8373015873015873
  - 0.8548057259713702
  - 0.8422619047619048
  - 0.8383838383838383
  - 0.8495934959349594
  train_recall_samples:
  - 0.8432539682539684
  - 0.8640081799591001
  - 0.8482142857142857
  - 0.8454545454545455
  - 0.8526422764227641
  train_recall_samples_oob:
  - 0.8373015873015872
  - 0.8548057259713701
  - 0.8422619047619048
  - 0.8383838383838382
  - 0.8495934959349593
  train_recall_weighted:
  - 0.7775627492376261
  - 0.8185147880230748
  - 0.7827086280056578
  - 0.7793636363636364
  - 0.7986295580777589
  train_recall_weighted_oob:
  - 0.7655113769645789
  - 0.7995604798095413
  - 0.7703323903818954
  - 0.7649090909090909
  - 0.7924414392658777
  train_roc_auc_macro:
  - 0.9822924689688187
  - 0.9892381437410886
  - 0.9806358755882911
  - 0.9829018377345218
  - 0.975780763259242
  train_roc_auc_macro_oob:
  - 0.9699471658246942
  - 0.9777318067110642
  - 0.963593953666336
  - 0.9730496458284307
  - 0.9713295743167675
  train_roc_auc_micro:
  - 0.9847535415965486
  - 0.9871267856342483
  - 0.9820375647986634
  - 0.9799145569620252
  - 0.9809070421108608
  train_roc_auc_micro_oob:
  - 0.9718140929535233
  - 0.9753740947770797
  - 0.966108149276466
  - 0.9665506329113924
  - 0.9732217467271023
  train_roc_auc_samples:
  - 0.9839285714285715
  - 0.9867416496250853
  - 0.984375
  - 0.9769696969696969
  - 0.978590785907859
  train_roc_auc_samples_oob:
  - 0.9650297619047619
  - 0.964519427402863
  - 0.9660714285714287
  - 0.9558417508417509
  - 0.9708333333333333
  train_roc_auc_weighted:
  - 0.9799914084198472
  - 0.9911418026456618
  - 0.9754168452238032
  - 0.9781829638843369
  - 0.9777701164748844
  train_roc_auc_weighted_oob:
  - 0.9659075657465299
  - 0.9784515974792078
  - 0.9552679334399908
  - 0.9649800741689897
  - 0.9713896700098521
start: 2023-12-21 09:20:55.432339
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
