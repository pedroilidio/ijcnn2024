active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AmpmZmZnZPwAzMzMzM+O/gGZmZmZm9j8AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:34:55.249438
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__3
  params: {}
hash: 53967e4a0f84dd3b39a34e29a4883e0e56506c7d587b2ce49b4d32c9f5f79ac2
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/53967e4_20231221T123434170186_embedding_proba_weak__3_VirusPseAAC.yml
results:
  fit_time:
  - 13.419431686401367
  - 13.468822956085205
  - 13.807951211929321
  - 13.129660844802856
  - 13.346063613891602
  score_time:
  - 2.3110225200653076
  - 2.2755675315856934
  - 2.409575939178467
  - 2.508021116256714
  - 2.4940433502197266
  test_average_precision_macro:
  - 0.40276481010862836
  - 0.3309571245884345
  - 0.351527554173934
  - 0.345051174655937
  - 0.3493961242316661
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4056543473898031
  - 0.3958851143037821
  - 0.38905733408574616
  - 0.4261279552713528
  - 0.37422586314367257
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6970930232558139
  - 0.6601626016260163
  - 0.628968253968254
  - 0.6776388888888889
  - 0.6300813008130081
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4025108501268754
  - 0.40626878009018563
  - 0.39672587991577324
  - 0.405690395610117
  - 0.37096493297282185
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8023255813953488
  - 0.8008130081300813
  - 0.8055555555555555
  - 0.7916666666666666
  - 0.7967479674796748
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8023255813953488
  - 0.8008130081300813
  - 0.8055555555555556
  - 0.7916666666666666
  - 0.7967479674796748
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.802325581395349
  - 0.8008130081300814
  - 0.8055555555555556
  - 0.7916666666666667
  - 0.7967479674796749
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6976744186046511
  - 0.675609756097561
  - 0.6923809523809524
  - 0.675
  - 0.6910569105691057
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6928920409771474
  - 0.6949888745986454
  - 0.6989387016580886
  - 0.6812122532946332
  - 0.6853573527733617
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6699029126213593
  - 0.6677966101694915
  - 0.6744186046511628
  - 0.6551724137931034
  - 0.6621621621621622
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.674418604651163
  - 0.675377468060395
  - 0.6802721088435375
  - 0.661904761904762
  - 0.6701509872241581
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.553604969174431
  - 0.5294266667992255
  - 0.5468226278537598
  - 0.5301811841857609
  - 0.5458958374310017
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6970930232558139
  - 0.6601626016260161
  - 0.628968253968254
  - 0.6776388888888889
  - 0.6300813008130081
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.03131121455425748
  - 0.033180544140883145
  - 0.0
  - 0.03131121455425748
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.12649110640673517
  - 0.12686850487761128
  - 0.0
  - 0.12492494745645803
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.024390243902439025
  - 0.023809523809523808
  - 0.0
  - 0.024390243902439025
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.06387487769068526
  - 0.06370664475049564
  - 0.0
  - 0.06262242910851495
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7747716605897474
  - 0.7466069840820746
  - 0.7236700556948154
  - 0.7609135923978376
  - 0.7247263538039015
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.1627906976744184
  - -2.317073170731707
  - -2.4523809523809526
  - -2.35
  - -2.5365853658536586
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19767441860465115
  - -0.19918699186991873
  - -0.19444444444444442
  - -0.20833333333333337
  - -0.20325203252032523
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19767441860465115
  - -0.1991869918699187
  - -0.19444444444444445
  - -0.20833333333333334
  - -0.2032520325203252
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19767441860465113
  - -0.19918699186991867
  - -0.19444444444444442
  - -0.20833333333333331
  - -0.20325203252032517
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3023255813953488
  - -0.32439024390243903
  - -0.3076190476190476
  - -0.325
  - -0.3089430894308943
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1988372093023256
  - -0.22466124661246611
  - -0.24761904761904757
  - -0.2208333333333333
  - -0.25609756097560976
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8023255813953488
  - 0.8008130081300813
  - 0.8055555555555555
  - 0.7916666666666666
  - 0.7967479674796748
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8023255813953488
  - 0.8008130081300813
  - 0.8055555555555556
  - 0.7916666666666666
  - 0.7967479674796748
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.802325581395349
  - 0.8008130081300814
  - 0.8055555555555556
  - 0.7916666666666667
  - 0.7967479674796749
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6976744186046511
  - 0.675609756097561
  - 0.6923809523809524
  - 0.675
  - 0.6910569105691057
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8023255813953488
  - 0.8008130081300813
  - 0.8055555555555555
  - 0.7916666666666666
  - 0.7967479674796748
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8023255813953488
  - 0.8008130081300813
  - 0.8055555555555556
  - 0.7916666666666666
  - 0.7967479674796748
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.802325581395349
  - 0.8008130081300814
  - 0.8055555555555556
  - 0.7916666666666667
  - 0.7967479674796749
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6976744186046511
  - 0.675609756097561
  - 0.6923809523809524
  - 0.675
  - 0.6910569105691057
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.621366922837511
  - 0.6384898005422301
  - 0.6346831704348973
  - 0.6116715088018426
  - 0.5260509782568606
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7659372927915127
  - 0.7817346938775509
  - 0.7664356435643565
  - 0.7718947368421053
  - 0.7346405228758169
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8011627906976743
  - 0.7753387533875339
  - 0.7523809523809524
  - 0.7791666666666666
  - 0.7439024390243902
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5535025976202447
  - 0.5654874657265961
  - 0.5595968297855332
  - 0.5512193206802172
  - 0.45347113815971946
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7134984128460752
  - 0.7404601046328816
  - 0.6880259339097562
  - 0.7178509056557857
  - 0.7383096065839397
  train_average_precision_macro_oob:
  - 0.5372538253815039
  - 0.6134374946374673
  - 0.5725600267865972
  - 0.5684152472893426
  - 0.6016372433812235
  train_average_precision_micro:
  - 0.769726452111957
  - 0.7712966009546594
  - 0.7717374449685289
  - 0.7679152753654301
  - 0.7801414141973018
  train_average_precision_micro_oob:
  - 0.700423935149245
  - 0.7031730088000859
  - 0.7076775207717739
  - 0.7130559960074055
  - 0.7147681582729727
  train_average_precision_samples:
  - 0.8127032520325201
  - 0.8244979919678715
  - 0.8112121212121214
  - 0.8172654690618761
  - 0.8275602409638553
  train_average_precision_samples_oob:
  - 0.7513550135501355
  - 0.7772423025435073
  - 0.760959595959596
  - 0.7510479041916168
  - 0.7701639892904953
  train_average_precision_weighted:
  - 0.7563322698331523
  - 0.7504106984206649
  - 0.7411257714912445
  - 0.7586354890501981
  - 0.764724690385041
  train_average_precision_weighted_oob:
  - 0.6956265614189312
  - 0.7035579895427608
  - 0.6905579957287837
  - 0.7094445521676782
  - 0.7185661897324406
  train_f1_macro:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959597
  - 0.8612774451097804
  - 0.8584337349397589
  train_f1_macro_oob:
  - 0.8302845528455284
  - 0.8383534136546186
  - 0.8444444444444446
  - 0.8373253493013973
  - 0.8293172690763052
  train_f1_micro:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959596
  - 0.8612774451097804
  - 0.858433734939759
  train_f1_micro_oob:
  - 0.8302845528455285
  - 0.8383534136546185
  - 0.8444444444444444
  - 0.8373253493013972
  - 0.8293172690763052
  train_f1_samples:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959597
  - 0.8612774451097803
  - 0.858433734939759
  train_f1_samples_oob:
  - 0.8302845528455283
  - 0.8383534136546182
  - 0.8444444444444443
  - 0.8373253493013969
  - 0.829317269076305
  train_f1_weighted:
  - 0.8112182987501517
  - 0.8155791482762735
  - 0.8108010801080107
  - 0.8118811881188119
  - 0.8052808247917043
  train_f1_weighted_oob:
  - 0.7493326052663513
  - 0.7689073124179888
  - 0.7798979897989798
  - 0.7628801802335922
  - 0.7456992147695259
  train_jaccard_macro:
  - 0.762002132440652
  - 0.7624738867623724
  - 0.7600148191190902
  - 0.7628447251086093
  - 0.759119008111993
  train_jaccard_macro_oob:
  - 0.7243732760760624
  - 0.7329535603190996
  - 0.7405948090294837
  - 0.7326246365586869
  - 0.7232857239129141
  train_jaccard_micro:
  - 0.7555753791257805
  - 0.7566137566137566
  - 0.7537643932683791
  - 0.7563540753724802
  - 0.7519788918205804
  train_jaccard_micro_oob:
  - 0.7098175499565595
  - 0.7216940363007779
  - 0.7307692307692307
  - 0.7201716738197425
  - 0.7084048027444254
  train_jaccard_samples:
  - 0.7678571428571429
  - 0.7685025817555938
  - 0.7678210678210677
  - 0.769318505845452
  - 0.7657773952954676
  train_jaccard_samples_oob:
  - 0.7229965156794426
  - 0.7336488812392428
  - 0.7450216450216451
  - 0.7315369261477047
  - 0.7208835341365463
  train_jaccard_weighted:
  - 0.6860951520348038
  - 0.6920755058101171
  - 0.6856738670856873
  - 0.687013090419321
  - 0.6783196057533266
  train_jaccard_weighted_oob:
  - 0.6096718387370391
  - 0.6324057883584262
  - 0.646067809118801
  - 0.6252066654826984
  - 0.6049893172770741
  train_label_ranking_average_precision_score:
  - 0.8127032520325204
  - 0.8244979919678713
  - 0.8112121212121212
  - 0.8172654690618764
  - 0.8275602409638553
  train_label_ranking_average_precision_score_oob:
  - 0.7513550135501352
  - 0.7772423025435071
  - 0.7609595959595957
  - 0.7510479041916167
  - 0.770163989290495
  train_matthews_corrcoef_macro:
  - 0.19365817413343442
  - 0.19544362064486656
  - 0.1921726420973254
  - 0.19264433420768193
  - 0.18663760440512514
  train_matthews_corrcoef_macro_oob:
  - 0.13106785647585395
  - 0.15007579289953987
  - 0.16319999098438162
  - 0.1454138863013407
  - 0.1274127919221992
  train_matthews_corrcoef_micro:
  - 0.5205697472751045
  - 0.5195371376305066
  - 0.5148940007142699
  - 0.5154740268002812
  - 0.5035275487458084
  train_matthews_corrcoef_micro_oob:
  - 0.37338813049388114
  - 0.41079467851585755
  - 0.44584365595424214
  - 0.400487041941156
  - 0.3564533707102253
  train_matthews_corrcoef_samples:
  - 0.331422426931457
  - 0.323169706238388
  - 0.33947706486993173
  - 0.3267455216050226
  - 0.32490389503617534
  train_matthews_corrcoef_samples_oob:
  - 0.19162919953802277
  - 0.22040076493556027
  - 0.2641785841479037
  - 0.20712255320002462
  - 0.17567637144679746
  train_matthews_corrcoef_weighted:
  - 0.39616155293519567
  - 0.39491004539202135
  - 0.39101491951884926
  - 0.3920571341552166
  - 0.38181671350226704
  train_matthews_corrcoef_weighted_oob:
  - 0.26929684541385995
  - 0.3032541795303126
  - 0.33192202112475594
  - 0.2954644800639015
  - 0.2607295399545657
  train_ndgc:
  - 0.8614455316129987
  - 0.8716455488383728
  - 0.8616627975416336
  - 0.8648441882767863
  - 0.8726579171931916
  train_ndgc_oob:
  - 0.8171584659377644
  - 0.8360868287549311
  - 0.8251851993879369
  - 0.8145227632894003
  - 0.8305753482965065
  train_neg_coverage_error:
  - -1.8597560975609757
  - -1.7951807228915662
  - -1.8848484848484848
  - -1.844311377245509
  - -1.7530120481927711
  train_neg_coverage_error_oob:
  - -2.176829268292683
  - -2.0
  - -2.0606060606060606
  - -2.095808383233533
  - -1.9759036144578312
  train_neg_hamming_loss_macro:
  - -0.13922764227642276
  - -0.13855421686746985
  - -0.1404040404040404
  - -0.13872255489021953
  - -0.14156626506024098
  train_neg_hamming_loss_macro_oob:
  - -0.16971544715447154
  - -0.1616465863453815
  - -0.15555555555555553
  - -0.1626746506986028
  - -0.1706827309236948
  train_neg_hamming_loss_micro:
  - -0.13922764227642276
  - -0.13855421686746988
  - -0.1404040404040404
  - -0.13872255489021956
  - -0.14156626506024098
  train_neg_hamming_loss_micro_oob:
  - -0.16971544715447154
  - -0.16164658634538154
  - -0.15555555555555556
  - -0.1626746506986028
  - -0.1706827309236948
  train_neg_hamming_loss_samples:
  - -0.13922764227642273
  - -0.13855421686746988
  - -0.14040404040404042
  - -0.13872255489021953
  - -0.14156626506024098
  train_neg_hamming_loss_samples_oob:
  - -0.16971544715447154
  - -0.1616465863453815
  - -0.15555555555555553
  - -0.1626746506986028
  - -0.17068273092369476
  train_neg_hamming_loss_weighted:
  - -0.18878170124984833
  - -0.18442085172372655
  - -0.1891989198919892
  - -0.18811881188118812
  - -0.19471917520829587
  train_neg_hamming_loss_weighted_oob:
  - -0.25066739473364885
  - -0.2310926875820112
  - -0.2201020102010201
  - -0.23711981976640778
  - -0.25430078523047406
  train_neg_label_ranking_loss:
  - -0.12232384823848237
  - -0.10895247657295848
  - -0.12521885521885523
  - -0.12177312042581502
  - -0.1055722891566265
  train_neg_label_ranking_loss_oob:
  - -0.18053861788617886
  - -0.15291164658634537
  - -0.15846801346801348
  - -0.17500000000000002
  - -0.14938085676037482
  train_precision_macro:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959597
  - 0.8612774451097804
  - 0.8584337349397589
  train_precision_macro_oob:
  - 0.8302845528455284
  - 0.8383534136546186
  - 0.8444444444444446
  - 0.8373253493013973
  - 0.8293172690763052
  train_precision_micro:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959596
  - 0.8612774451097804
  - 0.858433734939759
  train_precision_micro_oob:
  - 0.8302845528455285
  - 0.8383534136546185
  - 0.8444444444444444
  - 0.8373253493013972
  - 0.8293172690763052
  train_precision_samples:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959597
  - 0.8612774451097803
  - 0.858433734939759
  train_precision_samples_oob:
  - 0.8302845528455283
  - 0.8383534136546182
  - 0.8444444444444443
  - 0.8373253493013969
  - 0.829317269076305
  train_precision_weighted:
  - 0.8112182987501517
  - 0.8155791482762735
  - 0.8108010801080107
  - 0.8118811881188119
  - 0.8052808247917043
  train_precision_weighted_oob:
  - 0.7493326052663513
  - 0.7689073124179888
  - 0.7798979897989798
  - 0.7628801802335922
  - 0.7456992147695259
  train_recall_macro:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959597
  - 0.8612774451097804
  - 0.8584337349397589
  train_recall_macro_oob:
  - 0.8302845528455284
  - 0.8383534136546186
  - 0.8444444444444446
  - 0.8373253493013973
  - 0.8293172690763052
  train_recall_micro:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959596
  - 0.8612774451097804
  - 0.858433734939759
  train_recall_micro_oob:
  - 0.8302845528455285
  - 0.8383534136546185
  - 0.8444444444444444
  - 0.8373253493013972
  - 0.8293172690763052
  train_recall_samples:
  - 0.8607723577235772
  - 0.8614457831325302
  - 0.8595959595959597
  - 0.8612774451097803
  - 0.858433734939759
  train_recall_samples_oob:
  - 0.8302845528455283
  - 0.8383534136546182
  - 0.8444444444444443
  - 0.8373253493013969
  - 0.829317269076305
  train_recall_weighted:
  - 0.8112182987501517
  - 0.8155791482762735
  - 0.8108010801080107
  - 0.8118811881188119
  - 0.8052808247917043
  train_recall_weighted_oob:
  - 0.7493326052663513
  - 0.7689073124179888
  - 0.7798979897989798
  - 0.7628801802335922
  - 0.7456992147695259
  train_roc_auc_macro:
  - 0.8345652377372068
  - 0.829652819954895
  - 0.8242656467720627
  - 0.8257149503994489
  - 0.8439346448534882
  train_roc_auc_macro_oob:
  - 0.8034742524962892
  - 0.8008564859700001
  - 0.7951790623686787
  - 0.756697658160766
  - 0.8095555329137419
  train_roc_auc_micro:
  - 0.889174815577286
  - 0.8899044816320424
  - 0.887483037643866
  - 0.885154702970297
  - 0.8951218749022185
  train_roc_auc_micro_oob:
  - 0.8531099292807991
  - 0.8582811681671946
  - 0.8598281147911744
  - 0.8576175742574257
  - 0.868819424888138
  train_roc_auc_samples:
  - 0.8776761517615175
  - 0.8910475234270415
  - 0.8747811447811449
  - 0.878226879574185
  - 0.8944277108433735
  train_roc_auc_samples_oob:
  - 0.819461382113821
  - 0.8470883534136546
  - 0.8415319865319866
  - 0.8250000000000002
  - 0.8506191432396252
  train_roc_auc_weighted:
  - 0.7963583265907711
  - 0.780306794745755
  - 0.7831084193480348
  - 0.7948183772681607
  - 0.8038697475824342
  train_roc_auc_weighted_oob:
  - 0.7886223008763175
  - 0.7720191862902838
  - 0.770565095388993
  - 0.7767492961799366
  - 0.7975118275864546
start: 2023-12-21 12:34:34.170186
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
