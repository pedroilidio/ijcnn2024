active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T+AmZmZmZkBwACYmZmZmcm/AJqZmZmZ6T8AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 06:18:37.373435
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__2
  params: {}
hash: 1bbbc22c07024090290d01a0481ea5c17fdf7c025864d19fa2eb9d2ac80f3971
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1bbbc22_20231222T061821416613_embedding_weak__2_Gram_positive.yml
results:
  fit_time:
  - 5.202916622161865
  - 7.043825626373291
  - 7.291035413742065
  - 4.974593639373779
  - 7.270049571990967
  score_time:
  - 0.0
  - 1.668609619140625
  - 1.7469298839569092
  - 0.0
  - 1.7417387962341309
  test_average_precision_macro:
  - .nan
  - 0.9812011130495231
  - 0.9680298969618366
  - .nan
  - 0.9125257820673671
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - .nan
  - 0.9673324619895958
  - 0.9888862338887429
  - .nan
  - 0.9793616359835624
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - .nan
  - 0.9528301886792452
  - 0.9719551282051283
  - .nan
  - 0.9668284789644013
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - .nan
  - 0.9764351372801366
  - 0.991879417304766
  - .nan
  - 0.9799676603166306
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615385
  - .nan
  - 0.9733009708737864
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615384
  - .nan
  - 0.9733009708737864
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615384
  - .nan
  - 0.9733009708737864
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - .nan
  - 0.9616411534353864
  - 0.9804029304029306
  - .nan
  - 0.9807692307692307
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - .nan
  - 0.9273523732239328
  - 0.9534440983039114
  - .nan
  - 0.9486364535429956
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - .nan
  - 0.9272727272727272
  - 0.9530516431924883
  - .nan
  - 0.9479905437352246
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - .nan
  - 0.9471698113207546
  - 0.9628205128205127
  - .nan
  - 0.9624595469255662
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - .nan
  - 0.9262313188918694
  - 0.9619311345168043
  - .nan
  - 0.9629363367681124
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - .nan
  - 0.9528301886792452
  - 0.9719551282051282
  - .nan
  - 0.9668284789644013
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - .nan
  - 0.684470747884651
  - 0.715207767904725
  - .nan
  - 0.7057906878322864
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - .nan
  - 0.8983807948817413
  - 0.935934626938357
  - .nan
  - 0.9287521522868792
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - .nan
  - 0.8867924528301888
  - 0.9158078551524643
  - .nan
  - 0.9246991935520028
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - .nan
  - 0.8787443164034363
  - 0.9197156308424439
  - .nan
  - 0.9161524578051098
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - .nan
  - 0.9649582879380071
  - 0.9790717867191131
  - .nan
  - 0.9757323100837646
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - .nan
  - -1.1132075471698113
  - -1.0865384615384615
  - .nan
  - -1.1262135922330097
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - .nan
  - -0.03773584905660377
  - -0.024038461538461543
  - .nan
  - -0.02669902912621359
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - .nan
  - -0.03773584905660377
  - -0.02403846153846154
  - .nan
  - -0.02669902912621359
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - .nan
  - -0.03773584905660377
  - -0.02403846153846154
  - .nan
  - -0.02669902912621359
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - .nan
  - -0.03835884656461375
  - -0.0195970695970696
  - .nan
  - -0.01923076923076923
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - .nan
  - -0.03773584905660377
  - -0.02564102564102564
  - .nan
  - -0.037216828478964396
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615385
  - .nan
  - 0.9733009708737864
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615384
  - .nan
  - 0.9733009708737864
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615384
  - .nan
  - 0.9733009708737864
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - .nan
  - 0.9616411534353864
  - 0.9804029304029306
  - .nan
  - 0.9807692307692307
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615385
  - .nan
  - 0.9733009708737864
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615384
  - .nan
  - 0.9733009708737864
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - .nan
  - 0.9622641509433962
  - 0.9759615384615384
  - .nan
  - 0.9733009708737864
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - .nan
  - 0.9616411534353864
  - 0.9804029304029306
  - .nan
  - 0.9807692307692307
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - .nan
  - 0.9892664338655389
  - 0.9974171861293659
  - .nan
  - 0.9912149631620965
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - .nan
  - 0.9867687195917882
  - 0.9947940591027408
  - .nan
  - 0.9872315184815185
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.9622641509433962
  - 0.9743589743589745
  - .nan
  - 0.9627831715210357
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - .nan
  - 0.9855023931440963
  - 0.9984221896916292
  - .nan
  - 0.9947535994864736
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - .nan
  - 0.8906630249359058
  - 0.9010672262162669
  - .nan
  - 0.9414472098391865
  train_average_precision_macro_oob:
  - .nan
  - 0.8477292949693824
  - 0.8623311558019248
  - .nan
  - 0.8853954005258592
  train_average_precision_micro:
  - .nan
  - 0.9901061853292956
  - 0.9889084214241893
  - .nan
  - 0.9870468389627535
  train_average_precision_micro_oob:
  - .nan
  - 0.9806682613442961
  - 0.9797241963033735
  - .nan
  - 0.9774794093495801
  train_average_precision_samples:
  - .nan
  - 0.9709443099273608
  - 0.9652610441767068
  - .nan
  - 0.9697516025641026
  train_average_precision_samples_oob:
  - .nan
  - 0.9646892655367232
  - 0.9606425702811244
  - .nan
  - 0.9619391025641024
  train_average_precision_weighted:
  - .nan
  - 0.9785161391344702
  - 0.9789543013116602
  - .nan
  - 0.9821136227381526
  train_average_precision_weighted_oob:
  - .nan
  - 0.968978652564054
  - 0.9687981453715276
  - .nan
  - 0.969287595278642
  train_f1_macro:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879519
  - .nan
  - 0.9723557692307693
  train_f1_macro_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_f1_micro:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879518
  - .nan
  - 0.9723557692307693
  train_f1_micro_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_f1_samples:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879518
  - .nan
  - 0.9723557692307693
  train_f1_samples_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_f1_weighted:
  - .nan
  - 0.9762049924225268
  - 0.9750792644261255
  - .nan
  - 0.9759730126675233
  train_f1_weighted_oob:
  - .nan
  - 0.9676984804408291
  - 0.9652620049576295
  - .nan
  - 0.9608959060033047
  train_jaccard_macro:
  - .nan
  - 0.945029820262865
  - 0.945062954019278
  - .nan
  - 0.9463822513014676
  train_jaccard_macro_oob:
  - .nan
  - 0.930669524864982
  - 0.9284312445406671
  - .nan
  - 0.9239456741117871
  train_jaccard_micro:
  - .nan
  - 0.9446733372572101
  - 0.9449326303456356
  - .nan
  - 0.9461988304093567
  train_jaccard_micro_oob:
  - .nan
  - 0.9299065420560748
  - 0.9279907084785134
  - .nan
  - 0.923699421965318
  train_jaccard_samples:
  - .nan
  - 0.9593220338983051
  - 0.9585542168674699
  - .nan
  - 0.9605769230769231
  train_jaccard_samples_oob:
  - .nan
  - 0.9493139628732848
  - 0.94570281124498
  - .nan
  - 0.9432692307692307
  train_jaccard_weighted:
  - .nan
  - 0.9538966360470853
  - 0.9515040291083784
  - .nan
  - 0.9532514091453566
  train_jaccard_weighted_oob:
  - .nan
  - 0.9382633044230346
  - 0.9333532191111341
  - .nan
  - 0.9249766617379744
  train_label_ranking_average_precision_score:
  - .nan
  - 0.9709443099273608
  - 0.9652610441767068
  - .nan
  - 0.9697516025641026
  train_label_ranking_average_precision_score_oob:
  - .nan
  - 0.9646892655367231
  - 0.9606425702811244
  - .nan
  - 0.9619391025641023
  train_matthews_corrcoef_macro:
  - .nan
  - 0.6990259660267758
  - 0.7005321004521783
  - .nan
  - 0.7024628729254518
  train_matthews_corrcoef_macro_oob:
  - .nan
  - 0.6785660962154423
  - 0.6765960406048253
  - .nan
  - 0.6730556790711766
  train_matthews_corrcoef_micro:
  - .nan
  - 0.9239380415248546
  - 0.9241102095527416
  - .nan
  - 0.9260472866664483
  train_matthews_corrcoef_micro_oob:
  - .nan
  - 0.9028325174520564
  - 0.899568205320975
  - .nan
  - 0.8933237225067873
  train_matthews_corrcoef_samples:
  - .nan
  - 0.9160033924376719
  - 0.9101977127893226
  - .nan
  - 0.9190129833575925
  train_matthews_corrcoef_samples_oob:
  - .nan
  - 0.8968491948528705
  - 0.8820852629901258
  - .nan
  - 0.8785770044993091
  train_matthews_corrcoef_weighted:
  - .nan
  - 0.9101437786829738
  - 0.9090159025764918
  - .nan
  - 0.9115499386691687
  train_matthews_corrcoef_weighted_oob:
  - .nan
  - 0.8884925645151234
  - 0.8835885822078191
  - .nan
  - 0.8757737745374002
  train_ndgc:
  - .nan
  - 0.9786068460961203
  - 0.9743657389864219
  - .nan
  - 0.9775966379400818
  train_ndgc_oob:
  - .nan
  - 0.9737424802177376
  - 0.9708700064681376
  - .nan
  - 0.9716780977895024
  train_neg_coverage_error:
  - .nan
  - -1.0799031476997578
  - -1.0867469879518072
  - .nan
  - -1.0745192307692308
  train_neg_coverage_error_oob:
  - .nan
  - -1.116222760290557
  - -1.110843373493976
  - .nan
  - -1.1033653846153846
  train_neg_hamming_loss_macro:
  - .nan
  - -0.028450363196125907
  - -0.028313253012048192
  - .nan
  - -0.027644230769230768
  train_neg_hamming_loss_macro_oob:
  - .nan
  - -0.036319612590799036
  - -0.03734939759036145
  - .nan
  - -0.039663461538461536
  train_neg_hamming_loss_micro:
  - .nan
  - -0.028450363196125907
  - -0.028313253012048192
  - .nan
  - -0.027644230769230768
  train_neg_hamming_loss_micro_oob:
  - .nan
  - -0.03631961259079903
  - -0.03734939759036145
  - .nan
  - -0.039663461538461536
  train_neg_hamming_loss_samples:
  - .nan
  - -0.028450363196125907
  - -0.028313253012048192
  - .nan
  - -0.027644230769230768
  train_neg_hamming_loss_samples_oob:
  - .nan
  - -0.03631961259079903
  - -0.03734939759036145
  - .nan
  - -0.039663461538461536
  train_neg_hamming_loss_weighted:
  - .nan
  - -0.02379500757747313
  - -0.02492073557387445
  - .nan
  - -0.02402698733247659
  train_neg_hamming_loss_weighted_oob:
  - .nan
  - -0.032301519559171064
  - -0.03473799504237044
  - .nan
  - -0.03910409399669543
  train_neg_label_ranking_loss:
  - .nan
  - -0.023002421307506054
  - -0.026305220883534132
  - .nan
  - -0.022435897435897433
  train_neg_label_ranking_loss_oob:
  - .nan
  - -0.035108958837772396
  - -0.03413654618473895
  - .nan
  - -0.03205128205128205
  train_precision_macro:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879519
  - .nan
  - 0.9723557692307693
  train_precision_macro_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_precision_micro:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879518
  - .nan
  - 0.9723557692307693
  train_precision_micro_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_precision_samples:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879518
  - .nan
  - 0.9723557692307693
  train_precision_samples_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_precision_weighted:
  - .nan
  - 0.9762049924225268
  - 0.9750792644261255
  - .nan
  - 0.9759730126675233
  train_precision_weighted_oob:
  - .nan
  - 0.9676984804408291
  - 0.9652620049576295
  - .nan
  - 0.9608959060033047
  train_recall_macro:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879519
  - .nan
  - 0.9723557692307693
  train_recall_macro_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_recall_micro:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879518
  - .nan
  - 0.9723557692307693
  train_recall_micro_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_recall_samples:
  - .nan
  - 0.9715496368038741
  - 0.9716867469879518
  - .nan
  - 0.9723557692307693
  train_recall_samples_oob:
  - .nan
  - 0.9636803874092009
  - 0.9626506024096385
  - .nan
  - 0.9603365384615384
  train_recall_weighted:
  - .nan
  - 0.9762049924225268
  - 0.9750792644261255
  - .nan
  - 0.9759730126675233
  train_recall_weighted_oob:
  - .nan
  - 0.9676984804408291
  - 0.9652620049576295
  - .nan
  - 0.9608959060033047
  train_roc_auc_macro:
  - .nan
  - 0.9946088559294186
  - 0.9943260379257486
  - .nan
  - 0.9943768246277119
  train_roc_auc_macro_oob:
  - .nan
  - 0.9872724078983527
  - 0.9895842506584536
  - .nan
  - 0.987474124915253
  train_roc_auc_micro:
  - .nan
  - 0.9961378265808406
  - 0.9959665302914731
  - .nan
  - 0.9953858392999204
  train_roc_auc_micro_oob:
  - .nan
  - 0.9895105777725998
  - 0.9900781268058156
  - .nan
  - 0.989554398980169
  train_roc_auc_samples:
  - .nan
  - 0.9769975786924939
  - 0.9736947791164658
  - .nan
  - 0.9775641025641024
  train_roc_auc_samples_oob:
  - .nan
  - 0.9648910411622276
  - 0.965863453815261
  - .nan
  - 0.967948717948718
  train_roc_auc_weighted:
  - .nan
  - 0.9968736873820107
  - 0.9961339264673601
  - .nan
  - 0.9953901660443705
  train_roc_auc_weighted_oob:
  - .nan
  - 0.9936580896170965
  - 0.9916100618208297
  - .nan
  - 0.990555677079923
start: 2023-12-22 06:18:21.416613
wrapper: null
