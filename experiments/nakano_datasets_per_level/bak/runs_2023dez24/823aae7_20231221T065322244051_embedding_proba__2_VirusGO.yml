active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b+gmZmZmZkRQICZmZmZmfm/ADMzMzMz478AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:53:32.418607
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__2
  params: {}
hash: 823aae7fd1c3ed3b088e3245e3d8857e79b79737ae74c9670af42770f76b39aa
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/823aae7_20231221T065322244051_embedding_proba__2_VirusGO.yml
results:
  fit_time:
  - 4.365883827209473
  - 4.2659032344818115
  - 4.152717590332031
  - 4.120376110076904
  - 4.218013763427734
  score_time:
  - 1.7113425731658936
  - 1.6525137424468994
  - 1.6714427471160889
  - 1.6928932666778564
  - 1.769547700881958
  test_average_precision_macro:
  - 0.9603543160404063
  - 0.9658907551651629
  - 0.9965803048085419
  - 0.9371718437507911
  - 0.9068686398638568
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9419753768124755
  - 0.9191168846723766
  - 0.9791656806867334
  - 0.9372261250627052
  - 0.8867187596347758
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9426356589147287
  - 0.9099099099099098
  - 0.9748062015503876
  - 0.9583333333333334
  - 0.9246031746031745
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.954822277538996
  - 0.960214173914654
  - 0.9928814508259446
  - 0.9604144794547271
  - 0.9122507469740443
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9418604651162791
  - 0.9144144144144145
  - 0.945736434108527
  - 0.9444444444444445
  - 0.9285714285714285
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9418604651162791
  - 0.9144144144144144
  - 0.9457364341085271
  - 0.9444444444444444
  - 0.9285714285714286
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9418604651162791
  - 0.9144144144144145
  - 0.9457364341085273
  - 0.9444444444444445
  - 0.9285714285714286
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9347925216598267
  - 0.8841698841698842
  - 0.9420977693402942
  - 0.9411764705882353
  - 0.9111721611721612
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8909475575988065
  - 0.8460205783376514
  - 0.8981866148378637
  - 0.8952783650458068
  - 0.8687632135306554
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8901098901098901
  - 0.8423236514522822
  - 0.8970588235294118
  - 0.8947368421052632
  - 0.8666666666666667
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9069767441860465
  - 0.8648648648648649
  - 0.9119601328903655
  - 0.9081632653061226
  - 0.8854875283446711
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8784488882219742
  - 0.794058969071413
  - 0.8920691748232386
  - 0.8892813221130594
  - 0.8396012901826856
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9426356589147287
  - 0.9099099099099098
  - 0.9748062015503876
  - 0.9583333333333334
  - 0.9246031746031745
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6294187758275107
  - 0.6271964281315827
  - 0.5860472515220007
  - 0.6384055611186125
  - 0.573015806408027
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8100145584904479
  - 0.738753801193966
  - 0.8168513197446046
  - 0.8217152617583278
  - 0.7728525967890879
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7743573627000239
  - 0.6670180845279361
  - 0.7588943146984576
  - 0.8002259822778176
  - 0.752255552195287
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7746314838155716
  - 0.6720809726615917
  - 0.785746294463228
  - 0.7939582575905078
  - 0.7213823052755243
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.956946798008778
  - 0.9352522754200123
  - 0.9824203941008586
  - 0.9707143946679148
  - 0.9456992328497674
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.372093023255814
  - -1.5675675675675675
  - -1.2093023255813953
  - -1.3333333333333333
  - -1.5
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05813953488372093
  - -0.0855855855855856
  - -0.054263565891472874
  - -0.055555555555555546
  - -0.07142857142857141
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05813953488372093
  - -0.08558558558558559
  - -0.05426356589147287
  - -0.05555555555555555
  - -0.07142857142857142
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05813953488372093
  - -0.08558558558558559
  - -0.05426356589147286
  - -0.055555555555555546
  - -0.07142857142857142
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06520747834017328
  - -0.11583011583011585
  - -0.05790223065970575
  - -0.058823529411764705
  - -0.08882783882783882
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.037209302325581395
  - -0.045570570570570575
  - -0.013372093023255814
  - -0.02023809523809524
  - -0.0488095238095238
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9418604651162791
  - 0.9144144144144145
  - 0.945736434108527
  - 0.9444444444444445
  - 0.9285714285714285
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9418604651162791
  - 0.9144144144144144
  - 0.9457364341085271
  - 0.9444444444444444
  - 0.9285714285714286
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9418604651162791
  - 0.9144144144144145
  - 0.9457364341085273
  - 0.9444444444444445
  - 0.9285714285714286
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9347925216598267
  - 0.8841698841698842
  - 0.9420977693402942
  - 0.9411764705882353
  - 0.9111721611721612
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9418604651162791
  - 0.9144144144144145
  - 0.945736434108527
  - 0.9444444444444445
  - 0.9285714285714285
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9418604651162791
  - 0.9144144144144144
  - 0.9457364341085271
  - 0.9444444444444444
  - 0.9285714285714286
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9418604651162791
  - 0.9144144144144145
  - 0.9457364341085273
  - 0.9444444444444445
  - 0.9285714285714286
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9347925216598267
  - 0.8841698841698842
  - 0.9420977693402942
  - 0.9411764705882353
  - 0.9111721611721612
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9835883071177189
  - 0.9859535635480032
  - 0.997737556561086
  - 0.9766537667698657
  - 0.9402366653288997
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9815288434214265
  - 0.9759938657543942
  - 0.9950200175764086
  - 0.977465613110916
  - 0.9608653846153846
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9627906976744186
  - 0.9544294294294294
  - 0.9866279069767441
  - 0.979761904761905
  - 0.9511904761904763
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9718451483157365
  - 0.9742720407458288
  - 0.9952904238618525
  - 0.9818163054695563
  - 0.9473372132253712
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9839066714258687
  - 0.9774383606780966
  - 0.9794593103113954
  - 0.9801580621869385
  - 0.9848324401145155
  train_average_precision_macro_oob:
  - 0.9520886877110937
  - 0.9387679081127396
  - 0.9129736602704878
  - 0.946380359368561
  - 0.9404367043751783
  train_average_precision_micro:
  - 0.9695633491275973
  - 0.9734846040048547
  - 0.9604280122744
  - 0.9674663576839818
  - 0.9751381340176493
  train_average_precision_micro_oob:
  - 0.9306970597855406
  - 0.9365068815517307
  - 0.9119184698638596
  - 0.9313565301631286
  - 0.9423618322442857
  train_average_precision_samples:
  - 0.9852642276422763
  - 0.9769607843137256
  - 0.966971544715447
  - 0.9767676767676767
  - 0.9727272727272728
  train_average_precision_samples_oob:
  - 0.9534552845528456
  - 0.9511764705882352
  - 0.9427845528455285
  - 0.9392255892255893
  - 0.949191919191919
  train_average_precision_weighted:
  - 0.984877464879134
  - 0.9810061585515015
  - 0.9789118606671084
  - 0.9803981664156093
  - 0.9859979234652826
  train_average_precision_weighted_oob:
  - 0.955571316993065
  - 0.94637233252738
  - 0.925411800093315
  - 0.9518521035816355
  - 0.9531924412669659
  train_f1_macro:
  - 0.9502032520325203
  - 0.9607843137254903
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555556
  train_f1_macro_oob:
  - 0.9308943089430896
  - 0.9411764705882354
  - 0.9258130081300814
  - 0.9343434343434344
  - 0.9414141414141414
  train_f1_micro:
  - 0.9502032520325203
  - 0.9607843137254902
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555556
  train_f1_micro_oob:
  - 0.9308943089430894
  - 0.9411764705882353
  - 0.9258130081300813
  - 0.9343434343434344
  - 0.9414141414141414
  train_f1_samples:
  - 0.9502032520325202
  - 0.9607843137254901
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555557
  train_f1_samples_oob:
  - 0.9308943089430896
  - 0.9411764705882353
  - 0.9258130081300814
  - 0.9343434343434343
  - 0.9414141414141415
  train_f1_weighted:
  - 0.9424827084091736
  - 0.9513184584178499
  - 0.9334674996996276
  - 0.9352932308156188
  - 0.949121212121212
  train_f1_weighted_oob:
  - 0.9175767503943696
  - 0.9319617502173283
  - 0.912261203892827
  - 0.9211518166742048
  - 0.9320909090909091
  train_jaccard_macro:
  - 0.9058367404257077
  - 0.9253968717369151
  - 0.8909692846892486
  - 0.8934214795046772
  - 0.9151424158548928
  train_jaccard_macro_oob:
  - 0.8717383882950093
  - 0.889312098181548
  - 0.8627415240434354
  - 0.8776604432429389
  - 0.889893527691702
  train_jaccard_micro:
  - 0.9051306873184899
  - 0.9245283018867925
  - 0.8904899135446686
  - 0.892925430210325
  - 0.9148936170212766
  train_jaccard_micro_oob:
  - 0.870722433460076
  - 0.8888888888888888
  - 0.8618732261116367
  - 0.8767772511848341
  - 0.8893129770992366
  train_jaccard_samples:
  - 0.9200058072009292
  - 0.9364145658263306
  - 0.9060685249709639
  - 0.908946608946609
  - 0.9277056277056276
  train_jaccard_samples_oob:
  - 0.889808362369338
  - 0.9049019607843137
  - 0.8818234610917536
  - 0.895815295815296
  - 0.9066378066378065
  train_jaccard_weighted:
  - 0.8918597192642679
  - 0.9076249538302293
  - 0.8756839609561643
  - 0.8788293183517566
  - 0.9034522845493536
  train_jaccard_weighted_oob:
  - 0.8484547226010016
  - 0.8730179330273683
  - 0.8394018777436376
  - 0.8545044903050852
  - 0.873536721733569
  train_label_ranking_average_precision_score:
  - 0.9852642276422763
  - 0.9769607843137254
  - 0.966971544715447
  - 0.9767676767676765
  - 0.9727272727272726
  train_label_ranking_average_precision_score_oob:
  - 0.9534552845528452
  - 0.9511764705882352
  - 0.9427845528455283
  - 0.9392255892255891
  - 0.9491919191919193
  train_matthews_corrcoef_macro:
  - 0.6520912957428954
  - 0.8341032565919727
  - 0.6263467603825568
  - 0.619104922804589
  - 0.6850653505683241
  train_matthews_corrcoef_macro_oob:
  - 0.5579649575098192
  - 0.621194812435467
  - 0.5494749719681291
  - 0.5818237564026801
  - 0.6216096770687195
  train_matthews_corrcoef_micro:
  - 0.8420128061479658
  - 0.873889765910944
  - 0.8167769215544215
  - 0.8186645706553777
  - 0.8582322155235929
  train_matthews_corrcoef_micro_oob:
  - 0.7774423003200887
  - 0.8080277960620904
  - 0.7626253480705409
  - 0.7881197543934465
  - 0.8111013520454249
  train_matthews_corrcoef_samples:
  - 0.8261735979215923
  - 0.8681996456570098
  - 0.7877429064344034
  - 0.7856768483630548
  - 0.8419172673178043
  train_matthews_corrcoef_samples_oob:
  - 0.7383164242402684
  - 0.7750093590821848
  - 0.7218539425366164
  - 0.7458974885926437
  - 0.7787151314051729
  train_matthews_corrcoef_weighted:
  - 0.8093455123845336
  - 0.8566529930105553
  - 0.7805100463648061
  - 0.7836045546094047
  - 0.8317677782307978
  train_matthews_corrcoef_weighted_oob:
  - 0.7301554320489773
  - 0.773213002338672
  - 0.7146204256765827
  - 0.7450018935731836
  - 0.7777740887187528
  train_ndgc:
  - 0.9896019968844912
  - 0.9839123460054375
  - 0.9762636435299946
  - 0.9832256414485501
  - 0.9808092843906062
  train_ndgc_oob:
  - 0.9669551339993178
  - 0.9647479700973449
  - 0.9583282968794232
  - 0.9564778570816709
  - 0.9638101395669154
  train_neg_coverage_error:
  - -1.2682926829268293
  - -1.2647058823529411
  - -1.329268292682927
  - -1.284848484848485
  - -1.290909090909091
  train_neg_coverage_error_oob:
  - -1.3658536585365855
  - -1.3529411764705883
  - -1.4146341463414633
  - -1.393939393939394
  - -1.3818181818181818
  train_neg_hamming_loss_macro:
  - -0.049796747967479675
  - -0.039215686274509796
  - -0.057926829268292686
  - -0.05656565656565657
  - -0.044444444444444446
  train_neg_hamming_loss_macro_oob:
  - -0.06910569105691057
  - -0.05882352941176471
  - -0.0741869918699187
  - -0.06565656565656565
  - -0.05858585858585858
  train_neg_hamming_loss_micro:
  - -0.049796747967479675
  - -0.0392156862745098
  - -0.057926829268292686
  - -0.05656565656565657
  - -0.044444444444444446
  train_neg_hamming_loss_micro_oob:
  - -0.06910569105691057
  - -0.058823529411764705
  - -0.0741869918699187
  - -0.06565656565656566
  - -0.05858585858585859
  train_neg_hamming_loss_samples:
  - -0.04979674796747967
  - -0.0392156862745098
  - -0.057926829268292686
  - -0.056565656565656555
  - -0.04444444444444444
  train_neg_hamming_loss_samples_oob:
  - -0.06910569105691056
  - -0.058823529411764705
  - -0.0741869918699187
  - -0.06565656565656565
  - -0.05858585858585858
  train_neg_hamming_loss_weighted:
  - -0.057517291590826365
  - -0.048681541582150094
  - -0.06653250030037247
  - -0.06470676918438112
  - -0.05087878787878788
  train_neg_hamming_loss_weighted_oob:
  - -0.0824232496056304
  - -0.06803824978267169
  - -0.0877387961071729
  - -0.07884818332579527
  - -0.0679090909090909
  train_neg_label_ranking_loss:
  - -0.007926829268292683
  - -0.01264705882352941
  - -0.017225609756097562
  - -0.012424242424242423
  - -0.01393939393939394
  train_neg_label_ranking_loss_oob:
  - -0.026134823848238484
  - -0.030441176470588235
  - -0.034061653116531164
  - -0.03361952861952862
  - -0.03067340067340068
  train_precision_macro:
  - 0.9502032520325203
  - 0.9607843137254903
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555556
  train_precision_macro_oob:
  - 0.9308943089430896
  - 0.9411764705882354
  - 0.9258130081300814
  - 0.9343434343434344
  - 0.9414141414141414
  train_precision_micro:
  - 0.9502032520325203
  - 0.9607843137254902
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555556
  train_precision_micro_oob:
  - 0.9308943089430894
  - 0.9411764705882353
  - 0.9258130081300813
  - 0.9343434343434344
  - 0.9414141414141414
  train_precision_samples:
  - 0.9502032520325202
  - 0.9607843137254901
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555557
  train_precision_samples_oob:
  - 0.9308943089430896
  - 0.9411764705882353
  - 0.9258130081300814
  - 0.9343434343434343
  - 0.9414141414141415
  train_precision_weighted:
  - 0.9424827084091736
  - 0.9513184584178499
  - 0.9334674996996276
  - 0.9352932308156188
  - 0.949121212121212
  train_precision_weighted_oob:
  - 0.9175767503943696
  - 0.9319617502173283
  - 0.912261203892827
  - 0.9211518166742048
  - 0.9320909090909091
  train_recall_macro:
  - 0.9502032520325203
  - 0.9607843137254903
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555556
  train_recall_macro_oob:
  - 0.9308943089430896
  - 0.9411764705882354
  - 0.9258130081300814
  - 0.9343434343434344
  - 0.9414141414141414
  train_recall_micro:
  - 0.9502032520325203
  - 0.9607843137254902
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555556
  train_recall_micro_oob:
  - 0.9308943089430894
  - 0.9411764705882353
  - 0.9258130081300813
  - 0.9343434343434344
  - 0.9414141414141414
  train_recall_samples:
  - 0.9502032520325202
  - 0.9607843137254901
  - 0.9420731707317073
  - 0.9434343434343434
  - 0.9555555555555557
  train_recall_samples_oob:
  - 0.9308943089430896
  - 0.9411764705882353
  - 0.9258130081300814
  - 0.9343434343434343
  - 0.9414141414141415
  train_recall_weighted:
  - 0.9424827084091736
  - 0.9513184584178499
  - 0.9334674996996276
  - 0.9352932308156188
  - 0.949121212121212
  train_recall_weighted_oob:
  - 0.9175767503943696
  - 0.9319617502173283
  - 0.912261203892827
  - 0.9211518166742048
  - 0.9320909090909091
  train_roc_auc_macro:
  - 0.9943572788571317
  - 0.9932473455827591
  - 0.9923318629799064
  - 0.9927348379293659
  - 0.9955593285681044
  train_roc_auc_macro_oob:
  - 0.9819658809071393
  - 0.9779035129110705
  - 0.970749198439106
  - 0.9772938746661933
  - 0.9789434307096743
  train_roc_auc_micro:
  - 0.9910632025059886
  - 0.9920048718427987
  - 0.9886150760361543
  - 0.9904722269514279
  - 0.9924493670886076
  train_roc_auc_micro_oob:
  - 0.978765177941709
  - 0.9787761303820899
  - 0.9715156140605388
  - 0.9777285940386786
  - 0.9797215189873417
  train_roc_auc_samples:
  - 0.9920731707317072
  - 0.9873529411764705
  - 0.9827743902439026
  - 0.9875757575757576
  - 0.9860606060606062
  train_roc_auc_samples_oob:
  - 0.9738651761517616
  - 0.9695588235294117
  - 0.9659383468834688
  - 0.9663804713804715
  - 0.9693265993265994
  train_roc_auc_weighted:
  - 0.9922282401954966
  - 0.9918201948808661
  - 0.9885966700899762
  - 0.9897789386973529
  - 0.9934172089376164
  train_roc_auc_weighted_oob:
  - 0.9774132578672778
  - 0.9753966660545612
  - 0.9653031887777668
  - 0.9720064768019689
  - 0.9762523943658385
start: 2023-12-21 06:53:22.244051
wrapper: null
