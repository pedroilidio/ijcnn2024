active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b9AZmZmZmYWwACZmZmZmfm/wJmZmZmZEUDAmZmZmZkRQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 21:42:02.033437
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__0
  params: {}
hash: 2188f94f8a26b2aac244ab52cdbbcc6ced0183d85832e2a90d0facf9f2cd1f98
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2188f94_20231222T214131378227_embedding__0_scene.yml
results:
  fit_time:
  - 1.40097975730896
  - 1.3881335258483887
  - 1.4059715270996094
  - 1.3555481433868408
  - 1.419126272201538
  score_time:
  - 3.6439859867095947
  - 3.5215673446655273
  - 3.6620283126831055
  - 3.561800003051758
  - 3.556703805923462
  test_average_precision_macro:
  - 0.8473980918053695
  - 0.8396354741534097
  - 0.8350675309871143
  - 0.8592398416795964
  - 0.8519996068457582
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8556975873188574
  - 0.8484300181314758
  - 0.8385522365854617
  - 0.8655279193321579
  - 0.850367732778531
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8806590752242927
  - 0.8733401779603013
  - 0.8670807453416148
  - 0.8863382250174703
  - 0.8864779874213837
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8361409911472064
  - 0.8273395679944788
  - 0.8237940185003206
  - 0.8493291046661834
  - 0.8434793117047149
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8253968253968255
  - 0.827857631759069
  - 0.8247066942719116
  - 0.8266946191474495
  - 0.8225017470300489
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8253968253968254
  - 0.8278576317590691
  - 0.8247066942719117
  - 0.8266946191474493
  - 0.822501747030049
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8253968253968255
  - 0.8278576317590691
  - 0.8247066942719118
  - 0.8266946191474495
  - 0.822501747030049
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8224717928964642
  - 0.8250132060259197
  - 0.8219061234787415
  - 0.8237084166219754
  - 0.8198236408510157
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7034066117638976
  - 0.7070355564273862
  - 0.7023617102294923
  - 0.7053950401041188
  - 0.6991590592766112
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7027027027027027
  - 0.7062773722627738
  - 0.7017028772753964
  - 0.7045860631328171
  - 0.6985163204747774
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7055604850635905
  - 0.7092989146377234
  - 0.70452528837622
  - 0.7082958969751421
  - 0.7019566736547868
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6992383883862866
  - 0.7029395769023191
  - 0.6983767970921299
  - 0.7011185553340042
  - 0.695374674445711
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8806590752242925
  - 0.8733401779603011
  - 0.8670807453416147
  - 0.8863382250174703
  - 0.8864779874213833
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.10523421096437564
  - 0.1173091753814182
  - 0.08416086292691928
  - 0.12985572717860547
  - 0.07485888240837352
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12642921264266438
  - 0.14965081472376518
  - 0.11977933840538528
  - 0.17887189751514457
  - 0.13003915823756693
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.020703933747412008
  - 0.028747433264887063
  - 0.018633540372670808
  - 0.03961712074654304
  - 0.023196878541021704
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.09744014175726318
  - 0.10834278672175297
  - 0.079286965182839
  - 0.12257166504405229
  - 0.07290129278233717
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9125793863937788
  - 0.9059235675283782
  - 0.9017013074118981
  - 0.9163200531572685
  - 0.9169818067016109
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4078674948240166
  - -1.4004106776180698
  - -1.4389233954451346
  - -1.4109014675052411
  - -1.419287211740042
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17460317460317462
  - -0.17214236824093088
  - -0.17529330572808832
  - -0.17330538085255065
  - -0.17749825296995111
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1746031746031746
  - -0.17214236824093088
  - -0.17529330572808835
  - -0.17330538085255065
  - -0.1774982529699511
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1746031746031746
  - -0.17214236824093085
  - -0.17529330572808832
  - -0.17330538085255068
  - -0.17749825296995106
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.17752820710353573
  - -0.17498679397408046
  - -0.17809387652125855
  - -0.1762915833780248
  - -0.18017635914898428
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06589026915113873
  - -0.06781314168377824
  - -0.0725672877846791
  - -0.06378406708595388
  - -0.06273584905660377
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8253968253968255
  - 0.827857631759069
  - 0.8247066942719116
  - 0.8266946191474495
  - 0.8225017470300489
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8253968253968254
  - 0.8278576317590691
  - 0.8247066942719117
  - 0.8266946191474493
  - 0.822501747030049
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8253968253968255
  - 0.8278576317590691
  - 0.8247066942719118
  - 0.8266946191474495
  - 0.822501747030049
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8224717928964642
  - 0.8250132060259197
  - 0.8219061234787415
  - 0.8237084166219754
  - 0.8198236408510157
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8253968253968255
  - 0.827857631759069
  - 0.8247066942719116
  - 0.8266946191474495
  - 0.8225017470300489
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8253968253968254
  - 0.8278576317590691
  - 0.8247066942719117
  - 0.8266946191474493
  - 0.822501747030049
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8253968253968255
  - 0.8278576317590691
  - 0.8247066942719118
  - 0.8266946191474495
  - 0.822501747030049
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8224717928964642
  - 0.8250132060259197
  - 0.8219061234787415
  - 0.8237084166219754
  - 0.8198236408510157
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9495539468664912
  - 0.948654563524513
  - 0.9431709292890581
  - 0.9490360973599725
  - 0.9500427834231563
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9573993256920444
  - 0.9564760713696884
  - 0.9510665105846818
  - 0.9567617154714937
  - 0.9534323944484329
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9341097308488614
  - 0.9321868583162218
  - 0.927432712215321
  - 0.9362159329140461
  - 0.9372641509433963
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9442548788300819
  - 0.9435396722008246
  - 0.9377496334657345
  - 0.9442564466778679
  - 0.9461478944901756
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.935442382046587
  - 0.9336027339163198
  - 0.9374339554830531
  - 0.9339742711331227
  - 0.9331256422072799
  train_average_precision_macro_oob:
  - 0.8399988642957649
  - 0.8315373504371872
  - 0.8360777721553253
  - 0.8302481971389576
  - 0.8234812867794506
  train_average_precision_micro:
  - 0.9357158302160444
  - 0.9352061166993879
  - 0.9383201667613237
  - 0.9336677051710407
  - 0.9345993381169246
  train_average_precision_micro_oob:
  - 0.8461329166754975
  - 0.8380112094213013
  - 0.8430772324057278
  - 0.837410420350418
  - 0.8351460932460516
  train_average_precision_samples:
  - 0.9366424116424116
  - 0.9371180555555555
  - 0.9397695772695773
  - 0.9325388601036271
  - 0.9413644214162349
  train_average_precision_samples_oob:
  - 0.8716735966735967
  - 0.8735807291666667
  - 0.8744845807345807
  - 0.8676208981001726
  - 0.8785751295336788
  train_average_precision_weighted:
  - 0.9306198566929633
  - 0.9291394228305069
  - 0.93316780505365
  - 0.929287069259463
  - 0.9282964364406807
  train_average_precision_weighted_oob:
  - 0.8293231875075969
  - 0.820184763134328
  - 0.8246706527528599
  - 0.8187542941445664
  - 0.8115387172468969
  train_f1_macro:
  - 0.8452875952875952
  - 0.8447916666666666
  - 0.8450277200277201
  - 0.8446459412780657
  - 0.8455958549222796
  train_f1_macro_oob:
  - 0.8247574497574496
  - 0.8244791666666668
  - 0.8253638253638252
  - 0.8258203799654577
  - 0.8267702936096718
  train_f1_micro:
  - 0.8452875952875953
  - 0.8447916666666667
  - 0.84502772002772
  - 0.8446459412780656
  - 0.8455958549222798
  train_f1_micro_oob:
  - 0.8247574497574498
  - 0.8244791666666667
  - 0.8253638253638254
  - 0.8258203799654577
  - 0.8267702936096718
  train_f1_samples:
  - 0.8452875952875953
  - 0.8447916666666668
  - 0.8450277200277201
  - 0.8446459412780658
  - 0.84559585492228
  train_f1_samples_oob:
  - 0.8247574497574498
  - 0.8244791666666668
  - 0.8253638253638255
  - 0.8258203799654578
  - 0.826770293609672
  train_f1_weighted:
  - 0.8416265654061692
  - 0.8412150930851063
  - 0.8413778214310129
  - 0.8410160348795569
  - 0.8422911786686996
  train_f1_weighted_oob:
  - 0.8218551953448039
  - 0.8216619318181818
  - 0.822655995528336
  - 0.8229206369876563
  - 0.8240669311678345
  train_jaccard_macro:
  - 0.7333322714306353
  - 0.7325126677981864
  - 0.7329349649199214
  - 0.732319080955382
  - 0.733640989489499
  train_jaccard_macro_oob:
  - 0.7024998851684411
  - 0.7020577799380159
  - 0.7033145761442171
  - 0.7040481196963682
  - 0.7053717927444828
  train_jaccard_micro:
  - 0.732033008252063
  - 0.7312894499549143
  - 0.7316432910822771
  - 0.731071081545706
  - 0.7324955116696589
  train_jaccard_micro_oob:
  - 0.7017763691309796
  - 0.7013735046521932
  - 0.7026548672566372
  - 0.7033169081415018
  - 0.7046960105991462
  train_jaccard_samples:
  - 0.7396668646668645
  - 0.7388020833333332
  - 0.7390109890109888
  - 0.7382926227485812
  - 0.7397853441894893
  train_jaccard_samples_oob:
  - 0.7049178299178297
  - 0.7045262896825395
  - 0.7057717057717056
  - 0.7065013570194916
  - 0.7079200592153958
  train_jaccard_weighted:
  - 0.7279459704106411
  - 0.7272646702569286
  - 0.7275897728878905
  - 0.7270032555000153
  - 0.7287822660582196
  train_jaccard_weighted_oob:
  - 0.6983532352055911
  - 0.6980505749991818
  - 0.6994626009859792
  - 0.6999040720245601
  - 0.701526104231937
  train_label_ranking_average_precision_score:
  - 0.9366424116424111
  - 0.937118055555555
  - 0.9397695772695769
  - 0.9325388601036265
  - 0.9413644214162344
  train_label_ranking_average_precision_score_oob:
  - 0.8716735966735966
  - 0.8735807291666666
  - 0.8744845807345804
  - 0.8676208981001723
  - 0.8785751295336782
  train_matthews_corrcoef_macro:
  - 0.33141316248783287
  - 0.33225188216553275
  - 0.3289216044154197
  - 0.32419628240317117
  - 0.32763051897833473
  train_matthews_corrcoef_macro_oob:
  - 0.11276018164967211
  - 0.10400105899276901
  - 0.10076425969827445
  - 0.10548373236507323
  - 0.1168678556010254
  train_matthews_corrcoef_micro:
  - 0.3392455054228208
  - 0.3374290345429109
  - 0.3368788628402862
  - 0.3312710048952815
  - 0.3365589634326794
  train_matthews_corrcoef_micro_oob:
  - 0.13535588029712872
  - 0.13536552823249068
  - 0.14399291443436055
  - 0.14399835584987158
  - 0.15486946590020756
  train_matthews_corrcoef_samples:
  - 0.14441495709380012
  - 0.1424825531812702
  - 0.14147554970897738
  - 0.13703980983445863
  - 0.14118488755466588
  train_matthews_corrcoef_samples_oob:
  - 0.023526461052010058
  - 0.023384045102135948
  - 0.025880838457485476
  - 0.02656213008500899
  - 0.030326332708878086
  train_matthews_corrcoef_weighted:
  - 0.32026643108777963
  - 0.32220219785119153
  - 0.31728669326948944
  - 0.31285773156698216
  - 0.31944028827962184
  train_matthews_corrcoef_weighted_oob:
  - 0.10443571483713399
  - 0.09779609888583267
  - 0.0961535377564359
  - 0.09847448120805921
  - 0.1116262272096374
  train_ndgc:
  - 0.953488956444781
  - 0.95409471604203
  - 0.9558232693317446
  - 0.9505940249981015
  - 0.9569700056871867
  train_ndgc_oob:
  - 0.9054387606741449
  - 0.9069869349286889
  - 0.9076045481942852
  - 0.9021760447659182
  - 0.91050323027055
  train_neg_coverage_error:
  - -1.2546777546777548
  - -1.2572916666666667
  - -1.2380457380457381
  - -1.2621761658031088
  - -1.233160621761658
  train_neg_coverage_error_oob:
  - -1.42983367983368
  - -1.4432291666666666
  - -1.4235966735966736
  - -1.444559585492228
  - -1.4119170984455958
  train_neg_hamming_loss_macro:
  - -0.15471240471240472
  - -0.1552083333333333
  - -0.15497227997227997
  - -0.1553540587219344
  - -0.15440414507772018
  train_neg_hamming_loss_macro_oob:
  - -0.17524255024255023
  - -0.17552083333333335
  - -0.17463617463617465
  - -0.17417962003454232
  - -0.17322970639032817
  train_neg_hamming_loss_micro:
  - -0.15471240471240472
  - -0.15520833333333334
  - -0.15497227997227997
  - -0.15535405872193436
  - -0.1544041450777202
  train_neg_hamming_loss_micro_oob:
  - -0.17524255024255025
  - -0.17552083333333332
  - -0.17463617463617465
  - -0.17417962003454232
  - -0.17322970639032814
  train_neg_hamming_loss_samples:
  - -0.1547124047124047
  - -0.1552083333333333
  - -0.15497227997227994
  - -0.15535405872193433
  - -0.1544041450777202
  train_neg_hamming_loss_samples_oob:
  - -0.17524255024255023
  - -0.1755208333333333
  - -0.17463617463617462
  - -0.1741796200345423
  - -0.17322970639032811
  train_neg_hamming_loss_weighted:
  - -0.1583734345938309
  - -0.1587849069148936
  - -0.15862217856898708
  - -0.15898396512044316
  - -0.15770882133130026
  train_neg_hamming_loss_weighted_oob:
  - -0.17814480465519617
  - -0.1783380681818182
  - -0.17734400447166404
  - -0.1770793630123436
  - -0.1759330688321655
  train_neg_label_ranking_loss:
  - -0.03438149688149689
  - -0.034192708333333335
  - -0.03137993762993763
  - -0.03632124352331606
  - -0.031437823834196896
  train_neg_label_ranking_loss_oob:
  - -0.06903586278586278
  - -0.0709765625
  - -0.06795738045738045
  - -0.07313471502590674
  - -0.06651554404145078
  train_precision_macro:
  - 0.8452875952875952
  - 0.8447916666666666
  - 0.8450277200277201
  - 0.8446459412780657
  - 0.8455958549222796
  train_precision_macro_oob:
  - 0.8247574497574496
  - 0.8244791666666668
  - 0.8253638253638252
  - 0.8258203799654577
  - 0.8267702936096718
  train_precision_micro:
  - 0.8452875952875953
  - 0.8447916666666667
  - 0.84502772002772
  - 0.8446459412780656
  - 0.8455958549222798
  train_precision_micro_oob:
  - 0.8247574497574498
  - 0.8244791666666667
  - 0.8253638253638254
  - 0.8258203799654577
  - 0.8267702936096718
  train_precision_samples:
  - 0.8452875952875953
  - 0.8447916666666668
  - 0.8450277200277201
  - 0.8446459412780658
  - 0.84559585492228
  train_precision_samples_oob:
  - 0.8247574497574498
  - 0.8244791666666668
  - 0.8253638253638255
  - 0.8258203799654578
  - 0.826770293609672
  train_precision_weighted:
  - 0.8416265654061692
  - 0.8412150930851063
  - 0.8413778214310129
  - 0.8410160348795569
  - 0.8422911786686996
  train_precision_weighted_oob:
  - 0.8218551953448039
  - 0.8216619318181818
  - 0.822655995528336
  - 0.8229206369876563
  - 0.8240669311678345
  train_recall_macro:
  - 0.8452875952875952
  - 0.8447916666666666
  - 0.8450277200277201
  - 0.8446459412780657
  - 0.8455958549222796
  train_recall_macro_oob:
  - 0.8247574497574496
  - 0.8244791666666668
  - 0.8253638253638252
  - 0.8258203799654577
  - 0.8267702936096718
  train_recall_micro:
  - 0.8452875952875953
  - 0.8447916666666667
  - 0.84502772002772
  - 0.8446459412780656
  - 0.8455958549222798
  train_recall_micro_oob:
  - 0.8247574497574498
  - 0.8244791666666667
  - 0.8253638253638254
  - 0.8258203799654577
  - 0.8267702936096718
  train_recall_samples:
  - 0.8452875952875953
  - 0.8447916666666668
  - 0.8450277200277201
  - 0.8446459412780658
  - 0.84559585492228
  train_recall_samples_oob:
  - 0.8247574497574498
  - 0.8244791666666668
  - 0.8253638253638255
  - 0.8258203799654578
  - 0.826770293609672
  train_recall_weighted:
  - 0.8416265654061692
  - 0.8412150930851063
  - 0.8413778214310129
  - 0.8410160348795569
  - 0.8422911786686996
  train_recall_weighted_oob:
  - 0.8218551953448039
  - 0.8216619318181818
  - 0.822655995528336
  - 0.8229206369876563
  - 0.8240669311678345
  train_roc_auc_macro:
  - 0.9733517401249706
  - 0.9736748806809769
  - 0.9759230299119405
  - 0.9738107457081028
  - 0.9747475151644357
  train_roc_auc_macro_oob:
  - 0.9449268467130274
  - 0.9415475304384975
  - 0.9446768806926497
  - 0.9428534519519611
  - 0.9418152478874817
  train_roc_auc_micro:
  - 0.9773881816129802
  - 0.977676784502538
  - 0.9795853241784396
  - 0.9773820946253425
  - 0.9789190780346932
  train_roc_auc_micro_oob:
  - 0.9520530101982908
  - 0.9491978098031302
  - 0.9520619841391017
  - 0.9501275493934701
  - 0.9506879452728857
  train_roc_auc_samples:
  - 0.9656185031185031
  - 0.9658072916666666
  - 0.9686200623700624
  - 0.963678756476684
  - 0.9685621761658031
  train_roc_auc_samples_oob:
  - 0.9309641372141373
  - 0.9290234374999999
  - 0.9320426195426196
  - 0.9268652849740934
  - 0.9334844559585492
  train_roc_auc_weighted:
  - 0.9704581460663051
  - 0.9711561887107618
  - 0.973636218587475
  - 0.9711392165983119
  - 0.9721316580757587
  train_roc_auc_weighted_oob:
  - 0.9398611086089841
  - 0.9363067385109753
  - 0.9395434624124757
  - 0.9375547291039622
  - 0.9365503707099628
start: 2023-12-22 21:41:31.378227
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
