active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZAcAAzczMzMz8PwDNzMzMzPw/AJqZmZmZ6T+AmZmZmZkBwA==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 18:57:38.680058
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__1
  params: {}
hash: fce023082b55c76862d30f1b641717b469e27dc122eb6944ce3dc35c73da4d76
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fce0230_20231221T185726445340_embedding_weak__1_GrampositivePseAAC.yml
results:
  fit_time:
  - 4.11873459815979
  - 4.248727083206177
  - 4.085376262664795
  - 4.262717962265015
  - 3.8075168132781982
  score_time:
  - 1.5256173610687256
  - 1.585392713546753
  - 1.5202877521514893
  - 1.5415215492248535
  - 1.5139696598052979
  test_average_precision_macro:
  - 0.41994303509879466
  - 0.3914058254900416
  - 0.40199544706292867
  - 0.4316715727009136
  - 0.438366357190973
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5304449682488741
  - 0.5593018187761124
  - 0.4940387295657308
  - 0.5078920510138628
  - 0.5443918405728638
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.723270440251572
  - 0.7336601307189541
  - 0.7066993464052287
  - 0.715210355987055
  - 0.7122641509433962
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5112093932770811
  - 0.5072473797755083
  - 0.4922721863385871
  - 0.49838196197047874
  - 0.5410655195758505
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7665094339622641
  - 0.7720588235294117
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584905
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7665094339622641
  - 0.7720588235294118
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584906
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7665094339622641
  - 0.7720588235294118
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584906
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6987362050551797
  - 0.6972206358271463
  - 0.7038834951456311
  - 0.6887656033287101
  - 0.7205411178355285
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6400288306577472
  - 0.6510815815499864
  - 0.6464050442311312
  - 0.6281203795637686
  - 0.655523945720812
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.621414913957935
  - 0.6287425149700598
  - 0.6287425149700598
  - 0.609375
  - 0.6402321083172147
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6377358490566034
  - 0.652287581699346
  - 0.6549019607843134
  - 0.6323624595469255
  - 0.6616352201257859
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.54436228930931
  - 0.5466614530439936
  - 0.5474302818329835
  - 0.5314687313488576
  - 0.5681350389265215
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7232704402515723
  - 0.733660130718954
  - 0.706699346405229
  - 0.715210355987055
  - 0.7122641509433961
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.10412902900449969
  - 0.1283862739383477
  - 0.1290332543628418
  - 0.09705192898573897
  - 0.15013001373445328
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2254485920762712
  - 0.2738804302373423
  - 0.28273602129474124
  - 0.2254056608572069
  - 0.29987898736483176
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.12264150943396226
  - 0.17647058823529413
  - 0.1919348065606826
  - 0.14389676898102832
  - 0.18553459119496857
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.14205094843551985
  - 0.17127157279023836
  - 0.18851782544880694
  - 0.1365234157287677
  - 0.21308610970175437
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7938735739569557
  - 0.8015558815404303
  - 0.7822969788075428
  - 0.7886220131094506
  - 0.785451033761537
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7169811320754718
  - -1.7058823529411764
  - -1.7450980392156863
  - -1.7572815533980584
  - -1.7641509433962264
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23349056603773588
  - -0.22794117647058826
  - -0.22794117647058826
  - -0.24271844660194172
  - -0.2193396226415094
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23349056603773585
  - -0.22794117647058823
  - -0.22794117647058823
  - -0.24271844660194175
  - -0.21933962264150944
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23349056603773585
  - -0.22794117647058823
  - -0.22794117647058823
  - -0.24271844660194175
  - -0.21933962264150944
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.30126379494482025
  - -0.3027793641728536
  - -0.2961165048543689
  - -0.3112343966712898
  - -0.27945888216447134
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2389937106918239
  - -0.23366013071895422
  - -0.24428104575163392
  - -0.244336569579288
  - -0.2547169811320754
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7665094339622641
  - 0.7720588235294117
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584905
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7665094339622641
  - 0.7720588235294118
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584906
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7665094339622641
  - 0.7720588235294118
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584906
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6987362050551797
  - 0.6972206358271463
  - 0.7038834951456311
  - 0.6887656033287101
  - 0.7205411178355285
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7665094339622641
  - 0.7720588235294117
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584905
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7665094339622641
  - 0.7720588235294118
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584906
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7665094339622641
  - 0.7720588235294118
  - 0.7720588235294118
  - 0.7572815533980582
  - 0.7806603773584906
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6987362050551797
  - 0.6972206358271463
  - 0.7038834951456311
  - 0.6887656033287101
  - 0.7205411178355285
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.706717057747721
  - 0.6406315622254204
  - 0.6856558562074303
  - 0.7317316098227378
  - 0.7177955021340827
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7823958704165183
  - 0.7861212796434823
  - 0.7650167117618971
  - 0.7731347913758337
  - 0.7808828764684941
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.761006289308176
  - 0.7663398692810455
  - 0.7557189542483662
  - 0.755663430420712
  - 0.7452830188679247
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7063605939738127
  - 0.6719345633109197
  - 0.6705963873052985
  - 0.6915978918825219
  - 0.7005440929927547
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9989418577188309
  - 0.9991654319711185
  - 0.995221613231239
  - 0.99917243744843
  - 0.9990295494897221
  train_average_precision_macro_oob:
  - 0.4631224850035392
  - 0.46913875288153384
  - 0.45649518805591627
  - 0.44630983785038303
  - 0.4426925239795343
  train_average_precision_micro:
  - 0.9777761664475796
  - 0.9779992525951049
  - 0.9705189656178632
  - 0.9782546315598258
  - 0.9774032359233188
  train_average_precision_micro_oob:
  - 0.5726356424071947
  - 0.5651112766491598
  - 0.5757063475359679
  - 0.5618667398717676
  - 0.5837034301802091
  train_average_precision_samples:
  - 0.9757869249394673
  - 0.9752198241406875
  - 0.9764188649080735
  - 0.974959935897436
  - 0.9771993543179984
  train_average_precision_samples_oob:
  - 0.7269975786924939
  - 0.7496003197442046
  - 0.7320143884892086
  - 0.7385817307692307
  - 0.7405165456012913
  train_average_precision_weighted:
  - 0.9986560288924042
  - 0.9989099631748602
  - 0.9936743260870688
  - 0.9990164430595609
  - 0.9987729512535926
  train_average_precision_weighted_oob:
  - 0.5904375877733348
  - 0.5862420774926309
  - 0.5795295819952534
  - 0.5684036000804532
  - 0.5784589079700271
  train_f1_macro:
  - 0.9249394673123488
  - 0.9130695443645085
  - 0.9160671462829737
  - 0.9152644230769231
  - 0.9225181598062954
  train_f1_macro_oob:
  - 0.7772397094430992
  - 0.7661870503597122
  - 0.7727817745803358
  - 0.7722355769230769
  - 0.7748184019370459
  train_f1_micro:
  - 0.9249394673123487
  - 0.9130695443645084
  - 0.9160671462829736
  - 0.9152644230769231
  - 0.9225181598062954
  train_f1_micro_oob:
  - 0.7772397094430993
  - 0.7661870503597122
  - 0.7727817745803357
  - 0.7722355769230769
  - 0.774818401937046
  train_f1_samples:
  - 0.9249394673123487
  - 0.9130695443645084
  - 0.9160671462829736
  - 0.9152644230769231
  - 0.9225181598062954
  train_f1_samples_oob:
  - 0.7772397094430993
  - 0.7661870503597122
  - 0.7727817745803357
  - 0.7722355769230769
  - 0.774818401937046
  train_f1_weighted:
  - 0.9229536467678159
  - 0.9101518784972022
  - 0.9150393970537858
  - 0.9132545086492455
  - 0.923214938944728
  train_f1_weighted_oob:
  - 0.7139024857595764
  - 0.699566061436565
  - 0.7081363480644056
  - 0.7057358759661391
  - 0.7097334239146214
  train_jaccard_macro:
  - 0.8643639181001406
  - 0.8452971968851183
  - 0.8509460986714341
  - 0.8495255453275263
  - 0.8621749542059021
  train_jaccard_macro_oob:
  - 0.651785565927421
  - 0.6385384059644745
  - 0.6465372201799386
  - 0.6463011216774899
  - 0.6493387024465236
  train_jaccard_micro:
  - 0.8603603603603603
  - 0.8400441257584115
  - 0.8451327433628318
  - 0.8437673130193906
  - 0.8561797752808988
  train_jaccard_micro_oob:
  - 0.6356435643564357
  - 0.6209912536443148
  - 0.6297020029311187
  - 0.6289769946157612
  - 0.6324110671936759
  train_jaccard_samples:
  - 0.8802259887005649
  - 0.8612310151878497
  - 0.866027178257394
  - 0.8647435897435898
  - 0.8760290556900725
  train_jaccard_samples_oob:
  - 0.651008878127522
  - 0.634212629896083
  - 0.6457234212629894
  - 0.6423076923076921
  - 0.6461662631154154
  train_jaccard_weighted:
  - 0.8609906291110431
  - 0.8397062814083557
  - 0.8490971155090761
  - 0.8455975705816015
  - 0.8633089364895968
  train_jaccard_weighted_oob:
  - 0.5596043661184257
  - 0.5431037717341477
  - 0.5535120584120903
  - 0.5505533116951763
  - 0.5553185992837639
  train_label_ranking_average_precision_score:
  - 0.9757869249394672
  - 0.9752198241406872
  - 0.9764188649080733
  - 0.9749599358974357
  - 0.9771993543179982
  train_label_ranking_average_precision_score_oob:
  - 0.7269975786924939
  - 0.7496003197442046
  - 0.7320143884892082
  - 0.73858173076923
  - 0.740516545601291
  train_matthews_corrcoef_macro:
  - 0.5772737301758698
  - 0.5376078228452751
  - 0.5453298646139421
  - 0.5391229673044564
  - 0.5589331506738578
  train_matthews_corrcoef_macro_oob:
  - 0.14917963852747118
  - 0.11040191373538981
  - 0.13142076027847469
  - 0.12937426256157408
  - 0.1416885764693785
  train_matthews_corrcoef_micro:
  - 0.7990786608518813
  - 0.7655232815955275
  - 0.7738599223046125
  - 0.771565027481026
  - 0.7924401012069557
  train_matthews_corrcoef_micro_oob:
  - 0.2872163310611475
  - 0.22530604652773914
  - 0.26270662468702
  - 0.25513247526481875
  - 0.27465445455230125
  train_matthews_corrcoef_samples:
  - 0.70637300437668
  - 0.6580304975401333
  - 0.670020905213994
  - 0.664849399685552
  - 0.6956644093868244
  train_matthews_corrcoef_samples_oob:
  - 0.14990480291167788
  - 0.10988337459243624
  - 0.14047326203642596
  - 0.12478529712144942
  - 0.13537695787535828
  train_matthews_corrcoef_weighted:
  - 0.775436704927169
  - 0.7319440659821154
  - 0.7431165387008333
  - 0.7387576625522178
  - 0.7636296148981233
  train_matthews_corrcoef_weighted_oob:
  - 0.21558202901197648
  - 0.15889404764640014
  - 0.18680683992190328
  - 0.18544755161832338
  - 0.20258604329218738
  train_ndgc:
  - 0.9818306610346412
  - 0.9815166849228967
  - 0.9823374337917506
  - 0.9811193886059741
  - 0.982892146962862
  train_ndgc_oob:
  - 0.7970787347514453
  - 0.8137551356106948
  - 0.8007363275599932
  - 0.8054533916176422
  - 0.8071970310152692
  train_neg_coverage_error:
  - -1.0968523002421307
  - -1.091127098321343
  - -1.0887290167865706
  - -1.0913461538461537
  - -1.0920096852300243
  train_neg_coverage_error_oob:
  - -1.7070217917675545
  - -1.65947242206235
  - -1.6978417266187051
  - -1.6778846153846154
  - -1.6779661016949152
  train_neg_hamming_loss_macro:
  - -0.07506053268765134
  - -0.08693045563549161
  - -0.08393285371702638
  - -0.08473557692307693
  - -0.0774818401937046
  train_neg_hamming_loss_macro_oob:
  - -0.22276029055690072
  - -0.23381294964028776
  - -0.22721822541966427
  - -0.22776442307692307
  - -0.225181598062954
  train_neg_hamming_loss_micro:
  - -0.07506053268765134
  - -0.08693045563549161
  - -0.08393285371702638
  - -0.08473557692307693
  - -0.0774818401937046
  train_neg_hamming_loss_micro_oob:
  - -0.22276029055690072
  - -0.23381294964028776
  - -0.22721822541966427
  - -0.22776442307692307
  - -0.22518159806295399
  train_neg_hamming_loss_samples:
  - -0.07506053268765134
  - -0.08693045563549161
  - -0.08393285371702638
  - -0.08473557692307693
  - -0.0774818401937046
  train_neg_hamming_loss_samples_oob:
  - -0.22276029055690072
  - -0.23381294964028776
  - -0.22721822541966427
  - -0.22776442307692307
  - -0.22518159806295399
  train_neg_hamming_loss_weighted:
  - -0.07704635323218421
  - -0.08984812150279776
  - -0.08496060294621445
  - -0.08674549135075452
  - -0.07678506105527201
  train_neg_hamming_loss_weighted_oob:
  - -0.2860975142404236
  - -0.3004339385634349
  - -0.2918636519355944
  - -0.2942641240338609
  - -0.2902665760853787
  train_neg_label_ranking_loss:
  - -0.028853914447134785
  - -0.027577937649880094
  - -0.02697841726618705
  - -0.028846153846153848
  - -0.027239709443099273
  train_neg_label_ranking_loss_oob:
  - -0.23224374495560934
  - -0.21682653876898478
  - -0.2296163069544364
  - -0.22455929487179485
  - -0.22195318805488295
  train_precision_macro:
  - 0.9249394673123488
  - 0.9130695443645085
  - 0.9160671462829737
  - 0.9152644230769231
  - 0.9225181598062954
  train_precision_macro_oob:
  - 0.7772397094430992
  - 0.7661870503597122
  - 0.7727817745803358
  - 0.7722355769230769
  - 0.7748184019370459
  train_precision_micro:
  - 0.9249394673123487
  - 0.9130695443645084
  - 0.9160671462829736
  - 0.9152644230769231
  - 0.9225181598062954
  train_precision_micro_oob:
  - 0.7772397094430993
  - 0.7661870503597122
  - 0.7727817745803357
  - 0.7722355769230769
  - 0.774818401937046
  train_precision_samples:
  - 0.9249394673123487
  - 0.9130695443645084
  - 0.9160671462829736
  - 0.9152644230769231
  - 0.9225181598062954
  train_precision_samples_oob:
  - 0.7772397094430993
  - 0.7661870503597122
  - 0.7727817745803357
  - 0.7722355769230769
  - 0.774818401937046
  train_precision_weighted:
  - 0.9229536467678159
  - 0.9101518784972022
  - 0.9150393970537858
  - 0.9132545086492455
  - 0.923214938944728
  train_precision_weighted_oob:
  - 0.7139024857595764
  - 0.699566061436565
  - 0.7081363480644056
  - 0.7057358759661391
  - 0.7097334239146214
  train_recall_macro:
  - 0.9249394673123488
  - 0.9130695443645085
  - 0.9160671462829737
  - 0.9152644230769231
  - 0.9225181598062954
  train_recall_macro_oob:
  - 0.7772397094430992
  - 0.7661870503597122
  - 0.7727817745803358
  - 0.7722355769230769
  - 0.7748184019370459
  train_recall_micro:
  - 0.9249394673123487
  - 0.9130695443645084
  - 0.9160671462829736
  - 0.9152644230769231
  - 0.9225181598062954
  train_recall_micro_oob:
  - 0.7772397094430993
  - 0.7661870503597122
  - 0.7727817745803357
  - 0.7722355769230769
  - 0.774818401937046
  train_recall_samples:
  - 0.9249394673123487
  - 0.9130695443645084
  - 0.9160671462829736
  - 0.9152644230769231
  - 0.9225181598062954
  train_recall_samples_oob:
  - 0.7772397094430993
  - 0.7661870503597122
  - 0.7727817745803357
  - 0.7722355769230769
  - 0.774818401937046
  train_recall_weighted:
  - 0.9229536467678159
  - 0.9101518784972022
  - 0.9150393970537858
  - 0.9132545086492455
  - 0.923214938944728
  train_recall_weighted_oob:
  - 0.7139024857595764
  - 0.699566061436565
  - 0.7081363480644056
  - 0.7057358759661391
  - 0.7097334239146214
  train_roc_auc_macro:
  - 0.999503516507515
  - 0.9995914393173708
  - 0.9987513586253299
  - 0.999642485980911
  - 0.999556029241853
  train_roc_auc_macro_oob:
  - 0.7243131316405289
  - 0.7316931054465294
  - 0.7282981625344548
  - 0.7297093591497734
  - 0.6989876698282546
  train_roc_auc_micro:
  - 0.9824211885552286
  - 0.9844971001221001
  - 0.9828468406593407
  - 0.9826142219696331
  - 0.9814444800434956
  train_roc_auc_micro_oob:
  - 0.8041204283536734
  - 0.8063034188034188
  - 0.8069864163614163
  - 0.8016274086646646
  - 0.8078777463858873
  train_roc_auc_samples:
  - 0.9711460855528653
  - 0.9724220623501199
  - 0.9730215827338129
  - 0.9711538461538461
  - 0.9727602905569007
  train_roc_auc_samples_oob:
  - 0.7677562550443907
  - 0.7831734612310152
  - 0.7703836930455635
  - 0.7754407051282051
  - 0.7780468119451172
  train_roc_auc_weighted:
  - 0.9993603170991187
  - 0.9994502146629758
  - 0.9983470366563891
  - 0.9995653714665756
  - 0.9994303340782361
  train_roc_auc_weighted_oob:
  - 0.7415492073741962
  - 0.7492855553847819
  - 0.7511973470119588
  - 0.7366816149761848
  - 0.7458713318501555
start: 2023-12-21 18:57:26.445340
wrapper: null
