active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j8AMjMzMzPjv8CZmZmZmRFAAJmZmZmZ+b+AzMzMzMwMwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 16:06:08.692895
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba_weak__4
  params: {}
hash: 841e8a715d5db96351ebc65d31c507216eb8c3df89976ba23330ddb932f16113
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/841e8a7_20231222T160523283874_proba_weak__4_scene.yml
results:
  fit_time:
  - 12.287705659866333
  - 12.366822957992554
  - 12.40414023399353
  - 12.249837398529053
  - 12.610212564468384
  score_time:
  - 5.075567960739136
  - 4.997868061065674
  - 4.884684801101685
  - 4.809621334075928
  - 5.160352468490601
  test_average_precision_macro:
  - 0.8464446748252344
  - 0.8602512235132928
  - 0.8267067365856433
  - 0.8869563913216787
  - 0.8578157831096848
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8400893785416614
  - 0.8614246986331462
  - 0.8157513306993928
  - 0.8860038181816012
  - 0.8565279365225846
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8898611111111111
  - 0.89033540802213
  - 0.8710691823899371
  - 0.9014837819185646
  - 0.8903092783505153
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.832618466824227
  - 0.8516489914351448
  - 0.8155664090726948
  - 0.8796887914607657
  - 0.8469125601336877
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9243055555555556
  - 0.9280774550484093
  - 0.9157931516422081
  - 0.932712215320911
  - 0.9292096219931271
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9243055555555556
  - 0.9280774550484094
  - 0.9157931516422082
  - 0.932712215320911
  - 0.9292096219931272
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9243055555555555
  - 0.9280774550484093
  - 0.9157931516422082
  - 0.932712215320911
  - 0.9292096219931271
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9181438664097623
  - 0.9239803467464377
  - 0.9105898351181371
  - 0.9293418075015649
  - 0.9244825381603132
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.864126347479386
  - 0.8678085031407409
  - 0.8480377428077479
  - 0.8755434320567145
  - 0.8708301796317103
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8592640413169786
  - 0.8658064516129033
  - 0.8446664518208186
  - 0.8739088263821533
  - 0.8677792041078306
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8824900793650793
  - 0.8879668049792531
  - 0.8680243585903963
  - 0.8946071182096026
  - 0.8892488954344623
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8538994826124161
  - 0.8608693188639147
  - 0.8393677907949364
  - 0.8696846195368969
  - 0.862803211693695
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8898611111111109
  - 0.8903354080221296
  - 0.8710691823899369
  - 0.9014837819185645
  - 0.890309278350515
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7455574245082937
  - 0.7512516027873515
  - 0.7132984908395099
  - 0.7674815485547234
  - 0.7581040028400814
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7345847302697035
  - 0.7437542479055214
  - 0.7026983861465986
  - 0.7623490632954545
  - 0.7483536880200289
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7271551539971419
  - 0.7245131502213494
  - 0.6876613187575763
  - 0.7473574864617191
  - 0.7312886240473397
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.727786587187193
  - 0.7402441555562117
  - 0.6991638686193495
  - 0.7579806084653881
  - 0.744238728212921
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9187097013915817
  - 0.9191731273414779
  - 0.9047685598884311
  - 0.9273628600506455
  - 0.9188668560328271
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3916666666666666
  - -1.383817427385892
  - -1.469601677148847
  - -1.3519668737060042
  - -1.377319587628866
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07569444444444444
  - -0.0719225449515906
  - -0.08420684835779176
  - -0.06728778467908902
  - -0.07079037800687285
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07569444444444444
  - -0.07192254495159059
  - -0.08420684835779176
  - -0.06728778467908902
  - -0.07079037800687285
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07569444444444444
  - -0.07192254495159059
  - -0.08420684835779176
  - -0.06728778467908902
  - -0.07079037800687284
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08185613359023763
  - -0.07601965325356237
  - -0.089410164881863
  - -0.07065819249843518
  - -0.07551746183968673
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06067708333333333
  - -0.061929460580912865
  - -0.07458071278825996
  - -0.05481366459627329
  - -0.061546391752577326
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9243055555555556
  - 0.9280774550484093
  - 0.9157931516422081
  - 0.932712215320911
  - 0.9292096219931271
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9243055555555556
  - 0.9280774550484094
  - 0.9157931516422082
  - 0.932712215320911
  - 0.9292096219931272
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9243055555555555
  - 0.9280774550484093
  - 0.9157931516422082
  - 0.932712215320911
  - 0.9292096219931271
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9181438664097623
  - 0.9239803467464377
  - 0.9105898351181371
  - 0.9293418075015649
  - 0.9244825381603132
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9243055555555556
  - 0.9280774550484093
  - 0.9157931516422081
  - 0.932712215320911
  - 0.9292096219931271
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9243055555555556
  - 0.9280774550484094
  - 0.9157931516422082
  - 0.932712215320911
  - 0.9292096219931272
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9243055555555555
  - 0.9280774550484093
  - 0.9157931516422082
  - 0.932712215320911
  - 0.9292096219931271
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9181438664097623
  - 0.9239803467464377
  - 0.9105898351181371
  - 0.9293418075015649
  - 0.9244825381603132
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9468021586325345
  - 0.9540656521014563
  - 0.9361405159059174
  - 0.9627967018234692
  - 0.9501317885531625
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.95113432063583
  - 0.9579336648135097
  - 0.9405028199823422
  - 0.964886845136977
  - 0.9548605039731111
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9393229166666667
  - 0.9380705394190871
  - 0.92541928721174
  - 0.9451863354037267
  - 0.9384536082474227
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9415677362466262
  - 0.950281298348294
  - 0.9302045624610561
  - 0.959491361038
  - 0.9459242580986194
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.999189169635697
  - 0.9987492630373218
  - 0.9984421684814487
  - 0.9985717876886843
  - 0.9983144546529079
  train_average_precision_macro_oob:
  - 0.9972364399444856
  - 0.9955416446249515
  - 0.9947417497619774
  - 0.9961689835308527
  - 0.9956522886507752
  train_average_precision_micro:
  - 0.9990844801476355
  - 0.9988882667977355
  - 0.9985686624912687
  - 0.9987192773143138
  - 0.9983829217362045
  train_average_precision_micro_oob:
  - 0.9972515021187905
  - 0.9957159334648927
  - 0.9952751189379644
  - 0.9964856390991682
  - 0.9957766195578299
  train_average_precision_samples:
  - 0.9986161563743298
  - 0.9987012987012988
  - 0.9981433506044906
  - 0.9988738738738739
  - 0.998482483524107
  train_average_precision_samples_oob:
  - 0.9966268811624286
  - 0.995021645021645
  - 0.9954663212435233
  - 0.9963184338184338
  - 0.9961845300034685
  train_average_precision_weighted:
  - 0.9991323325839594
  - 0.9986378436911956
  - 0.9982835669259228
  - 0.9984227915543539
  - 0.9981879555480332
  train_average_precision_weighted_oob:
  - 0.997072413192443
  - 0.995307699973313
  - 0.9942844725944875
  - 0.9959394700127958
  - 0.9954692925526208
  train_f1_macro:
  - 0.9959349593495935
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687457
  - 0.995837669094693
  train_f1_macro_oob:
  - 0.9897941532606817
  - 0.9901298701298703
  - 0.9881692573402417
  - 0.989085239085239
  - 0.9902878945542838
  train_f1_micro:
  - 0.9959349593495935
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687456
  - 0.9958376690946931
  train_f1_micro_oob:
  - 0.9897941532606815
  - 0.9901298701298701
  - 0.9881692573402417
  - 0.989085239085239
  - 0.9902878945542838
  train_f1_samples:
  - 0.9959349593495934
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687456
  - 0.9958376690946931
  train_f1_samples_oob:
  - 0.9897941532606815
  - 0.9901298701298701
  - 0.9881692573402419
  - 0.989085239085239
  - 0.9902878945542838
  train_f1_weighted:
  - 0.9958359100387775
  - 0.9949427855856083
  - 0.994764758817941
  - 0.9955299948050069
  - 0.9957026297220402
  train_f1_weighted_oob:
  - 0.9896146420836827
  - 0.989865233847834
  - 0.9879630813348674
  - 0.9888242333868241
  - 0.9900586377670673
  train_jaccard_macro:
  - 0.9919131800124671
  - 0.9901889140833123
  - 0.9898719541940314
  - 0.9913870449670766
  - 0.9917178657018383
  train_jaccard_macro_oob:
  - 0.9798249829421851
  - 0.9804930285475986
  - 0.9766624404863928
  - 0.9784485467011425
  - 0.9807879003039167
  train_jaccard_micro:
  - 0.9919028340080972
  - 0.9901783406565003
  - 0.9898616719649455
  - 0.9913748490598585
  - 0.9917098445595854
  train_jaccard_micro_oob:
  - 0.9797945205479452
  - 0.9804526748971193
  - 0.9766151745327302
  - 0.9784061696658097
  - 0.9807626245276537
  train_jaccard_samples:
  - 0.993216695084884
  - 0.9916883116883117
  - 0.9915124599062424
  - 0.9926863676863678
  - 0.9930751697140875
  train_jaccard_samples_oob:
  - 0.9829737811055922
  - 0.9833395176252319
  - 0.9803355539106836
  - 0.9817963567963568
  - 0.9838585798523364
  train_jaccard_weighted:
  - 0.9917162135487969
  - 0.9899466513966141
  - 0.989593917260452
  - 0.9911112715175345
  - 0.9914496102237564
  train_jaccard_weighted_oob:
  - 0.979472610099862
  - 0.9799734674713653
  - 0.9762587646987047
  - 0.9779366950237778
  - 0.9803378057535623
  train_label_ranking_average_precision_score:
  - 0.9986161563743297
  - 0.9987012987012988
  - 0.9981433506044904
  - 0.9988738738738738
  - 0.9984824835241068
  train_label_ranking_average_precision_score_oob:
  - 0.9966268811624286
  - 0.995021645021645
  - 0.9954663212435232
  - 0.9963184338184337
  - 0.9961845300034685
  train_matthews_corrcoef_macro:
  - 0.9862531384802855
  - 0.9833173967679113
  - 0.9827585544537527
  - 0.9854613159669223
  - 0.9860407310544325
  train_matthews_corrcoef_macro_oob:
  - 0.9650858307064129
  - 0.9665250016384884
  - 0.9594194673954934
  - 0.9629012540452662
  - 0.9670210769573244
  train_matthews_corrcoef_micro:
  - 0.9861113840615451
  - 0.9831609654723755
  - 0.9825655472485427
  - 0.9852336594351847
  - 0.9858223761681377
  train_matthews_corrcoef_micro_oob:
  - 0.9649977632739857
  - 0.9662063902440493
  - 0.9593283033189283
  - 0.9626178067714306
  - 0.9667944470584258
  train_matthews_corrcoef_samples:
  - 0.9870829034234265
  - 0.9839184677414884
  - 0.9829168166011644
  - 0.9878939508661292
  - 0.9873905020687721
  train_matthews_corrcoef_samples_oob:
  - 0.963552772751394
  - 0.9659476217638489
  - 0.9549357167238456
  - 0.9614621216222753
  - 0.9657185339297369
  train_matthews_corrcoef_weighted:
  - 0.9860205150634251
  - 0.9830522807094239
  - 0.9824412160126488
  - 0.9851117427443049
  - 0.9857101816612288
  train_matthews_corrcoef_weighted_oob:
  - 0.9648107503957842
  - 0.9659558077254612
  - 0.9590953663215038
  - 0.9623689581165618
  - 0.9665811809932634
  train_ndgc:
  - 0.9990007107197745
  - 0.9990413759833024
  - 0.9986521894892197
  - 0.9991909770288119
  - 0.9988803720975414
  train_ndgc_oob:
  - 0.9975707703383342
  - 0.9964158117125568
  - 0.9967226840953596
  - 0.9973595361688055
  - 0.9972649393379653
  train_neg_coverage_error:
  - -1.0752464971458224
  - -1.0774025974025974
  - -1.0751295336787565
  - -1.0779625779625779
  - -1.0796045785639958
  train_neg_coverage_error_oob:
  - -1.0819927348209653
  - -1.0883116883116883
  - -1.083419689119171
  - -1.0852390852390852
  - -1.0863683662851196
  train_neg_hamming_loss_macro:
  - -0.0040650406504065045
  - -0.004935064935064935
  - -0.005094991364421416
  - -0.004331254331254332
  - -0.004162330905306971
  train_neg_hamming_loss_macro_oob:
  - -0.010205846739318456
  - -0.009870129870129871
  - -0.011830742659758203
  - -0.010914760914760915
  - -0.009712105445716266
  train_neg_hamming_loss_micro:
  - -0.0040650406504065045
  - -0.0049350649350649355
  - -0.005094991364421416
  - -0.004331254331254331
  - -0.004162330905306972
  train_neg_hamming_loss_micro_oob:
  - -0.010205846739318456
  - -0.009870129870129871
  - -0.011830742659758205
  - -0.010914760914760915
  - -0.009712105445716268
  train_neg_hamming_loss_samples:
  - -0.004065040650406504
  - -0.0049350649350649355
  - -0.005094991364421416
  - -0.004331254331254331
  - -0.004162330905306972
  train_neg_hamming_loss_samples_oob:
  - -0.010205846739318456
  - -0.009870129870129871
  - -0.011830742659758203
  - -0.010914760914760915
  - -0.009712105445716266
  train_neg_hamming_loss_weighted:
  - -0.004164089961222572
  - -0.005057214414391795
  - -0.005235241182059052
  - -0.004470005194993113
  - -0.004297370277959814
  train_neg_hamming_loss_weighted_oob:
  - -0.010385357916317315
  - -0.010134766152165863
  - -0.012036918665132566
  - -0.011175766613175991
  - -0.009941362232932608
  train_neg_label_ranking_loss:
  - -0.0005838090295796575
  - -0.0005194805194805195
  - -0.0008160621761658031
  - -0.0004807692307692308
  - -0.0006503642039542144
  train_neg_label_ranking_loss_oob:
  - -0.001842241826673586
  - -0.0025064935064935067
  - -0.002383419689119171
  - -0.001845114345114345
  - -0.0018470343392299688
  train_precision_macro:
  - 0.9959349593495935
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687457
  - 0.995837669094693
  train_precision_macro_oob:
  - 0.9897941532606817
  - 0.9901298701298703
  - 0.9881692573402417
  - 0.989085239085239
  - 0.9902878945542838
  train_precision_micro:
  - 0.9959349593495935
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687456
  - 0.9958376690946931
  train_precision_micro_oob:
  - 0.9897941532606815
  - 0.9901298701298701
  - 0.9881692573402417
  - 0.989085239085239
  - 0.9902878945542838
  train_precision_samples:
  - 0.9959349593495934
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687456
  - 0.9958376690946931
  train_precision_samples_oob:
  - 0.9897941532606815
  - 0.9901298701298701
  - 0.9881692573402419
  - 0.989085239085239
  - 0.9902878945542838
  train_precision_weighted:
  - 0.9958359100387775
  - 0.9949427855856083
  - 0.994764758817941
  - 0.9955299948050069
  - 0.9957026297220402
  train_precision_weighted_oob:
  - 0.9896146420836827
  - 0.989865233847834
  - 0.9879630813348674
  - 0.9888242333868241
  - 0.9900586377670673
  train_recall_macro:
  - 0.9959349593495935
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687457
  - 0.995837669094693
  train_recall_macro_oob:
  - 0.9897941532606817
  - 0.9901298701298703
  - 0.9881692573402417
  - 0.989085239085239
  - 0.9902878945542838
  train_recall_micro:
  - 0.9959349593495935
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687456
  - 0.9958376690946931
  train_recall_micro_oob:
  - 0.9897941532606815
  - 0.9901298701298701
  - 0.9881692573402417
  - 0.989085239085239
  - 0.9902878945542838
  train_recall_samples:
  - 0.9959349593495934
  - 0.9950649350649351
  - 0.9949050086355786
  - 0.9956687456687456
  - 0.9958376690946931
  train_recall_samples_oob:
  - 0.9897941532606815
  - 0.9901298701298701
  - 0.9881692573402419
  - 0.989085239085239
  - 0.9902878945542838
  train_recall_weighted:
  - 0.9958359100387775
  - 0.9949427855856083
  - 0.994764758817941
  - 0.9955299948050069
  - 0.9957026297220402
  train_recall_weighted_oob:
  - 0.9896146420836827
  - 0.989865233847834
  - 0.9879630813348674
  - 0.9888242333868241
  - 0.9900586377670673
  train_roc_auc_macro:
  - 0.9998445900084955
  - 0.9997813423965359
  - 0.9997401380602241
  - 0.9997702252993609
  - 0.9997314577191917
  train_roc_auc_macro_oob:
  - 0.9991811739607531
  - 0.9988592037796641
  - 0.998747706177118
  - 0.9991462713995141
  - 0.9989567097189337
  train_roc_auc_micro:
  - 0.9998447657382208
  - 0.9998165800706754
  - 0.9997725720579651
  - 0.9998097560291321
  - 0.9997582096728695
  train_roc_auc_micro_oob:
  - 0.999278088048078
  - 0.9989273655550525
  - 0.9988531467976676
  - 0.9992131107401507
  - 0.9990016317016436
  train_roc_auc_samples:
  - 0.9994161909704203
  - 0.9994805194805195
  - 0.9991839378238342
  - 0.9995192307692307
  - 0.9993496357960457
  train_roc_auc_samples_oob:
  - 0.9981577581733264
  - 0.9974935064935064
  - 0.9976165803108809
  - 0.9981548856548856
  - 0.9981529656607699
  train_roc_auc_weighted:
  - 0.9998319183661764
  - 0.9997633653801946
  - 0.9997184497673138
  - 0.9997498738939841
  - 0.99971234900974
  train_roc_auc_weighted_oob:
  - 0.9991244157511598
  - 0.998807396935213
  - 0.9986930149501099
  - 0.9991097317329859
  - 0.9989277740839045
start: 2023-12-22 16:05:23.283874
wrapper: null
