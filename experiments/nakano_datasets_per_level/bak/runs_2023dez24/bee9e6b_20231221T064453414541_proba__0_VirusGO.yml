active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47/AzMzMzMwMwEAzMzMzMwtAADMzMzMz47+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:44:58.785526
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  monotonic_cst: null
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  monotonic_cst: null
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba__0
  params: {}
hash: bee9e6b064e973de01aa290284b78d08232cb9b24fedc21315221a3b8c617eec
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bee9e6b_20231221T064453414541_proba__0_VirusGO.yml
results:
  fit_time:
  - 1.2903320789337158
  - 1.3254399299621582
  - 1.2977778911590576
  - 1.3081576824188232
  - 1.3116304874420166
  score_time:
  - 0.582453727722168
  - 0.5643692016601562
  - 0.5796022415161133
  - 0.6199157238006592
  - 0.5545260906219482
  test_average_precision_macro:
  - 0.9573518453594941
  - 0.9489317227255474
  - 0.9751608141314024
  - 0.8571569865983569
  - 0.8860749700814354
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7910313122164176
  - 0.715743319194735
  - 0.7960500529995751
  - 0.7261728258624608
  - 0.7450390219428425
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.826984126984127
  - 0.7996296296296297
  - 0.8265350877192982
  - 0.8063492063492064
  - 0.8104166666666668
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9494263359619396
  - 0.9199792192746156
  - 0.9507351622736238
  - 0.8431526645344889
  - 0.8771096056327947
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8452380952380953
  - 0.8666666666666667
  - 0.7982456140350876
  - 0.8492063492063493
  - 0.8583333333333333
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8452380952380952
  - 0.8666666666666667
  - 0.7982456140350878
  - 0.8492063492063492
  - 0.8583333333333333
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8452380952380955
  - 0.8666666666666667
  - 0.7982456140350878
  - 0.8492063492063492
  - 0.8583333333333332
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7747619047619048
  - 0.8142222222222223
  - 0.6998987854251013
  - 0.7828571428571428
  - 0.811
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7437675570132597
  - 0.7725937093049309
  - 0.6839062056043189
  - 0.7499913332370359
  - 0.758501847743835
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7319587628865979
  - 0.7647058823529411
  - 0.6642335766423357
  - 0.7379310344827587
  - 0.7518248175182481
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7465986394557823
  - 0.7809523809523811
  - 0.6823308270676692
  - 0.7545351473922902
  - 0.7744047619047619
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6397471769888352
  - 0.6947048450849383
  - 0.5529978326785293
  - 0.6524436804853387
  - 0.6878519568621325
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.826984126984127
  - 0.7996296296296294
  - 0.8265350877192982
  - 0.8063492063492064
  - 0.8104166666666665
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1514215235676051
  - 0.18104298713270786
  - 0.097443945588828
  - 0.15255168192422944
  - 0.1899557272628686
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.423788728004958
  - 0.48416483186574427
  - 0.2940137678358791
  - 0.44174097588990363
  - 0.5161222448658161
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2634502634301751
  - 0.3384990118229706
  - 0.17894736842105263
  - 0.29755634752621496
  - 0.3969917281883409
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.30889990807791445
  - 0.36492304337048787
  - 0.19707479134585842
  - 0.31120543112542803
  - 0.387509683616252
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8730535658996098
  - 0.8512839625132022
  - 0.8744554325402438
  - 0.8574867903488251
  - 0.8582454289404826
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8095238095238095
  - -1.7777777777777777
  - -2.026315789473684
  - -1.7857142857142858
  - -1.925
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.15476190476190474
  - -0.13333333333333333
  - -0.20175438596491224
  - -0.15079365079365079
  - -0.14166666666666666
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.15476190476190477
  - -0.13333333333333333
  - -0.20175438596491227
  - -0.15079365079365079
  - -0.14166666666666666
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.15476190476190474
  - -0.13333333333333333
  - -0.20175438596491227
  - -0.15079365079365079
  - -0.14166666666666666
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2252380952380952
  - -0.1857777777777778
  - -0.3001012145748988
  - -0.2171428571428571
  - -0.18900000000000003
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.11845238095238095
  - -0.13333333333333333
  - -0.1256578947368421
  - -0.11421957671957672
  - -0.133125
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8452380952380953
  - 0.8666666666666667
  - 0.7982456140350876
  - 0.8492063492063493
  - 0.8583333333333333
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8452380952380952
  - 0.8666666666666667
  - 0.7982456140350878
  - 0.8492063492063492
  - 0.8583333333333333
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8452380952380955
  - 0.8666666666666667
  - 0.7982456140350878
  - 0.8492063492063492
  - 0.8583333333333332
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7747619047619048
  - 0.8142222222222223
  - 0.6998987854251013
  - 0.7828571428571428
  - 0.811
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8452380952380953
  - 0.8666666666666667
  - 0.7982456140350876
  - 0.8492063492063493
  - 0.8583333333333333
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8452380952380952
  - 0.8666666666666667
  - 0.7982456140350878
  - 0.8492063492063492
  - 0.8583333333333333
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8452380952380955
  - 0.8666666666666667
  - 0.7982456140350878
  - 0.8492063492063492
  - 0.8583333333333332
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7747619047619048
  - 0.8142222222222223
  - 0.6998987854251013
  - 0.7828571428571428
  - 0.811
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9856501021461216
  - 0.9757040164989773
  - 0.9832438530967943
  - 0.9470982603567744
  - 0.9339152931704082
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9192079207920791
  - 0.8954545454545454
  - 0.920673076923077
  - 0.9083168316831683
  - 0.8917894736842105
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.881547619047619
  - 0.8666666666666667
  - 0.8743421052631579
  - 0.8857804232804231
  - 0.866875
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9783067669172932
  - 0.9544266890944771
  - 0.966437728937729
  - 0.9166105263157894
  - 0.9121071327081558
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9519613182474854
  - 0.9487701696683235
  - 0.9407314681679967
  - 0.9663903568320101
  - 0.9596041017489009
  train_average_precision_macro_oob:
  - 0.8619527261897512
  - 0.8441651767648137
  - 0.8618565570786808
  - 0.9104696022446211
  - 0.8746065453345405
  train_average_precision_micro:
  - 0.7802871846253508
  - 0.7851267041082195
  - 0.7769494375088352
  - 0.8041379535257325
  - 0.7990277024860917
  train_average_precision_micro_oob:
  - 0.7320915156747937
  - 0.7384729556906815
  - 0.7322382128660905
  - 0.7520476855261697
  - 0.739825195788226
  train_average_precision_samples:
  - 0.8175757575757574
  - 0.8372942386831275
  - 0.8362426035502958
  - 0.8403030303030302
  - 0.8722554890219562
  train_average_precision_samples_oob:
  - 0.7916666666666666
  - 0.7967078189300412
  - 0.8042899408284024
  - 0.8021212121212122
  - 0.8380239520958083
  train_average_precision_weighted:
  - 0.9423140300293221
  - 0.9335775387433162
  - 0.9287976673303909
  - 0.9538094596798213
  - 0.9447585469968864
  train_average_precision_weighted_oob:
  - 0.8687581005354823
  - 0.8679968215694959
  - 0.8637568468021761
  - 0.8934983172624326
  - 0.8778405664200039
  train_f1_macro:
  - 0.8535353535353535
  - 0.839506172839506
  - 0.8491124260355031
  - 0.8656565656565657
  - 0.8702594810379242
  train_f1_macro_oob:
  - 0.8383838383838386
  - 0.8281893004115227
  - 0.8303747534516764
  - 0.8484848484848485
  - 0.8532934131736528
  train_f1_micro:
  - 0.8535353535353535
  - 0.8395061728395061
  - 0.849112426035503
  - 0.8656565656565657
  - 0.8702594810379242
  train_f1_micro_oob:
  - 0.8383838383838383
  - 0.8281893004115226
  - 0.8303747534516766
  - 0.8484848484848485
  - 0.8532934131736527
  train_f1_samples:
  - 0.8535353535353534
  - 0.8395061728395061
  - 0.849112426035503
  - 0.8656565656565656
  - 0.870259481037924
  train_f1_samples_oob:
  - 0.8383838383838382
  - 0.8281893004115226
  - 0.8303747534516764
  - 0.8484848484848485
  - 0.8532934131736527
  train_f1_weighted:
  - 0.7986498649864986
  - 0.770290917980687
  - 0.7846449704142011
  - 0.8238523852385238
  - 0.8308235015118278
  train_f1_weighted_oob:
  - 0.7676867686768677
  - 0.7473414008067474
  - 0.7463905325443787
  - 0.7885988598859887
  - 0.7959921740677061
  train_jaccard_macro:
  - 0.752096807356466
  - 0.7348775951926063
  - 0.7475414341188804
  - 0.7691189619485789
  - 0.7759447416852884
  train_jaccard_macro_oob:
  - 0.7331102883790109
  - 0.721105562185473
  - 0.725074990957344
  - 0.7458302865288294
  - 0.7525475244673466
  train_jaccard_micro:
  - 0.7444933920704846
  - 0.723404255319149
  - 0.7377892030848329
  - 0.7631344612644702
  - 0.7703180212014135
  train_jaccard_micro_oob:
  - 0.7217391304347827
  - 0.7067603160667252
  - 0.7099494097807757
  - 0.7368421052631579
  - 0.7441253263707572
  train_jaccard_samples:
  - 0.7637806637806638
  - 0.7408877131099353
  - 0.7561284868977176
  - 0.7812409812409812
  - 0.7881380096948959
  train_jaccard_samples_oob:
  - 0.7395382395382397
  - 0.7228101116990007
  - 0.7240067624683009
  - 0.7546897546897546
  - 0.7623324779013403
  train_jaccard_weighted:
  - 0.6697967208631903
  - 0.6345720984480814
  - 0.6520763814086763
  - 0.7051893195200591
  - 0.7146031496170568
  train_jaccard_weighted_oob:
  - 0.6309867377007022
  - 0.6066516994337472
  - 0.606220122643652
  - 0.6573257239685869
  - 0.6665206416183921
  train_label_ranking_average_precision_score:
  - 0.8175757575757573
  - 0.8372942386831274
  - 0.8362426035502954
  - 0.84030303030303
  - 0.872255489021956
  train_label_ranking_average_precision_score_oob:
  - 0.7916666666666663
  - 0.7967078189300407
  - 0.8042899408284019
  - 0.8021212121212118
  - 0.8380239520958082
  train_matthews_corrcoef_macro:
  - 0.17639237438772004
  - 0.15104383310582722
  - 0.15765639685973393
  - 0.19763403733149895
  - 0.20312356701016113
  train_matthews_corrcoef_macro_oob:
  - 0.14175318078890983
  - 0.12492059858998879
  - 0.11469171755201846
  - 0.16099891445459494
  - 0.16866622218318886
  train_matthews_corrcoef_micro:
  - 0.48408997239017476
  - 0.4292496153124819
  - 0.4393654712507031
  - 0.5361496774091307
  - 0.5487561928672201
  train_matthews_corrcoef_micro_oob:
  - 0.408178246769154
  - 0.3691750258693464
  - 0.3334871494091501
  - 0.45752822651629643
  - 0.47242713109777
  train_matthews_corrcoef_samples:
  - 0.3432845259860728
  - 0.2704289583683231
  - 0.2926917814441855
  - 0.39396499665376
  - 0.4123016613680926
  train_matthews_corrcoef_samples_oob:
  - 0.26914843185253534
  - 0.2146730600224362
  - 0.18026574594122693
  - 0.31973945971133594
  - 0.33418160212167614
  train_matthews_corrcoef_weighted:
  - 0.359524852565095
  - 0.3069286875727563
  - 0.3215663480804474
  - 0.40359113077934694
  - 0.41477642622575445
  train_matthews_corrcoef_weighted_oob:
  - 0.28877116527187424
  - 0.2539535702378622
  - 0.2338642135213979
  - 0.3284910831353
  - 0.34422196482349815
  train_ndgc:
  - 0.8656006663103251
  - 0.8804553267192136
  - 0.8798221299800336
  - 0.8832052769347947
  - 0.9074922505368052
  train_ndgc_oob:
  - 0.8461758269613318
  - 0.8491377355418076
  - 0.855845245301424
  - 0.8542156851267743
  - 0.8815337680196521
  train_neg_coverage_error:
  - -1.8363636363636364
  - -1.8518518518518519
  - -1.7159763313609468
  - -1.7878787878787878
  - -1.652694610778443
  train_neg_coverage_error_oob:
  - -1.9454545454545455
  - -2.0123456790123457
  - -1.8579881656804733
  - -1.896969696969697
  - -1.748502994011976
  train_neg_hamming_loss_macro:
  - -0.14646464646464644
  - -0.16049382716049382
  - -0.15088757396449703
  - -0.13434343434343432
  - -0.12974051896207583
  train_neg_hamming_loss_macro_oob:
  - -0.1616161616161616
  - -0.17181069958847736
  - -0.16962524654832348
  - -0.1515151515151515
  - -0.1467065868263473
  train_neg_hamming_loss_micro:
  - -0.14646464646464646
  - -0.16049382716049382
  - -0.15088757396449703
  - -0.13434343434343435
  - -0.12974051896207583
  train_neg_hamming_loss_micro_oob:
  - -0.16161616161616163
  - -0.17181069958847736
  - -0.16962524654832348
  - -0.15151515151515152
  - -0.1467065868263473
  train_neg_hamming_loss_samples:
  - -0.14646464646464646
  - -0.16049382716049382
  - -0.15088757396449703
  - -0.13434343434343432
  - -0.12974051896207583
  train_neg_hamming_loss_samples_oob:
  - -0.1616161616161616
  - -0.17181069958847736
  - -0.16962524654832348
  - -0.15151515151515152
  - -0.1467065868263473
  train_neg_hamming_loss_weighted:
  - -0.20135013501350135
  - -0.22970908201931303
  - -0.21535502958579883
  - -0.17614761476147617
  - -0.16917649848817215
  train_neg_hamming_loss_weighted_oob:
  - -0.23231323132313234
  - -0.2526585991932527
  - -0.2536094674556213
  - -0.21140114011401143
  - -0.2040078259322938
  train_neg_label_ranking_loss:
  - -0.11861952861952862
  - -0.11642661179698219
  - -0.10302432610124918
  - -0.10636363636363634
  - -0.0827012641383899
  train_neg_label_ranking_loss_oob:
  - -0.14028619528619532
  - -0.1509087791495199
  - -0.12986522024983563
  - -0.13166666666666668
  - -0.10282767797737857
  train_precision_macro:
  - 0.8535353535353535
  - 0.839506172839506
  - 0.8491124260355031
  - 0.8656565656565657
  - 0.8702594810379242
  train_precision_macro_oob:
  - 0.8383838383838386
  - 0.8281893004115227
  - 0.8303747534516764
  - 0.8484848484848485
  - 0.8532934131736528
  train_precision_micro:
  - 0.8535353535353535
  - 0.8395061728395061
  - 0.849112426035503
  - 0.8656565656565657
  - 0.8702594810379242
  train_precision_micro_oob:
  - 0.8383838383838383
  - 0.8281893004115226
  - 0.8303747534516766
  - 0.8484848484848485
  - 0.8532934131736527
  train_precision_samples:
  - 0.8535353535353534
  - 0.8395061728395061
  - 0.849112426035503
  - 0.8656565656565656
  - 0.870259481037924
  train_precision_samples_oob:
  - 0.8383838383838382
  - 0.8281893004115226
  - 0.8303747534516764
  - 0.8484848484848485
  - 0.8532934131736527
  train_precision_weighted:
  - 0.7986498649864986
  - 0.770290917980687
  - 0.7846449704142011
  - 0.8238523852385238
  - 0.8308235015118278
  train_precision_weighted_oob:
  - 0.7676867686768677
  - 0.7473414008067474
  - 0.7463905325443787
  - 0.7885988598859887
  - 0.7959921740677061
  train_recall_macro:
  - 0.8535353535353535
  - 0.839506172839506
  - 0.8491124260355031
  - 0.8656565656565657
  - 0.8702594810379242
  train_recall_macro_oob:
  - 0.8383838383838386
  - 0.8281893004115227
  - 0.8303747534516764
  - 0.8484848484848485
  - 0.8532934131736528
  train_recall_micro:
  - 0.8535353535353535
  - 0.8395061728395061
  - 0.849112426035503
  - 0.8656565656565657
  - 0.8702594810379242
  train_recall_micro_oob:
  - 0.8383838383838383
  - 0.8281893004115226
  - 0.8303747534516766
  - 0.8484848484848485
  - 0.8532934131736527
  train_recall_samples:
  - 0.8535353535353534
  - 0.8395061728395061
  - 0.849112426035503
  - 0.8656565656565656
  - 0.870259481037924
  train_recall_samples_oob:
  - 0.8383838383838382
  - 0.8281893004115226
  - 0.8303747534516764
  - 0.8484848484848485
  - 0.8532934131736527
  train_recall_weighted:
  - 0.7986498649864986
  - 0.770290917980687
  - 0.7846449704142011
  - 0.8238523852385238
  - 0.8308235015118278
  train_recall_weighted_oob:
  - 0.7676867686768677
  - 0.7473414008067474
  - 0.7463905325443787
  - 0.7885988598859887
  - 0.7959921740677061
  train_roc_auc_macro:
  - 0.9803138066155047
  - 0.9770802123189654
  - 0.9788279304953079
  - 0.9873178032604605
  - 0.9841272963468009
  train_roc_auc_macro_oob:
  - 0.9567006728163436
  - 0.9585130669327105
  - 0.9564948676057327
  - 0.970714660497709
  - 0.9661535097170479
  train_roc_auc_micro:
  - 0.9138657837865005
  - 0.9111128970039861
  - 0.9134275184275185
  - 0.9253781977182489
  - 0.9280631188118812
  train_roc_auc_micro_oob:
  - 0.8976353219078252
  - 0.8973897389738974
  - 0.9003194103194103
  - 0.9096848771171533
  - 0.9118997524752476
  train_roc_auc_samples:
  - 0.8813804713804714
  - 0.8835733882030178
  - 0.8969756738987509
  - 0.8936363636363638
  - 0.91729873586161
  train_roc_auc_samples_oob:
  - 0.8597138047138047
  - 0.84909122085048
  - 0.8701347797501644
  - 0.8683333333333332
  - 0.8971723220226214
  train_roc_auc_weighted:
  - 0.9675903665456186
  - 0.9607651691902986
  - 0.9648883175647882
  - 0.9788009776470468
  - 0.9718129425154669
  train_roc_auc_weighted_oob:
  - 0.9384249798550774
  - 0.9383232391794768
  - 0.9415089686527435
  - 0.9572393680092519
  - 0.947448029119714
start: 2023-12-21 06:44:53.414541
wrapper: null
