active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AmpmZmZnZP4CZmZmZmfm/QDMzMzMzA0AAmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:06:08.523522
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__7
  params: {}
hash: 7e3bca8bcf9abdb6ad28069dfe73725c0766ab21983213fb570965c88d5763de
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7e3bca8_20231221T110206503023_embedding_proba_weak__7_VirusPseAAC.yml
results:
  fit_time:
  - 222.17824625968933
  - 222.56467485427856
  - 228.6593053340912
  - 225.71938228607178
  - 225.88166975975037
  score_time:
  - 4.726554870605469
  - 4.607582330703735
  - 5.007692813873291
  - 4.74546217918396
  - 4.746485948562622
  test_average_precision_macro:
  - 0.47241624010626415
  - 0.24856696147950275
  - 0.38621530863743697
  - 0.4599796536932421
  - 0.3487093361843791
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.43447775046077913
  - 0.4001520998787349
  - 0.411839940847387
  - 0.5785536017377784
  - 0.38161003367608864
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6618217054263565
  - 0.5644308943089431
  - 0.6201550387596899
  - 0.7121794871794871
  - 0.5914634146341463
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.48156791551293093
  - 0.39982002501691183
  - 0.435735187100141
  - 0.5629818738464393
  - 0.39854483183974154
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7868217054263565
  - 0.7723577235772359
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7868217054263565
  - 0.7723577235772358
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7868217054263568
  - 0.7723577235772358
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.663685152057245
  - 0.6296665007466401
  - 0.6862838158519221
  - 0.6752136752136751
  - 0.6374940219990436
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6779614854215917
  - 0.6637843230360608
  - 0.6989396481568301
  - 0.6746720122254263
  - 0.6641044383097091
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6485623003194888
  - 0.6291390728476821
  - 0.6699029126213593
  - 0.647887323943662
  - 0.6291390728476821
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6650055370985605
  - 0.6521486643437864
  - 0.6943521594684385
  - 0.6699633699633701
  - 0.6556329849012776
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5202824377159483
  - 0.48330540139794026
  - 0.5496475480704419
  - 0.5325617145948035
  - 0.496263044242815
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6618217054263567
  - 0.5644308943089431
  - 0.6201550387596899
  - 0.7121794871794871
  - 0.5914634146341463
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.01130733336809714
  - -0.02250735240672805
  - 0.044253433714663115
  - 0.042170249038722546
  - 0.05055696056647846
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.18188754408065855
  - 0.1504961438193608
  - 0.27877472613207377
  - 0.26293432005993017
  - 0.1986129441763631
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.145256974282594
  - 0.1402117877573296
  - 0.22856633547870112
  - 0.2340304801086085
  - 0.1926186974658787
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.020923472029885763
  - -0.02580355178411369
  - 0.10404341900658859
  - 0.08434049807744509
  - 0.03278724932539128
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7504128466882725
  - 0.6720515060370553
  - 0.7162448980919625
  - 0.788539114123464
  - 0.6964025130301491
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.395348837209302
  - -2.8292682926829267
  - -2.4186046511627906
  - -2.282051282051282
  - -2.8048780487804876
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21317829457364337
  - -0.22764227642276424
  - -0.19767441860465115
  - -0.2136752136752137
  - -0.22764227642276424
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2131782945736434
  - -0.22764227642276422
  - -0.19767441860465115
  - -0.21367521367521367
  - -0.22764227642276422
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21317829457364335
  - -0.22764227642276424
  - -0.19767441860465113
  - -0.21367521367521364
  - -0.22764227642276424
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3363148479427549
  - -0.3703334992533599
  - -0.31371618414807784
  - -0.32478632478632474
  - -0.36250597800095646
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23630490956072348
  - -0.3310975609756097
  - -0.2563307493540051
  - -0.1935897435897436
  - -0.305420054200542
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7868217054263565
  - 0.7723577235772359
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7868217054263565
  - 0.7723577235772358
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7868217054263568
  - 0.7723577235772358
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.663685152057245
  - 0.6296665007466401
  - 0.6862838158519221
  - 0.6752136752136751
  - 0.6374940219990436
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7868217054263565
  - 0.7723577235772359
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7868217054263565
  - 0.7723577235772358
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7868217054263568
  - 0.7723577235772358
  - 0.8023255813953488
  - 0.7863247863247863
  - 0.7723577235772358
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.663685152057245
  - 0.6296665007466401
  - 0.6862838158519221
  - 0.6752136752136751
  - 0.6374940219990436
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6501959587253704
  - 0.44137235975471273
  - 0.6388258542425209
  - 0.7108515242706419
  - 0.5396438374379551
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7780059746079163
  - 0.7047549984460789
  - 0.7670149399472709
  - 0.8166720240008573
  - 0.7194570135746607
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7636950904392765
  - 0.6689024390243903
  - 0.7436692506459949
  - 0.8064102564102564
  - 0.694579945799458
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6172403024326101
  - 0.49738200299424795
  - 0.587961754084203
  - 0.6896311657341069
  - 0.5128989449923707
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9309858650962428
  - 0.9766056179014352
  - 0.9094361342537739
  - 0.9669175977174781
  - 0.9326902156160869
  train_average_precision_macro_oob:
  - 0.7462557838613727
  - 0.7502793081268185
  - 0.6886664084599694
  - 0.7694452639320541
  - 0.7597284865442203
  train_average_precision_micro:
  - 0.9346485251531107
  - 0.9730334645640271
  - 0.8788186352988234
  - 0.979310604683884
  - 0.9808629994317605
  train_average_precision_micro_oob:
  - 0.8634990128849719
  - 0.892703141589601
  - 0.8066758742242126
  - 0.9082030401118505
  - 0.9078321794040775
  train_average_precision_samples:
  - 0.9730691056910568
  - 0.9799196787148595
  - 0.9441056910569107
  - 0.990079365079365
  - 0.9889558232931727
  train_average_precision_samples_oob:
  - 0.9020325203252033
  - 0.9130522088353413
  - 0.8807926829268292
  - 0.915376984126984
  - 0.9116465863453815
  train_average_precision_weighted:
  - 0.950520181409315
  - 0.9860424530132839
  - 0.9071361867823461
  - 0.984113156959922
  - 0.9783096921827017
  train_average_precision_weighted_oob:
  - 0.8805232005667724
  - 0.8813572729684854
  - 0.8049881941735775
  - 0.9087567956385169
  - 0.8968193888522363
  train_f1_macro:
  - 0.9512195121951219
  - 0.9508032128514056
  - 0.9369918699186992
  - 0.9523809523809526
  - 0.9518072289156626
  train_f1_macro_oob:
  - 0.9298780487804877
  - 0.928714859437751
  - 0.9197154471544716
  - 0.9325396825396827
  - 0.9327309236947791
  train_f1_micro:
  - 0.9512195121951219
  - 0.9508032128514057
  - 0.9369918699186992
  - 0.9523809523809523
  - 0.9518072289156626
  train_f1_micro_oob:
  - 0.9298780487804879
  - 0.928714859437751
  - 0.9197154471544715
  - 0.9325396825396826
  - 0.9327309236947792
  train_f1_samples:
  - 0.9512195121951219
  - 0.9508032128514055
  - 0.9369918699186993
  - 0.9523809523809523
  - 0.9518072289156626
  train_f1_samples_oob:
  - 0.9298780487804879
  - 0.9287148594377509
  - 0.9197154471544716
  - 0.9325396825396827
  - 0.9327309236947792
  train_f1_weighted:
  - 0.965
  - 0.9647160068846816
  - 0.940766550522648
  - 0.970948827292111
  - 0.9693700173829648
  train_f1_weighted_oob:
  - 0.9445426829268291
  - 0.9419846875185471
  - 0.9207917818094438
  - 0.9530324567638
  - 0.9493796079841755
  train_jaccard_macro:
  - 0.9091792004619785
  - 0.9082507137068854
  - 0.8827027517113196
  - 0.9112201399559745
  - 0.9101320319896725
  train_jaccard_macro_oob:
  - 0.8711624186923688
  - 0.8686010215389756
  - 0.8520113414850257
  - 0.8771945593550693
  - 0.8763766737683293
  train_jaccard_micro:
  - 0.9069767441860465
  - 0.9062200956937799
  - 0.8814531548757171
  - 0.9090909090909091
  - 0.9080459770114943
  train_jaccard_micro_oob:
  - 0.8689458689458689
  - 0.8669165885660731
  - 0.8513640639698965
  - 0.8736059479553904
  - 0.8739416745061148
  train_jaccard_samples:
  - 0.9176829268292683
  - 0.919391853126793
  - 0.8967770034843207
  - 0.9220521541950115
  - 0.9215433161216294
  train_jaccard_samples_oob:
  - 0.8832752613240417
  - 0.8849684452094092
  - 0.8696283391405343
  - 0.8888888888888887
  - 0.8908491107286288
  train_jaccard_weighted:
  - 0.933880148043153
  - 0.9332399772092397
  - 0.8889282280815646
  - 0.9451683895413449
  - 0.942060242240679
  train_jaccard_weighted_oob:
  - 0.896979043944046
  - 0.892187664224912
  - 0.8534787857836861
  - 0.9138741540473817
  - 0.9059761428752068
  train_label_ranking_average_precision_score:
  - 0.9730691056910568
  - 0.9799196787148594
  - 0.9441056910569104
  - 0.990079365079365
  - 0.9889558232931727
  train_label_ranking_average_precision_score_oob:
  - 0.9020325203252033
  - 0.9130522088353413
  - 0.8807926829268292
  - 0.9153769841269843
  - 0.9116465863453814
  train_matthews_corrcoef_macro:
  - 0.47591990591572797
  - 0.5342408475755774
  - 0.4462168903926598
  - 0.468356662302543
  - 0.47016799057194353
  train_matthews_corrcoef_macro_oob:
  - 0.3854722224656785
  - 0.39450284660758
  - 0.38428975092918033
  - 0.36381511753326606
  - 0.3897113188067876
  train_matthews_corrcoef_micro:
  - 0.8449023812699755
  - 0.8440757282363966
  - 0.8001412759235651
  - 0.8469501338298667
  - 0.8465786297196343
  train_matthews_corrcoef_micro_oob:
  - 0.7736886707524787
  - 0.7698078605757693
  - 0.7415666529521168
  - 0.7801851211193694
  - 0.7831113187310738
  train_matthews_corrcoef_samples:
  - 0.7789255290310403
  - 0.7994658507774515
  - 0.7539400685095878
  - 0.7905294449677092
  - 0.7859601472370779
  train_matthews_corrcoef_samples_oob:
  - 0.662082372566599
  - 0.7009281412486104
  - 0.6741859884636511
  - 0.6758573553006416
  - 0.691339022049207
  train_matthews_corrcoef_weighted:
  - 0.7703200440920159
  - 0.7781803317752705
  - 0.7173993244519117
  - 0.775854145117761
  - 0.7745763783663744
  train_matthews_corrcoef_weighted_oob:
  - 0.6918998700880841
  - 0.69198053732322
  - 0.6553862867517595
  - 0.6894999292400893
  - 0.7015902638315903
  train_ndgc:
  - 0.9802860098915962
  - 0.9853877684156956
  - 0.9588165277272426
  - 0.9926301161139458
  - 0.9920577126282596
  train_ndgc_oob:
  - 0.9295347051124442
  - 0.9372988636359764
  - 0.9130161902092346
  - 0.9383891204751897
  - 0.9349883826926467
  train_neg_coverage_error:
  - -1.2865853658536586
  - -1.2710843373493976
  - -1.3719512195121952
  - -1.2202380952380953
  - -1.2409638554216869
  train_neg_coverage_error_oob:
  - -1.548780487804878
  - -1.536144578313253
  - -1.6097560975609757
  - -1.5238095238095237
  - -1.4879518072289157
  train_neg_hamming_loss_macro:
  - -0.04878048780487806
  - -0.04919678714859438
  - -0.06300813008130081
  - -0.047619047619047616
  - -0.04819277108433736
  train_neg_hamming_loss_macro_oob:
  - -0.0701219512195122
  - -0.071285140562249
  - -0.08028455284552845
  - -0.06746031746031746
  - -0.06726907630522089
  train_neg_hamming_loss_micro:
  - -0.04878048780487805
  - -0.04919678714859438
  - -0.06300813008130081
  - -0.047619047619047616
  - -0.04819277108433735
  train_neg_hamming_loss_micro_oob:
  - -0.0701219512195122
  - -0.071285140562249
  - -0.08028455284552846
  - -0.06746031746031746
  - -0.06726907630522089
  train_neg_hamming_loss_samples:
  - -0.048780487804878044
  - -0.049196787148594386
  - -0.06300813008130081
  - -0.047619047619047616
  - -0.04819277108433735
  train_neg_hamming_loss_samples_oob:
  - -0.0701219512195122
  - -0.071285140562249
  - -0.08028455284552845
  - -0.06746031746031746
  - -0.06726907630522087
  train_neg_hamming_loss_weighted:
  - -0.035
  - -0.03528399311531842
  - -0.05923344947735192
  - -0.029051172707889126
  - -0.030629982617035305
  train_neg_hamming_loss_weighted_oob:
  - -0.05545731707317073
  - -0.058015312481452905
  - -0.0792082181905563
  - -0.04696754323619995
  - -0.05062039201582449
  train_neg_label_ranking_loss:
  - -0.012957317073170731
  - -0.009186746987951808
  - -0.026676829268292682
  - -0.004761904761904762
  - -0.005572289156626506
  train_neg_label_ranking_loss_oob:
  - -0.05928184281842819
  - -0.057747657295850074
  - -0.07088414634146341
  - -0.06069775132275133
  - -0.0536813922356091
  train_precision_macro:
  - 0.9512195121951219
  - 0.9508032128514056
  - 0.9369918699186992
  - 0.9523809523809526
  - 0.9518072289156626
  train_precision_macro_oob:
  - 0.9298780487804877
  - 0.928714859437751
  - 0.9197154471544716
  - 0.9325396825396827
  - 0.9327309236947791
  train_precision_micro:
  - 0.9512195121951219
  - 0.9508032128514057
  - 0.9369918699186992
  - 0.9523809523809523
  - 0.9518072289156626
  train_precision_micro_oob:
  - 0.9298780487804879
  - 0.928714859437751
  - 0.9197154471544715
  - 0.9325396825396826
  - 0.9327309236947792
  train_precision_samples:
  - 0.9512195121951219
  - 0.9508032128514055
  - 0.9369918699186993
  - 0.9523809523809523
  - 0.9518072289156626
  train_precision_samples_oob:
  - 0.9298780487804879
  - 0.9287148594377509
  - 0.9197154471544716
  - 0.9325396825396827
  - 0.9327309236947792
  train_precision_weighted:
  - 0.965
  - 0.9647160068846816
  - 0.940766550522648
  - 0.970948827292111
  - 0.9693700173829648
  train_precision_weighted_oob:
  - 0.9445426829268291
  - 0.9419846875185471
  - 0.9207917818094438
  - 0.9530324567638
  - 0.9493796079841755
  train_recall_macro:
  - 0.9512195121951219
  - 0.9508032128514056
  - 0.9369918699186992
  - 0.9523809523809526
  - 0.9518072289156626
  train_recall_macro_oob:
  - 0.9298780487804877
  - 0.928714859437751
  - 0.9197154471544716
  - 0.9325396825396827
  - 0.9327309236947791
  train_recall_micro:
  - 0.9512195121951219
  - 0.9508032128514057
  - 0.9369918699186992
  - 0.9523809523809523
  - 0.9518072289156626
  train_recall_micro_oob:
  - 0.9298780487804879
  - 0.928714859437751
  - 0.9197154471544715
  - 0.9325396825396826
  - 0.9327309236947792
  train_recall_samples:
  - 0.9512195121951219
  - 0.9508032128514055
  - 0.9369918699186993
  - 0.9523809523809523
  - 0.9518072289156626
  train_recall_samples_oob:
  - 0.9298780487804879
  - 0.9287148594377509
  - 0.9197154471544716
  - 0.9325396825396827
  - 0.9327309236947792
  train_recall_weighted:
  - 0.965
  - 0.9647160068846816
  - 0.940766550522648
  - 0.970948827292111
  - 0.9693700173829648
  train_recall_weighted_oob:
  - 0.9445426829268291
  - 0.9419846875185471
  - 0.9207917818094438
  - 0.9530324567638
  - 0.9493796079841755
  train_roc_auc_macro:
  - 0.9903425699204053
  - 0.9962225329627502
  - 0.9802784645218369
  - 0.9958148485823232
  - 0.996130830111707
  train_roc_auc_macro_oob:
  - 0.9555725155775172
  - 0.9532306524277535
  - 0.9307608698391509
  - 0.9455270980073451
  - 0.9533438850742955
  train_roc_auc_micro:
  - 0.9913456632653062
  - 0.9940923971449692
  - 0.9805667862977236
  - 0.9950187106598358
  - 0.9957570637379143
  train_roc_auc_micro_oob:
  - 0.9554464285714286
  - 0.9570751464476732
  - 0.9417318960786664
  - 0.9558403768024808
  - 0.9643355549297538
  train_roc_auc_samples:
  - 0.9870426829268293
  - 0.9908132530120484
  - 0.9733231707317073
  - 0.9952380952380951
  - 0.9944277108433734
  train_roc_auc_samples_oob:
  - 0.9407181571815719
  - 0.9422523427041499
  - 0.9291158536585366
  - 0.9393022486772487
  - 0.946318607764391
  train_roc_auc_weighted:
  - 0.9863271130669478
  - 0.9945887192264794
  - 0.9680358872820524
  - 0.9954554296699293
  - 0.9960314274586664
  train_roc_auc_weighted_oob:
  - 0.9653167791372664
  - 0.9703579997369756
  - 0.9393495077470948
  - 0.9746087135395053
  - 0.9795440815403501
start: 2023-12-21 11:02:06.503023
wrapper: null
