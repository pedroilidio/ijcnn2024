active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z9gZmZmZmb2vw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMDEAAmZmZmZnZvyAzMzMzMwPAQGZmZmZm9r+AMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:44:08.006340
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__4
  params: {}
hash: 5cd64b66a68f8b7feef760d98285dc9baa7313fe6e4cbe545b5b6c99ae3b2234
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5cd64b6_20231222T014336404874_embedding__4_emotions.yml
results:
  fit_time:
  - 15.641445398330688
  - 15.151403903961182
  - 15.982396125793457
  - 16.740259408950806
  - 15.287263631820679
  score_time:
  - 3.8454978466033936
  - 3.802851676940918
  - 4.1712729930877686
  - 3.5389862060546875
  - 3.4284396171569824
  test_average_precision_macro:
  - 0.7409489460210845
  - 0.7456208063522847
  - 0.7075327770366484
  - 0.7698975002272656
  - 0.7346810305953086
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7479072769869053
  - 0.7449288430197558
  - 0.7003720044135359
  - 0.7544608197969652
  - 0.749824335881236
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.783792270531401
  - 0.7892857142857141
  - 0.8151285583103766
  - 0.8343055555555556
  - 0.8040960451977401
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7446407902256744
  - 0.7503819950425301
  - 0.7055132796683223
  - 0.7638144886607157
  - 0.7383957366100009
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8144927536231886
  - 0.815126050420168
  - 0.8071625344352616
  - 0.8166666666666665
  - 0.7966101694915254
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8144927536231884
  - 0.8151260504201681
  - 0.8071625344352618
  - 0.8166666666666667
  - 0.7966101694915254
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8144927536231884
  - 0.8151260504201681
  - 0.8071625344352618
  - 0.8166666666666667
  - 0.7966101694915255
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8109090909090908
  - 0.8110574546560707
  - 0.8018011340473631
  - 0.8132507507507507
  - 0.7945106123072224
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6898359536940718
  - 0.6908030649848246
  - 0.679068010347161
  - 0.6930565879078342
  - 0.6646737086834925
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.687041564792176
  - 0.6879432624113475
  - 0.6766743648960739
  - 0.6901408450704225
  - 0.6619718309859155
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7184265010351966
  - 0.7186874749899959
  - 0.7057064147973239
  - 0.7194444444444446
  - 0.6889426957223566
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6843539730002706
  - 0.684860496824469
  - 0.6714901583652505
  - 0.6878966165830286
  - 0.6612948730882287
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7837922705314009
  - 0.7892857142857139
  - 0.8151285583103766
  - 0.8343055555555555
  - 0.8040960451977401
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5456313216085451
  - 0.5336351320332983
  - 0.5123534422128867
  - 0.5253611043764083
  - 0.4724015100725803
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5528216966698021
  - 0.5461418536349157
  - 0.5229091859994963
  - 0.5494193709401476
  - 0.501547621848729
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.49477258851698447
  - 0.5109663361153379
  - 0.5125409252685867
  - 0.5402800418696149
  - 0.4796183721406011
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5462499904453859
  - 0.535806636530779
  - 0.5131971214142239
  - 0.5315116378012251
  - 0.4805355043474221
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8488798589508555
  - 0.8543974978842724
  - 0.8737103894472458
  - 0.8861664164080035
  - 0.8683539310177166
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8173913043478263
  - -2.773109243697479
  - -2.6611570247933884
  - -2.566666666666667
  - -2.8135593220338984
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18550724637681157
  - -0.18487394957983194
  - -0.19283746556473833
  - -0.18333333333333335
  - -0.2033898305084746
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1855072463768116
  - -0.18487394957983194
  - -0.1928374655647383
  - -0.18333333333333332
  - -0.2033898305084746
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1855072463768116
  - -0.18487394957983194
  - -0.19283746556473827
  - -0.18333333333333332
  - -0.20338983050847453
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1890909090909091
  - -0.18894254534392946
  - -0.1981988659526369
  - -0.18674924924924927
  - -0.20548938769277753
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1661111111111111
  - -0.16542950513538748
  - -0.14869146005509642
  - -0.1238425925925926
  - -0.17262241054613936
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8144927536231886
  - 0.815126050420168
  - 0.8071625344352616
  - 0.8166666666666665
  - 0.7966101694915254
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8144927536231884
  - 0.8151260504201681
  - 0.8071625344352618
  - 0.8166666666666667
  - 0.7966101694915254
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8144927536231884
  - 0.8151260504201681
  - 0.8071625344352618
  - 0.8166666666666667
  - 0.7966101694915255
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8109090909090908
  - 0.8110574546560707
  - 0.8018011340473631
  - 0.8132507507507507
  - 0.7945106123072224
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8144927536231886
  - 0.815126050420168
  - 0.8071625344352616
  - 0.8166666666666665
  - 0.7966101694915254
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8144927536231884
  - 0.8151260504201681
  - 0.8071625344352618
  - 0.8166666666666667
  - 0.7966101694915254
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8144927536231884
  - 0.8151260504201681
  - 0.8071625344352618
  - 0.8166666666666667
  - 0.7966101694915255
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8109090909090908
  - 0.8110574546560707
  - 0.8018011340473631
  - 0.8132507507507507
  - 0.7945106123072224
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.845447437421439
  - 0.8579387099879637
  - 0.8341707563712114
  - 0.877464250592543
  - 0.8392013620057469
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8683752417794971
  - 0.8680990885978358
  - 0.8536939796200377
  - 0.8892868772386846
  - 0.8575798020242464
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8338888888888888
  - 0.8345704948646123
  - 0.8513085399449035
  - 0.8761574074074073
  - 0.8273775894538606
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8461281731613186
  - 0.8580650552864243
  - 0.8318661337588993
  - 0.8726196283141681
  - 0.8391150212494247
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.978480171650939
  - 0.9793582309202137
  - 0.9804761703074975
  - 0.9805369772103161
  - 0.9809308431284856
  train_average_precision_macro_oob:
  - 0.7759659486060637
  - 0.7818715707286789
  - 0.7734622182304959
  - 0.7467678799403671
  - 0.7831775525174077
  train_average_precision_micro:
  - 0.9687788635371892
  - 0.9692697508271847
  - 0.9692078149808886
  - 0.9675032774662282
  - 0.9702548176990627
  train_average_precision_micro_oob:
  - 0.778962232312176
  - 0.7864371432815536
  - 0.7799325511675977
  - 0.7488927538770224
  - 0.7858575998601401
  train_average_precision_samples:
  - 0.9661204091120409
  - 0.9632676980778245
  - 0.9616878531073445
  - 0.9626614987080103
  - 0.962046783625731
  train_average_precision_samples_oob:
  - 0.8308751743375173
  - 0.8296413502109703
  - 0.825623822975518
  - 0.8102184637068358
  - 0.8275029239766082
  train_average_precision_weighted:
  - 0.9798331603779521
  - 0.9800825147494577
  - 0.9813226426531743
  - 0.9811945470242591
  - 0.9816710470900547
  train_average_precision_weighted_oob:
  - 0.7804504165768857
  - 0.7857286780824607
  - 0.7762811451997913
  - 0.7485172763389162
  - 0.7850592620077862
  train_f1_macro:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435029
  - 0.9069767441860465
  - 0.9196491228070175
  train_f1_macro_oob:
  - 0.810320781032078
  - 0.8118846694796061
  - 0.8128531073446328
  - 0.80338266384778
  - 0.8136842105263158
  train_f1_micro:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435028
  - 0.9069767441860465
  - 0.9196491228070175
  train_f1_micro_oob:
  - 0.810320781032078
  - 0.8118846694796061
  - 0.8128531073446328
  - 0.8033826638477801
  - 0.8136842105263158
  train_f1_samples:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435029
  - 0.9069767441860465
  - 0.9196491228070176
  train_f1_samples_oob:
  - 0.8103207810320782
  - 0.8118846694796062
  - 0.8128531073446328
  - 0.8033826638477801
  - 0.8136842105263158
  train_f1_weighted:
  - 0.9214515247465038
  - 0.9155999219861191
  - 0.9184238245714833
  - 0.910102653921227
  - 0.9226826660330285
  train_f1_weighted_oob:
  - 0.8089072335934261
  - 0.8090943254415632
  - 0.8110432825816336
  - 0.8013090641837557
  - 0.8109611500534633
  train_jaccard_macro:
  - 0.8497743196561616
  - 0.8424731183334236
  - 0.8453117495769122
  - 0.8328772719322989
  - 0.8533755281472807
  train_jaccard_macro_oob:
  - 0.6833585667771284
  - 0.6859979941145354
  - 0.686884887273612
  - 0.6741175590947147
  - 0.6878267327926239
  train_jaccard_micro:
  - 0.8473429951690822
  - 0.8395860284605433
  - 0.8431500162707452
  - 0.8297872340425532
  - 0.8512504059759662
  train_jaccard_micro_oob:
  - 0.6811254396248535
  - 0.6833382657591003
  - 0.6847114812611541
  - 0.6713780918727915
  - 0.6858917480035492
  train_jaccard_samples:
  - 0.8663578402072125
  - 0.8567410086397428
  - 0.8609765940274413
  - 0.8486861975234069
  - 0.8679899749373432
  train_jaccard_samples_oob:
  - 0.710988244670253
  - 0.711543098251959
  - 0.7124192897497982
  - 0.7002114164904862
  - 0.7151077694235589
  train_jaccard_weighted:
  - 0.8568327811198336
  - 0.8470749858498491
  - 0.8513240832573324
  - 0.8380040186994768
  - 0.8585303201475339
  train_jaccard_weighted_oob:
  - 0.6810671857728727
  - 0.6816215865377226
  - 0.683996579757115
  - 0.6708480766941258
  - 0.683725258888753
  train_label_ranking_average_precision_score:
  - 0.9661204091120408
  - 0.9632676980778244
  - 0.9616878531073441
  - 0.9626614987080101
  - 0.9620467836257308
  train_label_ranking_average_precision_score_oob:
  - 0.8308751743375163
  - 0.8296413502109694
  - 0.825623822975517
  - 0.8102184637068343
  - 0.8275029239766072
  train_matthews_corrcoef_macro:
  - 0.7958943080481968
  - 0.7858864523846368
  - 0.792174612698079
  - 0.7720747131708423
  - 0.803252563614597
  train_matthews_corrcoef_macro_oob:
  - 0.5052572560395752
  - 0.5181946178286904
  - 0.5245725343221231
  - 0.48379255906003954
  - 0.5287725956167236
  train_matthews_corrcoef_micro:
  - 0.8056412869596824
  - 0.7952542234773667
  - 0.8011402841863585
  - 0.7820401573946205
  - 0.8117339300352591
  train_matthews_corrcoef_micro_oob:
  - 0.5313665277902788
  - 0.5374311364169237
  - 0.5404897237014223
  - 0.5145770887139219
  - 0.541559608083296
  train_matthews_corrcoef_samples:
  - 0.783140097175434
  - 0.7695160539612366
  - 0.7601164839309466
  - 0.7474488999887635
  - 0.7753501690120914
  train_matthews_corrcoef_samples_oob:
  - 0.5080474812728225
  - 0.4931511259861082
  - 0.4948423043386675
  - 0.4715072154945637
  - 0.5021446700080819
  train_matthews_corrcoef_weighted:
  - 0.8079183661959501
  - 0.7953568822993026
  - 0.8029866572026272
  - 0.7825792123275926
  - 0.8128657808375547
  train_matthews_corrcoef_weighted_oob:
  - 0.5148747714836953
  - 0.5225736306375466
  - 0.5308999708703401
  - 0.4917879240846698
  - 0.5333311494381131
  train_ndgc:
  - 0.977393507182233
  - 0.9752435534837931
  - 0.9737773218882066
  - 0.9749470687452416
  - 0.9739220334366381
  train_ndgc_oob:
  - 0.8858892747891737
  - 0.8844676519707915
  - 0.8806219854625638
  - 0.8709895568567014
  - 0.8823209368522411
  train_neg_coverage_error:
  - -1.9874476987447698
  - -2.00210970464135
  - -1.9978813559322033
  - -2.0063424947145876
  - -1.9915789473684211
  train_neg_coverage_error_oob:
  - -2.6066945606694563
  - -2.628691983122363
  - -2.6461864406779663
  - -2.7378435517970403
  - -2.6189473684210527
  train_neg_hamming_loss_macro:
  - -0.08263598326359832
  - -0.08720112517580873
  - -0.08509887005649719
  - -0.09302325581395349
  - -0.08035087719298246
  train_neg_hamming_loss_macro_oob:
  - -0.18967921896792192
  - -0.18811533052039384
  - -0.18714689265536724
  - -0.19661733615221985
  - -0.1863157894736842
  train_neg_hamming_loss_micro:
  - -0.08263598326359832
  - -0.08720112517580872
  - -0.08509887005649718
  - -0.09302325581395349
  - -0.08035087719298245
  train_neg_hamming_loss_micro_oob:
  - -0.1896792189679219
  - -0.1881153305203938
  - -0.18714689265536724
  - -0.19661733615221988
  - -0.1863157894736842
  train_neg_hamming_loss_samples:
  - -0.08263598326359832
  - -0.0872011251758087
  - -0.08509887005649718
  - -0.09302325581395349
  - -0.08035087719298246
  train_neg_hamming_loss_samples_oob:
  - -0.18967921896792186
  - -0.18811533052039378
  - -0.18714689265536721
  - -0.19661733615221988
  - -0.1863157894736842
  train_neg_hamming_loss_weighted:
  - -0.07854847525349617
  - -0.08440007801388076
  - -0.08157617542851671
  - -0.08989734607877294
  - -0.0773173339669716
  train_neg_hamming_loss_weighted_oob:
  - -0.19109276640657394
  - -0.19090567455843668
  - -0.18895671741836637
  - -0.19869093581624422
  - -0.18903884994653677
  train_neg_label_ranking_loss:
  - -0.021763133426313343
  - -0.02167721518987342
  - -0.021257062146892654
  - -0.022445384073291053
  - -0.02192982456140351
  train_neg_label_ranking_loss_oob:
  - -0.1307298930729893
  - -0.13385489920300048
  - -0.1377412900188324
  - -0.1542224571294339
  - -0.1319298245614035
  train_precision_macro:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435029
  - 0.9069767441860465
  - 0.9196491228070175
  train_precision_macro_oob:
  - 0.810320781032078
  - 0.8118846694796061
  - 0.8128531073446328
  - 0.80338266384778
  - 0.8136842105263158
  train_precision_micro:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435028
  - 0.9069767441860465
  - 0.9196491228070175
  train_precision_micro_oob:
  - 0.810320781032078
  - 0.8118846694796061
  - 0.8128531073446328
  - 0.8033826638477801
  - 0.8136842105263158
  train_precision_samples:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435029
  - 0.9069767441860465
  - 0.9196491228070176
  train_precision_samples_oob:
  - 0.8103207810320782
  - 0.8118846694796062
  - 0.8128531073446328
  - 0.8033826638477801
  - 0.8136842105263158
  train_precision_weighted:
  - 0.9214515247465038
  - 0.9155999219861191
  - 0.9184238245714833
  - 0.910102653921227
  - 0.9226826660330285
  train_precision_weighted_oob:
  - 0.8089072335934261
  - 0.8090943254415632
  - 0.8110432825816336
  - 0.8013090641837557
  - 0.8109611500534633
  train_recall_macro:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435029
  - 0.9069767441860465
  - 0.9196491228070175
  train_recall_macro_oob:
  - 0.810320781032078
  - 0.8118846694796061
  - 0.8128531073446328
  - 0.80338266384778
  - 0.8136842105263158
  train_recall_micro:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435028
  - 0.9069767441860465
  - 0.9196491228070175
  train_recall_micro_oob:
  - 0.810320781032078
  - 0.8118846694796061
  - 0.8128531073446328
  - 0.8033826638477801
  - 0.8136842105263158
  train_recall_samples:
  - 0.9173640167364017
  - 0.9127988748241913
  - 0.9149011299435029
  - 0.9069767441860465
  - 0.9196491228070176
  train_recall_samples_oob:
  - 0.8103207810320782
  - 0.8118846694796062
  - 0.8128531073446328
  - 0.8033826638477801
  - 0.8136842105263158
  train_recall_weighted:
  - 0.9214515247465038
  - 0.9155999219861191
  - 0.9184238245714833
  - 0.910102653921227
  - 0.9226826660330285
  train_recall_weighted_oob:
  - 0.8089072335934261
  - 0.8090943254415632
  - 0.8110432825816336
  - 0.8013090641837557
  - 0.8109611500534633
  train_roc_auc_macro:
  - 0.9901008088178914
  - 0.9896787292291362
  - 0.990620715050058
  - 0.9906464890984431
  - 0.9905814920687405
  train_roc_auc_macro_oob:
  - 0.8748213907249299
  - 0.8755145247240411
  - 0.8742284323632726
  - 0.8594897244818137
  - 0.8801083015932286
  train_roc_auc_micro:
  - 0.9844890344890345
  - 0.984655435723754
  - 0.9848893995978167
  - 0.9846166922621471
  - 0.9852836382193249
  train_roc_auc_micro_oob:
  - 0.8837143962143962
  - 0.8860875220856071
  - 0.8863568172387476
  - 0.8721690781926507
  - 0.8899720936219903
  train_roc_auc_samples:
  - 0.9782368665736867
  - 0.9783227848101266
  - 0.9787429378531073
  - 0.9775546159267089
  - 0.9780701754385965
  train_roc_auc_samples_oob:
  - 0.8692701069270107
  - 0.8661451007969996
  - 0.8622587099811676
  - 0.8457775428705661
  - 0.8680701754385964
  train_roc_auc_weighted:
  - 0.9904789531192708
  - 0.9896125847243626
  - 0.9906771834531507
  - 0.9905722780092784
  - 0.9905621867578458
  train_roc_auc_weighted_oob:
  - 0.8758929473120697
  - 0.8755585556747135
  - 0.8743346633691513
  - 0.8593253299178379
  - 0.8790845163476445
start: 2023-12-22 01:43:36.404874
wrapper: null
