active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z/MzMzMzMz8v6CZmZmZmck/NDMzMzMz8z+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACMAAAAAAAADwPw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:30:49.972838
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__2
  params: {}
hash: d8b76beab4e61a582cae2359c3b85b79c124eac3006f5a7e04083f0e089c4fb7
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d8b76be_20231221T223031365225_embedding_weak__2_CHD_49.yml
results:
  fit_time:
  - 8.145787715911865
  - 8.123255014419556
  - 9.369728803634644
  - 8.24113130569458
  - 8.786956548690796
  score_time:
  - 1.8724515438079834
  - 1.8902943134307861
  - 2.101996660232544
  - 2.1591107845306396
  - 2.1675679683685303
  test_average_precision_macro:
  - 0.5392885931351221
  - 0.5355267134255971
  - 0.5588058318778225
  - 0.4878425630474827
  - 0.5443617643088866
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6954723942553936
  - 0.6839431522827543
  - 0.7072071058177644
  - 0.6442622904674822
  - 0.684459732325907
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7713838838838839
  - 0.7767642642642643
  - 0.7849515800203875
  - 0.7590034113060429
  - 0.7883459595959595
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6702964155681111
  - 0.6494008235463291
  - 0.6864895834578948
  - 0.6106136831781207
  - 0.6519242715514039
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6951951951951951
  - 0.6921921921921922
  - 0.698776758409786
  - 0.6915204678362573
  - 0.6909090909090908
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6951951951951952
  - 0.6921921921921922
  - 0.6987767584097859
  - 0.6915204678362573
  - 0.6909090909090909
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.695195195195195
  - 0.6921921921921923
  - 0.6987767584097859
  - 0.6915204678362573
  - 0.6909090909090908
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6474516474516475
  - 0.6532469969969971
  - 0.6573747353563868
  - 0.6407832962688411
  - 0.6506313131313132
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5564129029214285
  - 0.5497330877848127
  - 0.5591465452393688
  - 0.5531773606802243
  - 0.5490560446322329
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5327963176064442
  - 0.529276693455798
  - 0.5370152761457109
  - 0.5284916201117319
  - 0.5277777777777778
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5740532740532741
  - 0.5577902577902578
  - 0.568636562214544
  - 0.5667122351332878
  - 0.5616489571035026
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.48672629411828416
  - 0.49441100418501105
  - 0.49838636988206697
  - 0.4801520833775162
  - 0.49076883255898973
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7713838838838838
  - 0.7857732732732734
  - 0.7941258919469928
  - 0.7590034113060429
  - 0.7974368686868688
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05301502174614888
  - 0.04033689834862176
  - 0.05510450550733267
  - 0.05340823933266007
  - 0.046531434961293215
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.401651943837457
  - 0.39981221474826156
  - 0.4073874312281583
  - 0.39884715917458086
  - 0.38901569985992585
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.403430255253053
  - 0.4140135170539019
  - 0.41509138959574177
  - 0.4015137065764558
  - 0.39189615170096337
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.04276848780968296
  - 0.03582976189108534
  - 0.04761774383701663
  - 0.045423934383410365
  - 0.03864766951693337
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8472216519342752
  - 0.854294998008538
  - 0.8584092970904995
  - 0.8386530597229679
  - 0.8590444076146578
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.81981981981982
  - -3.81981981981982
  - -3.8623853211009176
  - -3.8508771929824563
  - -3.827272727272727
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.30480480480480476
  - -0.3078078078078078
  - -0.3012232415902141
  - -0.30847953216374274
  - -0.3090909090909091
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3048048048048048
  - -0.3078078078078078
  - -0.3012232415902141
  - -0.3084795321637427
  - -0.3090909090909091
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3048048048048047
  - -0.3078078078078078
  - -0.3012232415902141
  - -0.30847953216374263
  - -0.309090909090909
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.35254835254835254
  - -0.34675300300300305
  - -0.34262526464361326
  - -0.3592167037311589
  - -0.3493686868686869
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2236986986986987
  - -0.21031031031031028
  - -0.20950560652395517
  - -0.23460038986354778
  - -0.211010101010101
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6951951951951951
  - 0.6921921921921922
  - 0.698776758409786
  - 0.6915204678362573
  - 0.6909090909090908
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6951951951951952
  - 0.6921921921921922
  - 0.6987767584097859
  - 0.6915204678362573
  - 0.6909090909090909
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.695195195195195
  - 0.6921921921921923
  - 0.6987767584097859
  - 0.6915204678362573
  - 0.6909090909090908
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6474516474516475
  - 0.6532469969969971
  - 0.6573747353563868
  - 0.6407832962688411
  - 0.6506313131313132
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6951951951951951
  - 0.6921921921921922
  - 0.698776758409786
  - 0.6915204678362573
  - 0.6909090909090908
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6951951951951952
  - 0.6921921921921922
  - 0.6987767584097859
  - 0.6915204678362573
  - 0.6909090909090909
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.695195195195195
  - 0.6921921921921923
  - 0.6987767584097859
  - 0.6915204678362573
  - 0.6909090909090908
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6474516474516475
  - 0.6532469969969971
  - 0.6573747353563868
  - 0.6407832962688411
  - 0.6506313131313132
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5487572447461777
  - 0.6047606308271106
  - 0.597025092586234
  - 0.5717102038723771
  - 0.6344121718191281
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.780576002944424
  - 0.7880474720752498
  - 0.7897347217999391
  - 0.7681690140845071
  - 0.7831074522102748
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7763013013013014
  - .nan
  - .nan
  - 0.7653996101364524
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5956923301607664
  - 0.633916127105803
  - 0.6094660666654768
  - 0.5729176213974888
  - 0.6055082098091109
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8668076468967242
  - 0.8731348239254988
  - 0.8581919063574133
  - 0.8682120671187602
  - 0.8656960301213795
  train_average_precision_macro_oob:
  - 0.5694490752027517
  - 0.5731615410565961
  - 0.5675812019504353
  - 0.592757584096501
  - 0.5495491879186772
  train_average_precision_micro:
  - 0.7332841220378329
  - 0.7514121184550494
  - 0.7312203683086499
  - 0.723501203496069
  - 0.7410017780380211
  train_average_precision_micro_oob:
  - 0.6927669633590052
  - 0.7050354225288006
  - 0.6872528010174431
  - 0.6813846014720393
  - 0.6903789180885987
  train_average_precision_samples:
  - 0.8099568318318319
  - 0.8074699699699699
  - 0.8049856751370205
  - 0.8009826152683296
  - 0.814294631710362
  train_average_precision_samples_oob:
  - 0.7847097097097097
  - 0.7820945945945945
  - 0.7802441454907821
  - 0.7783320735701689
  - 0.7833395755305868
  train_average_precision_weighted:
  - 0.8219540067740576
  - 0.8300628546509092
  - 0.8082534779293994
  - 0.8257346860526541
  - 0.8202149110719456
  train_average_precision_weighted_oob:
  - 0.6873016259739652
  - 0.6947614241614686
  - 0.6822242332061433
  - 0.6987258235562048
  - 0.669649041880262
  train_f1_macro:
  - 0.781906906906907
  - 0.7781531531531533
  - 0.7784005979073244
  - 0.7860922146636433
  - 0.7808988764044945
  train_f1_macro_oob:
  - 0.7004504504504506
  - 0.6981981981981983
  - 0.6969357249626307
  - 0.7018140589569163
  - 0.6943820224719102
  train_f1_micro:
  - 0.7819069069069069
  - 0.7781531531531531
  - 0.7784005979073244
  - 0.7860922146636432
  - 0.7808988764044944
  train_f1_micro_oob:
  - 0.7004504504504504
  - 0.6981981981981982
  - 0.6969357249626308
  - 0.7018140589569161
  - 0.6943820224719102
  train_f1_samples:
  - 0.7819069069069068
  - 0.7781531531531531
  - 0.7784005979073243
  - 0.7860922146636431
  - 0.7808988764044944
  train_f1_samples_oob:
  - 0.7004504504504504
  - 0.6981981981981982
  - 0.6969357249626307
  - 0.7018140589569161
  - 0.6943820224719102
  train_f1_weighted:
  - 0.7235036083203622
  - 0.7195079695079695
  - 0.7193318150869861
  - 0.729471347191606
  - 0.7219454702600769
  train_f1_weighted_oob:
  - 0.6556648271307957
  - 0.6521057771057771
  - 0.6512513793346325
  - 0.6580625281471473
  - 0.6489294413451717
  train_jaccard_macro:
  - 0.6776618015686852
  - 0.6713817112289459
  - 0.6718976974531099
  - 0.6807558211696447
  - 0.6767042707505277
  train_jaccard_macro_oob:
  - 0.561154884584398
  - 0.5591518990471762
  - 0.5573528988569015
  - 0.562268498813836
  - 0.5549232904500184
  train_jaccard_micro:
  - 0.6419106317411403
  - 0.6368663594470046
  - 0.6371979198531661
  - 0.6475716064757161
  - 0.6405529953917051
  train_jaccard_micro_oob:
  - 0.5389948006932409
  - 0.5363321799307958
  - 0.5348437051907083
  - 0.5406113537117904
  - 0.53184165232358
  train_jaccard_samples:
  - 0.6740357240357241
  - 0.6733171483171483
  - 0.6713868343913186
  - 0.6800561494439046
  - 0.6741894060995184
  train_jaccard_samples_oob:
  - 0.57000507000507
  - 0.5709049959049959
  - 0.5681313454856055
  - 0.5732563732563732
  - 0.5630818619582666
  train_jaccard_weighted:
  - 0.5938632030363393
  - 0.5870043459878359
  - 0.5873428423266377
  - 0.599034950119514
  - 0.5919624128354357
  train_jaccard_weighted_oob:
  - 0.49701893249007145
  - 0.4924854824382299
  - 0.4918326775373649
  - 0.49936167224344796
  - 0.48934140995890585
  train_label_ranking_average_precision_score:
  - 0.816713588588588
  - 0.8119744744744737
  - 0.8094699800697557
  - 0.8077853363567649
  - 0.8187890137328343
  train_label_ranking_average_precision_score_oob:
  - 0.7914664664664652
  - 0.7865990990990984
  - 0.7847284504235172
  - 0.7851347946586034
  - 0.7878339575530582
  train_matthews_corrcoef_macro:
  - 0.2951109138431984
  - 0.287422171293954
  - 0.29532677317968065
  - 0.3208509508867299
  - 0.2951560386947962
  train_matthews_corrcoef_macro_oob:
  - 0.0882892501135717
  - 0.07440983998422207
  - 0.07713999439159241
  - 0.08764713709434609
  - 0.06183023698361317
  train_matthews_corrcoef_micro:
  - 0.6068378332264112
  - 0.5968215881049247
  - 0.5985301718324916
  - 0.6121824382215904
  - 0.6046289211430103
  train_matthews_corrcoef_micro_oob:
  - 0.4102159244902501
  - 0.40533532528170263
  - 0.4019208612070169
  - 0.4120952985475944
  - 0.3960387356775253
  train_matthews_corrcoef_samples:
  - 0.6229024336516561
  - 0.6106885877202131
  - 0.6146279528730488
  - 0.6311905585305817
  - 0.6201665870809342
  train_matthews_corrcoef_samples_oob:
  - 0.4236728710143245
  - 0.4157182744408382
  - 0.410836189161249
  - 0.42378713337674473
  - 0.4058012715377162
  train_matthews_corrcoef_weighted:
  - 0.24673312295164135
  - 0.24514130797245648
  - 0.24949715342150777
  - 0.2803439288068448
  - 0.25074638177515746
  train_matthews_corrcoef_weighted_oob:
  - 0.07084998705537779
  - 0.06042368200735668
  - 0.06203030940659487
  - 0.07118216973861859
  - 0.04870028704990058
  train_ndgc:
  - 0.8746838402556761
  - 0.8726478255870566
  - 0.870735163083127
  - 0.8665455437275418
  - 0.8779851620384215
  train_ndgc_oob:
  - 0.8574728726005354
  - 0.8549590955470088
  - 0.8549128668652667
  - 0.8532051219061066
  - 0.8582933428001601
  train_neg_coverage_error:
  - -3.529279279279279
  - -3.545045045045045
  - -3.5448430493273544
  - -3.54421768707483
  - -3.5303370786516854
  train_neg_coverage_error_oob:
  - -3.759009009009009
  - -3.765765765765766
  - -3.7690582959641254
  - -3.7845804988662133
  - -3.8134831460674157
  train_neg_hamming_loss_macro:
  - -0.2180930930930931
  - -0.22184684684684686
  - -0.22159940209267567
  - -0.21390778533635676
  - -0.2191011235955056
  train_neg_hamming_loss_macro_oob:
  - -0.29954954954954954
  - -0.3018018018018019
  - -0.3030642750373692
  - -0.2981859410430839
  - -0.3056179775280899
  train_neg_hamming_loss_micro:
  - -0.2180930930930931
  - -0.22184684684684686
  - -0.22159940209267565
  - -0.21390778533635676
  - -0.21910112359550563
  train_neg_hamming_loss_micro_oob:
  - -0.29954954954954954
  - -0.30180180180180183
  - -0.3030642750373692
  - -0.2981859410430839
  - -0.3056179775280899
  train_neg_hamming_loss_samples:
  - -0.21809309309309308
  - -0.22184684684684686
  - -0.22159940209267562
  - -0.2139077853363568
  - -0.21910112359550563
  train_neg_hamming_loss_samples_oob:
  - -0.29954954954954954
  - -0.30180180180180183
  - -0.3030642750373692
  - -0.2981859410430839
  - -0.30561797752808983
  train_neg_hamming_loss_weighted:
  - -0.2764963916796378
  - -0.28049203049203053
  - -0.2806681849130139
  - -0.270528652808394
  - -0.278054529739923
  train_neg_hamming_loss_weighted_oob:
  - -0.3443351728692043
  - -0.3478942228942229
  - -0.3487486206653676
  - -0.34193747185285267
  - -0.35107055865482834
  train_neg_label_ranking_loss:
  - -0.16291291291291293
  - -0.16891891891891891
  - -0.17015445939212753
  - -0.16754850088183423
  - -0.16127340823970038
  train_neg_label_ranking_loss_oob:
  - -0.20307182182182182
  - -0.20746996996997
  - -0.20799701046337815
  - -0.20524061476442432
  - -0.20689138576779026
  train_precision_macro:
  - 0.781906906906907
  - 0.7781531531531533
  - 0.7784005979073244
  - 0.7860922146636433
  - 0.7808988764044945
  train_precision_macro_oob:
  - 0.7004504504504506
  - 0.6981981981981983
  - 0.6969357249626307
  - 0.7018140589569163
  - 0.6943820224719102
  train_precision_micro:
  - 0.7819069069069069
  - 0.7781531531531531
  - 0.7784005979073244
  - 0.7860922146636432
  - 0.7808988764044944
  train_precision_micro_oob:
  - 0.7004504504504504
  - 0.6981981981981982
  - 0.6969357249626308
  - 0.7018140589569161
  - 0.6943820224719102
  train_precision_samples:
  - 0.7819069069069068
  - 0.7781531531531531
  - 0.7784005979073243
  - 0.7860922146636431
  - 0.7808988764044944
  train_precision_samples_oob:
  - 0.7004504504504504
  - 0.6981981981981982
  - 0.6969357249626307
  - 0.7018140589569161
  - 0.6943820224719102
  train_precision_weighted:
  - 0.7235036083203622
  - 0.7195079695079695
  - 0.7193318150869861
  - 0.729471347191606
  - 0.7219454702600769
  train_precision_weighted_oob:
  - 0.6556648271307957
  - 0.6521057771057771
  - 0.6512513793346325
  - 0.6580625281471473
  - 0.6489294413451717
  train_recall_macro:
  - 0.781906906906907
  - 0.7781531531531533
  - 0.7784005979073244
  - 0.7860922146636433
  - 0.7808988764044945
  train_recall_macro_oob:
  - 0.7004504504504506
  - 0.6981981981981983
  - 0.6969357249626307
  - 0.7018140589569163
  - 0.6943820224719102
  train_recall_micro:
  - 0.7819069069069069
  - 0.7781531531531531
  - 0.7784005979073244
  - 0.7860922146636432
  - 0.7808988764044944
  train_recall_micro_oob:
  - 0.7004504504504504
  - 0.6981981981981982
  - 0.6969357249626308
  - 0.7018140589569161
  - 0.6943820224719102
  train_recall_samples:
  - 0.7819069069069068
  - 0.7781531531531531
  - 0.7784005979073243
  - 0.7860922146636431
  - 0.7808988764044944
  train_recall_samples_oob:
  - 0.7004504504504504
  - 0.6981981981981982
  - 0.6969357249626307
  - 0.7018140589569161
  - 0.6943820224719102
  train_recall_weighted:
  - 0.7235036083203622
  - 0.7195079695079695
  - 0.7193318150869861
  - 0.729471347191606
  - 0.7219454702600769
  train_recall_weighted_oob:
  - 0.6556648271307957
  - 0.6521057771057771
  - 0.6512513793346325
  - 0.6580625281471473
  - 0.6489294413451717
  train_roc_auc_macro:
  - 0.8406847262960836
  - 0.8433555094087047
  - 0.8324244757796938
  - 0.8449079224768955
  - 0.8446741075701291
  train_roc_auc_macro_oob:
  - 0.6535631445107469
  - 0.6480460690219926
  - 0.6113565088825758
  - 0.6382600496943099
  - 0.6060853595272553
  train_roc_auc_micro:
  - 0.8393271435042435
  - 0.8443201946080237
  - 0.8389915477534818
  - 0.8402582653759019
  - 0.843396569027303
  train_roc_auc_micro_oob:
  - 0.7942249722354435
  - 0.7983086814501289
  - 0.7937104335626048
  - 0.7919764098937956
  - 0.7918772741020448
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7706383861033868
  - 0.7751686079530784
  - 0.756727259664647
  - 0.778108574966438
  - 0.7744455117814634
  train_roc_auc_weighted_oob:
  - 0.6580326962286307
  - 0.6590239368295324
  - 0.6383738842205143
  - 0.6515756665060484
  - 0.6409857762521569
start: 2023-12-21 22:30:31.365225
wrapper: null
