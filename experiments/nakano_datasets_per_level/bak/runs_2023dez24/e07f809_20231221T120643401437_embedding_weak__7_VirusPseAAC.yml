active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMBAMzMzMzMDQACamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:10:06.132139
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__7
  params: {}
hash: e07f809619dfaeb64f5744f1bbf6a35fe7e65e7e1f34667c85fb503cc25d970b
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e07f809_20231221T120643401437_embedding_weak__7_VirusPseAAC.yml
results:
  fit_time:
  - 185.24771904945374
  - 186.97268438339233
  - 190.25864481925964
  - 192.9575481414795
  - 190.535982131958
  score_time:
  - 3.1175312995910645
  - 3.2019550800323486
  - 3.4088857173919678
  - 3.6467020511627197
  - 3.387357234954834
  test_average_precision_macro:
  - 0.41431938421487874
  - 0.35774760042919834
  - 0.3373161508127746
  - 0.44994196241592793
  - 0.3709143115183658
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4351168951763419
  - 0.42399747023263906
  - 0.4437242242691809
  - 0.4684362948342748
  - 0.42241485793843936
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6392045454545454
  - 0.6856125356125357
  - 0.641869918699187
  - 0.6932926829268293
  - 0.6503968253968254
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.43702954164746904
  - 0.41121918051626566
  - 0.45551044068453517
  - 0.471003801427612
  - 0.4286697747002241
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8030303030303031
  - 0.7948717948717948
  - 0.8008130081300813
  - 0.7926829268292682
  - 0.7936507936507936
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.803030303030303
  - 0.7948717948717948
  - 0.8008130081300813
  - 0.7926829268292683
  - 0.7936507936507936
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8030303030303032
  - 0.7948717948717948
  - 0.8008130081300814
  - 0.7926829268292684
  - 0.7936507936507937
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6949300699300699
  - 0.672008547008547
  - 0.6779492284718766
  - 0.6829268292682926
  - 0.6804029304029304
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6945296884225528
  - 0.68704654518608
  - 0.6948487424642963
  - 0.6812234548100626
  - 0.6832132249965706
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6708860759493671
  - 0.6595744680851063
  - 0.6677966101694915
  - 0.6565656565656566
  - 0.6578947368421053
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6753246753246755
  - 0.6660561660561662
  - 0.6736353077816493
  - 0.6620209059233451
  - 0.6643990929705217
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5508492741624239
  - 0.5256480922178596
  - 0.5319838643629202
  - 0.5376280415044036
  - 0.5351974480935424
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6392045454545453
  - 0.6856125356125357
  - 0.641869918699187
  - 0.6932926829268292
  - 0.6503968253968253
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7315840692729375
  - 0.7688021152500074
  - 0.732468517587787
  - 0.7710443930737179
  - 0.7392420783865183
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.3636363636363638
  - -2.230769230769231
  - -2.341463414634146
  - -2.3658536585365852
  - -2.4047619047619047
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19696969696969693
  - -0.20512820512820515
  - -0.1991869918699187
  - -0.2073170731707317
  - -0.20634920634920637
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19696969696969696
  - -0.20512820512820512
  - -0.1991869918699187
  - -0.2073170731707317
  - -0.20634920634920634
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1969696969696969
  - -0.20512820512820512
  - -0.19918699186991867
  - -0.20731707317073167
  - -0.20634920634920634
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.30506993006993005
  - -0.327991452991453
  - -0.32205077152812345
  - -0.3170731707317073
  - -0.31959706959706957
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23636363636363633
  - -0.2014957264957265
  - -0.22953929539295392
  - -0.2268292682926829
  - -0.2321428571428571
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8030303030303031
  - 0.7948717948717948
  - 0.8008130081300813
  - 0.7926829268292682
  - 0.7936507936507936
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.803030303030303
  - 0.7948717948717948
  - 0.8008130081300813
  - 0.7926829268292683
  - 0.7936507936507936
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8030303030303032
  - 0.7948717948717948
  - 0.8008130081300814
  - 0.7926829268292684
  - 0.7936507936507937
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6949300699300699
  - 0.672008547008547
  - 0.6779492284718766
  - 0.6829268292682926
  - 0.6804029304029304
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8030303030303031
  - 0.7948717948717948
  - 0.8008130081300813
  - 0.7926829268292682
  - 0.7936507936507936
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.803030303030303
  - 0.7948717948717948
  - 0.8008130081300813
  - 0.7926829268292683
  - 0.7936507936507936
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8030303030303032
  - 0.7948717948717948
  - 0.8008130081300814
  - 0.7926829268292684
  - 0.7936507936507937
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6949300699300699
  - 0.672008547008547
  - 0.6779492284718766
  - 0.6829268292682926
  - 0.6804029304029304
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6153756219319945
  - 0.6392326057043718
  - 0.6261791202967674
  - 0.6363180407298054
  - 0.6400036613085781
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7718613933236576
  - 0.7848342293906809
  - 0.7764425567181187
  - 0.783911513323278
  - 0.7834615384615384
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7636363636363637
  - 0.7985042735042736
  - 0.7704607046070461
  - 0.7731707317073171
  - 0.7678571428571429
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.572991001356386
  - 0.5659372616323418
  - 0.5781485567199853
  - 0.6276691916830325
  - 0.5939967707730865
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7133786567106766
  - 0.699797592479988
  - 0.7379318879341534
  - 0.6855317261291013
  - 0.7228170381598097
  train_average_precision_macro_oob:
  - 0.34193993469855966
  - 0.3682810838880542
  - 0.40467719166614796
  - 0.3710678656249328
  - 0.3859694786293417
  train_average_precision_micro:
  - 0.7526991839056717
  - 0.7616624546138107
  - 0.7778022578899851
  - 0.7480790340344796
  - 0.7436723477728419
  train_average_precision_micro_oob:
  - 0.5358249731382447
  - 0.5340854334032169
  - 0.5462643389022127
  - 0.5613938340583094
  - 0.5246111980787558
  train_average_precision_samples:
  - 0.8055214723926379
  - 0.821031746031746
  - 0.8155622489959838
  - 0.8054216867469879
  - 0.7987878787878788
  train_average_precision_samples_oob:
  - 0.694052488070893
  - 0.6905753968253969
  - 0.7082663989290495
  - 0.7139390896921017
  - 0.7008417508417508
  train_average_precision_weighted:
  - 0.7434417108667233
  - 0.7442691433337076
  - 0.7725673929803097
  - 0.7433777522850212
  - 0.7399746352227429
  train_average_precision_weighted_oob:
  - 0.5012919297433166
  - 0.5063232086934885
  - 0.5221318963927295
  - 0.5242283748460824
  - 0.4881749145446696
  train_f1_macro:
  - 0.8036809815950919
  - 0.7996031746031748
  - 0.8042168674698796
  - 0.8092369477911646
  - 0.8070707070707072
  train_f1_macro_oob:
  - 0.7955010224948875
  - 0.7976190476190478
  - 0.7961847389558233
  - 0.7981927710843374
  - 0.797979797979798
  train_f1_micro:
  - 0.803680981595092
  - 0.7996031746031746
  - 0.8042168674698795
  - 0.8092369477911646
  - 0.807070707070707
  train_f1_micro_oob:
  - 0.7955010224948875
  - 0.7976190476190477
  - 0.7961847389558233
  - 0.7981927710843374
  - 0.797979797979798
  train_f1_samples:
  - 0.8036809815950918
  - 0.7996031746031745
  - 0.8042168674698793
  - 0.8092369477911645
  - 0.8070707070707068
  train_f1_samples_oob:
  - 0.7955010224948873
  - 0.7976190476190477
  - 0.7961847389558231
  - 0.7981927710843372
  - 0.7979797979797978
  train_f1_weighted:
  - 0.6953374233128835
  - 0.6884920634920636
  - 0.6990919342394208
  - 0.704189893903974
  - 0.7010606060606059
  train_f1_weighted_oob:
  - 0.6787116564417178
  - 0.6844654528478058
  - 0.6830969196984984
  - 0.6819217167176167
  - 0.6826060606060607
  train_jaccard_macro:
  - 0.6947982638636184
  - 0.6904599315250494
  - 0.6949044254776173
  - 0.7014495248506876
  - 0.6987884186673102
  train_jaccard_macro_oob:
  - 0.6864806044012582
  - 0.6884573925936794
  - 0.6865510686043232
  - 0.6899038730062433
  - 0.6894420492736416
  train_jaccard_micro:
  - 0.6717948717948717
  - 0.6661157024793388
  - 0.672544080604534
  - 0.6795952782462057
  - 0.676545300592718
  train_jaccard_micro_oob:
  - 0.6604414261460102
  - 0.6633663366336634
  - 0.6613844870725605
  - 0.6641604010025063
  - 0.6638655462184874
  train_jaccard_samples:
  - 0.680105170902717
  - 0.6723356009070296
  - 0.6804360298336203
  - 0.6888984509466437
  - 0.6849927849927852
  train_jaccard_samples_oob:
  - 0.6665205959684488
  - 0.6689342403628118
  - 0.6670969592656341
  - 0.6699655765920827
  - 0.6694083694083695
  train_jaccard_weighted:
  - 0.5500124237195212
  - 0.5434504792930398
  - 0.5545376552829945
  - 0.5598664965204362
  - 0.5562312087598987
  train_jaccard_weighted_oob:
  - 0.5331098444778465
  - 0.5393870013018195
  - 0.5379070722664732
  - 0.5365957337601076
  - 0.5372618560954743
  train_label_ranking_average_precision_score:
  - 0.8055214723926379
  - 0.821031746031746
  - 0.8155622489959841
  - 0.8054216867469879
  - 0.7987878787878787
  train_label_ranking_average_precision_score_oob:
  - 0.6940524880708931
  - 0.6905753968253968
  - 0.7082663989290494
  - 0.7139390896921015
  - 0.7008417508417508
  train_matthews_corrcoef_macro:
  - 0.06212700149746014
  - 0.03089997505315188
  - 0.057703598161285084
  - 0.07006057545157053
  - 0.06590869393635776
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.17911581233046994
  - 0.08851746096562904
  - 0.1778505022224649
  - 0.21016663122333104
  - 0.19036420911004184
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.04682488056462378
  - 0.011904761904761904
  - 0.0459786477833354
  - 0.06626506024096386
  - 0.05454545454545454
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.12647350572952207
  - 0.0626975971615367
  - 0.11561749677014647
  - 0.1420513622646741
  - 0.13408161951988937
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8566731190314887
  - 0.8668921398500887
  - 0.8647655066632038
  - 0.8565841769575059
  - 0.8515092856355677
  train_ndgc_oob:
  - 0.771942381365498
  - 0.7689035863058897
  - 0.7837380733850952
  - 0.7871105021047703
  - 0.7775166478556144
  train_neg_coverage_error:
  - -1.8773006134969326
  - -1.869047619047619
  - -1.8674698795180722
  - -1.855421686746988
  - -1.8424242424242425
  train_neg_coverage_error_oob:
  - -2.3374233128834354
  - -2.3452380952380953
  - -2.246987951807229
  - -2.253012048192771
  - -2.2606060606060607
  train_neg_hamming_loss_macro:
  - -0.19631901840490798
  - -0.20039682539682543
  - -0.1957831325301205
  - -0.19076305220883538
  - -0.19292929292929292
  train_neg_hamming_loss_macro_oob:
  - -0.2044989775051125
  - -0.2023809523809524
  - -0.20381526104417672
  - -0.2018072289156627
  - -0.202020202020202
  train_neg_hamming_loss_micro:
  - -0.19631901840490798
  - -0.2003968253968254
  - -0.19578313253012047
  - -0.19076305220883535
  - -0.19292929292929292
  train_neg_hamming_loss_micro_oob:
  - -0.20449897750511248
  - -0.20238095238095238
  - -0.20381526104417672
  - -0.20180722891566266
  - -0.20202020202020202
  train_neg_hamming_loss_samples:
  - -0.19631901840490798
  - -0.20039682539682543
  - -0.19578313253012047
  - -0.19076305220883533
  - -0.19292929292929292
  train_neg_hamming_loss_samples_oob:
  - -0.20449897750511245
  - -0.20238095238095238
  - -0.20381526104417677
  - -0.20180722891566266
  - -0.20202020202020204
  train_neg_hamming_loss_weighted:
  - -0.3046625766871166
  - -0.3115079365079365
  - -0.30090806576057927
  - -0.29581010609602587
  - -0.29893939393939395
  train_neg_hamming_loss_weighted_oob:
  - -0.32128834355828223
  - -0.3155345471521942
  - -0.3169030803015016
  - -0.3180782832823833
  - -0.3173939393939394
  train_neg_label_ranking_loss:
  - -0.1249147920927062
  - -0.12685185185185185
  - -0.1214524765729585
  - -0.12356091030789827
  - -0.12324915824915823
  train_neg_label_ranking_loss_oob:
  - -0.22213701431492838
  - -0.2250661375661376
  - -0.20306224899598396
  - -0.2068273092369478
  - -0.2098989898989899
  train_precision_macro:
  - 0.8036809815950919
  - 0.7996031746031748
  - 0.8042168674698796
  - 0.8092369477911646
  - 0.8070707070707072
  train_precision_macro_oob:
  - 0.7955010224948875
  - 0.7976190476190478
  - 0.7961847389558233
  - 0.7981927710843374
  - 0.797979797979798
  train_precision_micro:
  - 0.803680981595092
  - 0.7996031746031746
  - 0.8042168674698795
  - 0.8092369477911646
  - 0.807070707070707
  train_precision_micro_oob:
  - 0.7955010224948875
  - 0.7976190476190477
  - 0.7961847389558233
  - 0.7981927710843374
  - 0.797979797979798
  train_precision_samples:
  - 0.8036809815950918
  - 0.7996031746031745
  - 0.8042168674698793
  - 0.8092369477911645
  - 0.8070707070707068
  train_precision_samples_oob:
  - 0.7955010224948873
  - 0.7976190476190477
  - 0.7961847389558231
  - 0.7981927710843372
  - 0.7979797979797978
  train_precision_weighted:
  - 0.6953374233128835
  - 0.6884920634920636
  - 0.6990919342394208
  - 0.704189893903974
  - 0.7010606060606059
  train_precision_weighted_oob:
  - 0.6787116564417178
  - 0.6844654528478058
  - 0.6830969196984984
  - 0.6819217167176167
  - 0.6826060606060607
  train_recall_macro:
  - 0.8036809815950919
  - 0.7996031746031748
  - 0.8042168674698796
  - 0.8092369477911646
  - 0.8070707070707072
  train_recall_macro_oob:
  - 0.7955010224948875
  - 0.7976190476190478
  - 0.7961847389558233
  - 0.7981927710843374
  - 0.797979797979798
  train_recall_micro:
  - 0.803680981595092
  - 0.7996031746031746
  - 0.8042168674698795
  - 0.8092369477911646
  - 0.807070707070707
  train_recall_micro_oob:
  - 0.7955010224948875
  - 0.7976190476190477
  - 0.7961847389558233
  - 0.7981927710843374
  - 0.797979797979798
  train_recall_samples:
  - 0.8036809815950918
  - 0.7996031746031745
  - 0.8042168674698793
  - 0.8092369477911645
  - 0.8070707070707068
  train_recall_samples_oob:
  - 0.7955010224948873
  - 0.7976190476190477
  - 0.7961847389558231
  - 0.7981927710843372
  - 0.7979797979797978
  train_recall_weighted:
  - 0.6953374233128835
  - 0.6884920634920636
  - 0.6990919342394208
  - 0.704189893903974
  - 0.7010606060606059
  train_recall_weighted_oob:
  - 0.6787116564417178
  - 0.6844654528478058
  - 0.6830969196984984
  - 0.6819217167176167
  - 0.6826060606060607
  train_roc_auc_macro:
  - 0.8043243367644769
  - 0.8059681816783333
  - 0.8377866866132475
  - 0.8140580419614935
  - 0.8105188724836863
  train_roc_auc_macro_oob:
  - 0.5957049315349648
  - 0.664633710894746
  - 0.6629305298196454
  - 0.6563656302928691
  - 0.6141187514561837
  train_roc_auc_micro:
  - 0.8781619537275064
  - 0.8848283094332259
  - 0.8969989874455675
  - 0.8849713695672581
  - 0.8800632911392404
  train_roc_auc_micro_oob:
  - 0.7843380462724936
  - 0.7978550873085553
  - 0.8083228247162675
  - 0.8026846897587534
  - 0.783632911392405
  train_roc_auc_samples:
  - 0.8750852079072938
  - 0.8731481481481482
  - 0.8785475234270415
  - 0.8764390896921017
  - 0.8767508417508417
  train_roc_auc_samples_oob:
  - 0.7778629856850715
  - 0.7749338624338623
  - 0.796937751004016
  - 0.7931726907630522
  - 0.7901010101010102
  train_roc_auc_weighted:
  - 0.7697947290948032
  - 0.7717538509674933
  - 0.8163673520283554
  - 0.7833491049442542
  - 0.7655466744640588
  train_roc_auc_weighted_oob:
  - 0.6393247163307891
  - 0.6756043470912554
  - 0.6900607377957912
  - 0.6822273014437192
  - 0.6267811852383178
start: 2023-12-21 12:06:43.401437
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
