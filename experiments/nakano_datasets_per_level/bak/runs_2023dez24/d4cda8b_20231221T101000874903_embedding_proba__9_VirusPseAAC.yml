active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T9gZmZmZmYSwIBmZmZmZvY/oJmZmZmZEUCAmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:11:44.658815
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__9
  params: {}
hash: d4cda8b02bf0ff4496d7dcc27443ade523425dc35889d9dbaeb5ffc5a5bb3baf
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d4cda8b_20231221T101000874903_embedding_proba__9_VirusPseAAC.yml
results:
  fit_time:
  - 83.65659642219543
  - 83.66549777984619
  - 86.34395909309387
  - 87.69021654129028
  - 86.64931321144104
  score_time:
  - 5.757762908935547
  - 5.952811002731323
  - 6.13122034072876
  - 5.966787338256836
  - 6.135354995727539
  test_average_precision_macro:
  - 0.26624157213148364
  - 0.25886827398650686
  - 0.48935259959362404
  - 0.47077699075546464
  - 0.3675835749187811
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.40845523873418277
  - 0.33452137387062625
  - 0.389743571664447
  - 0.5030675393393724
  - 0.4697262617215124
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6411924119241192
  - 0.6036231884057971
  - 0.629375
  - 0.6790540540540541
  - 0.7017441860465117
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.39255404817534373
  - 0.38570629129716544
  - 0.43450696318560944
  - 0.5047591700764825
  - 0.48672461613845236
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7682926829268294
  - 0.7971014492753623
  - 0.775
  - 0.7837837837837838
  - 0.8062015503875969
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7682926829268293
  - 0.7971014492753623
  - 0.775
  - 0.7837837837837838
  - 0.8062015503875969
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7682926829268293
  - 0.7971014492753624
  - 0.775
  - 0.7837837837837839
  - 0.8062015503875969
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6274509803921569
  - 0.6598465473145779
  - 0.6410000000000001
  - 0.6756756756756757
  - 0.7054263565891472
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6579590597623385
  - 0.6987753461384435
  - 0.6654832756781783
  - 0.6683934898903813
  - 0.6972133775766073
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6237623762376238
  - 0.6626506024096386
  - 0.6326530612244898
  - 0.6444444444444445
  - 0.6753246753246753
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6436701509872242
  - 0.6785714285714287
  - 0.65
  - 0.6685971685971687
  - 0.6888150609080843
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.47921987009740147
  - 0.5235569893219825
  - 0.49809406984819277
  - 0.5289264871146404
  - 0.5622476423733507
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6411924119241192
  - 0.6036231884057971
  - 0.6293749999999999
  - 0.679054054054054
  - 0.7017441860465117
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.01879067262391267
  - 0.05692023216434062
  - -0.008104303350100548
  - 0.03346809829293095
  - 0.0561967236261017
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.16402921165223308
  - 0.17500209245794465
  - 0.15703789870139662
  - 0.2570664638051338
  - 0.2651161984583456
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.14222663001671365
  - 0.13760482887249353
  - 0.1424341649025257
  - 0.23053573319282988
  - 0.1971439238194356
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.018679312116077797
  - 0.03948543001186003
  - -0.016532778834205116
  - 0.08524623704131637
  - 0.11239344725220339
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7350198184292113
  - 0.7025355154440198
  - 0.7245748639392828
  - 0.7624599237356036
  - 0.7797689650097606
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.3902439024390243
  - -2.6739130434782608
  - -2.475
  - -2.4324324324324325
  - -2.3488372093023258
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23170731707317074
  - -0.2028985507246377
  - -0.225
  - -0.21621621621621623
  - -0.19379844961240308
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23170731707317074
  - -0.2028985507246377
  - -0.225
  - -0.21621621621621623
  - -0.1937984496124031
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2317073170731707
  - -0.20289855072463767
  - -0.225
  - -0.2162162162162162
  - -0.19379844961240308
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.37254901960784315
  - -0.340153452685422
  - -0.359
  - -0.3243243243243243
  - -0.29457364341085274
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2291327913279133
  - -0.3227053140096618
  - -0.246875
  - -0.22432432432432434
  - -0.22642118863049096
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7682926829268294
  - 0.7971014492753623
  - 0.775
  - 0.7837837837837838
  - 0.8062015503875969
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7682926829268293
  - 0.7971014492753623
  - 0.775
  - 0.7837837837837838
  - 0.8062015503875969
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7682926829268293
  - 0.7971014492753624
  - 0.775
  - 0.7837837837837839
  - 0.8062015503875969
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6274509803921569
  - 0.6598465473145779
  - 0.6410000000000001
  - 0.6756756756756757
  - 0.7054263565891472
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7682926829268294
  - 0.7971014492753623
  - 0.775
  - 0.7837837837837838
  - 0.8062015503875969
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7682926829268293
  - 0.7971014492753623
  - 0.775
  - 0.7837837837837838
  - 0.8062015503875969
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7682926829268293
  - 0.7971014492753624
  - 0.775
  - 0.7837837837837839
  - 0.8062015503875969
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6274509803921569
  - 0.6598465473145779
  - 0.6410000000000001
  - 0.6756756756756757
  - 0.7054263565891472
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5014272127443483
  - 0.4525892924219496
  - 0.656945628492943
  - 0.6708595168272588
  - 0.6391250162770966
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7572649572649572
  - 0.6788671023965142
  - 0.7609473684210526
  - 0.7950926035153946
  - 0.7765463673392062
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7708672086720867
  - 0.6772946859903383
  - 0.753125
  - 0.7756756756756756
  - 0.7735788113695091
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5438159688197298
  - 0.5178380930916427
  - 0.5664762716680874
  - 0.6346424367820023
  - 0.6632750452693065
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9599274632744216
  - 0.9647268219932376
  - 0.9267827253532092
  - 0.9568915244580186
  - 0.9879681196951985
  train_average_precision_macro_oob:
  - 0.7646160828920955
  - 0.7873099268462623
  - 0.7299157121990817
  - 0.754432067190443
  - 0.8254117327846178
  train_average_precision_micro:
  - 0.9881297187029906
  - 0.9909272325906416
  - 0.9900046682570578
  - 0.9924945390598061
  - 0.9936451928451445
  train_average_precision_micro_oob:
  - 0.9157904012551714
  - 0.929916479686923
  - 0.9174073782614629
  - 0.9258537243644253
  - 0.9196328910996059
  train_average_precision_samples:
  - 0.9851405622489962
  - 0.9849896480331262
  - 0.9870259481037923
  - 0.9901960784313725
  - 0.9969512195121951
  train_average_precision_samples_oob:
  - 0.9398594377510039
  - 0.9376811594202898
  - 0.9053892215568862
  - 0.9245098039215688
  - 0.9375
  train_average_precision_weighted:
  - 0.9868445140525912
  - 0.9899036714693088
  - 0.9814865211963834
  - 0.988508691529555
  - 0.9953354439921605
  train_average_precision_weighted_oob:
  - 0.9037983036252817
  - 0.9113154866900535
  - 0.8949014510812457
  - 0.9101641931327605
  - 0.9249464948595242
  train_f1_macro:
  - 0.9538152610441767
  - 0.9544513457556936
  - 0.9510978043912176
  - 0.9549019607843139
  - 0.95630081300813
  train_f1_macro_oob:
  - 0.927710843373494
  - 0.934782608695652
  - 0.939121756487026
  - 0.9401960784313727
  - 0.9349593495934959
  train_f1_micro:
  - 0.9538152610441767
  - 0.9544513457556936
  - 0.9510978043912176
  - 0.9549019607843138
  - 0.9563008130081301
  train_f1_micro_oob:
  - 0.927710843373494
  - 0.9347826086956522
  - 0.9391217564870259
  - 0.9401960784313725
  - 0.9349593495934959
  train_f1_samples:
  - 0.9538152610441768
  - 0.9544513457556937
  - 0.9510978043912175
  - 0.954901960784314
  - 0.9563008130081302
  train_f1_samples_oob:
  - 0.927710843373494
  - 0.9347826086956522
  - 0.9391217564870258
  - 0.9401960784313724
  - 0.9349593495934958
  train_f1_weighted:
  - 0.9727566984355333
  - 0.9759896171317326
  - 0.9700302365565897
  - 0.9741813966966097
  - 0.9755187477247906
  train_f1_weighted_oob:
  - 0.9424264221063358
  - 0.9573869781527147
  - 0.9579652576036045
  - 0.9562735439003187
  - 0.9486409416332969
  train_jaccard_macro:
  - 0.9140741379660606
  - 0.9156599171014066
  - 0.9088520023287588
  - 0.9159395971306186
  - 0.9189237043241295
  train_jaccard_macro_oob:
  - 0.8672372457873272
  - 0.8802992794916799
  - 0.8875897030340392
  - 0.8890220610025561
  - 0.8794164351433241
  train_jaccard_micro:
  - 0.9117082533589251
  - 0.9128712871287129
  - 0.9067554709800191
  - 0.9136960600375235
  - 0.9162609542356378
  train_jaccard_micro_oob:
  - 0.8651685393258427
  - 0.8775510204081632
  - 0.8852304797742239
  - 0.8871415356151712
  - 0.8778625954198473
  train_jaccard_samples:
  - 0.9229776247848538
  - 0.9248742975451048
  - 0.9200171086398631
  - 0.9252100840336134
  - 0.9279907084785134
  train_jaccard_samples_oob:
  - 0.8810958118187033
  - 0.8942620526471459
  - 0.9006273167949814
  - 0.9015406162464984
  - 0.8944541231126598
  train_jaccard_weighted:
  - 0.9486518902083028
  - 0.9551586312749548
  - 0.9434315310406035
  - 0.9513273250728811
  - 0.9540408332098359
  train_jaccard_weighted_oob:
  - 0.8930871997783899
  - 0.9211457813603695
  - 0.9216027824810471
  - 0.917995230280198
  - 0.9036038123775956
  train_label_ranking_average_precision_score:
  - 0.9851405622489959
  - 0.9849896480331262
  - 0.9870259481037923
  - 0.9901960784313725
  - 0.9969512195121951
  train_label_ranking_average_precision_score_oob:
  - 0.9398594377510039
  - 0.9376811594202898
  - 0.9053892215568863
  - 0.9245098039215688
  - 0.9375
  train_matthews_corrcoef_macro:
  - 0.4801910855251037
  - 0.48418697299713537
  - 0.46513043499945855
  - 0.47516361869377793
  - 0.4861006661869458
  train_matthews_corrcoef_macro_oob:
  - 0.37688115678165923
  - 0.40693550035527754
  - 0.41687587774555496
  - 0.4229207349310165
  - 0.41345630615692625
  train_matthews_corrcoef_micro:
  - 0.8537945668004124
  - 0.8594255371667077
  - 0.8448141494236694
  - 0.8556722300759592
  - 0.863219757801218
  train_matthews_corrcoef_micro_oob:
  - 0.7665486574926209
  - 0.7959242640450929
  - 0.8053363265246146
  - 0.8063256620149605
  - 0.7928065516104543
  train_matthews_corrcoef_samples:
  - 0.7828256239089673
  - 0.7997934847046954
  - 0.7836614545786501
  - 0.7986401735925623
  - 0.8018404876426134
  train_matthews_corrcoef_samples_oob:
  - 0.6542740437088453
  - 0.7027613676496957
  - 0.7211032893361354
  - 0.7242447995013862
  - 0.7059575349002114
  train_matthews_corrcoef_weighted:
  - 0.7803811901087429
  - 0.7883194274417629
  - 0.7738237907278046
  - 0.7854166506908545
  - 0.7921850347023673
  train_matthews_corrcoef_weighted_oob:
  - 0.6796937738261853
  - 0.7220726814786396
  - 0.7301347684965301
  - 0.731051219879581
  - 0.7147251962808837
  train_ndgc:
  - 0.9891527882957657
  - 0.9890881155772419
  - 0.9903759835970921
  - 0.9927168206302524
  - 0.9977495716681186
  train_ndgc_oob:
  - 0.95699342424172
  - 0.9554964493957961
  - 0.9310741144391596
  - 0.9447344930957811
  - 0.9540351209799834
  train_neg_coverage_error:
  - -1.2590361445783131
  - -1.2919254658385093
  - -1.2395209580838322
  - -1.2176470588235293
  - -1.2317073170731707
  train_neg_coverage_error_oob:
  - -1.427710843373494
  - -1.4782608695652173
  - -1.5389221556886228
  - -1.4470588235294117
  - -1.4268292682926829
  train_neg_hamming_loss_macro:
  - -0.04618473895582329
  - -0.04554865424430641
  - -0.048902195608782444
  - -0.04509803921568628
  - -0.04369918699186992
  train_neg_hamming_loss_macro_oob:
  - -0.07228915662650602
  - -0.06521739130434782
  - -0.06087824351297405
  - -0.059803921568627454
  - -0.06504065040650407
  train_neg_hamming_loss_micro:
  - -0.04618473895582329
  - -0.045548654244306416
  - -0.04890219560878244
  - -0.045098039215686274
  - -0.04369918699186992
  train_neg_hamming_loss_micro_oob:
  - -0.07228915662650602
  - -0.06521739130434782
  - -0.06087824351297405
  - -0.059803921568627454
  - -0.06504065040650407
  train_neg_hamming_loss_samples:
  - -0.04618473895582329
  - -0.04554865424430641
  - -0.048902195608782444
  - -0.045098039215686274
  - -0.043699186991869914
  train_neg_hamming_loss_samples_oob:
  - -0.07228915662650602
  - -0.06521739130434782
  - -0.06087824351297406
  - -0.05980392156862745
  - -0.06504065040650406
  train_neg_hamming_loss_weighted:
  - -0.02724330156446682
  - -0.02401038286826736
  - -0.029969763443410208
  - -0.02581860330339032
  - -0.02448125227520932
  train_neg_hamming_loss_weighted_oob:
  - -0.057573577893664206
  - -0.04261302184728531
  - -0.042034742396395326
  - -0.043726456099681246
  - -0.05135905836670306
  train_neg_label_ranking_loss:
  - -0.009186746987951806
  - -0.008229813664596273
  - -0.005988023952095809
  - -0.004705882352941177
  - -0.0012195121951219512
  train_neg_label_ranking_loss_oob:
  - -0.038621151271753675
  - -0.04090752242926155
  - -0.06314038589487692
  - -0.04785947712418301
  - -0.039701897018970186
  train_precision_macro:
  - 0.9538152610441767
  - 0.9544513457556936
  - 0.9510978043912176
  - 0.9549019607843139
  - 0.95630081300813
  train_precision_macro_oob:
  - 0.927710843373494
  - 0.934782608695652
  - 0.939121756487026
  - 0.9401960784313727
  - 0.9349593495934959
  train_precision_micro:
  - 0.9538152610441767
  - 0.9544513457556936
  - 0.9510978043912176
  - 0.9549019607843138
  - 0.9563008130081301
  train_precision_micro_oob:
  - 0.927710843373494
  - 0.9347826086956522
  - 0.9391217564870259
  - 0.9401960784313725
  - 0.9349593495934959
  train_precision_samples:
  - 0.9538152610441768
  - 0.9544513457556937
  - 0.9510978043912175
  - 0.954901960784314
  - 0.9563008130081302
  train_precision_samples_oob:
  - 0.927710843373494
  - 0.9347826086956522
  - 0.9391217564870258
  - 0.9401960784313724
  - 0.9349593495934958
  train_precision_weighted:
  - 0.9727566984355333
  - 0.9759896171317326
  - 0.9700302365565897
  - 0.9741813966966097
  - 0.9755187477247906
  train_precision_weighted_oob:
  - 0.9424264221063358
  - 0.9573869781527147
  - 0.9579652576036045
  - 0.9562735439003187
  - 0.9486409416332969
  train_recall_macro:
  - 0.9538152610441767
  - 0.9544513457556936
  - 0.9510978043912176
  - 0.9549019607843139
  - 0.95630081300813
  train_recall_macro_oob:
  - 0.927710843373494
  - 0.934782608695652
  - 0.939121756487026
  - 0.9401960784313727
  - 0.9349593495934959
  train_recall_micro:
  - 0.9538152610441767
  - 0.9544513457556936
  - 0.9510978043912176
  - 0.9549019607843138
  - 0.9563008130081301
  train_recall_micro_oob:
  - 0.927710843373494
  - 0.9347826086956522
  - 0.9391217564870259
  - 0.9401960784313725
  - 0.9349593495934959
  train_recall_samples:
  - 0.9538152610441768
  - 0.9544513457556937
  - 0.9510978043912175
  - 0.954901960784314
  - 0.9563008130081302
  train_recall_samples_oob:
  - 0.927710843373494
  - 0.9347826086956522
  - 0.9391217564870258
  - 0.9401960784313724
  - 0.9349593495934958
  train_recall_weighted:
  - 0.9727566984355333
  - 0.9759896171317326
  - 0.9700302365565897
  - 0.9741813966966097
  - 0.9755187477247906
  train_recall_weighted_oob:
  - 0.9424264221063358
  - 0.9573869781527147
  - 0.9579652576036045
  - 0.9562735439003187
  - 0.9486409416332969
  train_roc_auc_macro:
  - 0.9964484957759429
  - 0.9974891705437243
  - 0.9955232666567029
  - 0.9969559103197314
  - 0.9982539861997403
  train_roc_auc_macro_oob:
  - 0.9596035617151074
  - 0.9676658684922604
  - 0.9593777109405087
  - 0.9677587811732326
  - 0.974845009524075
  train_roc_auc_micro:
  - 0.9960136424794268
  - 0.997021428803694
  - 0.9968626237623763
  - 0.9978957015634515
  - 0.997934973917132
  train_roc_auc_micro_oob:
  - 0.9627335022998217
  - 0.9695834552726563
  - 0.9617574257425743
  - 0.9672778578362506
  - 0.9686497270988607
  train_roc_auc_samples:
  - 0.9908132530120481
  - 0.9917701863354038
  - 0.9940119760479041
  - 0.9952941176470588
  - 0.9987804878048782
  train_roc_auc_samples_oob:
  - 0.9613788487282464
  - 0.9590924775707385
  - 0.9368596141051232
  - 0.952140522875817
  - 0.9602981029810298
  train_roc_auc_weighted:
  - 0.997931754515554
  - 0.9989046327776218
  - 0.998029269288938
  - 0.9989127477112579
  - 0.9984945000529521
  train_roc_auc_weighted_oob:
  - 0.9767371014603825
  - 0.9799718838218244
  - 0.9780648330119568
  - 0.9835229772948072
  - 0.982962086837036
start: 2023-12-21 10:10:00.874903
wrapper: null
