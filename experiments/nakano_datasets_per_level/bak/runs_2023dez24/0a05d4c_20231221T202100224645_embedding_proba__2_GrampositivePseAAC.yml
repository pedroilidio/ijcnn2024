active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmpmZmZnpPwDNzMzMzPw/ADMzMzMz878AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:21:16.669062
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__2
  params: {}
hash: 0a05d4c066c9e3c52ef3ea35765388dc370adea4dad0b07898d61f6fd87a0e47
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0a05d4c_20231221T202100224645_embedding_proba__2_GrampositivePseAAC.yml
results:
  fit_time:
  - 6.140659332275391
  - 6.038517713546753
  - 5.864125728607178
  - 5.939244508743286
  - 6.139291763305664
  score_time:
  - 2.3611228466033936
  - 2.51306414604187
  - 2.483423948287964
  - 2.413214921951294
  - 2.349928855895996
  test_average_precision_macro:
  - 0.39207584837629567
  - 0.3807969138967614
  - 0.3543419935785472
  - 0.3838194550882956
  - 0.4082199313305246
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4754445662173026
  - 0.5091369320432859
  - 0.45313181857147544
  - 0.4667664069961784
  - 0.5710799679123952
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7150793650793652
  - 0.686084142394822
  - 0.6821895424836599
  - 0.6992063492063492
  - 0.7219551282051282
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.48331482855577357
  - 0.49380566394223985
  - 0.45283861474477416
  - 0.47281487672150707
  - 0.5400625934816986
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7523809523809524
  - 0.7475728155339807
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7523809523809524
  - 0.7475728155339806
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7523809523809524
  - 0.7475728155339806
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6808163265306123
  - 0.6663554891710232
  - 0.6677136874167143
  - 0.6671201814058957
  - 0.6783381712626996
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6227844128154519
  - 0.6197216872176006
  - 0.6193823208421748
  - 0.6128465232815334
  - 0.6197940872108515
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6030534351145038
  - 0.5968992248062015
  - 0.5968688845401174
  - 0.5909090909090909
  - 0.6
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6063492063492062
  - 0.5974110032362459
  - 0.5986928104575163
  - 0.5923809523809522
  - 0.6025641025641024
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5225609788751785
  - 0.5064871621764286
  - 0.5076894475377929
  - 0.5083454504980274
  - 0.5193825340488176
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7150793650793648
  - 0.6860841423948222
  - 0.6821895424836604
  - 0.6992063492063493
  - 0.7219551282051279
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.022821773229381923
  - 0.0
  - 0.0070696540224258
  - -0.03431646085035748
  - 0.042533010193445984
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0887213950734269
  - 0.0
  - 0.03999491911352163
  - -0.04897021068743918
  - 0.11886192009118095
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.022222222222222223
  - 0.0
  - 0.006535947712418302
  - -0.009523809523809525
  - 0.019230769230769232
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.03651483716701108
  - 0.0
  - 0.011256536501726516
  - -0.05359904361389168
  - 0.06741080860848042
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.787131097509585
  - 0.7663792980511358
  - 0.7627785686898402
  - 0.7760169694143507
  - 0.7935973617572498
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7904761904761906
  - -1.8058252427184467
  - -1.8725490196078431
  - -1.7714285714285714
  - -1.8076923076923077
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.24761904761904763
  - -0.2524271844660194
  - -0.25245098039215685
  - -0.2571428571428572
  - -0.25
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24761904761904763
  - -0.2524271844660194
  - -0.25245098039215685
  - -0.2571428571428571
  - -0.25
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24761904761904763
  - -0.2524271844660194
  - -0.25245098039215685
  - -0.2571428571428571
  - -0.25
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.31918367346938775
  - -0.33364451082897684
  - -0.3322863125832857
  - -0.33287981859410426
  - -0.3216618287373004
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.26349206349206344
  - -0.2669902912621359
  - -0.2875816993464052
  - -0.2571428571428571
  - -0.25961538461538464
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7523809523809524
  - 0.7475728155339807
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7523809523809524
  - 0.7475728155339806
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7523809523809524
  - 0.7475728155339806
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6808163265306123
  - 0.6663554891710232
  - 0.6677136874167143
  - 0.6671201814058957
  - 0.6783381712626996
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7523809523809524
  - 0.7475728155339807
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7523809523809524
  - 0.7475728155339806
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7523809523809524
  - 0.7475728155339806
  - 0.7475490196078431
  - 0.7428571428571429
  - 0.75
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6808163265306123
  - 0.6663554891710232
  - 0.6677136874167143
  - 0.6671201814058957
  - 0.6783381712626996
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6521102533143598
  - 0.6200304932099422
  - 0.6188212038985537
  - 0.6343860565265711
  - 0.6440196076566512
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7527135298563871
  - 0.758991008991009
  - 0.7325799777176508
  - 0.7488133030990174
  - 0.7745283018867923
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7365079365079366
  - 0.7330097087378642
  - 0.7124183006535948
  - 0.7428571428571429
  - 0.7403846153846154
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6412869516327891
  - 0.6365860014892033
  - 0.606539168443953
  - 0.6294761988953999
  - 0.6882368789256534
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7595677386562267
  - 0.7715256724931143
  - 0.8097224176556578
  - 0.7745486990350099
  - 0.7683529074074225
  train_average_precision_macro_oob:
  - 0.6811370035496138
  - 0.6668601731671856
  - 0.754998084232233
  - 0.6773052588889057
  - 0.7324995102732439
  train_average_precision_micro:
  - 0.8336722358661982
  - 0.842070294879825
  - 0.8570516103041832
  - 0.8472286184268207
  - 0.8297606233696047
  train_average_precision_micro_oob:
  - 0.8103521509934669
  - 0.8166425506470505
  - 0.8320553510588021
  - 0.8245579381273822
  - 0.8120826044122932
  train_average_precision_samples:
  - 0.839573268921095
  - 0.8535657051282051
  - 0.8653077537969626
  - 0.8572866344605474
  - 0.845582329317269
  train_average_precision_samples_oob:
  - 0.8232689210950082
  - 0.8359375
  - 0.8381294964028777
  - 0.839573268921095
  - 0.8248995983935743
  train_average_precision_weighted:
  - 0.8245940418706219
  - 0.8359732939509661
  - 0.8529543059490459
  - 0.8407103884335212
  - 0.8216397030310109
  train_average_precision_weighted_oob:
  - 0.8040862953605322
  - 0.8090533289743576
  - 0.8359051394645526
  - 0.8165811031216575
  - 0.812946658735824
  train_f1_macro:
  - 0.8580917874396135
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_f1_macro_oob:
  - 0.8043478260869564
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.804951690821256
  - 0.8090361445783132
  train_f1_micro:
  - 0.8580917874396136
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_f1_micro_oob:
  - 0.8043478260869565
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.8049516908212561
  - 0.8090361445783133
  train_f1_samples:
  - 0.8580917874396136
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_f1_samples_oob:
  - 0.8043478260869565
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.8049516908212561
  - 0.8090361445783133
  train_f1_weighted:
  - 0.8200540877886416
  - 0.8299350559941252
  - 0.8258707319858399
  - 0.8296523588285603
  - 0.8279737655658606
  train_f1_weighted_oob:
  - 0.7527795113607471
  - 0.76164631907472
  - 0.7456491949297704
  - 0.7567609735801956
  - 0.7614457831325301
  train_jaccard_macro:
  - 0.7581288751708224
  - 0.7676200080813943
  - 0.7627478630846954
  - 0.7697390802619128
  - 0.7675264674663531
  train_jaccard_macro_oob:
  - 0.6849191720397889
  - 0.6930844496143248
  - 0.6729166926098655
  - 0.6851532580083612
  - 0.6907003643742953
  train_jaccard_micro:
  - 0.7514542570068746
  - 0.7617787188988883
  - 0.7567140600315956
  - 0.7635782747603834
  - 0.7612732095490716
  train_jaccard_micro_oob:
  - 0.6727272727272727
  - 0.6816574027286508
  - 0.6605276256844201
  - 0.6735725113693785
  - 0.6793120890237734
  train_jaccard_samples:
  - 0.7739130434782608
  - 0.7836538461538461
  - 0.7787370103916865
  - 0.7855072463768115
  - 0.7831325301204818
  train_jaccard_samples_oob:
  - 0.6879227053140096
  - 0.698076923076923
  - 0.6735411670663468
  - 0.6888888888888888
  - 0.6947791164658633
  train_jaccard_weighted:
  - 0.6972371095452026
  - 0.7114377844459419
  - 0.7054674876776146
  - 0.7112239385356682
  - 0.708730044054858
  train_jaccard_weighted_oob:
  - 0.6064745077295607
  - 0.6182266306317423
  - 0.5970279166995073
  - 0.6110073403309145
  - 0.6173563566685254
  train_label_ranking_average_precision_score:
  - 0.8395732689210947
  - 0.8535657051282046
  - 0.865307753796962
  - 0.857286634460547
  - 0.8455823293172683
  train_label_ranking_average_precision_score_oob:
  - 0.8232689210950076
  - 0.8359374999999994
  - 0.8381294964028771
  - 0.8395732689210945
  - 0.8248995983935734
  train_matthews_corrcoef_macro:
  - 0.44706953036234365
  - 0.46406595679814766
  - 0.45517153837690105
  - 0.46733966292844387
  - 0.4624269858167329
  train_matthews_corrcoef_macro_oob:
  - 0.2874781514317618
  - 0.3115192265021237
  - 0.2017108318629294
  - 0.2651715112960794
  - 0.28702645945147115
  train_matthews_corrcoef_micro:
  - 0.6065915454361132
  - 0.6262098027514451
  - 0.6162110225732503
  - 0.6305561839629406
  - 0.6243888274756553
  train_matthews_corrcoef_micro_oob:
  - 0.4221779954516018
  - 0.4450738052549319
  - 0.38435651285752354
  - 0.42455360463126973
  - 0.4371245896826728
  train_matthews_corrcoef_samples:
  - 0.4410080924376561
  - 0.4632981990566559
  - 0.45121031304167686
  - 0.4693463794124601
  - 0.4606137362370584
  train_matthews_corrcoef_samples_oob:
  - 0.22603224702702807
  - 0.25
  - 0.18843489273186959
  - 0.22844770596422614
  - 0.23994542233539667
  train_matthews_corrcoef_weighted:
  - 0.5738602314181198
  - 0.5932886069557299
  - 0.5832430739113977
  - 0.5975811367783312
  - 0.5916695710458939
  train_matthews_corrcoef_weighted_oob:
  - 0.3839515807745391
  - 0.4083935608692611
  - 0.300791228466265
  - 0.37111593855939445
  - 0.3917864219244378
  train_ndgc:
  - 0.8806331688390261
  - 0.8910002395245912
  - 0.8997228059565487
  - 0.893853415292851
  - 0.8847432152394512
  train_ndgc_oob:
  - 0.8686253551418393
  - 0.8777847935517197
  - 0.8795831300538212
  - 0.8806036477124185
  - 0.8693710263432748
  train_neg_coverage_error:
  - -1.4396135265700483
  - -1.3798076923076923
  - -1.3717026378896882
  - -1.3864734299516908
  - -1.4240963855421687
  train_neg_coverage_error_oob:
  - -1.4806763285024154
  - -1.4615384615384615
  - -1.4508393285371703
  - -1.4541062801932367
  - -1.4867469879518072
  train_neg_hamming_loss_macro:
  - -0.14190821256038647
  - -0.13521634615384615
  - -0.13848920863309352
  - -0.13405797101449274
  - -0.1355421686746988
  train_neg_hamming_loss_macro_oob:
  - -0.1956521739130435
  - -0.1893028846153846
  - -0.20443645083932852
  - -0.19504830917874397
  - -0.19096385542168676
  train_neg_hamming_loss_micro:
  - -0.14190821256038647
  - -0.13521634615384615
  - -0.13848920863309352
  - -0.13405797101449277
  - -0.1355421686746988
  train_neg_hamming_loss_micro_oob:
  - -0.1956521739130435
  - -0.1893028846153846
  - -0.20443645083932854
  - -0.19504830917874397
  - -0.19096385542168676
  train_neg_hamming_loss_samples:
  - -0.14190821256038647
  - -0.13521634615384615
  - -0.13848920863309352
  - -0.13405797101449277
  - -0.1355421686746988
  train_neg_hamming_loss_samples_oob:
  - -0.1956521739130435
  - -0.1893028846153846
  - -0.20443645083932854
  - -0.19504830917874397
  - -0.19096385542168676
  train_neg_hamming_loss_weighted:
  - -0.17994591221135844
  - -0.17006494400587477
  - -0.17412926801416012
  - -0.1703476411714398
  - -0.17202623443413942
  train_neg_hamming_loss_weighted_oob:
  - -0.24722048863925294
  - -0.23835368092528
  - -0.2543508050702295
  - -0.24323902641980447
  - -0.2385542168674699
  train_neg_label_ranking_loss:
  - -0.1427133655394525
  - -0.12419871794871794
  - -0.12110311750599519
  - -0.1252012882447665
  - -0.13975903614457832
  train_neg_label_ranking_loss_oob:
  - -0.15619967793880835
  - -0.15084134615384615
  - -0.14708233413269384
  - -0.1473429951690821
  - -0.1604417670682731
  train_precision_macro:
  - 0.8580917874396135
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_precision_macro_oob:
  - 0.8043478260869564
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.804951690821256
  - 0.8090361445783132
  train_precision_micro:
  - 0.8580917874396136
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_precision_micro_oob:
  - 0.8043478260869565
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.8049516908212561
  - 0.8090361445783133
  train_precision_samples:
  - 0.8580917874396136
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_precision_samples_oob:
  - 0.8043478260869565
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.8049516908212561
  - 0.8090361445783133
  train_precision_weighted:
  - 0.8200540877886416
  - 0.8299350559941252
  - 0.8258707319858399
  - 0.8296523588285603
  - 0.8279737655658606
  train_precision_weighted_oob:
  - 0.7527795113607471
  - 0.76164631907472
  - 0.7456491949297704
  - 0.7567609735801956
  - 0.7614457831325301
  train_recall_macro:
  - 0.8580917874396135
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_recall_macro_oob:
  - 0.8043478260869564
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.804951690821256
  - 0.8090361445783132
  train_recall_micro:
  - 0.8580917874396136
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_recall_micro_oob:
  - 0.8043478260869565
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.8049516908212561
  - 0.8090361445783133
  train_recall_samples:
  - 0.8580917874396136
  - 0.8647836538461539
  - 0.8615107913669064
  - 0.8659420289855072
  - 0.8644578313253012
  train_recall_samples_oob:
  - 0.8043478260869565
  - 0.8106971153846154
  - 0.7955635491606715
  - 0.8049516908212561
  - 0.8090361445783133
  train_recall_weighted:
  - 0.8200540877886416
  - 0.8299350559941252
  - 0.8258707319858399
  - 0.8296523588285603
  - 0.8279737655658606
  train_recall_weighted_oob:
  - 0.7527795113607471
  - 0.76164631907472
  - 0.7456491949297704
  - 0.7567609735801956
  - 0.7614457831325301
  train_roc_auc_macro:
  - 0.8676485606370039
  - 0.8663580183325021
  - 0.8968455706622303
  - 0.8789342853259792
  - 0.8754506941384371
  train_roc_auc_macro_oob:
  - 0.8431444233352753
  - 0.8309141491380099
  - 0.8793186571148256
  - 0.8481060684464056
  - 0.8622552778103926
  train_roc_auc_micro:
  - 0.9082174521337858
  - 0.9135098868025803
  - 0.9216517857142859
  - 0.9159317003037776
  - 0.9074105156743472
  train_roc_auc_micro_oob:
  - 0.889826545361789
  - 0.8901285332259826
  - 0.9012706043956045
  - 0.8935541968447333
  - 0.89112748417517
  train_roc_auc_samples:
  - 0.8572866344605475
  - 0.8758012820512822
  - 0.8788968824940048
  - 0.8747987117552334
  - 0.8602409638554217
  train_roc_auc_samples_oob:
  - 0.8438003220611917
  - 0.8491586538461539
  - 0.8529176658673061
  - 0.8526570048309179
  - 0.8395582329317269
  train_roc_auc_weighted:
  - 0.8759462371069928
  - 0.8843293556442442
  - 0.8975062934919794
  - 0.8871773494731554
  - 0.8742267089400607
  train_roc_auc_weighted_oob:
  - 0.8582158946678768
  - 0.8639963539757369
  - 0.8825338446835163
  - 0.866459122471458
  - 0.8628640193584229
start: 2023-12-21 20:21:00.224645
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
