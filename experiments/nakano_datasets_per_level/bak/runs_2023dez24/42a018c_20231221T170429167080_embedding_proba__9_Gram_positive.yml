active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwCamZmZmek/ADMzMzMz878AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:06:23.913576
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__9
  params: {}
hash: 42a018c29df68d876df113d45553d0be1ddc47866cc9370677093ebae31a9103
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/42a018c_20231221T170429167080_embedding_proba__9_Gram_positive.yml
results:
  fit_time:
  - 89.37026381492615
  - 89.1699731349945
  - 88.57018685340881
  - 90.52940273284912
  - 92.03028964996338
  score_time:
  - 7.3382580280303955
  - 7.323086738586426
  - 6.940553903579712
  - 7.55488920211792
  - 7.74958610534668
  test_average_precision_macro:
  - 0.9169777148247592
  - 0.9528572327641663
  - 0.976713174011587
  - 0.8026875596283229
  - 0.9072363766810033
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9697115609090027
  - 0.9854007505128178
  - 0.9680493026580976
  - 0.948580451710549
  - 0.9701379788287904
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.967147435897436
  - 0.9652103559870551
  - 0.9595469255663431
  - 0.9579365079365079
  - 0.9559294871794872
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9654958314243387
  - 0.9864402407863764
  - 0.9724621095887872
  - 0.9223466694020159
  - 0.9714216442270758
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8317307692307692
  - 0.8373786407766991
  - 0.8009708737864079
  - 0.8261904761904761
  - 0.8317307692307692
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8317307692307693
  - 0.837378640776699
  - 0.8009708737864077
  - 0.8261904761904761
  - 0.8317307692307693
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8317307692307693
  - 0.837378640776699
  - 0.8009708737864077
  - 0.8261904761904761
  - 0.8317307692307693
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7832840236686389
  - 0.7908887229275579
  - 0.7442120985810305
  - 0.7862533692722372
  - 0.7889194139194138
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.72303474574275
  - 0.7300317518735537
  - 0.681539498399545
  - 0.7121701971044889
  - 0.7208789462064905
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7119341563786008
  - 0.7202505219206681
  - 0.6680161943319838
  - 0.7038539553752535
  - 0.7119341563786008
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7307692307692306
  - 0.741100323624595
  - 0.6828478964401291
  - 0.7231746031746029
  - 0.732051282051282
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6482896217065319
  - 0.659178175723205
  - 0.5977074001304319
  - 0.6494242709317906
  - 0.652781065918162
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9671474358974359
  - 0.965210355987055
  - 0.959546925566343
  - 0.957936507936508
  - 0.9559294871794871
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.37170784811609864
  - 0.40189226879192386
  - 0.30203044999812484
  - 0.3429681295177165
  - 0.3592630532605149
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5167356256406972
  - 0.5405600135092571
  - 0.40873113899508673
  - 0.5025894625933794
  - 0.521623416485899
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3269230769230769
  - 0.3592233009708738
  - 0.21359223300970873
  - 0.3142857142857143
  - 0.33653846153846156
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.48267777438458564
  - 0.5068043634255042
  - 0.38080548886989735
  - 0.4608233988566879
  - 0.4834530749917345
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.975523034349608
  - 0.974766352714795
  - 0.9700631871359244
  - 0.9687262388524013
  - 0.9671665896724104
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0865384615384615
  - -1.1067961165048543
  - -1.0970873786407767
  - -1.1142857142857143
  - -1.125
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.16826923076923075
  - -0.16262135922330095
  - -0.19902912621359223
  - -0.1738095238095238
  - -0.16826923076923078
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.16826923076923078
  - -0.16262135922330098
  - -0.19902912621359223
  - -0.1738095238095238
  - -0.16826923076923078
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.16826923076923078
  - -0.16262135922330098
  - -0.19902912621359223
  - -0.1738095238095238
  - -0.16826923076923078
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21671597633136097
  - -0.2091112770724421
  - -0.2557879014189694
  - -0.2137466307277628
  - -0.21108058608058605
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.028846153846153848
  - -0.030744336569579284
  - -0.02912621359223301
  - -0.03492063492063492
  - -0.038461538461538464
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8317307692307692
  - 0.8373786407766991
  - 0.8009708737864079
  - 0.8261904761904761
  - 0.8317307692307692
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8317307692307693
  - 0.837378640776699
  - 0.8009708737864077
  - 0.8261904761904761
  - 0.8317307692307693
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8317307692307693
  - 0.837378640776699
  - 0.8009708737864077
  - 0.8261904761904761
  - 0.8317307692307693
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7832840236686389
  - 0.7908887229275579
  - 0.7442120985810305
  - 0.7862533692722372
  - 0.7889194139194138
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8317307692307692
  - 0.8373786407766991
  - 0.8009708737864079
  - 0.8261904761904761
  - 0.8317307692307692
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8317307692307693
  - 0.837378640776699
  - 0.8009708737864077
  - 0.8261904761904761
  - 0.8317307692307693
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8317307692307693
  - 0.837378640776699
  - 0.8009708737864077
  - 0.8261904761904761
  - 0.8317307692307693
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7832840236686389
  - 0.7908887229275579
  - 0.7442120985810305
  - 0.7862533692722372
  - 0.7889194139194138
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.984190339893698
  - 0.9929109155209891
  - 0.9901882695085225
  - 0.9676233601251281
  - 0.9889400697752592
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9892135108481261
  - 0.9929757742257742
  - 0.9902285214785215
  - 0.9803809638264631
  - 0.9889756545705098
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9711538461538461
  - 0.9692556634304207
  - 0.970873786407767
  - 0.9650793650793652
  - 0.9615384615384616
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9868051369356425
  - 0.9964092894443319
  - 0.9873429846700751
  - 0.9757021726431403
  - 0.9904673240619791
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9338740970612085
  - 0.9431784667288907
  - 0.9618089799709821
  - 0.9401281175419143
  - 0.933726194867224
  train_average_precision_macro_oob:
  - 0.8793877667489216
  - 0.8930052716265587
  - 0.9159727500420745
  - 0.8585937362586371
  - 0.8923022658434523
  train_average_precision_micro:
  - 0.9791543315468079
  - 0.9878578028724965
  - 0.9867742017829667
  - 0.9860418756082774
  - 0.9851200713477388
  train_average_precision_micro_oob:
  - 0.9685311854746302
  - 0.9790582704585526
  - 0.9778694538986036
  - 0.9769378434801517
  - 0.9788411025636294
  train_average_precision_samples:
  - 0.9815261044176707
  - 0.9763621794871794
  - 0.9821714743589743
  - 0.9778582930756845
  - 0.9751004016064256
  train_average_precision_samples_oob:
  - 0.9654618473895581
  - 0.9661458333333333
  - 0.9723557692307693
  - 0.9667874396135265
  - 0.9712851405622491
  train_average_precision_weighted:
  - 0.9760483278786914
  - 0.9839345968774239
  - 0.9855178067952519
  - 0.9822041531012263
  - 0.9832498942781509
  train_average_precision_weighted_oob:
  - 0.9625117671629398
  - 0.9713350095936569
  - 0.9743535709890696
  - 0.9653677664191431
  - 0.9743208505615288
  train_f1_macro:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843374
  train_f1_macro_oob:
  - 0.8349397590361447
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_f1_micro:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843373
  train_f1_micro_oob:
  - 0.8349397590361446
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_f1_samples:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843373
  train_f1_samples_oob:
  - 0.8349397590361446
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_f1_weighted:
  - 0.8061707450326366
  - 0.802528914999082
  - 0.8122992013952633
  - 0.8087674787706067
  - 0.8108664322361215
  train_f1_weighted_oob:
  - 0.7923052592230497
  - 0.7861093262346245
  - 0.790056453093446
  - 0.7932436659368158
  - 0.787773101977287
  train_jaccard_macro:
  - 0.7422292105540752
  - 0.7385571916009499
  - 0.7508570354309284
  - 0.7430763804969801
  - 0.7431931363335178
  train_jaccard_macro_oob:
  - 0.7249503442990273
  - 0.7191546385996259
  - 0.7242766391669767
  - 0.7271751839142352
  - 0.7220745514770881
  train_jaccard_micro:
  - 0.7345872518286312
  - 0.7306292251690067
  - 0.7433211105290728
  - 0.7358490566037735
  - 0.7364016736401674
  train_jaccard_micro_oob:
  - 0.7166494312306101
  - 0.710174717368962
  - 0.7154639175257732
  - 0.7187337830825117
  - 0.7131062951496389
  train_jaccard_samples:
  - 0.7558232931726907
  - 0.751602564102564
  - 0.7653846153846153
  - 0.7574879227053138
  - 0.7577510040160641
  train_jaccard_samples_oob:
  - 0.7371887550200802
  - 0.730128205128205
  - 0.7355769230769228
  - 0.7391304347826086
  - 0.7330120481927709
  train_jaccard_weighted:
  - 0.6780789937313327
  - 0.6725909663615667
  - 0.6868444872193102
  - 0.6809681964085731
  - 0.6837697879590233
  train_jaccard_weighted_oob:
  - 0.6583035600990516
  - 0.6497312717616324
  - 0.6554486645105871
  - 0.659579926224904
  - 0.6526988798018245
  train_label_ranking_average_precision_score:
  - 0.9815261044176707
  - 0.9763621794871795
  - 0.9821714743589745
  - 0.9778582930756843
  - 0.9751004016064255
  train_label_ranking_average_precision_score_oob:
  - 0.9654618473895581
  - 0.9661458333333334
  - 0.972355769230769
  - 0.9667874396135265
  - 0.9712851405622487
  train_matthews_corrcoef_macro:
  - 0.41988981888660465
  - 0.4110765713827109
  - 0.4341062728067493
  - 0.41398836177269027
  - 0.41421624485044506
  train_matthews_corrcoef_macro_oob:
  - 0.38414953283094866
  - 0.3691383582190551
  - 0.3800651617289598
  - 0.38571870942857467
  - 0.3809826879650602
  train_matthews_corrcoef_micro:
  - 0.57174220867769
  - 0.5622296401677399
  - 0.5890594860880164
  - 0.5734172796785114
  - 0.5745811871875518
  train_matthews_corrcoef_micro_oob:
  - 0.5324227006042744
  - 0.5154113803035096
  - 0.5285439133886115
  - 0.535988633584557
  - 0.5231363294968973
  train_matthews_corrcoef_samples:
  - 0.395553495273203
  - 0.38359939968555196
  - 0.4182692307692308
  - 0.39855072463768115
  - 0.39898156691370995
  train_matthews_corrcoef_samples_oob:
  - 0.3493975903614458
  - 0.33092948717948717
  - 0.34375
  - 0.3526570048309179
  - 0.3373493975903614
  train_matthews_corrcoef_weighted:
  - 0.5386731330239684
  - 0.5300017033525147
  - 0.5563980842499983
  - 0.5395351107051288
  - 0.5400653118368078
  train_matthews_corrcoef_weighted_oob:
  - 0.4990616243624014
  - 0.48215204403122486
  - 0.4952881972609058
  - 0.5027422978491611
  - 0.4909312800828618
  train_ndgc:
  - 0.9862117141955349
  - 0.9824383886205461
  - 0.9868479930994345
  - 0.9835612793868289
  - 0.9814495913383924
  train_ndgc_oob:
  - 0.9745108007920645
  - 0.9747839383525319
  - 0.9795727440854776
  - 0.9755003949345749
  - 0.9787440860741468
  train_neg_coverage_error:
  - -1.0602409638554218
  - -1.0649038461538463
  - -1.0528846153846154
  - -1.0603864734299517
  - -1.072289156626506
  train_neg_coverage_error_oob:
  - -1.106024096385542
  - -1.0961538461538463
  - -1.0817307692307692
  - -1.0893719806763285
  - -1.0867469879518072
  train_neg_hamming_loss_macro:
  - -0.1530120481927711
  - -0.15564903846153846
  - -0.14723557692307693
  - -0.15217391304347824
  - -0.15180722891566265
  train_neg_hamming_loss_macro_oob:
  - -0.1650602409638554
  - -0.16947115384615385
  - -0.1658653846153846
  - -0.1636473429951691
  - -0.1674698795180723
  train_neg_hamming_loss_micro:
  - -0.1530120481927711
  - -0.15564903846153846
  - -0.14723557692307693
  - -0.15217391304347827
  - -0.15180722891566265
  train_neg_hamming_loss_micro_oob:
  - -0.1650602409638554
  - -0.16947115384615385
  - -0.1658653846153846
  - -0.1636473429951691
  - -0.1674698795180723
  train_neg_hamming_loss_samples:
  - -0.1530120481927711
  - -0.15564903846153846
  - -0.14723557692307693
  - -0.15217391304347827
  - -0.15180722891566265
  train_neg_hamming_loss_samples_oob:
  - -0.1650602409638554
  - -0.16947115384615385
  - -0.1658653846153846
  - -0.1636473429951691
  - -0.1674698795180723
  train_neg_hamming_loss_weighted:
  - -0.1938292549673635
  - -0.19747108500091792
  - -0.18770079860473654
  - -0.19123252122939327
  - -0.1891335677638785
  train_neg_hamming_loss_weighted_oob:
  - -0.2076947407769503
  - -0.21389067376537543
  - -0.20994354690655403
  - -0.20675633406318425
  - -0.21222689802271286
  train_neg_label_ranking_loss:
  - -0.016867469879518072
  - -0.019230769230769232
  - -0.015024038461538462
  - -0.017713365539452495
  - -0.021686746987951807
  train_neg_label_ranking_loss_oob:
  - -0.03152610441767068
  - -0.0296474358974359
  - -0.024439102564102564
  - -0.026972624798711754
  - -0.02610441767068273
  train_precision_macro:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843374
  train_precision_macro_oob:
  - 0.8349397590361447
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_precision_micro:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843373
  train_precision_micro_oob:
  - 0.8349397590361446
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_precision_samples:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843373
  train_precision_samples_oob:
  - 0.8349397590361446
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_precision_weighted:
  - 0.8061707450326366
  - 0.802528914999082
  - 0.8122992013952633
  - 0.8087674787706067
  - 0.8108664322361215
  train_precision_weighted_oob:
  - 0.7923052592230497
  - 0.7861093262346245
  - 0.790056453093446
  - 0.7932436659368158
  - 0.787773101977287
  train_recall_macro:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843374
  train_recall_macro_oob:
  - 0.8349397590361447
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_recall_micro:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843373
  train_recall_micro_oob:
  - 0.8349397590361446
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_recall_samples:
  - 0.846987951807229
  - 0.8443509615384616
  - 0.8527644230769231
  - 0.8478260869565217
  - 0.8481927710843373
  train_recall_samples_oob:
  - 0.8349397590361446
  - 0.8305288461538461
  - 0.8341346153846154
  - 0.836352657004831
  - 0.8325301204819278
  train_recall_weighted:
  - 0.8061707450326366
  - 0.802528914999082
  - 0.8122992013952633
  - 0.8087674787706067
  - 0.8108664322361215
  train_recall_weighted_oob:
  - 0.7923052592230497
  - 0.7861093262346245
  - 0.790056453093446
  - 0.7932436659368158
  - 0.787773101977287
  train_roc_auc_macro:
  - 0.9892529707368747
  - 0.9937109160609964
  - 0.9945507234981088
  - 0.9939309625923302
  - 0.9941397573460589
  train_roc_auc_macro_oob:
  - 0.9807921883949156
  - 0.9864548167017966
  - 0.9885874679870936
  - 0.9877553748310087
  - 0.9908489797794434
  train_roc_auc_micro:
  - 0.9912842634029451
  - 0.995128964545533
  - 0.9950906250299527
  - 0.9952657728538719
  - 0.9944795013444899
  train_roc_auc_micro_oob:
  - 0.9848513113029566
  - 0.9900432278038167
  - 0.9901831670356845
  - 0.9912109053677154
  - 0.9908620915485904
  train_roc_auc_samples:
  - 0.983132530120482
  - 0.9807692307692307
  - 0.9849759615384616
  - 0.9822866344605475
  - 0.9783132530120482
  train_roc_auc_samples_oob:
  - 0.9684738955823293
  - 0.970352564102564
  - 0.9755608974358976
  - 0.9730273752012882
  - 0.9738955823293172
  train_roc_auc_weighted:
  - 0.989875041114149
  - 0.9950970497219248
  - 0.9944170804750035
  - 0.9958737766459315
  - 0.9956498792974655
  train_roc_auc_weighted_oob:
  - 0.9840003556635462
  - 0.9900685599961236
  - 0.9898775869628287
  - 0.9933507737037661
  - 0.9930979127002169
start: 2023-12-21 17:04:29.167080
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
