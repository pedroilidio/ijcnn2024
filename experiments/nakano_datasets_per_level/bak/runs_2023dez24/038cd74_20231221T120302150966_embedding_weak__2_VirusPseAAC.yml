active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMBAMzMzMzMDQIBmZmZmZvY/wMzMzMzMBMCAZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 12:03:14.583515
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__2
  params: {}
hash: 038cd74a7ff36865474377e3511ca22fe04accbb0ca039d9337619a658dd1cc7
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/038cd74_20231221T120302150966_embedding_weak__2_VirusPseAAC.yml
results:
  fit_time:
  - 6.934133052825928
  - 6.76917028427124
  - 6.884450674057007
  - 7.400297403335571
  - 6.874765872955322
  score_time:
  - 1.5043880939483643
  - 1.4679076671600342
  - 1.21502685546875
  - 1.4069099426269531
  - 1.223177194595337
  test_average_precision_macro:
  - 0.43750471675004166
  - 0.28789508509863904
  - 0.4677256645300649
  - 0.3150711057336053
  - 0.41382215340533074
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.43529480990981206
  - 0.44621104874924356
  - 0.48210564167093545
  - 0.3799885521837669
  - 0.41718336656759447
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6558712121212121
  - 0.652136752136752
  - 0.6226388888888889
  - 0.6297348484848485
  - 0.6858333333333334
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4401894228527554
  - 0.4373339809884882
  - 0.4869794290977763
  - 0.35906214383421625
  - 0.4455520461973295
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8068181818181818
  - 0.7863247863247863
  - 0.7958333333333333
  - 0.8030303030303031
  - 0.7916666666666669
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8068181818181818
  - 0.7863247863247863
  - 0.7958333333333333
  - 0.803030303030303
  - 0.7916666666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8068181818181821
  - 0.7863247863247862
  - 0.7958333333333334
  - 0.8030303030303032
  - 0.7916666666666667
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7045454545454545
  - 0.6615384615384616
  - 0.6852040816326531
  - 0.6949300699300699
  - 0.6589999999999999
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.698407707107552
  - 0.6765455727285858
  - 0.6853893627349005
  - 0.6945296884225528
  - 0.6849221166831296
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6761904761904762
  - 0.647887323943662
  - 0.6608996539792388
  - 0.6708860759493671
  - 0.6551724137931034
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6801948051948054
  - 0.6538461538461541
  - 0.6672619047619048
  - 0.6764069264069265
  - 0.661904761904762
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5611836337962015
  - 0.513766719630218
  - 0.5409500600739569
  - 0.5508492741624239
  - 0.5123738399209777
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6558712121212121
  - 0.652136752136752
  - 0.622638888888889
  - 0.6297348484848484
  - 0.6858333333333333
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.744116817568671
  - 0.7412224163234811
  - 0.7196551256296505
  - 0.7248907909147021
  - 0.7645618813861894
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2954545454545454
  - -2.641025641025641
  - -2.35
  - -2.340909090909091
  - -2.3
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19318181818181815
  - -0.2136752136752137
  - -0.2041666666666667
  - -0.19696969696969693
  - -0.20833333333333337
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19318181818181818
  - -0.21367521367521367
  - -0.20416666666666666
  - -0.19696969696969696
  - -0.20833333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19318181818181815
  - -0.21367521367521364
  - -0.20416666666666666
  - -0.1969696969696969
  - -0.20833333333333331
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29545454545454547
  - -0.33846153846153837
  - -0.31479591836734694
  - -0.30506993006993005
  - -0.34099999999999997
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2278409090909091
  - -0.2634615384615384
  - -0.22736111111111112
  - -0.23579545454545456
  - -0.210625
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8068181818181818
  - 0.7863247863247863
  - 0.7958333333333333
  - 0.8030303030303031
  - 0.7916666666666669
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8068181818181818
  - 0.7863247863247863
  - 0.7958333333333333
  - 0.803030303030303
  - 0.7916666666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8068181818181821
  - 0.7863247863247862
  - 0.7958333333333334
  - 0.8030303030303032
  - 0.7916666666666667
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7045454545454545
  - 0.6615384615384616
  - 0.6852040816326531
  - 0.6949300699300699
  - 0.6589999999999999
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8068181818181818
  - 0.7863247863247863
  - 0.7958333333333333
  - 0.8030303030303031
  - 0.7916666666666669
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8068181818181818
  - 0.7863247863247863
  - 0.7958333333333333
  - 0.803030303030303
  - 0.7916666666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8068181818181821
  - 0.7863247863247862
  - 0.7958333333333334
  - 0.8030303030303032
  - 0.7916666666666667
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7045454545454545
  - 0.6615384615384616
  - 0.6852040816326531
  - 0.6949300699300699
  - 0.6589999999999999
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.687542330495762
  - 0.5340852549153633
  - 0.6605210849436394
  - 0.5606410796974522
  - 0.6383206491102911
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7873515603424469
  - 0.7633695652173914
  - 0.7849129180467999
  - 0.7599782293178519
  - 0.7872631578947369
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.772159090909091
  - 0.7365384615384616
  - 0.7726388888888889
  - 0.7642045454545454
  - 0.7893749999999999
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6191431627706138
  - 0.5572500854408751
  - 0.5933235613085814
  - 0.5438869395600163
  - 0.5731221222653449
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7087620330109625
  - 0.7162102126419282
  - 0.7234136712842091
  - 0.6941525735849883
  - 0.7193415558953621
  train_average_precision_macro_oob:
  - 0.323639888689567
  - 0.38122884641581584
  - 0.3232215053400532
  - 0.33454299565995643
  - 0.38679339266449525
  train_average_precision_micro:
  - 0.7541056814650804
  - 0.7758504392581458
  - 0.743375201107865
  - 0.7387504289026188
  - 0.7656564194184816
  train_average_precision_micro_oob:
  - 0.5081772486480985
  - 0.5107678089946396
  - 0.4888659514758078
  - 0.456346275187751
  - 0.5318853795185146
  train_average_precision_samples:
  - 0.7862474437627812
  - 0.8183035714285714
  - 0.8071856287425151
  - 0.80439672801636
  - 0.8234364604125083
  train_average_precision_samples_oob:
  - 0.6827027948193592
  - 0.6776124338624339
  - 0.6896207584830338
  - 0.6561179277436946
  - 0.7155023286759813
  train_average_precision_weighted:
  - 0.7569665547861889
  - 0.7629768692049139
  - 0.7464346722399597
  - 0.7390827894112555
  - 0.7514842041088216
  train_average_precision_weighted_oob:
  - 0.47017809525006715
  - 0.4796558400683358
  - 0.4550941940498045
  - 0.42641509992924376
  - 0.49225608148272576
  train_f1_macro:
  - 0.7965235173824131
  - 0.8065476190476191
  - 0.7994011976047903
  - 0.796523517382413
  - 0.8003992015968064
  train_f1_macro_oob:
  - 0.7944785276073619
  - 0.7996031746031748
  - 0.7974051896207585
  - 0.7955010224948875
  - 0.7984031936127743
  train_f1_micro:
  - 0.7965235173824131
  - 0.8065476190476191
  - 0.7994011976047904
  - 0.7965235173824131
  - 0.8003992015968064
  train_f1_micro_oob:
  - 0.7944785276073619
  - 0.7996031746031746
  - 0.7974051896207585
  - 0.7955010224948875
  - 0.7984031936127745
  train_f1_samples:
  - 0.796523517382413
  - 0.8065476190476191
  - 0.7994011976047901
  - 0.796523517382413
  - 0.8003992015968061
  train_f1_samples_oob:
  - 0.7944785276073618
  - 0.7996031746031745
  - 0.7974051896207582
  - 0.7955010224948875
  - 0.7984031936127743
  train_f1_weighted:
  - 0.6802490614412601
  - 0.7008781235266385
  - 0.6854665054128196
  - 0.6808282208588957
  - 0.6915871227841347
  train_f1_weighted_oob:
  - 0.6760675151848121
  - 0.6868811881188119
  - 0.6813958290315919
  - 0.6787116564417178
  - 0.6875555819054959
  train_jaccard_macro:
  - 0.6875121846809874
  - 0.6981218424511315
  - 0.6908605352281084
  - 0.687494437311643
  - 0.6910359881765537
  train_jaccard_macro_oob:
  - 0.685475473919289
  - 0.6909474359758304
  - 0.6888529738161182
  - 0.6864806044012582
  - 0.6890112671839032
  train_jaccard_micro:
  - 0.6618521665250637
  - 0.6758104738154613
  - 0.6658354114713217
  - 0.6618521665250637
  - 0.6672212978369384
  train_jaccard_micro_oob:
  - 0.6590330788804071
  - 0.6661157024793388
  - 0.6630705394190871
  - 0.6604414261460102
  - 0.6644518272425249
  train_jaccard_samples:
  - 0.668273444347064
  - 0.683248299319728
  - 0.6720844026233249
  - 0.6679813029506282
  - 0.6733675506130598
  train_jaccard_samples_oob:
  - 0.6652059596844874
  - 0.6717687074829932
  - 0.6686626746506987
  - 0.6662284545720129
  - 0.6699458226404336
  train_jaccard_weighted:
  - 0.5345365004070324
  - 0.5566583577349751
  - 0.5399031939215466
  - 0.5352084786023427
  - 0.5467163011766717
  train_jaccard_weighted_oob:
  - 0.530373067198683
  - 0.5422028937443711
  - 0.5358094592918698
  - 0.5331098444778465
  - 0.5426272786224211
  train_label_ranking_average_precision_score:
  - 0.786247443762781
  - 0.8183035714285712
  - 0.8071856287425149
  - 0.8043967280163598
  - 0.8234364604125083
  train_label_ranking_average_precision_score_oob:
  - 0.6827027948193591
  - 0.6776124338624337
  - 0.6896207584830341
  - 0.6561179277436948
  - 0.7155023286759812
  train_matthews_corrcoef_macro:
  - 0.030767629374207916
  - 0.0574854106817335
  - 0.030835983845504168
  - 0.015283774583901072
  - 0.03122005450045102
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.08900257458275405
  - 0.1670412831578706
  - 0.0887238478779297
  - 0.06309973259720109
  - 0.08899883189799696
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.010015064613703533
  - 0.03947890197639093
  - 0.011976047904191617
  - 0.006134969325153374
  - 0.011976047904191617
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.06288689597424818
  - 0.11633049289958418
  - 0.06287592437385656
  - 0.03163741338867521
  - 0.0630468257735739
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8424689473152698
  - 0.8657418279262727
  - 0.8576597339837069
  - 0.8563149259375026
  - 0.871146031187171
  train_ndgc_oob:
  - 0.763563878537547
  - 0.7608943426580989
  - 0.768202841354797
  - 0.7438878603446454
  - 0.7890139120257874
  train_neg_coverage_error:
  - -1.9263803680981595
  - -1.8214285714285714
  - -1.8862275449101797
  - -1.883435582822086
  - -1.8083832335329342
  train_neg_coverage_error_oob:
  - -2.374233128834356
  - -2.2976190476190474
  - -2.3353293413173652
  - -2.3987730061349692
  - -2.2215568862275448
  train_neg_hamming_loss_macro:
  - -0.20347648261758697
  - -0.19345238095238093
  - -0.20059880239520958
  - -0.2034764826175869
  - -0.19960079840319364
  train_neg_hamming_loss_macro_oob:
  - -0.20552147239263807
  - -0.20039682539682543
  - -0.20259481037924154
  - -0.2044989775051125
  - -0.20159680638722555
  train_neg_hamming_loss_micro:
  - -0.2034764826175869
  - -0.19345238095238096
  - -0.20059880239520958
  - -0.2034764826175869
  - -0.1996007984031936
  train_neg_hamming_loss_micro_oob:
  - -0.20552147239263804
  - -0.2003968253968254
  - -0.2025948103792415
  - -0.20449897750511248
  - -0.20159680638722555
  train_neg_hamming_loss_samples:
  - -0.20347648261758694
  - -0.19345238095238096
  - -0.20059880239520958
  - -0.20347648261758694
  - -0.1996007984031936
  train_neg_hamming_loss_samples_oob:
  - -0.20552147239263804
  - -0.20039682539682543
  - -0.20259481037924154
  - -0.20449897750511253
  - -0.20159680638722557
  train_neg_hamming_loss_weighted:
  - -0.3197509385587401
  - -0.2991218764733616
  - -0.31453349458718033
  - -0.3191717791411043
  - -0.3084128772158653
  train_neg_hamming_loss_weighted_oob:
  - -0.3239324848151879
  - -0.3131188118811882
  - -0.318604170968408
  - -0.32128834355828223
  - -0.312444418094504
  train_neg_label_ranking_loss:
  - -0.13403203817314246
  - -0.12030423280423279
  - -0.1291084497671324
  - -0.12544308111792773
  - -0.11360612109115102
  train_neg_label_ranking_loss_oob:
  - -0.227266530334015
  - -0.21759259259259262
  - -0.22446773120425817
  - -0.23316291751874577
  - -0.20088157019294742
  train_precision_macro:
  - 0.7965235173824131
  - 0.8065476190476191
  - 0.7994011976047903
  - 0.796523517382413
  - 0.8003992015968064
  train_precision_macro_oob:
  - 0.7944785276073619
  - 0.7996031746031748
  - 0.7974051896207585
  - 0.7955010224948875
  - 0.7984031936127743
  train_precision_micro:
  - 0.7965235173824131
  - 0.8065476190476191
  - 0.7994011976047904
  - 0.7965235173824131
  - 0.8003992015968064
  train_precision_micro_oob:
  - 0.7944785276073619
  - 0.7996031746031746
  - 0.7974051896207585
  - 0.7955010224948875
  - 0.7984031936127745
  train_precision_samples:
  - 0.796523517382413
  - 0.8065476190476191
  - 0.7994011976047901
  - 0.796523517382413
  - 0.8003992015968061
  train_precision_samples_oob:
  - 0.7944785276073618
  - 0.7996031746031745
  - 0.7974051896207582
  - 0.7955010224948875
  - 0.7984031936127743
  train_precision_weighted:
  - 0.6802490614412601
  - 0.7008781235266385
  - 0.6854665054128196
  - 0.6808282208588957
  - 0.6915871227841347
  train_precision_weighted_oob:
  - 0.6760675151848121
  - 0.6868811881188119
  - 0.6813958290315919
  - 0.6787116564417178
  - 0.6875555819054959
  train_recall_macro:
  - 0.7965235173824131
  - 0.8065476190476191
  - 0.7994011976047903
  - 0.796523517382413
  - 0.8003992015968064
  train_recall_macro_oob:
  - 0.7944785276073619
  - 0.7996031746031748
  - 0.7974051896207585
  - 0.7955010224948875
  - 0.7984031936127743
  train_recall_micro:
  - 0.7965235173824131
  - 0.8065476190476191
  - 0.7994011976047904
  - 0.7965235173824131
  - 0.8003992015968064
  train_recall_micro_oob:
  - 0.7944785276073619
  - 0.7996031746031746
  - 0.7974051896207585
  - 0.7955010224948875
  - 0.7984031936127745
  train_recall_samples:
  - 0.796523517382413
  - 0.8065476190476191
  - 0.7994011976047901
  - 0.796523517382413
  - 0.8003992015968061
  train_recall_samples_oob:
  - 0.7944785276073618
  - 0.7996031746031745
  - 0.7974051896207582
  - 0.7955010224948875
  - 0.7984031936127743
  train_recall_weighted:
  - 0.6802490614412601
  - 0.7008781235266385
  - 0.6854665054128196
  - 0.6808282208588957
  - 0.6915871227841347
  train_recall_weighted_oob:
  - 0.6760675151848121
  - 0.6868811881188119
  - 0.6813958290315919
  - 0.6787116564417178
  - 0.6875555819054959
  train_roc_auc_macro:
  - 0.8196677537234747
  - 0.8289924521010512
  - 0.8063489722661249
  - 0.8090596967846665
  - 0.823248425920807
  train_roc_auc_macro_oob:
  - 0.585932549046648
  - 0.6574153820859766
  - 0.5877415220743927
  - 0.6148464324996393
  - 0.6481940140578918
  train_roc_auc_micro:
  - 0.8829405098061814
  - 0.8945409429280397
  - 0.8780310363323612
  - 0.8794730077120823
  - 0.8888180693069307
  train_roc_auc_micro_oob:
  - 0.7851540239599941
  - 0.799203989877896
  - 0.7802610405864474
  - 0.7815616966580976
  - 0.7918254950495048
  train_roc_auc_samples:
  - 0.8659679618268575
  - 0.8796957671957673
  - 0.8708915502328677
  - 0.8745569188820724
  - 0.8863938789088489
  train_roc_auc_samples_oob:
  - 0.772733469665985
  - 0.7824074074074074
  - 0.7755322687957419
  - 0.7668370824812543
  - 0.7991184298070526
  train_roc_auc_weighted:
  - 0.7881676158522462
  - 0.8050428124477625
  - 0.7709250694712234
  - 0.7667552656064422
  - 0.7884691084157747
  train_roc_auc_weighted_oob:
  - 0.626638029308591
  - 0.6564629372624631
  - 0.6212639461085182
  - 0.600373140182558
  - 0.6393009859507374
start: 2023-12-21 12:03:02.150966
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
