active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T+gmZmZmZn5PzAzMzMzMwvAYGZmZmZm9r+gmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b8gMzMzMzMDwEBmZmZmZva/4MzMzMzMDECAMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:28:32.026286
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__8
  params: {}
hash: 0d2de1b682ee8202c3b34532b1336a71466a4ad57201ec04a167fa63bfdc199b
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0d2de1b_20231222T022027852403_embedding_weak__8_emotions.yml
results:
  fit_time:
  - 455.5559449195862
  - 455.1538653373718
  - 452.6855456829071
  - 458.9688079357147
  - 464.6485285758972
  score_time:
  - 6.2263689041137695
  - 6.252394914627075
  - 5.826573848724365
  - 6.180601596832275
  - 5.339664459228516
  test_average_precision_macro:
  - 0.7084322729213642
  - 0.7705378569605102
  - 0.6813576190292485
  - 0.7262727542963998
  - 0.7121733237352327
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.625893967661164
  - 0.6532977069224573
  - 0.6148254062992397
  - 0.6614545038042274
  - 0.6560894851415298
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7382119514472456
  - 0.7780073461891643
  - 0.7545370370370371
  - 0.7651932367149759
  - 0.7589924670433146
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7040862693661493
  - 0.756034556411466
  - 0.6759630585219815
  - 0.7258299189669959
  - 0.7133800212775233
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7787114845938374
  - 0.815426997245179
  - 0.7791666666666668
  - 0.7811594202898551
  - 0.7824858757062146
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7787114845938375
  - 0.8154269972451791
  - 0.7791666666666667
  - 0.7811594202898551
  - 0.7824858757062146
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7787114845938373
  - 0.8154269972451791
  - 0.7791666666666667
  - 0.7811594202898551
  - 0.7824858757062148
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7650895974828287
  - 0.7978385251112523
  - 0.7674444444444445
  - 0.7711956521739131
  - 0.7707607770296416
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.643912270686156
  - 0.7007155021596758
  - 0.6426707465939132
  - 0.6466344030302179
  - 0.6468127791133971
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6376146788990825
  - 0.6883720930232559
  - 0.6382252559726962
  - 0.6409036860879905
  - 0.642691415313225
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6716286514605841
  - 0.7198740653286108
  - 0.6671031746031747
  - 0.6759834368530021
  - 0.6759887005649716
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6262744979611461
  - 0.6770857081898187
  - 0.6278028114816547
  - 0.6335999615620057
  - 0.631648969337369
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7382119514472456
  - 0.7780073461891641
  - 0.7545370370370371
  - 0.7651932367149756
  - 0.7589924670433148
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4772130254809907
  - 0.5675881331973619
  - 0.48633067222525006
  - 0.47577875599877895
  - 0.48030627632506584
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.471981833279648
  - 0.5588458042555602
  - 0.47488461869548804
  - 0.4868750116362466
  - 0.48471009433840756
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.46453549200266464
  - 0.5673684098581984
  - 0.4864578586777225
  - 0.4911061406468489
  - 0.46996760847650004
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4712889346723531
  - 0.5526388005248477
  - 0.4843405211514823
  - 0.475880109962655
  - 0.47805070462376265
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8172780859846062
  - 0.8437946948257484
  - 0.8346383185064212
  - 0.8379221522074641
  - 0.832119725732614
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.9495798319327733
  - -2.628099173553719
  - -3.0416666666666665
  - -2.878260869565217
  - -2.906779661016949
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.22128851540616248
  - -0.18457300275482094
  - -0.2208333333333333
  - -0.21884057971014492
  - -0.21751412429378533
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.22128851540616246
  - -0.18457300275482094
  - -0.22083333333333333
  - -0.21884057971014492
  - -0.2175141242937853
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.22128851540616248
  - -0.18457300275482091
  - -0.22083333333333333
  - -0.21884057971014495
  - -0.21751412429378528
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23491040251717127
  - -0.2021614748887476
  - -0.23255555555555552
  - -0.22880434782608697
  - -0.22923922297035831
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20254435107376284
  - -0.1543847566574839
  - -0.20680555555555558
  - -0.1747342995169082
  - -0.1870998116760829
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7787114845938374
  - 0.815426997245179
  - 0.7791666666666668
  - 0.7811594202898551
  - 0.7824858757062146
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7787114845938375
  - 0.8154269972451791
  - 0.7791666666666667
  - 0.7811594202898551
  - 0.7824858757062146
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7787114845938373
  - 0.8154269972451791
  - 0.7791666666666667
  - 0.7811594202898551
  - 0.7824858757062148
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7650895974828287
  - 0.7978385251112523
  - 0.7674444444444445
  - 0.7711956521739131
  - 0.7707607770296416
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7787114845938374
  - 0.815426997245179
  - 0.7791666666666668
  - 0.7811594202898551
  - 0.7824858757062146
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7787114845938375
  - 0.8154269972451791
  - 0.7791666666666667
  - 0.7811594202898551
  - 0.7824858757062146
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7787114845938373
  - 0.8154269972451791
  - 0.7791666666666667
  - 0.7811594202898551
  - 0.7824858757062148
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7650895974828287
  - 0.7978385251112523
  - 0.7674444444444445
  - 0.7711956521739131
  - 0.7707607770296416
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8354555993824914
  - 0.8848006043344124
  - 0.8153688710374057
  - 0.855295703794258
  - 0.8372225295030699
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8213735528804021
  - 0.8705882352941177
  - 0.8140785634118968
  - 0.8390653740036786
  - 0.8305553221092342
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7974556489262372
  - 0.845615243342516
  - 0.7931944444444444
  - 0.8252657004830918
  - 0.8129001883239171
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8330903652900778
  - 0.8756000197411585
  - 0.8130751851545627
  - 0.8552998081027346
  - 0.8359226906873043
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8754022394725668
  - 0.9213402410238783
  - 0.879967258598556
  - 0.8807151873136659
  - 0.8737616915363161
  train_average_precision_macro_oob:
  - 0.7320970424673781
  - 0.7357111636219495
  - 0.7330288709666567
  - 0.7270993827592288
  - 0.7384069045256596
  train_average_precision_micro:
  - 0.7224137300981178
  - 0.7513156432144172
  - 0.7208718895119568
  - 0.7270721969239091
  - 0.7291741610356312
  train_average_precision_micro_oob:
  - 0.6501491514870975
  - 0.6498329244796218
  - 0.6424568169817704
  - 0.64050554525099
  - 0.6548314220215741
  train_average_precision_samples:
  - 0.822515236755743
  - 0.8409957627118645
  - 0.8257223396758281
  - 0.8219549046954905
  - 0.8361520467836258
  train_average_precision_samples_oob:
  - 0.7745956399437411
  - 0.7517125706214689
  - 0.7737373737373737
  - 0.7581241283124128
  - 0.7848011695906433
  train_average_precision_weighted:
  - 0.8538530935356206
  - 0.9042003366291193
  - 0.857838987216319
  - 0.8589589304865353
  - 0.8522405259878286
  train_average_precision_weighted_oob:
  - 0.7248190773331896
  - 0.732427632038546
  - 0.7238553223667924
  - 0.718556871606607
  - 0.7301820496626522
  train_f1_macro:
  - 0.8519690576652602
  - 0.8573446327683616
  - 0.8562367864693446
  - 0.8521617852161786
  - 0.856140350877193
  train_f1_macro_oob:
  - 0.7943037974683543
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842106
  train_f1_micro:
  - 0.8519690576652602
  - 0.8573446327683616
  - 0.8562367864693446
  - 0.8521617852161785
  - 0.856140350877193
  train_f1_micro_oob:
  - 0.7943037974683544
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842105
  train_f1_samples:
  - 0.8519690576652603
  - 0.8573446327683615
  - 0.8562367864693446
  - 0.8521617852161786
  - 0.8561403508771929
  train_f1_samples_oob:
  - 0.7943037974683544
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842105
  train_f1_weighted:
  - 0.8368028363543164
  - 0.8421574341237842
  - 0.8391654435795709
  - 0.8367656525114068
  - 0.8419513350304897
  train_f1_weighted_oob:
  - 0.7820003512219202
  - 0.7717883553398429
  - 0.77653540328354
  - 0.7795087941839112
  - 0.7833639216150613
  train_jaccard_macro:
  - 0.7501016052334443
  - 0.7598514327698961
  - 0.7577693599764016
  - 0.7502187003705779
  - 0.7554387449812988
  train_jaccard_macro_oob:
  - 0.6642763664510627
  - 0.6486088131883405
  - 0.6623376858330468
  - 0.6637809986661797
  - 0.66721455213842
  train_jaccard_micro:
  - 0.7421133231240429
  - 0.7503090234857849
  - 0.7486136783733827
  - 0.7424058323207776
  - 0.7484662576687117
  train_jaccard_micro_oob:
  - 0.6587926509186351
  - 0.6436448055716774
  - 0.6548104956268221
  - 0.6573244726957527
  - 0.6608391608391608
  train_jaccard_samples:
  - 0.7706550130600763
  - 0.776321630347054
  - 0.778032819893285
  - 0.7695955369595536
  - 0.7784862155388471
  train_jaccard_samples_oob:
  - 0.6902652200120555
  - 0.6746872477804681
  - 0.6885029698983187
  - 0.688653118151026
  - 0.6933934837092732
  train_jaccard_weighted:
  - 0.7286364360039955
  - 0.7388731542784087
  - 0.7337610223669812
  - 0.7286400499804551
  - 0.7351122991508539
  train_jaccard_weighted_oob:
  - 0.6482336021164521
  - 0.6338920991900237
  - 0.6430797248746675
  - 0.6459382417413743
  - 0.6507446795492905
  train_label_ranking_average_precision_score:
  - 0.8225152367557421
  - 0.8409957627118637
  - 0.825722339675827
  - 0.8219549046954894
  - 0.8361520467836248
  train_label_ranking_average_precision_score_oob:
  - 0.7745956399437403
  - 0.7517125706214679
  - 0.7737373737373731
  - 0.7581241283124117
  - 0.7848011695906418
  train_matthews_corrcoef_macro:
  - 0.6851453131480397
  - 0.6921893281023251
  - 0.6978586280168164
  - 0.6798890563586771
  - 0.692405600062883
  train_matthews_corrcoef_macro_oob:
  - 0.5240158938345066
  - 0.47941902844201634
  - 0.5201923237655174
  - 0.5133810726776785
  - 0.5232809607981662
  train_matthews_corrcoef_micro:
  - 0.6550209705278346
  - 0.6624259121823132
  - 0.6656820639183374
  - 0.6504286749841728
  - 0.6638540633709934
  train_matthews_corrcoef_micro_oob:
  - 0.5108508871294682
  - 0.47415141878159967
  - 0.5031676637900577
  - 0.498429417541721
  - 0.5119594593347907
  train_matthews_corrcoef_samples:
  - 0.6562468023768766
  - 0.6511608391532604
  - 0.6640499897717766
  - 0.644886103956049
  - 0.6702840031033018
  train_matthews_corrcoef_samples_oob:
  - 0.5187500907886009
  - 0.4575428427557525
  - 0.5045614763944761
  - 0.49060489298719473
  - 0.5218195790636498
  train_matthews_corrcoef_weighted:
  - 0.6680391091773594
  - 0.6757299554629714
  - 0.6772479349457167
  - 0.6629256973458456
  - 0.6761742128907667
  train_matthews_corrcoef_weighted_oob:
  - 0.5187307712200759
  - 0.47752154306673117
  - 0.5107852327139135
  - 0.5059723867073405
  - 0.5174803821353121
  train_ndgc:
  - 0.8721449772978406
  - 0.8854925240024679
  - 0.8731673636613583
  - 0.8704656266126157
  - 0.8809216469990941
  train_ndgc_oob:
  - 0.8449134674208901
  - 0.8273365468038265
  - 0.8427680894090104
  - 0.8312653596480849
  - 0.8518810138923179
  train_neg_coverage_error:
  - -2.3734177215189876
  - -2.2966101694915255
  - -2.331923890063425
  - -2.307531380753138
  - -2.311578947368421
  train_neg_coverage_error_oob:
  - -2.8248945147679323
  - -2.9046610169491527
  - -2.8033826638477803
  - -2.8284518828451883
  - -2.76
  train_neg_hamming_loss_macro:
  - -0.14803094233473976
  - -0.1426553672316384
  - -0.14376321353065538
  - -0.1478382147838215
  - -0.143859649122807
  train_neg_hamming_loss_macro_oob:
  - -0.20569620253164556
  - -0.21680790960451976
  - -0.20859760394644114
  - -0.20676429567642954
  - -0.2042105263157895
  train_neg_hamming_loss_micro:
  - -0.1480309423347398
  - -0.1426553672316384
  - -0.14376321353065538
  - -0.14783821478382148
  - -0.14385964912280702
  train_neg_hamming_loss_micro_oob:
  - -0.20569620253164558
  - -0.21680790960451976
  - -0.20859760394644117
  - -0.20676429567642957
  - -0.20421052631578948
  train_neg_hamming_loss_samples:
  - -0.1480309423347398
  - -0.14265536723163844
  - -0.14376321353065538
  - -0.14783821478382145
  - -0.14385964912280702
  train_neg_hamming_loss_samples_oob:
  - -0.20569620253164558
  - -0.21680790960451976
  - -0.20859760394644114
  - -0.20676429567642957
  - -0.20421052631578948
  train_neg_hamming_loss_weighted:
  - -0.1631971636456835
  - -0.15784256587621576
  - -0.16083455642042913
  - -0.1632343474885931
  - -0.15804866496951037
  train_neg_hamming_loss_weighted_oob:
  - -0.21799964877807992
  - -0.22821164466015706
  - -0.22346459671646007
  - -0.2204912058160889
  - -0.2166360783849387
  train_neg_label_ranking_loss:
  - -0.10418424753867792
  - -0.08601106403013183
  - -0.10074583039699317
  - -0.09680962343096235
  - -0.09537426900584796
  train_neg_label_ranking_loss_oob:
  - -0.1717065166432255
  - -0.18694091337099814
  - -0.17262156448202962
  - -0.18133426313342632
  - -0.16447368421052633
  train_precision_macro:
  - 0.8519690576652602
  - 0.8573446327683616
  - 0.8562367864693446
  - 0.8521617852161786
  - 0.856140350877193
  train_precision_macro_oob:
  - 0.7943037974683543
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842106
  train_precision_micro:
  - 0.8519690576652602
  - 0.8573446327683616
  - 0.8562367864693446
  - 0.8521617852161785
  - 0.856140350877193
  train_precision_micro_oob:
  - 0.7943037974683544
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842105
  train_precision_samples:
  - 0.8519690576652603
  - 0.8573446327683615
  - 0.8562367864693446
  - 0.8521617852161786
  - 0.8561403508771929
  train_precision_samples_oob:
  - 0.7943037974683544
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842105
  train_precision_weighted:
  - 0.8368028363543164
  - 0.8421574341237842
  - 0.8391654435795709
  - 0.8367656525114068
  - 0.8419513350304897
  train_precision_weighted_oob:
  - 0.7820003512219202
  - 0.7717883553398429
  - 0.77653540328354
  - 0.7795087941839112
  - 0.7833639216150613
  train_recall_macro:
  - 0.8519690576652602
  - 0.8573446327683616
  - 0.8562367864693446
  - 0.8521617852161786
  - 0.856140350877193
  train_recall_macro_oob:
  - 0.7943037974683543
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842106
  train_recall_micro:
  - 0.8519690576652602
  - 0.8573446327683616
  - 0.8562367864693446
  - 0.8521617852161785
  - 0.856140350877193
  train_recall_micro_oob:
  - 0.7943037974683544
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842105
  train_recall_samples:
  - 0.8519690576652603
  - 0.8573446327683615
  - 0.8562367864693446
  - 0.8521617852161786
  - 0.8561403508771929
  train_recall_samples_oob:
  - 0.7943037974683544
  - 0.7831920903954802
  - 0.7914023960535589
  - 0.7932357043235704
  - 0.7957894736842105
  train_recall_weighted:
  - 0.8368028363543164
  - 0.8421574341237842
  - 0.8391654435795709
  - 0.8367656525114068
  - 0.8419513350304897
  train_recall_weighted_oob:
  - 0.7820003512219202
  - 0.7717883553398429
  - 0.77653540328354
  - 0.7795087941839112
  - 0.7833639216150613
  train_roc_auc_macro:
  - 0.945993498126231
  - 0.964375552669992
  - 0.948723822559916
  - 0.9519108940468346
  - 0.9484992293642794
  train_roc_auc_macro_oob:
  - 0.8568054018122296
  - 0.8564213640637229
  - 0.8605714125680893
  - 0.8561771198813184
  - 0.8632620362917479
  train_roc_auc_micro:
  - 0.9175659308571082
  - 0.9284071840321351
  - 0.9177073044984403
  - 0.9224542949934317
  - 0.922703058344122
  train_roc_auc_micro_oob:
  - 0.8457320072842558
  - 0.8392211985172862
  - 0.8443564574384581
  - 0.844779731061159
  - 0.8501631074799995
  train_roc_auc_samples:
  - 0.8958157524613221
  - 0.9139889359698683
  - 0.8992541696030069
  - 0.9031903765690377
  - 0.9046257309941521
  train_roc_auc_samples_oob:
  - 0.8282934833567746
  - 0.813059086629002
  - 0.8273784355179704
  - 0.8186657368665736
  - 0.8355263157894737
  train_roc_auc_weighted:
  - 0.9341066262412779
  - 0.9549792437015154
  - 0.9370048078999754
  - 0.94041600254656
  - 0.9368291967365121
  train_roc_auc_weighted_oob:
  - 0.8525280651570619
  - 0.8542475797950948
  - 0.8561726078057351
  - 0.851501337018047
  - 0.8586965704842427
start: 2023-12-22 02:20:27.852403
wrapper: null
