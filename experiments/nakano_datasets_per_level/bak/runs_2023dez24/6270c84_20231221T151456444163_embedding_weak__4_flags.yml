active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmBkCgmZmZmZnpP4CZmZmZmcm/MDMzMzMz87+YmZmZmZkBwA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b9oZmZmZmb2P2hmZmZmZvY/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZAUBmZmZmZmYGwDQzMzMzM/M/mpmZmZmZAUBmZmZmZmYGwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZAcAgMzMzMzPzvwCZmZmZmcm/AJmZmZmZyb9wZmZmZmYOQA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 15:15:25.776425
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__4
  params: {}
hash: 6270c842f55f45f1836b5af1c8af43363677d7e85b00b11b282ce38a5b8c3b1f
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6270c84_20231221T151456444163_embedding_weak__4_flags.yml
results:
  fit_time:
  - 22.294349431991577
  - 22.85213565826416
  - 22.802587032318115
  - 22.409542083740234
  - 22.795119047164917
  score_time:
  - 2.002596616744995
  - 2.0162479877471924
  - 2.00392746925354
  - 2.1089582443237305
  - 1.8117637634277344
  test_average_precision_macro:
  - 0.5944294138483376
  - 0.6913656543042584
  - 0.6069304269516139
  - 0.715817256900651
  - 0.8128508061834887
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6771521262554698
  - 0.7483891916574723
  - 0.7131295752752334
  - 0.7867154173052853
  - 0.8286431541148404
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7802768099109563
  - 0.8088214285714285
  - 0.8156562881562882
  - 0.8223636548636549
  - 0.8544183673469387
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6693138181403472
  - 0.7424574859100017
  - 0.6769032025610815
  - 0.7794584206211468
  - 0.8360297086597588
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5505226480836237
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355311
  - 0.4448979591836735
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5505226480836237
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355311
  - 0.4448979591836735
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5505226480836236
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355314
  - 0.4448979591836735
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.4430259146341463
  - 0.4432330827067669
  - 0.421875
  - 0.4266979839498923
  - 0.35859213250517596
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4141395054308564
  - 0.38468170174437416
  - 0.39647472829692043
  - 0.3951768466904132
  - 0.31205794493793854
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.3798076923076923
  - 0.3592233009708738
  - 0.36159600997506236
  - 0.36159600997506236
  - 0.28608923884514437
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.3886178861788618
  - 0.38015442890442885
  - 0.37340465802004263
  - 0.3735859582013429
  - 0.31048396048396054
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3048333927352448
  - 0.3039998545446044
  - 0.28720624355422436
  - 0.28749752212955526
  - 0.23770918845169622
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.780276809910956
  - 0.8088214285714287
  - 0.8156562881562882
  - 0.8223636548636546
  - 0.8544183673469385
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.039515913949624525
  - 0.012325656611636801
  - 0.0
  - 0.022587697572631283
  - 0.01599692888445298
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - -0.023294231644152976
  - 0.06294058066909786
  - 0.0
  - 0.10974563851869544
  - 0.07988481001489509
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - -0.003971814363440205
  - 0.011785113019775794
  - 0.0
  - 0.017612480100682233
  - 0.028544303284605048
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.06699182286772283
  - 0.02011028184003899
  - 0.0
  - 0.03620928618513412
  - 0.02353171422857938
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.866205801167358
  - 0.8892765807670949
  - 0.8865553026274774
  - 0.8884160419093078
  - 0.9150470406347302
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.585365853658536
  - -4.85
  - -4.641025641025641
  - -4.487179487179487
  - -5.0
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4494773519163763
  - -0.4714285714285715
  - -0.4688644688644689
  - -0.46886446886446886
  - -0.5551020408163264
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.44947735191637633
  - -0.4714285714285714
  - -0.46886446886446886
  - -0.46886446886446886
  - -0.5551020408163265
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4494773519163763
  - -0.4714285714285714
  - -0.4688644688644689
  - -0.46886446886446864
  - -0.5551020408163266
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5569740853658537
  - -0.556766917293233
  - -0.578125
  - -0.5733020160501077
  - -0.6414078674948239
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23333333333333334
  - -0.21500000000000002
  - -0.2102564102564103
  - -0.19786324786324788
  - -0.17285714285714288
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5505226480836237
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355311
  - 0.4448979591836735
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5505226480836237
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355311
  - 0.4448979591836735
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5505226480836236
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355314
  - 0.4448979591836735
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.4430259146341463
  - 0.4432330827067669
  - 0.421875
  - 0.4266979839498923
  - 0.35859213250517596
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5505226480836237
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355311
  - 0.4448979591836735
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5505226480836237
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355311
  - 0.4448979591836735
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5505226480836236
  - 0.5285714285714286
  - 0.5311355311355311
  - 0.5311355311355314
  - 0.4448979591836735
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.4430259146341463
  - 0.4432330827067669
  - 0.421875
  - 0.4266979839498923
  - 0.35859213250517596
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6071128426765012
  - 0.6792302153539538
  - 0.6109067825557325
  - 0.7135023706452277
  - 0.7245935416692743
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7727004716981132
  - 0.7755613523604931
  - 0.784051724137931
  - 0.8225459627996989
  - 0.8175538399024788
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7666666666666667
  - 0.785
  - 0.7897435897435897
  - 0.8021367521367522
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5799104919168705
  - 0.6369267783514085
  - 0.5645800699665832
  - 0.6924148794377801
  - 0.6728238706606142
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8728279855638935
  - 0.8588223986082683
  - 0.8699136866302836
  - 0.8836402678844907
  - 0.8287346343659475
  train_average_precision_macro_oob:
  - 0.68168518090788
  - 0.6754671021935943
  - 0.6949608477914448
  - 0.70017117212218
  - 0.6243953932477346
  train_average_precision_micro:
  - 0.9051559559023898
  - 0.895808318085408
  - 0.9080499759069071
  - 0.9076551263367579
  - 0.888251495235415
  train_average_precision_micro_oob:
  - 0.7991066946186214
  - 0.7563982112288226
  - 0.8043341287247255
  - 0.8024210575653679
  - 0.748664764445936
  train_average_precision_samples:
  - 0.9119797178130511
  - 0.9149603174603176
  - 0.9136267281105989
  - 0.913122375832053
  - 0.9037655984825795
  train_average_precision_samples_oob:
  - 0.8404502541757445
  - 0.8261788806431665
  - 0.828520993343574
  - 0.8290990783410138
  - 0.814547020065888
  train_average_precision_weighted:
  - 0.9041656991351226
  - 0.8935047254378822
  - 0.9039170378726251
  - 0.9106754557376412
  - 0.8762976831009531
  train_average_precision_weighted_oob:
  - 0.7641082584877238
  - 0.7365356868811025
  - 0.7760427957574613
  - 0.7733557061951748
  - 0.709460735488376
  train_f1_macro:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749326
  train_f1_macro_oob:
  - 0.5266106442577031
  - 0.5157699443413729
  - 0.5271889400921659
  - 0.5299539170506912
  - 0.5354896675651392
  train_f1_micro:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749326
  train_f1_micro_oob:
  - 0.5266106442577031
  - 0.5157699443413729
  - 0.5271889400921659
  - 0.5299539170506913
  - 0.5354896675651393
  train_f1_samples:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749325
  train_f1_samples_oob:
  - 0.526610644257703
  - 0.5157699443413728
  - 0.527188940092166
  - 0.5299539170506912
  - 0.5354896675651393
  train_f1_weighted:
  - 0.5570353927734616
  - 0.5271985157699444
  - 0.5654777845404747
  - 0.5448368733549611
  - 0.5572206095791001
  train_f1_weighted_oob:
  - 0.4412627944259465
  - 0.41492888064316635
  - 0.4399634814363968
  - 0.4427863132766114
  - 0.4356071601354621
  train_jaccard_macro:
  - 0.4452005209396681
  - 0.4327853173513468
  - 0.44867466251059834
  - 0.4367805420399372
  - 0.4564324452307953
  train_jaccard_macro_oob:
  - 0.38276546766840486
  - 0.37929003316953586
  - 0.3839731923650292
  - 0.3863752768719058
  - 0.396811293675155
  train_jaccard_micro:
  - 0.4318181818181818
  - 0.4156270518713066
  - 0.43613500992720056
  - 0.42295081967213116
  - 0.4407766990291262
  train_jaccard_micro_oob:
  - 0.3574144486692015
  - 0.3475
  - 0.3579474342928661
  - 0.3605015673981191
  - 0.3656441717791411
  train_jaccard_samples:
  - 0.4587097724352626
  - 0.4406265451719997
  - 0.46014737950221823
  - 0.4452307191016867
  - 0.47018784848973527
  train_jaccard_samples_oob:
  - 0.3779440965715476
  - 0.3627927627927628
  - 0.37677745193874224
  - 0.37966037546682707
  - 0.3804982578567484
  train_jaccard_weighted:
  - 0.39228841266241377
  - 0.3647649082503207
  - 0.39949977902035333
  - 0.3806551122206694
  - 0.3923866018896077
  train_jaccard_weighted_oob:
  - 0.2984443778855817
  - 0.28101963251146506
  - 0.2984052318675069
  - 0.3010770385271315
  - 0.29770367751630467
  train_label_ranking_average_precision_score:
  - 0.9119797178130509
  - 0.9149603174603177
  - 0.9136267281105991
  - 0.9131223758320527
  - 0.9037655984825796
  train_label_ranking_average_precision_score_oob:
  - 0.8404502541757445
  - 0.8261788806431662
  - 0.8285209933435741
  - 0.8290990783410137
  - 0.8145470200658879
  train_matthews_corrcoef_macro:
  - 0.15388342689429976
  - 0.1096545257577275
  - 0.1269795824533931
  - 0.10857707685422488
  - 0.11787374964630977
  train_matthews_corrcoef_macro_oob:
  - 0.03608184272319374
  - 0.015130117835730695
  - 0.037083996342380514
  - 0.03759994130224752
  - 0.01591933052268257
  train_matthews_corrcoef_micro:
  - 0.33309398023960474
  - 0.29057793746626903
  - 0.3331890519201188
  - 0.3038128561498796
  - 0.31289965063835723
  train_matthews_corrcoef_micro_oob:
  - 0.14382568377765031
  - 0.05421747765915462
  - 0.12910628693548076
  - 0.12982269672237465
  - 0.055516849533457695
  train_matthews_corrcoef_samples:
  - 0.26296218314811637
  - 0.22062496138543133
  - 0.2585993919953528
  - 0.2095979773751863
  - 0.23005554849175486
  train_matthews_corrcoef_samples_oob:
  - 0.059889970348308404
  - 0.006887403712855983
  - 0.045080477248335124
  - 0.043748535428978476
  - 0.009989347584590982
  train_matthews_corrcoef_weighted:
  - 0.21114240378890844
  - 0.16155548928183242
  - 0.19032441381119253
  - 0.16459221821571463
  - 0.1780358539988603
  train_matthews_corrcoef_weighted_oob:
  - 0.05708219220929608
  - 0.02399731404218086
  - 0.0587389181757171
  - 0.05940730035619126
  - 0.025494214148484125
  train_ndgc:
  - 0.956537206924149
  - 0.9581162777001112
  - 0.9559974726186855
  - 0.9547642360844327
  - 0.9518864624230661
  train_ndgc_oob:
  - 0.9085717472626371
  - 0.8938869065255893
  - 0.9024346032489818
  - 0.900358999947259
  - 0.8916841030738069
  train_neg_coverage_error:
  - -4.333333333333333
  - -4.162337662337662
  - -4.335483870967742
  - -4.2387096774193544
  - -4.2578616352201255
  train_neg_coverage_error_oob:
  - -4.758169934640523
  - -4.603896103896104
  - -4.7935483870967746
  - -4.7290322580645165
  - -4.69811320754717
  train_neg_hamming_loss_macro:
  - -0.39682539682539675
  - -0.41280148423005564
  - -0.3926267281105991
  - -0.4055299539170507
  - -0.38814016172506743
  train_neg_hamming_loss_macro_oob:
  - -0.47338935574229696
  - -0.4842300556586271
  - -0.4728110599078342
  - -0.4700460829493087
  - -0.4645103324348608
  train_neg_hamming_loss_micro:
  - -0.3968253968253968
  - -0.41280148423005564
  - -0.39262672811059907
  - -0.4055299539170507
  - -0.3881401617250674
  train_neg_hamming_loss_micro_oob:
  - -0.4733893557422969
  - -0.4842300556586271
  - -0.4728110599078341
  - -0.4700460829493088
  - -0.46451033243486073
  train_neg_hamming_loss_samples:
  - -0.3968253968253968
  - -0.4128014842300555
  - -0.392626728110599
  - -0.40552995391705066
  - -0.3881401617250673
  train_neg_hamming_loss_samples_oob:
  - -0.47338935574229685
  - -0.484230055658627
  - -0.47281105990783406
  - -0.47004608294930866
  - -0.4645103324348607
  train_neg_hamming_loss_weighted:
  - -0.44296460722653846
  - -0.47280148423005564
  - -0.4345222154595253
  - -0.45516312664503883
  - -0.44277939042089987
  train_neg_hamming_loss_weighted_oob:
  - -0.5587372055740536
  - -0.5850711193568335
  - -0.5600365185636031
  - -0.5572136867233887
  - -0.564392839864538
  train_neg_label_ranking_loss:
  - -0.1111111111111111
  - -0.10919913419913423
  - -0.10795698924731184
  - -0.10354838709677419
  - -0.12148846960167715
  train_neg_label_ranking_loss_oob:
  - -0.19248366013071894
  - -0.1974025974025974
  - -0.20161290322580644
  - -0.19494623655913978
  - -0.21614255765199167
  train_precision_macro:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749326
  train_precision_macro_oob:
  - 0.5266106442577031
  - 0.5157699443413729
  - 0.5271889400921659
  - 0.5299539170506912
  - 0.5354896675651392
  train_precision_micro:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749326
  train_precision_micro_oob:
  - 0.5266106442577031
  - 0.5157699443413729
  - 0.5271889400921659
  - 0.5299539170506913
  - 0.5354896675651393
  train_precision_samples:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749325
  train_precision_samples_oob:
  - 0.526610644257703
  - 0.5157699443413728
  - 0.527188940092166
  - 0.5299539170506912
  - 0.5354896675651393
  train_precision_weighted:
  - 0.5570353927734616
  - 0.5271985157699444
  - 0.5654777845404747
  - 0.5448368733549611
  - 0.5572206095791001
  train_precision_weighted_oob:
  - 0.4412627944259465
  - 0.41492888064316635
  - 0.4399634814363968
  - 0.4427863132766114
  - 0.4356071601354621
  train_recall_macro:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749326
  train_recall_macro_oob:
  - 0.5266106442577031
  - 0.5157699443413729
  - 0.5271889400921659
  - 0.5299539170506912
  - 0.5354896675651392
  train_recall_micro:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749326
  train_recall_micro_oob:
  - 0.5266106442577031
  - 0.5157699443413729
  - 0.5271889400921659
  - 0.5299539170506913
  - 0.5354896675651393
  train_recall_samples:
  - 0.6031746031746031
  - 0.5871985157699443
  - 0.6073732718894009
  - 0.5944700460829493
  - 0.6118598382749325
  train_recall_samples_oob:
  - 0.526610644257703
  - 0.5157699443413728
  - 0.527188940092166
  - 0.5299539170506912
  - 0.5354896675651393
  train_recall_weighted:
  - 0.5570353927734616
  - 0.5271985157699444
  - 0.5654777845404747
  - 0.5448368733549611
  - 0.5572206095791001
  train_recall_weighted_oob:
  - 0.4412627944259465
  - 0.41492888064316635
  - 0.4399634814363968
  - 0.4427863132766114
  - 0.4356071601354621
  train_roc_auc_macro:
  - 0.8525218589520762
  - 0.8267659826056192
  - 0.8620881530016081
  - 0.8738049589261293
  - 0.819661451840495
  train_roc_auc_macro_oob:
  - 0.7153180954110806
  - 0.67895813298155
  - 0.7496949621105341
  - 0.7498423511798344
  - 0.6731933053193994
  train_roc_auc_micro:
  - 0.8932497471488856
  - 0.8869129423921466
  - 0.8955804861465239
  - 0.8987659232961308
  - 0.8814697107277208
  train_roc_auc_micro_oob:
  - 0.8071705088410699
  - 0.7985671230517524
  - 0.811092979772225
  - 0.8156230234029096
  - 0.7941853677519782
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - 0.8785115303983229
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - 0.7838574423480085
  train_roc_auc_weighted:
  - 0.8409791513780348
  - 0.8082872375575229
  - 0.8526088071651748
  - 0.8619156116364776
  - 0.8086160955435008
  train_roc_auc_weighted_oob:
  - 0.6998159820417823
  - 0.6423466834954559
  - 0.7389620976336376
  - 0.7395806928144312
  - 0.6541368470100507
start: 2023-12-21 15:14:56.444163
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
