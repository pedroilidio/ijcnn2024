active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0CAmZmZmZn5v0AzMzMzMwNAgGZmZmZm9j9gZmZmZmYWwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:27:45.741469
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__8
  params: {}
hash: f17eeca4af00c66f4b44f7e07d9a5e7e18e4c449e5fcd9f808dc43d59c4d0301
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f17eeca_20231221T072027018659_embedding_weak__8_VirusGO.yml
results:
  fit_time:
  - 415.270094871521
  - 418.5073390007019
  - 424.9529318809509
  - 429.291300535202
  - 427.0348300933838
  score_time:
  - 3.3254406452178955
  - 3.4238274097442627
  - 3.6331639289855957
  - 3.241229295730591
  - 3.5344676971435547
  test_average_precision_macro:
  - 0.962838677687265
  - 0.9063276884053234
  - 0.943907767467279
  - 0.9855450573762358
  - 0.8998919224239911
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9250405455558639
  - 0.895847441039582
  - 0.8576451350677217
  - 0.9555200483044786
  - 0.8546775711319526
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9627192982456139
  - 0.9251937984496124
  - 0.9205128205128205
  - 0.9666666666666668
  - 0.898581560283688
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9648949868715735
  - 0.9217336459417909
  - 0.9143935081423699
  - 0.9887500122856159
  - 0.9030808087948512
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9429824561403507
  - 0.9186046511627907
  - 0.923076923076923
  - 0.9291666666666668
  - 0.9468085106382979
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9429824561403509
  - 0.9186046511627907
  - 0.9230769230769231
  - 0.9291666666666667
  - 0.9468085106382979
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9429824561403509
  - 0.9186046511627907
  - 0.9230769230769232
  - 0.9291666666666668
  - 0.9468085106382981
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9440789473684211
  - 0.9065295169946332
  - 0.9130216189039719
  - 0.938
  - 0.9482686691697956
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8930685845319991
  - 0.8507826730239839
  - 0.8582225913621261
  - 0.8685190778214035
  - 0.8997008803521408
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8921161825726142
  - 0.8494623655913979
  - 0.8571428571428571
  - 0.867704280155642
  - 0.898989898989899
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9078947368421053
  - 0.8715393133997785
  - 0.8736263736263737
  - 0.8857142857142858
  - 0.9103343465045592
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8950984990619136
  - 0.8306826376272656
  - 0.8403328773369813
  - 0.8839021443672607
  - 0.9021541557799592
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9627192982456139
  - 0.9251937984496124
  - 0.9205128205128205
  - 0.9666666666666666
  - 0.898581560283688
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5898665849411598
  - 0.46292350437441665
  - 0.47551760071467236
  - 0.4703165936875586
  - 0.5293519267248469
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8225238422014984
  - 0.7330156628499206
  - 0.765153260923517
  - 0.7754086052332392
  - 0.8135239209067536
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8053808783496731
  - 0.6770909549783105
  - 0.724152481735949
  - 0.692061388300842
  - 0.7651548438333698
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7948045450876021
  - 0.6634449396011344
  - 0.702553650759065
  - 0.7143997812746465
  - 0.7561730828769495
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.975231463463925
  - 0.9462811404060915
  - 0.9450086815109435
  - 0.9767660429738829
  - 0.926315844751305
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.394736842105263
  - -1.4651162790697674
  - -1.5897435897435896
  - -1.375
  - -1.4893617021276595
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05701754385964911
  - -0.08139534883720931
  - -0.07692307692307693
  - -0.07083333333333335
  - -0.05319148936170213
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05701754385964912
  - -0.08139534883720931
  - -0.07692307692307693
  - -0.07083333333333333
  - -0.05319148936170213
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05701754385964912
  - -0.08139534883720931
  - -0.07692307692307691
  - -0.07083333333333333
  - -0.05319148936170212
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05592105263157895
  - -0.09347048300536673
  - -0.08697838109602817
  - -0.062
  - -0.05173133083020442
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02039473684210526
  - -0.045284237726098193
  - -0.04487179487179487
  - -0.0225
  - -0.07446808510638299
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9429824561403507
  - 0.9186046511627907
  - 0.923076923076923
  - 0.9291666666666668
  - 0.9468085106382979
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9429824561403509
  - 0.9186046511627907
  - 0.9230769230769231
  - 0.9291666666666667
  - 0.9468085106382979
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9429824561403509
  - 0.9186046511627907
  - 0.9230769230769232
  - 0.9291666666666668
  - 0.9468085106382981
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9440789473684211
  - 0.9065295169946332
  - 0.9130216189039719
  - 0.938
  - 0.9482686691697956
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9429824561403507
  - 0.9186046511627907
  - 0.923076923076923
  - 0.9291666666666668
  - 0.9468085106382979
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9429824561403509
  - 0.9186046511627907
  - 0.9230769230769231
  - 0.9291666666666667
  - 0.9468085106382979
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9429824561403509
  - 0.9186046511627907
  - 0.9230769230769232
  - 0.9291666666666668
  - 0.9468085106382981
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9440789473684211
  - 0.9065295169946332
  - 0.9130216189039719
  - 0.938
  - 0.9482686691697956
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9884758827773533
  - 0.9674009432832963
  - 0.9774733209782229
  - 0.9971553234820498
  - 0.9510639914880681
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9773148148148147
  - 0.9662994772218073
  - 0.9689274616950605
  - 0.9847894736842104
  - 0.953144894321365
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9796052631578945
  - 0.9547157622739018
  - 0.9551282051282052
  - 0.9775
  - 0.925531914893617
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9842463500551735
  - 0.9596942800788955
  - 0.9596903913080385
  - 0.9965416311452117
  - 0.9554795561635506
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9674145625743641
  - 0.9704657206965184
  - 0.9735314267195112
  - 0.9574750260769683
  - 0.975668090864836
  train_average_precision_macro_oob:
  - 0.9300486754213048
  - 0.9454370211796895
  - 0.9078626792956813
  - 0.9162744347053836
  - 0.9490655400479867
  train_average_precision_micro:
  - 0.9136429881744981
  - 0.920104808548683
  - 0.9233928912474645
  - 0.9008282517175902
  - 0.9256310252445114
  train_average_precision_micro_oob:
  - 0.8840405736897481
  - 0.9061893462410453
  - 0.887841652253269
  - 0.8739934518031465
  - 0.9029064361362309
  train_average_precision_samples:
  - 0.9546351084812624
  - 0.9547764227642275
  - 0.9608134920634922
  - 0.9565868263473054
  - 0.965625
  train_average_precision_samples_oob:
  - 0.9202169625246548
  - 0.9336382113821139
  - 0.9253968253968254
  - 0.9341317365269461
  - 0.9341666666666665
  train_average_precision_weighted:
  - 0.9529602452525225
  - 0.9592240826877572
  - 0.9642345227002228
  - 0.9376562165729521
  - 0.9643485863165969
  train_average_precision_weighted_oob:
  - 0.9288971345914201
  - 0.9491075956462467
  - 0.9202032198439568
  - 0.9105466899143317
  - 0.94816534994191
  train_f1_macro:
  - 0.9388560157790927
  - 0.9400406504065041
  - 0.9384920634920636
  - 0.9361277445109781
  - 0.9406249999999999
  train_f1_macro_oob:
  - 0.9201183431952663
  - 0.9278455284552845
  - 0.9275793650793651
  - 0.9211576846307387
  - 0.9239583333333333
  train_f1_micro:
  - 0.9388560157790927
  - 0.9400406504065041
  - 0.9384920634920635
  - 0.936127744510978
  - 0.940625
  train_f1_micro_oob:
  - 0.9201183431952663
  - 0.9278455284552846
  - 0.9275793650793651
  - 0.9211576846307385
  - 0.9239583333333333
  train_f1_samples:
  - 0.9388560157790928
  - 0.9400406504065042
  - 0.9384920634920636
  - 0.9361277445109779
  - 0.940625
  train_f1_samples_oob:
  - 0.9201183431952663
  - 0.9278455284552847
  - 0.9275793650793651
  - 0.9211576846307384
  - 0.9239583333333334
  train_f1_weighted:
  - 0.9361584870634644
  - 0.9411280487804877
  - 0.9408907841743662
  - 0.9359400011857474
  - 0.9381529850746269
  train_f1_weighted_oob:
  - 0.916405615500638
  - 0.9270426829268292
  - 0.9311774461028194
  - 0.9186280903539455
  - 0.9270522388059702
  train_jaccard_macro:
  - 0.8849871760352116
  - 0.8876155572933587
  - 0.88463167774388
  - 0.8805117618409478
  - 0.8881426964315849
  train_jaccard_macro_oob:
  - 0.8525639478330141
  - 0.8659815096166715
  - 0.8655832092693548
  - 0.8545308347449918
  - 0.8595185300077784
  train_jaccard_micro:
  - 0.8847583643122676
  - 0.8868648130393096
  - 0.8841121495327103
  - 0.8799249530956847
  - 0.887905604719764
  train_jaccard_micro_oob:
  - 0.852054794520548
  - 0.8654028436018958
  - 0.8649398704902868
  - 0.8538390379278445
  - 0.8586640851887706
  train_jaccard_samples:
  - 0.9009580163426317
  - 0.9006968641114983
  - 0.9002267573696145
  - 0.8954947248360421
  - 0.9050595238095237
  train_jaccard_samples_oob:
  - 0.8708086785009861
  - 0.883130081300813
  - 0.8832199546485262
  - 0.8722554890219562
  - 0.8764880952380952
  train_jaccard_weighted:
  - 0.8801783437504167
  - 0.8891728683379659
  - 0.8886337441153995
  - 0.8798864091865604
  - 0.8836150192417315
  train_jaccard_weighted_oob:
  - 0.845833287191354
  - 0.86418884806902
  - 0.8715905148904761
  - 0.849695236730644
  - 0.8644762024129585
  train_label_ranking_average_precision_score:
  - 0.9546351084812622
  - 0.9547764227642275
  - 0.9608134920634919
  - 0.9565868263473054
  - 0.965625
  train_label_ranking_average_precision_score_oob:
  - 0.9202169625246548
  - 0.9336382113821139
  - 0.9253968253968256
  - 0.9341317365269461
  - 0.9341666666666667
  train_matthews_corrcoef_macro:
  - 0.5868793005215868
  - 0.5174562678672442
  - 0.5098928638462451
  - 0.5026046406842141
  - 0.6010182083423511
  train_matthews_corrcoef_macro_oob:
  - 0.4213808022235673
  - 0.4596698034268713
  - 0.4032039390647421
  - 0.420232009684071
  - 0.3967057066548092
  train_matthews_corrcoef_micro:
  - 0.8025097416652849
  - 0.8075567849276327
  - 0.799395121100096
  - 0.7932988952096957
  - 0.8151139750217395
  train_matthews_corrcoef_micro_oob:
  - 0.7372695523958317
  - 0.7661119386371384
  - 0.7614465299189878
  - 0.7414723799908919
  - 0.7591185596152664
  train_matthews_corrcoef_samples:
  - 0.7670653643550597
  - 0.75965550045678
  - 0.7542428626881398
  - 0.750799413622227
  - 0.7928272702801733
  train_matthews_corrcoef_samples_oob:
  - 0.6669936208073243
  - 0.710229018262645
  - 0.6989013948542052
  - 0.6817002380939622
  - 0.6940772702801732
  train_matthews_corrcoef_weighted:
  - 0.7683882180420076
  - 0.7503228544348084
  - 0.7416295129472681
  - 0.7355418587374299
  - 0.7838522837233335
  train_matthews_corrcoef_weighted_oob:
  - 0.6633423132198404
  - 0.7019730869377326
  - 0.6777720507867375
  - 0.6695985213008487
  - 0.6754813360407437
  train_ndgc:
  - 0.9671911994697852
  - 0.9672619302024692
  - 0.9722899410622662
  - 0.9687893050089337
  - 0.9752985874623405
  train_ndgc_oob:
  - 0.9431087711608485
  - 0.9526204162418469
  - 0.947208660371975
  - 0.9535826031646675
  - 0.9542691945907077
  train_neg_coverage_error:
  - -1.319526627218935
  - -1.3353658536585367
  - -1.3095238095238095
  - -1.3173652694610778
  - -1.34375
  train_neg_coverage_error_oob:
  - -1.4911242603550297
  - -1.4390243902439024
  - -1.4642857142857142
  - -1.4311377245508983
  - -1.50625
  train_neg_hamming_loss_macro:
  - -0.0611439842209073
  - -0.059959349593495935
  - -0.061507936507936505
  - -0.06387225548902196
  - -0.059375000000000004
  train_neg_hamming_loss_macro_oob:
  - -0.07988165680473373
  - -0.07215447154471545
  - -0.07242063492063493
  - -0.07884231536926149
  - -0.07604166666666667
  train_neg_hamming_loss_micro:
  - -0.0611439842209073
  - -0.059959349593495935
  - -0.061507936507936505
  - -0.06387225548902195
  - -0.059375
  train_neg_hamming_loss_micro_oob:
  - -0.07988165680473373
  - -0.07215447154471545
  - -0.07242063492063493
  - -0.07884231536926148
  - -0.07604166666666666
  train_neg_hamming_loss_samples:
  - -0.06114398422090729
  - -0.05995934959349593
  - -0.0615079365079365
  - -0.06387225548902195
  - -0.059375
  train_neg_hamming_loss_samples_oob:
  - -0.07988165680473373
  - -0.07215447154471544
  - -0.07242063492063491
  - -0.07884231536926146
  - -0.07604166666666666
  train_neg_hamming_loss_weighted:
  - -0.06384151293653556
  - -0.05887195121951219
  - -0.05910921582563373
  - -0.06405999881425269
  - -0.06184701492537314
  train_neg_hamming_loss_weighted_oob:
  - -0.08359438449936187
  - -0.07295731707317073
  - -0.06882255389718077
  - -0.08137190964605444
  - -0.07294776119402985
  train_neg_label_ranking_loss:
  - -0.021745562130177518
  - -0.022103658536585368
  - -0.02015542328042328
  - -0.01976047904191617
  - -0.016319444444444445
  train_neg_label_ranking_loss_oob:
  - -0.05065746219592373
  - -0.04009146341463414
  - -0.04700727513227513
  - -0.03883898868928809
  - -0.04170138888888889
  train_precision_macro:
  - 0.9388560157790927
  - 0.9400406504065041
  - 0.9384920634920636
  - 0.9361277445109781
  - 0.9406249999999999
  train_precision_macro_oob:
  - 0.9201183431952663
  - 0.9278455284552845
  - 0.9275793650793651
  - 0.9211576846307387
  - 0.9239583333333333
  train_precision_micro:
  - 0.9388560157790927
  - 0.9400406504065041
  - 0.9384920634920635
  - 0.936127744510978
  - 0.940625
  train_precision_micro_oob:
  - 0.9201183431952663
  - 0.9278455284552846
  - 0.9275793650793651
  - 0.9211576846307385
  - 0.9239583333333333
  train_precision_samples:
  - 0.9388560157790928
  - 0.9400406504065042
  - 0.9384920634920636
  - 0.9361277445109779
  - 0.940625
  train_precision_samples_oob:
  - 0.9201183431952663
  - 0.9278455284552847
  - 0.9275793650793651
  - 0.9211576846307384
  - 0.9239583333333334
  train_precision_weighted:
  - 0.9361584870634644
  - 0.9411280487804877
  - 0.9408907841743662
  - 0.9359400011857474
  - 0.9381529850746269
  train_precision_weighted_oob:
  - 0.916405615500638
  - 0.9270426829268292
  - 0.9311774461028194
  - 0.9186280903539455
  - 0.9270522388059702
  train_recall_macro:
  - 0.9388560157790927
  - 0.9400406504065041
  - 0.9384920634920636
  - 0.9361277445109781
  - 0.9406249999999999
  train_recall_macro_oob:
  - 0.9201183431952663
  - 0.9278455284552845
  - 0.9275793650793651
  - 0.9211576846307387
  - 0.9239583333333333
  train_recall_micro:
  - 0.9388560157790927
  - 0.9400406504065041
  - 0.9384920634920635
  - 0.936127744510978
  - 0.940625
  train_recall_micro_oob:
  - 0.9201183431952663
  - 0.9278455284552846
  - 0.9275793650793651
  - 0.9211576846307385
  - 0.9239583333333333
  train_recall_samples:
  - 0.9388560157790928
  - 0.9400406504065042
  - 0.9384920634920636
  - 0.9361277445109779
  - 0.940625
  train_recall_samples_oob:
  - 0.9201183431952663
  - 0.9278455284552847
  - 0.9275793650793651
  - 0.9211576846307384
  - 0.9239583333333334
  train_recall_weighted:
  - 0.9361584870634644
  - 0.9411280487804877
  - 0.9408907841743662
  - 0.9359400011857474
  - 0.9381529850746269
  train_recall_weighted_oob:
  - 0.916405615500638
  - 0.9270426829268292
  - 0.9311774461028194
  - 0.9186280903539455
  - 0.9270522388059702
  train_roc_auc_macro:
  - 0.9879720751266615
  - 0.9895598095637149
  - 0.9900958595359096
  - 0.9881963620179707
  - 0.9907349729089129
  train_roc_auc_macro_oob:
  - 0.973861630748233
  - 0.9751763232374199
  - 0.9603161482909485
  - 0.9676967712706515
  - 0.9836758340440408
  train_roc_auc_micro:
  - 0.9815147664003874
  - 0.9835044642857143
  - 0.9806851738827547
  - 0.9824040841584157
  - 0.9819545225126016
  train_roc_auc_micro_oob:
  - 0.9675865407891552
  - 0.9707589285714285
  - 0.9636575486877877
  - 0.9664232673267327
  - 0.9688776145622349
  train_roc_auc_samples:
  - 0.9782544378698226
  - 0.9778963414634146
  - 0.9798445767195768
  - 0.980239520958084
  - 0.9836805555555556
  train_roc_auc_samples_oob:
  - 0.9493425378040763
  - 0.9599085365853659
  - 0.9529927248677248
  - 0.9611610113107121
  - 0.9582986111111111
  train_roc_auc_weighted:
  - 0.9786311770584436
  - 0.9830599762517005
  - 0.9831436773185447
  - 0.9793375373439381
  - 0.9829638635448448
  train_roc_auc_weighted_oob:
  - 0.969366350958406
  - 0.9754901257210407
  - 0.9624711022175613
  - 0.9635282512197226
  - 0.9747519457492402
start: 2023-12-21 07:20:27.018659
wrapper: null
