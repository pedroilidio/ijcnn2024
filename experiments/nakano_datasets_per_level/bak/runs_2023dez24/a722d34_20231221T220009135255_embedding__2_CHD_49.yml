active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT/MzMzMzMz8v6CZmZmZmck/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACEAAAAAAAADwPwAAAAAAAPC/AAAAAAAACMAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:00:24.963535
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__2
  params: {}
hash: a722d34d033f0f4443668771fac261c2ac0a8488aac2d88af75a8a54dd3f59f0
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a722d34_20231221T220009135255_embedding__2_CHD_49.yml
results:
  fit_time:
  - 5.448922872543335
  - 5.409415245056152
  - 6.12156867980957
  - 6.086996793746948
  - 6.13414192199707
  score_time:
  - 1.8966996669769287
  - 2.1177377700805664
  - 2.046034097671509
  - 2.2091643810272217
  - 2.2205865383148193
  test_average_precision_macro:
  - 0.5828383060106667
  - 0.5397777154602172
  - 0.5196170672427488
  - 0.5236434466678573
  - 0.5565405330344574
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7340286556213458
  - 0.714308905432544
  - 0.6779230480075407
  - 0.6804447719529685
  - 0.7068388514400272
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7927083333333333
  - 0.7885858585858587
  - 0.7822544642857142
  - 0.78182261208577
  - 0.7879754754754754
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7123621015990508
  - 0.6677941152871238
  - 0.6379457567222215
  - 0.6484684626294259
  - 0.6699847459986892
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7083333333333334
  - 0.7166666666666667
  - 0.7008928571428571
  - 0.7105263157894736
  - 0.7087087087087087
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7083333333333334
  - 0.7166666666666667
  - 0.7008928571428571
  - 0.7105263157894737
  - 0.7087087087087087
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7083333333333334
  - 0.7166666666666668
  - 0.7008928571428571
  - 0.7105263157894737
  - 0.7087087087087091
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6712801651826041
  - 0.683359547027367
  - 0.6577172827172827
  - 0.6614035087719298
  - 0.6673620989410463
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5677551602898666
  - 0.5737563591873279
  - 0.5599291379706387
  - 0.5702868270191455
  - 0.5675654054307399
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5483870967741935
  - 0.5584415584415584
  - 0.5395189003436426
  - 0.5510204081632653
  - 0.5488372093023256
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5759700176366843
  - 0.5919480519480519
  - 0.576062925170068
  - 0.5872218424850003
  - 0.5721149721149721
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5117319063573971
  - 0.5242889217749266
  - 0.49639854758245144
  - 0.4983313958242342
  - 0.5064975693685434
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7927083333333335
  - 0.7976767676767678
  - 0.7822544642857142
  - 0.7818226120857702
  - 0.8059934934934936
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07522102256332656
  - 0.10062461724846562
  - 0.07707682990951337
  - 0.09791888431021056
  - 0.06550752175008187
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.40335203961466565
  - 0.4209677599202241
  - 0.3827577497641882
  - 0.40833459176288517
  - 0.398797284779006
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4156617326871798
  - 0.4240493751624272
  - 0.3957596201479658
  - 0.42917509936159715
  - 0.40592750898447466
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0857048338358126
  - 0.10705335056024064
  - 0.08131737127158062
  - 0.10351483630500985
  - 0.06785313001518084
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8656202036079171
  - 0.8609044594239164
  - 0.858568156786166
  - 0.8562741235793795
  - 0.859650195475156
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8333333333333335
  - -3.790909090909091
  - -3.7142857142857144
  - -3.7017543859649122
  - -3.6936936936936937
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2916666666666667
  - -0.2833333333333333
  - -0.29910714285714285
  - -0.28947368421052627
  - -0.29129129129129133
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2916666666666667
  - -0.2833333333333333
  - -0.29910714285714285
  - -0.2894736842105263
  - -0.2912912912912913
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2916666666666667
  - -0.2833333333333333
  - -0.29910714285714285
  - -0.2894736842105263
  - -0.2912912912912912
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32871983481739575
  - -0.3166404529726329
  - -0.34228271728271725
  - -0.3385964912280702
  - -0.33263790105895374
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20174897119341562
  - -0.20974747474747477
  - -0.21061507936507937
  - -0.2115253411306043
  - -0.19381881881881882
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7083333333333334
  - 0.7166666666666667
  - 0.7008928571428571
  - 0.7105263157894736
  - 0.7087087087087087
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7083333333333334
  - 0.7166666666666667
  - 0.7008928571428571
  - 0.7105263157894737
  - 0.7087087087087087
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7083333333333334
  - 0.7166666666666668
  - 0.7008928571428571
  - 0.7105263157894737
  - 0.7087087087087091
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6712801651826041
  - 0.683359547027367
  - 0.6577172827172827
  - 0.6614035087719298
  - 0.6673620989410463
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7083333333333334
  - 0.7166666666666667
  - 0.7008928571428571
  - 0.7105263157894736
  - 0.7087087087087087
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7083333333333334
  - 0.7166666666666667
  - 0.7008928571428571
  - 0.7105263157894737
  - 0.7087087087087087
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7083333333333334
  - 0.7166666666666668
  - 0.7008928571428571
  - 0.7105263157894737
  - 0.7087087087087091
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6712801651826041
  - 0.683359547027367
  - 0.6577172827172827
  - 0.6614035087719298
  - 0.6673620989410463
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6233510856062277
  - 0.6048569428890671
  - 0.6027203054582267
  - 0.5885766989930387
  - 0.6377288332811821
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8043085891879893
  - 0.7872112218916423
  - 0.7883528388709735
  - 0.7871345029239765
  - 0.7930377123912142
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7982510288065845
  - .nan
  - 0.7893849206349207
  - 0.7884746588693958
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6633175609262669
  - 0.6264284296963553
  - 0.5838716938883775
  - 0.604055763985589
  - 0.6287172653886112
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9998941891707226
  - 0.9997502087109038
  - 0.9995893157743598
  - 0.999718394008596
  - 0.9998666487171541
  train_average_precision_macro_oob:
  - 0.594753924646348
  - 0.6061431777732107
  - 0.5825845650985112
  - 0.58695635928781
  - 0.610449073396753
  train_average_precision_micro:
  - 0.9519571155880342
  - 0.9533134094874959
  - 0.9522645815709921
  - 0.9525084581087773
  - 0.9549761705155535
  train_average_precision_micro_oob:
  - 0.722279966063114
  - 0.724026350509815
  - 0.7209538849982603
  - 0.717386462064556
  - 0.7230974696106829
  train_average_precision_samples:
  - 0.9180462341536167
  - 0.9160081148564295
  - 0.91536556308001
  - 0.9270061728395063
  - 0.9249280530530529
  train_average_precision_samples_oob:
  - 0.7925211285110614
  - 0.7931242197253432
  - 0.7918579132179585
  - 0.7939909297052153
  - 0.7970783283283284
  train_average_precision_weighted:
  - 0.9998812272984648
  - 0.9997869678699566
  - 0.9996015641307837
  - 0.9997340251577604
  - 0.9998890530780522
  train_average_precision_weighted_oob:
  - 0.7209017007560727
  - 0.7328329801718708
  - 0.712321076677025
  - 0.7083662393122361
  - 0.7293741299230949
  train_f1_macro:
  - 0.919090231170768
  - 0.9220973782771535
  - 0.9213694507148231
  - 0.9115646258503401
  - 0.9215465465465466
  train_f1_macro_oob:
  - 0.7211036539895601
  - 0.7205992509363295
  - 0.718209179834462
  - 0.7244897959183674
  - 0.7252252252252253
  train_f1_micro:
  - 0.919090231170768
  - 0.9220973782771535
  - 0.9213694507148231
  - 0.9115646258503401
  - 0.9215465465465466
  train_f1_micro_oob:
  - 0.72110365398956
  - 0.7205992509363296
  - 0.718209179834462
  - 0.7244897959183674
  - 0.7252252252252253
  train_f1_samples:
  - 0.9190902311707682
  - 0.9220973782771537
  - 0.9213694507148233
  - 0.9115646258503401
  - 0.9215465465465464
  train_f1_samples_oob:
  - 0.7211036539895601
  - 0.7205992509363295
  - 0.7182091798344621
  - 0.7244897959183674
  - 0.7252252252252253
  train_f1_weighted:
  - 0.8926975567343669
  - 0.8945176796720634
  - 0.8954711450959072
  - 0.8868368038874951
  - 0.8950454377655772
  train_f1_weighted_oob:
  - 0.6829752938073327
  - 0.6810188052336155
  - 0.6820228570077884
  - 0.6882175131023056
  - 0.6887198881531925
  train_jaccard_macro:
  - 0.859029736812424
  - 0.8644160751714666
  - 0.8625504474965021
  - 0.8454153063573157
  - 0.8631727874155599
  train_jaccard_macro_oob:
  - 0.580110711845551
  - 0.5801006874466745
  - 0.5772359545711929
  - 0.5835318092139534
  - 0.5851812317821948
  train_jaccard_micro:
  - 0.8502932045532943
  - 0.8554551772063933
  - 0.8542029996512034
  - 0.8375
  - 0.8545074834667595
  train_jaccard_micro_oob:
  - 0.5638483965014577
  - 0.563231850117096
  - 0.5603169944232462
  - 0.568
  - 0.568904593639576
  train_jaccard_samples:
  - 0.8689144561627782
  - 0.8742322097378277
  - 0.872514242717403
  - 0.8569808875931324
  - 0.873123123123123
  train_jaccard_samples_oob:
  - 0.595783336722934
  - 0.5939228561700471
  - 0.5907996442985157
  - 0.6020633939001286
  - 0.6008053508053508
  train_jaccard_weighted:
  - 0.8180988389417377
  - 0.8212307118217063
  - 0.8221077708606915
  - 0.8068093138504715
  - 0.8218501422141299
  train_jaccard_weighted_oob:
  - 0.5223896682104778
  - 0.5201456814725013
  - 0.5219496152689229
  - 0.5285588671600053
  - 0.5294706499033583
  train_label_ranking_average_precision_score:
  - 0.9247576435495893
  - 0.9205024968789006
  - 0.9221375721093547
  - 0.933808893927941
  - 0.9271803053053049
  train_label_ranking_average_precision_score_oob:
  - 0.7992325379070341
  - 0.7976186017478141
  - 0.7986299222473023
  - 0.8007936507936503
  - 0.7993305805805798
  train_matthews_corrcoef_macro:
  - 0.5909640418761349
  - 0.5955733774460623
  - 0.5938819406963917
  - 0.5729017156686497
  - 0.5955131749553305
  train_matthews_corrcoef_macro_oob:
  - 0.1200605558890561
  - 0.12691604737886383
  - 0.1005922774025213
  - 0.12823570638417447
  - 0.14692691956946088
  train_matthews_corrcoef_micro:
  - 0.8364706061299914
  - 0.8432096676944083
  - 0.8415436105053765
  - 0.8212166773285221
  - 0.8421338125537516
  train_matthews_corrcoef_micro_oob:
  - 0.42349756362148705
  - 0.4236667813011013
  - 0.4197080793172684
  - 0.43440893719001233
  - 0.4345267772851875
  train_matthews_corrcoef_samples:
  - 0.8309224570345534
  - 0.8365775658500435
  - 0.833315111814906
  - 0.817276158182402
  - 0.8385140670045707
  train_matthews_corrcoef_samples_oob:
  - 0.4343794676742457
  - 0.42646958944841534
  - 0.4196834573827371
  - 0.437878483083074
  - 0.43666342185850526
  train_matthews_corrcoef_weighted:
  - 0.6196784500265129
  - 0.6246400603074327
  - 0.6216818734419782
  - 0.6009858492312055
  - 0.6237400607624985
  train_matthews_corrcoef_weighted_oob:
  - 0.13379571279366892
  - 0.13950378031713204
  - 0.11982997001081142
  - 0.1395169954283129
  - 0.16216531852611696
  train_ndgc:
  - 0.9440276514638589
  - 0.9428725809677249
  - 0.9419434680304635
  - 0.9517901249362116
  - 0.9503837940808504
  train_ndgc_oob:
  - 0.8628258376753916
  - 0.864175697622398
  - 0.8625892880755838
  - 0.8645132535904739
  - 0.8670305274961734
  train_neg_coverage_error:
  - -2.897091722595078
  - -2.912359550561798
  - -2.930022573363431
  - -2.927437641723356
  - -2.9144144144144146
  train_neg_coverage_error_oob:
  - -3.646532438478747
  - -3.6808988764044943
  - -3.695259593679458
  - -3.693877551020408
  - -3.6576576576576576
  train_neg_hamming_loss_macro:
  - -0.08090976882923191
  - -0.07790262172284644
  - -0.07863054928517682
  - -0.08843537414965986
  - -0.07845345345345346
  train_neg_hamming_loss_macro_oob:
  - -0.27889634601043994
  - -0.2794007490636704
  - -0.281790820165538
  - -0.2755102040816327
  - -0.2747747747747748
  train_neg_hamming_loss_micro:
  - -0.08090976882923191
  - -0.07790262172284644
  - -0.07863054928517682
  - -0.08843537414965986
  - -0.07845345345345345
  train_neg_hamming_loss_micro_oob:
  - -0.27889634601043994
  - -0.2794007490636704
  - -0.281790820165538
  - -0.2755102040816326
  - -0.2747747747747748
  train_neg_hamming_loss_samples:
  - -0.0809097688292319
  - -0.07790262172284644
  - -0.07863054928517682
  - -0.08843537414965986
  - -0.07845345345345345
  train_neg_hamming_loss_samples_oob:
  - -0.27889634601043994
  - -0.27940074906367035
  - -0.281790820165538
  - -0.2755102040816326
  - -0.2747747747747748
  train_neg_hamming_loss_weighted:
  - -0.1073024432656331
  - -0.10548232032793653
  - -0.10452885490409275
  - -0.11316319611250486
  - -0.10495456223442273
  train_neg_hamming_loss_weighted_oob:
  - -0.31702470619266726
  - -0.31898119476638453
  - -0.3179771429922116
  - -0.3117824868976943
  - -0.3112801118468076
  train_neg_label_ranking_loss:
  - -0.056860551826994774
  - -0.058183520599250936
  - -0.05751818409831953
  - -0.05194633408919123
  - -0.05484234234234234
  train_neg_label_ranking_loss_oob:
  - -0.19320780512055677
  - -0.19427590511860177
  - -0.1939741660396288
  - -0.1924666162761401
  - -0.1888388388388388
  train_precision_macro:
  - 0.919090231170768
  - 0.9220973782771535
  - 0.9213694507148231
  - 0.9115646258503401
  - 0.9215465465465466
  train_precision_macro_oob:
  - 0.7211036539895601
  - 0.7205992509363295
  - 0.718209179834462
  - 0.7244897959183674
  - 0.7252252252252253
  train_precision_micro:
  - 0.919090231170768
  - 0.9220973782771535
  - 0.9213694507148231
  - 0.9115646258503401
  - 0.9215465465465466
  train_precision_micro_oob:
  - 0.72110365398956
  - 0.7205992509363296
  - 0.718209179834462
  - 0.7244897959183674
  - 0.7252252252252253
  train_precision_samples:
  - 0.9190902311707682
  - 0.9220973782771537
  - 0.9213694507148233
  - 0.9115646258503401
  - 0.9215465465465464
  train_precision_samples_oob:
  - 0.7211036539895601
  - 0.7205992509363295
  - 0.7182091798344621
  - 0.7244897959183674
  - 0.7252252252252253
  train_precision_weighted:
  - 0.8926975567343669
  - 0.8945176796720634
  - 0.8954711450959072
  - 0.8868368038874951
  - 0.8950454377655772
  train_precision_weighted_oob:
  - 0.6829752938073327
  - 0.6810188052336155
  - 0.6820228570077884
  - 0.6882175131023056
  - 0.6887198881531925
  train_recall_macro:
  - 0.919090231170768
  - 0.9220973782771535
  - 0.9213694507148231
  - 0.9115646258503401
  - 0.9215465465465466
  train_recall_macro_oob:
  - 0.7211036539895601
  - 0.7205992509363295
  - 0.718209179834462
  - 0.7244897959183674
  - 0.7252252252252253
  train_recall_micro:
  - 0.919090231170768
  - 0.9220973782771535
  - 0.9213694507148231
  - 0.9115646258503401
  - 0.9215465465465466
  train_recall_micro_oob:
  - 0.72110365398956
  - 0.7205992509363296
  - 0.718209179834462
  - 0.7244897959183674
  - 0.7252252252252253
  train_recall_samples:
  - 0.9190902311707682
  - 0.9220973782771537
  - 0.9213694507148233
  - 0.9115646258503401
  - 0.9215465465465464
  train_recall_samples_oob:
  - 0.7211036539895601
  - 0.7205992509363295
  - 0.7182091798344621
  - 0.7244897959183674
  - 0.7252252252252253
  train_recall_weighted:
  - 0.8926975567343669
  - 0.8945176796720634
  - 0.8954711450959072
  - 0.8868368038874951
  - 0.8950454377655772
  train_recall_weighted_oob:
  - 0.6829752938073327
  - 0.6810188052336155
  - 0.6820228570077884
  - 0.6882175131023056
  - 0.6887198881531925
  train_roc_auc_macro:
  - 0.9998891433899684
  - 0.9998381598632449
  - 0.9996519640848422
  - 0.9997761175886364
  - 0.9999176138561832
  train_roc_auc_macro_oob:
  - 0.6706839686415602
  - 0.6880069038864156
  - 0.6459748818931748
  - 0.6576572928843155
  - 0.6611477257780717
  train_roc_auc_micro:
  - 0.9635804450909586
  - 0.9647703254512962
  - 0.9633323176080593
  - 0.9626112264322685
  - 0.9651292903041899
  train_roc_auc_micro_oob:
  - 0.8094865231139888
  - 0.8125087016382285
  - 0.8079350074332623
  - 0.8118199113271096
  - 0.8169016189089764
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9998625008046205
  - 0.9998452701982357
  - 0.9996174721686572
  - 0.9997551889014527
  - 0.9999222929314416
  train_roc_auc_weighted_oob:
  - 0.690454229771884
  - 0.6935675143549688
  - 0.6785536141214867
  - 0.6802129092735834
  - 0.6953110784356605
start: 2023-12-21 22:00:09.135255
wrapper: null
