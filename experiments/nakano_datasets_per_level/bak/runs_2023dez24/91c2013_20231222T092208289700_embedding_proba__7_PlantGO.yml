active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzIUAAMzMzMzMLwAAzMzMzMwvAAGZmZmZm9r8AmJmZmZnZvw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:24:10.144312
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__7
  params: {}
hash: 91c2013966843c97fc96e6d647fabee4757ba3fbcc94544a72ed72c5b7d54a41
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/91c2013_20231222T092208289700_embedding_proba__7_PlantGO.yml
results:
  fit_time:
  - 70.03029704093933
  - 71.45598649978638
  - 67.42573475837708
  - 66.27387881278992
  - 65.19179463386536
  score_time:
  - 10.422332763671875
  - 11.48072862625122
  - 10.687664985656738
  - 11.20622444152832
  - 10.732065200805664
  test_average_precision_macro:
  - 0.7564188891179326
  - 0.7947676833090244
  - 0.7605526090604341
  - 0.7268400863033712
  - 0.6670161537749874
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7794109945797896
  - 0.79780996203991
  - 0.7786328146792448
  - 0.75661709290024
  - 0.7690511221269573
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8815828259678526
  - 0.8783500837520938
  - 0.8744556113902847
  - 0.8647892998146806
  - 0.8378948007774538
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8340047792210884
  - 0.8310416472852805
  - 0.8140345322108744
  - 0.7754673514089414
  - 0.798874316970124
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9117647058823529
  - 0.9216917922948076
  - 0.9183417085427136
  - 0.9132825719120136
  - 0.9162414965986395
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9117647058823529
  - 0.9216917922948074
  - 0.9183417085427136
  - 0.9132825719120136
  - 0.9162414965986394
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9117647058823529
  - 0.9216917922948074
  - 0.9183417085427136
  - 0.9132825719120135
  - 0.9162414965986394
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8425770308123249
  - 0.8634601579325196
  - 0.8579389840196242
  - 0.8433579159084379
  - 0.8498507893723527
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8461866184213697
  - 0.860978738073103
  - 0.8558411487213645
  - 0.8490115478453398
  - 0.8531666388388697
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8378378378378378
  - 0.854757281553398
  - 0.8490127758420442
  - 0.8404048267808486
  - 0.8454295802275402
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8402068519715578
  - 0.8568667513391128
  - 0.8509028659782426
  - 0.841914430746918
  - 0.847163041040592
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7362052248015021
  - 0.7654641078530626
  - 0.7572733184204467
  - 0.7380185549775948
  - 0.7468375747436962
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8815828259678526
  - 0.8783500837520936
  - 0.8744556113902848
  - 0.8647892998146806
  - 0.8378948007774536
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.058569317515474194
  - 0.08432933067629667
  - 0.03750977182003297
  - 0.06186285392150622
  - 0.07202601420815524
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.22715893957409292
  - 0.3164218802204432
  - 0.26340575377554637
  - 0.17685878203787953
  - 0.2545395251234548
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0690325717063685
  - 0.1247144814984011
  - 0.09410689812699863
  - 0.049377018920166126
  - 0.07653061224489796
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.14655670994445313
  - 0.208453244208458
  - 0.12159565841186043
  - 0.10123262852944623
  - 0.17260202992410595
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9146407134495901
  - 0.9095737383753211
  - 0.9069373125406599
  - 0.8992755498758684
  - 0.8797315592462782
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.679144385026738
  - -1.4824120603015076
  - -1.4422110552763818
  - -1.5482233502538072
  - -1.7551020408163265
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08823529411764704
  - -0.07830820770519263
  - -0.08165829145728644
  - -0.08671742808798648
  - -0.08375850340136055
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08823529411764706
  - -0.07830820770519263
  - -0.08165829145728644
  - -0.08671742808798646
  - -0.08375850340136054
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08823529411764704
  - -0.07830820770519262
  - -0.08165829145728644
  - -0.08671742808798648
  - -0.08375850340136053
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1574229691876751
  - -0.13653984206748027
  - -0.14206101598037585
  - -0.15664208409156208
  - -0.15014921062764727
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.042820360467419286
  - -0.03757423481041572
  - -0.033782549109182276
  - -0.04201661282879557
  - -0.057861781076066786
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9117647058823529
  - 0.9216917922948076
  - 0.9183417085427136
  - 0.9132825719120136
  - 0.9162414965986395
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9117647058823529
  - 0.9216917922948074
  - 0.9183417085427136
  - 0.9132825719120136
  - 0.9162414965986394
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9117647058823529
  - 0.9216917922948074
  - 0.9183417085427136
  - 0.9132825719120135
  - 0.9162414965986394
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8425770308123249
  - 0.8634601579325196
  - 0.8579389840196242
  - 0.8433579159084379
  - 0.8498507893723527
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9117647058823529
  - 0.9216917922948076
  - 0.9183417085427136
  - 0.9132825719120136
  - 0.9162414965986395
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9117647058823529
  - 0.9216917922948074
  - 0.9183417085427136
  - 0.9132825719120136
  - 0.9162414965986394
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9117647058823529
  - 0.9216917922948074
  - 0.9183417085427136
  - 0.9132825719120135
  - 0.9162414965986394
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8425770308123249
  - 0.8634601579325196
  - 0.8579389840196242
  - 0.8433579159084379
  - 0.8498507893723527
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9522089270779773
  - 0.9701073000132673
  - 0.9683366087104998
  - 0.9654007325610667
  - 0.949930315136279
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9554689329025612
  - 0.9716428352791989
  - 0.9680176424358927
  - 0.9662556112786702
  - 0.9571482101922059
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9571796395325807
  - 0.9624257651895842
  - 0.9662174508908176
  - 0.9579833871712045
  - 0.9421382189239332
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.961645939062437
  - 0.9654527205386093
  - 0.9665132339039025
  - 0.961677427168732
  - 0.960893932669609
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8644146972015568
  - 0.8583299656372744
  - 0.8713745765054028
  - 0.848703370801732
  - 0.89301294190901
  train_average_precision_macro_oob:
  - 0.7973466993847432
  - 0.7826378948699851
  - 0.7693546343896315
  - 0.7672446128984419
  - 0.8181885731452647
  train_average_precision_micro:
  - 0.8941096858514066
  - 0.885943853287161
  - 0.906075146906392
  - 0.9026872444983832
  - 0.9109915332040978
  train_average_precision_micro_oob:
  - 0.8384009784954436
  - 0.8301083439664407
  - 0.8562759446340149
  - 0.8543754408981082
  - 0.8637423022253792
  train_average_precision_samples:
  - 0.917686071478739
  - 0.9240239827210301
  - 0.9323873708661898
  - 0.929770034347499
  - 0.9298425892095968
  train_average_precision_samples_oob:
  - 0.884006581983826
  - 0.8926890396723517
  - 0.9028170944730637
  - 0.9045356389946657
  - 0.8991038444363252
  train_average_precision_weighted:
  - 0.9053267918380484
  - 0.8938404148568424
  - 0.917904821897123
  - 0.9087930828811425
  - 0.9218335425442644
  train_average_precision_weighted_oob:
  - 0.8640584973221649
  - 0.8506725841906382
  - 0.8639439577037096
  - 0.8629735289973357
  - 0.8823619729354256
  train_f1_macro:
  - 0.9318373367045932
  - 0.9313222079589215
  - 0.9320710312366282
  - 0.9316047801963294
  - 0.9313725490196078
  train_f1_macro_oob:
  - 0.9185630004214075
  - 0.9199828840393667
  - 0.918913136499786
  - 0.9176269739650019
  - 0.9197570332480818
  train_f1_micro:
  - 0.9318373367045933
  - 0.9313222079589217
  - 0.9320710312366282
  - 0.9316047801963295
  - 0.9313725490196079
  train_f1_micro_oob:
  - 0.9185630004214075
  - 0.9199828840393667
  - 0.918913136499786
  - 0.9176269739650021
  - 0.9197570332480819
  train_f1_samples:
  - 0.9318373367045932
  - 0.9313222079589217
  - 0.932071031236628
  - 0.9316047801963294
  - 0.9313725490196078
  train_f1_samples_oob:
  - 0.9185630004214074
  - 0.9199828840393666
  - 0.9189131364997859
  - 0.9176269739650019
  - 0.9197570332480817
  train_f1_weighted:
  - 0.88970294511479
  - 0.8878777981177508
  - 0.8904294605430464
  - 0.8844593496490646
  - 0.8839624043954577
  train_f1_weighted_oob:
  - 0.8578146156090336
  - 0.8633219648920252
  - 0.86208317870158
  - 0.8541244230182128
  - 0.8603392463282699
  train_jaccard_macro:
  - 0.8760441061473747
  - 0.8751470012120083
  - 0.876262618702962
  - 0.8760804295823567
  - 0.8757232822878714
  train_jaccard_macro_oob:
  - 0.856177417782571
  - 0.857955102772967
  - 0.8563652051467442
  - 0.854948332973802
  - 0.8578852157331293
  train_jaccard_micro:
  - 0.8723740013808068
  - 0.8714714714714715
  - 0.8727837323449865
  - 0.8719664436232897
  - 0.8715596330275229
  train_jaccard_micro_oob:
  - 0.8493911349245007
  - 0.8518225039619651
  - 0.8499901048881853
  - 0.8477917981072555
  - 0.8514353358981948
  train_jaccard_samples:
  - 0.8754393520512357
  - 0.8747450239106207
  - 0.8762403193725402
  - 0.8751614582600498
  - 0.874584750288075
  train_jaccard_samples_oob:
  - 0.851238521276448
  - 0.8542905105164412
  - 0.8522591657379847
  - 0.8498515568938104
  - 0.8536690930552822
  train_jaccard_weighted:
  - 0.8044643563175253
  - 0.8017515799538799
  - 0.8054723431916624
  - 0.7973535552093592
  - 0.796888265004064
  train_jaccard_weighted_oob:
  - 0.757253669805406
  - 0.7647820172985725
  - 0.7628613760397596
  - 0.7524493574940696
  - 0.7610304716371238
  train_label_ranking_average_precision_score:
  - 0.9176860714787393
  - 0.9240239827210304
  - 0.9323873708661902
  - 0.9297700343474995
  - 0.9298425892095973
  train_label_ranking_average_precision_score_oob:
  - 0.8840065819838263
  - 0.892689039672352
  - 0.902817094473064
  - 0.9045356389946664
  - 0.8991038444363258
  train_matthews_corrcoef_macro:
  - 0.16188188100538842
  - 0.16866919828859148
  - 0.16971394948663807
  - 0.20092152955974743
  - 0.174370462726674
  train_matthews_corrcoef_macro_oob:
  - 0.07438968619629391
  - 0.10192235590150922
  - 0.055341135291934664
  - 0.08252320449401439
  - 0.09695114030815037
  train_matthews_corrcoef_micro:
  - 0.4667394759186798
  - 0.4724490695715702
  - 0.4798564735413266
  - 0.4719189483931277
  - 0.4683449808449315
  train_matthews_corrcoef_micro_oob:
  - 0.2788883114436692
  - 0.3238066310016441
  - 0.30532510881282304
  - 0.2769552563662738
  - 0.3129407735484424
  train_matthews_corrcoef_samples:
  - 0.24775839402182057
  - 0.2554840678383049
  - 0.2652773934964356
  - 0.25399456508568596
  - 0.24794465669927504
  train_matthews_corrcoef_samples_oob:
  - 0.09447189978163428
  - 0.12951714283745958
  - 0.11273194071653635
  - 0.09556512629495985
  - 0.11625203441060218
  train_matthews_corrcoef_weighted:
  - 0.37102528169722304
  - 0.38006926011723935
  - 0.38579146249886326
  - 0.39129913807941485
  - 0.37953305684509675
  train_matthews_corrcoef_weighted_oob:
  - 0.18814981617422186
  - 0.2292553488022532
  - 0.16360042806977143
  - 0.1981908131628137
  - 0.23138172074827665
  train_ndgc:
  - 0.9391410022694805
  - 0.9440956720237766
  - 0.9506532861428753
  - 0.9487672619278831
  - 0.9482751174088735
  train_ndgc_oob:
  - 0.913875106573304
  - 0.9207325599015695
  - 0.9285614092151936
  - 0.9301124486164006
  - 0.9255381387184088
  train_neg_coverage_error:
  - -1.3514538558786346
  - -1.3761232349165597
  - -1.355584082156611
  - -1.3585147247119078
  - -1.326086956521739
  train_neg_coverage_error_oob:
  - -1.4778761061946903
  - -1.4929396662387677
  - -1.478818998716303
  - -1.4737516005121638
  - -1.4565217391304348
  train_neg_hamming_loss_macro:
  - -0.06816266329540666
  - -0.06867779204107831
  - -0.06792896876337186
  - -0.06839521980367051
  - -0.06862745098039216
  train_neg_hamming_loss_macro_oob:
  - -0.0814369995785925
  - -0.0800171159606333
  - -0.08108686350021395
  - -0.08237302603499787
  - -0.08024296675191815
  train_neg_hamming_loss_micro:
  - -0.06816266329540666
  - -0.06867779204107831
  - -0.06792896876337184
  - -0.06839521980367051
  - -0.06862745098039216
  train_neg_hamming_loss_micro_oob:
  - -0.0814369995785925
  - -0.0800171159606333
  - -0.08108686350021395
  - -0.08237302603499787
  - -0.08024296675191815
  train_neg_hamming_loss_samples:
  - -0.06816266329540666
  - -0.06867779204107831
  - -0.06792896876337184
  - -0.0683952198036705
  - -0.06862745098039216
  train_neg_hamming_loss_samples_oob:
  - -0.0814369995785925
  - -0.08001711596063328
  - -0.08108686350021395
  - -0.08237302603499788
  - -0.08024296675191815
  train_neg_hamming_loss_weighted:
  - -0.1102970548852101
  - -0.11212220188224926
  - -0.10957053945695357
  - -0.11554065035093554
  - -0.1160375956045423
  train_neg_hamming_loss_weighted_oob:
  - -0.14218538439096642
  - -0.13667803510797485
  - -0.13791682129841998
  - -0.14587557698178721
  - -0.1396607536717302
  train_neg_label_ranking_loss:
  - -0.024514423629467878
  - -0.02439715944208884
  - -0.021752181636648906
  - -0.022613674086145275
  - -0.02107089651846685
  train_neg_label_ranking_loss_oob:
  - -0.03601310194230548
  - -0.034559328846876985
  - -0.03225126748875145
  - -0.03237065490586618
  - -0.03221300817208746
  train_precision_macro:
  - 0.9318373367045932
  - 0.9313222079589215
  - 0.9320710312366282
  - 0.9316047801963294
  - 0.9313725490196078
  train_precision_macro_oob:
  - 0.9185630004214075
  - 0.9199828840393667
  - 0.918913136499786
  - 0.9176269739650019
  - 0.9197570332480818
  train_precision_micro:
  - 0.9318373367045933
  - 0.9313222079589217
  - 0.9320710312366282
  - 0.9316047801963295
  - 0.9313725490196079
  train_precision_micro_oob:
  - 0.9185630004214075
  - 0.9199828840393667
  - 0.918913136499786
  - 0.9176269739650021
  - 0.9197570332480819
  train_precision_samples:
  - 0.9318373367045932
  - 0.9313222079589217
  - 0.932071031236628
  - 0.9316047801963294
  - 0.9313725490196078
  train_precision_samples_oob:
  - 0.9185630004214074
  - 0.9199828840393666
  - 0.9189131364997859
  - 0.9176269739650019
  - 0.9197570332480817
  train_precision_weighted:
  - 0.88970294511479
  - 0.8878777981177508
  - 0.8904294605430464
  - 0.8844593496490646
  - 0.8839624043954577
  train_precision_weighted_oob:
  - 0.8578146156090336
  - 0.8633219648920252
  - 0.86208317870158
  - 0.8541244230182128
  - 0.8603392463282699
  train_recall_macro:
  - 0.9318373367045932
  - 0.9313222079589215
  - 0.9320710312366282
  - 0.9316047801963294
  - 0.9313725490196078
  train_recall_macro_oob:
  - 0.9185630004214075
  - 0.9199828840393667
  - 0.918913136499786
  - 0.9176269739650019
  - 0.9197570332480818
  train_recall_micro:
  - 0.9318373367045933
  - 0.9313222079589217
  - 0.9320710312366282
  - 0.9316047801963295
  - 0.9313725490196079
  train_recall_micro_oob:
  - 0.9185630004214075
  - 0.9199828840393667
  - 0.918913136499786
  - 0.9176269739650021
  - 0.9197570332480819
  train_recall_samples:
  - 0.9318373367045932
  - 0.9313222079589217
  - 0.932071031236628
  - 0.9316047801963294
  - 0.9313725490196078
  train_recall_samples_oob:
  - 0.9185630004214074
  - 0.9199828840393666
  - 0.9189131364997859
  - 0.9176269739650019
  - 0.9197570332480817
  train_recall_weighted:
  - 0.88970294511479
  - 0.8878777981177508
  - 0.8904294605430464
  - 0.8844593496490646
  - 0.8839624043954577
  train_recall_weighted_oob:
  - 0.8578146156090336
  - 0.8633219648920252
  - 0.86208317870158
  - 0.8541244230182128
  - 0.8603392463282699
  train_roc_auc_macro:
  - 0.9862714078036396
  - 0.9768316267311326
  - 0.9796970434243827
  - 0.9778263329997382
  - 0.9853086644623218
  train_roc_auc_macro_oob:
  - 0.9754159610145061
  - 0.9710802779074915
  - 0.9700493690656398
  - 0.9701152728050357
  - 0.9769778075885235
  train_roc_auc_micro:
  - 0.9834503603876708
  - 0.9795767870302651
  - 0.981005523467072
  - 0.9807175212835366
  - 0.9847690916037819
  train_roc_auc_micro_oob:
  - 0.9726448889822582
  - 0.9711192777766567
  - 0.9719320821425546
  - 0.9731305390707331
  - 0.976003682190003
  train_roc_auc_samples:
  - 0.975485576370532
  - 0.9756028405579111
  - 0.9782478183633512
  - 0.9773863259138547
  - 0.9789291034815332
  train_roc_auc_samples_oob:
  - 0.9639868980576946
  - 0.9654406711531232
  - 0.9677487325112485
  - 0.9676293450941338
  - 0.9677869918279124
  train_roc_auc_weighted:
  - 0.9823446805838825
  - 0.9743596147148885
  - 0.980771946730008
  - 0.9802263907314629
  - 0.9821726752075021
  train_roc_auc_weighted_oob:
  - 0.9736140323012387
  - 0.9690134734602874
  - 0.9740315567393867
  - 0.9737063913606645
  - 0.9756695736246385
start: 2023-12-22 09:22:08.289700
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
