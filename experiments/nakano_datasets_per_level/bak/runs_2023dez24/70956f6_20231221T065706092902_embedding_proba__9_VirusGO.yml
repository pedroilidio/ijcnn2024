active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMBAMzMzMzMDQKCZmZmZmRFAADMzMzMz47/AzMzMzMwMwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:58:46.454487
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__9
  params: {}
hash: 70956f6e7094820e93b91d95794de942ab3d8d5c55c594c7115c61d213213b7d
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/70956f6_20231221T065706092902_embedding_proba__9_VirusGO.yml
results:
  fit_time:
  - 84.75061106681824
  - 84.94499516487122
  - 83.74696445465088
  - 85.06637406349182
  - 84.33431506156921
  score_time:
  - 5.748517990112305
  - 5.577508926391602
  - 5.58878493309021
  - 5.678309202194214
  - 5.598024368286133
  test_average_precision_macro:
  - 0.9638143755281087
  - 0.8984379142899903
  - 0.9771409011090278
  - 0.9578757061820257
  - 0.9042077034220721
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9756029908284354
  - 0.9207831439268069
  - 0.9403939093222113
  - 0.9391590267368767
  - 0.9062845413725713
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9848484848484848
  - 0.9572649572649572
  - 0.9504504504504504
  - 0.9424603174603173
  - 0.9296296296296297
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9727599614351058
  - 0.925134773723009
  - 0.9628221873263477
  - 0.9656697130176459
  - 0.9151579428402761
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9469696969696969
  - 0.9444444444444446
  - 0.9234234234234234
  - 0.9404761904761906
  - 0.9370370370370371
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.946969696969697
  - 0.9444444444444444
  - 0.9234234234234234
  - 0.9404761904761905
  - 0.937037037037037
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9469696969696971
  - 0.9444444444444445
  - 0.9234234234234233
  - 0.9404761904761905
  - 0.9370370370370371
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9438502673796793
  - 0.9251282051282051
  - 0.9037162162162162
  - 0.9299719887955182
  - 0.917948717948718
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9006835234864837
  - 0.8967797045080085
  - 0.8607031180201913
  - 0.8891513721645167
  - 0.8827181936604429
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8992805755395683
  - 0.8947368421052632
  - 0.8577405857740585
  - 0.8876404494382022
  - 0.8815331010452961
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9123376623376622
  - 0.9120879120879121
  - 0.8835263835263835
  - 0.9013605442176872
  - 0.9010582010582011
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.894457443785408
  - 0.8619393079977311
  - 0.8259292452127819
  - 0.8703473202253906
  - 0.8495707939476935
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9848484848484848
  - 0.9572649572649572
  - 0.9504504504504504
  - 0.9424603174603173
  - 0.9296296296296295
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.575246222689004
  - 0.7857349257433928
  - 0.6391995463585172
  - 0.5702484098589004
  - 0.6336520507078712
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8250735163205192
  - 0.8294504357385548
  - 0.7639266783466803
  - 0.8083193416177561
  - 0.7935304270232005
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.741646716637129
  - 0.8257557276227584
  - 0.7531057044342528
  - 0.7657685157182947
  - 0.793573510169285
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7657113209926985
  - 0.7969895136838416
  - 0.6987960603637434
  - 0.7435994731060517
  - 0.7527607699211226
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9897875123345373
  - 0.9680777619297979
  - 0.965735968621912
  - 0.9606042388518145
  - 0.949125657587225
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2045454545454546
  - -1.4102564102564104
  - -1.4324324324324325
  - -1.380952380952381
  - -1.3777777777777778
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05303030303030303
  - -0.05555555555555555
  - -0.07657657657657659
  - -0.059523809523809514
  - -0.06296296296296296
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05303030303030303
  - -0.05555555555555555
  - -0.07657657657657657
  - -0.05952380952380952
  - -0.06296296296296296
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.053030303030303025
  - -0.05555555555555555
  - -0.07657657657657657
  - -0.05952380952380952
  - -0.06296296296296296
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05614973262032085
  - -0.07487179487179488
  - -0.09628378378378379
  - -0.0700280112044818
  - -0.08205128205128205
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.007386363636363636
  - -0.026923076923076925
  - -0.022972972972972974
  - -0.029166666666666664
  - -0.04080246913580247
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9469696969696969
  - 0.9444444444444446
  - 0.9234234234234234
  - 0.9404761904761906
  - 0.9370370370370371
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.946969696969697
  - 0.9444444444444444
  - 0.9234234234234234
  - 0.9404761904761905
  - 0.937037037037037
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9469696969696971
  - 0.9444444444444445
  - 0.9234234234234233
  - 0.9404761904761905
  - 0.9370370370370371
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9438502673796793
  - 0.9251282051282051
  - 0.9037162162162162
  - 0.9299719887955182
  - 0.917948717948718
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9469696969696969
  - 0.9444444444444446
  - 0.9234234234234234
  - 0.9404761904761906
  - 0.9370370370370371
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.946969696969697
  - 0.9444444444444444
  - 0.9234234234234234
  - 0.9404761904761905
  - 0.937037037037037
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9469696969696971
  - 0.9444444444444445
  - 0.9234234234234233
  - 0.9404761904761905
  - 0.9370370370370371
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9438502673796793
  - 0.9251282051282051
  - 0.9037162162162162
  - 0.9299719887955182
  - 0.917948717948718
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9841925730406124
  - 0.9587980646804177
  - 0.98681082648113
  - 0.9898877708978328
  - 0.9614237502583828
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9883089385989138
  - 0.9693478260869565
  - 0.9839559386973181
  - 0.9827821675934055
  - 0.9689484827099506
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9926136363636363
  - 0.9730769230769232
  - 0.977027027027027
  - 0.9708333333333334
  - 0.9591975308641976
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9839813418244789
  - 0.9642337662337662
  - 0.9757392473118278
  - 0.9856449948400412
  - 0.9505073594451
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9818674187590114
  - 0.9886599247597267
  - 0.9828407708920524
  - 0.9880713492707359
  - 0.9864793695781441
  train_average_precision_macro_oob:
  - 0.9227953950628333
  - 0.9454281916652619
  - 0.9155980008701775
  - 0.948519128694164
  - 0.9534380798698837
  train_average_precision_micro:
  - 0.9704736036943332
  - 0.9782008650852321
  - 0.9746656272935715
  - 0.9796002071433012
  - 0.9801190268934469
  train_average_precision_micro_oob:
  - 0.9302414437942891
  - 0.9410969889307347
  - 0.9375417321784749
  - 0.9466392771203884
  - 0.9547346343036102
  train_average_precision_samples:
  - 0.9723926380368099
  - 0.9811507936507935
  - 0.9735294117647059
  - 0.9808080808080807
  - 0.9861111111111112
  train_average_precision_samples_oob:
  - 0.9445126107702796
  - 0.9446428571428571
  - 0.9631372549019609
  - 0.9552861952861954
  - 0.9688271604938271
  train_average_precision_weighted:
  - 0.9816840494563134
  - 0.9875504834723291
  - 0.9850977524828894
  - 0.9886527333452947
  - 0.9898776569291442
  train_average_precision_weighted_oob:
  - 0.9359153796770284
  - 0.951198945882521
  - 0.9376660442792542
  - 0.95732370786387
  - 0.9670148816135488
  train_f1_macro:
  - 0.9509202453987728
  - 0.9573412698412699
  - 0.9607843137254903
  - 0.9545454545454546
  - 0.9578189300411523
  train_f1_macro_oob:
  - 0.9335378323108384
  - 0.927579365079365
  - 0.9382352941176472
  - 0.9383838383838383
  - 0.9351851851851851
  train_f1_micro:
  - 0.950920245398773
  - 0.9573412698412699
  - 0.9607843137254902
  - 0.9545454545454546
  - 0.9578189300411523
  train_f1_micro_oob:
  - 0.9335378323108384
  - 0.9275793650793651
  - 0.9382352941176471
  - 0.9383838383838384
  - 0.9351851851851852
  train_f1_samples:
  - 0.950920245398773
  - 0.9573412698412698
  - 0.9607843137254901
  - 0.9545454545454546
  - 0.9578189300411524
  train_f1_samples_oob:
  - 0.9335378323108385
  - 0.9275793650793651
  - 0.9382352941176471
  - 0.9383838383838384
  - 0.9351851851851852
  train_f1_weighted:
  - 0.9440832646583037
  - 0.9443069306930693
  - 0.9538927335640138
  - 0.9473239861299564
  - 0.9550617283950618
  train_f1_weighted_oob:
  - 0.9163080304001465
  - 0.9181694955209807
  - 0.9252595155709343
  - 0.9323684607266697
  - 0.9260802469135803
  train_jaccard_macro:
  - 0.9069172434867013
  - 0.9192991919592871
  - 0.9252752058312903
  - 0.913488293956242
  - 0.919311517251503
  train_jaccard_macro_oob:
  - 0.8770038047638287
  - 0.8655069663252197
  - 0.8844810169043598
  - 0.8845411423845378
  - 0.8793682410093506
  train_jaccard_micro:
  - 0.9064327485380117
  - 0.9181731684110371
  - 0.9245283018867925
  - 0.9130434782608695
  - 0.9190523198420533
  train_jaccard_micro_oob:
  - 0.87535953978907
  - 0.8649398704902868
  - 0.8836565096952909
  - 0.8839200761179828
  - 0.8782608695652174
  train_jaccard_samples:
  - 0.9205375401694419
  - 0.9309807256235829
  - 0.9365546218487395
  - 0.9266955266955268
  - 0.9310699588477367
  train_jaccard_samples_oob:
  - 0.8942448144902132
  - 0.885062358276644
  - 0.9007002801120448
  - 0.9010101010101011
  - 0.8956496178718402
  train_jaccard_weighted:
  - 0.8945327397649174
  - 0.895085505028087
  - 0.9121806567693626
  - 0.9003087110853101
  - 0.9142280070489167
  train_jaccard_weighted_oob:
  - 0.8474516753620187
  - 0.8490485927550471
  - 0.8617161987358859
  - 0.8736532953445832
  - 0.8634244646015528
  train_label_ranking_average_precision_score:
  - 0.9723926380368099
  - 0.9811507936507935
  - 0.9735294117647058
  - 0.9808080808080807
  - 0.9861111111111112
  train_label_ranking_average_precision_score_oob:
  - 0.9445126107702793
  - 0.9446428571428571
  - 0.9631372549019606
  - 0.9552861952861952
  - 0.9688271604938271
  train_matthews_corrcoef_macro:
  - 0.6586558991037799
  - 0.8279290175559884
  - 0.8270788468888585
  - 0.6776087875679178
  - 0.6842883912002486
  train_matthews_corrcoef_macro_oob:
  - 0.600057252884069
  - 0.5274687091165188
  - 0.6088604959244576
  - 0.5690258711487967
  - 0.5693791351748655
  train_matthews_corrcoef_micro:
  - 0.845235948193718
  - 0.8632194011080873
  - 0.8743842851228499
  - 0.8555855245941473
  - 0.8676870513461178
  train_matthews_corrcoef_micro_oob:
  - 0.7883297557054961
  - 0.7621829339143208
  - 0.7988303658835713
  - 0.8017676377259741
  - 0.7932304167302838
  train_matthews_corrcoef_samples:
  - 0.8323534287682535
  - 0.8517951847855443
  - 0.8592875041001368
  - 0.8461133201524724
  - 0.8526229974763877
  train_matthews_corrcoef_samples_oob:
  - 0.7725384165020024
  - 0.7076910701684708
  - 0.7623536549495346
  - 0.7633125646399433
  - 0.7496620769360567
  train_matthews_corrcoef_weighted:
  - 0.8145791312419978
  - 0.8422052946752688
  - 0.8585141510256609
  - 0.8261655330491758
  - 0.8426838259064288
  train_matthews_corrcoef_weighted_oob:
  - 0.7450825689308379
  - 0.7119969450968001
  - 0.7584490562335863
  - 0.7575691464906835
  - 0.7486605630413635
  train_ndgc:
  - 0.9802630759615362
  - 0.9871043566931549
  - 0.9810757728337082
  - 0.986255944478853
  - 0.9899691771599282
  train_ndgc_oob:
  - 0.9594811380253733
  - 0.9602845017200194
  - 0.973647832565803
  - 0.9678970669485631
  - 0.9773841300256074
  train_neg_coverage_error:
  - -1.312883435582822
  - -1.255952380952381
  - -1.276470588235294
  - -1.2727272727272727
  - -1.271604938271605
  train_neg_coverage_error_oob:
  - -1.4171779141104295
  - -1.369047619047619
  - -1.3352941176470587
  - -1.3575757575757577
  - -1.3209876543209877
  train_neg_hamming_loss_macro:
  - -0.049079754601226995
  - -0.04265873015873015
  - -0.039215686274509796
  - -0.04545454545454545
  - -0.04218106995884774
  train_neg_hamming_loss_macro_oob:
  - -0.06646216768916155
  - -0.07242063492063493
  - -0.061764705882352944
  - -0.061616161616161624
  - -0.06481481481481481
  train_neg_hamming_loss_micro:
  - -0.049079754601226995
  - -0.04265873015873016
  - -0.0392156862745098
  - -0.045454545454545456
  - -0.04218106995884774
  train_neg_hamming_loss_micro_oob:
  - -0.06646216768916155
  - -0.07242063492063493
  - -0.061764705882352944
  - -0.06161616161616162
  - -0.06481481481481481
  train_neg_hamming_loss_samples:
  - -0.04907975460122699
  - -0.04265873015873015
  - -0.0392156862745098
  - -0.045454545454545456
  - -0.04218106995884773
  train_neg_hamming_loss_samples_oob:
  - -0.06646216768916155
  - -0.07242063492063491
  - -0.061764705882352944
  - -0.06161616161616161
  - -0.06481481481481481
  train_neg_hamming_loss_weighted:
  - -0.05591673534169643
  - -0.055693069306930694
  - -0.04610726643598616
  - -0.05267601387004371
  - -0.04493827160493827
  train_neg_hamming_loss_weighted_oob:
  - -0.08369196959985349
  - -0.08183050447901931
  - -0.07474048442906574
  - -0.06763153927333032
  - -0.07391975308641975
  train_neg_label_ranking_loss:
  - -0.014570552147239263
  - -0.008928571428571428
  - -0.013970588235294118
  - -0.01
  - -0.007253086419753087
  train_neg_label_ranking_loss_oob:
  - -0.03640081799591002
  - -0.031101190476190473
  - -0.025147058823529415
  - -0.026414141414141414
  - -0.016666666666666666
  train_precision_macro:
  - 0.9509202453987728
  - 0.9573412698412699
  - 0.9607843137254903
  - 0.9545454545454546
  - 0.9578189300411523
  train_precision_macro_oob:
  - 0.9335378323108384
  - 0.927579365079365
  - 0.9382352941176472
  - 0.9383838383838383
  - 0.9351851851851851
  train_precision_micro:
  - 0.950920245398773
  - 0.9573412698412699
  - 0.9607843137254902
  - 0.9545454545454546
  - 0.9578189300411523
  train_precision_micro_oob:
  - 0.9335378323108384
  - 0.9275793650793651
  - 0.9382352941176471
  - 0.9383838383838384
  - 0.9351851851851852
  train_precision_samples:
  - 0.950920245398773
  - 0.9573412698412698
  - 0.9607843137254901
  - 0.9545454545454546
  - 0.9578189300411524
  train_precision_samples_oob:
  - 0.9335378323108385
  - 0.9275793650793651
  - 0.9382352941176471
  - 0.9383838383838384
  - 0.9351851851851852
  train_precision_weighted:
  - 0.9440832646583037
  - 0.9443069306930693
  - 0.9538927335640138
  - 0.9473239861299564
  - 0.9550617283950618
  train_precision_weighted_oob:
  - 0.9163080304001465
  - 0.9181694955209807
  - 0.9252595155709343
  - 0.9323684607266697
  - 0.9260802469135803
  train_recall_macro:
  - 0.9509202453987728
  - 0.9573412698412699
  - 0.9607843137254903
  - 0.9545454545454546
  - 0.9578189300411523
  train_recall_macro_oob:
  - 0.9335378323108384
  - 0.927579365079365
  - 0.9382352941176472
  - 0.9383838383838383
  - 0.9351851851851851
  train_recall_micro:
  - 0.950920245398773
  - 0.9573412698412699
  - 0.9607843137254902
  - 0.9545454545454546
  - 0.9578189300411523
  train_recall_micro_oob:
  - 0.9335378323108384
  - 0.9275793650793651
  - 0.9382352941176471
  - 0.9383838383838384
  - 0.9351851851851852
  train_recall_samples:
  - 0.950920245398773
  - 0.9573412698412698
  - 0.9607843137254901
  - 0.9545454545454546
  - 0.9578189300411524
  train_recall_samples_oob:
  - 0.9335378323108385
  - 0.9275793650793651
  - 0.9382352941176471
  - 0.9383838383838384
  - 0.9351851851851852
  train_recall_weighted:
  - 0.9440832646583037
  - 0.9443069306930693
  - 0.9538927335640138
  - 0.9473239861299564
  - 0.9550617283950618
  train_recall_weighted_oob:
  - 0.9163080304001465
  - 0.9181694955209807
  - 0.9252595155709343
  - 0.9323684607266697
  - 0.9260802469135803
  train_roc_auc_macro:
  - 0.993133916838221
  - 0.996417304057061
  - 0.9945234146780427
  - 0.9959777623318432
  - 0.9964891746523973
  train_roc_auc_macro_oob:
  - 0.9733530138677781
  - 0.9798781247957614
  - 0.9761398924242063
  - 0.9818902522694124
  - 0.9824939925488761
  train_roc_auc_micro:
  - 0.9916569021046633
  - 0.9944537257695993
  - 0.9928753364090734
  - 0.9944384541172464
  - 0.9941159326424871
  train_roc_auc_micro_oob:
  - 0.9762384986265583
  - 0.9814141463774169
  - 0.9774906286043828
  - 0.9824136604682545
  - 0.9840738341968912
  train_roc_auc_samples:
  - 0.9854294478527608
  - 0.9910714285714286
  - 0.9860294117647059
  - 0.9900000000000001
  - 0.9927469135802468
  train_roc_auc_samples_oob:
  - 0.96359918200409
  - 0.9688988095238096
  - 0.9748529411764707
  - 0.9735858585858584
  - 0.9833333333333334
  train_roc_auc_weighted:
  - 0.9899479778415019
  - 0.9940901360420632
  - 0.9928890097791482
  - 0.9943574241861673
  - 0.9957458616013795
  train_roc_auc_weighted_oob:
  - 0.9699490519188517
  - 0.9756321785383781
  - 0.9757482223658694
  - 0.9785975052617361
  - 0.9845355436334592
start: 2023-12-21 06:57:06.092902
wrapper: null
