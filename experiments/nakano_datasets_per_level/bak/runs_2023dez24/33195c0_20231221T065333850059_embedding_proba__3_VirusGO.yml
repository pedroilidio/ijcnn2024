active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMCgmZmZmZkRQICZmZmZmfm/ADMzMzMz478AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:53:47.548692
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__3
  params: {}
hash: 33195c0bccbaadf7d2956c7537ff9531c32f0ba6db81e9673787f7de79ea8daa
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/33195c0_20231221T065333850059_embedding_proba__3_VirusGO.yml
results:
  fit_time:
  - 6.3957679271698
  - 6.522382974624634
  - 6.307910680770874
  - 6.295760154724121
  - 6.527403116226196
  score_time:
  - 2.206087112426758
  - 2.212846040725708
  - 2.19313645362854
  - 2.3122458457946777
  - 2.26776123046875
  test_average_precision_macro:
  - 0.9299900591206819
  - 0.9743904808237352
  - 0.9029382341171762
  - 0.9476104070206866
  - 0.9302728336938436
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8979785406439527
  - 0.9474447893046416
  - 0.9433281600159404
  - 0.9192143947276149
  - 0.9329080913620423
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9223484848484848
  - 0.9549549549549549
  - 0.9775193798449612
  - 0.9444444444444445
  - 0.9500000000000001
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9302789269553976
  - 0.9694232475470865
  - 0.9299109387344682
  - 0.9497092597170393
  - 0.950442884446486
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9242424242424243
  - 0.9279279279279279
  - 0.9457364341085271
  - 0.9246031746031745
  - 0.9552845528455284
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9242424242424242
  - 0.9279279279279279
  - 0.9457364341085271
  - 0.9246031746031746
  - 0.9552845528455285
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9242424242424243
  - 0.9279279279279278
  - 0.9457364341085273
  - 0.9246031746031745
  - 0.9552845528455286
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9045454545454544
  - 0.9183783783783784
  - 0.9382826475849732
  - 0.9014939309056956
  - 0.9417620706819313
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8609661835748792
  - 0.867479674796748
  - 0.8975571315996849
  - 0.8623664087468059
  - 0.9156011946709621
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8591549295774648
  - 0.865546218487395
  - 0.8970588235294118
  - 0.8597785977859779
  - 0.914396887159533
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8809523809523809
  - 0.8880308880308881
  - 0.9119601328903653
  - 0.8775510204081632
  - 0.9314750290360047
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8275304347826088
  - 0.8493902439024389
  - 0.8845244589925441
  - 0.822590450173716
  - 0.890941758763306
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9223484848484849
  - 0.9549549549549549
  - 0.9775193798449612
  - 0.9444444444444444
  - 0.9500000000000001
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5024014140884338
  - 0.6456748422093437
  - 0.6535504475777493
  - 0.4863545897326694
  - 0.7143469455481989
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7381589970384614
  - 0.7856153477638506
  - 0.8254409752245697
  - 0.7569746464527964
  - 0.8561305828169652
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7132077006837316
  - 0.7480991656090172
  - 0.7747653735829617
  - 0.7192736013254366
  - 0.8503636844894475
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6679379796622701
  - 0.7285611600674479
  - 0.7950952334768798
  - 0.6858418018807569
  - 0.8196537844787415
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9449222311917079
  - 0.9679056770233124
  - 0.9838738045670401
  - 0.9598216678538705
  - 0.9640470153589147
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3636363636363635
  - -1.4594594594594594
  - -1.3255813953488371
  - -1.3571428571428572
  - -1.3902439024390243
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07575757575757576
  - -0.07207207207207207
  - -0.054263565891472874
  - -0.07539682539682539
  - -0.044715447154471545
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07575757575757576
  - -0.07207207207207207
  - -0.05426356589147287
  - -0.07539682539682539
  - -0.044715447154471545
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07575757575757575
  - -0.07207207207207209
  - -0.05426356589147286
  - -0.07539682539682539
  - -0.04471544715447154
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09545454545454543
  - -0.08162162162162163
  - -0.061717352415026835
  - -0.09850606909430439
  - -0.05823792931806869
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04261363636363636
  - -0.019594594594594596
  - -0.021511627906976746
  - -0.026785714285714284
  - -0.03536585365853658
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9242424242424243
  - 0.9279279279279279
  - 0.9457364341085271
  - 0.9246031746031745
  - 0.9552845528455284
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9242424242424242
  - 0.9279279279279279
  - 0.9457364341085271
  - 0.9246031746031746
  - 0.9552845528455285
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9242424242424243
  - 0.9279279279279278
  - 0.9457364341085273
  - 0.9246031746031745
  - 0.9552845528455286
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9045454545454544
  - 0.9183783783783784
  - 0.9382826475849732
  - 0.9014939309056956
  - 0.9417620706819313
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9242424242424243
  - 0.9279279279279279
  - 0.9457364341085271
  - 0.9246031746031745
  - 0.9552845528455284
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9242424242424242
  - 0.9279279279279279
  - 0.9457364341085271
  - 0.9246031746031746
  - 0.9552845528455285
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9242424242424243
  - 0.9279279279279278
  - 0.9457364341085273
  - 0.9246031746031745
  - 0.9552845528455286
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9045454545454544
  - 0.9183783783783784
  - 0.9382826475849732
  - 0.9014939309056956
  - 0.9417620706819313
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9664778265107213
  - 0.9896316102198455
  - 0.9670269817328642
  - 0.983048527403164
  - 0.9724189630807277
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9648598130841122
  - 0.9844186046511629
  - 0.9775952203136669
  - 0.9791239879036192
  - 0.9718222314306434
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9573863636363636
  - 0.9804054054054053
  - 0.9784883720930233
  - 0.9732142857142857
  - 0.9646341463414634
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9546695906432748
  - 0.9827878787878788
  - 0.9679076265614727
  - 0.9747520762691041
  - 0.9770031255745542
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9786968910759598
  - 0.9808932148977304
  - 0.9799419621102582
  - 0.9832499332270269
  - 0.9896164253458563
  train_average_precision_macro_oob:
  - 0.9231429882811555
  - 0.9274286110284876
  - 0.9418929015578087
  - 0.9434855384672183
  - 0.9347765132801448
  train_average_precision_micro:
  - 0.9656881236825943
  - 0.9746143663111929
  - 0.9679695445177164
  - 0.9739676014011049
  - 0.9728873191162957
  train_average_precision_micro_oob:
  - 0.9238174595033942
  - 0.9332653280046437
  - 0.9287832558105246
  - 0.9434948655536896
  - 0.9314180760111604
  train_average_precision_samples:
  - 0.9775051124744377
  - 0.978921568627451
  - 0.9745934959349593
  - 0.9808080808080807
  - 0.9784136546184738
  train_average_precision_samples_oob:
  - 0.9566802999318337
  - 0.9534640522875818
  - 0.9339430894308944
  - 0.9535353535353535
  - 0.9522088353413655
  train_average_precision_weighted:
  - 0.980725410131536
  - 0.9832674121952881
  - 0.9831316508643373
  - 0.9853160819934408
  - 0.9868578360189756
  train_average_precision_weighted_oob:
  - 0.9353801152683724
  - 0.9419859201209408
  - 0.9503701353423463
  - 0.9557940130026127
  - 0.9474457038637079
  train_f1_macro:
  - 0.9529652351738241
  - 0.9578431372549021
  - 0.9461382113821138
  - 0.9525252525252524
  - 0.9497991967871485
  train_f1_macro_oob:
  - 0.9447852760736195
  - 0.9362745098039215
  - 0.9308943089430893
  - 0.9393939393939393
  - 0.9337349397590361
  train_f1_micro:
  - 0.9529652351738241
  - 0.957843137254902
  - 0.9461382113821138
  - 0.9525252525252526
  - 0.9497991967871486
  train_f1_micro_oob:
  - 0.9447852760736196
  - 0.9362745098039216
  - 0.9308943089430894
  - 0.9393939393939394
  - 0.9337349397590361
  train_f1_samples:
  - 0.9529652351738241
  - 0.957843137254902
  - 0.946138211382114
  - 0.9525252525252527
  - 0.9497991967871487
  train_f1_samples_oob:
  - 0.9447852760736196
  - 0.9362745098039217
  - 0.9308943089430896
  - 0.9393939393939394
  - 0.9337349397590361
  train_f1_weighted:
  - 0.9447852760736196
  - 0.9421956901572511
  - 0.9383231707317075
  - 0.9523895673149403
  - 0.9437948839693749
  train_f1_weighted_oob:
  - 0.9374658324728178
  - 0.9219569015725103
  - 0.9221951219512196
  - 0.9340268355193729
  - 0.9258412962193602
  train_jaccard_macro:
  - 0.9106064652232423
  - 0.9202359731333937
  - 0.8983257110866768
  - 0.9094690540747264
  - 0.9050777154283857
  train_jaccard_macro_oob:
  - 0.8960911343710843
  - 0.8809316029526261
  - 0.8715147662032531
  - 0.8859996340245587
  - 0.8766215336754591
  train_jaccard_micro:
  - 0.91015625
  - 0.9190968955785512
  - 0.8977820636451301
  - 0.9093539054966249
  - 0.904397705544933
  train_jaccard_micro_oob:
  - 0.8953488372093024
  - 0.880184331797235
  - 0.870722433460076
  - 0.8857142857142857
  - 0.8757062146892656
  train_jaccard_samples:
  - 0.9236050248320187
  - 0.9333333333333332
  - 0.9123112659698026
  - 0.9225108225108226
  - 0.9185312679288583
  train_jaccard_samples_oob:
  - 0.9108968740870582
  - 0.8984593837535014
  - 0.8893728222996514
  - 0.9020202020202019
  - 0.8922834193918532
  train_jaccard_weighted:
  - 0.8958212139616886
  - 0.8914527017570137
  - 0.8842577877183453
  - 0.9092040666040104
  - 0.8940983565101687
  train_jaccard_weighted_oob:
  - 0.8829756770573894
  - 0.855902491627041
  - 0.8560989484508912
  - 0.8765435503037851
  - 0.8626031856719573
  train_label_ranking_average_precision_score:
  - 0.9775051124744375
  - 0.9789215686274507
  - 0.9745934959349593
  - 0.9808080808080807
  - 0.9784136546184738
  train_label_ranking_average_precision_score_oob:
  - 0.9566802999318336
  - 0.9534640522875815
  - 0.9339430894308941
  - 0.9535353535353535
  - 0.9522088353413655
  train_matthews_corrcoef_macro:
  - 0.6769315132506608
  - 0.8393850459363642
  - 0.6335964886704827
  - 0.6565996338208885
  - 0.6400188320745748
  train_matthews_corrcoef_macro_oob:
  - 0.6241124105176931
  - 0.609712248762761
  - 0.5335507398360407
  - 0.6081474584370846
  - 0.516009929974673
  train_matthews_corrcoef_micro:
  - 0.8525220268692946
  - 0.8637148813392845
  - 0.8280447827710927
  - 0.8488579058480848
  - 0.8403916102009168
  train_matthews_corrcoef_micro_oob:
  - 0.8259481263126104
  - 0.7903372085452937
  - 0.7765050325834204
  - 0.8050775232653994
  - 0.7865848024232822
  train_matthews_corrcoef_samples:
  - 0.8358352966698874
  - 0.8607085424346307
  - 0.8079638074467012
  - 0.8279315019706542
  - 0.811204906789804
  train_matthews_corrcoef_samples_oob:
  - 0.797707007933278
  - 0.752282333422668
  - 0.7305658593390701
  - 0.7645246858520646
  - 0.7389459783463146
  train_matthews_corrcoef_weighted:
  - 0.8224923211876213
  - 0.8429020250516367
  - 0.7949622315273561
  - 0.8220740455698056
  - 0.8063726847361531
  train_matthews_corrcoef_weighted_oob:
  - 0.789982240977921
  - 0.7511754863206025
  - 0.7264734931073543
  - 0.7711191388892521
  - 0.7243416499501978
  train_ndgc:
  - 0.9842990347468444
  - 0.9848568073095765
  - 0.9816712825984979
  - 0.9865629174650327
  - 0.9841867873488456
  train_ndgc_oob:
  - 0.9697385090765285
  - 0.9669271484145372
  - 0.9523165988452118
  - 0.9675732279583542
  - 0.966184585509297
  train_neg_coverage_error:
  - -1.312883435582822
  - -1.2470588235294118
  - -1.2865853658536586
  - -1.2727272727272727
  - -1.283132530120482
  train_neg_coverage_error_oob:
  - -1.4171779141104295
  - -1.3529411764705883
  - -1.4085365853658536
  - -1.3818181818181818
  - -1.3795180722891567
  train_neg_hamming_loss_macro:
  - -0.04703476482617588
  - -0.04215686274509805
  - -0.05386178861788618
  - -0.047474747474747475
  - -0.0502008032128514
  train_neg_hamming_loss_macro_oob:
  - -0.05521472392638036
  - -0.06372549019607844
  - -0.06910569105691056
  - -0.06060606060606061
  - -0.06626506024096385
  train_neg_hamming_loss_micro:
  - -0.04703476482617587
  - -0.04215686274509804
  - -0.05386178861788618
  - -0.047474747474747475
  - -0.050200803212851405
  train_neg_hamming_loss_micro_oob:
  - -0.05521472392638037
  - -0.06372549019607843
  - -0.06910569105691057
  - -0.06060606060606061
  - -0.06626506024096386
  train_neg_hamming_loss_samples:
  - -0.047034764826175864
  - -0.042156862745098035
  - -0.053861788617886174
  - -0.047474747474747475
  - -0.0502008032128514
  train_neg_hamming_loss_samples_oob:
  - -0.055214723926380355
  - -0.06372549019607843
  - -0.06910569105691056
  - -0.06060606060606061
  - -0.06626506024096386
  train_neg_hamming_loss_weighted:
  - -0.05521472392638037
  - -0.05780430984274899
  - -0.06167682926829268
  - -0.047610432685059545
  - -0.05620511603062496
  train_neg_hamming_loss_weighted_oob:
  - -0.06253416752718217
  - -0.07804309842748981
  - -0.07780487804878049
  - -0.06597316448062718
  - -0.07415870378063981
  train_neg_label_ranking_loss:
  - -0.012883435582822086
  - -0.011176470588235295
  - -0.012500000000000002
  - -0.009545454545454546
  - -0.011897590361445784
  train_neg_label_ranking_loss_oob:
  - -0.031339468302658484
  - -0.031013071895424835
  - -0.035586043360433604
  - -0.02863636363636364
  - -0.028447121820615796
  train_precision_macro:
  - 0.9529652351738241
  - 0.9578431372549021
  - 0.9461382113821138
  - 0.9525252525252524
  - 0.9497991967871485
  train_precision_macro_oob:
  - 0.9447852760736195
  - 0.9362745098039215
  - 0.9308943089430893
  - 0.9393939393939393
  - 0.9337349397590361
  train_precision_micro:
  - 0.9529652351738241
  - 0.957843137254902
  - 0.9461382113821138
  - 0.9525252525252526
  - 0.9497991967871486
  train_precision_micro_oob:
  - 0.9447852760736196
  - 0.9362745098039216
  - 0.9308943089430894
  - 0.9393939393939394
  - 0.9337349397590361
  train_precision_samples:
  - 0.9529652351738241
  - 0.957843137254902
  - 0.946138211382114
  - 0.9525252525252527
  - 0.9497991967871487
  train_precision_samples_oob:
  - 0.9447852760736196
  - 0.9362745098039217
  - 0.9308943089430896
  - 0.9393939393939394
  - 0.9337349397590361
  train_precision_weighted:
  - 0.9447852760736196
  - 0.9421956901572511
  - 0.9383231707317075
  - 0.9523895673149403
  - 0.9437948839693749
  train_precision_weighted_oob:
  - 0.9374658324728178
  - 0.9219569015725103
  - 0.9221951219512196
  - 0.9340268355193729
  - 0.9258412962193602
  train_recall_macro:
  - 0.9529652351738241
  - 0.9578431372549021
  - 0.9461382113821138
  - 0.9525252525252524
  - 0.9497991967871485
  train_recall_macro_oob:
  - 0.9447852760736195
  - 0.9362745098039215
  - 0.9308943089430893
  - 0.9393939393939393
  - 0.9337349397590361
  train_recall_micro:
  - 0.9529652351738241
  - 0.957843137254902
  - 0.9461382113821138
  - 0.9525252525252526
  - 0.9497991967871486
  train_recall_micro_oob:
  - 0.9447852760736196
  - 0.9362745098039216
  - 0.9308943089430894
  - 0.9393939393939394
  - 0.9337349397590361
  train_recall_samples:
  - 0.9529652351738241
  - 0.957843137254902
  - 0.946138211382114
  - 0.9525252525252527
  - 0.9497991967871487
  train_recall_samples_oob:
  - 0.9447852760736196
  - 0.9362745098039217
  - 0.9308943089430896
  - 0.9393939393939394
  - 0.9337349397590361
  train_recall_weighted:
  - 0.9447852760736196
  - 0.9421956901572511
  - 0.9383231707317075
  - 0.9523895673149403
  - 0.9437948839693749
  train_recall_weighted_oob:
  - 0.9374658324728178
  - 0.9219569015725103
  - 0.9221951219512196
  - 0.9340268355193729
  - 0.9258412962193602
  train_roc_auc_macro:
  - 0.9924867519294137
  - 0.9940658775183664
  - 0.9938419941598671
  - 0.9943326467977317
  - 0.9955480610842792
  train_roc_auc_macro_oob:
  - 0.9688186655259118
  - 0.9714844299430411
  - 0.9750798366724261
  - 0.9792435729488668
  - 0.9730108311310136
  train_roc_auc_micro:
  - 0.9888262988670001
  - 0.9921929845796315
  - 0.990609056122449
  - 0.9924584933381255
  - 0.9923903117797974
  train_roc_auc_micro_oob:
  - 0.9743161171787281
  - 0.9763308237914257
  - 0.9765688775510204
  - 0.97972747164053
  - 0.976481404406786
  train_roc_auc_samples:
  - 0.987116564417178
  - 0.9888235294117649
  - 0.9875000000000002
  - 0.9904545454545455
  - 0.9881024096385542
  train_roc_auc_samples_oob:
  - 0.9686605316973416
  - 0.9689869281045752
  - 0.9644139566395664
  - 0.9713636363636362
  - 0.9715528781793843
  train_roc_auc_weighted:
  - 0.9895681454073166
  - 0.9924697319766651
  - 0.9920727084187445
  - 0.9927764203573145
  - 0.9920336798822728
  train_roc_auc_weighted_oob:
  - 0.967965465889326
  - 0.9699764234398475
  - 0.9733617913367376
  - 0.978935266408056
  - 0.9706209345381842
start: 2023-12-21 06:53:33.850059
wrapper: null
