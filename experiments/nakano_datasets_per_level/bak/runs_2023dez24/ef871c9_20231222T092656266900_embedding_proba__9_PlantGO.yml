active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMzA8AAZmZmZmb2vwCamZmZmfk/ADQzMzMz4z8AmpmZmZn5Pw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:30:16.772675
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__9
  params: {}
hash: ef871c9eb3a0361cd656f1fc517587aecf1523e937d1fd33e709dc8e7c29026d
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ef871c9_20231222T092656266900_embedding_proba__9_PlantGO.yml
results:
  fit_time:
  - 142.8096058368683
  - 142.76061868667603
  - 141.27616095542908
  - 139.49295902252197
  - 135.6926465034485
  score_time:
  - 14.013665199279785
  - 13.696114778518677
  - 14.017095804214478
  - 13.076501369476318
  - 13.129796028137207
  test_average_precision_macro:
  - 0.7086009551392337
  - 0.7774216367891787
  - 0.7199291846553827
  - 0.7481082402915589
  - 0.7488048439404329
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7636686281892617
  - 0.7756945493413271
  - 0.7690830187262909
  - 0.8059592957704214
  - 0.7731847393429777
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8828102453102453
  - 0.8864918217710094
  - 0.850441826215022
  - 0.8799776149776148
  - 0.877205040091638
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7706850273160442
  - 0.8214638668610468
  - 0.7904333597472604
  - 0.8480189576338919
  - 0.794528264734177
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9145622895622897
  - 0.9158206429780035
  - 0.9179553264604811
  - 0.9205128205128205
  - 0.9162371134020618
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9145622895622896
  - 0.9158206429780034
  - 0.9179553264604811
  - 0.9205128205128205
  - 0.9162371134020618
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9145622895622895
  - 0.9158206429780035
  - 0.917955326460481
  - 0.9205128205128205
  - 0.9162371134020618
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8445646945646945
  - 0.8509960731730676
  - 0.8550535194593796
  - 0.8699806482825351
  - 0.8529468974907606
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8509671703659331
  - 0.852256607734442
  - 0.8554241059097735
  - 0.8583368739597551
  - 0.8526767704785203
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8425746413338503
  - 0.8447132266874756
  - 0.8483525208416038
  - 0.8527315914489311
  - 0.845422116527943
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8439338439338437
  - 0.8465777876945388
  - 0.8503455307579018
  - 0.8555987602141447
  - 0.8476039424493033
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7394258217399128
  - 0.7480671783617753
  - 0.753017592642736
  - 0.7744543783630409
  - 0.7502232039736638
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8828102453102452
  - 0.8864918217710097
  - 0.8504418262150218
  - 0.8799776149776152
  - 0.877205040091638
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.023484728068008564
  - 0.06971084637931897
  - 0.05291490189729719
  - 0.06269652114138902
  - 0.07544187002596862
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1779085672554017
  - 0.23851795867508443
  - 0.28012552663022694
  - 0.3345984715346917
  - 0.2699911811344537
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.049127640036730945
  - 0.08114093076797016
  - 0.09746954076850985
  - 0.14731934731934732
  - 0.09231490159325212
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.07649311427865646
  - 0.16715901097909486
  - 0.15366692685371572
  - 0.18084087456089423
  - 0.1877412867688684
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9143473959276776
  - 0.9167882182889103
  - 0.8890381154865549
  - 0.9121640958082059
  - 0.9094514023037906
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.494949494949495
  - -1.4568527918781726
  - -1.6134020618556701
  - -1.5487179487179488
  - -1.5670103092783505
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08543771043771044
  - -0.08417935702199662
  - -0.08204467353951891
  - -0.0794871794871795
  - -0.08376288659793814
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08543771043771044
  - -0.08417935702199661
  - -0.0820446735395189
  - -0.07948717948717948
  - -0.08376288659793814
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08543771043771047
  - -0.08417935702199661
  - -0.0820446735395189
  - -0.07948717948717948
  - -0.08376288659793814
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.15543530543530545
  - -0.14900392682693228
  - -0.14494648054062054
  - -0.13001935171746493
  - -0.14705310250923948
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03565197428833792
  - -0.031956622058144896
  - -0.04697750702905342
  - -0.037056893723560386
  - -0.03973844978999618
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9145622895622897
  - 0.9158206429780035
  - 0.9179553264604811
  - 0.9205128205128205
  - 0.9162371134020618
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9145622895622896
  - 0.9158206429780034
  - 0.9179553264604811
  - 0.9205128205128205
  - 0.9162371134020618
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9145622895622895
  - 0.9158206429780035
  - 0.917955326460481
  - 0.9205128205128205
  - 0.9162371134020618
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8445646945646945
  - 0.8509960731730676
  - 0.8550535194593796
  - 0.8699806482825351
  - 0.8529468974907606
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9145622895622897
  - 0.9158206429780035
  - 0.9179553264604811
  - 0.9205128205128205
  - 0.9162371134020618
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9145622895622896
  - 0.9158206429780034
  - 0.9179553264604811
  - 0.9205128205128205
  - 0.9162371134020618
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9145622895622895
  - 0.9158206429780035
  - 0.917955326460481
  - 0.9205128205128205
  - 0.9162371134020618
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8445646945646945
  - 0.8509960731730676
  - 0.8550535194593796
  - 0.8699806482825351
  - 0.8529468974907606
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9520732733936234
  - 0.9681286605539162
  - 0.9634840345277292
  - 0.97417295182658
  - 0.9668971571950067
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9645418370487623
  - 0.9693703093217367
  - 0.9624044021848347
  - 0.9677835508582778
  - 0.9670546955808396
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.964348025711662
  - 0.968043377941855
  - 0.9530224929709465
  - 0.9629431062764396
  - 0.9602615502100037
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9534565929518013
  - 0.968170150447787
  - 0.9625894812913324
  - 0.9737820513187468
  - 0.961289329914908
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8673555986565341
  - 0.8617113806882085
  - 0.8713311687276462
  - 0.8497157577514772
  - 0.8494783664167339
  train_average_precision_macro_oob:
  - 0.7992951803437567
  - 0.7697381260674182
  - 0.7996498645924207
  - 0.7663237429688424
  - 0.764650256327193
  train_average_precision_micro:
  - 0.8996020894774541
  - 0.894795176075608
  - 0.9011522539862604
  - 0.893163919683347
  - 0.891690914562004
  train_average_precision_micro_oob:
  - 0.8565076843843453
  - 0.8345768501349257
  - 0.8472050897171237
  - 0.8499146659454507
  - 0.8476211425596103
  train_average_precision_samples:
  - 0.9323560698560699
  - 0.9246383258227048
  - 0.9283821266601879
  - 0.9238481789248073
  - 0.9147337073357481
  train_average_precision_samples_oob:
  - 0.9053021978021978
  - 0.8931844510589709
  - 0.9037141642371235
  - 0.891806682036567
  - 0.8895514915923081
  train_average_precision_weighted:
  - 0.9055044749735429
  - 0.9050065612237154
  - 0.9100819898942201
  - 0.9046409559656522
  - 0.9016720528490078
  train_average_precision_weighted_oob:
  - 0.8700581885305944
  - 0.8486260881876317
  - 0.8640071938505315
  - 0.8626432936148145
  - 0.8587829161098091
  train_f1_macro:
  - 0.9310897435897435
  - 0.9300042680324369
  - 0.9345238095238094
  - 0.9331630481055769
  - 0.9356930272108843
  train_f1_macro_oob:
  - 0.9174145299145299
  - 0.9176269739650019
  - 0.9212372448979592
  - 0.9217752234993616
  - 0.9225127551020407
  train_f1_micro:
  - 0.9310897435897436
  - 0.9300042680324371
  - 0.9345238095238095
  - 0.9331630481055768
  - 0.9356930272108843
  train_f1_micro_oob:
  - 0.9174145299145299
  - 0.9176269739650021
  - 0.9212372448979592
  - 0.9217752234993615
  - 0.9225127551020408
  train_f1_samples:
  - 0.9310897435897436
  - 0.930004268032437
  - 0.9345238095238094
  - 0.9331630481055766
  - 0.9356930272108842
  train_f1_samples_oob:
  - 0.9174145299145298
  - 0.917626973965002
  - 0.921237244897959
  - 0.9217752234993615
  - 0.9225127551020408
  train_f1_weighted:
  - 0.8850174480351995
  - 0.8815841235268832
  - 0.8949513315964683
  - 0.8917401059586194
  - 0.8963250780739341
  train_f1_weighted_oob:
  - 0.8553618570778334
  - 0.8542793480390594
  - 0.8678294012640518
  - 0.866794229088171
  - 0.8690990631127896
  train_jaccard_macro:
  - 0.875039668564077
  - 0.8735073208482887
  - 0.8802002351272971
  - 0.8781476205597526
  - 0.8821768937468651
  train_jaccard_macro_oob:
  - 0.8544203720458032
  - 0.854935998985742
  - 0.8597237841363282
  - 0.8607220076164676
  - 0.8617169664773523
  train_jaccard_micro:
  - 0.8710644677661169
  - 0.8691663342640606
  - 0.8770949720670391
  - 0.8747007182761373
  - 0.8791570957754918
  train_jaccard_micro_oob:
  - 0.8474291917497286
  - 0.8477917981072555
  - 0.8539757611587349
  - 0.8549007995262067
  - 0.8561704646345073
  train_jaccard_samples:
  - 0.8742575373344604
  - 0.8723417427642779
  - 0.8805337519623235
  - 0.878085133257547
  - 0.8824736488001794
  train_jaccard_samples_oob:
  - 0.8493772893772893
  - 0.84980090332203
  - 0.8564532406369141
  - 0.8572579400165606
  - 0.8586454361964565
  train_jaccard_weighted:
  - 0.7979654424189222
  - 0.7929220766489558
  - 0.8127557706015337
  - 0.8076451497363089
  - 0.8150141272956708
  train_jaccard_weighted_oob:
  - 0.7538842062087209
  - 0.7526509627060654
  - 0.7712465260537488
  - 0.7697920924850982
  - 0.7731987303128449
  train_label_ranking_average_precision_score:
  - 0.9323560698560699
  - 0.924638325822705
  - 0.9283821266601879
  - 0.9238481789248073
  - 0.9147337073357483
  train_label_ranking_average_precision_score_oob:
  - 0.9053021978021976
  - 0.893184451058971
  - 0.9037141642371234
  - 0.8918066820365671
  - 0.8895514915923081
  train_matthews_corrcoef_macro:
  - 0.17264327103040486
  - 0.1663270664894988
  - 0.19485620376763782
  - 0.17365863882878996
  - 0.2074656442221633
  train_matthews_corrcoef_macro_oob:
  - 0.08022732683659413
  - 0.07522530935740022
  - 0.0921793495717667
  - 0.09974006734972586
  - 0.1043936861827075
  train_matthews_corrcoef_micro:
  - 0.46888847080801016
  - 0.45335064026972505
  - 0.5031731506536274
  - 0.4871223596936343
  - 0.5133646832735657
  train_matthews_corrcoef_micro_oob:
  - 0.27916813681871855
  - 0.27678636263844336
  - 0.3371222312079407
  - 0.3429908920116472
  - 0.35236001738243905
  train_matthews_corrcoef_samples:
  - 0.25089267783141384
  - 0.23833991192620793
  - 0.28978146733309673
  - 0.2723299876184897
  - 0.2942554702914576
  train_matthews_corrcoef_samples_oob:
  - 0.092220116021129
  - 0.09664167098839331
  - 0.13773566755266595
  - 0.13858873725164084
  - 0.147640143258498
  train_matthews_corrcoef_weighted:
  - 0.3797534073585975
  - 0.36568040033188404
  - 0.4148141421474649
  - 0.39257253406513004
  - 0.428334149205803
  train_matthews_corrcoef_weighted_oob:
  - 0.19711791932426154
  - 0.1856255372355028
  - 0.2339927758676437
  - 0.2476247788305642
  - 0.2571709575030345
  train_ndgc:
  - 0.9502049258315559
  - 0.944458876789458
  - 0.9474269136136048
  - 0.9434865335667836
  - 0.9372144020443179
  train_ndgc_oob:
  - 0.9300480140865972
  - 0.921128761605217
  - 0.929068342176796
  - 0.9197031445413193
  - 0.9186950182173386
  train_neg_coverage_error:
  - -1.3512820512820514
  - -1.3533930857874519
  - -1.343112244897959
  - -1.397190293742018
  - -1.3915816326530612
  train_neg_coverage_error_oob:
  - -1.4653846153846153
  - -1.4660691421254801
  - -1.4642857142857142
  - -1.5146871008939975
  - -1.4834183673469388
  train_neg_hamming_loss_macro:
  - -0.0689102564102564
  - -0.06999573196756297
  - -0.06547619047619048
  - -0.06683695189442317
  - -0.06430697278911565
  train_neg_hamming_loss_macro_oob:
  - -0.08258547008547008
  - -0.08237302603499787
  - -0.07876275510204082
  - -0.07822477650063857
  - -0.07748724489795919
  train_neg_hamming_loss_micro:
  - -0.06891025641025642
  - -0.06999573196756295
  - -0.06547619047619048
  - -0.06683695189442315
  - -0.06430697278911565
  train_neg_hamming_loss_micro_oob:
  - -0.08258547008547008
  - -0.08237302603499787
  - -0.07876275510204081
  - -0.07822477650063857
  - -0.07748724489795919
  train_neg_hamming_loss_samples:
  - -0.06891025641025642
  - -0.06999573196756297
  - -0.06547619047619048
  - -0.06683695189442315
  - -0.06430697278911565
  train_neg_hamming_loss_samples_oob:
  - -0.08258547008547007
  - -0.08237302603499788
  - -0.07876275510204081
  - -0.07822477650063858
  - -0.07748724489795919
  train_neg_hamming_loss_weighted:
  - -0.11498255196480046
  - -0.11841587647311672
  - -0.10504866840353162
  - -0.10825989404138052
  - -0.10367492192606581
  train_neg_hamming_loss_weighted_oob:
  - -0.14463814292216656
  - -0.14572065196094067
  - -0.13217059873594827
  - -0.1332057709118289
  - -0.1309009368872104
  train_neg_label_ranking_loss:
  - -0.022108262108262108
  - -0.02306914643662403
  - -0.022053227856799282
  - -0.027555675959251947
  - -0.026498617123617122
  train_neg_label_ranking_loss_oob:
  - -0.03187861521194854
  - -0.03261251007729881
  - -0.031968494468494466
  - -0.03777859480286045
  - -0.0344812925170068
  train_precision_macro:
  - 0.9310897435897435
  - 0.9300042680324369
  - 0.9345238095238094
  - 0.9331630481055769
  - 0.9356930272108843
  train_precision_macro_oob:
  - 0.9174145299145299
  - 0.9176269739650019
  - 0.9212372448979592
  - 0.9217752234993616
  - 0.9225127551020407
  train_precision_micro:
  - 0.9310897435897436
  - 0.9300042680324371
  - 0.9345238095238095
  - 0.9331630481055768
  - 0.9356930272108843
  train_precision_micro_oob:
  - 0.9174145299145299
  - 0.9176269739650021
  - 0.9212372448979592
  - 0.9217752234993615
  - 0.9225127551020408
  train_precision_samples:
  - 0.9310897435897436
  - 0.930004268032437
  - 0.9345238095238094
  - 0.9331630481055766
  - 0.9356930272108842
  train_precision_samples_oob:
  - 0.9174145299145298
  - 0.917626973965002
  - 0.921237244897959
  - 0.9217752234993615
  - 0.9225127551020408
  train_precision_weighted:
  - 0.8850174480351995
  - 0.8815841235268832
  - 0.8949513315964683
  - 0.8917401059586194
  - 0.8963250780739341
  train_precision_weighted_oob:
  - 0.8553618570778334
  - 0.8542793480390594
  - 0.8678294012640518
  - 0.866794229088171
  - 0.8690990631127896
  train_recall_macro:
  - 0.9310897435897435
  - 0.9300042680324369
  - 0.9345238095238094
  - 0.9331630481055769
  - 0.9356930272108843
  train_recall_macro_oob:
  - 0.9174145299145299
  - 0.9176269739650019
  - 0.9212372448979592
  - 0.9217752234993616
  - 0.9225127551020407
  train_recall_micro:
  - 0.9310897435897436
  - 0.9300042680324371
  - 0.9345238095238095
  - 0.9331630481055768
  - 0.9356930272108843
  train_recall_micro_oob:
  - 0.9174145299145299
  - 0.9176269739650021
  - 0.9212372448979592
  - 0.9217752234993615
  - 0.9225127551020408
  train_recall_samples:
  - 0.9310897435897436
  - 0.930004268032437
  - 0.9345238095238094
  - 0.9331630481055766
  - 0.9356930272108842
  train_recall_samples_oob:
  - 0.9174145299145298
  - 0.917626973965002
  - 0.921237244897959
  - 0.9217752234993615
  - 0.9225127551020408
  train_recall_weighted:
  - 0.8850174480351995
  - 0.8815841235268832
  - 0.8949513315964683
  - 0.8917401059586194
  - 0.8963250780739341
  train_recall_weighted_oob:
  - 0.8553618570778334
  - 0.8542793480390594
  - 0.8678294012640518
  - 0.866794229088171
  - 0.8690990631127896
  train_roc_auc_macro:
  - 0.9800179294135002
  - 0.9806160089025425
  - 0.9837804097841972
  - 0.9718638195743484
  - 0.9779467103633785
  train_roc_auc_macro_oob:
  - 0.9727448319519308
  - 0.970840502521638
  - 0.9733988980554167
  - 0.9635254601321379
  - 0.9710961969908721
  train_roc_auc_micro:
  - 0.9810033807377861
  - 0.9811123781580031
  - 0.9832139427444263
  - 0.9774476472775502
  - 0.9797593450129116
  train_roc_auc_micro_oob:
  - 0.9737379563387965
  - 0.9726571697955493
  - 0.9734228928417005
  - 0.9695068596771315
  - 0.9722534882577513
  train_roc_auc_samples:
  - 0.9778917378917378
  - 0.9769308535633761
  - 0.9779467721432007
  - 0.972444324040748
  - 0.973501382876383
  train_roc_auc_samples_oob:
  - 0.9681213847880514
  - 0.9673874899227012
  - 0.9680315055315055
  - 0.9622214051971394
  - 0.9655187074829933
  train_roc_auc_weighted:
  - 0.9782648800352794
  - 0.9798681357818467
  - 0.9810644844353402
  - 0.9758931319432258
  - 0.9773256660672098
  train_roc_auc_weighted_oob:
  - 0.9726431046167279
  - 0.971168354632007
  - 0.9732942273106688
  - 0.9687460870938878
  - 0.9703405874061775
start: 2023-12-22 09:26:56.266900
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
