active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z+gmZmZmZnJP5iZmZmZmem/NDMzMzMz8z/MzMzMzMz8vw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACEAAAAAAAAAAwAAAAAAAABTAAAAAAAAACEAAAAAAAADwPw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:58:56.618397
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__0
  params: {}
hash: 8475611aaaf49c35e8422a55a14e720c16a559680cae68dc71931e2e51c0b280
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8475611_20231221T235847652822_embedding_proba__0_CHD_49.yml
results:
  fit_time:
  - 1.3190028667449951
  - 1.3064351081848145
  - 1.2228665351867676
  - 1.2477238178253174
  - 1.198094367980957
  score_time:
  - 1.1121578216552734
  - 1.1441209316253662
  - 1.16524338722229
  - 1.1203556060791016
  - 1.0915160179138184
  test_average_precision_macro:
  - 0.547899517650936
  - 0.5279365240482333
  - 0.4851171067992457
  - 0.5214255352137295
  - 0.48746070080402476
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7262870509682666
  - 0.6725345395749744
  - 0.6497043501353512
  - 0.7136224233623363
  - 0.6736448855671078
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7971579218106994
  - 0.7749508357915439
  - 0.7616499042145596
  - 0.8183384773662552
  - 0.7737626262626262
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.676698804563078
  - 0.6366234895886512
  - 0.5954749836150558
  - 0.6507392832909645
  - 0.6070859160054418
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.558641975308642
  - 0.575221238938053
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.558641975308642
  - 0.5752212389380531
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5586419753086419
  - 0.575221238938053
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.4278036778036778
  - 0.45157325467059983
  - 0.4719752493091434
  - 0.42417153996101364
  - 0.4506039415130324
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4316992518151459
  - 0.44455786282202037
  - 0.4537545502590718
  - 0.432707968305567
  - 0.43503012605365465
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.3875802997858672
  - 0.40372670807453415
  - 0.4160732451678535
  - 0.3875802997858672
  - 0.3968253968253968
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4048059964726632
  - 0.419637589549094
  - 0.435344827586207
  - 0.4023408690075357
  - 0.41757575757575766
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.28761847840484434
  - 0.30760336460649373
  - 0.32469279797800016
  - 0.2859362613197787
  - 0.30776228383791937
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.806417181069959
  - 0.774950835791544
  - 0.7616499042145592
  - 0.8183384773662555
  - 0.7919444444444445
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.01529631454613234
  - 0.0
  - -0.01107057140736744
  - -0.0309743645633294
  - 0.008881422523201411
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.006571205267175239
  - 0.0
  - 0.009557900283099397
  - -0.034835093227345904
  - 0.044546139959249616
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0029280348705262773
  - 0.0
  - 0.003728064931324792
  - -0.001851851851851852
  - 0.00574959574576069
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.02695574311626119
  - 0.0
  - -0.019441003447084285
  - -0.05542781027122103
  - 0.015651178152774517
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8697726632442335
  - 0.8489632087206911
  - 0.8438849924555532
  - 0.8868240848937873
  - 0.8529118732340709
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7222222222222223
  - -3.725663716814159
  - -3.7241379310344827
  - -3.7037037037037037
  - -3.8727272727272726
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.44135802469135804
  - -0.4247787610619469
  - -0.41235632183908044
  - -0.441358024691358
  - -0.4318181818181818
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.44135802469135804
  - -0.4247787610619469
  - -0.41235632183908044
  - -0.44135802469135804
  - -0.4318181818181818
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.44135802469135804
  - -0.42477876106194684
  - -0.41235632183908044
  - -0.441358024691358
  - -0.43181818181818177
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5721963221963222
  - -0.5484267453294002
  - -0.5280247506908567
  - -0.5758284600389864
  - -0.5493960584869677
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.18477366255144034
  - -0.22472959685349064
  - -0.2325191570881226
  - -0.18222736625514405
  - -0.22224747474747475
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.558641975308642
  - 0.575221238938053
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.558641975308642
  - 0.5752212389380531
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5586419753086419
  - 0.575221238938053
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.4278036778036778
  - 0.45157325467059983
  - 0.4719752493091434
  - 0.42417153996101364
  - 0.4506039415130324
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.558641975308642
  - 0.575221238938053
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.558641975308642
  - 0.5752212389380531
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5586419753086419
  - 0.575221238938053
  - 0.5876436781609196
  - 0.558641975308642
  - 0.5681818181818182
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.4278036778036778
  - 0.45157325467059983
  - 0.4719752493091434
  - 0.42417153996101364
  - 0.4506039415130324
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6592332332424947
  - 0.5474216040708425
  - 0.5607904302420696
  - 0.58219406560256
  - 0.5635499708750635
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7981010702005177
  - 0.7822560541310541
  - 0.7680072923677194
  - 0.7999999999999999
  - 0.7561796492277775
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7752704031465093
  - 0.7674808429118775
  - 0.817772633744856
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.633128177187465
  - 0.5444811537855323
  - 0.560240547104241
  - 0.6034328544417379
  - 0.5597651208062602
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.786588494945421
  - 0.7986617638802106
  - 0.7912391490346394
  - 0.7914565702632839
  - 0.7959733356925144
  train_average_precision_macro_oob:
  - 0.5036650228540939
  - 0.5095985070141285
  - 0.5040233450502053
  - 0.5076268911513501
  - 0.5120307654600434
  train_average_precision_micro:
  - 0.8452369332680436
  - 0.8474881468676677
  - 0.848169523777229
  - 0.8446927026012336
  - 0.8426587891794863
  train_average_precision_micro_oob:
  - 0.6796568231250141
  - 0.6882791424692751
  - 0.6945403127940923
  - 0.6884323148103859
  - 0.6846272347744158
  train_average_precision_samples:
  - 0.8489591101168282
  - 0.8646650326797385
  - 0.8591179448240952
  - 0.8513081034054187
  - 0.8542322097378277
  train_average_precision_samples_oob:
  - 0.7805213770817797
  - 0.7893068124685773
  - 0.787708807896735
  - 0.7786167039522743
  - 0.7932116104868913
  train_average_precision_weighted:
  - 0.8530236336766587
  - 0.8594741444092241
  - 0.8583428407006276
  - 0.855615918784031
  - 0.8549160061360572
  train_average_precision_weighted_oob:
  - 0.6232590051752542
  - 0.6306511188432661
  - 0.6309627441729044
  - 0.6306724618928395
  - 0.6324878233408455
  train_f1_macro:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_f1_macro_oob:
  - 0.5741983594332587
  - 0.5701357466063348
  - 0.5706150341685648
  - 0.5727069351230426
  - 0.5711610486891385
  train_f1_micro:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_f1_micro_oob:
  - 0.5741983594332588
  - 0.5701357466063348
  - 0.570615034168565
  - 0.5727069351230425
  - 0.5711610486891385
  train_f1_samples:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_f1_samples_oob:
  - 0.5741983594332587
  - 0.5701357466063348
  - 0.5706150341685648
  - 0.5727069351230425
  - 0.5711610486891385
  train_f1_weighted:
  - 0.47186400709012183
  - 0.4729436287694206
  - 0.47365688195680933
  - 0.46607529807356607
  - 0.47568484420652196
  train_f1_weighted_oob:
  - 0.45272926744517455
  - 0.4469512388064424
  - 0.4482438252877222
  - 0.45107263574464274
  - 0.4458536776673137
  train_jaccard_macro:
  - 0.4499416023381923
  - 0.4494468049998108
  - 0.449890140252599
  - 0.44756215657769216
  - 0.4532521799580249
  train_jaccard_macro_oob:
  - 0.44258435440183136
  - 0.43937317246124136
  - 0.4394587839032025
  - 0.44132917292100116
  - 0.44129992451185035
  train_jaccard_micro:
  - 0.4134387351778656
  - 0.4132693844924061
  - 0.4138486312399356
  - 0.41009463722397477
  - 0.4168214380472274
  train_jaccard_micro_oob:
  - 0.4027196652719665
  - 0.3987341772151899
  - 0.399203187250996
  - 0.4012539184952978
  - 0.399737876802097
  train_jaccard_samples:
  - 0.4318535305112487
  - 0.4329464652994065
  - 0.4330197516985672
  - 0.42875253009481196
  - 0.43497154530862403
  train_jaccard_samples_oob:
  - 0.4208382966772229
  - 0.4175187557540499
  - 0.41707442140243967
  - 0.4196015766485566
  - 0.4173471472347877
  train_jaccard_weighted:
  - 0.32154276222311673
  - 0.32142815757948995
  - 0.32140763018337265
  - 0.31762050752604054
  - 0.32331659169078
  train_jaccard_weighted_oob:
  - 0.30852312974934715
  - 0.3036231881800255
  - 0.3035595239668856
  - 0.30723470761677174
  - 0.30267653487804486
  train_label_ranking_average_precision_score:
  - 0.8534333830474765
  - 0.8714523629964794
  - 0.8659516578081493
  - 0.8580195128013908
  - 0.8564794007490626
  train_label_ranking_average_precision_score_oob:
  - 0.784995650012428
  - 0.796094142785318
  - 0.7945425208807884
  - 0.7853281133482465
  - 0.7954588014981261
  train_matthews_corrcoef_macro:
  - 0.026721476274802872
  - 0.030540506029637773
  - 0.047068714601501215
  - 0.03489324215790917
  - 0.0445092353325121
  train_matthews_corrcoef_macro_oob:
  - 0.003494238753575443
  - 0.0032567028114836496
  - 0.009740477908839867
  - -0.003409269757623837
  - -0.013292864748769945
  train_matthews_corrcoef_micro:
  - 0.1292168916717086
  - 0.1473957111379763
  - 0.1634137281081761
  - 0.11221391331405897
  - 0.15436539848349937
  train_matthews_corrcoef_micro_oob:
  - 0.03886624050244065
  - 0.03864775104888182
  - 0.07600103280891633
  - 0.01616577021128017
  - 0.015105086381460547
  train_matthews_corrcoef_samples:
  - 0.035223453942736994
  - 0.04753901294250789
  - 0.05914878170354854
  - 0.024975918888820274
  - 0.0497666718093769
  train_matthews_corrcoef_samples_oob:
  - 0.004952112666930349
  - 0.005594177864214918
  - 0.017390463815872344
  - 0.0009674620403437939
  - 0.004075492948579473
  train_matthews_corrcoef_weighted:
  - 0.0472872197952009
  - 0.05397981048245418
  - 0.07783621094251197
  - 0.05657985395986774
  - 0.07377114591209902
  train_matthews_corrcoef_weighted_oob:
  - 0.0061835219827670145
  - 0.005756165283933514
  - 0.01725213030491463
  - -0.0026290933934220396
  - -0.023523498874786605
  train_ndgc:
  - 0.9020503186306627
  - 0.9141757729707635
  - 0.9104772856248624
  - 0.902848426785526
  - 0.9053844976933443
  train_ndgc_oob:
  - 0.8553974872208097
  - 0.8625085616069001
  - 0.8615437942229321
  - 0.853164139285266
  - 0.8659247839210499
  train_neg_coverage_error:
  - -3.3758389261744965
  - -3.3959276018099547
  - -3.428246013667426
  - -3.3982102908277403
  - -3.3797752808988766
  train_neg_coverage_error_oob:
  - -3.7248322147651005
  - -3.746606334841629
  - -3.7790432801822322
  - -3.7472035794183447
  - -3.69438202247191
  train_neg_hamming_loss_macro:
  - -0.4149888143176734
  - -0.415158371040724
  - -0.41457858769931666
  - -0.41834451901566
  - -0.41161048689138574
  train_neg_hamming_loss_macro_oob:
  - -0.4258016405667413
  - -0.42986425339366513
  - -0.4293849658314351
  - -0.42729306487695745
  - -0.42883895131086147
  train_neg_hamming_loss_micro:
  - -0.41498881431767337
  - -0.415158371040724
  - -0.4145785876993166
  - -0.41834451901565994
  - -0.41161048689138574
  train_neg_hamming_loss_micro_oob:
  - -0.42580164056674125
  - -0.4298642533936652
  - -0.4293849658314351
  - -0.4272930648769575
  - -0.4288389513108614
  train_neg_hamming_loss_samples:
  - -0.41498881431767337
  - -0.415158371040724
  - -0.4145785876993166
  - -0.41834451901565994
  - -0.4116104868913858
  train_neg_hamming_loss_samples_oob:
  - -0.4258016405667412
  - -0.4298642533936652
  - -0.4293849658314351
  - -0.4272930648769575
  - -0.42883895131086136
  train_neg_hamming_loss_weighted:
  - -0.5281359929098781
  - -0.5270563712305794
  - -0.5263431180431907
  - -0.5339247019264339
  - -0.5243151557934781
  train_neg_hamming_loss_weighted_oob:
  - -0.5472707325548254
  - -0.5530487611935575
  - -0.5517561747122779
  - -0.5489273642553574
  - -0.5541463223326862
  train_neg_label_ranking_loss:
  - -0.13588118319661943
  - -0.12813599798893915
  - -0.13006833712984056
  - -0.13994531444195873
  - -0.13523096129837703
  train_neg_label_ranking_loss_oob:
  - -0.2155729555058414
  - -0.20611488185017598
  - -0.2084345735256897
  - -0.2142866020382799
  - -0.20222846441947567
  train_precision_macro:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_precision_macro_oob:
  - 0.5741983594332587
  - 0.5701357466063348
  - 0.5706150341685648
  - 0.5727069351230426
  - 0.5711610486891385
  train_precision_micro:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_precision_micro_oob:
  - 0.5741983594332588
  - 0.5701357466063348
  - 0.570615034168565
  - 0.5727069351230425
  - 0.5711610486891385
  train_precision_samples:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_precision_samples_oob:
  - 0.5741983594332587
  - 0.5701357466063348
  - 0.5706150341685648
  - 0.5727069351230425
  - 0.5711610486891385
  train_precision_weighted:
  - 0.47186400709012183
  - 0.4729436287694206
  - 0.47365688195680933
  - 0.46607529807356607
  - 0.47568484420652196
  train_precision_weighted_oob:
  - 0.45272926744517455
  - 0.4469512388064424
  - 0.4482438252877222
  - 0.45107263574464274
  - 0.4458536776673137
  train_recall_macro:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_recall_macro_oob:
  - 0.5741983594332587
  - 0.5701357466063348
  - 0.5706150341685648
  - 0.5727069351230426
  - 0.5711610486891385
  train_recall_micro:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_recall_micro_oob:
  - 0.5741983594332588
  - 0.5701357466063348
  - 0.570615034168565
  - 0.5727069351230425
  - 0.5711610486891385
  train_recall_samples:
  - 0.5850111856823266
  - 0.584841628959276
  - 0.5854214123006833
  - 0.5816554809843401
  - 0.5883895131086142
  train_recall_samples_oob:
  - 0.5741983594332587
  - 0.5701357466063348
  - 0.5706150341685648
  - 0.5727069351230425
  - 0.5711610486891385
  train_recall_weighted:
  - 0.47186400709012183
  - 0.4729436287694206
  - 0.47365688195680933
  - 0.46607529807356607
  - 0.47568484420652196
  train_recall_weighted_oob:
  - 0.45272926744517455
  - 0.4469512388064424
  - 0.4482438252877222
  - 0.45107263574464274
  - 0.4458536776673137
  train_roc_auc_macro:
  - 0.786659071244522
  - 0.8003317043089999
  - 0.7831701330968724
  - 0.7891539536094349
  - 0.7885184399479531
  train_roc_auc_macro_oob:
  - 0.5546220888472643
  - 0.5777370638961848
  - 0.5543930689948869
  - 0.5665543671342353
  - 0.5922349354208166
  train_roc_auc_micro:
  - 0.87081850594459
  - 0.8722979192558105
  - 0.8711491256111044
  - 0.8698210030982965
  - 0.8727927333690618
  train_roc_auc_micro_oob:
  - 0.7771937718150088
  - 0.7794495789356531
  - 0.7819426888888238
  - 0.7802657548796039
  - 0.7873111083627635
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7939222466408523
  - 0.7972843287228676
  - 0.7912355507905569
  - 0.7927897800251555
  - 0.7899136893262019
  train_roc_auc_weighted_oob:
  - 0.5706374190153304
  - 0.5702441897639616
  - 0.5803130899495579
  - 0.5831728336612574
  - 0.5899347903871088
start: 2023-12-21 23:58:47.652822
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
