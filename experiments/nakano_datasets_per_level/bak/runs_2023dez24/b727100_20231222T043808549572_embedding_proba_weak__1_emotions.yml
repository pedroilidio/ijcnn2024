active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMz4z9AZmZmZmb2v+DMzMzMzARAQGZmZmZm9r8AmZmZmZnZvw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 04:38:22.336841
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__1
  params: {}
hash: b7271008412afe1bc4ed9bada6890777ccf057e146bf37608aa77570e7ed2c7d
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b727100_20231222T043808549572_embedding_proba_weak__1_emotions.yml
results:
  fit_time:
  - 4.282694101333618
  - 4.267639875411987
  - 4.68350625038147
  - 4.675167798995972
  - 4.392611980438232
  score_time:
  - 1.7141926288604736
  - 1.7644562721252441
  - 1.9739749431610107
  - 1.8883082866668701
  - 1.8415660858154297
  test_average_precision_macro:
  - 0.7635507259018853
  - 0.7249201999562486
  - 0.7218895686617581
  - 0.7286100086666029
  - 0.7178439413196748
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7708240867045539
  - 0.7192383968464492
  - 0.7274148469153326
  - 0.7458738056991512
  - 0.7229535826482733
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8386770244821092
  - 0.7760185185185187
  - 0.8099377394636015
  - 0.7995601851851852
  - 0.7982726423902895
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7658559790171093
  - 0.7285496910748589
  - 0.7212638233482096
  - 0.7350146001507033
  - 0.7170255818708408
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7062146892655367
  - 0.7083333333333334
  - 0.69683908045977
  - 0.7041666666666666
  - 0.700280112044818
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7062146892655368
  - 0.7083333333333334
  - 0.6968390804597702
  - 0.7041666666666667
  - 0.7002801120448179
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7062146892655367
  - 0.7083333333333334
  - 0.69683908045977
  - 0.7041666666666667
  - 0.7002801120448181
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6958273162575055
  - 0.697972972972973
  - 0.6840770791075051
  - 0.6918939393939394
  - 0.6888106593988947
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5487579391331918
  - 0.5508545952644122
  - 0.5382042329293507
  - 0.5469170645386768
  - 0.5418426944991571
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5458515283842795
  - 0.5483870967741935
  - 0.5347298787210585
  - 0.5434083601286174
  - 0.5387931034482759
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.561138014527845
  - 0.5625
  - 0.5481116584564861
  - 0.554563492063492
  - 0.5508203281312524
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5366414685111642
  - 0.5390399514784905
  - 0.5237592385712099
  - 0.5330703993034495
  - 0.5286254352602835
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8386770244821091
  - 0.7760185185185186
  - 0.8099377394636014
  - 0.7995601851851853
  - 0.7982726423902894
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.14280548745608312
  - 0.14445530190108982
  - 0.1182525387207508
  - 0.10295113634550272
  - 0.08320038151520749
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.21145196729689308
  - 0.1849876205657785
  - 0.1704730319935355
  - 0.1493749994998605
  - 0.1516784563574207
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.08701152379817838
  - 0.07346702588529636
  - 0.05059814173581834
  - 0.03380587375973579
  - 0.047659352223819985
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.14517161493598674
  - 0.15181395468691775
  - 0.11692398881370127
  - 0.10166994442988453
  - 0.08792021651685958
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8905343382291702
  - 0.8428987390202354
  - 0.8705034855794292
  - 0.8632106196309579
  - 0.8643525016877802
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6271186440677967
  - -2.7916666666666665
  - -2.7758620689655173
  - -2.7583333333333333
  - -2.7394957983193278
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2937853107344633
  - -0.2916666666666667
  - -0.30316091954022983
  - -0.29583333333333334
  - -0.29971988795518206
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2937853107344633
  - -0.2916666666666667
  - -0.3031609195402299
  - -0.29583333333333334
  - -0.29971988795518206
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29378531073446323
  - -0.2916666666666667
  - -0.3031609195402299
  - -0.29583333333333334
  - -0.2997198879551822
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.30417268374249445
  - -0.302027027027027
  - -0.31592292089249496
  - -0.30810606060606066
  - -0.3111893406011053
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13319209039548022
  - -0.17601851851851852
  - -0.16041666666666668
  - -0.1586111111111111
  - -0.1537581699346405
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7062146892655367
  - 0.7083333333333334
  - 0.69683908045977
  - 0.7041666666666666
  - 0.700280112044818
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7062146892655368
  - 0.7083333333333334
  - 0.6968390804597702
  - 0.7041666666666667
  - 0.7002801120448179
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7062146892655367
  - 0.7083333333333334
  - 0.69683908045977
  - 0.7041666666666667
  - 0.7002801120448181
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6958273162575055
  - 0.697972972972973
  - 0.6840770791075051
  - 0.6918939393939394
  - 0.6888106593988947
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7062146892655367
  - 0.7083333333333334
  - 0.69683908045977
  - 0.7041666666666666
  - 0.700280112044818
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7062146892655368
  - 0.7083333333333334
  - 0.6968390804597702
  - 0.7041666666666667
  - 0.7002801120448179
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7062146892655367
  - 0.7083333333333334
  - 0.69683908045977
  - 0.7041666666666667
  - 0.7002801120448181
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6958273162575055
  - 0.697972972972973
  - 0.6840770791075051
  - 0.6918939393939394
  - 0.6888106593988947
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8600337478601615
  - 0.8455433750854918
  - 0.8345937742025562
  - 0.8414941177413615
  - 0.8372556745501099
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8761499699505338
  - 0.8636256738666377
  - 0.8568802095737081
  - 0.8618181818181819
  - 0.8591609902585513
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8668079096045198
  - 0.8239814814814815
  - 0.8395833333333333
  - 0.8413888888888889
  - 0.8462418300653595
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8597541868582507
  - 0.846320779609428
  - 0.834538567250294
  - 0.8429118600784659
  - 0.8336941702916775
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8905706938101505
  - 0.8897132705407981
  - 0.8922655431758875
  - 0.9010858024477888
  - 0.8969123598553207
  train_average_precision_macro_oob:
  - 0.8254821354394669
  - 0.8333092773148159
  - 0.8319402796077062
  - 0.8411774408154494
  - 0.8390294331540833
  train_average_precision_micro:
  - 0.8984099450441789
  - 0.8963209038824822
  - 0.8989944516733829
  - 0.9045265084903833
  - 0.9038078254882814
  train_average_precision_micro_oob:
  - 0.8344344350281688
  - 0.824604262720519
  - 0.8434228839060073
  - 0.8418981644557196
  - 0.847611304856432
  train_average_precision_samples:
  - 0.8979064327485381
  - 0.9029128494244774
  - 0.9115944560913114
  - 0.9072410147991543
  - 0.9172468354430381
  train_average_precision_samples_oob:
  - 0.8517251461988304
  - 0.8637538172421894
  - 0.8697006755182854
  - 0.8647697909325816
  - 0.8825187529301453
  train_average_precision_weighted:
  - 0.8915959411031849
  - 0.892089268046085
  - 0.8945102124802291
  - 0.9009499162626997
  - 0.8992244111665971
  train_average_precision_weighted_oob:
  - 0.8287444910503591
  - 0.8372936006185575
  - 0.8363804987092779
  - 0.8423165311462532
  - 0.8426718149768779
  train_f1_macro:
  - 0.7719298245614036
  - 0.7713178294573644
  - 0.7833682739343116
  - 0.7716701902748414
  - 0.7703938115330521
  train_f1_macro_oob:
  - 0.712280701754386
  - 0.7128259337561663
  - 0.7176799440950385
  - 0.7071881606765328
  - 0.7063994374120957
  train_f1_micro:
  - 0.7719298245614035
  - 0.7713178294573644
  - 0.7833682739343116
  - 0.7716701902748414
  - 0.7703938115330521
  train_f1_micro_oob:
  - 0.712280701754386
  - 0.7128259337561663
  - 0.7176799440950384
  - 0.7071881606765328
  - 0.7063994374120957
  train_f1_samples:
  - 0.7719298245614035
  - 0.7713178294573644
  - 0.7833682739343117
  - 0.7716701902748414
  - 0.770393811533052
  train_f1_samples_oob:
  - 0.7122807017543861
  - 0.7128259337561662
  - 0.7176799440950385
  - 0.7071881606765328
  - 0.7063994374120957
  train_f1_weighted:
  - 0.7678881950639311
  - 0.765874133216251
  - 0.7777635966995904
  - 0.765963373521513
  - 0.7656751531083617
  train_f1_weighted_oob:
  - 0.7038905738923581
  - 0.7024086208295353
  - 0.7065864017641261
  - 0.6975196655429213
  - 0.6957405872884344
  train_jaccard_macro:
  - 0.6295410958271629
  - 0.6289168714590997
  - 0.6451980957865451
  - 0.6294352568219899
  - 0.627586445725356
  train_jaccard_macro_oob:
  - 0.5550958323359312
  - 0.5564718230478988
  - 0.5630686803233854
  - 0.5491571406558098
  - 0.5489011323955878
  train_jaccard_micro:
  - 0.6285714285714286
  - 0.6277602523659306
  - 0.6438828259620908
  - 0.6282271944922547
  - 0.6265370317414927
  train_jaccard_micro_oob:
  - 0.553133514986376
  - 0.5537914043252121
  - 0.5596730245231608
  - 0.5470155355682748
  - 0.5460723022560479
  train_jaccard_samples:
  - 0.6476691729323307
  - 0.6468337863686701
  - 0.6655685334930617
  - 0.6485955904560555
  - 0.6461221619449468
  train_jaccard_samples_oob:
  - 0.5678696741854636
  - 0.5693144065237089
  - 0.5738744134970549
  - 0.560807409644619
  - 0.5588205746433595
  train_jaccard_weighted:
  - 0.6241563783952604
  - 0.6217841524336669
  - 0.637695802163202
  - 0.6220679943761969
  - 0.6213919073520178
  train_jaccard_weighted_oob:
  - 0.5451355477101552
  - 0.5443965183617899
  - 0.5499422446258067
  - 0.5380022873493087
  - 0.5365494988977046
  train_label_ranking_average_precision_score:
  - 0.8979064327485373
  - 0.9029128494244769
  - 0.9115944560913107
  - 0.9072410147991539
  - 0.9172468354430375
  train_label_ranking_average_precision_score_oob:
  - 0.8517251461988294
  - 0.8637538172421888
  - 0.8697006755182844
  - 0.864769790932581
  - 0.8825187529301448
  train_matthews_corrcoef_macro:
  - 0.4241596464312211
  - 0.431628893305067
  - 0.4671912564465497
  - 0.4356126630683242
  - 0.42528479133191016
  train_matthews_corrcoef_macro_oob:
  - 0.15762025558914391
  - 0.1829481060271554
  - 0.2086846435649348
  - 0.1682927870147102
  - 0.15161007757059056
  train_matthews_corrcoef_micro:
  - 0.44669153917757326
  - 0.44737207520599626
  - 0.4786396691705182
  - 0.450398432383362
  - 0.44408285601032077
  train_matthews_corrcoef_micro_oob:
  - 0.22764269610719634
  - 0.23158451962837492
  - 0.2514077622983103
  - 0.21215230574717672
  - 0.19773333017474815
  train_matthews_corrcoef_samples:
  - 0.31199774613766834
  - 0.3182177461376801
  - 0.34732881976788554
  - 0.3138780496389892
  - 0.3078328029877638
  train_matthews_corrcoef_samples_oob:
  - 0.08672101355777424
  - 0.11190210463301034
  - 0.09128283538264217
  - 0.0804427364936067
  - 0.06632534789739669
  train_matthews_corrcoef_weighted:
  - 0.43261964104975265
  - 0.43698603099817573
  - 0.47010988394728365
  - 0.44082910947520226
  - 0.4321611775051868
  train_matthews_corrcoef_weighted_oob:
  - 0.1675349421821633
  - 0.18928851661643736
  - 0.20851817060537187
  - 0.17717689357864255
  - 0.154243787985641
  train_ndgc:
  - 0.9327542100412481
  - 0.9380866950482356
  - 0.9432894789453761
  - 0.9392484566874008
  - 0.9454141666982522
  train_ndgc_oob:
  - 0.9009691001182266
  - 0.9108428784060921
  - 0.9133327469905227
  - 0.9085242142099431
  - 0.9217601783940177
  train_neg_coverage_error:
  - -2.357894736842105
  - -2.350951374207188
  - -2.29979035639413
  - -2.3128964059196617
  - -2.2953586497890295
  train_neg_coverage_error_oob:
  - -2.5389473684210526
  - -2.539112050739958
  - -2.50104821802935
  - -2.473572938689218
  - -2.4451476793248945
  train_neg_hamming_loss_macro:
  - -0.2280701754385965
  - -0.22868217054263565
  - -0.21663172606568834
  - -0.2283298097251586
  - -0.22960618846694794
  train_neg_hamming_loss_macro_oob:
  - -0.28771929824561404
  - -0.2871740662438336
  - -0.28232005590496156
  - -0.29281183932346727
  - -0.29360056258790435
  train_neg_hamming_loss_micro:
  - -0.22807017543859648
  - -0.22868217054263565
  - -0.21663172606568834
  - -0.22832980972515857
  - -0.22960618846694797
  train_neg_hamming_loss_micro_oob:
  - -0.28771929824561404
  - -0.2871740662438337
  - -0.28232005590496156
  - -0.2928118393234672
  - -0.29360056258790435
  train_neg_hamming_loss_samples:
  - -0.22807017543859648
  - -0.22868217054263568
  - -0.2166317260656883
  - -0.22832980972515857
  - -0.22960618846694794
  train_neg_hamming_loss_samples_oob:
  - -0.2877192982456141
  - -0.2871740662438336
  - -0.28232005590496156
  - -0.2928118393234672
  - -0.2936005625879044
  train_neg_hamming_loss_weighted:
  - -0.232111804936069
  - -0.23412586678374908
  - -0.2222364033004096
  - -0.23403662647848694
  - -0.23432484689163838
  train_neg_hamming_loss_weighted_oob:
  - -0.296109426107642
  - -0.2975913791704647
  - -0.2934135982358739
  - -0.3024803344570786
  - -0.30425941271156576
  train_neg_label_ranking_loss:
  - -0.08247368421052631
  - -0.07662085976039464
  - -0.07064989517819707
  - -0.07075992482969226
  - -0.07069854664791372
  train_neg_label_ranking_loss_oob:
  - -0.11795321637426899
  - -0.10904392764857883
  - -0.10806545539249941
  - -0.10342964529011042
  - -0.09648968588842005
  train_precision_macro:
  - 0.7719298245614036
  - 0.7713178294573644
  - 0.7833682739343116
  - 0.7716701902748414
  - 0.7703938115330521
  train_precision_macro_oob:
  - 0.712280701754386
  - 0.7128259337561663
  - 0.7176799440950385
  - 0.7071881606765328
  - 0.7063994374120957
  train_precision_micro:
  - 0.7719298245614035
  - 0.7713178294573644
  - 0.7833682739343116
  - 0.7716701902748414
  - 0.7703938115330521
  train_precision_micro_oob:
  - 0.712280701754386
  - 0.7128259337561663
  - 0.7176799440950384
  - 0.7071881606765328
  - 0.7063994374120957
  train_precision_samples:
  - 0.7719298245614035
  - 0.7713178294573644
  - 0.7833682739343117
  - 0.7716701902748414
  - 0.770393811533052
  train_precision_samples_oob:
  - 0.7122807017543861
  - 0.7128259337561662
  - 0.7176799440950385
  - 0.7071881606765328
  - 0.7063994374120957
  train_precision_weighted:
  - 0.7678881950639311
  - 0.765874133216251
  - 0.7777635966995904
  - 0.765963373521513
  - 0.7656751531083617
  train_precision_weighted_oob:
  - 0.7038905738923581
  - 0.7024086208295353
  - 0.7065864017641261
  - 0.6975196655429213
  - 0.6957405872884344
  train_recall_macro:
  - 0.7719298245614036
  - 0.7713178294573644
  - 0.7833682739343116
  - 0.7716701902748414
  - 0.7703938115330521
  train_recall_macro_oob:
  - 0.712280701754386
  - 0.7128259337561663
  - 0.7176799440950385
  - 0.7071881606765328
  - 0.7063994374120957
  train_recall_micro:
  - 0.7719298245614035
  - 0.7713178294573644
  - 0.7833682739343116
  - 0.7716701902748414
  - 0.7703938115330521
  train_recall_micro_oob:
  - 0.712280701754386
  - 0.7128259337561663
  - 0.7176799440950384
  - 0.7071881606765328
  - 0.7063994374120957
  train_recall_samples:
  - 0.7719298245614035
  - 0.7713178294573644
  - 0.7833682739343117
  - 0.7716701902748414
  - 0.770393811533052
  train_recall_samples_oob:
  - 0.7122807017543861
  - 0.7128259337561662
  - 0.7176799440950385
  - 0.7071881606765328
  - 0.7063994374120957
  train_recall_weighted:
  - 0.7678881950639311
  - 0.765874133216251
  - 0.7777635966995904
  - 0.765963373521513
  - 0.7656751531083617
  train_recall_weighted_oob:
  - 0.7038905738923581
  - 0.7024086208295353
  - 0.7065864017641261
  - 0.6975196655429213
  - 0.6957405872884344
  train_roc_auc_macro:
  - 0.9294630583211859
  - 0.9291677461779609
  - 0.9301822430780998
  - 0.9355047978447986
  - 0.9327963384081651
  train_roc_auc_macro_oob:
  - 0.899961357888316
  - 0.902882320779311
  - 0.9012837941425639
  - 0.9045475104480216
  - 0.9073033679358332
  train_roc_auc_micro:
  - 0.938395940253878
  - 0.9365060550271992
  - 0.9370359482254221
  - 0.9426305151305151
  - 0.9399857504202243
  train_roc_auc_micro_oob:
  - 0.9092825002515779
  - 0.9076116872664026
  - 0.9097740927318653
  - 0.9131340956340956
  - 0.9154536462092197
  train_roc_auc_samples:
  - 0.9175263157894736
  - 0.9233791402396053
  - 0.9293501048218029
  - 0.9292400751703077
  - 0.9293014533520864
  train_roc_auc_samples_oob:
  - 0.882046783625731
  - 0.8909560723514212
  - 0.8919345446075005
  - 0.8965703547098895
  - 0.90351031411158
  train_roc_auc_weighted:
  - 0.928337236182807
  - 0.9290207878384023
  - 0.9299722011603263
  - 0.9337043917683089
  - 0.9330668781408418
  train_roc_auc_weighted_oob:
  - 0.8993366889852265
  - 0.903164087304387
  - 0.9014410714802876
  - 0.9029224990889126
  - 0.9083852745017104
start: 2023-12-22 04:38:08.549572
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
