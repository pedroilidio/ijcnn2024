active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzC0AAmZmZmZn5v4DMzMzMzATAAJmZmZmZ+b+AMzMzMzMDQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 20:47:39.986160
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__8
  params: {}
hash: 468248e2f0a62305ce7a0e54d8bcde4d037fe860b1945680af69065c0fd97fcb
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/468248e_20231222T201815946506_embedding_proba_weak__8_scene.yml
results:
  fit_time:
  - 1394.997222185135
  - 1665.8364071846008
  - 1465.4046986103058
  - 1532.759072303772
  - 1619.8314754962921
  score_time:
  - 20.926180601119995
  - 17.491507291793823
  - 17.56828284263611
  - 18.289294004440308
  - 17.597776412963867
  test_average_precision_macro:
  - 0.8471891923529774
  - 0.8524808954939777
  - 0.8292606957251771
  - 0.8341744318658494
  - 0.8219999262671527
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8392378308234036
  - 0.8439566737384424
  - 0.8246224411521645
  - 0.8250642642465709
  - 0.8192298239817157
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8869769874476988
  - 0.8752933057280883
  - 0.8846418732782368
  - 0.8746376811594203
  - 0.868893528183716
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8388855980684254
  - 0.8399577825429538
  - 0.8168878817959395
  - 0.822350815379186
  - 0.8090338503897863
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9215481171548117
  - 0.9209799861973775
  - 0.9225206611570247
  - 0.9189095928226364
  - 0.9126652748782185
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9215481171548117
  - 0.9209799861973775
  - 0.9225206611570248
  - 0.9189095928226363
  - 0.9126652748782185
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9215481171548117
  - 0.9209799861973774
  - 0.9225206611570248
  - 0.9189095928226364
  - 0.9126652748782186
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9179294357118625
  - 0.9160869965680325
  - 0.9179199500288294
  - 0.9141268236313737
  - 0.9076704201965162
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8561483833066171
  - 0.856337474600815
  - 0.8588100095563446
  - 0.8537026157501822
  - 0.8424325292149781
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8545101842870999
  - 0.8535337384074193
  - 0.8561840843720039
  - 0.8499840408554101
  - 0.83936
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8779637377963737
  - 0.8764172335600907
  - 0.8798209366391185
  - 0.8721778566499062
  - 0.8636047320807236
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8500464447344812
  - 0.8481688851219191
  - 0.8510252845550703
  - 0.8457601977335123
  - 0.8342362926383227
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8869769874476985
  - 0.8752933057280882
  - 0.8846418732782366
  - 0.87463768115942
  - 0.8688935281837157
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7282138219786468
  - 0.7277422778244973
  - 0.7340952506806938
  - 0.7146157632359897
  - 0.6964300330337259
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7212219203777671
  - 0.7173619500777902
  - 0.7246550442876019
  - 0.7073784965160317
  - 0.6875747492881057
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.701383657533142
  - 0.6932584758444629
  - 0.7135148975805302
  - 0.6762727551271761
  - 0.6654305019394083
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7182778443644116
  - 0.7135664011181083
  - 0.720335364301066
  - 0.7007665293762759
  - 0.6819508890625483
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9168559761146801
  - 0.9076804330484094
  - 0.9150473511395774
  - 0.9074192080275774
  - 0.9033767302864655
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4246861924686192
  - -1.4306418219461698
  - -1.396694214876033
  - -1.443064182194617
  - -1.4739039665970772
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0784518828451883
  - -0.07902001380262251
  - -0.07747933884297521
  - -0.08109040717736371
  - -0.08733472512178149
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07845188284518828
  - -0.0790200138026225
  - -0.07747933884297521
  - -0.0810904071773637
  - -0.08733472512178149
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07845188284518828
  - -0.0790200138026225
  - -0.07747933884297521
  - -0.0810904071773637
  - -0.08733472512178148
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.08207056428813751
  - -0.08391300343196736
  - -0.08208004997117048
  - -0.08587317636862632
  - -0.09232957980348376
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06678870292887029
  - -0.07039337474120083
  - -0.0640495867768595
  - -0.07298136645962733
  - -0.07620041753653445
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9215481171548117
  - 0.9209799861973775
  - 0.9225206611570247
  - 0.9189095928226364
  - 0.9126652748782185
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9215481171548117
  - 0.9209799861973775
  - 0.9225206611570248
  - 0.9189095928226363
  - 0.9126652748782185
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9215481171548117
  - 0.9209799861973774
  - 0.9225206611570248
  - 0.9189095928226364
  - 0.9126652748782186
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9179294357118625
  - 0.9160869965680325
  - 0.9179199500288294
  - 0.9141268236313737
  - 0.9076704201965162
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9215481171548117
  - 0.9209799861973775
  - 0.9225206611570247
  - 0.9189095928226364
  - 0.9126652748782185
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9215481171548117
  - 0.9209799861973775
  - 0.9225206611570248
  - 0.9189095928226363
  - 0.9126652748782185
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9215481171548117
  - 0.9209799861973774
  - 0.9225206611570248
  - 0.9189095928226364
  - 0.9126652748782186
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9179294357118625
  - 0.9160869965680325
  - 0.9179199500288294
  - 0.9141268236313737
  - 0.9076704201965162
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9447736950192062
  - 0.9500487916723634
  - 0.9401545268922932
  - 0.9380715581626742
  - 0.9382162172077145
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9486687751581367
  - 0.953153470779714
  - 0.9456796255177697
  - 0.9420239978130552
  - 0.9429469488892239
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9332112970711298
  - 0.9296066252587992
  - 0.9359504132231405
  - 0.9270186335403726
  - 0.9237995824634656
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9403988708436799
  - 0.9450004361976964
  - 0.9340027660734443
  - 0.9324364559003067
  - 0.9324514796714913
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9854276195393218
  - 0.9819776826313774
  - 0.9831529138989121
  - 0.9840345575609581
  - 0.98255937889213
  train_average_precision_macro_oob:
  - 0.9639564914250011
  - 0.9578116336184864
  - 0.9601464547867372
  - 0.9613907415628974
  - 0.9589615098371067
  train_average_precision_micro:
  - 0.9850431660493606
  - 0.9796039738262119
  - 0.9817223725601377
  - 0.9824356006553108
  - 0.9807830617591862
  train_average_precision_micro_oob:
  - 0.9631663030348666
  - 0.955221149151809
  - 0.958586030780752
  - 0.9581551510212322
  - 0.956551720361616
  train_average_precision_samples:
  - 0.9803006739243131
  - 0.979989604989605
  - 0.9810625758363669
  - 0.9799029799029798
  - 0.9802040110650069
  train_average_precision_samples_oob:
  - 0.9641696906860203
  - 0.9602650727650729
  - 0.9648379268504073
  - 0.9602390852390852
  - 0.9618948824343015
  train_average_precision_weighted:
  - 0.9845449104003378
  - 0.9808148987864566
  - 0.9820638308609673
  - 0.9833319416869852
  - 0.981253325855656
  train_average_precision_weighted_oob:
  - 0.9624820546360308
  - 0.9563094121783543
  - 0.9584177478384291
  - 0.9602502456048098
  - 0.9568733863480147
  train_f1_macro:
  - 0.9782270606531882
  - 0.9773908523908523
  - 0.9792858381001907
  - 0.9776507276507277
  - 0.978734439834025
  train_f1_macro_oob:
  - 0.9638845688612406
  - 0.9635308385308385
  - 0.9662853180793899
  - 0.9642238392238393
  - 0.9642980636237898
  train_f1_micro:
  - 0.9782270606531882
  - 0.9773908523908524
  - 0.9792858381001907
  - 0.9776507276507277
  - 0.9787344398340249
  train_f1_micro_oob:
  - 0.9638845688612407
  - 0.9635308385308385
  - 0.9662853180793899
  - 0.9642238392238393
  - 0.9642980636237898
  train_f1_samples:
  - 0.9782270606531882
  - 0.9773908523908524
  - 0.9792858381001905
  - 0.9776507276507277
  - 0.9787344398340249
  train_f1_samples_oob:
  - 0.9638845688612407
  - 0.9635308385308387
  - 0.9662853180793898
  - 0.9642238392238393
  - 0.9642980636237897
  train_f1_weighted:
  - 0.977675802553293
  - 0.9769374530012829
  - 0.978796522571391
  - 0.9772108614544573
  - 0.9782599313054179
  train_f1_weighted_oob:
  - 0.9632425212107715
  - 0.9629122315292526
  - 0.965520283450294
  - 0.9635363232511613
  - 0.9636590705153297
  train_jaccard_macro:
  - 0.957465411409086
  - 0.9559175879707048
  - 0.9594937017385173
  - 0.9563677823398772
  - 0.9584392202264983
  train_jaccard_macro_oob:
  - 0.9303675625502056
  - 0.9297329894924508
  - 0.9348841987789466
  - 0.9310769279357572
  - 0.9311520760117936
  train_jaccard_micro:
  - 0.9573820395738204
  - 0.9557814485387548
  - 0.9594124140273415
  - 0.9562785968479919
  - 0.9583544946673438
  train_jaccard_micro_oob:
  - 0.9302868579052702
  - 0.9296280819055579
  - 0.9347698499203488
  - 0.9309191268712887
  - 0.9310575077205575
  train_jaccard_samples:
  - 0.964785603199289
  - 0.9636050886050886
  - 0.9665948542703613
  - 0.9640505890505892
  - 0.965742936178621
  train_jaccard_samples_oob:
  - 0.9410254511343158
  - 0.9408845658845658
  - 0.9452863828838868
  - 0.9420230670230669
  - 0.9420075083975499
  train_jaccard_weighted:
  - 0.9564054273950388
  - 0.9550436703983622
  - 0.9585496374955673
  - 0.9555196886747658
  - 0.9575229339979031
  train_jaccard_weighted_oob:
  - 0.9291710607781299
  - 0.9285758859034503
  - 0.9334496858509489
  - 0.9297856575144808
  - 0.9299531334458387
  train_label_ranking_average_precision_score:
  - 0.980300673924313
  - 0.979989604989605
  - 0.9810625758363668
  - 0.9799029799029798
  - 0.9802040110650069
  train_label_ranking_average_precision_score_oob:
  - 0.9641696906860202
  - 0.9602650727650727
  - 0.9648379268504069
  - 0.9602390852390849
  - 0.9618948824343014
  train_matthews_corrcoef_macro:
  - 0.9253780522147044
  - 0.922521300998445
  - 0.929327682612252
  - 0.9235155865001062
  - 0.9271561032152178
  train_matthews_corrcoef_macro_oob:
  - 0.8737615953476401
  - 0.8729818202504175
  - 0.8833407569396368
  - 0.8758308621574257
  - 0.8754640686153278
  train_matthews_corrcoef_micro:
  - 0.9246436053365735
  - 0.921979481978462
  - 0.9286512812227428
  - 0.922842601871607
  - 0.9265046197417293
  train_matthews_corrcoef_micro_oob:
  - 0.873326639275689
  - 0.872445044364092
  - 0.882455543526462
  - 0.874966281173995
  - 0.8748977016645231
  train_matthews_corrcoef_samples:
  - 0.9169759141998498
  - 0.917917053281599
  - 0.9226406458698768
  - 0.9167908833037113
  - 0.9202355202071973
  train_matthews_corrcoef_samples_oob:
  - 0.8455889179649015
  - 0.8515933357976256
  - 0.8638153378973382
  - 0.8529832947260637
  - 0.8485198597313761
  train_matthews_corrcoef_weighted:
  - 0.924212241016689
  - 0.9216475194211808
  - 0.9283217233245515
  - 0.9226960385263505
  - 0.9261901733896297
  train_matthews_corrcoef_weighted_oob:
  - 0.8728761114647055
  - 0.8721132269355996
  - 0.8819159178814289
  - 0.8746549066376701
  - 0.874477635160434
  train_ndgc:
  - 0.9854700136580533
  - 0.9852759975070072
  - 0.9860329504605908
  - 0.9852079466995376
  - 0.9854300620831634
  train_ndgc_oob:
  - 0.9737676741772927
  - 0.9712254007897395
  - 0.9743360114340074
  - 0.9709569849766928
  - 0.9722979848681574
  train_neg_coverage_error:
  - -1.1124935199585277
  - -1.115904365904366
  - -1.1154446177847115
  - -1.116943866943867
  - -1.1130705394190872
  train_neg_coverage_error_oob:
  - -1.181959564541213
  - -1.20010395010395
  - -1.188247529901196
  - -1.1995841995841996
  - -1.1867219917012448
  train_neg_hamming_loss_macro:
  - -0.02177293934681182
  - -0.022609147609147607
  - -0.020714161899809326
  - -0.02234927234927235
  - -0.0212655601659751
  train_neg_hamming_loss_macro_oob:
  - -0.03611543113875929
  - -0.03646916146916147
  - -0.03371468192061016
  - -0.035776160776160776
  - -0.03570193637621024
  train_neg_hamming_loss_micro:
  - -0.02177293934681182
  - -0.02260914760914761
  - -0.020714161899809326
  - -0.02234927234927235
  - -0.021265560165975105
  train_neg_hamming_loss_micro_oob:
  - -0.036115431138759285
  - -0.03646916146916147
  - -0.03371468192061016
  - -0.035776160776160776
  - -0.03570193637621023
  train_neg_hamming_loss_samples:
  - -0.02177293934681182
  - -0.02260914760914761
  - -0.020714161899809323
  - -0.02234927234927235
  - -0.0212655601659751
  train_neg_hamming_loss_samples_oob:
  - -0.036115431138759285
  - -0.03646916146916147
  - -0.033714681920610154
  - -0.035776160776160776
  - -0.03570193637621024
  train_neg_hamming_loss_weighted:
  - -0.022324197446706908
  - -0.023062546998717213
  - -0.021203477428608987
  - -0.022789138545542608
  - -0.02174006869458212
  train_neg_hamming_loss_weighted_oob:
  - -0.03675747878922854
  - -0.03708776847074719
  - -0.03447971654970597
  - -0.036463676748838665
  - -0.03634092948467019
  train_neg_label_ranking_loss:
  - -0.008203732503888025
  - -0.008238045738045739
  - -0.00794331773270931
  - -0.008341995841995842
  - -0.008220954356846473
  train_neg_label_ranking_loss_oob:
  - -0.02102125453602903
  - -0.023180873180873182
  - -0.021164846593863754
  - -0.02368762993762994
  - -0.021434128630705394
  train_precision_macro:
  - 0.9782270606531882
  - 0.9773908523908523
  - 0.9792858381001907
  - 0.9776507276507277
  - 0.978734439834025
  train_precision_macro_oob:
  - 0.9638845688612406
  - 0.9635308385308385
  - 0.9662853180793899
  - 0.9642238392238393
  - 0.9642980636237898
  train_precision_micro:
  - 0.9782270606531882
  - 0.9773908523908524
  - 0.9792858381001907
  - 0.9776507276507277
  - 0.9787344398340249
  train_precision_micro_oob:
  - 0.9638845688612407
  - 0.9635308385308385
  - 0.9662853180793899
  - 0.9642238392238393
  - 0.9642980636237898
  train_precision_samples:
  - 0.9782270606531882
  - 0.9773908523908524
  - 0.9792858381001905
  - 0.9776507276507277
  - 0.9787344398340249
  train_precision_samples_oob:
  - 0.9638845688612407
  - 0.9635308385308387
  - 0.9662853180793898
  - 0.9642238392238393
  - 0.9642980636237897
  train_precision_weighted:
  - 0.977675802553293
  - 0.9769374530012829
  - 0.978796522571391
  - 0.9772108614544573
  - 0.9782599313054179
  train_precision_weighted_oob:
  - 0.9632425212107715
  - 0.9629122315292526
  - 0.965520283450294
  - 0.9635363232511613
  - 0.9636590705153297
  train_recall_macro:
  - 0.9782270606531882
  - 0.9773908523908523
  - 0.9792858381001907
  - 0.9776507276507277
  - 0.978734439834025
  train_recall_macro_oob:
  - 0.9638845688612406
  - 0.9635308385308385
  - 0.9662853180793899
  - 0.9642238392238393
  - 0.9642980636237898
  train_recall_micro:
  - 0.9782270606531882
  - 0.9773908523908524
  - 0.9792858381001907
  - 0.9776507276507277
  - 0.9787344398340249
  train_recall_micro_oob:
  - 0.9638845688612407
  - 0.9635308385308385
  - 0.9662853180793899
  - 0.9642238392238393
  - 0.9642980636237898
  train_recall_samples:
  - 0.9782270606531882
  - 0.9773908523908524
  - 0.9792858381001905
  - 0.9776507276507277
  - 0.9787344398340249
  train_recall_samples_oob:
  - 0.9638845688612407
  - 0.9635308385308387
  - 0.9662853180793898
  - 0.9642238392238393
  - 0.9642980636237897
  train_recall_weighted:
  - 0.977675802553293
  - 0.9769374530012829
  - 0.978796522571391
  - 0.9772108614544573
  - 0.9782599313054179
  train_recall_weighted_oob:
  - 0.9632425212107715
  - 0.9629122315292526
  - 0.965520283450294
  - 0.9635363232511613
  - 0.9636590705153297
  train_roc_auc_macro:
  - 0.9972408384276087
  - 0.9967810502446538
  - 0.9970501534178072
  - 0.9970926805264003
  - 0.9968070508701617
  train_roc_auc_macro_oob:
  - 0.9886296077122717
  - 0.9870248419743001
  - 0.9874310284763966
  - 0.9880058268293466
  - 0.9873473382717929
  train_roc_auc_micro:
  - 0.9973404873825814
  - 0.9966469551908803
  - 0.996963559601602
  - 0.9970100656633735
  - 0.9967824536281084
  train_roc_auc_micro_oob:
  - 0.9889833931344556
  - 0.9870815857305802
  - 0.9876730360897337
  - 0.9879127361949421
  - 0.9874474038762603
  train_roc_auc_samples:
  - 0.9917962674961119
  - 0.9917619542619543
  - 0.9920566822672906
  - 0.9916580041580043
  - 0.9917790456431536
  train_roc_auc_samples_oob:
  - 0.9789787454639711
  - 0.9768191268191269
  - 0.9788351534061362
  - 0.97631237006237
  - 0.9785658713692946
  train_roc_auc_weighted:
  - 0.9970514985205913
  - 0.996571154873668
  - 0.9968648659991499
  - 0.996962599470385
  - 0.9965593457239617
  train_roc_auc_weighted_oob:
  - 0.9880080954290462
  - 0.9864478115514056
  - 0.9868158980875609
  - 0.9874609252236951
  - 0.9866786935645484
start: 2023-12-22 20:18:15.946506
wrapper: null
