active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT+QmZmZmZnpvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv0AzMzMzM+O/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r8ANDMzMzPjP4CZmZmZmRHAAJiZmZmZ2b+AZmZmZmYWQA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 07:03:01.969188
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__0
  params: {}
hash: ed4f460bf54fe6cc723b6db01dcd6d648729dee090c6f06c2acb702b064a5ce2
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ed4f460_20231222T070247524819_embedding_proba__0_PlantGO.yml
results:
  fit_time:
  - 1.574167013168335
  - 1.6287662982940674
  - 1.5780339241027832
  - 1.6643023490905762
  - 1.6233792304992676
  score_time:
  - 1.8304104804992676
  - 1.7362346649169922
  - 1.9185724258422852
  - 1.7496891021728516
  - 1.7026760578155518
  test_average_precision_macro:
  - 0.8110170631906821
  - 0.8097589177920987
  - 0.8360998773495586
  - 0.7168507071817998
  - 0.8681903000555048
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7423819807522705
  - 0.76580441337444
  - 0.7657827274585582
  - 0.7530723291178562
  - 0.7829999411880297
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8149323181049068
  - 0.8604558404558404
  - 0.8392420634920634
  - 0.8275834143181082
  - 0.8581641604010025
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8489992841589494
  - 0.8614790679206662
  - 0.8592295423385821
  - 0.8171869144372867
  - 0.878262377804488
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9318950930626059
  - 0.9294871794871794
  - 0.9341666666666667
  - 0.9336734693877551
  - 0.9271929824561403
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9318950930626058
  - 0.9294871794871795
  - 0.9341666666666667
  - 0.9336734693877551
  - 0.9271929824561403
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9318950930626057
  - 0.9294871794871795
  - 0.9341666666666666
  - 0.9336734693877551
  - 0.9271929824561405
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8971780498953495
  - 0.8884004884004882
  - 0.9022641509433962
  - 0.9003530322081438
  - 0.8876777251184834
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8764685900271242
  - 0.872632764776287
  - 0.8804440360560055
  - 0.8793644250002984
  - 0.8687849997624181
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8724752475247525
  - 0.8682634730538922
  - 0.8764659890539483
  - 0.8755980861244019
  - 0.8642681929681112
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8766106989457243
  - 0.8719639335023949
  - 0.8801978021978022
  - 0.8795469836286163
  - 0.8681087333718912
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8172015957928811
  - 0.8027908080731964
  - 0.8259556981454581
  - 0.8223679052830137
  - 0.8019566567304394
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8149323181049071
  - 0.8604558404558404
  - 0.8392420634920633
  - 0.8275834143181078
  - 0.8581641604010025
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1268428683861808
  - 0.13111358078089044
  - 0.12583505271930037
  - 0.1378573885535961
  - 0.10395302593934698
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4698409459739675
  - 0.4450339269146214
  - 0.48618385648138746
  - 0.49163993238041365
  - 0.4432005245503628
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.29203156297839933
  - 0.25539971886908686
  - 0.28946927135190514
  - 0.2988166027185932
  - 0.24298200812162263
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3192625921566591
  - 0.3220818736535382
  - 0.32626593864110687
  - 0.3396987201567635
  - 0.27108862037351755
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8618336794016765
  - 0.8968882174626907
  - 0.8802941790517971
  - 0.8724231457879309
  - 0.8953454254398908
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7258883248730965
  - -1.5743589743589743
  - -1.6
  - -1.8622448979591837
  - -1.6263157894736842
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06810490693739425
  - -0.07051282051282051
  - -0.06583333333333334
  - -0.0663265306122449
  - -0.07280701754385964
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06810490693739425
  - -0.07051282051282051
  - -0.06583333333333333
  - -0.0663265306122449
  - -0.07280701754385965
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06810490693739424
  - -0.07051282051282051
  - -0.06583333333333333
  - -0.0663265306122449
  - -0.07280701754385964
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10282195010465033
  - -0.1115995115995116
  - -0.09773584905660376
  - -0.09964696779185607
  - -0.1123222748815166
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05867558837101984
  - -0.04242424242424242
  - -0.04827946127946128
  - -0.0653164296021439
  - -0.043725855041644515
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9318950930626059
  - 0.9294871794871794
  - 0.9341666666666667
  - 0.9336734693877551
  - 0.9271929824561403
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9318950930626058
  - 0.9294871794871795
  - 0.9341666666666667
  - 0.9336734693877551
  - 0.9271929824561403
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9318950930626057
  - 0.9294871794871795
  - 0.9341666666666666
  - 0.9336734693877551
  - 0.9271929824561405
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8971780498953495
  - 0.8884004884004882
  - 0.9022641509433962
  - 0.9003530322081438
  - 0.8876777251184834
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9318950930626059
  - 0.9294871794871794
  - 0.9341666666666667
  - 0.9336734693877551
  - 0.9271929824561403
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9318950930626058
  - 0.9294871794871795
  - 0.9341666666666667
  - 0.9336734693877551
  - 0.9271929824561403
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9318950930626057
  - 0.9294871794871795
  - 0.9341666666666666
  - 0.9336734693877551
  - 0.9271929824561405
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8971780498953495
  - 0.8884004884004882
  - 0.9022641509433962
  - 0.9003530322081438
  - 0.8876777251184834
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9691550788486168
  - 0.9714395113627398
  - 0.9810498002093982
  - 0.9620553337549166
  - 0.9826002915755052
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.95491356709364
  - 0.9613749161636486
  - 0.9637775516539615
  - 0.9472353132588528
  - 0.9649440281840485
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9413244116289802
  - 0.9575757575757575
  - 0.9517205387205387
  - 0.934683570397856
  - 0.9562741449583556
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9705274179536213
  - 0.9738033529572958
  - 0.9746378821435704
  - 0.9662493752210464
  - 0.9759377815205338
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8461935011416707
  - 0.8607703195819364
  - 0.8454412470002072
  - 0.867570413954617
  - 0.8377442213867704
  train_average_precision_macro_oob:
  - 0.7077145813691669
  - 0.7309582180441682
  - 0.7311117257668326
  - 0.7467129535881156
  - 0.7131297620291447
  train_average_precision_micro:
  - 0.8030867364686869
  - 0.7996662961337955
  - 0.8027883204787901
  - 0.8132061652813382
  - 0.7914157654663483
  train_average_precision_micro_oob:
  - 0.7502961839552378
  - 0.743179240443383
  - 0.7442726630105654
  - 0.7568475852609083
  - 0.7363375535636701
  train_average_precision_samples:
  - 0.8526685364713534
  - 0.8690982991749274
  - 0.8698637124086995
  - 0.8778701335606706
  - 0.8642197445814197
  train_average_precision_samples_oob:
  - 0.8099414669837205
  - 0.8323440572482717
  - 0.83636716040315
  - 0.8400154264604393
  - 0.8272540946081555
  train_average_precision_weighted:
  - 0.8963541767595713
  - 0.8913829530008747
  - 0.890766020486483
  - 0.8998884875133148
  - 0.8826699677678077
  train_average_precision_weighted_oob:
  - 0.8147241811182
  - 0.8079043800262146
  - 0.8146424533653451
  - 0.8226219949804555
  - 0.8048569884731073
  train_f1_macro:
  - 0.9341655996585573
  - 0.9338016177096639
  - 0.935197086546701
  - 0.9349957374254049
  - 0.9332698815566837
  train_f1_macro_oob:
  - 0.9310712761416986
  - 0.9308216262239252
  - 0.9315552699228791
  - 0.9317988064791133
  - 0.9306260575296109
  train_f1_micro:
  - 0.9341655996585574
  - 0.9338016177096636
  - 0.935197086546701
  - 0.934995737425405
  - 0.9332698815566836
  train_f1_micro_oob:
  - 0.9310712761416987
  - 0.9308216262239251
  - 0.9315552699228792
  - 0.9317988064791134
  - 0.9306260575296108
  train_f1_samples:
  - 0.9341655996585573
  - 0.9338016177096636
  - 0.9351970865467009
  - 0.9349957374254049
  - 0.9332698815566836
  train_f1_samples_oob:
  - 0.9310712761416986
  - 0.930821626223925
  - 0.9315552699228791
  - 0.9317988064791132
  - 0.9306260575296107
  train_f1_weighted:
  - 0.9023657238562784
  - 0.900507077164902
  - 0.9046312136542585
  - 0.9037405607204761
  - 0.8966758486299227
  train_f1_weighted_oob:
  - 0.8940612654817315
  - 0.8942075313428098
  - 0.8963748029287008
  - 0.896180046302469
  - 0.8907336348545721
  train_jaccard_macro:
  - 0.8802568625823045
  - 0.8795424200527254
  - 0.8816707596635919
  - 0.8813565603997779
  - 0.8787247359291229
  train_jaccard_macro_oob:
  - 0.8751458862481339
  - 0.8747529012584949
  - 0.8758128855819559
  - 0.8762188212276301
  - 0.874424028353857
  train_jaccard_micro:
  - 0.8764641105215737
  - 0.8758235176681972
  - 0.8782818629916508
  - 0.8779267560536321
  - 0.8748884703083176
  train_jaccard_micro_oob:
  - 0.8710321421441406
  - 0.8705952617957396
  - 0.8718796992481203
  - 0.8723064644852354
  - 0.870253164556962
  train_jaccard_samples:
  - 0.8805251086941227
  - 0.8797636590740039
  - 0.8824430068646006
  - 0.8819482307973354
  - 0.8786913594020193
  train_jaccard_samples_oob:
  - 0.8748687931786524
  - 0.874402481299033
  - 0.8758609000254245
  - 0.8763272533093504
  - 0.8738383443967199
  train_jaccard_weighted:
  - 0.8259438309749304
  - 0.8226153009266878
  - 0.8291207823227821
  - 0.8276178000827725
  - 0.8162418291607333
  train_jaccard_weighted_oob:
  - 0.81211453236837
  - 0.8124173350337508
  - 0.8156999005616238
  - 0.8153519627890313
  - 0.8065957554449826
  train_label_ranking_average_precision_score:
  - 0.8526685364713542
  - 0.869098299174928
  - 0.8698637124087003
  - 0.8778701335606713
  - 0.8642197445814204
  train_label_ranking_average_precision_score_oob:
  - 0.8099414669837206
  - 0.8323440572482723
  - 0.8363671604031512
  - 0.8400154264604398
  - 0.8272540946081559
  train_matthews_corrcoef_macro:
  - 0.146394683691582
  - 0.14680714461463865
  - 0.162087380129599
  - 0.16006637674257096
  - 0.146724418370238
  train_matthews_corrcoef_macro_oob:
  - 0.12736327243462306
  - 0.11960148978053621
  - 0.13893605424896774
  - 0.14140429508970923
  - 0.12672312156752003
  train_matthews_corrcoef_micro:
  - 0.49951027669451814
  - 0.4947150312003291
  - 0.512132549953745
  - 0.5074376825290074
  - 0.4837364946249856
  train_matthews_corrcoef_micro_oob:
  - 0.46572401683236775
  - 0.46189476407683727
  - 0.4732563507686823
  - 0.47305575142105155
  - 0.45391896534443865
  train_matthews_corrcoef_samples:
  - 0.3081804427142419
  - 0.30219746648314627
  - 0.3253380436207566
  - 0.31739630054713264
  - 0.2907238557735519
  train_matthews_corrcoef_samples_oob:
  - 0.27262972702490473
  - 0.2692629728167836
  - 0.2844798064218336
  - 0.28469116361423735
  - 0.26015163611503783
  train_matthews_corrcoef_weighted:
  - 0.3579172849120035
  - 0.3547047507074241
  - 0.39016529086875135
  - 0.385705092639124
  - 0.3502318555721678
  train_matthews_corrcoef_weighted_oob:
  - 0.3155211806842717
  - 0.3030128313990009
  - 0.34403885970085635
  - 0.346390409831631
  - 0.3091988308857812
  train_ndgc:
  - 0.8910822599690573
  - 0.9032041401565573
  - 0.9037722934350486
  - 0.9097455710883529
  - 0.8994458049919316
  train_ndgc_oob:
  - 0.8585983640978583
  - 0.8755221747295348
  - 0.8785331131231645
  - 0.8812927145636393
  - 0.8713566600622231
  train_neg_coverage_error:
  - -1.6056338028169015
  - -1.5146871008939975
  - -1.5269922879177378
  - -1.4680306905370843
  - -1.5418781725888324
  train_neg_coverage_error_oob:
  - -1.8130601792573624
  - -1.7177522349936143
  - -1.7300771208226222
  - -1.659846547314578
  - -1.7246192893401016
  train_neg_hamming_loss_macro:
  - -0.0658344003414426
  - -0.06619838229033632
  - -0.06480291345329907
  - -0.06500426257459506
  - -0.0667301184433164
  train_neg_hamming_loss_macro_oob:
  - -0.06892872385830132
  - -0.06917837377607493
  - -0.06844473007712083
  - -0.06820119352088662
  - -0.06937394247038915
  train_neg_hamming_loss_micro:
  - -0.0658344003414426
  - -0.06619838229033631
  - -0.06480291345329905
  - -0.06500426257459506
  - -0.06673011844331642
  train_neg_hamming_loss_micro_oob:
  - -0.06892872385830132
  - -0.06917837377607493
  - -0.06844473007712082
  - -0.06820119352088662
  - -0.06937394247038917
  train_neg_hamming_loss_samples:
  - -0.0658344003414426
  - -0.06619838229033631
  - -0.06480291345329907
  - -0.06500426257459505
  - -0.0667301184433164
  train_neg_hamming_loss_samples_oob:
  - -0.06892872385830133
  - -0.06917837377607493
  - -0.06844473007712082
  - -0.06820119352088663
  - -0.06937394247038917
  train_neg_hamming_loss_weighted:
  - -0.09763427614372146
  - -0.09949292283509789
  - -0.09536878634574159
  - -0.0962594392795239
  - -0.10332415137007722
  train_neg_hamming_loss_weighted_oob:
  - -0.1059387345182686
  - -0.10579246865719015
  - -0.10362519707129941
  - -0.10381995369753094
  - -0.10926636514542785
  train_neg_label_ranking_loss:
  - -0.04489603676543497
  - -0.037608524581704654
  - -0.03823669427782539
  - -0.03379123717998399
  - -0.040673443401869805
  train_neg_label_ranking_loss_oob:
  - -0.06345464892199848
  - -0.055065770519154934
  - -0.0556858213670553
  - -0.0504643622930068
  - -0.05723606624621855
  train_precision_macro:
  - 0.9341655996585573
  - 0.9338016177096639
  - 0.935197086546701
  - 0.9349957374254049
  - 0.9332698815566837
  train_precision_macro_oob:
  - 0.9310712761416986
  - 0.9308216262239252
  - 0.9315552699228791
  - 0.9317988064791133
  - 0.9306260575296109
  train_precision_micro:
  - 0.9341655996585574
  - 0.9338016177096636
  - 0.935197086546701
  - 0.934995737425405
  - 0.9332698815566836
  train_precision_micro_oob:
  - 0.9310712761416987
  - 0.9308216262239251
  - 0.9315552699228792
  - 0.9317988064791134
  - 0.9306260575296108
  train_precision_samples:
  - 0.9341655996585573
  - 0.9338016177096636
  - 0.9351970865467009
  - 0.9349957374254049
  - 0.9332698815566836
  train_precision_samples_oob:
  - 0.9310712761416986
  - 0.930821626223925
  - 0.9315552699228791
  - 0.9317988064791132
  - 0.9306260575296107
  train_precision_weighted:
  - 0.9023657238562784
  - 0.900507077164902
  - 0.9046312136542585
  - 0.9037405607204761
  - 0.8966758486299227
  train_precision_weighted_oob:
  - 0.8940612654817315
  - 0.8942075313428098
  - 0.8963748029287008
  - 0.896180046302469
  - 0.8907336348545721
  train_recall_macro:
  - 0.9341655996585573
  - 0.9338016177096639
  - 0.935197086546701
  - 0.9349957374254049
  - 0.9332698815566837
  train_recall_macro_oob:
  - 0.9310712761416986
  - 0.9308216262239252
  - 0.9315552699228791
  - 0.9317988064791133
  - 0.9306260575296109
  train_recall_micro:
  - 0.9341655996585574
  - 0.9338016177096636
  - 0.935197086546701
  - 0.934995737425405
  - 0.9332698815566836
  train_recall_micro_oob:
  - 0.9310712761416987
  - 0.9308216262239251
  - 0.9315552699228792
  - 0.9317988064791134
  - 0.9306260575296108
  train_recall_samples:
  - 0.9341655996585573
  - 0.9338016177096636
  - 0.9351970865467009
  - 0.9349957374254049
  - 0.9332698815566836
  train_recall_samples_oob:
  - 0.9310712761416986
  - 0.930821626223925
  - 0.9315552699228791
  - 0.9317988064791132
  - 0.9306260575296107
  train_recall_weighted:
  - 0.9023657238562784
  - 0.900507077164902
  - 0.9046312136542585
  - 0.9037405607204761
  - 0.8966758486299227
  train_recall_weighted_oob:
  - 0.8940612654817315
  - 0.8942075313428098
  - 0.8963748029287008
  - 0.896180046302469
  - 0.8907336348545721
  train_roc_auc_macro:
  - 0.9863787391097213
  - 0.9848068188203669
  - 0.9851289140033145
  - 0.9874479329332538
  - 0.9840227942431565
  train_roc_auc_macro_oob:
  - 0.9689615220436861
  - 0.967234257328005
  - 0.9669796999180481
  - 0.9726912542239491
  - 0.9667370635708986
  train_roc_auc_micro:
  - 0.9674465157429555
  - 0.9692726342951687
  - 0.9694524092759944
  - 0.9737145798417262
  - 0.9679230787856908
  train_roc_auc_micro_oob:
  - 0.9513808152459031
  - 0.954635708201193
  - 0.954199809235126
  - 0.9599852103843635
  - 0.9534897574859723
  train_roc_auc_samples:
  - 0.9551039632345649
  - 0.9623914754182952
  - 0.9617633057221746
  - 0.9662087628200161
  - 0.9593265565981302
  train_roc_auc_samples_oob:
  - 0.9365453510780015
  - 0.944934229480845
  - 0.9443141786329448
  - 0.9495356377069932
  - 0.9427639337537815
  train_roc_auc_weighted:
  - 0.9832499745460052
  - 0.9810800886568044
  - 0.9824719748209878
  - 0.9830657188995996
  - 0.9798016421977852
  train_roc_auc_weighted_oob:
  - 0.9694010710894598
  - 0.9670975906373445
  - 0.9688313365442566
  - 0.9708681185241468
  - 0.9670794274090654
start: 2023-12-22 07:02:47.524819
wrapper: null
