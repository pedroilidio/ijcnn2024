active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz479AMzMzMzMDQAAzMzMzM+O/ADMzMzMz478AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:48:35.207587
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__9
  params: {}
hash: a37615a9f2d10f50b16c8acd9793c3ef65aead4616a737e82e90b068c34cd480
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a37615a_20231221T114652770586_embedding_proba__9_VirusPseAAC.yml
results:
  fit_time:
  - 83.89667344093323
  - 84.10065150260925
  - 85.54746270179749
  - 85.99041962623596
  - 85.87281370162964
  score_time:
  - 5.933610677719116
  - 5.783695459365845
  - 5.973341226577759
  - 6.113731861114502
  - 5.96229100227356
  test_average_precision_macro:
  - 0.5148438549128832
  - 0.4107097204182615
  - 0.450855180563148
  - 0.2986995476886231
  - 0.3648055590459631
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.47268756349989827
  - 0.3890323403512655
  - 0.3995077948753568
  - 0.3666484510565549
  - 0.3764455816267096
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6819444444444445
  - 0.6437321937321937
  - 0.640079365079365
  - 0.5571428571428572
  - 0.6442460317460318
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5104444801945998
  - 0.39729718243113743
  - 0.4258413884793978
  - 0.3586176485859505
  - 0.4198056325461615
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8015873015873015
  - 0.7863247863247863
  - 0.7976190476190476
  - 0.7857142857142857
  - 0.8015873015873017
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8015873015873016
  - 0.7863247863247863
  - 0.7976190476190477
  - 0.7857142857142857
  - 0.8015873015873016
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8015873015873017
  - 0.7863247863247862
  - 0.7976190476190477
  - 0.7857142857142859
  - 0.8015873015873017
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6881419234360411
  - 0.6605128205128206
  - 0.6904761904761905
  - 0.6666666666666666
  - 0.6773566569484937
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6932567807005589
  - 0.6766936702451044
  - 0.6871680272564576
  - 0.6756863432761405
  - 0.6965651831159705
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6688741721854304
  - 0.647887323943662
  - 0.6633663366336634
  - 0.6470588235294118
  - 0.6688741721854304
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.675170068027211
  - 0.656898656898657
  - 0.6683673469387756
  - 0.655328798185941
  - 0.6734693877551021
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5440699436378068
  - 0.5130736232529112
  - 0.5457579829680919
  - 0.5227946150074576
  - 0.5319504868321513
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6819444444444445
  - 0.6437321937321937
  - 0.640079365079365
  - 0.557142857142857
  - 0.6442460317460317
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03156475079494043
  - 0.0029895666805590635
  - 0.0
  - -0.03811812499312437
  - -0.02146403054055949
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12530721563100888
  - 0.06485625901047318
  - 0.0
  - -0.05529018118931039
  - -0.03101081358401839
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.023809523809523808
  - 0.020512820512820513
  - 0.0
  - -0.014285714285714287
  - -0.004761904761904762
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06312950158988086
  - 0.006457464030007577
  - 0.0
  - -0.07623624998624874
  - -0.044680226839532
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7623233832775325
  - 0.7396445139009448
  - 0.7333786538258791
  - 0.6709819002977484
  - 0.735178979114632
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2142857142857144
  - -2.6153846153846154
  - -2.3333333333333335
  - -2.642857142857143
  - -2.2857142857142856
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19841269841269837
  - -0.2136752136752137
  - -0.2023809523809524
  - -0.21428571428571427
  - -0.19841269841269837
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1984126984126984
  - -0.21367521367521367
  - -0.20238095238095238
  - -0.21428571428571427
  - -0.1984126984126984
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19841269841269837
  - -0.21367521367521375
  - -0.20238095238095238
  - -0.21428571428571425
  - -0.19841269841269837
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3118580765639589
  - -0.33948717948717944
  - -0.30952380952380953
  - -0.3333333333333333
  - -0.32264334305150627
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2083333333333333
  - -0.2537037037037037
  - -0.22142857142857145
  - -0.279431216931217
  - -0.22797619047619047
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8015873015873015
  - 0.7863247863247863
  - 0.7976190476190476
  - 0.7857142857142857
  - 0.8015873015873017
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8015873015873016
  - 0.7863247863247863
  - 0.7976190476190477
  - 0.7857142857142857
  - 0.8015873015873016
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8015873015873017
  - 0.7863247863247862
  - 0.7976190476190477
  - 0.7857142857142859
  - 0.8015873015873017
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6881419234360411
  - 0.6605128205128206
  - 0.6904761904761905
  - 0.6666666666666666
  - 0.6773566569484937
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8015873015873015
  - 0.7863247863247863
  - 0.7976190476190476
  - 0.7857142857142857
  - 0.8015873015873017
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8015873015873016
  - 0.7863247863247863
  - 0.7976190476190477
  - 0.7857142857142857
  - 0.8015873015873016
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8015873015873017
  - 0.7863247863247862
  - 0.7976190476190477
  - 0.7857142857142859
  - 0.8015873015873017
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6881419234360411
  - 0.6605128205128206
  - 0.6904761904761905
  - 0.6666666666666666
  - 0.6773566569484937
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7143374708557887
  - 0.5441111206962655
  - 0.6510927002379899
  - 0.6058170636675723
  - 0.6319473157493873
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8001170617500732
  - 0.7308695652173913
  - 0.7858745488245049
  - 0.7474392742171496
  - 0.7783251231527094
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7916666666666666
  - 0.7462962962962965
  - 0.7785714285714287
  - 0.720568783068783
  - 0.7720238095238094
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6252717578259374
  - 0.4989003623188406
  - 0.6039245171752912
  - 0.5427981719003391
  - 0.5745445786359046
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7086717383413833
  - 0.7352426536222968
  - 0.7011157794397804
  - 0.7473847572021483
  - 0.7163059927142753
  train_average_precision_macro_oob:
  - 0.5730640299118074
  - 0.6293898686538816
  - 0.5336184873515784
  - 0.5964311896938596
  - 0.5869302003390945
  train_average_precision_micro:
  - 0.7674858899594021
  - 0.7713628936732058
  - 0.7699451291287595
  - 0.768267510898834
  - 0.7778921207548178
  train_average_precision_micro_oob:
  - 0.6992518736369853
  - 0.7179258987873802
  - 0.701372696621065
  - 0.712324493960706
  - 0.7194664984391567
  train_average_precision_samples:
  - 0.8285858585858586
  - 0.8530753968253968
  - 0.833030303030303
  - 0.818030303030303
  - 0.821010101010101
  train_average_precision_samples_oob:
  - 0.7596296296296295
  - 0.8056547619047618
  - 0.770942760942761
  - 0.771969696969697
  - 0.7676599326599327
  train_average_precision_weighted:
  - 0.7521796174795452
  - 0.7584350495776194
  - 0.7469581770722188
  - 0.7609618848682145
  - 0.7589220542546142
  train_average_precision_weighted_oob:
  - 0.6909678176630785
  - 0.7220521966460286
  - 0.6923162105565119
  - 0.7010178038503507
  - 0.7062895440407495
  train_f1_macro:
  - 0.8606060606060607
  - 0.8621031746031748
  - 0.8616161616161616
  - 0.8616161616161616
  - 0.8555555555555556
  train_f1_macro_oob:
  - 0.8474747474747475
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545456
  - 0.8454545454545456
  train_f1_micro:
  - 0.8606060606060606
  - 0.8621031746031746
  - 0.8616161616161616
  - 0.8616161616161616
  - 0.8555555555555555
  train_f1_micro_oob:
  - 0.8474747474747475
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545455
  - 0.8454545454545455
  train_f1_samples:
  - 0.8606060606060606
  - 0.8621031746031745
  - 0.8616161616161614
  - 0.8616161616161616
  - 0.8555555555555553
  train_f1_samples_oob:
  - 0.8474747474747474
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545455
  - 0.8454545454545452
  train_f1_weighted:
  - 0.8119101462385044
  - 0.8142385667138142
  - 0.8124528870797526
  - 0.8121815166591284
  - 0.8039707419017763
  train_f1_weighted_oob:
  - 0.7851047791346297
  - 0.7860384252710987
  - 0.766832504145937
  - 0.7792250866877732
  - 0.7834303627407075
  train_jaccard_macro:
  - 0.7617665274548854
  - 0.7637489159200469
  - 0.7632663093047981
  - 0.7632663093047981
  - 0.7545043855520207
  train_jaccard_macro_oob:
  - 0.744688944692382
  - 0.7458454744783746
  - 0.7349802734191307
  - 0.7423930053552691
  - 0.741565826820182
  train_jaccard_micro:
  - 0.7553191489361702
  - 0.7576285963382737
  - 0.7568766637089619
  - 0.7568766637089619
  - 0.7475728155339806
  train_jaccard_micro_oob:
  - 0.7353198948290973
  - 0.7364341085271318
  - 0.7232375979112271
  - 0.7322834645669292
  - 0.7322834645669292
  train_jaccard_samples:
  - 0.7689754689754691
  - 0.7716836734693877
  - 0.7699855699855701
  - 0.7708513708513709
  - 0.7613275613275613
  train_jaccard_samples_oob:
  - 0.74992784992785
  - 0.7502834467120183
  - 0.736940836940837
  - 0.7466089466089466
  - 0.7464646464646466
  train_jaccard_weighted:
  - 0.6870348008085603
  - 0.690541676186506
  - 0.6878567708015275
  - 0.6874928269738677
  - 0.6765052919698826
  train_jaccard_weighted_oob:
  - 0.6521726439245588
  - 0.6541833004112051
  - 0.6297816508906087
  - 0.6449374550133437
  - 0.6502000896428678
  train_label_ranking_average_precision_score:
  - 0.8285858585858586
  - 0.8530753968253967
  - 0.833030303030303
  - 0.8180303030303028
  - 0.8210101010101006
  train_label_ranking_average_precision_score_oob:
  - 0.7596296296296294
  - 0.8056547619047615
  - 0.7709427609427608
  - 0.7719696969696968
  - 0.7676599326599324
  train_matthews_corrcoef_macro:
  - 0.19323239984817073
  - 0.19287872744076837
  - 0.19382456371939064
  - 0.19411014886583144
  - 0.18646724086160296
  train_matthews_corrcoef_macro_oob:
  - 0.16825270651053745
  - 0.16548532332874946
  - 0.15101708618872503
  - 0.1631709333443566
  - 0.16722648470263193
  train_matthews_corrcoef_micro:
  - 0.5165006596890355
  - 0.5157582773548729
  - 0.5208647492754842
  - 0.5208647492754842
  - 0.5001191658408182
  train_matthews_corrcoef_micro_oob:
  - 0.4569424945387966
  - 0.4515237225647582
  - 0.41702390378850374
  - 0.44723485241446004
  - 0.45410932760409384
  train_matthews_corrcoef_samples:
  - 0.3383722010430674
  - 0.3324490359724426
  - 0.3334164588093257
  - 0.3362838362454857
  - 0.3212952466881135
  train_matthews_corrcoef_samples_oob:
  - 0.2774046600959801
  - 0.2686863891893038
  - 0.2333748960713295
  - 0.26863366860810156
  - 0.2729495756357822
  train_matthews_corrcoef_weighted:
  - 0.3924440787172337
  - 0.3925637910496086
  - 0.3966710755705274
  - 0.39674908237985046
  - 0.3775409388640649
  train_matthews_corrcoef_weighted_oob:
  - 0.3414650626357935
  - 0.3369561114521725
  - 0.308854124119714
  - 0.33368944065038175
  - 0.3384330503288346
  train_ndgc:
  - 0.8735155245713497
  - 0.8915156136476027
  - 0.8766039474823109
  - 0.8657090900358652
  - 0.8675903627263212
  train_ndgc_oob:
  - 0.8236578388617979
  - 0.8564008045527971
  - 0.8306421655510527
  - 0.8330111325128707
  - 0.8281847177625595
  train_neg_coverage_error:
  - -1.812121212121212
  - -1.7023809523809523
  - -1.8181818181818181
  - -1.8060606060606061
  - -1.812121212121212
  train_neg_coverage_error_oob:
  - -2.0484848484848484
  - -1.875
  - -2.090909090909091
  - -1.9696969696969697
  - -2.0242424242424244
  train_neg_hamming_loss_macro:
  - -0.1393939393939394
  - -0.1378968253968254
  - -0.1383838383838384
  - -0.1383838383838384
  - -0.14444444444444446
  train_neg_hamming_loss_macro_oob:
  - -0.15252525252525254
  - -0.15178571428571427
  - -0.1606060606060606
  - -0.15454545454545454
  - -0.1545454545454545
  train_neg_hamming_loss_micro:
  - -0.1393939393939394
  - -0.1378968253968254
  - -0.1383838383838384
  - -0.1383838383838384
  - -0.14444444444444443
  train_neg_hamming_loss_micro_oob:
  - -0.15252525252525254
  - -0.15178571428571427
  - -0.1606060606060606
  - -0.15454545454545454
  - -0.15454545454545454
  train_neg_hamming_loss_samples:
  - -0.1393939393939394
  - -0.13789682539682538
  - -0.1383838383838384
  - -0.13838383838383836
  - -0.1444444444444444
  train_neg_hamming_loss_samples_oob:
  - -0.1525252525252525
  - -0.15178571428571427
  - -0.1606060606060606
  - -0.1545454545454545
  - -0.1545454545454545
  train_neg_hamming_loss_weighted:
  - -0.1880898537614956
  - -0.18576143328618577
  - -0.18754711292024728
  - -0.18781848334087142
  - -0.19602925809822364
  train_neg_hamming_loss_weighted_oob:
  - -0.21489522086537013
  - -0.21396157472890145
  - -0.23316749585406302
  - -0.2207749133122268
  - -0.21656963725929243
  train_neg_label_ranking_loss:
  - -0.11422558922558922
  - -0.09657738095238096
  - -0.11552188552188551
  - -0.11424242424242423
  - -0.1133164983164983
  train_neg_label_ranking_loss_oob:
  - -0.15914141414141417
  - -0.13110119047619045
  - -0.1692929292929293
  - -0.14355218855218854
  - -0.15626262626262624
  train_precision_macro:
  - 0.8606060606060607
  - 0.8621031746031748
  - 0.8616161616161616
  - 0.8616161616161616
  - 0.8555555555555556
  train_precision_macro_oob:
  - 0.8474747474747475
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545456
  - 0.8454545454545456
  train_precision_micro:
  - 0.8606060606060606
  - 0.8621031746031746
  - 0.8616161616161616
  - 0.8616161616161616
  - 0.8555555555555555
  train_precision_micro_oob:
  - 0.8474747474747475
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545455
  - 0.8454545454545455
  train_precision_samples:
  - 0.8606060606060606
  - 0.8621031746031745
  - 0.8616161616161614
  - 0.8616161616161616
  - 0.8555555555555553
  train_precision_samples_oob:
  - 0.8474747474747474
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545455
  - 0.8454545454545452
  train_precision_weighted:
  - 0.8119101462385044
  - 0.8142385667138142
  - 0.8124528870797526
  - 0.8121815166591284
  - 0.8039707419017763
  train_precision_weighted_oob:
  - 0.7851047791346297
  - 0.7860384252710987
  - 0.766832504145937
  - 0.7792250866877732
  - 0.7834303627407075
  train_recall_macro:
  - 0.8606060606060607
  - 0.8621031746031748
  - 0.8616161616161616
  - 0.8616161616161616
  - 0.8555555555555556
  train_recall_macro_oob:
  - 0.8474747474747475
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545456
  - 0.8454545454545456
  train_recall_micro:
  - 0.8606060606060606
  - 0.8621031746031746
  - 0.8616161616161616
  - 0.8616161616161616
  - 0.8555555555555555
  train_recall_micro_oob:
  - 0.8474747474747475
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545455
  - 0.8454545454545455
  train_recall_samples:
  - 0.8606060606060606
  - 0.8621031746031745
  - 0.8616161616161614
  - 0.8616161616161616
  - 0.8555555555555553
  train_recall_samples_oob:
  - 0.8474747474747474
  - 0.8482142857142857
  - 0.8393939393939394
  - 0.8454545454545455
  - 0.8454545454545452
  train_recall_weighted:
  - 0.8119101462385044
  - 0.8142385667138142
  - 0.8124528870797526
  - 0.8121815166591284
  - 0.8039707419017763
  train_recall_weighted_oob:
  - 0.7851047791346297
  - 0.7860384252710987
  - 0.766832504145937
  - 0.7792250866877732
  - 0.7834303627407075
  train_roc_auc_macro:
  - 0.8239082525471445
  - 0.8485313405688343
  - 0.8254340449518857
  - 0.853140695616324
  - 0.8380876980890531
  train_roc_auc_macro_oob:
  - 0.7992396840731969
  - 0.8409386164664446
  - 0.7706822542912727
  - 0.8204354419535035
  - 0.8035152317869292
  train_roc_auc_micro:
  - 0.8859189477202075
  - 0.8930607080559173
  - 0.8881763552327085
  - 0.8969348441569088
  - 0.8948679590137769
  train_roc_auc_micro_oob:
  - 0.8561501743500495
  - 0.8745055647003905
  - 0.8509984929597891
  - 0.8748526064228919
  - 0.8677023804307685
  train_roc_auc_samples:
  - 0.8857744107744108
  - 0.9034226190476191
  - 0.8844781144781143
  - 0.8857575757575756
  - 0.8866835016835016
  train_roc_auc_samples_oob:
  - 0.8408585858585859
  - 0.8688988095238095
  - 0.8307070707070707
  - 0.8564478114478117
  - 0.8437373737373738
  train_roc_auc_weighted:
  - 0.7873805775950866
  - 0.8024475044844818
  - 0.7908138613158011
  - 0.8081327477431606
  - 0.8012422569079167
  train_roc_auc_weighted_oob:
  - 0.7735744457563128
  - 0.7998323729381995
  - 0.7751642863015982
  - 0.8003195294327711
  - 0.7897848786082506
start: 2023-12-21 11:46:52.770586
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
