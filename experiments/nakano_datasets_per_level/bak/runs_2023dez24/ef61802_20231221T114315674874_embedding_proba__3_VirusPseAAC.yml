active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AMzMzMzPjv4BmZmZmZvY/wMzMzMzMDMCAZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:43:29.966782
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__3
  params: {}
hash: ef61802194832dfef80c72629f1556f3ba3f703f17045a0af26961d15ea452d5
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ef61802_20231221T114315674874_embedding_proba__3_VirusPseAAC.yml
results:
  fit_time:
  - 6.43021559715271
  - 6.394227027893066
  - 6.525653839111328
  - 6.38038182258606
  - 6.828855276107788
  score_time:
  - 2.332261800765991
  - 2.3131465911865234
  - 2.4116437435150146
  - 2.5150628089904785
  - 2.4162936210632324
  test_average_precision_macro:
  - 0.4048557175025555
  - 0.48014548262084883
  - 0.4954923364975557
  - 0.3404473928136699
  - 0.37875373439606075
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.425058029598744
  - 0.5111686805198279
  - 0.4422235659357817
  - 0.4242400692617016
  - 0.4155831606874021
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6705555555555556
  - 0.6819444444444445
  - 0.6589583333333333
  - 0.6092592592592593
  - 0.6908333333333333
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4429306996469451
  - 0.5265641933877239
  - 0.45767793001668305
  - 0.41429287991731084
  - 0.4425578162141996
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7916666666666666
  - 0.7976190476190476
  - 0.7958333333333333
  - 0.8111111111111112
  - 0.7958333333333334
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7916666666666666
  - 0.7976190476190477
  - 0.7958333333333333
  - 0.8111111111111111
  - 0.7958333333333333
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7916666666666667
  - 0.7976190476190477
  - 0.7958333333333334
  - 0.8111111111111114
  - 0.7958333333333334
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.675
  - 0.6881868131868132
  - 0.6801020408163266
  - 0.708974358974359
  - 0.6698979591836733
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6812122532946332
  - 0.6873043997481778
  - 0.6869651681057465
  - 0.7038522500304353
  - 0.688955187866836
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6551724137931034
  - 0.6633663366336634
  - 0.6608996539792388
  - 0.6822429906542056
  - 0.6608996539792388
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.661904761904762
  - 0.6712018140589568
  - 0.6672619047619048
  - 0.6873015873015875
  - 0.6660714285714286
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5301811841857609
  - 0.5432224447216951
  - 0.5332318296861391
  - 0.5660635063047701
  - 0.5234847941216194
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6705555555555555
  - 0.6819444444444445
  - 0.6589583333333333
  - 0.6092592592592592
  - 0.6908333333333332
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.03156475079494043
  - 0.0
  - 0.03224608291466229
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.12378740685639418
  - 0.0
  - 0.12483904421394633
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.023809523809523808
  - 0.0
  - 0.022222222222222223
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.06191547271315238
  - 0.0
  - 0.06325193187106834
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7550256983108561
  - 0.7639488069585535
  - 0.7480101483575142
  - 0.7083574507881886
  - 0.7702791328373513
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.375
  - -2.3095238095238093
  - -2.275
  - -2.3777777777777778
  - -2.35
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20833333333333337
  - -0.2023809523809524
  - -0.2041666666666667
  - -0.18888888888888888
  - -0.2041666666666667
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20833333333333334
  - -0.20238095238095238
  - -0.20416666666666666
  - -0.18888888888888888
  - -0.20416666666666666
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20833333333333331
  - -0.20238095238095238
  - -0.20416666666666666
  - -0.18888888888888886
  - -0.20416666666666666
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.325
  - -0.31181318681318676
  - -0.3198979591836735
  - -0.29102564102564105
  - -0.3301020408163265
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22555555555555556
  - -0.21607142857142855
  - -0.20590277777777777
  - -0.24944444444444439
  - -0.21812500000000004
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7916666666666666
  - 0.7976190476190476
  - 0.7958333333333333
  - 0.8111111111111112
  - 0.7958333333333334
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7916666666666666
  - 0.7976190476190477
  - 0.7958333333333333
  - 0.8111111111111111
  - 0.7958333333333333
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7916666666666667
  - 0.7976190476190477
  - 0.7958333333333334
  - 0.8111111111111114
  - 0.7958333333333334
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.675
  - 0.6881868131868132
  - 0.6801020408163266
  - 0.708974358974359
  - 0.6698979591836733
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7916666666666666
  - 0.7976190476190476
  - 0.7958333333333333
  - 0.8111111111111112
  - 0.7958333333333334
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7916666666666666
  - 0.7976190476190477
  - 0.7958333333333333
  - 0.8111111111111111
  - 0.7958333333333333
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7916666666666667
  - 0.7976190476190477
  - 0.7958333333333334
  - 0.8111111111111114
  - 0.7958333333333334
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.675
  - 0.6881868131868132
  - 0.6801020408163266
  - 0.708974358974359
  - 0.6698979591836733
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6401608062497819
  - 0.6138882551071111
  - 0.6909775898446776
  - 0.6551716617109753
  - 0.6097651667504608
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.782421052631579
  - 0.7921153846153846
  - 0.7943156320119671
  - 0.7863443895553988
  - 0.7710225451437119
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7744444444444445
  - 0.7839285714285713
  - 0.7940972222222222
  - 0.7505555555555554
  - 0.781875
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5845365758813059
  - 0.6251711008289955
  - 0.5929313095462164
  - 0.6289725529153688
  - 0.5755404725992962
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7368113377960821
  - 0.7075109698292333
  - 0.6809529857561719
  - 0.7551301175863204
  - 0.7470484213218435
  train_average_precision_macro_oob:
  - 0.5914843546895333
  - 0.5585999575390795
  - 0.5502637890657686
  - 0.6371486565534461
  - 0.606947010464721
  train_average_precision_micro:
  - 0.7953722928357487
  - 0.751134431560543
  - 0.7682532372021936
  - 0.7915453882190762
  - 0.7843987357912625
  train_average_precision_micro_oob:
  - 0.7273493119240204
  - 0.6821975145194442
  - 0.6995135819671796
  - 0.7306675455515883
  - 0.725829051736904
  train_average_precision_samples:
  - 0.8333333333333333
  - 0.808030303030303
  - 0.8215069860279441
  - 0.8158436213991769
  - 0.8376746506986027
  train_average_precision_samples_oob:
  - 0.794560878243513
  - 0.7413636363636363
  - 0.7589321357285429
  - 0.7720507544581618
  - 0.7845143047238857
  train_average_precision_weighted:
  - 0.7827475670186803
  - 0.7342465445744314
  - 0.7405831649516351
  - 0.7756284385765565
  - 0.7695416324345893
  train_average_precision_weighted_oob:
  - 0.7139477453434396
  - 0.6891870678924685
  - 0.68357260650858
  - 0.7406417989773654
  - 0.7187713407804398
  train_f1_macro:
  - 0.8592814371257486
  - 0.8595959595959597
  - 0.8592814371257486
  - 0.8590534979423868
  - 0.8642714570858283
  train_f1_macro_oob:
  - 0.8343313373253493
  - 0.8272727272727273
  - 0.8293413173652695
  - 0.8446502057613167
  - 0.845309381237525
  train_f1_micro:
  - 0.8592814371257484
  - 0.8595959595959596
  - 0.8592814371257484
  - 0.8590534979423868
  - 0.8642714570858283
  train_f1_micro_oob:
  - 0.8343313373253493
  - 0.8272727272727273
  - 0.8293413173652695
  - 0.8446502057613169
  - 0.845309381237525
  train_f1_samples:
  - 0.8592814371257483
  - 0.8595959595959595
  - 0.8592814371257484
  - 0.8590534979423866
  - 0.8642714570858282
  train_f1_samples_oob:
  - 0.8343313373253491
  - 0.8272727272727269
  - 0.8293413173652693
  - 0.8446502057613169
  - 0.8453093812375247
  train_f1_weighted:
  - 0.8077310725084484
  - 0.8083939393939393
  - 0.8088846936668536
  - 0.8090432098765432
  - 0.8181469573168932
  train_f1_weighted_oob:
  - 0.7566550068180471
  - 0.7422727272727272
  - 0.7477065573286923
  - 0.7797839506172838
  - 0.7822483112592549
  train_jaccard_macro:
  - 0.7601954453319738
  - 0.7605435370275705
  - 0.7598329212295095
  - 0.7594882436623415
  - 0.7666861726262574
  train_jaccard_macro_oob:
  - 0.7291896947675807
  - 0.7208287566238377
  - 0.7228016290935023
  - 0.7410294238476043
  - 0.7416690410519897
  train_jaccard_micro:
  - 0.7532808398950132
  - 0.7537643932683791
  - 0.7532808398950132
  - 0.7529305680793508
  - 0.7609841827768014
  train_jaccard_micro_oob:
  - 0.7157534246575342
  - 0.7054263565891473
  - 0.7084398976982097
  - 0.7310774710596616
  - 0.7320656871218669
  train_jaccard_samples:
  - 0.767607641859139
  - 0.7669552669552671
  - 0.7671799258625608
  - 0.7657260435038213
  - 0.7753065297975478
  train_jaccard_samples_oob:
  - 0.7285429141716568
  - 0.7178932178932179
  - 0.720844026233248
  - 0.7445620223398002
  - 0.7465069860279442
  train_jaccard_weighted:
  - 0.6815046869233461
  - 0.6824099160416737
  - 0.6832327200417021
  - 0.6831082413286584
  - 0.6958056940034145
  train_jaccard_weighted_oob:
  - 0.6180647073031706
  - 0.6011787004636372
  - 0.607564480824838
  - 0.645602968270405
  - 0.6488672683426215
  train_label_ranking_average_precision_score:
  - 0.8333333333333333
  - 0.8080303030303031
  - 0.8215069860279441
  - 0.8158436213991769
  - 0.8376746506986027
  train_label_ranking_average_precision_score_oob:
  - 0.7945608782435127
  - 0.7413636363636363
  - 0.7589321357285427
  - 0.7720507544581614
  - 0.7845143047238854
  train_matthews_corrcoef_macro:
  - 0.18895142002708468
  - 0.18950877076468972
  - 0.18954950590731046
  - 0.1924772169665295
  - 0.23809147710348819
  train_matthews_corrcoef_macro_oob:
  - 0.1365823643827112
  - 0.12109648827156443
  - 0.12932526326894406
  - 0.16503907801933515
  - 0.16338218404141405
  train_matthews_corrcoef_micro:
  - 0.506686594885439
  - 0.5092788121488734
  - 0.509515369081296
  - 0.5172279502069156
  - 0.5310763559368834
  train_matthews_corrcoef_micro_oob:
  - 0.3820909858431577
  - 0.3428855381397158
  - 0.360341674795018
  - 0.45267951492043723
  - 0.44501208187304464
  train_matthews_corrcoef_samples:
  - 0.3311472517603079
  - 0.3185544498767152
  - 0.33273354555711837
  - 0.3366885051337866
  - 0.3517892493381519
  train_matthews_corrcoef_samples_oob:
  - 0.20275236081598447
  - 0.16946834945556594
  - 0.1784115760012099
  - 0.2684190961444693
  - 0.2643072657712757
  train_matthews_corrcoef_weighted:
  - 0.3843787977401134
  - 0.3866983869080142
  - 0.3867218928181926
  - 0.39275111141462354
  - 0.4310503476582788
  train_matthews_corrcoef_weighted_oob:
  - 0.27710190973803833
  - 0.24670656262169557
  - 0.26369988756213353
  - 0.3370354790942192
  - 0.3311847784420637
  train_ndgc:
  - 0.8771157924073307
  - 0.8579306590764532
  - 0.8691514158030313
  - 0.8651085864106552
  - 0.8804387650413822
  train_ndgc_oob:
  - 0.8489503403978742
  - 0.8084707890946757
  - 0.8222692682949336
  - 0.8322988657006976
  - 0.840548196536034
  train_neg_coverage_error:
  - -1.748502994011976
  - -1.8848484848484848
  - -1.8323353293413174
  - -1.9074074074074074
  - -1.7904191616766467
  train_neg_coverage_error_oob:
  - -1.9221556886227544
  - -2.1333333333333333
  - -2.053892215568862
  - -2.0123456790123457
  - -1.9461077844311376
  train_neg_hamming_loss_macro:
  - -0.14071856287425147
  - -0.1404040404040404
  - -0.1407185628742515
  - -0.14094650205761317
  - -0.13572854291417166
  train_neg_hamming_loss_macro_oob:
  - -0.1656686626746507
  - -0.17272727272727273
  - -0.17065868263473052
  - -0.15534979423868311
  - -0.15469061876247506
  train_neg_hamming_loss_micro:
  - -0.1407185628742515
  - -0.1404040404040404
  - -0.1407185628742515
  - -0.14094650205761317
  - -0.13572854291417166
  train_neg_hamming_loss_micro_oob:
  - -0.1656686626746507
  - -0.17272727272727273
  - -0.17065868263473055
  - -0.15534979423868311
  - -0.15469061876247506
  train_neg_hamming_loss_samples:
  - -0.14071856287425147
  - -0.1404040404040404
  - -0.1407185628742515
  - -0.14094650205761314
  - -0.13572854291417163
  train_neg_hamming_loss_samples_oob:
  - -0.1656686626746507
  - -0.1727272727272727
  - -0.17065868263473055
  - -0.15534979423868311
  - -0.15469061876247503
  train_neg_hamming_loss_weighted:
  - -0.19226892749155153
  - -0.19160606060606064
  - -0.1911153063331465
  - -0.19095679012345676
  - -0.1818530426831067
  train_neg_hamming_loss_weighted_oob:
  - -0.24334499318195288
  - -0.25772727272727275
  - -0.2522934426713076
  - -0.22021604938271605
  - -0.21775168874074508
  train_neg_label_ranking_loss:
  - -0.10276114437791084
  - -0.1305892255892256
  - -0.11751497005988024
  - -0.12568587105624143
  - -0.11091151031270789
  train_neg_label_ranking_loss_oob:
  - -0.13614437791084497
  - -0.18013468013468012
  - -0.16234198270126413
  - -0.14958847736625516
  - -0.14525948103792416
  train_precision_macro:
  - 0.8592814371257486
  - 0.8595959595959597
  - 0.8592814371257486
  - 0.8590534979423868
  - 0.8642714570858283
  train_precision_macro_oob:
  - 0.8343313373253493
  - 0.8272727272727273
  - 0.8293413173652695
  - 0.8446502057613167
  - 0.845309381237525
  train_precision_micro:
  - 0.8592814371257484
  - 0.8595959595959596
  - 0.8592814371257484
  - 0.8590534979423868
  - 0.8642714570858283
  train_precision_micro_oob:
  - 0.8343313373253493
  - 0.8272727272727273
  - 0.8293413173652695
  - 0.8446502057613169
  - 0.845309381237525
  train_precision_samples:
  - 0.8592814371257483
  - 0.8595959595959595
  - 0.8592814371257484
  - 0.8590534979423866
  - 0.8642714570858282
  train_precision_samples_oob:
  - 0.8343313373253491
  - 0.8272727272727269
  - 0.8293413173652693
  - 0.8446502057613169
  - 0.8453093812375247
  train_precision_weighted:
  - 0.8077310725084484
  - 0.8083939393939393
  - 0.8088846936668536
  - 0.8090432098765432
  - 0.8181469573168932
  train_precision_weighted_oob:
  - 0.7566550068180471
  - 0.7422727272727272
  - 0.7477065573286923
  - 0.7797839506172838
  - 0.7822483112592549
  train_recall_macro:
  - 0.8592814371257486
  - 0.8595959595959597
  - 0.8592814371257486
  - 0.8590534979423868
  - 0.8642714570858283
  train_recall_macro_oob:
  - 0.8343313373253493
  - 0.8272727272727273
  - 0.8293413173652695
  - 0.8446502057613167
  - 0.845309381237525
  train_recall_micro:
  - 0.8592814371257484
  - 0.8595959595959596
  - 0.8592814371257484
  - 0.8590534979423868
  - 0.8642714570858283
  train_recall_micro_oob:
  - 0.8343313373253493
  - 0.8272727272727273
  - 0.8293413173652695
  - 0.8446502057613169
  - 0.845309381237525
  train_recall_samples:
  - 0.8592814371257483
  - 0.8595959595959595
  - 0.8592814371257484
  - 0.8590534979423866
  - 0.8642714570858282
  train_recall_samples_oob:
  - 0.8343313373253491
  - 0.8272727272727269
  - 0.8293413173652693
  - 0.8446502057613169
  - 0.8453093812375247
  train_recall_weighted:
  - 0.8077310725084484
  - 0.8083939393939393
  - 0.8088846936668536
  - 0.8090432098765432
  - 0.8181469573168932
  train_recall_weighted_oob:
  - 0.7566550068180471
  - 0.7422727272727272
  - 0.7477065573286923
  - 0.7797839506172838
  - 0.7822483112592549
  train_roc_auc_macro:
  - 0.8618777072013327
  - 0.7938337986988167
  - 0.811699284576536
  - 0.8371881396214155
  - 0.8527205364045968
  train_roc_auc_macro_oob:
  - 0.8272298051798382
  - 0.7299272028800222
  - 0.7734085456788627
  - 0.8279439747536482
  - 0.8171805703264173
  train_roc_auc_micro:
  - 0.9071163366336634
  - 0.8728481012658228
  - 0.8839066073971775
  - 0.8954339378238342
  - 0.8986541058096019
  train_roc_auc_micro_oob:
  - 0.8803465346534655
  - 0.8398101265822783
  - 0.8538567297792191
  - 0.8703432642487047
  - 0.8729138023514617
  train_roc_auc_samples:
  - 0.8972388556220893
  - 0.8694107744107744
  - 0.8824850299401198
  - 0.8743141289437587
  - 0.8890884896872919
  train_roc_auc_samples_oob:
  - 0.8638556220891552
  - 0.81986531986532
  - 0.837658017298736
  - 0.850411522633745
  - 0.8547405189620759
  train_roc_auc_weighted:
  - 0.8361937180172752
  - 0.7454058521830794
  - 0.7768099454414584
  - 0.8020619201667617
  - 0.8182567362174162
  train_roc_auc_weighted_oob:
  - 0.8238968387038083
  - 0.734093055103046
  - 0.7637382418395406
  - 0.8063479321981528
  - 0.8027591642100347
start: 2023-12-21 11:43:15.674874
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
