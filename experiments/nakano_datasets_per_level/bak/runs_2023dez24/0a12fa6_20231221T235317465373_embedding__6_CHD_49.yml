active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAEEAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:54:06.206206
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__6
  params: {}
hash: 0a12fa6be6b3299f18b1854f135d0bae1de5c02eef46b1818b1311f1b8eaae25
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0a12fa6_20231221T235317465373_embedding__6_CHD_49.yml
results:
  fit_time:
  - 28.894819021224976
  - 28.15438437461853
  - 27.649868488311768
  - 28.159921884536743
  - 31.041818380355835
  score_time:
  - 4.933145046234131
  - 4.391394376754761
  - 5.000920534133911
  - 5.147246599197388
  - 5.134414196014404
  test_average_precision_macro:
  - 0.5102752440903416
  - 0.5224471745483265
  - 0.5794638325044529
  - 0.50126327278002
  - 0.5047772132045479
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7184546895445489
  - 0.7125972977740355
  - 0.6773769471013353
  - 0.676371558108652
  - 0.6813283336999039
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7905244029075806
  - 0.790065065065065
  - 0.776819075712881
  - 0.7984234234234234
  - 0.7776302851524091
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6411177697944922
  - 0.6536406364610977
  - 0.63362545989373
  - 0.6179281726488911
  - 0.6248908171141486
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5545171339563862
  - 0.5705705705705707
  - 0.5781710914454277
  - 0.5675675675675675
  - 0.5766961651917404
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5545171339563862
  - 0.5705705705705706
  - 0.5781710914454278
  - 0.5675675675675675
  - 0.5766961651917404
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5545171339563864
  - 0.5705705705705706
  - 0.5781710914454278
  - 0.5675675675675677
  - 0.5766961651917405
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.42454741520162076
  - 0.4473634473634474
  - 0.4544014904517932
  - 0.4416916916916917
  - 0.45690851345934447
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.42705337436394103
  - 0.44009698382809853
  - 0.44747435238368055
  - 0.43796764636378976
  - 0.4442973979118557
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.38362068965517243
  - 0.39915966386554624
  - 0.4066390041493776
  - 0.39622641509433965
  - 0.40518134715025905
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.40325282194441076
  - 0.41964821964821974
  - 0.42284028655710076
  - 0.4136851136851138
  - 0.4213653603034135
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.28612494286136325
  - 0.3038301005961061
  - 0.3104244734822823
  - 0.2996998177837361
  - 0.31277478820822924
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8092159916926274
  - 0.799074074074074
  - 0.7768190757128813
  - 0.7984234234234237
  - 0.7776302851524094
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - -0.02680281337094487
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - -0.03272893099715643
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - -0.003957642438052725
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - -0.04739865943493409
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8591554722431995
  - 0.8599406799445578
  - 0.857659375922449
  - 0.8691724954593305
  - 0.8599847245136234
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.794392523364486
  - -3.684684684684685
  - -3.743362831858407
  - -3.7387387387387387
  - -3.7964601769911503
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.44548286604361365
  - -0.42942942942942947
  - -0.4218289085545723
  - -0.43243243243243246
  - -0.4233038348082596
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.4454828660436137
  - -0.4294294294294294
  - -0.4218289085545723
  - -0.43243243243243246
  - -0.42330383480825956
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4454828660436137
  - -0.4294294294294294
  - -0.4218289085545722
  - -0.43243243243243235
  - -0.42330383480825956
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5754525847983791
  - -0.5526365526365526
  - -0.5455985095482068
  - -0.5583083083083084
  - -0.5430914865406555
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20166147455867084
  - -0.19842342342342345
  - -0.21823992133726647
  - -0.20372872872872874
  - -0.22064896755162242
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5545171339563862
  - 0.5705705705705707
  - 0.5781710914454277
  - 0.5675675675675675
  - 0.5766961651917404
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5545171339563862
  - 0.5705705705705706
  - 0.5781710914454278
  - 0.5675675675675675
  - 0.5766961651917404
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5545171339563864
  - 0.5705705705705706
  - 0.5781710914454278
  - 0.5675675675675677
  - 0.5766961651917405
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.42454741520162076
  - 0.4473634473634474
  - 0.4544014904517932
  - 0.4416916916916917
  - 0.45690851345934447
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5545171339563862
  - 0.5705705705705707
  - 0.5781710914454277
  - 0.5675675675675675
  - 0.5766961651917404
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5545171339563862
  - 0.5705705705705706
  - 0.5781710914454278
  - 0.5675675675675675
  - 0.5766961651917404
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5545171339563864
  - 0.5705705705705706
  - 0.5781710914454278
  - 0.5675675675675677
  - 0.5766961651917405
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.42454741520162076
  - 0.4473634473634474
  - 0.4544014904517932
  - 0.4416916916916917
  - 0.45690851345934447
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5994815513513334
  - 0.5954512532235552
  - 0.6195910204908355
  - 0.5661027218904756
  - 0.5567514122482192
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7853579005264398
  - 0.7861796098638205
  - 0.777634927012187
  - 0.776684670781893
  - 0.7709616190060329
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - 0.7817600786627336
  - 0.7962712712712712
  - 0.7793510324483776
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5864121983129494
  - 0.619240287654304
  - 0.5852031191043486
  - 0.5520742441966449
  - 0.5724123935412466
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8261110851734186
  - 0.8224723672778093
  - 0.8225929360270544
  - 0.8284679703791161
  - 0.819965590856151
  train_average_precision_macro_oob:
  - 0.5821900578558837
  - 0.6051559768904121
  - 0.6299795584700436
  - 0.592697463613466
  - 0.5882734301217973
  train_average_precision_micro:
  - 0.8905688493651327
  - 0.8899107919958531
  - 0.8915978655622436
  - 0.8881861840432631
  - 0.8898611201123683
  train_average_precision_micro_oob:
  - 0.7589948768530337
  - 0.7663819706950299
  - 0.7703974784804203
  - 0.7580270299678796
  - 0.7601060489079414
  train_average_precision_samples:
  - 0.8920634920634921
  - 0.8959615865865865
  - 0.8870820764203117
  - 0.8858427177177177
  - 0.8844337606837607
  train_average_precision_samples_oob:
  - 0.7930803571428571
  - 0.8048736236236236
  - 0.7999811463046758
  - 0.7912168418418418
  - 0.802335344394168
  train_average_precision_weighted:
  - 0.8831314944247415
  - 0.880180676722538
  - 0.8823128180945913
  - 0.8800542296390074
  - 0.8760564841576757
  train_average_precision_weighted_oob:
  - 0.7292625174682598
  - 0.7488436080989334
  - 0.7721288308260781
  - 0.7339876234797338
  - 0.7345223358254716
  train_f1_macro:
  - 0.6588541666666666
  - 0.6524024024024023
  - 0.6519607843137255
  - 0.6621621621621622
  - 0.6508295625942685
  train_f1_macro_oob:
  - 0.5773809523809523
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012012
  - 0.5727752639517345
  train_f1_micro:
  - 0.6588541666666666
  - 0.6524024024024024
  - 0.6519607843137255
  - 0.6621621621621622
  - 0.6508295625942685
  train_f1_micro_oob:
  - 0.5773809523809523
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012012
  - 0.5727752639517345
  train_f1_samples:
  - 0.6588541666666666
  - 0.6524024024024024
  - 0.6519607843137254
  - 0.6621621621621622
  - 0.6508295625942685
  train_f1_samples_oob:
  - 0.5773809523809524
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012011
  - 0.5727752639517345
  train_f1_weighted:
  - 0.5923164422837198
  - 0.5824214266622644
  - 0.5829707243369484
  - 0.5974847224847225
  - 0.5801260645339762
  train_f1_weighted_oob:
  - 0.4574100909997506
  - 0.4532038583085704
  - 0.4502183543929275
  - 0.4566087066087066
  - 0.45089410974332633
  train_jaccard_macro:
  - 0.513353972596386
  - 0.5070814663961046
  - 0.5064711131162035
  - 0.5165009382349798
  - 0.5057826302557826
  train_jaccard_macro_oob:
  - 0.44515511862090706
  - 0.44252637898789177
  - 0.4401231628513819
  - 0.44381818569084536
  - 0.4414372080950279
  train_jaccard_micro:
  - 0.4912621359223301
  - 0.4841225626740947
  - 0.48363636363636364
  - 0.494949494949495
  - 0.4823923979877026
  train_jaccard_micro_oob:
  - 0.40585774058577406
  - 0.4028436018957346
  - 0.40021119324181625
  - 0.4046928552596889
  - 0.4013210039630119
  train_jaccard_samples:
  - 0.5151998299319728
  - 0.5048262548262548
  - 0.5050851109674639
  - 0.515981240981241
  - 0.5067559891089304
  train_jaccard_samples_oob:
  - 0.4237138605442177
  - 0.4205929955929956
  - 0.4189408630585101
  - 0.42260929760929766
  - 0.42028755558167324
  train_jaccard_weighted:
  - 0.4241797173843708
  - 0.4145634391172722
  - 0.4149365251351185
  - 0.4291874480439715
  - 0.4121381400742811
  train_jaccard_weighted_oob:
  - 0.3114916517448334
  - 0.30804771776233597
  - 0.3055260380263162
  - 0.3104216783821564
  - 0.3057982817524563
  train_label_ranking_average_precision_score:
  - 0.8942956349206339
  - 0.9004660910910903
  - 0.8938694067370534
  - 0.8925994744744737
  - 0.8912210910005021
  train_label_ranking_average_precision_score_oob:
  - 0.7953124999999991
  - 0.8093781281281268
  - 0.8067684766214167
  - 0.7979735985985975
  - 0.8091226747109087
  train_matthews_corrcoef_macro:
  - 0.12875836148225836
  - 0.13683002143609654
  - 0.12515486172821788
  - 0.14285356801404558
  - 0.12315781953324195
  train_matthews_corrcoef_macro_oob:
  - 0.014366457313907066
  - 0.021203144643570548
  - 0.014769465430014223
  - 0.016760764751666605
  - 0.015541210539601778
  train_matthews_corrcoef_micro:
  - 0.3539878491378958
  - 0.3453061525953906
  - 0.3479254591015525
  - 0.36601257949061483
  - 0.34419526041249116
  train_matthews_corrcoef_micro_oob:
  - 0.07088340830996102
  - 0.07741897910125875
  - 0.07392625108187759
  - 0.07967156493326587
  - 0.07734683413748557
  train_matthews_corrcoef_samples:
  - 0.23945581545690672
  - 0.2306895260693391
  - 0.22586793870409694
  - 0.24031265294791462
  - 0.23297824159869807
  train_matthews_corrcoef_samples_oob:
  - 0.011287287614214945
  - 0.013576265235587238
  - 0.01179435226501007
  - 0.015024712282998115
  - 0.013940694568291776
  train_matthews_corrcoef_weighted:
  - 0.20712242661569033
  - 0.21058312962751838
  - 0.20093357126055975
  - 0.2246515595132494
  - 0.19830558911290957
  train_matthews_corrcoef_weighted_oob:
  - 0.025423364251835542
  - 0.03530244047779469
  - 0.026113754047139358
  - 0.02739058248950828
  - 0.02744482769526183
  train_ndgc:
  - 0.9327004418646824
  - 0.9351392739438918
  - 0.9291812048433296
  - 0.9275830854978548
  - 0.9247391068204147
  train_ndgc_oob:
  - 0.8661678678699053
  - 0.8742975177895397
  - 0.8685297245140324
  - 0.8633429504866883
  - 0.8701736527928602
  train_neg_coverage_error:
  - -3.2566964285714284
  - -3.240990990990991
  - -3.339366515837104
  - -3.2567567567567566
  - -3.3054298642533935
  train_neg_coverage_error_oob:
  - -3.75
  - -3.689189189189189
  - -3.665158371040724
  - -3.7004504504504503
  - -3.7081447963800906
  train_neg_hamming_loss_macro:
  - -0.3411458333333333
  - -0.34759759759759756
  - -0.34803921568627444
  - -0.3378378378378379
  - -0.34917043740573156
  train_neg_hamming_loss_macro_oob:
  - -0.4226190476190476
  - -0.42567567567567566
  - -0.42835595776772245
  - -0.4237987987987988
  - -0.42722473604826544
  train_neg_hamming_loss_micro:
  - -0.3411458333333333
  - -0.3475975975975976
  - -0.3480392156862745
  - -0.33783783783783783
  - -0.3491704374057315
  train_neg_hamming_loss_micro_oob:
  - -0.4226190476190476
  - -0.42567567567567566
  - -0.42835595776772245
  - -0.4237987987987988
  - -0.42722473604826544
  train_neg_hamming_loss_samples:
  - -0.3411458333333333
  - -0.3475975975975976
  - -0.34803921568627455
  - -0.33783783783783783
  - -0.3491704374057315
  train_neg_hamming_loss_samples_oob:
  - -0.42261904761904756
  - -0.42567567567567566
  - -0.4283559577677225
  - -0.4237987987987988
  - -0.4272247360482655
  train_neg_hamming_loss_weighted:
  - -0.4076835577162802
  - -0.4175785733377357
  - -0.4170292756630517
  - -0.4025152775152775
  - -0.41987393546602386
  train_neg_hamming_loss_weighted_oob:
  - -0.5425899090002493
  - -0.5467961416914296
  - -0.5497816456070725
  - -0.5433912933912934
  - -0.5491058902566738
  train_neg_label_ranking_loss:
  - -0.10732886904761904
  - -0.10279654654654655
  - -0.11239944695827049
  - -0.10702577577577578
  - -0.11417797888386125
  train_neg_label_ranking_loss_oob:
  - -0.20268477182539682
  - -0.18818818818818817
  - -0.18986928104575165
  - -0.19860485485485485
  - -0.192885872297637
  train_precision_macro:
  - 0.6588541666666666
  - 0.6524024024024023
  - 0.6519607843137255
  - 0.6621621621621622
  - 0.6508295625942685
  train_precision_macro_oob:
  - 0.5773809523809523
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012012
  - 0.5727752639517345
  train_precision_micro:
  - 0.6588541666666666
  - 0.6524024024024024
  - 0.6519607843137255
  - 0.6621621621621622
  - 0.6508295625942685
  train_precision_micro_oob:
  - 0.5773809523809523
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012012
  - 0.5727752639517345
  train_precision_samples:
  - 0.6588541666666666
  - 0.6524024024024024
  - 0.6519607843137254
  - 0.6621621621621622
  - 0.6508295625942685
  train_precision_samples_oob:
  - 0.5773809523809524
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012011
  - 0.5727752639517345
  train_precision_weighted:
  - 0.5923164422837198
  - 0.5824214266622644
  - 0.5829707243369484
  - 0.5974847224847225
  - 0.5801260645339762
  train_precision_weighted_oob:
  - 0.4574100909997506
  - 0.4532038583085704
  - 0.4502183543929275
  - 0.4566087066087066
  - 0.45089410974332633
  train_recall_macro:
  - 0.6588541666666666
  - 0.6524024024024023
  - 0.6519607843137255
  - 0.6621621621621622
  - 0.6508295625942685
  train_recall_macro_oob:
  - 0.5773809523809523
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012012
  - 0.5727752639517345
  train_recall_micro:
  - 0.6588541666666666
  - 0.6524024024024024
  - 0.6519607843137255
  - 0.6621621621621622
  - 0.6508295625942685
  train_recall_micro_oob:
  - 0.5773809523809523
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012012
  - 0.5727752639517345
  train_recall_samples:
  - 0.6588541666666666
  - 0.6524024024024024
  - 0.6519607843137254
  - 0.6621621621621622
  - 0.6508295625942685
  train_recall_samples_oob:
  - 0.5773809523809524
  - 0.5743243243243243
  - 0.5716440422322775
  - 0.5762012012012011
  - 0.5727752639517345
  train_recall_weighted:
  - 0.5923164422837198
  - 0.5824214266622644
  - 0.5829707243369484
  - 0.5974847224847225
  - 0.5801260645339762
  train_recall_weighted_oob:
  - 0.4574100909997506
  - 0.4532038583085704
  - 0.4502183543929275
  - 0.4566087066087066
  - 0.45089410974332633
  train_roc_auc_macro:
  - 0.8412721807936459
  - 0.8167436699141039
  - 0.8192061297572365
  - 0.826371835467833
  - 0.8118864451111018
  train_roc_auc_macro_oob:
  - 0.6821792194618612
  - 0.6786078872404854
  - 0.6987020316642089
  - 0.6744631682850876
  - 0.6596098701771899
  train_roc_auc_micro:
  - 0.8978746352847438
  - 0.8958216929136573
  - 0.8964086581490931
  - 0.8954134270334928
  - 0.8951486947375131
  train_roc_auc_micro_oob:
  - 0.8066731857042937
  - 0.815572639667791
  - 0.8219303860714213
  - 0.8119088148693412
  - 0.8097634619229622
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8289291633429478
  - 0.8196942441089387
  - 0.8188688793804206
  - 0.8182755148954413
  - 0.8106000132027834
  train_roc_auc_weighted_oob:
  - 0.7110635813169897
  - 0.7208073484108747
  - 0.7288827349276369
  - 0.70960171555129
  - 0.6987098269834975
start: 2023-12-21 23:53:17.465373
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
