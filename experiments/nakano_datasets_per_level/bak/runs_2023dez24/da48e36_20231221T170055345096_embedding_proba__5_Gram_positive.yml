active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmJmZmZnJvwCamZmZmek/AJiZmZmZyb8AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:01:26.950993
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__5
  params: {}
hash: da48e36bdff55caa0fa122d5d271ce2640454ae2d59480bf2f47e828d0c3644b
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/da48e36_20231221T170055345096_embedding_proba__5_Gram_positive.yml
results:
  fit_time:
  - 15.48696494102478
  - 16.3612060546875
  - 16.10570526123047
  - 15.636995792388916
  - 16.02961802482605
  score_time:
  - 4.423780679702759
  - 4.5438759326934814
  - 4.313962697982788
  - 4.534554958343506
  - 4.415817022323608
  test_average_precision_macro:
  - 0.7943616897246036
  - 0.9867660430823469
  - 0.8863999319201591
  - 0.8941980518734959
  - 0.8092405076604372
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9469071770871403
  - 0.984842896687588
  - 0.9670494240199606
  - 0.9639126038049856
  - 0.9669000267447915
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9547619047619048
  - 0.983974358974359
  - 0.941747572815534
  - 0.9719551282051283
  - 0.9635922330097088
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9317511929232908
  - 0.984986109523364
  - 0.9598703189138761
  - 0.9615210761581868
  - 0.9513653814434972
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8214285714285715
  - 0.8317307692307692
  - 0.8155339805825244
  - 0.8149038461538461
  - 0.8179611650485438
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8214285714285714
  - 0.8317307692307693
  - 0.8155339805825242
  - 0.8149038461538461
  - 0.8179611650485437
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8214285714285714
  - 0.8317307692307693
  - 0.8155339805825242
  - 0.8149038461538461
  - 0.8179611650485437
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7719676549865229
  - 0.7851331360946746
  - 0.7667102315160569
  - 0.7551775147928995
  - 0.7681923254738788
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7078958829758313
  - 0.7214439487519041
  - 0.700036872994402
  - 0.7041948819296027
  - 0.7036435303198944
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.696969696969697
  - 0.7119341563786008
  - 0.6885245901639344
  - 0.6876267748478702
  - 0.6919917864476386
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7155555555555555
  - 0.7307692307692307
  - 0.7061488673139155
  - 0.7038461538461538
  - 0.7113268608414235
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6331726959633868
  - 0.6484152172321764
  - 0.625921498992584
  - 0.6163213138809858
  - 0.6265761886335645
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9547619047619046
  - 0.9839743589743589
  - 0.941747572815534
  - 0.9719551282051282
  - 0.9635922330097088
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.35716656690078713
  - 0.36903345227548984
  - 0.3330284873267084
  - 0.34883080944649025
  - 0.3351386814404145
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4858675983052304
  - 0.5167356256406972
  - 0.46469937897582003
  - 0.45631811390705446
  - 0.479185297134915
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.29523809523809524
  - 0.3269230769230769
  - 0.27184466019417475
  - 0.25961538461538464
  - 0.2912621359223301
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.45429398079584904
  - 0.4843697981092252
  - 0.4269139877423337
  - 0.4172367925577344
  - 0.44198515962919466
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9662323387843736
  - 0.9880948029532972
  - 0.9568904084905396
  - 0.9790717867191131
  - 0.9729733502864285
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1333333333333333
  - -1.0384615384615385
  - -1.1650485436893203
  - -1.0769230769230769
  - -1.1067961165048543
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1785714285714286
  - -0.16826923076923078
  - -0.18446601941747573
  - -0.18509615384615383
  - -0.1820388349514563
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17857142857142858
  - -0.16826923076923078
  - -0.18446601941747573
  - -0.18509615384615385
  - -0.1820388349514563
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17857142857142858
  - -0.16826923076923078
  - -0.18446601941747573
  - -0.18509615384615385
  - -0.1820388349514563
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.22803234501347708
  - -0.21486686390532544
  - -0.23328976848394323
  - -0.24482248520710057
  - -0.2318076745261211
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04126984126984127
  - -0.01282051282051282
  - -0.05258899676375404
  - -0.02564102564102564
  - -0.02912621359223301
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8214285714285715
  - 0.8317307692307692
  - 0.8155339805825244
  - 0.8149038461538461
  - 0.8179611650485438
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8214285714285714
  - 0.8317307692307693
  - 0.8155339805825242
  - 0.8149038461538461
  - 0.8179611650485437
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8214285714285714
  - 0.8317307692307693
  - 0.8155339805825242
  - 0.8149038461538461
  - 0.8179611650485437
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7719676549865229
  - 0.7851331360946746
  - 0.7667102315160569
  - 0.7551775147928995
  - 0.7681923254738788
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8214285714285715
  - 0.8317307692307692
  - 0.8155339805825244
  - 0.8149038461538461
  - 0.8179611650485438
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8214285714285714
  - 0.8317307692307693
  - 0.8155339805825242
  - 0.8149038461538461
  - 0.8179611650485437
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8214285714285714
  - 0.8317307692307693
  - 0.8155339805825242
  - 0.8149038461538461
  - 0.8179611650485437
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7719676549865229
  - 0.7851331360946746
  - 0.7667102315160569
  - 0.7551775147928995
  - 0.7681923254738788
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9371136041325221
  - 0.9949270953787803
  - 0.987123861765028
  - 0.9857457906998519
  - 0.976221110133839
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9684533109001323
  - 0.9954388560157791
  - 0.987169080919081
  - 0.9861932938856016
  - 0.9879013494648674
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9587301587301588
  - 0.9871794871794872
  - 0.947411003236246
  - 0.9743589743589745
  - 0.970873786407767
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9740777126904064
  - 0.9939919410927985
  - 0.9887052368850161
  - 0.987444963701757
  - 0.9864966189922795
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9064726445721781
  - 0.9267228469109016
  - 0.9717766135962094
  - 0.9755429018337829
  - 0.9621240070695548
  train_average_precision_macro_oob:
  - 0.8359417233210436
  - 0.8539279975101924
  - 0.9649309109911806
  - 0.9190008043587954
  - 0.9372588123794063
  train_average_precision_micro:
  - 0.9780823823565483
  - 0.9851367407367798
  - 0.9891452983326583
  - 0.9896002033881991
  - 0.9904648859082359
  train_average_precision_micro_oob:
  - 0.9705279941555652
  - 0.9754824849522642
  - 0.9810135188182169
  - 0.9781442008261331
  - 0.9846815225164444
  train_average_precision_samples:
  - 0.9774557165861514
  - 0.9805220883534136
  - 0.9805689102564104
  - 0.9791164658634539
  - 0.9803685897435899
  train_average_precision_samples_oob:
  - 0.962157809983897
  - 0.9682730923694779
  - 0.9721554487179488
  - 0.9670682730923695
  - 0.9727564102564101
  train_average_precision_weighted:
  - 0.9733518773368443
  - 0.9792901554438862
  - 0.9881416769274541
  - 0.988368313183267
  - 0.9888674711447951
  train_average_precision_weighted_oob:
  - 0.959101091507428
  - 0.961595355084864
  - 0.9799510226486148
  - 0.974971618136431
  - 0.9815022446783516
  train_f1_macro:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_f1_macro_oob:
  - 0.8218599033816425
  - 0.819277108433735
  - 0.8287259615384616
  - 0.824698795180723
  - 0.8263221153846154
  train_f1_micro:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_f1_micro_oob:
  - 0.8218599033816425
  - 0.8192771084337349
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8263221153846154
  train_f1_samples:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_f1_samples_oob:
  - 0.8218599033816425
  - 0.8192771084337349
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8263221153846154
  train_f1_weighted:
  - 0.7996617198994428
  - 0.8117894010409178
  - 0.7901023499173858
  - 0.799804468470541
  - 0.8100271439087228
  train_f1_weighted_oob:
  - 0.7739315793741818
  - 0.7709118095292866
  - 0.784439829263815
  - 0.7769617850878454
  - 0.7830097534044902
  train_jaccard_macro:
  - 0.7327918483576058
  - 0.7460934718896751
  - 0.7242323652586939
  - 0.7388539712336941
  - 0.7418827540374157
  train_jaccard_macro_oob:
  - 0.7077035742897577
  - 0.7041782438873043
  - 0.7165434638812903
  - 0.7119045075811657
  - 0.7129928242818255
  train_jaccard_micro:
  - 0.725
  - 0.7391304347826086
  - 0.7154639175257732
  - 0.7300677436164669
  - 0.735140771637122
  train_jaccard_micro_oob:
  - 0.6975909789851358
  - 0.6938775510204082
  - 0.7075423293996922
  - 0.7016914402870323
  - 0.7040450588837686
  train_jaccard_samples:
  - 0.7458937198067632
  - 0.7612851405622488
  - 0.7355769230769231
  - 0.7510040160642568
  - 0.7560897435897436
  train_jaccard_samples_oob:
  - 0.7159420289855071
  - 0.7121285140562248
  - 0.7272435897435897
  - 0.7208032128514056
  - 0.7227564102564101
  train_jaccard_weighted:
  - 0.6680894005901247
  - 0.6852788749769226
  - 0.6552990815482612
  - 0.6696878449619404
  - 0.6823205537332426
  train_jaccard_weighted_oob:
  - 0.6337863635804901
  - 0.630125660074829
  - 0.6473251576715208
  - 0.6381591193104498
  - 0.6454352700794189
  train_label_ranking_average_precision_score:
  - 0.9774557165861512
  - 0.9805220883534136
  - 0.9805689102564101
  - 0.9791164658634538
  - 0.9803685897435896
  train_label_ranking_average_precision_score_oob:
  - 0.9621578099838968
  - 0.968273092369478
  - 0.9721554487179487
  - 0.9670682730923694
  - 0.9727564102564104
  train_matthews_corrcoef_macro:
  - 0.3945598250324508
  - 0.42528566043660593
  - 0.3818393906288012
  - 0.4159158917964728
  - 0.412121812637364
  train_matthews_corrcoef_macro_oob:
  - 0.34750657470842017
  - 0.34427641410350346
  - 0.36072784036938493
  - 0.3594280917171856
  - 0.35312455014810873
  train_matthews_corrcoef_micro:
  - 0.5499634792823521
  - 0.5813132281967108
  - 0.5285439133886115
  - 0.5620736694284454
  - 0.5708830843638294
  train_matthews_corrcoef_micro_oob:
  - 0.4861103424946269
  - 0.47824566334369806
  - 0.5092092472867964
  - 0.49745578010288855
  - 0.5005086015710015
  train_matthews_corrcoef_samples:
  - 0.3695652173913043
  - 0.40963855421686746
  - 0.34375
  - 0.3835053025021187
  - 0.3932147843009366
  train_matthews_corrcoef_samples_oob:
  - 0.2946859903381642
  - 0.28674698795180725
  - 0.3237179487179488
  - 0.30843373493975906
  - 0.31009615384615385
  train_matthews_corrcoef_weighted:
  - 0.5160763923064157
  - 0.5480153585835144
  - 0.4959964591471176
  - 0.5296521161770515
  - 0.5370029615376812
  train_matthews_corrcoef_weighted_oob:
  - 0.45377956206323444
  - 0.4464777445430795
  - 0.4744703193765802
  - 0.4649738658446726
  - 0.4653464391643779
  train_ndgc:
  - 0.9831877316383814
  - 0.9856686364907242
  - 0.9855813307714686
  - 0.984490216656809
  - 0.9853576710209577
  train_ndgc_oob:
  - 0.9719500813284814
  - 0.9765511788509703
  - 0.9792954464696239
  - 0.9756321293252801
  - 0.9799060298639708
  train_neg_coverage_error:
  - -1.067632850241546
  - -1.0554216867469879
  - -1.0528846153846154
  - -1.0602409638554218
  - -1.0576923076923077
  train_neg_coverage_error_oob:
  - -1.1111111111111112
  - -1.0867469879518072
  - -1.0769230769230769
  - -1.0987951807228915
  - -1.0745192307692308
  train_neg_hamming_loss_macro:
  - -0.15942028985507245
  - -0.15
  - -0.16586538461538464
  - -0.15602409638554215
  - -0.15264423076923075
  train_neg_hamming_loss_macro_oob:
  - -0.17814009661835747
  - -0.1807228915662651
  - -0.17127403846153846
  - -0.1753012048192771
  - -0.1736778846153846
  train_neg_hamming_loss_micro:
  - -0.15942028985507245
  - -0.15
  - -0.1658653846153846
  - -0.15602409638554218
  - -0.15264423076923078
  train_neg_hamming_loss_micro_oob:
  - -0.17814009661835747
  - -0.18072289156626506
  - -0.17127403846153846
  - -0.1753012048192771
  - -0.1736778846153846
  train_neg_hamming_loss_samples:
  - -0.15942028985507245
  - -0.15
  - -0.1658653846153846
  - -0.15602409638554218
  - -0.15264423076923078
  train_neg_hamming_loss_samples_oob:
  - -0.17814009661835747
  - -0.18072289156626506
  - -0.17127403846153846
  - -0.1753012048192771
  - -0.1736778846153846
  train_neg_hamming_loss_weighted:
  - -0.20033828010055724
  - -0.1882105989590821
  - -0.2098976500826143
  - -0.20019553152945913
  - -0.18997285609127718
  train_neg_hamming_loss_weighted_oob:
  - -0.22606842062581817
  - -0.22908819047071338
  - -0.21556017073618505
  - -0.22303821491215464
  - -0.21699024659550972
  train_neg_label_ranking_loss:
  - -0.02012882447665056
  - -0.015060240963855422
  - -0.015224358974358974
  - -0.016867469879518072
  - -0.017628205128205125
  train_neg_label_ranking_loss_oob:
  - -0.03421900161030595
  - -0.02550200803212851
  - -0.023237179487179484
  - -0.029317269076305216
  - -0.02283653846153846
  train_precision_macro:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_precision_macro_oob:
  - 0.8218599033816425
  - 0.819277108433735
  - 0.8287259615384616
  - 0.824698795180723
  - 0.8263221153846154
  train_precision_micro:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_precision_micro_oob:
  - 0.8218599033816425
  - 0.8192771084337349
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8263221153846154
  train_precision_samples:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_precision_samples_oob:
  - 0.8218599033816425
  - 0.8192771084337349
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8263221153846154
  train_precision_weighted:
  - 0.7996617198994428
  - 0.8117894010409178
  - 0.7901023499173858
  - 0.799804468470541
  - 0.8100271439087228
  train_precision_weighted_oob:
  - 0.7739315793741818
  - 0.7709118095292866
  - 0.784439829263815
  - 0.7769617850878454
  - 0.7830097534044902
  train_recall_macro:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_recall_macro_oob:
  - 0.8218599033816425
  - 0.819277108433735
  - 0.8287259615384616
  - 0.824698795180723
  - 0.8263221153846154
  train_recall_micro:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_recall_micro_oob:
  - 0.8218599033816425
  - 0.8192771084337349
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8263221153846154
  train_recall_samples:
  - 0.8405797101449275
  - 0.85
  - 0.8341346153846154
  - 0.8439759036144578
  - 0.8473557692307693
  train_recall_samples_oob:
  - 0.8218599033816425
  - 0.8192771084337349
  - 0.8287259615384616
  - 0.8246987951807229
  - 0.8263221153846154
  train_recall_weighted:
  - 0.7996617198994428
  - 0.8117894010409178
  - 0.7901023499173858
  - 0.799804468470541
  - 0.8100271439087228
  train_recall_weighted_oob:
  - 0.7739315793741818
  - 0.7709118095292866
  - 0.784439829263815
  - 0.7769617850878454
  - 0.7830097534044902
  train_roc_auc_macro:
  - 0.9813980055711335
  - 0.9927939782943248
  - 0.9953461861152979
  - 0.9957355892649027
  - 0.9954900645564569
  train_roc_auc_macro_oob:
  - 0.9731405926980027
  - 0.9863069363600501
  - 0.9924466888676465
  - 0.9870857306250176
  - 0.9837854293033974
  train_roc_auc_micro:
  - 0.989333472689161
  - 0.9945978587596807
  - 0.9958708341720102
  - 0.9962652337882877
  - 0.9959545185742702
  train_roc_auc_micro_oob:
  - 0.9857818345807615
  - 0.9898534363887772
  - 0.9931429776384776
  - 0.9903823039007345
  - 0.9920434385248105
  train_roc_auc_samples:
  - 0.9798711755233495
  - 0.9849397590361446
  - 0.9847756410256411
  - 0.983132530120482
  - 0.9823717948717948
  train_roc_auc_samples_oob:
  - 0.9657809983896941
  - 0.9744979919678713
  - 0.9767628205128206
  - 0.9706827309236948
  - 0.9771634615384616
  train_roc_auc_weighted:
  - 0.9911159835263308
  - 0.9948437579494607
  - 0.9957193583495051
  - 0.9958865735192185
  - 0.9958469213078117
  train_roc_auc_weighted_oob:
  - 0.987681072336533
  - 0.9891900062728319
  - 0.9919582970265588
  - 0.9917559089325025
  - 0.9918295797463427
start: 2023-12-21 17:00:55.345096
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
