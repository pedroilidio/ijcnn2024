active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMBAMzMzMzMDQMDMzMzMzATAQDMzMzMzA0CAZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:53:20.949043
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__6
  params: {}
hash: f8e2d59252dab4c81e819463931c8d7eee0285377614e8ae696550fbfb8cdd5c
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f8e2d59_20231221T085143161109_embedding_weak__6_VirusGO.yml
results:
  fit_time:
  - 86.28072619438171
  - 87.7893934249878
  - 87.26739621162415
  - 88.16999340057373
  - 88.91988182067871
  score_time:
  - 2.731555938720703
  - 2.919374465942383
  - 2.684422254562378
  - 2.8683104515075684
  - 2.8849213123321533
  test_average_precision_macro:
  - 0.9353539274244138
  - 0.9765224447204051
  - 0.8942783574781261
  - 0.9064140138018605
  - 0.8633763690257018
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.901407162842874
  - 0.9344257923172321
  - 0.8223475920258864
  - 0.8410884214304316
  - 0.9030137224853245
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9425925925925925
  - 0.9495726495726498
  - 0.9337121212121211
  - 0.9042735042735043
  - 0.9216666666666665
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9190332118861531
  - 0.964393660438394
  - 0.8567156451950146
  - 0.8969620696772995
  - 0.9146993407349445
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8148148148148149
  - 0.7905982905982906
  - 0.8068181818181818
  - 0.7777777777777778
  - 0.8083333333333335
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8148148148148148
  - 0.7905982905982906
  - 0.8068181818181818
  - 0.7777777777777778
  - 0.8083333333333333
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8148148148148151
  - 0.7905982905982905
  - 0.806818181818182
  - 0.7777777777777777
  - 0.8083333333333333
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.72
  - 0.6614338042909471
  - 0.7045454545454545
  - 0.6558185404339251
  - 0.695
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7076924958061649
  - 0.6828257659653008
  - 0.698407707107552
  - 0.6645460617560325
  - 0.7019506394587788
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6875
  - 0.6537102473498233
  - 0.6761904761904762
  - 0.6363636363636364
  - 0.6783216783216783
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6904761904761906
  - 0.6593406593406596
  - 0.6801948051948054
  - 0.6440781440781443
  - 0.6916666666666668
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5784605226467093
  - 0.5146687911044816
  - 0.5611836337962015
  - 0.5095427220978535
  - 0.54915544911638
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9425925925925926
  - 0.9495726495726498
  - 0.9337121212121211
  - 0.9042735042735043
  - 0.9216666666666665
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.061418977599174064
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.25378490826094635
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.1
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.132664991614216
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9574714592073698
  - 0.9644154977609659
  - 0.952855846423364
  - 0.9357557569240585
  - 0.9437976175229051
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2444444444444445
  - -1.435897435897436
  - -1.3409090909090908
  - -1.7435897435897436
  - -1.625
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1851851851851852
  - -0.2094017094017094
  - -0.19318181818181815
  - -0.22222222222222224
  - -0.19166666666666668
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18518518518518517
  - -0.2094017094017094
  - -0.19318181818181818
  - -0.2222222222222222
  - -0.19166666666666668
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18518518518518515
  - -0.20940170940170938
  - -0.19318181818181815
  - -0.22222222222222215
  - -0.19166666666666665
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.28
  - -0.3385661957090529
  - -0.29545454545454547
  - -0.34418145956607493
  - -0.305
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.027777777777777776
  - -0.03012820512820513
  - -0.03409090909090909
  - -0.06282051282051282
  - -0.06645833333333333
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8148148148148149
  - 0.7905982905982906
  - 0.8068181818181818
  - 0.7777777777777778
  - 0.8083333333333335
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8148148148148148
  - 0.7905982905982906
  - 0.8068181818181818
  - 0.7777777777777778
  - 0.8083333333333333
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8148148148148151
  - 0.7905982905982905
  - 0.806818181818182
  - 0.7777777777777777
  - 0.8083333333333333
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.72
  - 0.6614338042909471
  - 0.7045454545454545
  - 0.6558185404339251
  - 0.695
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8148148148148149
  - 0.7905982905982906
  - 0.8068181818181818
  - 0.7777777777777778
  - 0.8083333333333335
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8148148148148148
  - 0.7905982905982906
  - 0.8068181818181818
  - 0.7777777777777778
  - 0.8083333333333333
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8148148148148151
  - 0.7905982905982905
  - 0.806818181818182
  - 0.7777777777777777
  - 0.8083333333333333
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.72
  - 0.6614338042909471
  - 0.7045454545454545
  - 0.6558185404339251
  - 0.695
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9856788109980835
  - 0.9903425006366183
  - 0.9683275318385612
  - 0.9683013609484199
  - 0.9219036593557054
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9802727272727273
  - 0.9825703254274682
  - 0.9610144527294486
  - 0.9564666103127641
  - 0.9450526315789474
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9722222222222222
  - 0.969871794871795
  - 0.9659090909090909
  - 0.9371794871794871
  - 0.9335416666666665
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.976672932330827
  - 0.9817916777100452
  - 0.9460953600659483
  - 0.9562437562437562
  - 0.9394839701361442
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9530963274913248
  - 0.9555621527508739
  - 0.9550833027405062
  - 0.9560529679868109
  - 0.9546025141829494
  train_average_precision_macro_oob:
  - 0.8616152114114172
  - 0.8884431476741579
  - 0.8853224302180265
  - 0.8728080511236885
  - 0.9036059866607475
  train_average_precision_micro:
  - 0.931804011771757
  - 0.9324002478233083
  - 0.9364061635674508
  - 0.923149630728525
  - 0.9311918265761923
  train_average_precision_micro_oob:
  - 0.8517554447517793
  - 0.8644115677952352
  - 0.8546490612941127
  - 0.8376933869813868
  - 0.8576480052814308
  train_average_precision_samples:
  - 0.9376543209876542
  - 0.9520833333333333
  - 0.961042944785276
  - 0.9691468253968254
  - 0.9602794411177645
  train_average_precision_samples_oob:
  - 0.8842592592592593
  - 0.9285714285714286
  - 0.9111792774369463
  - 0.9092261904761904
  - 0.9185628742514971
  train_average_precision_weighted:
  - 0.9600924504493807
  - 0.9553672729783687
  - 0.9541646211879633
  - 0.9492521485493631
  - 0.9514616154192006
  train_average_precision_weighted_oob:
  - 0.8911467386495937
  - 0.8899551228036038
  - 0.8909316232806613
  - 0.8753157839490044
  - 0.8991439539613678
  train_f1_macro:
  - 0.7962962962962963
  - 0.8015873015873017
  - 0.7995910020449898
  - 0.808531746031746
  - 0.8093812375249501
  train_f1_macro_oob:
  - 0.7921810699588477
  - 0.7986111111111112
  - 0.7944785276073619
  - 0.8025793650793651
  - 0.8093812375249501
  train_f1_micro:
  - 0.7962962962962963
  - 0.8015873015873016
  - 0.7995910020449898
  - 0.808531746031746
  - 0.8093812375249501
  train_f1_micro_oob:
  - 0.7921810699588477
  - 0.7986111111111112
  - 0.7944785276073619
  - 0.8025793650793651
  - 0.8093812375249501
  train_f1_samples:
  - 0.7962962962962963
  - 0.8015873015873015
  - 0.7995910020449897
  - 0.8085317460317459
  - 0.8093812375249498
  train_f1_samples_oob:
  - 0.7921810699588476
  - 0.798611111111111
  - 0.7944785276073618
  - 0.802579365079365
  - 0.8093812375249498
  train_f1_weighted:
  - 0.6801124556900134
  - 0.6930272108843537
  - 0.6865671641791045
  - 0.702232142857143
  - 0.7098179877868026
  train_f1_weighted_oob:
  - 0.6715560444933382
  - 0.6868695754163735
  - 0.6760675151848121
  - 0.6902678571428571
  - 0.7098179877868026
  train_jaccard_macro:
  - 0.6870289009742808
  - 0.6924708840342513
  - 0.6905892956696592
  - 0.7010954813670591
  - 0.7003586892251881
  train_jaccard_macro_oob:
  - 0.6829454164007781
  - 0.6894671293408846
  - 0.685475473919289
  - 0.6947976855955792
  - 0.7003586892251881
  train_jaccard_micro:
  - 0.6615384615384615
  - 0.6688741721854304
  - 0.666098807495741
  - 0.678601165695254
  - 0.6797988264878457
  train_jaccard_micro_oob:
  - 0.65587734241908
  - 0.6647398843930635
  - 0.6590330788804071
  - 0.6702568351284176
  - 0.6797988264878457
  train_jaccard_samples:
  - 0.6675485008818343
  - 0.6755952380952381
  - 0.6726555652936023
  - 0.6859410430839004
  - 0.6884801824921586
  train_jaccard_samples_oob:
  - 0.6622574955908289
  - 0.6704931972789117
  - 0.6652059596844874
  - 0.6757369614512473
  - 0.6884801824921586
  train_jaccard_weighted:
  - 0.534119399897598
  - 0.5481709881556767
  - 0.5408730938851927
  - 0.5580577212784433
  - 0.5656380991853216
  train_jaccard_weighted_oob:
  - 0.5256289864279389
  - 0.5419563232728489
  - 0.530373067198683
  - 0.5453991517777685
  - 0.5656380991853216
  train_label_ranking_average_precision_score:
  - 0.9376543209876543
  - 0.9520833333333334
  - 0.961042944785276
  - 0.9691468253968254
  - 0.9602794411177645
  train_label_ranking_average_precision_score_oob:
  - 0.8842592592592594
  - 0.9285714285714286
  - 0.911179277436946
  - 0.9092261904761907
  - 0.9185628742514972
  train_matthews_corrcoef_macro:
  - 0.03040150583709546
  - 0.02659080117391552
  - 0.048540822834589104
  - 0.04266857285380698
  - 0.07344254949779476
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.01583484437882243
  - 0.07344254949779476
  train_matthews_corrcoef_micro:
  - 0.12550527940097084
  - 0.10879965486912048
  - 0.14094220535639704
  - 0.16808256379454786
  - 0.20966639311838467
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.06333969200992859
  - 0.20966639311838467
  train_matthews_corrcoef_samples:
  - 0.015616185976140146
  - 0.017857142857142856
  - 0.023910224515957226
  - 0.041666666666666664
  - 0.0658682634730539
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.005952380952380952
  - 0.0658682634730539
  train_matthews_corrcoef_weighted:
  - 0.06321105174049552
  - 0.05501545070465281
  - 0.09943733647877143
  - 0.08576383143615202
  - 0.1486260075061477
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.03182803720143308
  - 0.1486260075061477
  train_ndgc:
  - 0.9552513880380278
  - 0.9657487170634763
  - 0.9726272217929239
  - 0.9779391946962426
  - 0.9717144702184023
  train_ndgc_oob:
  - 0.9170534301024558
  - 0.9498634051110889
  - 0.9370930029869763
  - 0.9343363132086159
  - 0.943064328944576
  train_neg_coverage_error:
  - -1.462962962962963
  - -1.3869047619047619
  - -1.3680981595092025
  - -1.2976190476190477
  - -1.3353293413173652
  train_neg_coverage_error_oob:
  - -1.6666666666666667
  - -1.5
  - -1.5582822085889572
  - -1.505952380952381
  - -1.4910179640718564
  train_neg_hamming_loss_macro:
  - -0.20370370370370372
  - -0.19841269841269846
  - -0.20040899795501024
  - -0.19146825396825395
  - -0.1906187624750499
  train_neg_hamming_loss_macro_oob:
  - -0.20781893004115223
  - -0.20138888888888892
  - -0.20552147239263807
  - -0.19742063492063489
  - -0.1906187624750499
  train_neg_hamming_loss_micro:
  - -0.2037037037037037
  - -0.1984126984126984
  - -0.20040899795501022
  - -0.19146825396825398
  - -0.1906187624750499
  train_neg_hamming_loss_micro_oob:
  - -0.20781893004115226
  - -0.2013888888888889
  - -0.20552147239263804
  - -0.1974206349206349
  - -0.1906187624750499
  train_neg_hamming_loss_samples:
  - -0.2037037037037037
  - -0.19841269841269843
  - -0.20040899795501024
  - -0.191468253968254
  - -0.19061876247504989
  train_neg_hamming_loss_samples_oob:
  - -0.2078189300411523
  - -0.20138888888888887
  - -0.20552147239263804
  - -0.19742063492063494
  - -0.19061876247504989
  train_neg_hamming_loss_weighted:
  - -0.3198875443099865
  - -0.3069727891156463
  - -0.3134328358208955
  - -0.29776785714285714
  - -0.29018201221319734
  train_neg_hamming_loss_weighted_oob:
  - -0.3284439555066617
  - -0.3131304245836266
  - -0.3239324848151879
  - -0.30973214285714284
  - -0.29018201221319734
  train_neg_label_ranking_loss:
  - -0.03926611796982167
  - -0.03273809523809524
  - -0.02315950920245399
  - -0.019494047619047623
  - -0.022305389221556886
  train_neg_label_ranking_loss_oob:
  - -0.07597736625514404
  - -0.05028108465608466
  - -0.05817995910020451
  - -0.058763227513227524
  - -0.04790419161676647
  train_precision_macro:
  - 0.7962962962962963
  - 0.8015873015873017
  - 0.7995910020449898
  - 0.808531746031746
  - 0.8093812375249501
  train_precision_macro_oob:
  - 0.7921810699588477
  - 0.7986111111111112
  - 0.7944785276073619
  - 0.8025793650793651
  - 0.8093812375249501
  train_precision_micro:
  - 0.7962962962962963
  - 0.8015873015873016
  - 0.7995910020449898
  - 0.808531746031746
  - 0.8093812375249501
  train_precision_micro_oob:
  - 0.7921810699588477
  - 0.7986111111111112
  - 0.7944785276073619
  - 0.8025793650793651
  - 0.8093812375249501
  train_precision_samples:
  - 0.7962962962962963
  - 0.8015873015873015
  - 0.7995910020449897
  - 0.8085317460317459
  - 0.8093812375249498
  train_precision_samples_oob:
  - 0.7921810699588476
  - 0.798611111111111
  - 0.7944785276073618
  - 0.802579365079365
  - 0.8093812375249498
  train_precision_weighted:
  - 0.6801124556900134
  - 0.6930272108843537
  - 0.6865671641791045
  - 0.702232142857143
  - 0.7098179877868026
  train_precision_weighted_oob:
  - 0.6715560444933382
  - 0.6868695754163735
  - 0.6760675151848121
  - 0.6902678571428571
  - 0.7098179877868026
  train_recall_macro:
  - 0.7962962962962963
  - 0.8015873015873017
  - 0.7995910020449898
  - 0.808531746031746
  - 0.8093812375249501
  train_recall_macro_oob:
  - 0.7921810699588477
  - 0.7986111111111112
  - 0.7944785276073619
  - 0.8025793650793651
  - 0.8093812375249501
  train_recall_micro:
  - 0.7962962962962963
  - 0.8015873015873016
  - 0.7995910020449898
  - 0.808531746031746
  - 0.8093812375249501
  train_recall_micro_oob:
  - 0.7921810699588477
  - 0.7986111111111112
  - 0.7944785276073619
  - 0.8025793650793651
  - 0.8093812375249501
  train_recall_samples:
  - 0.7962962962962963
  - 0.8015873015873015
  - 0.7995910020449897
  - 0.8085317460317459
  - 0.8093812375249498
  train_recall_samples_oob:
  - 0.7921810699588476
  - 0.798611111111111
  - 0.7944785276073618
  - 0.802579365079365
  - 0.8093812375249498
  train_recall_weighted:
  - 0.6801124556900134
  - 0.6930272108843537
  - 0.6865671641791045
  - 0.702232142857143
  - 0.7098179877868026
  train_recall_weighted_oob:
  - 0.6715560444933382
  - 0.6868695754163735
  - 0.6760675151848121
  - 0.6902678571428571
  - 0.7098179877868026
  train_roc_auc_macro:
  - 0.979703701736863
  - 0.9815396660948118
  - 0.9839363921656874
  - 0.9814666052236395
  - 0.9788422420818764
  train_roc_auc_macro_oob:
  - 0.9617339643527689
  - 0.9605997209217715
  - 0.9674873116027835
  - 0.9608026605244925
  - 0.9666898373372682
  train_roc_auc_micro:
  - 0.9742220650636493
  - 0.9762873665208212
  - 0.9803780326168386
  - 0.9790563118811881
  - 0.9800928217821782
  train_roc_auc_micro_oob:
  - 0.9478333547640478
  - 0.9583208395802099
  - 0.9572920468442856
  - 0.9545173267326732
  - 0.9615655940594059
  train_roc_auc_samples:
  - 0.9607338820301785
  - 0.9672619047619048
  - 0.9768404907975462
  - 0.9805059523809525
  - 0.9776946107784431
  train_roc_auc_samples_oob:
  - 0.9240226337448559
  - 0.9497189153439154
  - 0.9418200408997955
  - 0.9412367724867726
  - 0.9520958083832335
  train_roc_auc_weighted:
  - 0.9775235677884792
  - 0.9755930031376743
  - 0.9776347751218025
  - 0.9759148721812508
  - 0.9745220989189066
  train_roc_auc_weighted_oob:
  - 0.9587138455580873
  - 0.9527808889949546
  - 0.95652120795697
  - 0.9561734868816757
  - 0.9571421278497629
start: 2023-12-21 08:51:43.161109
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
