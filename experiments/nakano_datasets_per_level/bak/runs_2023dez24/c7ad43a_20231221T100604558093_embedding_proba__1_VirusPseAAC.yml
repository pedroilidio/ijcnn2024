active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0DAzMzMzMwEwICZmZmZmfm/AJqZmZmZ2T+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:06:11.621230
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__1
  params: {}
hash: c7ad43acb07e0f5315d59c54092a23ed63e310edfe8da79f52c65bc7b01047a0
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c7ad43a_20231221T100604558093_embedding_proba__1_VirusPseAAC.yml
results:
  fit_time:
  - 2.521420955657959
  - 2.537180185317993
  - 2.491008758544922
  - 2.414917230606079
  - 2.4028375148773193
  score_time:
  - 1.2130358219146729
  - 1.1357369422912598
  - 1.1520977020263672
  - 1.269496202468872
  - 1.189136028289795
  test_average_precision_macro:
  - 0.4077899922691413
  - 0.33691161241120987
  - 0.542882501021504
  - 0.326906839607064
  - 0.4585006896338373
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4858803537046209
  - 0.4045439374339877
  - 0.48699753157067704
  - 0.46769425798098313
  - 0.46155769471909364
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6834757834757834
  - 0.6833333333333332
  - 0.6883720930232559
  - 0.7048780487804878
  - 0.6983333333333333
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4685644864446352
  - 0.40766812714312944
  - 0.5369141645177308
  - 0.4455915993963929
  - 0.4736428357145206
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7948717948717948
  - 0.7992424242424242
  - 0.8178294573643411
  - 0.8130081300813008
  - 0.7791666666666667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7948717948717948
  - 0.7992424242424242
  - 0.8178294573643411
  - 0.8130081300813008
  - 0.7791666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7948717948717948
  - 0.7992424242424243
  - 0.8178294573643412
  - 0.8130081300813007
  - 0.7791666666666666
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6948717948717948
  - 0.6883741258741257
  - 0.7213953488372092
  - 0.7033349925335988
  - 0.6411764705882352
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6817589051853606
  - 0.6911445012787724
  - 0.7110288932243778
  - 0.7073980755671685
  - 0.6716262744234535
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6595744680851063
  - 0.6656151419558359
  - 0.6918032786885245
  - 0.684931506849315
  - 0.6382252559726962
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.672771672771673
  - 0.6845238095238095
  - 0.7153931339977853
  - 0.7067363530778166
  - 0.6565476190476192
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5498130676678223
  - 0.5451189422257197
  - 0.5795537981626779
  - 0.5581069659240009
  - 0.49615371249871393
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6834757834757834
  - 0.6833333333333333
  - 0.6883720930232557
  - 0.7048780487804877
  - 0.6983333333333333
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.019932752419718605
  - 0.03845356342023907
  - 0.07033003808649038
  - 0.06869642983764883
  - 0.00932525009437245
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1991363339601932
  - 0.23016448666793354
  - 0.29396597861718493
  - 0.3226844001781934
  - 0.175050164393881
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1050606819513084
  - 0.1779171005814579
  - 0.24456343641899625
  - 0.27551341205247665
  - 0.13952847075210476
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0433688553021929
  - 0.07947775696198173
  - 0.1434732776964404
  - 0.14300073149877918
  - 0.017124031670781126
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7648171129305299
  - 0.7650702370841411
  - 0.7691435784204936
  - 0.7804070129205778
  - 0.7760798837265368
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.3076923076923075
  - -2.227272727272727
  - -2.0232558139534884
  - -2.2195121951219514
  - -2.275
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20512820512820515
  - -0.20075757575757572
  - -0.1821705426356589
  - -0.1869918699186992
  - -0.22083333333333335
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20512820512820512
  - -0.20075757575757575
  - -0.1821705426356589
  - -0.18699186991869918
  - -0.22083333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20512820512820512
  - -0.20075757575757572
  - -0.1821705426356589
  - -0.18699186991869918
  - -0.2208333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.30512820512820515
  - -0.3116258741258741
  - -0.2786046511627907
  - -0.29666500746640123
  - -0.3588235294117647
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20762108262108264
  - -0.20309343434343435
  - -0.1819767441860465
  - -0.2030487804878049
  - -0.199375
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7948717948717948
  - 0.7992424242424242
  - 0.8178294573643411
  - 0.8130081300813008
  - 0.7791666666666667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7948717948717948
  - 0.7992424242424242
  - 0.8178294573643411
  - 0.8130081300813008
  - 0.7791666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7948717948717948
  - 0.7992424242424243
  - 0.8178294573643412
  - 0.8130081300813007
  - 0.7791666666666666
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6948717948717948
  - 0.6883741258741257
  - 0.7213953488372092
  - 0.7033349925335988
  - 0.6411764705882352
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7948717948717948
  - 0.7992424242424242
  - 0.8178294573643411
  - 0.8130081300813008
  - 0.7791666666666667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7948717948717948
  - 0.7992424242424242
  - 0.8178294573643411
  - 0.8130081300813008
  - 0.7791666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7948717948717948
  - 0.7992424242424243
  - 0.8178294573643412
  - 0.8130081300813007
  - 0.7791666666666666
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6948717948717948
  - 0.6883741258741257
  - 0.7213953488372092
  - 0.7033349925335988
  - 0.6411764705882352
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7097407291620849
  - 0.5754980733534655
  - 0.7752911282323048
  - 0.6090790370202134
  - 0.6263739191328705
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7969565217391303
  - 0.7744920174165457
  - 0.8220192307692308
  - 0.7862840567699161
  - 0.7965556593007574
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7923789173789174
  - 0.7969065656565657
  - 0.8180232558139533
  - 0.796951219512195
  - 0.8006249999999999
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6486034192012453
  - 0.5858808671308672
  - 0.7028551628551629
  - 0.6118469781735087
  - 0.5983944302358625
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9830357142857142
  - 0.9849031131246352
  - 0.9150327280201022
  - 0.9611244092544425
  - 0.9281899856106511
  train_average_precision_macro_oob:
  - 0.7908394031165193
  - 0.803573758481838
  - 0.8002599116636091
  - 0.8005029532868324
  - 0.792939159921708
  train_average_precision_micro:
  - 0.9830737228774663
  - 0.9809236348203526
  - 0.9830016424172877
  - 0.9837764300462619
  - 0.9793666120692434
  train_average_precision_micro_oob:
  - 0.8289552695401151
  - 0.8209160673510163
  - 0.8455984999068902
  - 0.8550262759397582
  - 0.8479292014348518
  train_average_precision_samples:
  - 0.9791666666666666
  - 0.985685071574642
  - 0.9776422764227641
  - 0.9799196787148594
  - 0.9800399201596808
  train_average_precision_samples_oob:
  - 0.8419146825396825
  - 0.850562372188139
  - 0.8458333333333332
  - 0.863855421686747
  - 0.8527777777777777
  train_average_precision_weighted:
  - 0.9963578500707214
  - 0.996885329844285
  - 0.9771525176069131
  - 0.9913055452065883
  - 0.9750310379035946
  train_average_precision_weighted_oob:
  - 0.9076967921805754
  - 0.8968396992655389
  - 0.9231637568546323
  - 0.9159663709653608
  - 0.914077446268516
  train_f1_macro:
  - 0.9404761904761906
  - 0.9386503067484662
  - 0.9441056910569107
  - 0.9427710843373495
  - 0.9411177644710579
  train_f1_macro_oob:
  - 0.8978174603174605
  - 0.894683026584867
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.9031936127744511
  train_f1_micro:
  - 0.9404761904761905
  - 0.9386503067484663
  - 0.9441056910569106
  - 0.9427710843373494
  - 0.9411177644710579
  train_f1_micro_oob:
  - 0.8978174603174603
  - 0.8946830265848671
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.9031936127744511
  train_f1_samples:
  - 0.9404761904761905
  - 0.9386503067484663
  - 0.9441056910569107
  - 0.9427710843373494
  - 0.941117764471058
  train_f1_samples_oob:
  - 0.8978174603174602
  - 0.894683026584867
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.903193612774451
  train_f1_weighted:
  - 0.9619872701555869
  - 0.9579141104294479
  - 0.9670973194880464
  - 0.9664668526322037
  - 0.9604075431227097
  train_f1_weighted_oob:
  - 0.8847241867043848
  - 0.8812576687116566
  - 0.910076068582468
  - 0.902694521930085
  - 0.8983823397980158
  train_jaccard_macro:
  - 0.8904563283134087
  - 0.8867320128419532
  - 0.897002669924129
  - 0.8946084202046266
  - 0.8908455040906009
  train_jaccard_macro_oob:
  - 0.8165660915616167
  - 0.8115988635899822
  - 0.8348849459181628
  - 0.8259215511294887
  - 0.8251276047640809
  train_jaccard_micro:
  - 0.8876404494382022
  - 0.884393063583815
  - 0.8941289701636189
  - 0.8917378917378918
  - 0.8887841658812441
  train_jaccard_micro_oob:
  - 0.8145814581458146
  - 0.8094357076780758
  - 0.8324022346368715
  - 0.8241758241758241
  - 0.8234758871701547
  train_jaccard_samples:
  - 0.9013605442176872
  - 0.9003797838153667
  - 0.9075203252032519
  - 0.9057659208261617
  - 0.9020530367835755
  train_jaccard_samples_oob:
  - 0.8312074829931975
  - 0.8288051416885773
  - 0.8490127758420439
  - 0.8419391853126793
  - 0.8414599372683202
  train_jaccard_weighted:
  - 0.9295760602058744
  - 0.9214479338132007
  - 0.9391179998709698
  - 0.9380255225372417
  - 0.925881971829568
  train_jaccard_weighted_oob:
  - 0.7940218768931366
  - 0.7886569324203617
  - 0.8369293353495669
  - 0.8237819040494888
  - 0.8163279138831321
  train_label_ranking_average_precision_score:
  - 0.9791666666666666
  - 0.985685071574642
  - 0.9776422764227642
  - 0.9799196787148594
  - 0.9800399201596806
  train_label_ranking_average_precision_score_oob:
  - 0.8419146825396824
  - 0.850562372188139
  - 0.8458333333333333
  - 0.863855421686747
  - 0.8527777777777776
  train_matthews_corrcoef_macro:
  - 0.41228682593348026
  - 0.4186767971148478
  - 0.4346570552404505
  - 0.4299464437773393
  - 0.42907329925218524
  train_matthews_corrcoef_macro_oob:
  - 0.25555476909638236
  - 0.2527506087662873
  - 0.2824630048806331
  - 0.27232228893939786
  - 0.26989606428883156
  train_matthews_corrcoef_micro:
  - 0.808866897278306
  - 0.806151765027998
  - 0.8245625956944624
  - 0.8191351072711194
  - 0.8111724195283032
  train_matthews_corrcoef_micro_oob:
  - 0.6561862990888095
  - 0.6501838500362253
  - 0.7036733144930672
  - 0.6834692925395717
  - 0.6785181065048972
  train_matthews_corrcoef_samples:
  - 0.7157258737363215
  - 0.7199053999484722
  - 0.7336377929076517
  - 0.7357310608453083
  - 0.7285100492721909
  train_matthews_corrcoef_samples_oob:
  - 0.5531474986202808
  - 0.5518511904575
  - 0.5902375465858076
  - 0.5782003624789461
  - 0.569470605053721
  train_matthews_corrcoef_weighted:
  - 0.733865314649844
  - 0.7308636596924382
  - 0.7543475515645988
  - 0.7469153458725202
  - 0.7358036851464562
  train_matthews_corrcoef_weighted_oob:
  - 0.5239466221677118
  - 0.515949663392231
  - 0.5753452735380982
  - 0.5565812045934498
  - 0.5479585936897201
  train_ndgc:
  - 0.9847823797823454
  - 0.9896473009194022
  - 0.9839217109303793
  - 0.9850826446643725
  - 0.9856365334457442
  train_ndgc_oob:
  - 0.8837915034763594
  - 0.8913268577811622
  - 0.8868718861640832
  - 0.9000815191297444
  - 0.8923017670669043
  train_neg_coverage_error:
  - -1.255952380952381
  - -1.2638036809815951
  - -1.2926829268292683
  - -1.2710843373493976
  - -1.2634730538922156
  train_neg_coverage_error_oob:
  - -1.7142857142857142
  - -1.7484662576687116
  - -1.7865853658536586
  - -1.6987951807228916
  - -1.7365269461077844
  train_neg_hamming_loss_macro:
  - -0.05952380952380953
  - -0.06134969325153374
  - -0.05589430894308944
  - -0.0572289156626506
  - -0.05888223552894212
  train_neg_hamming_loss_macro_oob:
  - -0.10218253968253967
  - -0.10531697341513292
  - -0.09146341463414635
  - -0.09638554216867469
  - -0.09680638722554889
  train_neg_hamming_loss_micro:
  - -0.05952380952380952
  - -0.06134969325153374
  - -0.05589430894308943
  - -0.0572289156626506
  - -0.05888223552894212
  train_neg_hamming_loss_micro_oob:
  - -0.10218253968253968
  - -0.10531697341513292
  - -0.09146341463414634
  - -0.0963855421686747
  - -0.0968063872255489
  train_neg_hamming_loss_samples:
  - -0.05952380952380952
  - -0.06134969325153374
  - -0.05589430894308943
  - -0.0572289156626506
  - -0.05888223552894211
  train_neg_hamming_loss_samples_oob:
  - -0.10218253968253967
  - -0.10531697341513291
  - -0.09146341463414633
  - -0.09638554216867469
  - -0.09680638722554889
  train_neg_hamming_loss_weighted:
  - -0.038012729844413014
  - -0.04208588957055214
  - -0.032902680511953636
  - -0.03353314736779631
  - -0.0395924568772902
  train_neg_hamming_loss_weighted_oob:
  - -0.11527581329561527
  - -0.11874233128834356
  - -0.08992393141753201
  - -0.09730547806991512
  - -0.10161766020198411
  train_neg_label_ranking_loss:
  - -0.010267857142857143
  - -0.006901840490797546
  - -0.01128048780487805
  - -0.00963855421686747
  - -0.011077844311377247
  train_neg_label_ranking_loss_oob:
  - -0.10089285714285716
  - -0.09853442399454669
  - -0.10586043360433604
  - -0.09389223560910309
  - -0.10282767797737857
  train_precision_macro:
  - 0.9404761904761906
  - 0.9386503067484662
  - 0.9441056910569107
  - 0.9427710843373495
  - 0.9411177644710579
  train_precision_macro_oob:
  - 0.8978174603174605
  - 0.894683026584867
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.9031936127744511
  train_precision_micro:
  - 0.9404761904761905
  - 0.9386503067484663
  - 0.9441056910569106
  - 0.9427710843373494
  - 0.9411177644710579
  train_precision_micro_oob:
  - 0.8978174603174603
  - 0.8946830265848671
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.9031936127744511
  train_precision_samples:
  - 0.9404761904761905
  - 0.9386503067484663
  - 0.9441056910569107
  - 0.9427710843373494
  - 0.941117764471058
  train_precision_samples_oob:
  - 0.8978174603174602
  - 0.894683026584867
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.903193612774451
  train_precision_weighted:
  - 0.9619872701555869
  - 0.9579141104294479
  - 0.9670973194880464
  - 0.9664668526322037
  - 0.9604075431227097
  train_precision_weighted_oob:
  - 0.8847241867043848
  - 0.8812576687116566
  - 0.910076068582468
  - 0.902694521930085
  - 0.8983823397980158
  train_recall_macro:
  - 0.9404761904761906
  - 0.9386503067484662
  - 0.9441056910569107
  - 0.9427710843373495
  - 0.9411177644710579
  train_recall_macro_oob:
  - 0.8978174603174605
  - 0.894683026584867
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.9031936127744511
  train_recall_micro:
  - 0.9404761904761905
  - 0.9386503067484663
  - 0.9441056910569106
  - 0.9427710843373494
  - 0.9411177644710579
  train_recall_micro_oob:
  - 0.8978174603174603
  - 0.8946830265848671
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.9031936127744511
  train_recall_samples:
  - 0.9404761904761905
  - 0.9386503067484663
  - 0.9441056910569107
  - 0.9427710843373494
  - 0.941117764471058
  train_recall_samples_oob:
  - 0.8978174603174602
  - 0.894683026584867
  - 0.9085365853658537
  - 0.9036144578313253
  - 0.903193612774451
  train_recall_weighted:
  - 0.9619872701555869
  - 0.9579141104294479
  - 0.9670973194880464
  - 0.9664668526322037
  - 0.9604075431227097
  train_recall_weighted_oob:
  - 0.8847241867043848
  - 0.8812576687116566
  - 0.910076068582468
  - 0.902694521930085
  - 0.8983823397980158
  train_roc_auc_macro:
  - 0.9990400061367412
  - 0.9991370290141375
  - 0.9960777133937736
  - 0.9985091437930818
  - 0.9956436258278146
  train_roc_auc_macro_oob:
  - 0.9577933653639565
  - 0.9698596586060236
  - 0.9754580549285805
  - 0.9658863264489282
  - 0.9671622817006771
  train_roc_auc_micro:
  - 0.9941281969388005
  - 0.9943316195372751
  - 0.99393532703654
  - 0.9948005640487269
  - 0.9931366885919963
  train_roc_auc_micro_oob:
  - 0.9261479497825713
  - 0.9288817480719793
  - 0.92757843559292
  - 0.9349294007292877
  - 0.9299134787982684
  train_roc_auc_samples:
  - 0.9897321428571428
  - 0.9930981595092024
  - 0.988719512195122
  - 0.9903614457831326
  - 0.9889221556886226
  train_roc_auc_samples_oob:
  - 0.8991071428571428
  - 0.9014655760054534
  - 0.8941395663956639
  - 0.9061077643908969
  - 0.8971723220226214
  train_roc_auc_weighted:
  - 0.9997474893688199
  - 0.9995590033089399
  - 0.9986842573241245
  - 0.9996191131489268
  - 0.9983391197983592
  train_roc_auc_weighted_oob:
  - 0.970052329776311
  - 0.9644030334420727
  - 0.9846521582202327
  - 0.9811291118943897
  - 0.9733696376997133
start: 2023-12-21 10:06:04.558093
wrapper: null
