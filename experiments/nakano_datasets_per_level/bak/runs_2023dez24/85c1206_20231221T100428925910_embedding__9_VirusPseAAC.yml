active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMBAMzMzMzMDQAAzMzMzM+O/gGZmZmZm9j8AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:05:55.269209
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__9
  params: {}
hash: 85c1206ea3a06235a02a3f1d960f5277fe1cd22f2882bbeb35e5de10060d3413
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/85c1206_20231221T100428925910_embedding__9_VirusPseAAC.yml
results:
  fit_time:
  - 71.7249846458435
  - 73.65773224830627
  - 70.49490070343018
  - 72.40177154541016
  - 71.44060182571411
  score_time:
  - 4.081791162490845
  - 4.514697551727295
  - 3.883089780807495
  - 4.0036656856536865
  - 3.8795244693756104
  test_average_precision_macro:
  - 0.35689718801726794
  - 0.4965348016547968
  - 0.44492266109137196
  - 0.36401136504702364
  - 0.3899233366633858
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4156321070312065
  - 0.48706065037323737
  - 0.47224891122249385
  - 0.4212792418996319
  - 0.5021658161338406
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6900000000000001
  - 0.7053418803418803
  - 0.7136904761904761
  - 0.6718055555555555
  - 0.7260162601626016
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4249619843277865
  - 0.5083505749817505
  - 0.4723643440508344
  - 0.4345238781129734
  - 0.47255169808717734
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7999999999999999
  - 0.7905982905982906
  - 0.7896825396825397
  - 0.7875000000000001
  - 0.7926829268292682
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8
  - 0.7905982905982906
  - 0.7896825396825397
  - 0.7875
  - 0.7926829268292683
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8000000000000003
  - 0.7905982905982905
  - 0.7896825396825398
  - 0.7875
  - 0.7926829268292683
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.677995642701525
  - 0.6702564102564104
  - 0.6746031746031746
  - 0.6546875
  - 0.6796435272045028
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.694719692331915
  - 0.680766351949365
  - 0.6792584227366835
  - 0.6808890454994233
  - 0.6824876513258138
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6666666666666666
  - 0.6537102473498233
  - 0.6524590163934426
  - 0.6494845360824743
  - 0.6565656565656566
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6714285714285716
  - 0.6660561660561662
  - 0.6717687074829932
  - 0.6601190476190476
  - 0.667247386759582
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5359759603818405
  - 0.5223771092406077
  - 0.5299387739285438
  - 0.5093478759511597
  - 0.5363892395464069
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6899999999999998
  - 0.7053418803418803
  - 0.7136904761904761
  - 0.6718055555555555
  - 0.7260162601626016
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.036369648372665396
  - 0.03209640195074136
  - 0.006442286388994575
  - -0.012713446674164469
  - 0.015196788472560235
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - -0.051152637012738006
  - 0.19217426022118597
  - 0.13654232016292936
  - 0.08965993713534454
  - 0.15091804901081748
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - -0.013333333333333336
  - 0.10329108783549096
  - 0.09922724923729345
  - 0.039086034037919895
  - 0.07396233004960186
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.07701807890682083
  - 0.06547665997951237
  - 0.01288457277798915
  - -0.025825111785776515
  - 0.025956504907940207
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7673750478758835
  - 0.7803369841032742
  - 0.7871553377866178
  - 0.7574069751019089
  - 0.798020468094457
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2444444444444445
  - -2.282051282051282
  - -2.119047619047619
  - -2.25
  - -2.2195121951219514
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19999999999999998
  - -0.2094017094017094
  - -0.21031746031746032
  - -0.21250000000000002
  - -0.20731707317073175
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2
  - -0.2094017094017094
  - -0.21031746031746032
  - -0.2125
  - -0.2073170731707317
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19999999999999993
  - -0.20940170940170938
  - -0.2103174603174603
  - -0.2125
  - -0.20731707317073167
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.322004357298475
  - -0.3297435897435897
  - -0.3253968253968254
  - -0.34531249999999997
  - -0.3203564727954972
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22055555555555556
  - -0.2022079772079772
  - -0.1880952380952381
  - -0.20993055555555556
  - -0.18353658536585366
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7999999999999999
  - 0.7905982905982906
  - 0.7896825396825397
  - 0.7875000000000001
  - 0.7926829268292682
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8
  - 0.7905982905982906
  - 0.7896825396825397
  - 0.7875
  - 0.7926829268292683
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8000000000000003
  - 0.7905982905982905
  - 0.7896825396825398
  - 0.7875
  - 0.7926829268292683
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.677995642701525
  - 0.6702564102564104
  - 0.6746031746031746
  - 0.6546875
  - 0.6796435272045028
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7999999999999999
  - 0.7905982905982906
  - 0.7896825396825397
  - 0.7875000000000001
  - 0.7926829268292682
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8
  - 0.7905982905982906
  - 0.7896825396825397
  - 0.7875
  - 0.7926829268292683
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8000000000000003
  - 0.7905982905982905
  - 0.7896825396825398
  - 0.7875
  - 0.7926829268292683
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.677995642701525
  - 0.6702564102564104
  - 0.6746031746031746
  - 0.6546875
  - 0.6796435272045028
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5727895287220846
  - 0.6389196587725999
  - 0.6722307343990228
  - 0.6442941841359359
  - 0.6639369970572017
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7822544542931328
  - 0.7944565217391304
  - 0.7886059896595453
  - 0.7802734375
  - 0.8071966693100714
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7794444444444445
  - 0.7977920227920228
  - 0.8119047619047618
  - 0.7900694444444445
  - 0.8164634146341462
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6022600834947215
  - 0.6103961038961039
  - 0.6231018723278785
  - 0.5936114435554972
  - 0.6409506727478399
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9693493716931217
  - 0.9129287133181289
  - 0.9136132711086958
  - 0.9713717952458761
  - 0.9728695654065719
  train_average_precision_macro_oob:
  - 0.41617493825444596
  - 0.4289179819872091
  - 0.3791834846313092
  - 0.4546611383080754
  - 0.4354739825346989
  train_average_precision_micro:
  - 0.9103008713784312
  - 0.9114550120978996
  - 0.9060281393634851
  - 0.9134340334811802
  - 0.9129517494433006
  train_average_precision_micro_oob:
  - 0.5516478048797007
  - 0.624428865053986
  - 0.539460671976584
  - 0.6155087724372859
  - 0.635886839475414
  train_average_precision_samples:
  - 0.9089506172839507
  - 0.8890873015873014
  - 0.8858585858585858
  - 0.8949101796407185
  - 0.8940763052208834
  train_average_precision_samples_oob:
  - 0.7150548696844993
  - 0.7466104497354497
  - 0.711094276094276
  - 0.7545908183632734
  - 0.7517402945113789
  train_average_precision_weighted:
  - 0.9925669272684197
  - 0.9704284459848019
  - 0.9721609063115486
  - 0.9933906487431571
  - 0.9942194548872181
  train_average_precision_weighted_oob:
  - 0.5388054132314706
  - 0.5973163172052839
  - 0.513305435887261
  - 0.5950826411260172
  - 0.6145968241273208
  train_f1_macro:
  - 0.9269547325102879
  - 0.9285714285714287
  - 0.9303030303030303
  - 0.9241516966067865
  - 0.9216867469879517
  train_f1_macro_oob:
  - 0.8106995884773663
  - 0.8303571428571429
  - 0.8101010101010101
  - 0.8193612774451098
  - 0.823293172690763
  train_f1_micro:
  - 0.926954732510288
  - 0.9285714285714286
  - 0.9303030303030303
  - 0.9241516966067864
  - 0.9216867469879518
  train_f1_micro_oob:
  - 0.8106995884773662
  - 0.8303571428571429
  - 0.8101010101010101
  - 0.8193612774451098
  - 0.8232931726907631
  train_f1_samples:
  - 0.9269547325102881
  - 0.9285714285714286
  - 0.9303030303030303
  - 0.9241516966067865
  - 0.9216867469879518
  train_f1_samples_oob:
  - 0.8106995884773661
  - 0.8303571428571429
  - 0.81010101010101
  - 0.8193612774451097
  - 0.8232931726907629
  train_f1_weighted:
  - 0.9482525643387999
  - 0.9496404997642622
  - 0.9529021558872305
  - 0.9420570623458964
  - 0.934578313253012
  train_f1_weighted_oob:
  - 0.7124869479761685
  - 0.7491454502593117
  - 0.7071611638775818
  - 0.7289538569918986
  - 0.7334939759036145
  train_jaccard_macro:
  - 0.8684298847220197
  - 0.8705554731936783
  - 0.874099436900733
  - 0.8627276213305048
  - 0.8577356996894939
  train_jaccard_macro_oob:
  - 0.7015908521949136
  - 0.7244023158670744
  - 0.7019494656471926
  - 0.7113600067482447
  - 0.716618866941155
  train_jaccard_micro:
  - 0.8638542665388304
  - 0.8666666666666667
  - 0.8696883852691218
  - 0.8589981447124304
  - 0.8547486033519553
  train_jaccard_micro_oob:
  - 0.6816608996539792
  - 0.7099236641221374
  - 0.6808149405772496
  - 0.6939983093829247
  - 0.6996587030716723
  train_jaccard_samples:
  - 0.8803644914756026
  - 0.8809523809523809
  - 0.8826839826839826
  - 0.8738237810094097
  - 0.8711990820424556
  train_jaccard_samples_oob:
  - 0.6937095825984716
  - 0.7259070294784581
  - 0.6914862914862915
  - 0.7070145423438837
  - 0.7138554216867472
  train_jaccard_weighted:
  - 0.9062630812085782
  - 0.9082010812955984
  - 0.9145670828177092
  - 0.894371282772051
  - 0.8799341938253505
  train_jaccard_weighted_oob:
  - 0.5678347889750007
  - 0.6098946986442892
  - 0.5624867650783559
  - 0.5865594254006292
  - 0.5915644208095521
  train_label_ranking_average_precision_score:
  - 0.9089506172839507
  - 0.8890873015873016
  - 0.8858585858585858
  - 0.8949101796407186
  - 0.8940763052208834
  train_label_ranking_average_precision_score_oob:
  - 0.7150548696844993
  - 0.7466104497354495
  - 0.7110942760942759
  - 0.7545908183632732
  - 0.7517402945113789
  train_matthews_corrcoef_macro:
  - 0.32081603514690893
  - 0.31913996876117484
  - 0.3230221893110962
  - 0.31319054121986684
  - 0.30499824725644425
  train_matthews_corrcoef_macro_oob:
  - 0.07376565387720331
  - 0.11850982420993855
  - 0.06249433334786397
  - 0.09671254364873823
  - 0.0998514331168368
  train_matthews_corrcoef_micro:
  - 0.7695640839827365
  - 0.7686280942379448
  - 0.7771123207924577
  - 0.7568949897941243
  - 0.7453594037323642
  train_matthews_corrcoef_micro_oob:
  - 0.2549457785588473
  - 0.34779907197852195
  - 0.22645180293436035
  - 0.2955515804072447
  - 0.3057628034274264
  train_matthews_corrcoef_samples:
  - 0.6647479036000121
  - 0.6620177530436707
  - 0.6497816038360964
  - 0.6322246053947439
  - 0.6497074580925923
  train_matthews_corrcoef_samples_oob:
  - 0.1274194246154445
  - 0.21129384878631566
  - 0.10683144681354989
  - 0.14997634667156612
  - 0.16503552345512332
  train_matthews_corrcoef_weighted:
  - 0.6512103434538431
  - 0.6497904985516721
  - 0.6607853773524961
  - 0.6359458304871156
  - 0.622438328610861
  train_matthews_corrcoef_weighted_oob:
  - 0.15045089583135604
  - 0.23989512827756332
  - 0.12872468292200973
  - 0.19562819652645586
  - 0.20309363970788993
  train_ndgc:
  - 0.9348679013973429
  - 0.9199045233823219
  - 0.9168528546995631
  - 0.9232844004720792
  - 0.9233227232397595
  train_ndgc_oob:
  - 0.7882854659606732
  - 0.8121216238271345
  - 0.7854396129543179
  - 0.8169331991098145
  - 0.8146660045060613
  train_neg_coverage_error:
  - -1.537037037037037
  - -1.5595238095238095
  - -1.5636363636363637
  - -1.5449101796407185
  - -1.5120481927710843
  train_neg_coverage_error_oob:
  - -2.253086419753086
  - -2.1011904761904763
  - -2.278787878787879
  - -2.143712574850299
  - -2.1867469879518073
  train_neg_hamming_loss_macro:
  - -0.07304526748971192
  - -0.07142857142857141
  - -0.06969696969696969
  - -0.07584830339321358
  - -0.07831325301204821
  train_neg_hamming_loss_macro_oob:
  - -0.18930041152263374
  - -0.16964285714285712
  - -0.1898989898989899
  - -0.18063872255489022
  - -0.17670682730923695
  train_neg_hamming_loss_micro:
  - -0.07304526748971193
  - -0.07142857142857142
  - -0.0696969696969697
  - -0.07584830339321358
  - -0.0783132530120482
  train_neg_hamming_loss_micro_oob:
  - -0.18930041152263374
  - -0.16964285714285715
  - -0.1898989898989899
  - -0.18063872255489022
  - -0.17670682730923695
  train_neg_hamming_loss_samples:
  - -0.07304526748971192
  - -0.07142857142857142
  - -0.0696969696969697
  - -0.07584830339321356
  - -0.0783132530120482
  train_neg_hamming_loss_samples_oob:
  - -0.18930041152263374
  - -0.16964285714285715
  - -0.1898989898989899
  - -0.18063872255489022
  - -0.17670682730923692
  train_neg_hamming_loss_weighted:
  - -0.05174743566120017
  - -0.05035950023573786
  - -0.04709784411276948
  - -0.057942937654103556
  - -0.06542168674698795
  train_neg_hamming_loss_weighted_oob:
  - -0.28751305202383143
  - -0.2508545497406884
  - -0.29283883612241823
  - -0.2710461430081014
  - -0.2665060240963856
  train_neg_label_ranking_loss:
  - -0.053858024691358024
  - -0.06643518518518518
  - -0.06552188552188551
  - -0.06242514970059881
  - -0.057747657295850074
  train_neg_label_ranking_loss_oob:
  - -0.20267489711934158
  - -0.17840608465608465
  - -0.2080808080808081
  - -0.18419827012641385
  - -0.1966532797858099
  train_precision_macro:
  - 0.9269547325102879
  - 0.9285714285714287
  - 0.9303030303030303
  - 0.9241516966067865
  - 0.9216867469879517
  train_precision_macro_oob:
  - 0.8106995884773663
  - 0.8303571428571429
  - 0.8101010101010101
  - 0.8193612774451098
  - 0.823293172690763
  train_precision_micro:
  - 0.926954732510288
  - 0.9285714285714286
  - 0.9303030303030303
  - 0.9241516966067864
  - 0.9216867469879518
  train_precision_micro_oob:
  - 0.8106995884773662
  - 0.8303571428571429
  - 0.8101010101010101
  - 0.8193612774451098
  - 0.8232931726907631
  train_precision_samples:
  - 0.9269547325102881
  - 0.9285714285714286
  - 0.9303030303030303
  - 0.9241516966067865
  - 0.9216867469879518
  train_precision_samples_oob:
  - 0.8106995884773661
  - 0.8303571428571429
  - 0.81010101010101
  - 0.8193612774451097
  - 0.8232931726907629
  train_precision_weighted:
  - 0.9482525643387999
  - 0.9496404997642622
  - 0.9529021558872305
  - 0.9420570623458964
  - 0.934578313253012
  train_precision_weighted_oob:
  - 0.7124869479761685
  - 0.7491454502593117
  - 0.7071611638775818
  - 0.7289538569918986
  - 0.7334939759036145
  train_recall_macro:
  - 0.9269547325102879
  - 0.9285714285714287
  - 0.9303030303030303
  - 0.9241516966067865
  - 0.9216867469879517
  train_recall_macro_oob:
  - 0.8106995884773663
  - 0.8303571428571429
  - 0.8101010101010101
  - 0.8193612774451098
  - 0.823293172690763
  train_recall_micro:
  - 0.926954732510288
  - 0.9285714285714286
  - 0.9303030303030303
  - 0.9241516966067864
  - 0.9216867469879518
  train_recall_micro_oob:
  - 0.8106995884773662
  - 0.8303571428571429
  - 0.8101010101010101
  - 0.8193612774451098
  - 0.8232931726907631
  train_recall_samples:
  - 0.9269547325102881
  - 0.9285714285714286
  - 0.9303030303030303
  - 0.9241516966067865
  - 0.9216867469879518
  train_recall_samples_oob:
  - 0.8106995884773661
  - 0.8303571428571429
  - 0.81010101010101
  - 0.8193612774451097
  - 0.8232931726907629
  train_recall_weighted:
  - 0.9482525643387999
  - 0.9496404997642622
  - 0.9529021558872305
  - 0.9420570623458964
  - 0.934578313253012
  train_recall_weighted_oob:
  - 0.7124869479761685
  - 0.7491454502593117
  - 0.7071611638775818
  - 0.7289538569918986
  - 0.7334939759036145
  train_roc_auc_macro:
  - 0.9981468065800257
  - 0.9949647568552593
  - 0.9956237039870439
  - 0.9987912921791233
  - 0.9986111111111112
  train_roc_auc_macro_oob:
  - 0.7294344873886969
  - 0.75407048140538
  - 0.7115726263539384
  - 0.7610389378862931
  - 0.745560457745012
  train_roc_auc_micro:
  - 0.9626381710126412
  - 0.9649104488612633
  - 0.9620843816405931
  - 0.9638557177256867
  - 0.9663065326633167
  train_roc_auc_micro_oob:
  - 0.8201469952442714
  - 0.8325921922217037
  - 0.8159140924023734
  - 0.8324426261732762
  - 0.8360866834170854
  train_roc_auc_samples:
  - 0.946141975308642
  - 0.9335648148148149
  - 0.9344781144781144
  - 0.9375748502994011
  - 0.9422523427041499
  train_roc_auc_samples_oob:
  - 0.7973251028806584
  - 0.8215939153439153
  - 0.791919191919192
  - 0.8158017298735861
  - 0.8033467202141901
  train_roc_auc_weighted:
  - 0.9994338109243037
  - 0.9981011841377012
  - 0.9983648556954856
  - 0.9996872362355539
  - 0.9996458333333333
  train_roc_auc_weighted_oob:
  - 0.7405623383086523
  - 0.7849753282572268
  - 0.724219519931774
  - 0.7696863098190512
  - 0.7969229530206334
start: 2023-12-21 10:04:28.925910
wrapper: null
