active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T+AZmZmZmb2P8DMzMzMzATAQDMzMzMzC0DAzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:02:15.323276
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__5
  params: {}
hash: 9aa28c34ff249975e754c701433d0bc52a6023b227e7dd2d2de7ddc6b53726a6
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9aa28c3_20231221T100154347410_embedding__5_VirusPseAAC.yml
results:
  fit_time:
  - 12.421284675598145
  - 12.644209623336792
  - 12.736278057098389
  - 12.851372480392456
  - 12.382636785507202
  score_time:
  - 2.388108968734741
  - 2.3752362728118896
  - 2.3410942554473877
  - 2.3055267333984375
  - 2.6000168323516846
  test_average_precision_macro:
  - 0.4238657122172793
  - 0.47458038535804214
  - 0.362827962195653
  - 0.297739779260726
  - 0.3650737063971687
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.43436898191477663
  - 0.46815237457312914
  - 0.45964627884262227
  - 0.4641001508719908
  - 0.43720638928542965
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.671951219512195
  - 0.680625
  - 0.6545454545454544
  - 0.7005847953216374
  - 0.6634469696969697
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.451772636943709
  - 0.4837660135732517
  - 0.45868014659499934
  - 0.42595126723513516
  - 0.42903283029274825
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7926829268292682
  - 0.7833333333333332
  - 0.8181818181818182
  - 0.7807017543859649
  - 0.8106060606060606
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7926829268292683
  - 0.7833333333333333
  - 0.8181818181818182
  - 0.7807017543859649
  - 0.8106060606060606
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7926829268292684
  - 0.7833333333333334
  - 0.8181818181818183
  - 0.7807017543859649
  - 0.8106060606060609
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6746341463414635
  - 0.6563725490196078
  - 0.7272727272727272
  - 0.6505263157894737
  - 0.7
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6849319626274503
  - 0.6732828252046342
  - 0.7108441118559973
  - 0.6706583423564556
  - 0.705622320612833
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6565656565656566
  - 0.6438356164383562
  - 0.6923076923076923
  - 0.6402877697841727
  - 0.6815286624203821
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6689895470383276
  - 0.6547619047619048
  - 0.7040043290043291
  - 0.6528822055137846
  - 0.6948051948051949
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5337828377145866
  - 0.5118385552164307
  - 0.5860564432930925
  - 0.5038105374709148
  - 0.5552603837233818
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.671951219512195
  - 0.6806249999999999
  - 0.6545454545454544
  - 0.7005847953216374
  - 0.6634469696969697
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.013853091801756581
  - 0.009837766019270713
  - 0.07227252043296657
  - 0.022555367408109945
  - 0.03383689976133542
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.13510318926032974
  - 0.06685710923757637
  - 0.22531301949849103
  - 0.11152804993207759
  - 0.18759271850843032
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.08371842761057746
  - 0.035
  - 0.1117324492276554
  - 0.05348567189562305
  - 0.11891944390985626
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.028260307275583426
  - 0.0231466758590891
  - 0.14454504086593317
  - 0.04100859759195688
  - 0.06902727551312425
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7548034238707573
  - 0.7624214373285583
  - 0.7472164954490509
  - 0.776339165717198
  - 0.7493357489387322
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.292682926829268
  - -2.325
  - -2.340909090909091
  - -2.3947368421052633
  - -2.159090909090909
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20731707317073175
  - -0.2166666666666667
  - -0.1818181818181818
  - -0.2192982456140351
  - -0.18939393939393936
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2073170731707317
  - -0.21666666666666667
  - -0.18181818181818182
  - -0.21929824561403508
  - -0.1893939393939394
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20731707317073167
  - -0.21666666666666665
  - -0.18181818181818182
  - -0.2192982456140351
  - -0.18939393939393936
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3253658536585366
  - -0.3436274509803921
  - -0.27272727272727276
  - -0.3494736842105264
  - -0.3
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22012195121951217
  - -0.2146527777777778
  - -0.2204545454545454
  - -0.2170321637426901
  - -0.20625
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7926829268292682
  - 0.7833333333333332
  - 0.8181818181818182
  - 0.7807017543859649
  - 0.8106060606060606
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7926829268292683
  - 0.7833333333333333
  - 0.8181818181818182
  - 0.7807017543859649
  - 0.8106060606060606
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7926829268292684
  - 0.7833333333333334
  - 0.8181818181818183
  - 0.7807017543859649
  - 0.8106060606060609
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6746341463414635
  - 0.6563725490196078
  - 0.7272727272727272
  - 0.6505263157894737
  - 0.7
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7926829268292682
  - 0.7833333333333332
  - 0.8181818181818182
  - 0.7807017543859649
  - 0.8106060606060606
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7926829268292683
  - 0.7833333333333333
  - 0.8181818181818182
  - 0.7807017543859649
  - 0.8106060606060606
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7926829268292684
  - 0.7833333333333334
  - 0.8181818181818183
  - 0.7807017543859649
  - 0.8106060606060609
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6746341463414635
  - 0.6563725490196078
  - 0.7272727272727272
  - 0.6505263157894737
  - 0.7
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6173054356877886
  - 0.6447039125268025
  - 0.6247167423025265
  - 0.5694309518431909
  - 0.6993599875525319
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7892857142857143
  - 0.7878410623508663
  - 0.781183835036362
  - 0.7757303370786517
  - 0.7957009345794392
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7798780487804878
  - 0.7853472222222223
  - 0.7795454545454544
  - 0.78296783625731
  - 0.79375
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6013584298584298
  - 0.5805815286408035
  - 0.6256963546179233
  - 0.5409305372303475
  - 0.6355619107479573
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9118013207504027
  - 0.9397463426863096
  - 0.9592069005853713
  - 0.918825244284112
  - 0.9842429633544961
  train_average_precision_macro_oob:
  - 0.36150100252094414
  - 0.40599327271576974
  - 0.49268892994648406
  - 0.4567572995871458
  - 0.4698958848933821
  train_average_precision_micro:
  - 0.9018578044957783
  - 0.9143804466074125
  - 0.9215675161605729
  - 0.917268166261618
  - 0.9178643169408893
  train_average_precision_micro_oob:
  - 0.5683886169252709
  - 0.6079387751149496
  - 0.6622295899470866
  - 0.6076965204814586
  - 0.66951792934917
  train_average_precision_samples:
  - 0.8962851405622488
  - 0.9061876247504991
  - 0.90920245398773
  - 0.9035502958579881
  - 0.9049079754601227
  train_average_precision_samples_oob:
  - 0.7213186077643908
  - 0.7222388556220891
  - 0.752488070892979
  - 0.7395463510848126
  - 0.7514655760054533
  train_average_precision_weighted:
  - 0.9722233915492836
  - 0.9798595025323226
  - 0.9913984135560079
  - 0.9701357798658783
  - 0.996494786033225
  train_average_precision_weighted_oob:
  - 0.5305103516985498
  - 0.5752162825569942
  - 0.6518550135845639
  - 0.5930130717987252
  - 0.6441865096657355
  train_f1_macro:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.929447852760736
  - 0.9280078895463509
  - 0.9253578732106339
  train_f1_macro_oob:
  - 0.8182730923694779
  - 0.8223552894211577
  - 0.8323108384458077
  - 0.8264299802761341
  - 0.8425357873210633
  train_f1_micro:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.9294478527607362
  - 0.928007889546351
  - 0.9253578732106339
  train_f1_micro_oob:
  - 0.8182730923694779
  - 0.8223552894211577
  - 0.8323108384458078
  - 0.8264299802761341
  - 0.8425357873210634
  train_f1_samples:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.9294478527607362
  - 0.9280078895463512
  - 0.9253578732106338
  train_f1_samples_oob:
  - 0.8182730923694778
  - 0.8223552894211575
  - 0.8323108384458077
  - 0.826429980276134
  - 0.8425357873210633
  train_f1_weighted:
  - 0.9416676607419778
  - 0.941698692167903
  - 0.9523242682294051
  - 0.9477122268439861
  - 0.945878636943449
  train_f1_weighted_oob:
  - 0.7253071692711441
  - 0.7330711710906546
  - 0.7537466044013064
  - 0.7407873923487022
  - 0.7770454959606391
  train_jaccard_macro:
  - 0.8637272743843303
  - 0.8643799128271076
  - 0.8727034324497724
  - 0.8692260639514974
  - 0.8648840827354752
  train_jaccard_macro_oob:
  - 0.7106704533908826
  - 0.715231303805858
  - 0.7262704457860877
  - 0.7205500874134637
  - 0.7379329565116484
  train_jaccard_micro:
  - 0.8599439775910365
  - 0.8607242339832869
  - 0.8681948424068768
  - 0.8656853725850966
  - 0.8610846812559467
  train_jaccard_micro_oob:
  - 0.6924384027187765
  - 0.6983050847457627
  - 0.712784588441331
  - 0.704201680672269
  - 0.7279151943462897
  train_jaccard_samples:
  - 0.8743545611015489
  - 0.8758197889934417
  - 0.8838737949167396
  - 0.8799661876584954
  - 0.8767163307040605
  train_jaccard_samples_oob:
  - 0.7068273092369478
  - 0.7092956943256346
  - 0.726701723634239
  - 0.7169625246548323
  - 0.7458369851007889
  train_jaccard_weighted:
  - 0.8935319067271044
  - 0.8933619201586536
  - 0.9136150028737915
  - 0.9041557090797347
  - 0.9011445749863423
  train_jaccard_weighted_oob:
  - 0.5821702213986208
  - 0.5906457705979191
  - 0.6141403551976714
  - 0.6013690166236589
  - 0.6423882574126011
  train_label_ranking_average_precision_score:
  - 0.896285140562249
  - 0.9061876247504989
  - 0.90920245398773
  - 0.9035502958579883
  - 0.9049079754601224
  train_label_ranking_average_precision_score_oob:
  - 0.7213186077643909
  - 0.7222388556220889
  - 0.7524880708929788
  - 0.7395463510848125
  - 0.7514655760054534
  train_matthews_corrcoef_macro:
  - 0.31298997503483644
  - 0.31303334427031454
  - 0.3229390830247632
  - 0.3172029843596467
  - 0.31679648644648867
  train_matthews_corrcoef_macro_oob:
  - 0.08657434868581453
  - 0.10669600315318195
  - 0.13457246467441145
  - 0.10181943615601931
  - 0.1543872341192377
  train_matthews_corrcoef_micro:
  - 0.7579255345993271
  - 0.7570968666611136
  - 0.7766301826243568
  - 0.7654653733458986
  - 0.7640049738332749
  train_matthews_corrcoef_micro_oob:
  - 0.28343752839875863
  - 0.30335239979397927
  - 0.38461272042561373
  - 0.3179497610038549
  - 0.4379308344455685
  train_matthews_corrcoef_samples:
  - 0.6501873925958072
  - 0.6415527747533116
  - 0.6578772362222095
  - 0.6532497430147315
  - 0.6477393196375597
  train_matthews_corrcoef_samples_oob:
  - 0.15289842668725415
  - 0.13371150974930962
  - 0.21415250215809423
  - 0.16595295795355944
  - 0.2991227659654628
  train_matthews_corrcoef_weighted:
  - 0.6371889522644074
  - 0.6354141526296179
  - 0.6606175139596524
  - 0.6453987690755913
  - 0.644757298863878
  train_matthews_corrcoef_weighted_oob:
  - 0.17729428428055194
  - 0.21669397801000195
  - 0.27550847515800087
  - 0.20653772972570217
  - 0.3135802696881647
  train_ndgc:
  - 0.9248914063912834
  - 0.9314148597065118
  - 0.9343771193864568
  - 0.9303188519650274
  - 0.9306390760471991
  train_ndgc_oob:
  - 0.7928886996217687
  - 0.793511423365933
  - 0.8147832000940467
  - 0.8071622337521658
  - 0.8150988294887632
  train_neg_coverage_error:
  - -1.5542168674698795
  - -1.4790419161676647
  - -1.521472392638037
  - -1.485207100591716
  - -1.5276073619631902
  train_neg_coverage_error_oob:
  - -2.253012048192771
  - -2.2335329341317367
  - -2.1595092024539877
  - -2.1124260355029585
  - -2.214723926380368
  train_neg_hamming_loss_macro:
  - -0.0753012048192771
  - -0.0748502994011976
  - -0.07055214723926381
  - -0.07199211045364891
  - -0.07464212678936605
  train_neg_hamming_loss_macro_oob:
  - -0.1817269076305221
  - -0.17764471057884232
  - -0.16768916155419225
  - -0.17357001972386588
  - -0.1574642126789366
  train_neg_hamming_loss_micro:
  - -0.07530120481927711
  - -0.0748502994011976
  - -0.0705521472392638
  - -0.07199211045364892
  - -0.07464212678936605
  train_neg_hamming_loss_micro_oob:
  - -0.1817269076305221
  - -0.17764471057884232
  - -0.16768916155419222
  - -0.17357001972386588
  - -0.1574642126789366
  train_neg_hamming_loss_samples:
  - -0.07530120481927711
  - -0.0748502994011976
  - -0.0705521472392638
  - -0.07199211045364891
  - -0.07464212678936605
  train_neg_hamming_loss_samples_oob:
  - -0.18172690763052207
  - -0.1776447105788423
  - -0.16768916155419225
  - -0.1735700197238659
  - -0.1574642126789366
  train_neg_hamming_loss_weighted:
  - -0.058332339258022184
  - -0.058301307832097006
  - -0.04767573177059487
  - -0.05228777315601382
  - -0.054121363056551054
  train_neg_hamming_loss_weighted_oob:
  - -0.27469283072885603
  - -0.2669288289093455
  - -0.24625339559869364
  - -0.25921260765129767
  - -0.22295450403936098
  train_neg_label_ranking_loss:
  - -0.06316934404283801
  - -0.05321024617431804
  - -0.05313565098841173
  - -0.05473372781065089
  - -0.0553680981595092
  train_neg_label_ranking_loss_oob:
  - -0.20478580990629186
  - -0.2028942115768463
  - -0.18808793456032719
  - -0.18090072320841552
  - -0.19444444444444445
  train_precision_macro:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.929447852760736
  - 0.9280078895463509
  - 0.9253578732106339
  train_precision_macro_oob:
  - 0.8182730923694779
  - 0.8223552894211577
  - 0.8323108384458077
  - 0.8264299802761341
  - 0.8425357873210633
  train_precision_micro:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.9294478527607362
  - 0.928007889546351
  - 0.9253578732106339
  train_precision_micro_oob:
  - 0.8182730923694779
  - 0.8223552894211577
  - 0.8323108384458078
  - 0.8264299802761341
  - 0.8425357873210634
  train_precision_samples:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.9294478527607362
  - 0.9280078895463512
  - 0.9253578732106338
  train_precision_samples_oob:
  - 0.8182730923694778
  - 0.8223552894211575
  - 0.8323108384458077
  - 0.826429980276134
  - 0.8425357873210633
  train_precision_weighted:
  - 0.9416676607419778
  - 0.941698692167903
  - 0.9523242682294051
  - 0.9477122268439861
  - 0.945878636943449
  train_precision_weighted_oob:
  - 0.7253071692711441
  - 0.7330711710906546
  - 0.7537466044013064
  - 0.7407873923487022
  - 0.7770454959606391
  train_recall_macro:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.929447852760736
  - 0.9280078895463509
  - 0.9253578732106339
  train_recall_macro_oob:
  - 0.8182730923694779
  - 0.8223552894211577
  - 0.8323108384458077
  - 0.8264299802761341
  - 0.8425357873210633
  train_recall_micro:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.9294478527607362
  - 0.928007889546351
  - 0.9253578732106339
  train_recall_micro_oob:
  - 0.8182730923694779
  - 0.8223552894211577
  - 0.8323108384458078
  - 0.8264299802761341
  - 0.8425357873210634
  train_recall_samples:
  - 0.9246987951807228
  - 0.9251497005988024
  - 0.9294478527607362
  - 0.9280078895463512
  - 0.9253578732106338
  train_recall_samples_oob:
  - 0.8182730923694778
  - 0.8223552894211575
  - 0.8323108384458077
  - 0.826429980276134
  - 0.8425357873210633
  train_recall_weighted:
  - 0.9416676607419778
  - 0.941698692167903
  - 0.9523242682294051
  - 0.9477122268439861
  - 0.945878636943449
  train_recall_weighted_oob:
  - 0.7253071692711441
  - 0.7330711710906546
  - 0.7537466044013064
  - 0.7407873923487022
  - 0.7770454959606391
  train_roc_auc_macro:
  - 0.9953397817460318
  - 0.9960673094941018
  - 0.9984343132791348
  - 0.9950294160874226
  - 0.9992927256053589
  train_roc_auc_macro_oob:
  - 0.6396198058782842
  - 0.7305427594859425
  - 0.7953763220296938
  - 0.7756505058235357
  - 0.7684535568008107
  train_roc_auc_micro:
  - 0.9584632266753124
  - 0.9653107744672393
  - 0.9680618785096397
  - 0.9684131590498952
  - 0.9670179646830662
  train_roc_auc_micro_oob:
  - 0.8060391051699629
  - 0.8248706529773107
  - 0.8451628600882333
  - 0.8375115836706823
  - 0.8405379197713586
  train_roc_auc_samples:
  - 0.936830655957162
  - 0.9467897538256819
  - 0.9468643490115883
  - 0.9452662721893491
  - 0.9446319018404907
  train_roc_auc_samples_oob:
  - 0.795214190093708
  - 0.7971057884231537
  - 0.8119120654396728
  - 0.8190992767915845
  - 0.8055555555555555
  train_roc_auc_weighted:
  - 0.9982869224422443
  - 0.9985337186389225
  - 0.9995560551913512
  - 0.9980109939098486
  - 0.9997878197356628
  train_roc_auc_weighted_oob:
  - 0.7012485034474669
  - 0.7606892896442005
  - 0.813555512853897
  - 0.7809347903688615
  - 0.8160278256687051
start: 2023-12-21 10:01:54.347410
wrapper: null
