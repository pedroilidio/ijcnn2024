active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMzC8AAzczMzMwMQADNzMzMzARAAGZmZmZm9r8AZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 07:03:25.432706
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__1
  params: {}
hash: 6893a9439fdab45a4c6e4051276afca2b4412f6c0bf7602b5dae20c4e1fd5453
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6893a94_20231222T070303271521_embedding_proba__1_PlantGO.yml
results:
  fit_time:
  - 4.97192120552063
  - 5.236403942108154
  - 5.000871658325195
  - 5.296118259429932
  - 4.588388442993164
  score_time:
  - 2.938535451889038
  - 2.8221993446350098
  - 2.9665496349334717
  - 2.7895913124084473
  - 2.997588634490967
  test_average_precision_macro:
  - 0.8186660734004381
  - 0.8055332686764541
  - 0.8166553378738013
  - 0.8515701328951514
  - 0.8029744908022588
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8481637396134135
  - 0.8682685757703081
  - 0.8601613606535455
  - 0.86849096903448
  - 0.8221462108880171
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8999082715163117
  - 0.8779513888888889
  - 0.888860103626943
  - 0.9197969543147207
  - 0.8866892272983642
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.876393182518779
  - 0.8826137931497584
  - 0.8796846561064477
  - 0.8998359931904153
  - 0.8523411124396769
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9522613065326634
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.9564297800338409
  - 0.9505076142131981
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9522613065326633
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.9564297800338409
  - 0.950507614213198
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9522613065326633
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.956429780033841
  - 0.950507614213198
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9371025744837935
  - 0.9412342767295597
  - 0.9390081421169505
  - 0.9397696212417024
  - 0.9296456188623747
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9101622706306888
  - 0.9154394570559635
  - 0.9155452220915263
  - 0.9173708763715173
  - 0.9072766624697318
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9088729016786571
  - 0.9144162858329872
  - 0.9140495867768595
  - 0.9164977705715444
  - 0.905683192261185
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9140537854105691
  - 0.9196428571428571
  - 0.9188065820190171
  - 0.9211245607184692
  - 0.9114854688458749
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8831613043318726
  - 0.890369630968833
  - 0.8870142077593949
  - 0.8873145843452994
  - 0.8704936398653964
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8999082715163116
  - 0.877951388888889
  - 0.888860103626943
  - 0.9197969543147209
  - 0.8866892272983646
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.30296056658194787
  - 0.38281707336030135
  - 0.362563800755994
  - 0.3329024650605075
  - 0.3422526890394353
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6604751866653263
  - 0.6991798338362368
  - 0.6930807274030099
  - 0.6939845120922608
  - 0.6559130435378281
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.525277476918315
  - 0.5842392942280633
  - 0.5730467184917815
  - 0.5641426815517185
  - 0.5394928437634878
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5743585894331781
  - 0.6326768141185828
  - 0.6236975456279523
  - 0.6112014126506863
  - 0.5784028131945781
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9260226094261145
  - 0.9110701938810374
  - 0.9176597111565724
  - 0.9410543619750285
  - 0.9165643341914524
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4371859296482412
  - -1.5416666666666667
  - -1.4818652849740932
  - -1.2538071065989849
  - -1.4416243654822336
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.047738693467336675
  - -0.044704861111111105
  - -0.044905008635578586
  - -0.043570219966159056
  - -0.04949238578680202
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04773869346733668
  - -0.04470486111111111
  - -0.044905008635578586
  - -0.043570219966159056
  - -0.04949238578680203
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.047738693467336675
  - -0.04470486111111111
  - -0.04490500863557857
  - -0.04357021996615905
  - -0.04949238578680203
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.06289742551620663
  - -0.05876572327044026
  - -0.06099185788304959
  - -0.060230378758297544
  - -0.07035438113762513
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03147555961626313
  - -0.03527462121212121
  - -0.03393782383419689
  - -0.017374250115366866
  - -0.029426242116597445
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9522613065326634
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.9564297800338409
  - 0.9505076142131981
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9522613065326633
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.9564297800338409
  - 0.950507614213198
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9522613065326633
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.956429780033841
  - 0.950507614213198
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9371025744837935
  - 0.9412342767295597
  - 0.9390081421169505
  - 0.9397696212417024
  - 0.9296456188623747
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9522613065326634
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.9564297800338409
  - 0.9505076142131981
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9522613065326633
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.9564297800338409
  - 0.950507614213198
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9522613065326633
  - 0.9552951388888888
  - 0.9550949913644214
  - 0.956429780033841
  - 0.950507614213198
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9371025744837935
  - 0.9412342767295597
  - 0.9390081421169505
  - 0.9397696212417024
  - 0.9296456188623747
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9739306785355383
  - 0.9792415462771401
  - 0.9703411874508864
  - 0.9860743162103062
  - 0.9753600879038945
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9749513983981609
  - 0.980284281539738
  - 0.9759010536788314
  - 0.9853873804766662
  - 0.9772310367311454
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.968524440383737
  - 0.9647253787878788
  - 0.966062176165803
  - 0.982625749884633
  - 0.9705737578834025
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9757279187608937
  - 0.9804272377768378
  - 0.975440104461996
  - 0.9829207681657389
  - 0.9707601027342111
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9337608304877786
  - 0.9323199873990671
  - 0.9479404019632849
  - 0.9320932844156599
  - 0.9422533303675328
  train_average_precision_macro_oob:
  - 0.7950825318762488
  - 0.8086830193979774
  - 0.8100859124970481
  - 0.7747179348203727
  - 0.8061432761598364
  train_average_precision_micro:
  - 0.9307649233715755
  - 0.930929825583179
  - 0.9380779910488949
  - 0.9333532651335407
  - 0.9391656048188864
  train_average_precision_micro_oob:
  - 0.8456879423227094
  - 0.8466399389701937
  - 0.8564285047585465
  - 0.8499765097013002
  - 0.8599624964437468
  train_average_precision_samples:
  - 0.9489088575096278
  - 0.9442324003392707
  - 0.9545647558386411
  - 0.9455825864276568
  - 0.952667520273154
  train_average_precision_samples_oob:
  - 0.8942050247570147
  - 0.8972217173553052
  - 0.8961940147608938
  - 0.8881587966735215
  - 0.8994629854424988
  train_average_precision_weighted:
  - 0.9524858134188038
  - 0.9510287835756424
  - 0.9626604387623479
  - 0.9535802852226508
  - 0.9604074995171552
  train_average_precision_weighted_oob:
  - 0.860754037311111
  - 0.8680479300884192
  - 0.8754268504969509
  - 0.86131445209026
  - 0.8740272056710632
  train_f1_macro:
  - 0.962558836114677
  - 0.9614079728583543
  - 0.9626326963906582
  - 0.9620145113102859
  - 0.9626547161758428
  train_f1_macro_oob:
  - 0.9540008557980316
  - 0.9517599660729431
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689714
  train_f1_micro:
  - 0.962558836114677
  - 0.9614079728583546
  - 0.9626326963906582
  - 0.9620145113102859
  - 0.962654716175843
  train_f1_micro_oob:
  - 0.9540008557980316
  - 0.9517599660729432
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689714
  train_f1_samples:
  - 0.962558836114677
  - 0.9614079728583547
  - 0.9626326963906583
  - 0.9620145113102858
  - 0.9626547161758429
  train_f1_samples_oob:
  - 0.9540008557980315
  - 0.9517599660729431
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689713
  train_f1_weighted:
  - 0.9553063533878042
  - 0.9519225835272668
  - 0.9538220329401123
  - 0.9546429591825938
  - 0.953407397144732
  train_f1_weighted_oob:
  - 0.9391521515614258
  - 0.9338362023428985
  - 0.9363042249274489
  - 0.9372296891794041
  - 0.9356826289049833
  train_jaccard_macro:
  - 0.92816628128152
  - 0.9262314528107879
  - 0.928507480178737
  - 0.9272635024753719
  - 0.9285914256204877
  train_jaccard_macro_oob:
  - 0.9130364300841817
  - 0.9092950711931751
  - 0.9110122982396941
  - 0.9110226299470034
  - 0.9128791522213632
  train_jaccard_micro:
  - 0.9278201691070324
  - 0.925683952633728
  - 0.9279574293900942
  - 0.9268092105263158
  - 0.9279983542480971
  train_jaccard_micro_oob:
  - 0.9120474534669667
  - 0.9079599474056842
  - 0.9097820577800304
  - 0.9099245975137559
  - 0.9116777154513004
  train_jaccard_samples:
  - 0.9324747139894766
  - 0.9303861532869168
  - 0.9327612514873661
  - 0.9316007935726245
  - 0.9323718534986142
  train_jaccard_samples_oob:
  - 0.917126775663361
  - 0.9130721695607191
  - 0.9150332470077693
  - 0.9151327545693743
  - 0.9166073363256462
  train_jaccard_weighted:
  - 0.9148160903665822
  - 0.9089098172395426
  - 0.912476050533688
  - 0.9137827873839748
  - 0.9117776180198396
  train_jaccard_weighted_oob:
  - 0.8864022029632233
  - 0.8773846181603605
  - 0.8817181779524041
  - 0.8830965308348127
  - 0.8805771457424355
  train_label_ranking_average_precision_score:
  - 0.9489088575096278
  - 0.9442324003392707
  - 0.9545647558386414
  - 0.945582586427657
  - 0.9526675202731542
  train_label_ranking_average_precision_score_oob:
  - 0.894205024757015
  - 0.8972217173553053
  - 0.896194014760894
  - 0.8881587966735219
  - 0.8994629854424993
  train_matthews_corrcoef_macro:
  - 0.3925897387501978
  - 0.43012334414176423
  - 0.4503361342766894
  - 0.4111464782526135
  - 0.4403198467059181
  train_matthews_corrcoef_macro_oob:
  - 0.33464335981870263
  - 0.32590217448357206
  - 0.33753078316593704
  - 0.3410345899900676
  - 0.34667175480859364
  train_matthews_corrcoef_micro:
  - 0.749261350886501
  - 0.7377230685658981
  - 0.7480231798043478
  - 0.7453427006203657
  - 0.7482487545346814
  train_matthews_corrcoef_micro_oob:
  - 0.6829266911805413
  - 0.6608186854044256
  - 0.6702864052151839
  - 0.6735364390595421
  - 0.6788342167108546
  train_matthews_corrcoef_samples:
  - 0.6447545983311899
  - 0.6247481569746935
  - 0.6448839102725189
  - 0.6392528414229411
  - 0.6317352297929906
  train_matthews_corrcoef_samples_oob:
  - 0.5590679843200698
  - 0.529156757518596
  - 0.5425603165107472
  - 0.544436844201093
  - 0.5478898524595475
  train_matthews_corrcoef_weighted:
  - 0.6808436058510698
  - 0.6838326630571884
  - 0.69644550853544
  - 0.683194800632009
  - 0.6934631234409527
  train_matthews_corrcoef_weighted_oob:
  - 0.606852398635628
  - 0.5823694206200153
  - 0.5937644024025422
  - 0.5995604898983988
  - 0.6033447496173704
  train_ndgc:
  - 0.962394755620274
  - 0.9588463065763222
  - 0.9666277369392003
  - 0.9599368886282983
  - 0.9650363883689481
  train_ndgc_oob:
  - 0.9223484611231464
  - 0.9241817653611458
  - 0.9236325576173091
  - 0.9176731396159259
  - 0.9259855251169464
  train_neg_coverage_error:
  - -1.2015404364569962
  - -1.2048346055979644
  - -1.1796178343949044
  - -1.2151088348271446
  - -1.1869398207426376
  train_neg_coverage_error_oob:
  - -1.4428754813863929
  - -1.405852417302799
  - -1.4178343949044585
  - -1.4609475032010244
  - -1.4212548015364916
  train_neg_hamming_loss_macro:
  - -0.037441163885323064
  - -0.03859202714164547
  - -0.037367303609341825
  - -0.03798548868971404
  - -0.03734528382415706
  train_neg_hamming_loss_macro_oob:
  - -0.04599914420196833
  - -0.04824003392705683
  - -0.047239915074309975
  - -0.04716175842936407
  - -0.04620145113102859
  train_neg_hamming_loss_micro:
  - -0.037441163885323064
  - -0.03859202714164546
  - -0.037367303609341825
  - -0.03798548868971404
  - -0.03734528382415706
  train_neg_hamming_loss_micro_oob:
  - -0.04599914420196834
  - -0.04824003392705683
  - -0.04723991507430998
  - -0.04716175842936406
  - -0.046201451131028595
  train_neg_hamming_loss_samples:
  - -0.03744116388532306
  - -0.03859202714164546
  - -0.03736730360934182
  - -0.03798548868971404
  - -0.03734528382415706
  train_neg_hamming_loss_samples_oob:
  - -0.04599914420196833
  - -0.04824003392705682
  - -0.047239915074309975
  - -0.047161758429364056
  - -0.04620145113102859
  train_neg_hamming_loss_weighted:
  - -0.04469364661219573
  - -0.048077416472733094
  - -0.04617796705988767
  - -0.04535704081740632
  - -0.04659260285526802
  train_neg_hamming_loss_weighted_oob:
  - -0.06084784843857418
  - -0.06616379765710129
  - -0.06369577507255117
  - -0.062770310820596
  - -0.06431737109501677
  train_neg_label_ranking_loss:
  - -0.010468830366134602
  - -0.01181556874941099
  - -0.009114928477985803
  - -0.011529507624257944
  - -0.009952275637294844
  train_neg_label_ranking_loss_oob:
  - -0.029963736638961288
  - -0.02839077800909862
  - -0.028782517317549165
  - -0.03160391796755433
  - -0.02907198316929431
  train_precision_macro:
  - 0.962558836114677
  - 0.9614079728583543
  - 0.9626326963906582
  - 0.9620145113102859
  - 0.9626547161758428
  train_precision_macro_oob:
  - 0.9540008557980316
  - 0.9517599660729431
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689714
  train_precision_micro:
  - 0.962558836114677
  - 0.9614079728583546
  - 0.9626326963906582
  - 0.9620145113102859
  - 0.962654716175843
  train_precision_micro_oob:
  - 0.9540008557980316
  - 0.9517599660729432
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689714
  train_precision_samples:
  - 0.962558836114677
  - 0.9614079728583547
  - 0.9626326963906583
  - 0.9620145113102858
  - 0.9626547161758429
  train_precision_samples_oob:
  - 0.9540008557980315
  - 0.9517599660729431
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689713
  train_precision_weighted:
  - 0.9553063533878042
  - 0.9519225835272668
  - 0.9538220329401123
  - 0.9546429591825938
  - 0.953407397144732
  train_precision_weighted_oob:
  - 0.9391521515614258
  - 0.9338362023428985
  - 0.9363042249274489
  - 0.9372296891794041
  - 0.9356826289049833
  train_recall_macro:
  - 0.962558836114677
  - 0.9614079728583543
  - 0.9626326963906582
  - 0.9620145113102859
  - 0.9626547161758428
  train_recall_macro_oob:
  - 0.9540008557980316
  - 0.9517599660729431
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689714
  train_recall_micro:
  - 0.962558836114677
  - 0.9614079728583546
  - 0.9626326963906582
  - 0.9620145113102859
  - 0.962654716175843
  train_recall_micro_oob:
  - 0.9540008557980316
  - 0.9517599660729432
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689714
  train_recall_samples:
  - 0.962558836114677
  - 0.9614079728583547
  - 0.9626326963906583
  - 0.9620145113102858
  - 0.9626547161758429
  train_recall_samples_oob:
  - 0.9540008557980315
  - 0.9517599660729431
  - 0.95276008492569
  - 0.9528382415706359
  - 0.9537985488689713
  train_recall_weighted:
  - 0.9553063533878042
  - 0.9519225835272668
  - 0.9538220329401123
  - 0.9546429591825938
  - 0.953407397144732
  train_recall_weighted_oob:
  - 0.9391521515614258
  - 0.9338362023428985
  - 0.9363042249274489
  - 0.9372296891794041
  - 0.9356826289049833
  train_roc_auc_macro:
  - 0.9946860712218754
  - 0.9946595957306082
  - 0.996067856516814
  - 0.9948135727528112
  - 0.9953094399982406
  train_roc_auc_macro_oob:
  - 0.9738004342148145
  - 0.9748127528358395
  - 0.9784945459759854
  - 0.9744356698241142
  - 0.975353578918639
  train_roc_auc_micro:
  - 0.9934347176461147
  - 0.9934159488667054
  - 0.9943083478530887
  - 0.9933898146641413
  - 0.9940546270989583
  train_roc_auc_micro_oob:
  - 0.9778715786939405
  - 0.9780551885242608
  - 0.9804388013869959
  - 0.9776752173446388
  - 0.9793070554323038
  train_roc_auc_samples:
  - 0.9895311696338653
  - 0.9881844312505891
  - 0.9908850715220141
  - 0.988470492375742
  - 0.9900477243627052
  train_roc_auc_samples_oob:
  - 0.9700362633610388
  - 0.9716092219909013
  - 0.9712174826824507
  - 0.9683960820324456
  - 0.9709280168307057
  train_roc_auc_weighted:
  - 0.9928072410836972
  - 0.9927786903927409
  - 0.9942169602893622
  - 0.9933341987851524
  - 0.9939819071270588
  train_roc_auc_weighted_oob:
  - 0.9750620191284881
  - 0.9754953367778321
  - 0.9785133982296824
  - 0.9761235786471922
  - 0.9773264890817176
start: 2023-12-22 07:03:03.271521
wrapper: null
