active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmBkAAMzMzMzPzv4CZmZmZmQHAAJiZmZmZyb8AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:20:59.096102
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__1
  params: {}
hash: 19141e3a03b410be8b46f37e85cd0515c2d03caa936603d0954c08d010677b42
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/19141e3_20231221T202047178187_embedding_proba__1_GrampositivePseAAC.yml
results:
  fit_time:
  - 3.132906436920166
  - 3.368321657180786
  - 3.535651922225952
  - 3.3212759494781494
  - 3.298931837081909
  score_time:
  - 1.6774132251739502
  - 1.614177942276001
  - 1.5327026844024658
  - 1.754328966140747
  - 1.6361229419708252
  test_average_precision_macro:
  - 0.5136119322186753
  - 0.43041359513211996
  - 0.37496204716241915
  - 0.4613441971480246
  - 0.3848380689288564
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.45493201278120987
  - 0.5441850143998905
  - 0.473592020564009
  - 0.5419723304287289
  - 0.4972415702287505
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7021452145214521
  - 0.7230158730158729
  - 0.6941823899371069
  - 0.7227564102564101
  - 0.7176375404530744
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4644836846087935
  - 0.5257316114003587
  - 0.47311419610749655
  - 0.5330307433740519
  - 0.4735250196131877
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339807
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339806
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339806
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.666346246275113
  - 0.6713832199546486
  - 0.676931292274831
  - 0.6720695970695971
  - 0.6734503360716952
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6160784507615493
  - 0.6221001221001221
  - 0.6203929674207407
  - 0.6179965844675858
  - 0.6176475169245657
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5936883629191322
  - 0.6
  - 0.6
  - 0.5969289827255279
  - 0.5968992248062015
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5947194719471947
  - 0.5999999999999999
  - 0.5999999999999999
  - 0.5974358974358972
  - 0.5974110032362459
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5058670474983888
  - 0.5115995115995116
  - 0.5184281303170373
  - 0.5134611510617555
  - 0.5147040675680669
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7021452145214523
  - 0.7230158730158728
  - 0.6941823899371069
  - 0.7227564102564104
  - 0.7176375404530746
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7791564181125296
  - 0.7933658476796543
  - 0.771730320814752
  - 0.7937471112320222
  - 0.7900755685763998
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7425742574257426
  - -1.7428571428571429
  - -1.830188679245283
  - -1.7692307692307692
  - -1.7475728155339805
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25495049504950495
  - -0.25
  - -0.25
  - -0.25240384615384615
  - -0.2524271844660194
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25495049504950495
  - -0.25
  - -0.25
  - -0.25240384615384615
  - -0.2524271844660194
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25495049504950495
  - -0.25
  - -0.25
  - -0.25240384615384615
  - -0.2524271844660194
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33365375372488704
  - -0.32861678004535144
  - -0.3230687077251691
  - -0.327930402930403
  - -0.3265496639283047
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.24009900990099003
  - -0.24761904761904763
  - -0.27672955974842767
  - -0.2516025641025641
  - -0.24514563106796117
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339807
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339806
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339806
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.666346246275113
  - 0.6713832199546486
  - 0.676931292274831
  - 0.6720695970695971
  - 0.6734503360716952
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339807
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339806
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.745049504950495
  - 0.75
  - 0.75
  - 0.7475961538461539
  - 0.7475728155339806
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.666346246275113
  - 0.6713832199546486
  - 0.676931292274831
  - 0.6720695970695971
  - 0.6734503360716952
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7071430079513652
  - 0.7189420879462896
  - 0.6439105383937612
  - 0.6744260971832632
  - 0.6393114089198538
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7579266522594588
  - 0.7850944822373394
  - 0.7535896523080574
  - 0.7817792068595926
  - 0.7578359140859141
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.75990099009901
  - 0.7523809523809525
  - 0.7232704402515724
  - 0.748397435897436
  - 0.7548543689320388
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6405460107303471
  - 0.6864350184518252
  - 0.6469224770251798
  - 0.6960595850308334
  - 0.6463162211757076
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7870053262407462
  - 0.7933114417313992
  - 0.7671868319687513
  - 0.7746552387807821
  - 0.7879440025022652
  train_average_precision_macro_oob:
  - 0.7267833648694779
  - 0.7053035925381059
  - 0.6636312134738317
  - 0.6397087639384449
  - 0.6639176945527158
  train_average_precision_micro:
  - 0.8305603630116201
  - 0.8387022887816497
  - 0.8446589189993887
  - 0.82983871121307
  - 0.8485806304014955
  train_average_precision_micro_oob:
  - 0.7720264111628851
  - 0.7975989384879846
  - 0.8180605192118636
  - 0.7958376015980284
  - 0.8159067708534898
  train_average_precision_samples:
  - 0.8454944178628389
  - 0.8484299516908212
  - 0.8520984665052461
  - 0.847991967871486
  - 0.8541666666666667
  train_average_precision_samples_oob:
  - 0.8133971291866029
  - 0.818438003220612
  - 0.8337368845843421
  - 0.8180722891566266
  - 0.8349358974358976
  train_average_precision_weighted:
  - 0.8286303251327792
  - 0.8339107667603777
  - 0.8386839208107684
  - 0.8248140853506867
  - 0.8476318265169067
  train_average_precision_weighted_oob:
  - 0.7775591880555891
  - 0.7974791412940553
  - 0.8122604490368437
  - 0.7871305304350564
  - 0.8118996461772905
  train_f1_macro:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595641
  - 0.8319277108433736
  - 0.8365384615384616
  train_f1_macro_oob:
  - 0.7511961722488039
  - 0.753623188405797
  - 0.75
  - 0.7493975903614457
  - 0.7481971153846154
  train_f1_micro:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595642
  - 0.8319277108433735
  - 0.8365384615384616
  train_f1_micro_oob:
  - 0.7511961722488039
  - 0.7536231884057971
  - 0.75
  - 0.7493975903614458
  - 0.7481971153846154
  train_f1_samples:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595642
  - 0.8319277108433735
  - 0.8365384615384616
  train_f1_samples_oob:
  - 0.7511961722488039
  - 0.7536231884057971
  - 0.75
  - 0.7493975903614458
  - 0.7481971153846154
  train_f1_weighted:
  - 0.7836409204830258
  - 0.7960959711531794
  - 0.8044837737558138
  - 0.7893410964431891
  - 0.7946231870754543
  train_f1_weighted_oob:
  - 0.677010708589656
  - 0.6812865497076023
  - 0.6747609176581254
  - 0.6740531504006457
  - 0.6717975491096017
  train_jaccard_macro:
  - 0.713221701101525
  - 0.7265126491643179
  - 0.7371725263316417
  - 0.7207677043287056
  - 0.7271910069038172
  train_jaccard_macro_oob:
  - 0.6221075901369162
  - 0.6244907155456998
  - 0.6209407840993045
  - 0.6203047294258044
  - 0.6191545003244906
  train_jaccard_micro:
  - 0.7043832823649337
  - 0.7187337830825117
  - 0.7298429319371728
  - 0.7122227952552862
  - 0.71900826446281
  train_jaccard_micro_oob:
  - 0.6015325670498084
  - 0.6046511627906976
  - 0.6
  - 0.5992292870905588
  - 0.5976956313010081
  train_jaccard_samples:
  - 0.7228070175438595
  - 0.7388083735909822
  - 0.7504439063761097
  - 0.7314056224899598
  - 0.739102564102564
  train_jaccard_samples_oob:
  - 0.6025518341307814
  - 0.6067632850241544
  - 0.6012913640032282
  - 0.5999999999999999
  - 0.598076923076923
  train_jaccard_weighted:
  - 0.6461613400409563
  - 0.6630178526134227
  - 0.6745483839085868
  - 0.653781968608854
  - 0.6610728307981678
  train_jaccard_weighted_oob:
  - 0.5183600668190057
  - 0.5228019478621421
  - 0.5154722101306252
  - 0.514739620198504
  - 0.5124747290215935
  train_label_ranking_average_precision_score:
  - 0.8454944178628389
  - 0.848429951690821
  - 0.8520984665052457
  - 0.8479919678714859
  - 0.8541666666666663
  train_label_ranking_average_precision_score_oob:
  - 0.8133971291866026
  - 0.8184380032206116
  - 0.8337368845843416
  - 0.8180722891566263
  - 0.834935897435897
  train_matthews_corrcoef_macro:
  - 0.351033397628648
  - 0.38307303229850753
  - 0.4032702898392117
  - 0.36949252180635594
  - 0.3841201474773701
  train_matthews_corrcoef_macro_oob:
  - 0.045678179789513884
  - 0.07178847679472203
  - 0.03015801708731364
  - 0.021307162114767603
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.5013107395001013
  - 0.5371384343369033
  - 0.5616090655566661
  - 0.5210932530946544
  - 0.5365911940337842
  train_matthews_corrcoef_micro_oob:
  - 0.08454919787199093
  - 0.1341396800159783
  - 0.08478457417518295
  - 0.05986808846892012
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.30999366093107567
  - 0.35303067762893536
  - 0.38191779856554203
  - 0.33290289286356445
  - 0.35234939968555196
  train_matthews_corrcoef_samples_oob:
  - 0.009569377990430622
  - 0.023133696302390403
  - 0.009685230024213076
  - 0.004819277108433735
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.46505893114947644
  - 0.5023786491684576
  - 0.5276631054751705
  - 0.4866621715283441
  - 0.5029392699627802
  train_matthews_corrcoef_weighted_oob:
  - 0.0663688781427989
  - 0.10506323000283498
  - 0.04802139891121405
  - 0.03384678383781265
  - 0.0
  train_ndgc:
  - 0.885099781449577
  - 0.8870521530609414
  - 0.8901445120780769
  - 0.8867504840346331
  - 0.8913675836758567
  train_ndgc_oob:
  - 0.8610762783633277
  - 0.8650035378071546
  - 0.8761899381193589
  - 0.864446277363251
  - 0.8771782820711179
  train_neg_coverage_error:
  - -1.4043062200956937
  - -1.4057971014492754
  - -1.397094430992736
  - -1.4024096385542169
  - -1.3846153846153846
  train_neg_coverage_error_oob:
  - -1.5095693779904307
  - -1.497584541062802
  - -1.4648910411622276
  - -1.4939759036144578
  - -1.4519230769230769
  train_neg_hamming_loss_macro:
  - -0.17344497607655504
  - -0.1636473429951691
  - -0.15617433414043583
  - -0.16807228915662653
  - -0.16346153846153844
  train_neg_hamming_loss_macro_oob:
  - -0.2488038277511962
  - -0.24637681159420288
  - -0.25
  - -0.25060240963855424
  - -0.2518028846153846
  train_neg_hamming_loss_micro:
  - -0.173444976076555
  - -0.1636473429951691
  - -0.15617433414043583
  - -0.1680722891566265
  - -0.16346153846153846
  train_neg_hamming_loss_micro_oob:
  - -0.24880382775119617
  - -0.2463768115942029
  - -0.25
  - -0.25060240963855424
  - -0.25180288461538464
  train_neg_hamming_loss_samples:
  - -0.173444976076555
  - -0.1636473429951691
  - -0.15617433414043583
  - -0.1680722891566265
  - -0.16346153846153846
  train_neg_hamming_loss_samples_oob:
  - -0.24880382775119617
  - -0.2463768115942029
  - -0.25
  - -0.25060240963855424
  - -0.25180288461538464
  train_neg_hamming_loss_weighted:
  - -0.21635907951697425
  - -0.2039040288468206
  - -0.19551622624418627
  - -0.210658903556811
  - -0.20537681292454563
  train_neg_hamming_loss_weighted_oob:
  - -0.322989291410344
  - -0.31871345029239767
  - -0.3252390823418747
  - -0.3259468495993543
  - -0.3282024508903984
  train_neg_label_ranking_loss:
  - -0.13277511961722488
  - -0.13204508856682767
  - -0.12853107344632766
  - -0.13172690763052208
  - -0.12580128205128205
  train_neg_label_ranking_loss_oob:
  - -0.1676634768740032
  - -0.16183574879227053
  - -0.15112994350282488
  - -0.16204819277108434
  - -0.14763621794871795
  train_precision_macro:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595641
  - 0.8319277108433736
  - 0.8365384615384616
  train_precision_macro_oob:
  - 0.7511961722488039
  - 0.753623188405797
  - 0.75
  - 0.7493975903614457
  - 0.7481971153846154
  train_precision_micro:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595642
  - 0.8319277108433735
  - 0.8365384615384616
  train_precision_micro_oob:
  - 0.7511961722488039
  - 0.7536231884057971
  - 0.75
  - 0.7493975903614458
  - 0.7481971153846154
  train_precision_samples:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595642
  - 0.8319277108433735
  - 0.8365384615384616
  train_precision_samples_oob:
  - 0.7511961722488039
  - 0.7536231884057971
  - 0.75
  - 0.7493975903614458
  - 0.7481971153846154
  train_precision_weighted:
  - 0.7836409204830258
  - 0.7960959711531794
  - 0.8044837737558138
  - 0.7893410964431891
  - 0.7946231870754543
  train_precision_weighted_oob:
  - 0.677010708589656
  - 0.6812865497076023
  - 0.6747609176581254
  - 0.6740531504006457
  - 0.6717975491096017
  train_recall_macro:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595641
  - 0.8319277108433736
  - 0.8365384615384616
  train_recall_macro_oob:
  - 0.7511961722488039
  - 0.753623188405797
  - 0.75
  - 0.7493975903614457
  - 0.7481971153846154
  train_recall_micro:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595642
  - 0.8319277108433735
  - 0.8365384615384616
  train_recall_micro_oob:
  - 0.7511961722488039
  - 0.7536231884057971
  - 0.75
  - 0.7493975903614458
  - 0.7481971153846154
  train_recall_samples:
  - 0.8265550239234449
  - 0.836352657004831
  - 0.8438256658595642
  - 0.8319277108433735
  - 0.8365384615384616
  train_recall_samples_oob:
  - 0.7511961722488039
  - 0.7536231884057971
  - 0.75
  - 0.7493975903614458
  - 0.7481971153846154
  train_recall_weighted:
  - 0.7836409204830258
  - 0.7960959711531794
  - 0.8044837737558138
  - 0.7893410964431891
  - 0.7946231870754543
  train_recall_weighted_oob:
  - 0.677010708589656
  - 0.6812865497076023
  - 0.6747609176581254
  - 0.6740531504006457
  - 0.6717975491096017
  train_roc_auc_macro:
  - 0.8769874197450815
  - 0.8882613183086346
  - 0.8737409521464555
  - 0.8877604300856796
  - 0.8797077911679845
  train_roc_auc_macro_oob:
  - 0.8422848029837978
  - 0.8543207004069462
  - 0.854724112983281
  - 0.8472570547662348
  - 0.8563367744669703
  train_roc_auc_micro:
  - 0.9065704396774683
  - 0.9122407649318627
  - 0.9135797434926554
  - 0.9059935741857938
  - 0.9169796129625901
  train_roc_auc_micro_oob:
  - 0.8707743800395558
  - 0.8830475918096019
  - 0.8897678618239012
  - 0.8803847013229164
  - 0.894198272804823
  train_roc_auc_samples:
  - 0.8672248803827751
  - 0.8679549114331723
  - 0.8714689265536724
  - 0.868273092369478
  - 0.8741987179487178
  train_roc_auc_samples_oob:
  - 0.8323365231259967
  - 0.8381642512077294
  - 0.8488700564971751
  - 0.8379518072289157
  - 0.8523637820512822
  train_roc_auc_weighted:
  - 0.8720813560209411
  - 0.8838884298713644
  - 0.8861947427559324
  - 0.8753338492801933
  - 0.8904111368675737
  train_roc_auc_weighted_oob:
  - 0.8319435016039008
  - 0.8543018065215788
  - 0.8656972039516254
  - 0.8473173954518892
  - 0.8678119457372317
start: 2023-12-21 20:20:47.178187
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
