active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0AAmpmZmZnZP0AzMzMzMwNAwMzMzMzMBMDAzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:35:28.924278
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - rf
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    - - xt
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: false
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba_weak__1
  params: {}
hash: a7f78c43254ab6d9997c9da935dc4306e1b90a56ef244cd9816d8bc84e3f183e
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a7f78c4_20231221T083521497751_proba_weak__1_VirusGO.yml
results:
  fit_time:
  - 3.5273170471191406
  - 3.746870279312134
  - 3.5073373317718506
  - 3.755361795425415
  - 3.551678419113159
  score_time:
  - 0.7153635025024414
  - 0.7409965991973877
  - 0.7290174961090088
  - 0.7309091091156006
  - 0.798691987991333
  test_average_precision_macro:
  - 0.945884591288434
  - 0.8085956589894767
  - 0.8940420434489602
  - 0.9573476476476842
  - 0.9759000475658849
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8633896082039718
  - 0.7986824745200132
  - 0.8060612796671562
  - 0.8236030133577384
  - 0.8413539785387399
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9012820512820513
  - 0.8394308943089432
  - 0.8170940170940171
  - 0.8776515151515152
  - 0.8643939393939395
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.957917681768538
  - 0.8194023161754559
  - 0.8998728767616713
  - 0.9552478799655999
  - 0.9640858458508494
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.7948717948717948
  - 0.8068181818181818
  - 0.8030303030303031
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.7948717948717948
  - 0.8068181818181818
  - 0.803030303030303
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7905982905982903
  - 0.7967479674796749
  - 0.7948717948717948
  - 0.806818181818182
  - 0.8030303030303031
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6614338042909471
  - 0.6673170731707317
  - 0.6933333333333332
  - 0.7045454545454545
  - 0.6949300699300699
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6828257659653008
  - 0.6908549766353463
  - 0.6817589051853606
  - 0.698407707107552
  - 0.6945296884225528
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6537102473498233
  - 0.6621621621621622
  - 0.6595744680851063
  - 0.6761904761904762
  - 0.6708860759493671
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6593406593406596
  - 0.667247386759582
  - 0.6709401709401711
  - 0.6812770562770564
  - 0.6753246753246754
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5146687911044816
  - 0.5209935149540954
  - 0.5482362482608144
  - 0.5611836337962015
  - 0.5508492741624239
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9012820512820511
  - 0.8394308943089432
  - 0.817094017094017
  - 0.8776515151515152
  - 0.8643939393939394
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.04645867419985646
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.17811271131234424
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.05128205128205128
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.08920065446372441
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9349555259142337
  - 0.8847178452329493
  - 0.864045584249927
  - 0.9121960862437859
  - 0.8981314218365
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7435897435897436
  - -1.7804878048780488
  - -1.8974358974358974
  - -1.5681818181818181
  - -1.6136363636363635
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2094017094017094
  - -0.2032520325203252
  - -0.20512820512820515
  - -0.19318181818181815
  - -0.19696969696969693
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2094017094017094
  - -0.2032520325203252
  - -0.20512820512820512
  - -0.19318181818181818
  - -0.19696969696969696
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20940170940170938
  - -0.20325203252032517
  - -0.20512820512820512
  - -0.19318181818181818
  - -0.1969696969696969
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3385661957090529
  - -0.33268292682926826
  - -0.3066666666666667
  - -0.29545454545454547
  - -0.30506993006993005
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07435897435897436
  - -0.10121951219512196
  - -0.12015669515669518
  - -0.07266414141414142
  - -0.08636363636363636
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.7948717948717948
  - 0.8068181818181818
  - 0.8030303030303031
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.7948717948717948
  - 0.8068181818181818
  - 0.803030303030303
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7905982905982903
  - 0.7967479674796749
  - 0.7948717948717948
  - 0.806818181818182
  - 0.8030303030303031
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6614338042909471
  - 0.6673170731707317
  - 0.6933333333333332
  - 0.7045454545454545
  - 0.6949300699300699
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.7948717948717948
  - 0.8068181818181818
  - 0.8030303030303031
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7905982905982906
  - 0.7967479674796748
  - 0.7948717948717948
  - 0.8068181818181818
  - 0.803030303030303
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7905982905982903
  - 0.7967479674796749
  - 0.7948717948717948
  - 0.806818181818182
  - 0.8030303030303031
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6614338042909471
  - 0.6673170731707317
  - 0.6933333333333332
  - 0.7045454545454545
  - 0.6949300699300699
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9886031180148828
  - 0.9109707236465548
  - 0.9527477344692818
  - 0.9803626543209876
  - 0.9908701795956697
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9491450634307776
  - 0.9230102040816326
  - 0.9191304347826087
  - 0.9320629660314831
  - 0.944121915820029
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9256410256410257
  - 0.898780487804878
  - 0.8798433048433049
  - 0.9273358585858585
  - 0.9136363636363637
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9849898400918808
  - 0.9059138688377818
  - 0.9420106578204404
  - 0.9718772694262889
  - 0.9839491858722627
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9391251180012011
  - 0.9694127403619559
  - 0.9187169116647976
  - 0.9255293230462381
  - 0.9450452569990963
  train_average_precision_macro_oob:
  - 0.9068668306899116
  - 0.9322198440565316
  - 0.8458438034523265
  - 0.8978915342520136
  - 0.8915147993518934
  train_average_precision_micro:
  - 0.8478652181304573
  - 0.8682496612692773
  - 0.8461912690974912
  - 0.8256741880629567
  - 0.8587164386346158
  train_average_precision_micro_oob:
  - 0.8195731299737143
  - 0.8396788024379034
  - 0.8177258403138485
  - 0.7975369849632535
  - 0.815304785252677
  train_average_precision_samples:
  - 0.8748346560846559
  - 0.901004016064257
  - 0.8945436507936508
  - 0.8907975460122699
  - 0.8871165644171779
  train_average_precision_samples_oob:
  - 0.8630291005291004
  - 0.859789156626506
  - 0.8666666666666668
  - 0.8639059304703476
  - 0.8658486707566462
  train_average_precision_weighted:
  - 0.9338968378667103
  - 0.9674222693429979
  - 0.9106653350216704
  - 0.920544626523176
  - 0.9431559972579661
  train_average_precision_weighted_oob:
  - 0.9053880434939366
  - 0.9419552999992914
  - 0.8748089577456315
  - 0.8977895767506446
  - 0.9063811613890563
  train_f1_macro:
  - 0.8055555555555557
  - 0.7971887550200804
  - 0.8134920634920636
  - 0.7944785276073619
  - 0.7955010224948875
  train_f1_macro_oob:
  - 0.8025793650793651
  - 0.7971887550200804
  - 0.808531746031746
  - 0.7944785276073619
  - 0.7955010224948875
  train_f1_micro:
  - 0.8055555555555556
  - 0.7971887550200804
  - 0.8134920634920635
  - 0.7944785276073619
  - 0.7955010224948875
  train_f1_micro_oob:
  - 0.8025793650793651
  - 0.7971887550200804
  - 0.808531746031746
  - 0.7944785276073619
  - 0.7955010224948875
  train_f1_samples:
  - 0.8055555555555555
  - 0.7971887550200802
  - 0.8134920634920635
  - 0.7944785276073618
  - 0.7955010224948873
  train_f1_samples_oob:
  - 0.8025793650793651
  - 0.7971887550200802
  - 0.8085317460317459
  - 0.7944785276073618
  - 0.7955010224948873
  train_f1_weighted:
  - 0.7006216279615295
  - 0.68567338661577
  - 0.7113389910419614
  - 0.6760675151848121
  - 0.6787116564417178
  train_f1_weighted_oob:
  - 0.6947278911564626
  - 0.68567338661577
  - 0.7013201320132013
  - 0.6760675151848121
  - 0.6787116564417178
  train_jaccard_macro:
  - 0.6967832920881784
  - 0.6875487846759665
  - 0.7067408963474272
  - 0.685475473919289
  - 0.6864806044012582
  train_jaccard_macro_oob:
  - 0.6935934994247015
  - 0.6875487846759665
  - 0.7011846793374658
  - 0.685475473919289
  - 0.6864806044012582
  train_jaccard_micro:
  - 0.6744186046511628
  - 0.662771285475793
  - 0.68561872909699
  - 0.6590330788804071
  - 0.6604414261460102
  train_jaccard_micro_oob:
  - 0.6702568351284176
  - 0.662771285475793
  - 0.678601165695254
  - 0.6590330788804071
  - 0.6604414261460102
  train_jaccard_samples:
  - 0.6823979591836734
  - 0.6686746987951808
  - 0.6950113378684808
  - 0.6649138182880514
  - 0.6665205959684489
  train_jaccard_samples_oob:
  - 0.6772959183673469
  - 0.6686746987951808
  - 0.6865079365079365
  - 0.6649138182880514
  - 0.6665205959684489
  train_jaccard_weighted:
  - 0.5564444879251254
  - 0.5406010418947397
  - 0.5682889389652602
  - 0.530373067198683
  - 0.5331098444778465
  train_jaccard_weighted_oob:
  - 0.5501277556555799
  - 0.5406010418947397
  - 0.55706648084613
  - 0.530373067198683
  - 0.5331098444778465
  train_label_ranking_average_precision_score:
  - 0.8748346560846562
  - 0.901004016064257
  - 0.8945436507936508
  - 0.89079754601227
  - 0.8871165644171779
  train_label_ranking_average_precision_score_oob:
  - 0.8630291005291004
  - 0.8597891566265057
  - 0.8666666666666665
  - 0.8639059304703475
  - 0.865848670756646
  train_matthews_corrcoef_macro:
  - 0.04266857285380698
  - 0.0
  - 0.06093936867726089
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0319580378513933
  - 0.0
  - 0.04808581550705127
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.16652594332372156
  - 0.0
  - 0.23706239179641989
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.12569356973063783
  - 0.0
  - 0.1895965134886081
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.041666666666666664
  - 0.0
  - 0.08333333333333333
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.023809523809523808
  - 0.0
  - 0.05357142857142857
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.08449638565138129
  - 0.0
  - 0.12308545752634872
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.06328636067123204
  - 0.0
  - 0.09712382538057882
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9077430229390538
  - 0.9285123338024575
  - 0.9231327586606961
  - 0.9196908167402037
  - 0.9181647097604312
  train_ndgc_oob:
  - 0.898876805014117
  - 0.8986271914652106
  - 0.9034066071333685
  - 0.9008459934069857
  - 0.9036690818063021
  train_neg_coverage_error:
  - -1.6011904761904763
  - -1.5481927710843373
  - -1.5357142857142858
  - -1.5950920245398772
  - -1.6134969325153374
  train_neg_coverage_error_oob:
  - -1.6547619047619047
  - -1.6626506024096386
  - -1.6607142857142858
  - -1.705521472392638
  - -1.7116564417177915
  train_neg_hamming_loss_macro:
  - -0.19444444444444442
  - -0.20281124497991973
  - -0.1865079365079365
  - -0.20552147239263807
  - -0.2044989775051125
  train_neg_hamming_loss_macro_oob:
  - -0.19742063492063497
  - -0.20281124497991973
  - -0.19146825396825395
  - -0.20552147239263807
  - -0.2044989775051125
  train_neg_hamming_loss_micro:
  - -0.19444444444444445
  - -0.20281124497991967
  - -0.1865079365079365
  - -0.20552147239263804
  - -0.20449897750511248
  train_neg_hamming_loss_micro_oob:
  - -0.1974206349206349
  - -0.20281124497991967
  - -0.19146825396825398
  - -0.20552147239263804
  - -0.20449897750511248
  train_neg_hamming_loss_samples:
  - -0.19444444444444448
  - -0.2028112449799197
  - -0.1865079365079365
  - -0.20552147239263804
  - -0.20449897750511248
  train_neg_hamming_loss_samples_oob:
  - -0.1974206349206349
  - -0.2028112449799197
  - -0.191468253968254
  - -0.20552147239263804
  - -0.20449897750511248
  train_neg_hamming_loss_weighted:
  - -0.29937837203847056
  - -0.31432661338423
  - -0.2886610089580387
  - -0.3239324848151879
  - -0.32128834355828223
  train_neg_hamming_loss_weighted_oob:
  - -0.3052721088435374
  - -0.31432661338423
  - -0.2986798679867987
  - -0.3239324848151879
  - -0.32128834355828223
  train_neg_label_ranking_loss:
  - -0.07676917989417989
  - -0.0603078982597055
  - -0.06264880952380952
  - -0.06893319700068166
  - -0.07116564417177915
  train_neg_label_ranking_loss_oob:
  - -0.08763227513227514
  - -0.08304886211512717
  - -0.08488756613756614
  - -0.08856509884117246
  - -0.08778118609406953
  train_precision_macro:
  - 0.8055555555555557
  - 0.7971887550200804
  - 0.8134920634920636
  - 0.7944785276073619
  - 0.7955010224948875
  train_precision_macro_oob:
  - 0.8025793650793651
  - 0.7971887550200804
  - 0.808531746031746
  - 0.7944785276073619
  - 0.7955010224948875
  train_precision_micro:
  - 0.8055555555555556
  - 0.7971887550200804
  - 0.8134920634920635
  - 0.7944785276073619
  - 0.7955010224948875
  train_precision_micro_oob:
  - 0.8025793650793651
  - 0.7971887550200804
  - 0.808531746031746
  - 0.7944785276073619
  - 0.7955010224948875
  train_precision_samples:
  - 0.8055555555555555
  - 0.7971887550200802
  - 0.8134920634920635
  - 0.7944785276073618
  - 0.7955010224948873
  train_precision_samples_oob:
  - 0.8025793650793651
  - 0.7971887550200802
  - 0.8085317460317459
  - 0.7944785276073618
  - 0.7955010224948873
  train_precision_weighted:
  - 0.7006216279615295
  - 0.68567338661577
  - 0.7113389910419614
  - 0.6760675151848121
  - 0.6787116564417178
  train_precision_weighted_oob:
  - 0.6947278911564626
  - 0.68567338661577
  - 0.7013201320132013
  - 0.6760675151848121
  - 0.6787116564417178
  train_recall_macro:
  - 0.8055555555555557
  - 0.7971887550200804
  - 0.8134920634920636
  - 0.7944785276073619
  - 0.7955010224948875
  train_recall_macro_oob:
  - 0.8025793650793651
  - 0.7971887550200804
  - 0.808531746031746
  - 0.7944785276073619
  - 0.7955010224948875
  train_recall_micro:
  - 0.8055555555555556
  - 0.7971887550200804
  - 0.8134920634920635
  - 0.7944785276073619
  - 0.7955010224948875
  train_recall_micro_oob:
  - 0.8025793650793651
  - 0.7971887550200804
  - 0.808531746031746
  - 0.7944785276073619
  - 0.7955010224948875
  train_recall_samples:
  - 0.8055555555555555
  - 0.7971887550200802
  - 0.8134920634920635
  - 0.7944785276073618
  - 0.7955010224948873
  train_recall_samples_oob:
  - 0.8025793650793651
  - 0.7971887550200802
  - 0.8085317460317459
  - 0.7944785276073618
  - 0.7955010224948873
  train_recall_weighted:
  - 0.7006216279615295
  - 0.68567338661577
  - 0.7113389910419614
  - 0.6760675151848121
  - 0.6787116564417178
  train_recall_weighted_oob:
  - 0.6947278911564626
  - 0.68567338661577
  - 0.7013201320132013
  - 0.6760675151848121
  - 0.6787116564417178
  train_roc_auc_macro:
  - 0.969089701577098
  - 0.9865614103602193
  - 0.9770093066595668
  - 0.9664371350290945
  - 0.976142115931451
  train_roc_auc_macro_oob:
  - 0.9635135834588362
  - 0.9813392263126345
  - 0.9549459031376043
  - 0.9546942337948644
  - 0.959244240830255
  train_roc_auc_micro:
  - 0.9454731817764588
  - 0.9521067660922263
  - 0.9473349630248384
  - 0.938262356172804
  - 0.948194087403599
  train_roc_auc_micro_oob:
  - 0.936076859529419
  - 0.9413609496969849
  - 0.9320504631108273
  - 0.9253731343283582
  - 0.9319794344473007
  train_roc_auc_samples:
  - 0.9232308201058201
  - 0.9396921017402945
  - 0.9373511904761904
  - 0.9310668029993183
  - 0.9288343558282209
  train_roc_auc_samples_oob:
  - 0.9123677248677249
  - 0.9169511378848729
  - 0.9151124338624338
  - 0.9114349011588277
  - 0.9122188139059304
  train_roc_auc_weighted:
  - 0.9647090551812669
  - 0.980992126283755
  - 0.9672964787534107
  - 0.9634336741357963
  - 0.9706650735499978
  train_roc_auc_weighted_oob:
  - 0.953779775723757
  - 0.9749191930006058
  - 0.9501530620889942
  - 0.9490902973172911
  - 0.9537683809468562
start: 2023-12-21 08:35:21.497751
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
