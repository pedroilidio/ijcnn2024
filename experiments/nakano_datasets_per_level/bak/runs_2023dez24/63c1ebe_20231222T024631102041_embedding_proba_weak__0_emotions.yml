active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMDwKCZmZmZmfk/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZm9r8AmZmZmZnZv8CZmZmZmfk/4MzMzMzMBEAgMzMzMzMDwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:46:40.214378
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__0
  params: {}
hash: 63c1ebe51ed804169550cd065f3418f6ceb9f60fd1bd82bd675b96ad9ab1a167
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/63c1ebe_20231222T024631102041_embedding_proba_weak__0_emotions.yml
results:
  fit_time:
  - 1.0277292728424072
  - 1.0274145603179932
  - 1.0433845520019531
  - 1.0457751750946045
  - 1.0487332344055176
  score_time:
  - 1.1507892608642578
  - 1.1533088684082031
  - 1.1362037658691406
  - 1.1246306896209717
  - 1.1676781177520752
  test_average_precision_macro:
  - 0.7150822508871574
  - 0.7854787120548772
  - 0.7089324276952799
  - 0.7767097906840182
  - 0.7493455234001013
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.731147492805976
  - 0.7820730359647479
  - 0.7357325711568665
  - 0.7719696205281482
  - 0.7420190396911688
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7991898148148148
  - 0.8494164332399627
  - 0.784116809116809
  - 0.830316091954023
  - 0.8054178145087236
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7203199521625783
  - 0.783467343436959
  - 0.715787035890504
  - 0.7797267631911601
  - 0.7476796703988603
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8083333333333332
  - 0.8319327731092435
  - 0.7991452991452991
  - 0.8146551724137931
  - 0.8181818181818182
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8083333333333333
  - 0.8319327731092437
  - 0.7991452991452992
  - 0.8146551724137931
  - 0.8181818181818182
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8083333333333333
  - 0.8319327731092437
  - 0.7991452991452992
  - 0.8146551724137931
  - 0.818181818181818
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8071644042232278
  - 0.8239420768307324
  - 0.7948329448329449
  - 0.8118524818308334
  - 0.8127723516153269
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6802060626950263
  - 0.7174561558785676
  - 0.6682874791387179
  - 0.6889044848752603
  - 0.6954028952014545
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6783216783216783
  - 0.7122302158273381
  - 0.6654804270462633
  - 0.6872727272727273
  - 0.6923076923076923
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.708531746031746
  - 0.737895158063225
  - 0.6964590964590964
  - 0.7159277504105089
  - 0.7194018103109011
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6782625103489711
  - 0.7055025773757693
  - 0.6618988964971095
  - 0.6847999024212067
  - 0.6874714875890628
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7991898148148147
  - 0.8494164332399626
  - 0.7841168091168091
  - 0.8303160919540227
  - 0.8054178145087234
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5086791783003766
  - 0.5921990628203397
  - 0.4827612396831493
  - 0.5411531954624377
  - 0.5428920749542975
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5266714526281175
  - 0.5954040942015829
  - 0.5051594199347507
  - 0.5537871229337198
  - 0.5521811255929169
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4992263433497502
  - 0.5707612243194002
  - 0.4457047237270487
  - 0.532651745951379
  - 0.5392618156230493
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5177328086554468
  - 0.5840623996120249
  - 0.4853019146426755
  - 0.5441466606184768
  - 0.5420658814759891
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8612053287891721
  - 0.8990722332093513
  - 0.8542616513061322
  - 0.8882602228491323
  - 0.8629672051530473
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.716666666666667
  - -2.5294117647058822
  - -2.8461538461538463
  - -2.7155172413793105
  - -2.6198347107438016
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19166666666666668
  - -0.1680672268907563
  - -0.2008547008547009
  - -0.18534482758620688
  - -0.1818181818181818
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.19166666666666668
  - -0.16806722689075632
  - -0.20085470085470086
  - -0.1853448275862069
  - -0.18181818181818182
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19166666666666668
  - -0.16806722689075632
  - -0.20085470085470084
  - -0.1853448275862069
  - -0.18181818181818182
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.19283559577677226
  - -0.1760579231692677
  - -0.20516705516705516
  - -0.18814751816916653
  - -0.18722764838467318
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.16092592592592592
  - -0.10896358543417366
  - -0.1720560303893637
  - -0.13647030651340997
  - -0.15002295684113867
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8083333333333332
  - 0.8319327731092435
  - 0.7991452991452991
  - 0.8146551724137931
  - 0.8181818181818182
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8083333333333333
  - 0.8319327731092437
  - 0.7991452991452992
  - 0.8146551724137931
  - 0.8181818181818182
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8083333333333333
  - 0.8319327731092437
  - 0.7991452991452992
  - 0.8146551724137931
  - 0.818181818181818
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8071644042232278
  - 0.8239420768307324
  - 0.7948329448329449
  - 0.8118524818308334
  - 0.8127723516153269
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8083333333333332
  - 0.8319327731092435
  - 0.7991452991452991
  - 0.8146551724137931
  - 0.8181818181818182
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8083333333333333
  - 0.8319327731092437
  - 0.7991452991452992
  - 0.8146551724137931
  - 0.8181818181818182
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8083333333333333
  - 0.8319327731092437
  - 0.7991452991452992
  - 0.8146551724137931
  - 0.818181818181818
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8071644042232278
  - 0.8239420768307324
  - 0.7948329448329449
  - 0.8118524818308334
  - 0.8127723516153269
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8413722398051431
  - 0.8851029779771906
  - 0.8237974534563253
  - 0.8707738554691659
  - 0.8578856366418801
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.861378866329945
  - 0.8974034256559767
  - 0.8508770275367785
  - 0.8795589643436134
  - 0.8741286381602587
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8390740740740742
  - 0.8910364145658263
  - 0.8279439696106362
  - 0.8635296934865901
  - 0.8499770431588614
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8425220025158501
  - 0.8809995586794975
  - 0.8269169314390947
  - 0.8697156200422612
  - 0.8543216236423611
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9480917120285782
  - 0.9475634227078977
  - 0.9462207249864133
  - 0.9448654641298532
  - 0.9494429323393235
  train_average_precision_macro_oob:
  - 0.7436045744200891
  - 0.7196176486715902
  - 0.7396109674901484
  - 0.7100178135523144
  - 0.7283650194349879
  train_average_precision_micro:
  - 0.9358485719572445
  - 0.9314329626439554
  - 0.9340836289197733
  - 0.9295642572217538
  - 0.934681368653581
  train_average_precision_micro_oob:
  - 0.7530099636378764
  - 0.73411716088232
  - 0.7459966031960481
  - 0.7292755977255275
  - 0.7477107729342523
  train_average_precision_samples:
  - 0.9453488372093023
  - 0.9416901078293483
  - 0.9394140989729225
  - 0.9332052177964129
  - 0.9412547080979284
  train_average_precision_samples_oob:
  - 0.8181289640591967
  - 0.8007208157524612
  - 0.8118580765639589
  - 0.80511297460983
  - 0.8093926553672316
  train_average_precision_weighted:
  - 0.9501749079564666
  - 0.9495969630246351
  - 0.9482239797995228
  - 0.9471143517293709
  - 0.9512580409491163
  train_average_precision_weighted_oob:
  - 0.7453294852212128
  - 0.7223486734876813
  - 0.739442499450006
  - 0.7093387788962303
  - 0.7296369044669413
  train_f1_macro:
  - 0.890063424947146
  - 0.879043600562588
  - 0.8848039215686274
  - 0.8871418588399721
  - 0.8817090395480226
  train_f1_macro_oob:
  - 0.8167723749119098
  - 0.8066104078762307
  - 0.8154761904761904
  - 0.8078266946191475
  - 0.8107344632768361
  train_f1_micro:
  - 0.8900634249471459
  - 0.8790436005625879
  - 0.8848039215686274
  - 0.8871418588399721
  - 0.8817090395480226
  train_f1_micro_oob:
  - 0.8167723749119098
  - 0.8066104078762306
  - 0.8154761904761905
  - 0.8078266946191475
  - 0.8107344632768362
  train_f1_samples:
  - 0.8900634249471459
  - 0.8790436005625879
  - 0.8848039215686275
  - 0.8871418588399721
  - 0.8817090395480226
  train_f1_samples_oob:
  - 0.8167723749119099
  - 0.8066104078762306
  - 0.8154761904761905
  - 0.8078266946191476
  - 0.8107344632768362
  train_f1_weighted:
  - 0.8899895364329963
  - 0.8800976573686924
  - 0.8853385948974184
  - 0.8879437160217462
  - 0.8825273896778134
  train_f1_weighted_oob:
  - 0.8124661840872743
  - 0.8035779063329324
  - 0.810666496328261
  - 0.8038209619917326
  - 0.8076829477782869
  train_jaccard_macro:
  - 0.8043610709860062
  - 0.7869038412267759
  - 0.7956026312770549
  - 0.8000173453631853
  - 0.7913212134392249
  train_jaccard_macro_oob:
  - 0.6926143461647488
  - 0.6781607827279929
  - 0.6910157516570549
  - 0.6801491874288033
  - 0.6845158027979666
  train_jaccard_micro:
  - 0.8019047619047619
  - 0.7841907151819323
  - 0.7934065934065934
  - 0.7971742543171114
  - 0.7884433217556047
  train_jaccard_micro_oob:
  - 0.6902918403811793
  - 0.6758986446670595
  - 0.6884422110552764
  - 0.6776084407971864
  - 0.6817102137767221
  train_jaccard_samples:
  - 0.8228329809725157
  - 0.806580269238497
  - 0.8156762705082031
  - 0.8182090446241389
  - 0.8105024213075059
  train_jaccard_samples_oob:
  - 0.720144971307762
  - 0.7050632911392405
  - 0.716656662665066
  - 0.70596985125287
  - 0.7113297013720742
  train_jaccard_weighted:
  - 0.8039221990678124
  - 0.7882999993028289
  - 0.7961940438289081
  - 0.8010057059142613
  - 0.7923365360944296
  train_jaccard_weighted_oob:
  - 0.6862336446088061
  - 0.6735772279754983
  - 0.683876195400758
  - 0.6741784144303454
  - 0.6797856731552154
  train_label_ranking_average_precision_score:
  - 0.9453488372093021
  - 0.941690107829348
  - 0.9394140989729219
  - 0.9332052177964123
  - 0.941254708097928
  train_label_ranking_average_precision_score_oob:
  - 0.8181289640591954
  - 0.8007208157524598
  - 0.8118580765639581
  - 0.8051129746098286
  - 0.8093926553672305
  train_matthews_corrcoef_macro:
  - 0.7332553307800403
  - 0.7020377546892936
  - 0.7183946129245
  - 0.7220315114683945
  - 0.7099111778110605
  train_matthews_corrcoef_macro_oob:
  - 0.5407432697871449
  - 0.5041860938414708
  - 0.5386320152653529
  - 0.5077281992219461
  - 0.5170268818655622
  train_matthews_corrcoef_micro:
  - 0.7379804956371498
  - 0.7097655164313817
  - 0.7240631250784156
  - 0.728918516926562
  - 0.7180543966103844
  train_matthews_corrcoef_micro_oob:
  - 0.5529433008304032
  - 0.5235418388986186
  - 0.5492236300686959
  - 0.5259471325555816
  - 0.5382686725192609
  train_matthews_corrcoef_samples:
  - 0.7148861686250796
  - 0.6877107915695018
  - 0.7050322733327303
  - 0.7022719575421801
  - 0.6982864500040709
  train_matthews_corrcoef_samples_oob:
  - 0.5254356688606093
  - 0.4909612283667927
  - 0.5254252830979196
  - 0.48649272304537616
  - 0.510472951273871
  train_matthews_corrcoef_weighted:
  - 0.7377991582351443
  - 0.7099716425662376
  - 0.724577571429968
  - 0.7290406667519379
  - 0.7172266883138892
  train_matthews_corrcoef_weighted_oob:
  - 0.5414807422893347
  - 0.5086607877101936
  - 0.5378083819198818
  - 0.5101234588387699
  - 0.5214858084201333
  train_ndgc:
  - 0.9644498851410137
  - 0.9610912990455142
  - 0.9591900965911563
  - 0.9557773920736031
  - 0.9611994638396767
  train_ndgc_oob:
  - 0.8766649476557417
  - 0.865062055797729
  - 0.8713773156505541
  - 0.8665605403506648
  - 0.8707643007429504
  train_neg_coverage_error:
  - -2.105708245243129
  - -2.1012658227848102
  - -2.1092436974789917
  - -2.1278825995807127
  - -2.1271186440677967
  train_neg_coverage_error_oob:
  - -2.682875264270613
  - -2.7658227848101267
  - -2.7016806722689077
  - -2.689727463312369
  - -2.7097457627118646
  train_neg_hamming_loss_macro:
  - -0.10993657505285413
  - -0.1209563994374121
  - -0.11519607843137253
  - -0.11285814116002794
  - -0.1182909604519774
  train_neg_hamming_loss_macro_oob:
  - -0.1832276250880902
  - -0.1933895921237693
  - -0.18452380952380953
  - -0.19217330538085253
  - -0.18926553672316385
  train_neg_hamming_loss_micro:
  - -0.10993657505285412
  - -0.1209563994374121
  - -0.11519607843137254
  - -0.11285814116002796
  - -0.1182909604519774
  train_neg_hamming_loss_micro_oob:
  - -0.1832276250880902
  - -0.19338959212376933
  - -0.18452380952380953
  - -0.19217330538085256
  - -0.18926553672316385
  train_neg_hamming_loss_samples:
  - -0.10993657505285412
  - -0.12095639943741208
  - -0.11519607843137254
  - -0.11285814116002796
  - -0.11829096045197739
  train_neg_hamming_loss_samples_oob:
  - -0.1832276250880902
  - -0.19338959212376933
  - -0.1845238095238095
  - -0.19217330538085253
  - -0.18926553672316382
  train_neg_hamming_loss_weighted:
  - -0.11001046356700378
  - -0.11990234263130765
  - -0.11466140510258158
  - -0.11205628397825391
  - -0.1174726103221866
  train_neg_hamming_loss_weighted_oob:
  - -0.18753381591272575
  - -0.19642209366706762
  - -0.18933350367173898
  - -0.19617903800826728
  - -0.19231705222171322
  train_neg_label_ranking_loss:
  - -0.03676885130373502
  - -0.039252226910454754
  - -0.04146825396825397
  - -0.04443862101094806
  - -0.04035428436911488
  train_neg_label_ranking_loss_oob:
  - -0.1415374677002584
  - -0.15952297233942803
  - -0.14811507936507937
  - -0.148130677847659
  - -0.1457391713747646
  train_precision_macro:
  - 0.890063424947146
  - 0.879043600562588
  - 0.8848039215686274
  - 0.8871418588399721
  - 0.8817090395480226
  train_precision_macro_oob:
  - 0.8167723749119098
  - 0.8066104078762307
  - 0.8154761904761904
  - 0.8078266946191475
  - 0.8107344632768361
  train_precision_micro:
  - 0.8900634249471459
  - 0.8790436005625879
  - 0.8848039215686274
  - 0.8871418588399721
  - 0.8817090395480226
  train_precision_micro_oob:
  - 0.8167723749119098
  - 0.8066104078762306
  - 0.8154761904761905
  - 0.8078266946191475
  - 0.8107344632768362
  train_precision_samples:
  - 0.8900634249471459
  - 0.8790436005625879
  - 0.8848039215686275
  - 0.8871418588399721
  - 0.8817090395480226
  train_precision_samples_oob:
  - 0.8167723749119099
  - 0.8066104078762306
  - 0.8154761904761905
  - 0.8078266946191476
  - 0.8107344632768362
  train_precision_weighted:
  - 0.8899895364329963
  - 0.8800976573686924
  - 0.8853385948974184
  - 0.8879437160217462
  - 0.8825273896778134
  train_precision_weighted_oob:
  - 0.8124661840872743
  - 0.8035779063329324
  - 0.810666496328261
  - 0.8038209619917326
  - 0.8076829477782869
  train_recall_macro:
  - 0.890063424947146
  - 0.879043600562588
  - 0.8848039215686274
  - 0.8871418588399721
  - 0.8817090395480226
  train_recall_macro_oob:
  - 0.8167723749119098
  - 0.8066104078762307
  - 0.8154761904761904
  - 0.8078266946191475
  - 0.8107344632768361
  train_recall_micro:
  - 0.8900634249471459
  - 0.8790436005625879
  - 0.8848039215686274
  - 0.8871418588399721
  - 0.8817090395480226
  train_recall_micro_oob:
  - 0.8167723749119098
  - 0.8066104078762306
  - 0.8154761904761905
  - 0.8078266946191475
  - 0.8107344632768362
  train_recall_samples:
  - 0.8900634249471459
  - 0.8790436005625879
  - 0.8848039215686275
  - 0.8871418588399721
  - 0.8817090395480226
  train_recall_samples_oob:
  - 0.8167723749119099
  - 0.8066104078762306
  - 0.8154761904761905
  - 0.8078266946191476
  - 0.8107344632768362
  train_recall_weighted:
  - 0.8899895364329963
  - 0.8800976573686924
  - 0.8853385948974184
  - 0.8879437160217462
  - 0.8825273896778134
  train_recall_weighted_oob:
  - 0.8124661840872743
  - 0.8035779063329324
  - 0.810666496328261
  - 0.8038209619917326
  - 0.8076829477782869
  train_roc_auc_macro:
  - 0.9754234831824481
  - 0.9749985628085492
  - 0.9743634638524185
  - 0.9737400850522772
  - 0.9755960899142383
  train_roc_auc_macro_oob:
  - 0.860036054373244
  - 0.8466422622005537
  - 0.8588261860654121
  - 0.8479267746484541
  - 0.8570901863219005
  train_roc_auc_micro:
  - 0.9680625146991945
  - 0.9665995244251547
  - 0.9671449269391342
  - 0.9649551766215432
  - 0.9678306779001224
  train_roc_auc_micro_oob:
  - 0.8754970278011969
  - 0.8644594376212025
  - 0.8753004147440123
  - 0.868557907461228
  - 0.8734909678196714
  train_roc_auc_samples:
  - 0.963231148696265
  - 0.9607477730895454
  - 0.958531746031746
  - 0.955561378989052
  - 0.9596457156308852
  train_roc_auc_samples_oob:
  - 0.8584625322997417
  - 0.840477027660572
  - 0.8518849206349207
  - 0.851869322152341
  - 0.8542608286252354
  train_roc_auc_weighted:
  - 0.9755679009397199
  - 0.9750815054153205
  - 0.9743980769017466
  - 0.9739544977021909
  - 0.9755127781390115
  train_roc_auc_weighted_oob:
  - 0.8589830952328695
  - 0.8467056874138379
  - 0.8571162719036376
  - 0.8469235163900533
  - 0.8566501650481511
start: 2023-12-22 02:46:31.102041
wrapper: null
