active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmJmZmZnJvwAzMzMzM/O/AJiZmZmZyb8AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:14:35.427878
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__1
  params: {}
hash: 998db80b63cadd46d3316f3b471dbaecbe23504d34ff3e77fe09a188cf0613b7
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/998db80_20231221T171423704209_embedding_weak__1_Gram_positive.yml
results:
  fit_time:
  - 3.717756986618042
  - 3.7859535217285156
  - 3.7792866230010986
  - 4.049301862716675
  - 3.982574224472046
  score_time:
  - 1.4775092601776123
  - 1.3714005947113037
  - 1.3478357791900635
  - 1.4595797061920166
  - 1.497676134109497
  test_average_precision_macro:
  - 0.9338568930053556
  - 0.7790015003380724
  - 0.8755171150911565
  - 0.9503507936507936
  - 0.8380239323071819
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.977263930867187
  - 0.9381665161723491
  - 0.9732508361002105
  - 0.975531370626661
  - 0.9784300919405156
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9668284789644014
  - 0.9551282051282051
  - 0.9619047619047619
  - 0.9559294871794872
  - 0.9733009708737864
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9766150103091789
  - 0.923119092846163
  - 0.9661891015588363
  - 0.9892796092796092
  - 0.962215864169184
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8349514563106797
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805826
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8349514563106796
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805825
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8349514563106796
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805825
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7907020164301718
  - 0.7691400580551525
  - 0.7618149146451033
  - 0.7806028106508875
  - 0.7750023564897729
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7264921500694477
  - 0.6942272342591889
  - 0.7000384729209826
  - 0.7035306693736927
  - 0.7130132892798173
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7166666666666667
  - 0.6842105263157895
  - 0.6867469879518072
  - 0.6945010183299389
  - 0.6989690721649484
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.737216828478964
  - 0.7025641025641024
  - 0.704126984126984
  - 0.7115384615384615
  - 0.7165048543689316
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6570993837342332
  - 0.6271564330341951
  - 0.6224586374220351
  - 0.6419785129814198
  - 0.6402545351884231
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9668284789644013
  - 0.9551282051282052
  - 0.9619047619047619
  - 0.9559294871794871
  - 0.9733009708737864
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3633077710770721
  - 0.25737135673524014
  - 0.3317380466376694
  - 0.26654085316117027
  - 0.27147144748286045
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.532495591369685
  - 0.45940008071046184
  - 0.4599894525920751
  - 0.47413732351544274
  - 0.4853886012679302
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.34951456310679613
  - 0.2692307692307692
  - 0.26666666666666666
  - 0.27884615384615385
  - 0.2912621359223301
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.48932023448394174
  - 0.37286370572942457
  - 0.4220246639316192
  - 0.3854348643958575
  - 0.39115570149954554
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9752853939064003
  - 0.9661977474945816
  - 0.9723187656651446
  - 0.9668643190515683
  - 0.980139762838439
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0970873786407767
  - -1.1730769230769231
  - -1.1142857142857143
  - -1.1442307692307692
  - -1.0679611650485437
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1650485436893204
  - -0.1875
  - -0.18571428571428572
  - -0.18028846153846154
  - -0.17718446601941745
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1650485436893204
  - -0.1875
  - -0.18571428571428572
  - -0.18028846153846154
  - -0.17718446601941748
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1650485436893204
  - -0.1875
  - -0.18571428571428572
  - -0.18028846153846154
  - -0.17718446601941748
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.20929798356982826
  - -0.2308599419448476
  - -0.23818508535489671
  - -0.21939718934911243
  - -0.2249976435102272
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02912621359223301
  - -0.05128205128205128
  - -0.03333333333333333
  - -0.04807692307692308
  - -0.022653721682847894
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8349514563106797
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805826
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8349514563106796
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805825
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8349514563106796
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805825
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7907020164301718
  - 0.7691400580551525
  - 0.7618149146451033
  - 0.7806028106508875
  - 0.7750023564897729
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8349514563106797
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805826
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8349514563106796
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805825
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8349514563106796
  - 0.8125
  - 0.8142857142857143
  - 0.8197115384615384
  - 0.8228155339805825
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7907020164301718
  - 0.7691400580551525
  - 0.7618149146451033
  - 0.7806028106508875
  - 0.7750023564897729
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9927500199083577
  - 0.9698024783217386
  - 0.9791634926247726
  - 0.9918591772151899
  - 0.9878221731730666
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9875749250749251
  - 0.9639683505782106
  - 0.9844369667107318
  - 0.984405818540434
  - 0.9889716278631352
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.970873786407767
  - 0.9487179487179487
  - 0.9666666666666667
  - 0.9519230769230769
  - 0.977346278317152
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9934858847285303
  - 0.9787171835663561
  - 0.987696318486296
  - 0.997725170399221
  - 0.9940418133580089
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9245608962321509
  - 0.9728052463070076
  - 0.8852301338307587
  - 0.9344856077119209
  - 0.897958112250645
  train_average_precision_macro_oob:
  - 0.8573970954287197
  - 0.8773933645598105
  - 0.8367144141703462
  - 0.8640245051836752
  - 0.863602954862183
  train_average_precision_micro:
  - 0.9792110817888462
  - 0.9748979765232603
  - 0.9744865506080919
  - 0.975018356418595
  - 0.9777648562273025
  train_average_precision_micro_oob:
  - 0.9673613228565477
  - 0.9649173138892629
  - 0.9651623303502744
  - 0.9639284659042271
  - 0.9665075535378489
  train_average_precision_samples:
  - 0.9635416666666667
  - 0.9620481927710843
  - 0.9653784219001611
  - 0.9618473895582328
  - 0.9633413461538461
  train_average_precision_samples_oob:
  - 0.9539262820512822
  - 0.9592369477911648
  - 0.9623590982286635
  - 0.9548192771084337
  - 0.9595352564102565
  train_average_precision_weighted:
  - 0.9803854426367814
  - 0.983742714988457
  - 0.9710804616479954
  - 0.9792965989925163
  - 0.9728191709606812
  train_average_precision_weighted_oob:
  - 0.9624330813839149
  - 0.9637303454042581
  - 0.9589905621172511
  - 0.9632536318249532
  - 0.9628841038992758
  train_f1_macro:
  - 0.8359375
  - 0.8210843373493977
  - 0.8266908212560387
  - 0.8536144578313254
  - 0.8251201923076923
  train_f1_macro_oob:
  - 0.8359375
  - 0.8162650602409638
  - 0.8140096618357489
  - 0.8451807228915662
  - 0.8167067307692307
  train_f1_micro:
  - 0.8359375
  - 0.8210843373493976
  - 0.8266908212560387
  - 0.8536144578313253
  - 0.8251201923076923
  train_f1_micro_oob:
  - 0.8359375
  - 0.8162650602409639
  - 0.8140096618357487
  - 0.8451807228915663
  - 0.8167067307692307
  train_f1_samples:
  - 0.8359375
  - 0.8210843373493976
  - 0.8266908212560387
  - 0.8536144578313253
  - 0.8251201923076923
  train_f1_samples_oob:
  - 0.8359375
  - 0.8162650602409639
  - 0.8140096618357487
  - 0.8451807228915663
  - 0.8167067307692307
  train_f1_weighted:
  - 0.7963557921791812
  - 0.7723440524688683
  - 0.7759647354580105
  - 0.8245219541651091
  - 0.7820913461538461
  train_f1_weighted_oob:
  - 0.7969639250963834
  - 0.7661610470659617
  - 0.7586800125117298
  - 0.8127843114702246
  - 0.7688701923076922
  train_jaccard_macro:
  - 0.7271563728349633
  - 0.7075170018512517
  - 0.7157089619458972
  - 0.7514343722939568
  - 0.7123468565732056
  train_jaccard_macro_oob:
  - 0.7278640597363614
  - 0.7011735852496153
  - 0.6992477130754163
  - 0.7390319830057354
  - 0.7020407726213667
  train_jaccard_micro:
  - 0.7181208053691275
  - 0.6964741951967297
  - 0.7045805455481214
  - 0.744613767735155
  - 0.7023017902813299
  train_jaccard_micro_oob:
  - 0.7181208053691275
  - 0.6895674300254453
  - 0.6863543788187373
  - 0.7318727177882107
  - 0.6901980700863383
  train_jaccard_samples:
  - 0.7384615384615384
  - 0.7143775100401605
  - 0.7239935587761673
  - 0.7670682730923692
  - 0.7214743589743589
  train_jaccard_samples_oob:
  - 0.7384615384615383
  - 0.7066666666666667
  - 0.7037037037037035
  - 0.7538955823293172
  - 0.7080128205128204
  train_jaccard_weighted:
  - 0.6652009803519422
  - 0.6331278881223213
  - 0.6384938164860974
  - 0.7032995812978183
  - 0.645766521194486
  train_jaccard_weighted_oob:
  - 0.6669953543871163
  - 0.6250931997477812
  - 0.6164484664508963
  - 0.6860647573921341
  - 0.6296083306109402
  train_label_ranking_average_precision_score:
  - 0.9635416666666666
  - 0.9620481927710842
  - 0.965378421900161
  - 0.9618473895582327
  - 0.9633413461538461
  train_label_ranking_average_precision_score_oob:
  - 0.9539262820512818
  - 0.9592369477911645
  - 0.9623590982286634
  - 0.9548192771084337
  - 0.9595352564102563
  train_matthews_corrcoef_macro:
  - 0.3673335999543599
  - 0.33867770232205774
  - 0.3704176640068868
  - 0.3891116270900928
  - 0.3324320799163264
  train_matthews_corrcoef_macro_oob:
  - 0.35842863971998745
  - 0.3223249172151444
  - 0.3362668203092769
  - 0.3701908372649152
  - 0.314094656015852
  train_matthews_corrcoef_micro:
  - 0.5345867696915464
  - 0.48194535561254837
  - 0.5021601652454292
  - 0.5926772576393872
  - 0.49891459667859683
  train_matthews_corrcoef_micro_oob:
  - 0.5345867696915464
  - 0.4643987798310366
  - 0.456461079015338
  - 0.5651688949266912
  - 0.4689307973648859
  train_matthews_corrcoef_samples:
  - 0.35096153846153844
  - 0.2891566265060241
  - 0.3156199677938809
  - 0.42409638554216866
  - 0.31009615384615385
  train_matthews_corrcoef_samples_oob:
  - 0.35096153846153844
  - 0.26987951807228916
  - 0.2648953301127214
  - 0.39196787148594375
  - 0.2764423076923077
  train_matthews_corrcoef_weighted:
  - 0.49014719449362026
  - 0.444981944289583
  - 0.4710944462222279
  - 0.537763141586453
  - 0.44922235974412306
  train_matthews_corrcoef_weighted_oob:
  - 0.48321358195363834
  - 0.4258622406417293
  - 0.4265122413757793
  - 0.5114104675285192
  - 0.42042335107799456
  train_ndgc:
  - 0.9729151079378221
  - 0.9716991275636855
  - 0.9741784182588289
  - 0.971550678619963
  - 0.972824032703786
  train_ndgc_oob:
  - 0.9656479170944441
  - 0.9696049823915686
  - 0.9719117668376811
  - 0.9662116727017424
  - 0.9698446902269893
  train_neg_coverage_error:
  - -1.1129807692307692
  - -1.1253012048192772
  - -1.1014492753623188
  - -1.1301204819277109
  - -1.1105769230769231
  train_neg_coverage_error_oob:
  - -1.1490384615384615
  - -1.1325301204819278
  - -1.1111111111111112
  - -1.1590361445783133
  - -1.1346153846153846
  train_neg_hamming_loss_macro:
  - -0.1640625
  - -0.17891566265060238
  - -0.17330917874396135
  - -0.14638554216867472
  - -0.17487980769230768
  train_neg_hamming_loss_macro_oob:
  - -0.1640625
  - -0.18373493975903615
  - -0.1859903381642512
  - -0.15481927710843374
  - -0.18329326923076922
  train_neg_hamming_loss_micro:
  - -0.1640625
  - -0.1789156626506024
  - -0.17330917874396135
  - -0.1463855421686747
  - -0.17487980769230768
  train_neg_hamming_loss_micro_oob:
  - -0.1640625
  - -0.18373493975903615
  - -0.1859903381642512
  - -0.15481927710843374
  - -0.18329326923076922
  train_neg_hamming_loss_samples:
  - -0.1640625
  - -0.1789156626506024
  - -0.17330917874396135
  - -0.1463855421686747
  - -0.17487980769230768
  train_neg_hamming_loss_samples_oob:
  - -0.1640625
  - -0.18373493975903615
  - -0.1859903381642512
  - -0.15481927710843374
  - -0.18329326923076922
  train_neg_hamming_loss_weighted:
  - -0.20364420782081877
  - -0.2276559475311317
  - -0.22403526454198955
  - -0.17547804583489085
  - -0.21790865384615385
  train_neg_hamming_loss_weighted_oob:
  - -0.20303607490361666
  - -0.2338389529340383
  - -0.24131998748827027
  - -0.18721568852977544
  - -0.23112980769230768
  train_neg_label_ranking_loss:
  - -0.03485576923076923
  - -0.03975903614457831
  - -0.03140096618357488
  - -0.03975903614457831
  - -0.03325320512820513
  train_neg_label_ranking_loss_oob:
  - -0.046875
  - -0.04216867469879518
  - -0.03462157809983897
  - -0.04939759036144578
  - -0.04126602564102563
  train_precision_macro:
  - 0.8359375
  - 0.8210843373493977
  - 0.8266908212560387
  - 0.8536144578313254
  - 0.8251201923076923
  train_precision_macro_oob:
  - 0.8359375
  - 0.8162650602409638
  - 0.8140096618357489
  - 0.8451807228915662
  - 0.8167067307692307
  train_precision_micro:
  - 0.8359375
  - 0.8210843373493976
  - 0.8266908212560387
  - 0.8536144578313253
  - 0.8251201923076923
  train_precision_micro_oob:
  - 0.8359375
  - 0.8162650602409639
  - 0.8140096618357487
  - 0.8451807228915663
  - 0.8167067307692307
  train_precision_samples:
  - 0.8359375
  - 0.8210843373493976
  - 0.8266908212560387
  - 0.8536144578313253
  - 0.8251201923076923
  train_precision_samples_oob:
  - 0.8359375
  - 0.8162650602409639
  - 0.8140096618357487
  - 0.8451807228915663
  - 0.8167067307692307
  train_precision_weighted:
  - 0.7963557921791812
  - 0.7723440524688683
  - 0.7759647354580105
  - 0.8245219541651091
  - 0.7820913461538461
  train_precision_weighted_oob:
  - 0.7969639250963834
  - 0.7661610470659617
  - 0.7586800125117298
  - 0.8127843114702246
  - 0.7688701923076922
  train_recall_macro:
  - 0.8359375
  - 0.8210843373493977
  - 0.8266908212560387
  - 0.8536144578313254
  - 0.8251201923076923
  train_recall_macro_oob:
  - 0.8359375
  - 0.8162650602409638
  - 0.8140096618357489
  - 0.8451807228915662
  - 0.8167067307692307
  train_recall_micro:
  - 0.8359375
  - 0.8210843373493976
  - 0.8266908212560387
  - 0.8536144578313253
  - 0.8251201923076923
  train_recall_micro_oob:
  - 0.8359375
  - 0.8162650602409639
  - 0.8140096618357487
  - 0.8451807228915663
  - 0.8167067307692307
  train_recall_samples:
  - 0.8359375
  - 0.8210843373493976
  - 0.8266908212560387
  - 0.8536144578313253
  - 0.8251201923076923
  train_recall_samples_oob:
  - 0.8359375
  - 0.8162650602409639
  - 0.8140096618357487
  - 0.8451807228915663
  - 0.8167067307692307
  train_recall_weighted:
  - 0.7963557921791812
  - 0.7723440524688683
  - 0.7759647354580105
  - 0.8245219541651091
  - 0.7820913461538461
  train_recall_weighted_oob:
  - 0.7969639250963834
  - 0.7661610470659617
  - 0.7586800125117298
  - 0.8127843114702246
  - 0.7688701923076922
  train_roc_auc_macro:
  - 0.9932427837074528
  - 0.9947015360258015
  - 0.988263002486993
  - 0.9932533442959167
  - 0.9928801550823224
  train_roc_auc_macro_oob:
  - 0.9856764904369302
  - 0.9816705714955456
  - 0.9840699943470647
  - 0.9860410134836518
  - 0.988041183938897
  train_roc_auc_micro:
  - 0.9891537510423556
  - 0.9875928701929848
  - 0.9860508687481009
  - 0.987214868292758
  - 0.9893680140866636
  train_roc_auc_micro_oob:
  - 0.9798794222235002
  - 0.9788436346658796
  - 0.9808424446883172
  - 0.979872264072203
  - 0.9809734343898331
  train_roc_auc_samples:
  - 0.9651442307692307
  - 0.9602409638554217
  - 0.9685990338164251
  - 0.9602409638554217
  - 0.9667467948717948
  train_roc_auc_samples_oob:
  - 0.953125
  - 0.9578313253012049
  - 0.965378421900161
  - 0.9506024096385542
  - 0.9587339743589743
  train_roc_auc_weighted:
  - 0.9952062905979745
  - 0.9946080279631998
  - 0.9921889435257539
  - 0.9939166369943819
  - 0.9947863325838706
  train_roc_auc_weighted_oob:
  - 0.9894082991917568
  - 0.9889794351408325
  - 0.9884767579974402
  - 0.9894860752817952
  - 0.9911035564393074
start: 2023-12-21 17:14:23.704209
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
