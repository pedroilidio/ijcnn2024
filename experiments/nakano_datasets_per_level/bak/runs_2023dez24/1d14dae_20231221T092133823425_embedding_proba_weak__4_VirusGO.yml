active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b9AMzMzMzMDQICZmZmZmfm/oJmZmZmZEUDAzMzMzMwMwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:22:07.559400
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__4
  params: {}
hash: 1d14dae606043d463573a7d657a52c730fe60bf2c7442fd1c66119a9da3e2786
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1d14dae_20231221T092133823425_embedding_proba_weak__4_VirusGO.yml
results:
  fit_time:
  - 24.719361543655396
  - 24.545555114746094
  - 24.65511989593506
  - 25.019407033920288
  - 25.068323612213135
  score_time:
  - 2.9498324394226074
  - 2.8822548389434814
  - 2.7850985527038574
  - 2.7255964279174805
  - 3.0009448528289795
  test_average_precision_macro:
  - 0.9303390769329352
  - 0.9748031128540143
  - 0.9297133934744769
  - 0.8982325368787306
  - 0.8707162598143965
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9163721583143708
  - 0.912453934511424
  - 0.9131533030862274
  - 0.9094772663228861
  - 0.7813936656823893
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9069767441860465
  - 0.9495726495726495
  - 0.9496124031007751
  - 0.9310810810810811
  - 0.9388888888888889
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9285950992823164
  - 0.9666131529640092
  - 0.9361117330382035
  - 0.9227980269696956
  - 0.8247159862967455
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8449612403100774
  - 0.8547008547008548
  - 0.8294573643410853
  - 0.8693693693693695
  - 0.8333333333333334
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8449612403100775
  - 0.8547008547008547
  - 0.8294573643410853
  - 0.8693693693693694
  - 0.8333333333333334
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8449612403100777
  - 0.8547008547008546
  - 0.8294573643410854
  - 0.8693693693693695
  - 0.8333333333333337
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7804114490161003
  - 0.7948717948717948
  - 0.7534883720930232
  - 0.8306674020959735
  - 0.7555555555555556
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7432864516149656
  - 0.7560507081160742
  - 0.7225286324558441
  - 0.7739049046957217
  - 0.7296479993190456
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7315436241610739
  - 0.746268656716418
  - 0.7086092715231788
  - 0.7689243027888446
  - 0.7142857142857143
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7408637873754154
  - 0.7649572649572651
  - 0.7187153931339979
  - 0.787001287001287
  - 0.7222222222222224
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6510931141085213
  - 0.6670962217040507
  - 0.6149602765779697
  - 0.7127213003201898
  - 0.6200969266126483
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9069767441860465
  - 0.9495726495726495
  - 0.9496124031007751
  - 0.9310810810810811
  - 0.9388888888888889
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.15278463956615343
  - 0.1786592435958927
  - 0.11382808967819534
  - 0.2200742040891268
  - 0.08092173009314356
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4341107182347829
  - 0.5007172110523825
  - 0.31471831698777725
  - 0.5912407029305223
  - 0.32694113533337277
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2316808758178693
  - 0.3460863229769494
  - 0.13098733795427153
  - 0.4710051006550197
  - 0.15844049173632674
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.30508590997405627
  - 0.3719029152404296
  - 0.22647111252594843
  - 0.45811364932838644
  - 0.16806820865499048
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9318033201191785
  - 0.9657142296255722
  - 0.9638009256612562
  - 0.9521885263430186
  - 0.9567078946540224
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4651162790697674
  - -1.435897435897436
  - -1.2790697674418605
  - -1.6756756756756757
  - -1.3333333333333333
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1550387596899225
  - -0.1452991452991453
  - -0.17054263565891473
  - -0.13063063063063063
  - -0.16666666666666666
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.15503875968992248
  - -0.1452991452991453
  - -0.17054263565891473
  - -0.13063063063063063
  - -0.16666666666666666
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.15503875968992248
  - -0.1452991452991453
  - -0.17054263565891475
  - -0.13063063063063063
  - -0.16666666666666669
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21958855098389984
  - -0.20512820512820512
  - -0.24651162790697675
  - -0.1693325979040265
  - -0.24444444444444444
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05058139534883722
  - -0.028205128205128202
  - -0.021511627906976746
  - -0.05938438438438438
  - -0.03166666666666666
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8449612403100774
  - 0.8547008547008548
  - 0.8294573643410853
  - 0.8693693693693695
  - 0.8333333333333334
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8449612403100775
  - 0.8547008547008547
  - 0.8294573643410853
  - 0.8693693693693694
  - 0.8333333333333334
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8449612403100777
  - 0.8547008547008546
  - 0.8294573643410854
  - 0.8693693693693695
  - 0.8333333333333337
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7804114490161003
  - 0.7948717948717948
  - 0.7534883720930232
  - 0.8306674020959735
  - 0.7555555555555556
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8449612403100774
  - 0.8547008547008548
  - 0.8294573643410853
  - 0.8693693693693695
  - 0.8333333333333334
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8449612403100775
  - 0.8547008547008547
  - 0.8294573643410853
  - 0.8693693693693694
  - 0.8333333333333334
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8449612403100777
  - 0.8547008547008546
  - 0.8294573643410854
  - 0.8693693693693695
  - 0.8333333333333337
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7804114490161003
  - 0.7948717948717948
  - 0.7534883720930232
  - 0.8306674020959735
  - 0.7555555555555556
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9780061169767053
  - 0.98989898989899
  - 0.9780075135467293
  - 0.9542143445843636
  - 0.9512732298580379
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9779219566840927
  - 0.9804743519029233
  - 0.9747115384615385
  - 0.9577680783295978
  - 0.9562455892731122
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9494186046511629
  - 0.9717948717948718
  - 0.9784883720930233
  - 0.9406156156156156
  - 0.9683333333333334
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9732043063773832
  - 0.9823747680890539
  - 0.9757834757834758
  - 0.9517266143994253
  - 0.9297821927395098
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9664771176820383
  - 0.9309983935159695
  - 0.9528866159954962
  - 0.9802851786177057
  - 0.9488584164018053
  train_average_precision_macro_oob:
  - 0.9260616823342841
  - 0.8852331194209819
  - 0.8956758368314954
  - 0.9631803925912901
  - 0.899001137109042
  train_average_precision_micro:
  - 0.9444516824066855
  - 0.8921437139611285
  - 0.9236314326938833
  - 0.9473867735894255
  - 0.9297640024563075
  train_average_precision_micro_oob:
  - 0.9101632797049405
  - 0.8647892061346031
  - 0.8813752064847511
  - 0.9170293312067507
  - 0.8765678271458375
  train_average_precision_samples:
  - 0.9612804878048781
  - 0.9511904761904763
  - 0.9586382113821138
  - 0.9784313725490195
  - 0.9701646090534979
  train_average_precision_samples_oob:
  - 0.9450203252032521
  - 0.9273809523809524
  - 0.9237296747967481
  - 0.942843137254902
  - 0.9618312757201646
  train_average_precision_weighted:
  - 0.9649972213513077
  - 0.9297915092230108
  - 0.9493421701837558
  - 0.9739346972682552
  - 0.9445845369557343
  train_average_precision_weighted_oob:
  - 0.9381674866844182
  - 0.9014290055506368
  - 0.910477902567465
  - 0.9585982204677443
  - 0.8936924835183738
  train_f1_macro:
  - 0.8648373983739837
  - 0.8740079365079366
  - 0.8678861788617885
  - 0.8892156862745099
  - 0.8405349794238685
  train_f1_macro_oob:
  - 0.8475609756097561
  - 0.8730158730158731
  - 0.8607723577235772
  - 0.8892156862745099
  - 0.8353909465020575
  train_f1_micro:
  - 0.8648373983739838
  - 0.8740079365079365
  - 0.8678861788617886
  - 0.8892156862745098
  - 0.8405349794238683
  train_f1_micro_oob:
  - 0.8475609756097561
  - 0.873015873015873
  - 0.8607723577235772
  - 0.8892156862745098
  - 0.8353909465020576
  train_f1_samples:
  - 0.8648373983739837
  - 0.8740079365079365
  - 0.8678861788617886
  - 0.8892156862745099
  - 0.8405349794238682
  train_f1_samples_oob:
  - 0.8475609756097561
  - 0.8730158730158729
  - 0.860772357723577
  - 0.8892156862745099
  - 0.8353909465020575
  train_f1_weighted:
  - 0.8191158536585366
  - 0.8388165611072015
  - 0.8256459792320695
  - 0.8692842654303101
  - 0.7721296296296296
  train_f1_weighted_oob:
  - 0.7835975609756097
  - 0.8365880835092658
  - 0.8111567254286405
  - 0.8695450594030715
  - 0.7617283950617284
  train_jaccard_macro:
  - 0.7685048084832712
  - 0.7814022048804657
  - 0.7717011738241283
  - 0.802823601474282
  - 0.7384401763727038
  train_jaccard_macro_oob:
  - 0.7469671231696062
  - 0.7807432235970072
  - 0.7620835336646161
  - 0.8029174746271476
  - 0.7326927555767334
  train_jaccard_micro:
  - 0.7618621307072516
  - 0.7762114537444934
  - 0.7666068222621185
  - 0.8005295675198588
  - 0.7249334516415262
  train_jaccard_micro_oob:
  - 0.7354497354497355
  - 0.7746478873239436
  - 0.7555753791257805
  - 0.8005295675198588
  - 0.7173144876325088
  train_jaccard_samples:
  - 0.7800522648083624
  - 0.7939342403628118
  - 0.7836817653890824
  - 0.8166666666666665
  - 0.7355967078189302
  train_jaccard_samples_oob:
  - 0.7526132404181186
  - 0.7918083900226757
  - 0.7719221835075493
  - 0.8166666666666668
  - 0.7267783656672546
  train_jaccard_weighted:
  - 0.6988414172686619
  - 0.727024106994122
  - 0.7057480891830892
  - 0.7697115101730985
  - 0.6412255544796895
  train_jaccard_weighted_oob:
  - 0.654614350069267
  - 0.7253797073031364
  - 0.6861549968689317
  - 0.7703042155170133
  - 0.6295867048407849
  train_label_ranking_average_precision_score:
  - 0.961280487804878
  - 0.9511904761904763
  - 0.9586382113821137
  - 0.9784313725490195
  - 0.9701646090534979
  train_label_ranking_average_precision_score_oob:
  - 0.945020325203252
  - 0.9273809523809524
  - 0.9237296747967478
  - 0.9428431372549018
  - 0.9618312757201646
  train_matthews_corrcoef_macro:
  - 0.19731665507513796
  - 0.21224212018242605
  - 0.2030753206535877
  - 0.240616644869305
  - 0.1481441016122613
  train_matthews_corrcoef_macro_oob:
  - 0.1611402701768143
  - 0.21054123125581814
  - 0.18829984407463493
  - 0.24061682600561252
  - 0.13134869466031443
  train_matthews_corrcoef_micro:
  - 0.5315525320672759
  - 0.5620542075386961
  - 0.548488059720676
  - 0.6207204271208531
  - 0.4310015901676319
  train_matthews_corrcoef_micro_oob:
  - 0.45366375773189216
  - 0.5579325629855613
  - 0.517756078213142
  - 0.6207204271208531
  - 0.4050032418295062
  train_matthews_corrcoef_samples:
  - 0.3840821121000251
  - 0.43639991313148385
  - 0.35830657109858766
  - 0.48705269200042617
  - 0.22058053441978456
  train_matthews_corrcoef_samples_oob:
  - 0.3005615840750188
  - 0.4270692912983509
  - 0.32172120524492914
  - 0.4944933453184694
  - 0.1936203833829554
  train_matthews_corrcoef_weighted:
  - 0.4016023309906431
  - 0.4282219094872244
  - 0.4162930011260907
  - 0.4870677078838129
  - 0.30412778316721195
  train_matthews_corrcoef_weighted_oob:
  - 0.3271864465672186
  - 0.4243317483675313
  - 0.3862213763795598
  - 0.4875751567347653
  - 0.27025616267833136
  train_ndgc:
  - 0.9725134438169396
  - 0.9645349825716236
  - 0.9710335807030512
  - 0.9852026638485716
  - 0.9800912627898031
  train_ndgc_oob:
  - 0.9611382632827156
  - 0.9484401342023219
  - 0.9458732876980422
  - 0.9592871387499902
  - 0.9748914039606706
  train_neg_coverage_error:
  - -1.3353658536585367
  - -1.3869047619047619
  - -1.396341463414634
  - -1.2588235294117647
  - -1.3395061728395061
  train_neg_coverage_error_oob:
  - -1.4146341463414633
  - -1.494047619047619
  - -1.5
  - -1.3705882352941177
  - -1.4074074074074074
  train_neg_hamming_loss_macro:
  - -0.13516260162601626
  - -0.1259920634920635
  - -0.13211382113821138
  - -0.11078431372549019
  - -0.15946502057613168
  train_neg_hamming_loss_macro_oob:
  - -0.1524390243902439
  - -0.126984126984127
  - -0.13922764227642276
  - -0.11078431372549019
  - -0.1646090534979424
  train_neg_hamming_loss_micro:
  - -0.13516260162601626
  - -0.1259920634920635
  - -0.13211382113821138
  - -0.11078431372549019
  - -0.15946502057613168
  train_neg_hamming_loss_micro_oob:
  - -0.1524390243902439
  - -0.12698412698412698
  - -0.13922764227642276
  - -0.11078431372549019
  - -0.1646090534979424
  train_neg_hamming_loss_samples:
  - -0.13516260162601623
  - -0.1259920634920635
  - -0.13211382113821138
  - -0.11078431372549019
  - -0.1594650205761317
  train_neg_hamming_loss_samples_oob:
  - -0.1524390243902439
  - -0.12698412698412698
  - -0.13922764227642276
  - -0.11078431372549019
  - -0.1646090534979424
  train_neg_hamming_loss_weighted:
  - -0.18088414634146344
  - -0.1611834388927985
  - -0.17435402076793044
  - -0.13071573456968996
  - -0.22787037037037033
  train_neg_hamming_loss_weighted_oob:
  - -0.21640243902439024
  - -0.1634119164907342
  - -0.18884327457135958
  - -0.13045494059692844
  - -0.23827160493827157
  train_neg_label_ranking_loss:
  - -0.02027439024390244
  - -0.033630952380952386
  - -0.028506097560975614
  - -0.011029411764705883
  - -0.016272290809327846
  train_neg_label_ranking_loss_oob:
  - -0.03429878048780488
  - -0.04998346560846561
  - -0.04845867208672087
  - -0.03264705882352942
  - -0.026903292181069953
  train_precision_macro:
  - 0.8648373983739837
  - 0.8740079365079366
  - 0.8678861788617885
  - 0.8892156862745099
  - 0.8405349794238685
  train_precision_macro_oob:
  - 0.8475609756097561
  - 0.8730158730158731
  - 0.8607723577235772
  - 0.8892156862745099
  - 0.8353909465020575
  train_precision_micro:
  - 0.8648373983739838
  - 0.8740079365079365
  - 0.8678861788617886
  - 0.8892156862745098
  - 0.8405349794238683
  train_precision_micro_oob:
  - 0.8475609756097561
  - 0.873015873015873
  - 0.8607723577235772
  - 0.8892156862745098
  - 0.8353909465020576
  train_precision_samples:
  - 0.8648373983739837
  - 0.8740079365079365
  - 0.8678861788617886
  - 0.8892156862745099
  - 0.8405349794238682
  train_precision_samples_oob:
  - 0.8475609756097561
  - 0.8730158730158729
  - 0.860772357723577
  - 0.8892156862745099
  - 0.8353909465020575
  train_precision_weighted:
  - 0.8191158536585366
  - 0.8388165611072015
  - 0.8256459792320695
  - 0.8692842654303101
  - 0.7721296296296296
  train_precision_weighted_oob:
  - 0.7835975609756097
  - 0.8365880835092658
  - 0.8111567254286405
  - 0.8695450594030715
  - 0.7617283950617284
  train_recall_macro:
  - 0.8648373983739837
  - 0.8740079365079366
  - 0.8678861788617885
  - 0.8892156862745099
  - 0.8405349794238685
  train_recall_macro_oob:
  - 0.8475609756097561
  - 0.8730158730158731
  - 0.8607723577235772
  - 0.8892156862745099
  - 0.8353909465020575
  train_recall_micro:
  - 0.8648373983739838
  - 0.8740079365079365
  - 0.8678861788617886
  - 0.8892156862745098
  - 0.8405349794238683
  train_recall_micro_oob:
  - 0.8475609756097561
  - 0.873015873015873
  - 0.8607723577235772
  - 0.8892156862745098
  - 0.8353909465020576
  train_recall_samples:
  - 0.8648373983739837
  - 0.8740079365079365
  - 0.8678861788617886
  - 0.8892156862745099
  - 0.8405349794238682
  train_recall_samples_oob:
  - 0.8475609756097561
  - 0.8730158730158729
  - 0.860772357723577
  - 0.8892156862745099
  - 0.8353909465020575
  train_recall_weighted:
  - 0.8191158536585366
  - 0.8388165611072015
  - 0.8256459792320695
  - 0.8692842654303101
  - 0.7721296296296296
  train_recall_weighted_oob:
  - 0.7835975609756097
  - 0.8365880835092658
  - 0.8111567254286405
  - 0.8695450594030715
  - 0.7617283950617284
  train_roc_auc_macro:
  - 0.9885677062272378
  - 0.9711231399094661
  - 0.976233163425969
  - 0.9920245351118172
  - 0.9769196091408365
  train_roc_auc_macro_oob:
  - 0.9672054010930177
  - 0.9572025350707111
  - 0.9647513343226736
  - 0.9874609222716563
  - 0.9602764098532247
  train_roc_auc_micro:
  - 0.9851498724489796
  - 0.972572897224857
  - 0.9772479805525309
  - 0.9868466273944685
  - 0.9810589378238342
  train_roc_auc_micro_oob:
  - 0.9702168367346938
  - 0.9608909830798886
  - 0.9612633258210731
  - 0.9760749106125377
  - 0.9646178756476683
  train_roc_auc_samples:
  - 0.9797256097560977
  - 0.9663690476190476
  - 0.9714939024390243
  - 0.9889705882352942
  - 0.9837277091906721
  train_roc_auc_samples_oob:
  - 0.9657012195121951
  - 0.9500165343915344
  - 0.9515413279132793
  - 0.9673529411764705
  - 0.9730967078189301
  train_roc_auc_weighted:
  - 0.98451410639744
  - 0.9677575783172477
  - 0.9710473218969146
  - 0.9867619529545014
  - 0.9730951326346526
  train_roc_auc_weighted_oob:
  - 0.966950742681628
  - 0.9583328702928466
  - 0.957942557841178
  - 0.9798068844924265
  - 0.9553362639983547
start: 2023-12-21 09:21:33.823425
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
