active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z/MzMzMzMz8vzQzMzMzM/M/NDMzMzMz8z/MzMzMzMz8vw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAEAAAAAAAADwPwAAAAAAAAjAAAAAAAAA8D8AAAAAAADwvw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:09:24.585409
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__5
  params: {}
hash: 3eb535afeeef1a92638300abce5a1fcdd28155743d103c26fba9202c03736a5f
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3eb535a_20231221T220845972871_embedding_proba__5_CHD_49.yml
results:
  fit_time:
  - 20.077404975891113
  - 20.305964469909668
  - 20.38486623764038
  - 22.008711576461792
  - 20.008034706115723
  score_time:
  - 4.857672929763794
  - 4.88006854057312
  - 4.549959659576416
  - 5.166656970977783
  - 4.635342121124268
  test_average_precision_macro:
  - 0.5681079763388571
  - 0.5603706651408179
  - 0.514154420499192
  - 0.49567126111908894
  - 0.5130481378001243
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7160343083458696
  - 0.71394990933827
  - 0.6675441866137557
  - 0.6666771563830052
  - 0.6783368654473885
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7928644240570846
  - 0.797462121212121
  - 0.7729166666666667
  - 0.7845833333333334
  - 0.7968501984126984
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.697731000144826
  - 0.6775688181511911
  - 0.6373453178724177
  - 0.6208841219847284
  - 0.6351338615403009
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7339449541284404
  - 0.7181818181818181
  - 0.685672514619883
  - 0.6742424242424243
  - 0.6934523809523809
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7339449541284404
  - 0.7181818181818181
  - 0.685672514619883
  - 0.6742424242424242
  - 0.6934523809523809
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7339449541284405
  - 0.7181818181818181
  - 0.6856725146198831
  - 0.6742424242424243
  - 0.6934523809523808
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.685699621479438
  - 0.6839962121212121
  - 0.632783543365456
  - 0.6258692185007975
  - 0.6521564508156203
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5948117495864101
  - 0.5747984488767058
  - 0.5463280680723034
  - 0.5326143452443484
  - 0.5485752035885317
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5797101449275363
  - 0.5602836879432624
  - 0.5216907675194661
  - 0.5085714285714286
  - 0.530751708428246
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6120576671035387
  - 0.6040023612750884
  - 0.5601199969621021
  - 0.5559110586383315
  - 0.5770408163265307
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5230910205282229
  - 0.52350068203125
  - 0.4709417133220308
  - 0.46177129976954145
  - 0.48940003537491966
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.80203873598369
  - 0.7974621212121212
  - 0.7729166666666669
  - 0.8027651515151517
  - 0.7968501984126984
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.17816904527803354
  - 0.176831428865064
  - 0.10695650435409537
  - 0.065619229194005
  - 0.13747784675159772
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.45686377785841625
  - 0.4295227566988253
  - 0.36108817924199854
  - 0.3393949142525367
  - 0.3793305555749338
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4681085421432005
  - 0.4499834212869053
  - 0.38679915821939287
  - 0.36285276063547256
  - 0.4014176880423531
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.17788533170925375
  - 0.19603926292149831
  - 0.11638987315011617
  - 0.06984829619644878
  - 0.1453845515541299
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8615197025108406
  - 0.8680971840932508
  - 0.8486939590614458
  - 0.8535999924272873
  - 0.8677397507756418
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.614678899082569
  - -3.7454545454545456
  - -3.6578947368421053
  - -3.690909090909091
  - -3.6517857142857144
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.26605504587155965
  - -0.2818181818181818
  - -0.31432748538011696
  - -0.32575757575757575
  - -0.306547619047619
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.26605504587155965
  - -0.2818181818181818
  - -0.31432748538011696
  - -0.32575757575757575
  - -0.30654761904761907
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2660550458715596
  - -0.2818181818181818
  - -0.31432748538011696
  - -0.3257575757575757
  - -0.30654761904761907
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.314300378520562
  - -0.31600378787878786
  - -0.3672164566345441
  - -0.37413078149920254
  - -0.34784354918437965
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.18845565749235474
  - -0.20747474747474745
  - -0.22448830409356724
  - -0.21462121212121213
  - -0.20873015873015874
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7339449541284404
  - 0.7181818181818181
  - 0.685672514619883
  - 0.6742424242424243
  - 0.6934523809523809
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7339449541284404
  - 0.7181818181818181
  - 0.685672514619883
  - 0.6742424242424242
  - 0.6934523809523809
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7339449541284405
  - 0.7181818181818181
  - 0.6856725146198831
  - 0.6742424242424243
  - 0.6934523809523808
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.685699621479438
  - 0.6839962121212121
  - 0.632783543365456
  - 0.6258692185007975
  - 0.6521564508156203
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7339449541284404
  - 0.7181818181818181
  - 0.685672514619883
  - 0.6742424242424243
  - 0.6934523809523809
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7339449541284404
  - 0.7181818181818181
  - 0.685672514619883
  - 0.6742424242424242
  - 0.6934523809523809
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7339449541284405
  - 0.7181818181818181
  - 0.6856725146198831
  - 0.6742424242424243
  - 0.6934523809523808
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.685699621479438
  - 0.6839962121212121
  - 0.632783543365456
  - 0.6258692185007975
  - 0.6521564508156203
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6004274174873795
  - 0.6121892347003819
  - 0.5965907425374039
  - 0.5650578695665723
  - 0.5643114043437979
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8044998479781088
  - 0.795204226403823
  - 0.7794718309859154
  - 0.7582222222222221
  - 0.7608210539629767
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7925252525252525
  - 0.7755116959064328
  - .nan
  - 0.7912698412698413
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6274851808399792
  - 0.631588527304356
  - 0.6206237129136852
  - 0.5582722055081376
  - 0.5913882580189945
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9977962098579999
  - 0.9977878937163748
  - 0.9981015567511445
  - 0.9980864941320605
  - 0.9975979341557023
  train_average_precision_macro_oob:
  - 0.8852951971060575
  - 0.8414754626203481
  - 0.8577946656632794
  - 0.87655496685717
  - 0.8507769765094256
  train_average_precision_micro:
  - 0.994548632030448
  - 0.9940329519399121
  - 0.9941620835053459
  - 0.994374102112812
  - 0.9947243880393123
  train_average_precision_micro_oob:
  - 0.9740746348089773
  - 0.9755905728942872
  - 0.9774570393932709
  - 0.976646897487046
  - 0.9790453963432677
  train_average_precision_samples:
  - 0.9864567762830095
  - 0.9823439450686641
  - 0.9859252960443435
  - 0.9909737827715356
  - 0.9841234010534237
  train_average_precision_samples_oob:
  - 0.9603574987543597
  - 0.954912609238452
  - 0.9582829428067523
  - 0.9661985018726592
  - 0.9597128166541259
  train_average_precision_weighted:
  - 0.9978226676244973
  - 0.997826253368129
  - 0.9981334355067649
  - 0.9981629947558872
  - 0.9977312655240992
  train_average_precision_weighted_oob:
  - 0.9746535800626616
  - 0.9753640390135131
  - 0.9774411958277013
  - 0.9784090151185592
  - 0.9774597905920782
  train_f1_macro:
  - 0.9674887892376681
  - 0.9692883895131086
  - 0.9663643235071807
  - 0.9685393258426966
  - 0.9691497366440934
  train_f1_macro_oob:
  - 0.945067264573991
  - 0.9419475655430712
  - 0.945578231292517
  - 0.9430711610486892
  - 0.9435665914221221
  train_f1_micro:
  - 0.9674887892376681
  - 0.9692883895131086
  - 0.9663643235071806
  - 0.9685393258426966
  - 0.9691497366440933
  train_f1_micro_oob:
  - 0.945067264573991
  - 0.9419475655430711
  - 0.9455782312925171
  - 0.9430711610486892
  - 0.9435665914221218
  train_f1_samples:
  - 0.9674887892376681
  - 0.9692883895131087
  - 0.9663643235071807
  - 0.9685393258426966
  - 0.9691497366440934
  train_f1_samples_oob:
  - 0.945067264573991
  - 0.9419475655430712
  - 0.9455782312925171
  - 0.9430711610486892
  - 0.9435665914221218
  train_f1_weighted:
  - 0.9663266264409645
  - 0.9674078730258504
  - 0.9652140763390141
  - 0.965988460370483
  - 0.9684091407309977
  train_f1_weighted_oob:
  - 0.9390823218212695
  - 0.9337982242476623
  - 0.939385858873166
  - 0.9362166080542305
  - 0.9372349900957639
  train_jaccard_macro:
  - 0.9373459003803263
  - 0.940684642575841
  - 0.9352051125025905
  - 0.9392246521026396
  - 0.9402717157199404
  train_jaccard_macro_oob:
  - 0.8965347511607155
  - 0.890795647832222
  - 0.8974209755106893
  - 0.8930390261588398
  - 0.8939051087565092
  train_jaccard_micro:
  - 0.9370249728555917
  - 0.940406976744186
  - 0.9349177330895795
  - 0.9389978213507625
  - 0.9401459854014599
  train_jaccard_micro_oob:
  - 0.895855472901169
  - 0.8902654867256637
  - 0.896774193548387
  - 0.8922749822820695
  - 0.8931623931623932
  train_jaccard_samples:
  - 0.9452274183215887
  - 0.9483146067415731
  - 0.9438505560954541
  - 0.9471910112359551
  - 0.9480812641083521
  train_jaccard_samples_oob:
  - 0.9102605167627589
  - 0.9063135366506151
  - 0.9111866969009825
  - 0.9074371321562332
  - 0.9081156616145328
  train_jaccard_weighted:
  - 0.9352018007915268
  - 0.9372362858169224
  - 0.9331194669656578
  - 0.9344639933717871
  - 0.9388855875466493
  train_jaccard_weighted_oob:
  - 0.8855911895045259
  - 0.8759669872793916
  - 0.8861931550793292
  - 0.8806488766807563
  - 0.882302591459783
  train_label_ranking_average_precision_score:
  - 0.990941081215745
  - 0.9890855181023718
  - 0.9927280171327793
  - 0.9932209737827717
  - 0.990895410082769
  train_label_ranking_average_precision_score_oob:
  - 0.9648418036870946
  - 0.9616541822721594
  - 0.9650856638951875
  - 0.9684456928838948
  - 0.9664848256834712
  train_matthews_corrcoef_macro:
  - 0.7737724100664507
  - 0.7754259216174626
  - 0.7705174704005594
  - 0.774172691427491
  - 0.7744224237351327
  train_matthews_corrcoef_macro_oob:
  - 0.7213904567438042
  - 0.7116860087089377
  - 0.7243906984842399
  - 0.7165974501937642
  - 0.7176078589081825
  train_matthews_corrcoef_micro:
  - 0.9336746623646949
  - 0.937472721051899
  - 0.931572363746417
  - 0.9358782693943892
  - 0.9370667775438961
  train_matthews_corrcoef_micro_oob:
  - 0.8881955504396782
  - 0.8818537851500322
  - 0.889357028654577
  - 0.884063885619459
  - 0.8849318587274463
  train_matthews_corrcoef_samples:
  - 0.9283868288773245
  - 0.9308777535710464
  - 0.9295343166467493
  - 0.9364516030698123
  - 0.9323252495818666
  train_matthews_corrcoef_samples_oob:
  - 0.8838205920066913
  - 0.8759375892550896
  - 0.8904039068878197
  - 0.8835437122538422
  - 0.8801863723396421
  train_matthews_corrcoef_weighted:
  - 0.914000220427486
  - 0.919166730783808
  - 0.9102268624946376
  - 0.9103125126775825
  - 0.9201227075751429
  train_matthews_corrcoef_weighted_oob:
  - 0.8481444536405479
  - 0.838107045944029
  - 0.8513509938549484
  - 0.8415786964449213
  - 0.8493310998550022
  train_ndgc:
  - 0.989636448764114
  - 0.9867742435386402
  - 0.9893800675535902
  - 0.9938042560838747
  - 0.987902635005036
  train_ndgc_oob:
  - 0.973737693756283
  - 0.9691860054420779
  - 0.9731780090886173
  - 0.9789021642902794
  - 0.9730752832714598
  train_neg_coverage_error:
  - -2.6210762331838566
  - -2.651685393258427
  - -2.671201814058957
  - -2.6314606741573034
  - -2.650112866817156
  train_neg_coverage_error_oob:
  - -2.7757847533632285
  - -2.7932584269662923
  - -2.8321995464852607
  - -2.784269662921348
  - -2.801354401805869
  train_neg_hamming_loss_macro:
  - -0.032511210762331835
  - -0.030711610486891385
  - -0.03363567649281935
  - -0.031460674157303366
  - -0.030850263355906696
  train_neg_hamming_loss_macro_oob:
  - -0.05493273542600896
  - -0.05805243445692884
  - -0.05442176870748299
  - -0.056928838951310866
  - -0.0564334085778781
  train_neg_hamming_loss_micro:
  - -0.032511210762331835
  - -0.030711610486891385
  - -0.03363567649281935
  - -0.03146067415730337
  - -0.030850263355906696
  train_neg_hamming_loss_micro_oob:
  - -0.05493273542600897
  - -0.05805243445692884
  - -0.05442176870748299
  - -0.05692883895131086
  - -0.056433408577878104
  train_neg_hamming_loss_samples:
  - -0.032511210762331835
  - -0.03071161048689139
  - -0.033635676492819344
  - -0.031460674157303366
  - -0.030850263355906692
  train_neg_hamming_loss_samples_oob:
  - -0.05493273542600897
  - -0.058052434456928835
  - -0.05442176870748299
  - -0.05692883895131086
  - -0.056433408577878104
  train_neg_hamming_loss_weighted:
  - -0.033673373559035526
  - -0.03259212697414945
  - -0.034785923660985874
  - -0.034011539629517154
  - -0.03159085926900221
  train_neg_hamming_loss_weighted_oob:
  - -0.06091767817873046
  - -0.06620177575233756
  - -0.060614141126834005
  - -0.06378339194576962
  - -0.062765009904236
  train_neg_label_ranking_loss:
  - -0.00863851519681116
  - -0.01198501872659176
  - -0.009448223733938018
  - -0.007440699126092384
  - -0.010126661650363682
  train_neg_label_ranking_loss_oob:
  - -0.03371948181365222
  - -0.03576154806491885
  - -0.03512219702695893
  - -0.0315792759051186
  - -0.03403561575119137
  train_precision_macro:
  - 0.9674887892376681
  - 0.9692883895131086
  - 0.9663643235071807
  - 0.9685393258426966
  - 0.9691497366440934
  train_precision_macro_oob:
  - 0.945067264573991
  - 0.9419475655430712
  - 0.945578231292517
  - 0.9430711610486892
  - 0.9435665914221221
  train_precision_micro:
  - 0.9674887892376681
  - 0.9692883895131086
  - 0.9663643235071806
  - 0.9685393258426966
  - 0.9691497366440933
  train_precision_micro_oob:
  - 0.945067264573991
  - 0.9419475655430711
  - 0.9455782312925171
  - 0.9430711610486892
  - 0.9435665914221218
  train_precision_samples:
  - 0.9674887892376681
  - 0.9692883895131087
  - 0.9663643235071807
  - 0.9685393258426966
  - 0.9691497366440934
  train_precision_samples_oob:
  - 0.945067264573991
  - 0.9419475655430712
  - 0.9455782312925171
  - 0.9430711610486892
  - 0.9435665914221218
  train_precision_weighted:
  - 0.9663266264409645
  - 0.9674078730258504
  - 0.9652140763390141
  - 0.965988460370483
  - 0.9684091407309977
  train_precision_weighted_oob:
  - 0.9390823218212695
  - 0.9337982242476623
  - 0.939385858873166
  - 0.9362166080542305
  - 0.9372349900957639
  train_recall_macro:
  - 0.9674887892376681
  - 0.9692883895131086
  - 0.9663643235071807
  - 0.9685393258426966
  - 0.9691497366440934
  train_recall_macro_oob:
  - 0.945067264573991
  - 0.9419475655430712
  - 0.945578231292517
  - 0.9430711610486892
  - 0.9435665914221221
  train_recall_micro:
  - 0.9674887892376681
  - 0.9692883895131086
  - 0.9663643235071806
  - 0.9685393258426966
  - 0.9691497366440933
  train_recall_micro_oob:
  - 0.945067264573991
  - 0.9419475655430711
  - 0.9455782312925171
  - 0.9430711610486892
  - 0.9435665914221218
  train_recall_samples:
  - 0.9674887892376681
  - 0.9692883895131087
  - 0.9663643235071807
  - 0.9685393258426966
  - 0.9691497366440934
  train_recall_samples_oob:
  - 0.945067264573991
  - 0.9419475655430712
  - 0.9455782312925171
  - 0.9430711610486892
  - 0.9435665914221218
  train_recall_weighted:
  - 0.9663266264409645
  - 0.9674078730258504
  - 0.9652140763390141
  - 0.965988460370483
  - 0.9684091407309977
  train_recall_weighted_oob:
  - 0.9390823218212695
  - 0.9337982242476623
  - 0.939385858873166
  - 0.9362166080542305
  - 0.9372349900957639
  train_roc_auc_macro:
  - 0.9981064256165829
  - 0.9980743246485234
  - 0.9983232588918539
  - 0.9984253310370038
  - 0.9981240083602397
  train_roc_auc_macro_oob:
  - 0.9731187911056259
  - 0.9657862489151147
  - 0.9744874773483782
  - 0.9650373049446164
  - 0.973454555225768
  train_roc_auc_micro:
  - 0.9953783549487276
  - 0.994583111842286
  - 0.9948589989905239
  - 0.9949787650103241
  - 0.9953858902950663
  train_roc_auc_micro_oob:
  - 0.980266114590106
  - 0.9800440385302771
  - 0.9797732633057781
  - 0.9798807131109675
  - 0.9808782978035336
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.997866934049167
  - 0.9978311402955211
  - 0.998050237513157
  - 0.9982361621615228
  - 0.9979906335056878
  train_roc_auc_weighted_oob:
  - 0.9796807838064995
  - 0.9812285151296309
  - 0.9848501827953937
  - 0.9826517014844903
  - 0.9844501278905523
start: 2023-12-21 22:08:45.972871
wrapper: null
