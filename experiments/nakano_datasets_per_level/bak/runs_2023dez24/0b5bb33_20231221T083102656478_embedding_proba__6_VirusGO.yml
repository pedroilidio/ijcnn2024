active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AMzMzMzPjv0AzMzMzMwNAgGZmZmZm9j+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:31:34.287114
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__6
  params: {}
hash: 0b5bb33285dde8f273f9546929c75bbf43ad91f9fe91643bee8e1dedaa863e80
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0b5bb33_20231221T083102656478_embedding_proba__6_VirusGO.yml
results:
  fit_time:
  - 20.145128965377808
  - 20.26563835144043
  - 19.949147701263428
  - 19.772613286972046
  - 20.338119745254517
  score_time:
  - 4.025110244750977
  - 4.045977354049683
  - 3.7520573139190674
  - 3.7815959453582764
  - 4.02992057800293
  test_average_precision_macro:
  - 0.8212113917062925
  - 0.9792418597998184
  - 0.9506192548775645
  - 0.9199848508913595
  - 0.9149051420754413
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8650243921548264
  - 0.9492990980701606
  - 0.946457427328011
  - 0.8271093671862012
  - 0.8794902160071548
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9186046511627907
  - 0.965079365079365
  - 0.9760683760683759
  - 0.9029166666666667
  - 0.9631782945736433
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8555350307569616
  - 0.9706533939916292
  - 0.961327846610582
  - 0.8848040372990291
  - 0.90570730962774
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8333333333333334
  - 0.8134920634920636
  - 0.782051282051282
  - 0.8041666666666667
  - 0.8023255813953488
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8333333333333334
  - 0.8134920634920635
  - 0.782051282051282
  - 0.8041666666666667
  - 0.8023255813953488
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8333333333333334
  - 0.8134920634920636
  - 0.7820512820512819
  - 0.8041666666666668
  - 0.802325581395349
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7413383958234456
  - 0.71
  - 0.6656611362493715
  - 0.6931372549019607
  - 0.6976744186046511
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7311276371826684
  - 0.7069846786695829
  - 0.6687668409768116
  - 0.6960076960076959
  - 0.6928920409771474
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7142857142857143
  - 0.68561872909699
  - 0.6421052631578947
  - 0.6724738675958188
  - 0.6699029126213593
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.722591362126246
  - 0.6921768707482995
  - 0.6495726495726497
  - 0.6815476190476192
  - 0.6771871539313401
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6004428813432434
  - 0.5647101051677343
  - 0.5197756708122754
  - 0.5494440200322553
  - 0.553604969174431
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9186046511627907
  - 0.965079365079365
  - 0.9760683760683759
  - 0.9029166666666667
  - 0.9631782945736433
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.11289418957242965
  - 0.07675859617382713
  - 0.0
  - 0.12506489823584774
  - 0.00787903805688926
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.318676807561135
  - 0.22062343210815286
  - 0.0
  - 0.24399151362393673
  - 0.06709951129499588
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.13098733795427153
  - 0.06267751266746847
  - 0.0
  - 0.10324555320336759
  - 0.018604651162790697
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.23500423135485357
  - 0.15658753619460733
  - 0.0
  - 0.17150155583421792
  - 0.01575807611377852
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9417814020143651
  - 0.9757446347406241
  - 0.9858504683299452
  - 0.9291707710146568
  - 0.9743022761893965
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4883720930232558
  - -1.3333333333333333
  - -1.4871794871794872
  - -1.6
  - -1.302325581395349
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.16666666666666666
  - -0.1865079365079365
  - -0.21794871794871798
  - -0.1958333333333334
  - -0.19767441860465115
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.16666666666666666
  - -0.1865079365079365
  - -0.21794871794871795
  - -0.19583333333333333
  - -0.19767441860465115
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.16666666666666669
  - -0.1865079365079365
  - -0.217948717948718
  - -0.1958333333333333
  - -0.19767441860465113
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2586616041765543
  - -0.29
  - -0.33433886375062843
  - -0.30686274509803924
  - -0.3023255813953488
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06395348837209303
  - -0.023214285714285715
  - -0.02492877492877493
  - -0.060902777777777785
  - -0.022093023255813953
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8333333333333334
  - 0.8134920634920636
  - 0.782051282051282
  - 0.8041666666666667
  - 0.8023255813953488
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8333333333333334
  - 0.8134920634920635
  - 0.782051282051282
  - 0.8041666666666667
  - 0.8023255813953488
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8333333333333334
  - 0.8134920634920636
  - 0.7820512820512819
  - 0.8041666666666668
  - 0.802325581395349
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7413383958234456
  - 0.71
  - 0.6656611362493715
  - 0.6931372549019607
  - 0.6976744186046511
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8333333333333334
  - 0.8134920634920636
  - 0.782051282051282
  - 0.8041666666666667
  - 0.8023255813953488
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8333333333333334
  - 0.8134920634920635
  - 0.782051282051282
  - 0.8041666666666667
  - 0.8023255813953488
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8333333333333334
  - 0.8134920634920636
  - 0.7820512820512819
  - 0.8041666666666668
  - 0.802325581395349
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7413383958234456
  - 0.71
  - 0.6656611362493715
  - 0.6931372549019607
  - 0.6976744186046511
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9386269753916814
  - 0.9934133126934984
  - 0.9819868587531632
  - 0.9674776860678396
  - 0.9641420670832437
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9503954691924617
  - 0.9875247524752476
  - 0.9792671166827387
  - 0.9678389874468306
  - 0.9730984181112059
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.936046511627907
  - 0.9767857142857144
  - 0.9750712250712251
  - 0.9390972222222222
  - 0.977906976744186
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9330547187690045
  - 0.9882736842105263
  - 0.9812812081354281
  - 0.9473318765104533
  - 0.9518602312719958
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9609208202334547
  - 0.9443768769784916
  - 0.9584995561162852
  - 0.9504363631693805
  - 0.9570771683548075
  train_average_precision_macro_oob:
  - 0.942399385965186
  - 0.8876109940576811
  - 0.9008074692562463
  - 0.9032447906676985
  - 0.9248635356512908
  train_average_precision_micro:
  - 0.9595627215405778
  - 0.9387638523896245
  - 0.9439068089383998
  - 0.9444829461110915
  - 0.9403222586958311
  train_average_precision_micro_oob:
  - 0.9307030269295266
  - 0.8879278626571117
  - 0.8824116417116197
  - 0.8970457190983261
  - 0.8872594221147359
  train_average_precision_samples:
  - 0.980691056910569
  - 0.9602020202020203
  - 0.9659722222222222
  - 0.9564870259481038
  - 0.9661585365853658
  train_average_precision_samples_oob:
  - 0.9692073170731706
  - 0.9368686868686867
  - 0.9454365079365078
  - 0.933166999334664
  - 0.9454268292682928
  train_average_precision_weighted:
  - 0.9649406490824878
  - 0.9481168822871413
  - 0.9529958253041317
  - 0.9543742624127107
  - 0.9528082145081308
  train_average_precision_weighted_oob:
  - 0.9421750032456775
  - 0.9002783932832379
  - 0.8931840729424643
  - 0.9127080155560452
  - 0.9131259457522836
  train_f1_macro:
  - 0.8221544715447154
  - 0.8252525252525253
  - 0.8125
  - 0.8373253493013971
  - 0.8180894308943089
  train_f1_macro_oob:
  - 0.8069105691056909
  - 0.8060606060606061
  - 0.8095238095238096
  - 0.8153692614770459
  - 0.8048780487804877
  train_f1_micro:
  - 0.8221544715447154
  - 0.8252525252525252
  - 0.8125
  - 0.8373253493013972
  - 0.818089430894309
  train_f1_micro_oob:
  - 0.806910569105691
  - 0.806060606060606
  - 0.8095238095238095
  - 0.8153692614770459
  - 0.8048780487804879
  train_f1_samples:
  - 0.8221544715447153
  - 0.8252525252525253
  - 0.8125
  - 0.8373253493013971
  - 0.8180894308943089
  train_f1_samples_oob:
  - 0.8069105691056909
  - 0.8060606060606059
  - 0.8095238095238095
  - 0.8153692614770457
  - 0.8048780487804879
  train_f1_weighted:
  - 0.7368436861708519
  - 0.7408340834083408
  - 0.7100509357972045
  - 0.7622963029165549
  - 0.7234862273995875
  train_f1_weighted_oob:
  - 0.706025471584765
  - 0.7014701470147016
  - 0.7039800995024875
  - 0.719099115202431
  - 0.6967904380536343
  train_jaccard_macro:
  - 0.7137134024270798
  - 0.7177539416551969
  - 0.7052800094080106
  - 0.7328462457027793
  - 0.7105033615965864
  train_jaccard_macro_oob:
  - 0.6970937141348038
  - 0.6970475801051824
  - 0.7020966971290559
  - 0.7077006400251943
  - 0.6962367216348677
  train_jaccard_micro:
  - 0.6980155306298533
  - 0.702493551160791
  - 0.6842105263157895
  - 0.7201716738197425
  - 0.6921754084264833
  train_jaccard_micro_oob:
  - 0.676320272572402
  - 0.6751269035532995
  - 0.68
  - 0.6882898062342039
  - 0.673469387755102
  train_jaccard_samples:
  - 0.7090592334494774
  - 0.7160173160173161
  - 0.6931689342403629
  - 0.7315369261477047
  - 0.7031068524970965
  train_jaccard_samples_oob:
  - 0.6851045296167247
  - 0.6844155844155845
  - 0.6876417233560091
  - 0.6964642144282863
  - 0.6804587688734031
  train_jaccard_weighted:
  - 0.5947784709707454
  - 0.5995854371871975
  - 0.5661919483680521
  - 0.6246549703275874
  - 0.5802816018933639
  train_jaccard_weighted_oob:
  - 0.5611871399160276
  - 0.5571347921155183
  - 0.5597001581675702
  - 0.5755844430365916
  - 0.5514645455050314
  train_label_ranking_average_precision_score:
  - 0.9806910569105691
  - 0.9602020202020203
  - 0.9659722222222222
  - 0.9564870259481039
  - 0.9661585365853658
  train_label_ranking_average_precision_score_oob:
  - 0.9692073170731709
  - 0.936868686868687
  - 0.9454365079365078
  - 0.9331669993346641
  - 0.9454268292682928
  train_matthews_corrcoef_macro:
  - 0.12026952681361347
  - 0.12277522380128769
  - 0.07276009488197856
  - 0.16923645237473303
  - 0.10500218073937574
  train_matthews_corrcoef_macro_oob:
  - 0.07986054450932971
  - 0.06408561506748327
  - 0.060642247513915344
  - 0.08284714560100545
  - 0.06232497063513559
  train_matthews_corrcoef_micro:
  - 0.3356816239348315
  - 0.34310316883619607
  - 0.21993770676498403
  - 0.39433189912584854
  - 0.2984741036996809
  train_matthews_corrcoef_micro_oob:
  - 0.22695489764830631
  - 0.19587518526764747
  - 0.19018543282035566
  - 0.25123200312316807
  - 0.18588140327633013
  train_matthews_corrcoef_samples:
  - 0.1505615840750188
  - 0.16907494906727896
  - 0.07142857142857142
  - 0.20592494840960546
  - 0.1251818422447238
  train_matthews_corrcoef_samples_oob:
  - 0.070303793464236
  - 0.06322700322444652
  - 0.051383663881152834
  - 0.08739361192935362
  - 0.04855047353761207
  train_matthews_corrcoef_weighted:
  - 0.2434010996200037
  - 0.24980605229968894
  - 0.1483462536783407
  - 0.30768938376546734
  - 0.213921083938711
  train_matthews_corrcoef_weighted_oob:
  - 0.1617635729497974
  - 0.12945319720659318
  - 0.12355585770391857
  - 0.16899626290564898
  - 0.1273917701920212
  train_ndgc:
  - 0.9865932163818055
  - 0.9719717787970904
  - 0.9754293461378764
  - 0.9685573091001735
  - 0.9761914111682497
  train_ndgc_oob:
  - 0.9787983306644086
  - 0.9566962868200876
  - 0.9620437710165468
  - 0.9525163201652347
  - 0.9615990577325461
  train_neg_coverage_error:
  - -1.3109756097560976
  - -1.3818181818181818
  - -1.2916666666666667
  - -1.341317365269461
  - -1.329268292682927
  train_neg_coverage_error_oob:
  - -1.3475609756097562
  - -1.496969696969697
  - -1.3869047619047619
  - -1.407185628742515
  - -1.420731707317073
  train_neg_hamming_loss_macro:
  - -0.1778455284552846
  - -0.17474747474747473
  - -0.1875
  - -0.16267465069860282
  - -0.18191056910569106
  train_neg_hamming_loss_macro_oob:
  - -0.19308943089430897
  - -0.19393939393939394
  - -0.19047619047619047
  - -0.18463073852295409
  - -0.19512195121951223
  train_neg_hamming_loss_micro:
  - -0.17784552845528456
  - -0.17474747474747473
  - -0.1875
  - -0.1626746506986028
  - -0.18191056910569106
  train_neg_hamming_loss_micro_oob:
  - -0.19308943089430894
  - -0.19393939393939394
  - -0.19047619047619047
  - -0.18463073852295409
  - -0.1951219512195122
  train_neg_hamming_loss_samples:
  - -0.17784552845528454
  - -0.17474747474747473
  - -0.1875
  - -0.1626746506986028
  - -0.18191056910569106
  train_neg_hamming_loss_samples_oob:
  - -0.19308943089430894
  - -0.19393939393939394
  - -0.19047619047619047
  - -0.18463073852295409
  - -0.1951219512195122
  train_neg_hamming_loss_weighted:
  - -0.26315631382914817
  - -0.25916591659165916
  - -0.28994906420279554
  - -0.23770369708344505
  - -0.27651377260041254
  train_neg_hamming_loss_weighted_oob:
  - -0.2939745284152349
  - -0.29852985298529855
  - -0.2960199004975124
  - -0.28090088479756903
  - -0.3032095619463658
  train_neg_label_ranking_loss:
  - -0.01287262872628726
  - -0.02803030303030303
  - -0.017625661375661378
  - -0.025898203592814372
  - -0.018750000000000003
  train_neg_label_ranking_loss_oob:
  - -0.018648373983739835
  - -0.04543771043771044
  - -0.03229166666666666
  - -0.037408516300731866
  - -0.03434959349593496
  train_precision_macro:
  - 0.8221544715447154
  - 0.8252525252525253
  - 0.8125
  - 0.8373253493013971
  - 0.8180894308943089
  train_precision_macro_oob:
  - 0.8069105691056909
  - 0.8060606060606061
  - 0.8095238095238096
  - 0.8153692614770459
  - 0.8048780487804877
  train_precision_micro:
  - 0.8221544715447154
  - 0.8252525252525252
  - 0.8125
  - 0.8373253493013972
  - 0.818089430894309
  train_precision_micro_oob:
  - 0.806910569105691
  - 0.806060606060606
  - 0.8095238095238095
  - 0.8153692614770459
  - 0.8048780487804879
  train_precision_samples:
  - 0.8221544715447153
  - 0.8252525252525253
  - 0.8125
  - 0.8373253493013971
  - 0.8180894308943089
  train_precision_samples_oob:
  - 0.8069105691056909
  - 0.8060606060606059
  - 0.8095238095238095
  - 0.8153692614770457
  - 0.8048780487804879
  train_precision_weighted:
  - 0.7368436861708519
  - 0.7408340834083408
  - 0.7100509357972045
  - 0.7622963029165549
  - 0.7234862273995875
  train_precision_weighted_oob:
  - 0.706025471584765
  - 0.7014701470147016
  - 0.7039800995024875
  - 0.719099115202431
  - 0.6967904380536343
  train_recall_macro:
  - 0.8221544715447154
  - 0.8252525252525253
  - 0.8125
  - 0.8373253493013971
  - 0.8180894308943089
  train_recall_macro_oob:
  - 0.8069105691056909
  - 0.8060606060606061
  - 0.8095238095238096
  - 0.8153692614770459
  - 0.8048780487804877
  train_recall_micro:
  - 0.8221544715447154
  - 0.8252525252525252
  - 0.8125
  - 0.8373253493013972
  - 0.818089430894309
  train_recall_micro_oob:
  - 0.806910569105691
  - 0.806060606060606
  - 0.8095238095238095
  - 0.8153692614770459
  - 0.8048780487804879
  train_recall_samples:
  - 0.8221544715447153
  - 0.8252525252525253
  - 0.8125
  - 0.8373253493013971
  - 0.8180894308943089
  train_recall_samples_oob:
  - 0.8069105691056909
  - 0.8060606060606059
  - 0.8095238095238095
  - 0.8153692614770457
  - 0.8048780487804879
  train_recall_weighted:
  - 0.7368436861708519
  - 0.7408340834083408
  - 0.7100509357972045
  - 0.7622963029165549
  - 0.7234862273995875
  train_recall_weighted_oob:
  - 0.706025471584765
  - 0.7014701470147016
  - 0.7039800995024875
  - 0.719099115202431
  - 0.6967904380536343
  train_roc_auc_macro:
  - 0.9811127041603621
  - 0.9795844449162704
  - 0.9832672977760066
  - 0.9820125245226281
  - 0.980186350356501
  train_roc_auc_macro_oob:
  - 0.9762338990041325
  - 0.9626258365223221
  - 0.9684675137396246
  - 0.9720327513770634
  - 0.9667254385001595
  train_roc_auc_micro:
  - 0.986104716070719
  - 0.980606372820023
  - 0.9857435252486022
  - 0.9824566307041571
  - 0.9826061264558434
  train_roc_auc_micro_oob:
  - 0.9802577218798686
  - 0.9675202291802785
  - 0.97101851338105
  - 0.970975335556922
  - 0.970555905021508
  train_roc_auc_samples:
  - 0.9871273712737128
  - 0.9719696969696969
  - 0.9823743386243386
  - 0.9741017964071857
  - 0.9812500000000001
  train_roc_auc_samples_oob:
  - 0.9813516260162601
  - 0.9545622895622895
  - 0.9677083333333333
  - 0.9625914836992683
  - 0.9656504065040651
  train_roc_auc_weighted:
  - 0.9812055170111376
  - 0.9763023190255515
  - 0.977714350725426
  - 0.9773388497437128
  - 0.9727049070896213
  train_roc_auc_weighted_oob:
  - 0.9723395456371671
  - 0.9599833147318294
  - 0.9597492261793071
  - 0.9661938113191307
  - 0.9566243724455499
start: 2023-12-21 08:31:02.656478
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
