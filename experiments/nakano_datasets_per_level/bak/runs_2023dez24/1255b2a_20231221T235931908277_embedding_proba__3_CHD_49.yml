active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/NDMzMzMz8z/MzMzMzMz8vw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAFEAAAAAAAAAQwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:59:56.454469
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__3
  params: {}
hash: 1255b2ae66b4017b92fc25447f0bf0ad775fe90cac535ab24f5672bdc8a2025f
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1255b2a_20231221T235931908277_embedding_proba__3_CHD_49.yml
results:
  fit_time:
  - 10.177659511566162
  - 10.125981330871582
  - 10.727326393127441
  - 10.511677265167236
  - 10.458598375320435
  score_time:
  - 3.6858370304107666
  - 3.5118207931518555
  - 3.306258201599121
  - 3.367126941680908
  - 3.6835386753082275
  test_average_precision_macro:
  - 0.5138700051958139
  - 0.5035422112016633
  - 0.509787672947347
  - 0.5297686216852554
  - 0.5021376126846171
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6413560585956208
  - 0.6474659649876391
  - 0.6476348381141976
  - 0.7109844121752527
  - 0.6375126206201908
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7773148148148147
  - 0.7761511511511511
  - 0.7835689484126984
  - 0.7830188679245284
  - 0.7639009661835747
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6251649611571238
  - 0.6219794255098233
  - 0.6268422827108479
  - 0.6791131260690275
  - 0.6120245932384856
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6006006006006007
  - 0.6051051051051052
  - 0.619047619047619
  - 0.6132075471698113
  - 0.6304347826086957
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6006006006006006
  - 0.6051051051051051
  - 0.6190476190476191
  - 0.6132075471698113
  - 0.6304347826086957
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6006006006006005
  - 0.6051051051051052
  - 0.6190476190476192
  - 0.6132075471698113
  - 0.6304347826086957
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.49180999180999174
  - 0.49940149940149947
  - 0.5183841765873016
  - 0.5128434293280371
  - 0.5463111649750039
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.46505469700739505
  - 0.46732468738659
  - 0.47983726592997306
  - 0.47323231352906125
  - 0.4857314061647764
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4291845493562232
  - 0.43379978471474706
  - 0.4482758620689655
  - 0.4421768707482993
  - 0.4603174603174603
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4599781599781601
  - 0.45525915525915533
  - 0.47334183673469393
  - 0.46181491464510344
  - 0.48161490683229813
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.33770213451708114
  - 0.3434006999960836
  - 0.3593468335803768
  - 0.35162671296530457
  - 0.3833068960520082
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7953328328328325
  - 0.7761511511511512
  - 0.7835689484126986
  - 0.7924528301886795
  - 0.7639009661835751
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0521248421635668
  - 0.05916668130206102
  - 0.0949968819925483
  - 0.1030489843946577
  - 0.07074988431267419
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1488046132641663
  - 0.16620571232606607
  - 0.21226806070705387
  - 0.2485803174260169
  - 0.21423214896607695
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.13017556855281545
  - 0.13183303769420288
  - 0.1631575776565355
  - 0.15800427308760295
  - 0.1543404386867841
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.038772977990291134
  - 0.05434044244731538
  - 0.09545685534537163
  - 0.14072012339317574
  - 0.08473591169617983
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8482225687016756
  - 0.8494445770080923
  - 0.8594345840393777
  - 0.8577545986057841
  - 0.8453624712306647
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.684684684684685
  - -3.7117117117117115
  - -3.7767857142857144
  - -3.858490566037736
  - -3.7217391304347824
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3993993993993994
  - -0.39489489489489493
  - -0.38095238095238093
  - -0.3867924528301887
  - -0.3695652173913044
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3993993993993994
  - -0.3948948948948949
  - -0.38095238095238093
  - -0.3867924528301887
  - -0.3695652173913043
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.39939939939939934
  - -0.39489489489489493
  - -0.380952380952381
  - -0.3867924528301887
  - -0.3695652173913043
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5081900081900081
  - -0.5005985005985006
  - -0.4816158234126985
  - -0.48715657067196294
  - -0.4536888350249962
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21921921921921925
  - -0.21724224224224223
  - -0.22065972222222222
  - -0.22460691823899376
  - -0.2303381642512077
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6006006006006007
  - 0.6051051051051052
  - 0.619047619047619
  - 0.6132075471698113
  - 0.6304347826086957
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6006006006006006
  - 0.6051051051051051
  - 0.6190476190476191
  - 0.6132075471698113
  - 0.6304347826086957
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6006006006006005
  - 0.6051051051051052
  - 0.6190476190476192
  - 0.6132075471698113
  - 0.6304347826086957
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.49180999180999174
  - 0.49940149940149947
  - 0.5183841765873016
  - 0.5128434293280371
  - 0.5463111649750039
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6006006006006007
  - 0.6051051051051052
  - 0.619047619047619
  - 0.6132075471698113
  - 0.6304347826086957
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6006006006006006
  - 0.6051051051051051
  - 0.6190476190476191
  - 0.6132075471698113
  - 0.6304347826086957
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6006006006006005
  - 0.6051051051051052
  - 0.6190476190476192
  - 0.6132075471698113
  - 0.6304347826086957
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.49180999180999174
  - 0.49940149940149947
  - 0.5183841765873016
  - 0.5128434293280371
  - 0.5463111649750039
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5647453944947566
  - 0.5419272393948895
  - 0.566974245498222
  - 0.6029347109046198
  - 0.5705992166014583
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7556772175193228
  - 0.7523003312476997
  - 0.7591597945601851
  - 0.7641125606037886
  - 0.7534778360899526
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7827577577577577
  - 0.7793402777777779
  - .nan
  - 0.7696618357487922
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5640333185087373
  - 0.5530674345408373
  - 0.5626278190824949
  - 0.6071936305723121
  - 0.5825375679919347
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8235197240990141
  - 0.8373246494744421
  - 0.8255844354874013
  - 0.8267548088085249
  - 0.8239404583317759
  train_average_precision_macro_oob:
  - 0.7236260199314309
  - 0.7326638704540964
  - 0.7261867377357686
  - 0.72913039247508
  - 0.7232748010488179
  train_average_precision_micro:
  - 0.8910680782877105
  - 0.8947943272033714
  - 0.89329063728346
  - 0.8905080102797824
  - 0.8913879688339228
  train_average_precision_micro_oob:
  - 0.8770165848877908
  - 0.8856429091820489
  - 0.8788586538810708
  - 0.8794388774982748
  - 0.8811491950461692
  train_average_precision_samples:
  - 0.898557932932933
  - 0.9098723723723724
  - 0.8968554050664661
  - 0.8895044543429844
  - 0.8959532828282828
  train_average_precision_samples_oob:
  - 0.8929773523523524
  - 0.8970877127127126
  - 0.8831734386756959
  - 0.8824981440237565
  - 0.8867297979797979
  train_average_precision_weighted:
  - 0.8818032643658004
  - 0.8853545073367409
  - 0.8830451388297175
  - 0.879964071291488
  - 0.8798187550528275
  train_average_precision_weighted_oob:
  - 0.8637386182796966
  - 0.8708986080269197
  - 0.8655381543992849
  - 0.8651147628159893
  - 0.8643334514303045
  train_f1_macro:
  - 0.7586336336336336
  - 0.7646396396396394
  - 0.7558314522197139
  - 0.767260579064588
  - 0.7651515151515151
  train_f1_macro_oob:
  - 0.725975975975976
  - 0.7342342342342342
  - 0.7227238525206922
  - 0.732739420935412
  - 0.7268939393939394
  train_f1_micro:
  - 0.7586336336336337
  - 0.7646396396396397
  - 0.755831452219714
  - 0.767260579064588
  - 0.7651515151515151
  train_f1_micro_oob:
  - 0.725975975975976
  - 0.7342342342342343
  - 0.7227238525206923
  - 0.732739420935412
  - 0.7268939393939394
  train_f1_samples:
  - 0.7586336336336337
  - 0.7646396396396397
  - 0.755831452219714
  - 0.767260579064588
  - 0.765151515151515
  train_f1_samples_oob:
  - 0.7259759759759761
  - 0.7342342342342343
  - 0.7227238525206922
  - 0.732739420935412
  - 0.7268939393939393
  train_f1_weighted:
  - 0.6982080247787056
  - 0.7032549565272079
  - 0.6940046409572369
  - 0.7085201445428473
  - 0.7017248908296944
  train_f1_weighted_oob:
  - 0.6631212364196657
  - 0.6721951008600224
  - 0.6592408719948223
  - 0.6706737630654579
  - 0.6636006351726876
  train_jaccard_macro:
  - 0.625643731358121
  - 0.633751122272687
  - 0.622570205753105
  - 0.6363110872656911
  - 0.6352293860446702
  train_jaccard_macro_oob:
  - 0.5859313886401014
  - 0.595670519672418
  - 0.5822241073323046
  - 0.5939712082058505
  - 0.5872742363680196
  train_jaccard_micro:
  - 0.6111279104928938
  - 0.6189608021877848
  - 0.6074992440278197
  - 0.6224028906955736
  - 0.6196319018404908
  train_jaccard_micro_oob:
  - 0.5698291101944608
  - 0.5800711743772242
  - 0.5658321060382916
  - 0.5782073813708261
  - 0.5709610235049093
  train_jaccard_samples:
  - 0.6358644358644359
  - 0.6472329472329473
  - 0.6338815435880898
  - 0.6487856612578214
  - 0.6478463203463203
  train_jaccard_samples_oob:
  - 0.5935006435006436
  - 0.6075182325182326
  - 0.5923465548747716
  - 0.6060663909216248
  - 0.5972510822510823
  train_jaccard_weighted:
  - 0.5416379298078589
  - 0.5483807007356004
  - 0.5368031100699462
  - 0.55413447503526
  - 0.5467018678054236
  train_jaccard_weighted_oob:
  - 0.4999238619354528
  - 0.5102075384656066
  - 0.4954009082147682
  - 0.5088509816404353
  - 0.5000246308721602
  train_label_ranking_average_precision_score:
  - 0.900810185185185
  - 0.9166291291291283
  - 0.9036274140958104
  - 0.8939587973273933
  - 0.9027714646464634
  train_label_ranking_average_precision_score_oob:
  - 0.8952296046046043
  - 0.9038444694694686
  - 0.889945447705041
  - 0.8869524870081653
  - 0.8935479797979788
  train_matthews_corrcoef_macro:
  - 0.4206373310963996
  - 0.4355719473303954
  - 0.42011898414542204
  - 0.43665210162043167
  - 0.43737466268604425
  train_matthews_corrcoef_macro_oob:
  - 0.3495851361853659
  - 0.37359850921867704
  - 0.3505696118227144
  - 0.3675324951419603
  - 0.3547987639186005
  train_matthews_corrcoef_micro:
  - 0.5541221062369485
  - 0.566126660644123
  - 0.5503313648312608
  - 0.5674368351977037
  - 0.5687425520577626
  train_matthews_corrcoef_micro_oob:
  - 0.488637649858748
  - 0.509237322396104
  - 0.48646040638182014
  - 0.5002197358262902
  - 0.4965162058560604
  train_matthews_corrcoef_samples:
  - 0.4918173301383977
  - 0.5060339770068727
  - 0.47756959774231283
  - 0.49928715603935775
  - 0.5028853042455096
  train_matthews_corrcoef_samples_oob:
  - 0.41876607398479937
  - 0.4402295873794055
  - 0.40625515208890434
  - 0.4267593835709308
  - 0.4306130789557686
  train_matthews_corrcoef_weighted:
  - 0.48772508565347333
  - 0.501639614812606
  - 0.48605245843433004
  - 0.5045469856506595
  - 0.5013559774466824
  train_matthews_corrcoef_weighted_oob:
  - 0.41566284676607895
  - 0.4414243388994573
  - 0.4165987815069172
  - 0.43307275339725276
  - 0.42446149200195177
  train_ndgc:
  - 0.9380321284353025
  - 0.9443871488442972
  - 0.9344569899910269
  - 0.9306134685558891
  - 0.9329943920890603
  train_ndgc_oob:
  - 0.9347067465125716
  - 0.9368371172935883
  - 0.9246497289672021
  - 0.9262237477501907
  - 0.9269169082548987
  train_neg_coverage_error:
  - -3.2094594594594597
  - -3.119369369369369
  - -3.18058690744921
  - -3.1937639198218264
  - -3.227272727272727
  train_neg_coverage_error_oob:
  - -3.277027027027027
  - -3.22972972972973
  - -3.2573363431151243
  - -3.2583518930957682
  - -3.284090909090909
  train_neg_hamming_loss_macro:
  - -0.24136636636636633
  - -0.23536036036036037
  - -0.24416854778028593
  - -0.23273942093541203
  - -0.23484848484848486
  train_neg_hamming_loss_macro_oob:
  - -0.274024024024024
  - -0.26576576576576577
  - -0.27727614747930773
  - -0.267260579064588
  - -0.27310606060606063
  train_neg_hamming_loss_micro:
  - -0.24136636636636635
  - -0.23536036036036037
  - -0.24416854778028593
  - -0.23273942093541203
  - -0.23484848484848486
  train_neg_hamming_loss_micro_oob:
  - -0.27402402402402404
  - -0.26576576576576577
  - -0.27727614747930773
  - -0.267260579064588
  - -0.27310606060606063
  train_neg_hamming_loss_samples:
  - -0.24136636636636635
  - -0.23536036036036037
  - -0.2441685477802859
  - -0.23273942093541203
  - -0.23484848484848483
  train_neg_hamming_loss_samples_oob:
  - -0.274024024024024
  - -0.26576576576576577
  - -0.2772761474793078
  - -0.267260579064588
  - -0.2731060606060606
  train_neg_hamming_loss_weighted:
  - -0.3017919752212946
  - -0.2967450434727922
  - -0.3059953590427631
  - -0.29147985545715266
  - -0.29827510917030564
  train_neg_hamming_loss_weighted_oob:
  - -0.33687876358033425
  - -0.3278048991399777
  - -0.34075912800517766
  - -0.32932623693454216
  - -0.33639936482731236
  train_neg_label_ranking_loss:
  - -0.09849224224224223
  - -0.08436561561561562
  - -0.0971281665412591
  - -0.1038356842365751
  - -0.10055555555555555
  train_neg_label_ranking_loss_oob:
  - -0.10738863863863864
  - -0.10133883883883885
  - -0.11183847504389263
  - -0.11364142538975501
  - -0.11037247474747475
  train_precision_macro:
  - 0.7586336336336336
  - 0.7646396396396394
  - 0.7558314522197139
  - 0.767260579064588
  - 0.7651515151515151
  train_precision_macro_oob:
  - 0.725975975975976
  - 0.7342342342342342
  - 0.7227238525206922
  - 0.732739420935412
  - 0.7268939393939394
  train_precision_micro:
  - 0.7586336336336337
  - 0.7646396396396397
  - 0.755831452219714
  - 0.767260579064588
  - 0.7651515151515151
  train_precision_micro_oob:
  - 0.725975975975976
  - 0.7342342342342343
  - 0.7227238525206923
  - 0.732739420935412
  - 0.7268939393939394
  train_precision_samples:
  - 0.7586336336336337
  - 0.7646396396396397
  - 0.755831452219714
  - 0.767260579064588
  - 0.765151515151515
  train_precision_samples_oob:
  - 0.7259759759759761
  - 0.7342342342342343
  - 0.7227238525206922
  - 0.732739420935412
  - 0.7268939393939393
  train_precision_weighted:
  - 0.6982080247787056
  - 0.7032549565272079
  - 0.6940046409572369
  - 0.7085201445428473
  - 0.7017248908296944
  train_precision_weighted_oob:
  - 0.6631212364196657
  - 0.6721951008600224
  - 0.6592408719948223
  - 0.6706737630654579
  - 0.6636006351726876
  train_recall_macro:
  - 0.7586336336336336
  - 0.7646396396396394
  - 0.7558314522197139
  - 0.767260579064588
  - 0.7651515151515151
  train_recall_macro_oob:
  - 0.725975975975976
  - 0.7342342342342342
  - 0.7227238525206922
  - 0.732739420935412
  - 0.7268939393939394
  train_recall_micro:
  - 0.7586336336336337
  - 0.7646396396396397
  - 0.755831452219714
  - 0.767260579064588
  - 0.7651515151515151
  train_recall_micro_oob:
  - 0.725975975975976
  - 0.7342342342342343
  - 0.7227238525206923
  - 0.732739420935412
  - 0.7268939393939394
  train_recall_samples:
  - 0.7586336336336337
  - 0.7646396396396397
  - 0.755831452219714
  - 0.767260579064588
  - 0.765151515151515
  train_recall_samples_oob:
  - 0.7259759759759761
  - 0.7342342342342343
  - 0.7227238525206922
  - 0.732739420935412
  - 0.7268939393939393
  train_recall_weighted:
  - 0.6982080247787056
  - 0.7032549565272079
  - 0.6940046409572369
  - 0.7085201445428473
  - 0.7017248908296944
  train_recall_weighted_oob:
  - 0.6631212364196657
  - 0.6721951008600224
  - 0.6592408719948223
  - 0.6706737630654579
  - 0.6636006351726876
  train_roc_auc_macro:
  - 0.8207420929736844
  - 0.849964696692321
  - 0.8334576818212187
  - 0.8435818295171962
  - 0.8218872425047371
  train_roc_auc_macro_oob:
  - 0.7700106765156945
  - 0.8005892100491586
  - 0.7889747666407733
  - 0.7987953896306167
  - 0.7878773646475904
  train_roc_auc_micro:
  - 0.9000536321558403
  - 0.9034799393893407
  - 0.9033614585546554
  - 0.9018690166697757
  - 0.8993056914606183
  train_roc_auc_micro_oob:
  - 0.8891573370858596
  - 0.8934622804415657
  - 0.890910938467081
  - 0.8924870196217445
  - 0.8896946152385681
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8240279781658798
  - 0.8285820289479456
  - 0.8239547585049827
  - 0.8283397229586558
  - 0.8143479380065828
  train_roc_auc_weighted_oob:
  - 0.8082245180838427
  - 0.8154013831467419
  - 0.8063390256256842
  - 0.8146919458436613
  - 0.8006815881245041
start: 2023-12-21 23:59:31.908277
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
