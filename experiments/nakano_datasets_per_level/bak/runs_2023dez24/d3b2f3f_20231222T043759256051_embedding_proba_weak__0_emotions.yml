active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+gmZmZmZn5P6CZmZmZmfk/mJmZmZmZFcDQzMzMzMwEQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMDECQmZmZmZkVwHBmZmZmZhJAkJmZmZmZFcDgzMzMzMwEQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 04:38:07.712436
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__0
  params: {}
hash: d3b2f3ff0f6ca9861aecc8722e441cb87ec6a50cc23f714099222f9c2c8a9bfa
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d3b2f3f_20231222T043759256051_embedding_proba_weak__0_emotions.yml
results:
  fit_time:
  - 1.0448181629180908
  - 1.0577054023742676
  - 1.0635108947753906
  - 1.093137264251709
  - 1.071969747543335
  score_time:
  - 1.0751011371612549
  - 1.1119308471679688
  - 1.1021857261657715
  - 1.167403221130371
  - 1.1073572635650635
  test_average_precision_macro:
  - 0.730843162069446
  - 0.6940716986018414
  - 0.7535850655083824
  - 0.7360322471345969
  - 0.7687689447578677
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7329303396456913
  - 0.6816712188357934
  - 0.7663841902242747
  - 0.736492253514119
  - 0.7747728807659753
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8199033816425122
  - 0.7789650537634408
  - 0.8126218323586745
  - 0.8313172043010754
  - 0.8255028735632183
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7341137794966556
  - 0.6934837928272208
  - 0.7537890710968297
  - 0.7363842610518395
  - 0.7752823370937433
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6768115942028986
  - 0.7043010752688171
  - 0.6812865497076023
  - 0.6989247311827956
  - 0.6867816091954023
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6768115942028986
  - 0.7043010752688172
  - 0.6812865497076024
  - 0.6989247311827957
  - 0.6867816091954023
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6768115942028986
  - 0.7043010752688171
  - 0.6812865497076024
  - 0.6989247311827959
  - 0.6867816091954023
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6637551179567167
  - 0.6914319077506934
  - 0.6663875598086124
  - 0.6879103625463888
  - 0.6720183486238531
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5149223396527942
  - 0.5468942381210585
  - 0.5206846747024984
  - 0.5401815154625998
  - 0.5268038413020307
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.511500547645126
  - 0.5435684647302904
  - 0.516629711751663
  - 0.5371900826446281
  - 0.5229759299781181
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5225672877846792
  - 0.5581797235023039
  - 0.5271512113617377
  - 0.5468509984639017
  - 0.5336617405582923
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5009129400877668
  - 0.532490077335281
  - 0.5045833487021423
  - 0.5277267265456322
  - 0.5107547085036083
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8199033816425116
  - 0.7789650537634409
  - 0.8126218323586745
  - 0.8313172043010753
  - 0.8255028735632185
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.02396388214456037
  - 0.05089231544440235
  - 0.04920865003216949
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.056436529662581246
  - 0.07864488113483512
  - 0.07860020984159709
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.008064516129032258
  - 0.011095711088310103
  - 0.010200895677962514
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.02277110973012524
  - 0.043530740262065104
  - 0.04399433499380856
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8801034085254501
  - 0.8471075534897219
  - 0.8732564949342306
  - 0.8877995318106429
  - 0.8800914961584866
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.791304347826087
  - -2.75
  - -2.7982456140350878
  - -2.620967741935484
  - -2.6206896551724137
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3231884057971015
  - -0.2956989247311828
  - -0.31871345029239767
  - -0.3010752688172043
  - -0.31321839080459773
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.32318840579710145
  - -0.2956989247311828
  - -0.31871345029239767
  - -0.3010752688172043
  - -0.3132183908045977
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3231884057971015
  - -0.29569892473118276
  - -0.31871345029239767
  - -0.30107526881720437
  - -0.3132183908045978
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3362448820432833
  - -0.30856809224930665
  - -0.33361244019138764
  - -0.3120896374536112
  - -0.3279816513761469
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.14654589371980675
  - -0.18248207885304663
  - -0.1507309941520468
  - -0.1361559139784946
  - -0.12717911877394636
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6768115942028986
  - 0.7043010752688171
  - 0.6812865497076023
  - 0.6989247311827956
  - 0.6867816091954023
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6768115942028986
  - 0.7043010752688172
  - 0.6812865497076024
  - 0.6989247311827957
  - 0.6867816091954023
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6768115942028986
  - 0.7043010752688171
  - 0.6812865497076024
  - 0.6989247311827959
  - 0.6867816091954023
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6637551179567167
  - 0.6914319077506934
  - 0.6663875598086124
  - 0.6879103625463888
  - 0.6720183486238531
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6768115942028986
  - 0.7043010752688171
  - 0.6812865497076023
  - 0.6989247311827956
  - 0.6867816091954023
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6768115942028986
  - 0.7043010752688172
  - 0.6812865497076024
  - 0.6989247311827957
  - 0.6867816091954023
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6768115942028986
  - 0.7043010752688171
  - 0.6812865497076024
  - 0.6989247311827959
  - 0.6867816091954023
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6637551179567167
  - 0.6914319077506934
  - 0.6663875598086124
  - 0.6879103625463888
  - 0.6720183486238531
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.842825954765737
  - 0.8179259086032363
  - 0.854034706767695
  - 0.8569652234773818
  - 0.875127997454642
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8643185680951786
  - 0.8357197857816461
  - 0.8750489811912225
  - 0.8699046707896265
  - 0.8907623507734829
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8534541062801932
  - 0.8175179211469534
  - 0.8492690058479533
  - 0.8638440860215054
  - 0.8728208812260536
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8427411670970856
  - 0.8170832923318271
  - 0.8536129236737616
  - 0.8570322548180818
  - 0.8755660345425286
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8759085316156233
  - 0.8853893231620994
  - 0.8862923704884021
  - 0.8848857236775318
  - 0.8700948636098964
  train_average_precision_macro_oob:
  - 0.7149371751283145
  - 0.7149855234273436
  - 0.7068355735103434
  - 0.7133256541715913
  - 0.6741392359559116
  train_average_precision_micro:
  - 0.8768057033963766
  - 0.8820855545667683
  - 0.8842752037430478
  - 0.8821213008277694
  - 0.8709758084293038
  train_average_precision_micro_oob:
  - 0.7245124685570075
  - 0.7187131302992035
  - 0.7295567396045504
  - 0.7234407097349234
  - 0.6950655019979741
  train_average_precision_samples:
  - 0.8964202696420269
  - 0.8991234304667141
  - 0.8979239155648342
  - 0.8941838426913055
  - 0.8959993011879804
  train_average_precision_samples_oob:
  - 0.8010576476057647
  - 0.8100450130300878
  - 0.7913825098585014
  - 0.8043532338308457
  - 0.7988877242021897
  train_average_precision_weighted:
  - 0.8791256475391271
  - 0.8858355870287137
  - 0.8898700657934976
  - 0.8864867564400318
  - 0.8726811142632148
  train_average_precision_weighted_oob:
  - 0.7187245142899064
  - 0.714426974842017
  - 0.7116219310988626
  - 0.7142201719705409
  - 0.6757341197233615
  train_f1_macro:
  - 0.712691771269177
  - 0.7050461975835111
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526207
  train_f1_macro_oob:
  - 0.6949093444909344
  - 0.6847903340440654
  - 0.6924147529575505
  - 0.6879886282871358
  - 0.6907756813417191
  train_f1_micro:
  - 0.7126917712691772
  - 0.7050461975835111
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526206
  train_f1_micro_oob:
  - 0.6949093444909344
  - 0.6847903340440654
  - 0.6924147529575505
  - 0.6879886282871357
  - 0.6907756813417191
  train_f1_samples:
  - 0.7126917712691772
  - 0.705046197583511
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526206
  train_f1_samples_oob:
  - 0.6949093444909343
  - 0.6847903340440653
  - 0.6924147529575505
  - 0.6879886282871357
  - 0.6907756813417191
  train_f1_weighted:
  - 0.7020400444412925
  - 0.6950526799085583
  - 0.6997098873403674
  - 0.6897847980699032
  - 0.6940852236591054
  train_f1_weighted_oob:
  - 0.6817672505496063
  - 0.6719014045571786
  - 0.679634749572119
  - 0.6742889053275894
  - 0.6782300426353851
  train_jaccard_macro:
  - 0.5562571566596072
  - 0.5466645265181194
  - 0.5560595038908162
  - 0.545439455708844
  - 0.5479956057141177
  train_jaccard_macro_oob:
  - 0.536010623279625
  - 0.5240431508911981
  - 0.532976263540962
  - 0.5279566632198809
  - 0.5309543008685789
  train_jaccard_micro:
  - 0.5536294691224268
  - 0.544456641053787
  - 0.5526742301458671
  - 0.5419178082191781
  - 0.5449392712550607
  train_jaccard_micro_oob:
  - 0.5324605931071333
  - 0.5206700891650905
  - 0.5295369877594465
  - 0.5243770314192849
  - 0.5276220976781425
  train_jaccard_samples:
  - 0.5685893604303646
  - 0.5570616306223982
  - 0.5666070185903171
  - 0.5556909330896537
  - 0.557152840171708
  train_jaccard_samples_oob:
  - 0.5443315401474397
  - 0.5310183775002538
  - 0.5408589322994333
  - 0.5361965681795107
  - 0.5386842367974444
  train_jaccard_weighted:
  - 0.5439202601685589
  - 0.5352785460014353
  - 0.5421583825442752
  - 0.5307370184012038
  - 0.5349713962365752
  train_jaccard_weighted_oob:
  - 0.5214988988433037
  - 0.5100170084959312
  - 0.518869518852068
  - 0.5129949023224414
  - 0.5171273967958235
  train_label_ranking_average_precision_score:
  - 0.8964202696420261
  - 0.8991234304667131
  - 0.8979239155648334
  - 0.894183842691305
  - 0.89599930118798
  train_label_ranking_average_precision_score_oob:
  - 0.8010576476057637
  - 0.8100450130300868
  - 0.7913825098585002
  - 0.8043532338308447
  - 0.7988877242021887
  train_matthews_corrcoef_macro:
  - 0.1897513105007669
  - 0.1806490851977364
  - 0.19911980824221173
  - 0.1648859871574043
  - 0.15307789808337866
  train_matthews_corrcoef_macro_oob:
  - 0.06345936297159156
  - 0.006746459410648671
  - 0.02489878984282026
  - 0.039164444790551624
  - 0.03516093447177011
  train_matthews_corrcoef_micro:
  - 0.2206649890271021
  - 0.21193275912857445
  - 0.2183718824152107
  - 0.19079418817294339
  - 0.1923393665262013
  train_matthews_corrcoef_micro_oob:
  - 0.08533457102038981
  - 0.010607377281651226
  - 0.05190428334841083
  - 0.055840089305369024
  - 0.06227135758907493
  train_matthews_corrcoef_samples:
  - 0.08803597668021892
  - 0.07300127015588656
  - 0.08184675505215853
  - 0.06243821802951274
  - 0.05666964637574962
  train_matthews_corrcoef_samples_oob:
  - 0.016055234978526546
  - 0.0009220800256581575
  - 0.005410842979333912
  - 0.005782781790122195
  - 0.00507612141306815
  train_matthews_corrcoef_weighted:
  - 0.1935317511649946
  - 0.18793369892517575
  - 0.19677699592829054
  - 0.16491270561913088
  - 0.15303784667934803
  train_matthews_corrcoef_weighted_oob:
  - 0.056735818085090504
  - 0.00566777234357548
  - 0.01936129815216572
  - 0.038558127370676515
  - 0.033527544130323696
  train_ndgc:
  - 0.9324898299156176
  - 0.9343125572558704
  - 0.9326870532800161
  - 0.9305363578685817
  - 0.9324710532947815
  train_ndgc_oob:
  - 0.864447888046547
  - 0.8714226489093866
  - 0.859101297184061
  - 0.8667806332310379
  - 0.8638421174862024
  train_neg_coverage_error:
  - -2.3744769874476988
  - -2.366737739872068
  - -2.3507306889352817
  - -2.4093816631130065
  - -2.3857442348008386
  train_neg_coverage_error_oob:
  - -2.7343096234309625
  - -2.7334754797441363
  - -2.7933194154488517
  - -2.771855010660981
  - -2.758909853249476
  train_neg_hamming_loss_macro:
  - -0.28730822873082285
  - -0.294953802416489
  - -0.2881002087682672
  - -0.2970859985785359
  - -0.2945492662473795
  train_neg_hamming_loss_macro_oob:
  - -0.3050906555090656
  - -0.3152096659559346
  - -0.30758524704244955
  - -0.31201137171286425
  - -0.309224318658281
  train_neg_hamming_loss_micro:
  - -0.28730822873082285
  - -0.294953802416489
  - -0.2881002087682672
  - -0.2970859985785359
  - -0.2945492662473795
  train_neg_hamming_loss_micro_oob:
  - -0.30509065550906556
  - -0.31520966595593464
  - -0.30758524704244955
  - -0.31201137171286425
  - -0.30922431865828093
  train_neg_hamming_loss_samples:
  - -0.2873082287308229
  - -0.29495380241648894
  - -0.2881002087682672
  - -0.29708599857853585
  - -0.2945492662473795
  train_neg_hamming_loss_samples_oob:
  - -0.3050906555090655
  - -0.3152096659559346
  - -0.30758524704244955
  - -0.3120113717128642
  - -0.30922431865828093
  train_neg_hamming_loss_weighted:
  - -0.2979599555587074
  - -0.3049473200914416
  - -0.3002901126596325
  - -0.31021520193009683
  - -0.3059147763408946
  train_neg_hamming_loss_weighted_oob:
  - -0.31823274945039354
  - -0.32809859544282133
  - -0.32036525042788094
  - -0.3257110946724105
  - -0.321769957364615
  train_neg_label_ranking_loss:
  - -0.08587284983728499
  - -0.07742241175076996
  - -0.08268963117606123
  - -0.08725420516465292
  - -0.08293733985557884
  train_neg_label_ranking_loss_oob:
  - -0.15753138075313808
  - -0.1480573323856906
  - -0.16450359545349105
  - -0.1577647476901208
  - -0.15810039599347775
  train_precision_macro:
  - 0.712691771269177
  - 0.7050461975835111
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526207
  train_precision_macro_oob:
  - 0.6949093444909344
  - 0.6847903340440654
  - 0.6924147529575505
  - 0.6879886282871358
  - 0.6907756813417191
  train_precision_micro:
  - 0.7126917712691772
  - 0.7050461975835111
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526206
  train_precision_micro_oob:
  - 0.6949093444909344
  - 0.6847903340440654
  - 0.6924147529575505
  - 0.6879886282871357
  - 0.6907756813417191
  train_precision_samples:
  - 0.7126917712691772
  - 0.705046197583511
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526206
  train_precision_samples_oob:
  - 0.6949093444909343
  - 0.6847903340440653
  - 0.6924147529575505
  - 0.6879886282871357
  - 0.6907756813417191
  train_precision_weighted:
  - 0.7020400444412925
  - 0.6950526799085583
  - 0.6997098873403674
  - 0.6897847980699032
  - 0.6940852236591054
  train_precision_weighted_oob:
  - 0.6817672505496063
  - 0.6719014045571786
  - 0.679634749572119
  - 0.6742889053275894
  - 0.6782300426353851
  train_recall_macro:
  - 0.712691771269177
  - 0.7050461975835111
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526207
  train_recall_macro_oob:
  - 0.6949093444909344
  - 0.6847903340440654
  - 0.6924147529575505
  - 0.6879886282871358
  - 0.6907756813417191
  train_recall_micro:
  - 0.7126917712691772
  - 0.7050461975835111
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526206
  train_recall_micro_oob:
  - 0.6949093444909344
  - 0.6847903340440654
  - 0.6924147529575505
  - 0.6879886282871357
  - 0.6907756813417191
  train_recall_samples:
  - 0.7126917712691772
  - 0.705046197583511
  - 0.7118997912317327
  - 0.7029140014214641
  - 0.7054507337526206
  train_recall_samples_oob:
  - 0.6949093444909343
  - 0.6847903340440653
  - 0.6924147529575505
  - 0.6879886282871357
  - 0.6907756813417191
  train_recall_weighted:
  - 0.7020400444412925
  - 0.6950526799085583
  - 0.6997098873403674
  - 0.6897847980699032
  - 0.6940852236591054
  train_recall_weighted_oob:
  - 0.6817672505496063
  - 0.6719014045571786
  - 0.679634749572119
  - 0.6742889053275894
  - 0.6782300426353851
  train_roc_auc_macro:
  - 0.9219607327714501
  - 0.9282598926366491
  - 0.929298151954077
  - 0.9228479147291262
  - 0.9204101884831225
  train_roc_auc_macro_oob:
  - 0.8442631330127282
  - 0.847892747590517
  - 0.837546611371384
  - 0.84391764800364
  - 0.8310450548082889
  train_roc_auc_micro:
  - 0.9265274608180837
  - 0.9345542984082481
  - 0.9306213313010896
  - 0.9284094590217039
  - 0.9252581078925177
  train_roc_auc_micro_oob:
  - 0.8626375035257314
  - 0.8670720298797893
  - 0.8573789045843425
  - 0.8630899564794862
  - 0.8519560361920824
  train_roc_auc_samples:
  - 0.9141271501627151
  - 0.9225775882492301
  - 0.9173103688239387
  - 0.9127457948353471
  - 0.9170626601444211
  train_roc_auc_samples_oob:
  - 0.842468619246862
  - 0.8519426676143095
  - 0.835496404546509
  - 0.8422352523098792
  - 0.8418996040065222
  train_roc_auc_weighted:
  - 0.9222767510202287
  - 0.9266300831733677
  - 0.9300736125774441
  - 0.9222680229366268
  - 0.920176121130095
  train_roc_auc_weighted_oob:
  - 0.8447372133060594
  - 0.8462441593910462
  - 0.8381566357359262
  - 0.8433820597314221
  - 0.8298942569692224
start: 2023-12-22 04:37:59.256051
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
