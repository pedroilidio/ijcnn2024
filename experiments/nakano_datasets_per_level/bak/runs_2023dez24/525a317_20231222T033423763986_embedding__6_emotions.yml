active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T+YmZmZmZkdwNDMzMzMzARA0MzMzMzMBEBAMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZFcDgzMzMzMwEQODMzMzMzARAcGZmZmZmFkCQmZmZmZkVwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:35:14.848436
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__6
  params: {}
hash: 525a31772058469f7d40291479a04e0a078dc285dd7bf025da69bc333e5b760c
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/525a317_20231222T033423763986_embedding__6_emotions.yml
results:
  fit_time:
  - 28.417936086654663
  - 29.51414704322815
  - 31.29189682006836
  - 31.382627964019775
  - 30.778393268585205
  score_time:
  - 5.036451101303101
  - 5.032403945922852
  - 5.223165988922119
  - 5.341856479644775
  - 5.457942008972168
  test_average_precision_macro:
  - 0.675514022768231
  - 0.6593762031666967
  - 0.7355707013026587
  - 0.7780469829600688
  - 0.7126304764784394
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6915921165896783
  - 0.677073502777435
  - 0.737287343175312
  - 0.7705163167937279
  - 0.6875397832633716
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7851702508960573
  - 0.7676245210727969
  - 0.8333572796934865
  - 0.8188790560471978
  - 0.8220654121863799
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6846508653217706
  - 0.6610373148844888
  - 0.7378649659055708
  - 0.7793033771304902
  - 0.7038090445879664
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258065
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258065
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258066
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6919721407624633
  - 0.6595583787053841
  - 0.6732046820626384
  - 0.6609814963797265
  - 0.6892618424876489
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5487804900355934
  - 0.50993044719368
  - 0.5265246668147114
  - 0.5138284637041481
  - 0.5435403486912197
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5451713395638629
  - 0.5064935064935064
  - 0.5229759299781181
  - 0.5100222717149221
  - 0.5403726708074534
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5566436251920122
  - 0.5168308702791461
  - 0.5348932676518884
  - 0.5202275600505689
  - 0.5514592933947773
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5333586107313043
  - 0.4960017927771877
  - 0.5116460178759671
  - 0.49829228003903464
  - 0.5297566692510477
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7851702508960572
  - 0.7676245210727969
  - 0.8333572796934864
  - 0.8188790560471976
  - 0.8220654121863796
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.027199379563460618
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.056618700355124195
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.005100447838981257
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.02151223656382794
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8518907338093936
  - 0.8415059837393303
  - 0.8881880894935891
  - 0.8784145349408767
  - 0.8776494176812718
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.7338709677419355
  - -2.9913793103448274
  - -2.689655172413793
  - -2.814159292035398
  - -2.564516129032258
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29435483870967744
  - -0.32758620689655177
  - -0.31321839080459773
  - -0.32448377581120946
  - -0.29838709677419356
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.29435483870967744
  - -0.3275862068965517
  - -0.3132183908045977
  - -0.32448377581120946
  - -0.29838709677419356
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2943548387096775
  - -0.32758620689655177
  - -0.31321839080459773
  - -0.3244837758112094
  - -0.2983870967741936
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.30802785923753667
  - -0.34044162129461586
  - -0.3267953179373616
  - -0.3390185036202736
  - -0.31073815751235107
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.16886200716845878
  - -0.18852969348659004
  - -0.1373323754789272
  - -0.1583087512291052
  - -0.13976254480286737
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258065
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258065
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258066
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6919721407624633
  - 0.6595583787053841
  - 0.6732046820626384
  - 0.6609814963797265
  - 0.6892618424876489
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258065
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258065
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7056451612903226
  - 0.6724137931034483
  - 0.6867816091954023
  - 0.6755162241887905
  - 0.7016129032258066
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6919721407624633
  - 0.6595583787053841
  - 0.6732046820626384
  - 0.6609814963797265
  - 0.6892618424876489
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8268619088362574
  - 0.812568515535317
  - 0.8600142536501777
  - 0.8627862347598637
  - 0.8380647017535701
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8429562803608606
  - 0.8325835957414905
  - 0.874832060189628
  - 0.875565700674871
  - 0.8557177867522694
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8311379928315411
  - 0.8114703065134099
  - 0.8626676245210728
  - 0.8416912487708949
  - 0.8602374551971327
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8309568304776154
  - 0.8099733952945166
  - 0.8621158683607949
  - 0.8626501992962469
  - 0.8314127954621087
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8931597133688681
  - 0.8866033960731606
  - 0.8889294840392097
  - 0.8886396844884493
  - 0.8858142649934756
  train_average_precision_macro_oob:
  - 0.741152907087797
  - 0.7529884692351482
  - 0.739336127756689
  - 0.7428885127439289
  - 0.7292863846420686
  train_average_precision_micro:
  - 0.8965582705094692
  - 0.8912040559901616
  - 0.8935037871371825
  - 0.8910150128285438
  - 0.8929351583537196
  train_average_precision_micro_oob:
  - 0.7497603039487766
  - 0.7567795423112145
  - 0.7453334803668087
  - 0.7580504724951828
  - 0.7499584073992838
  train_average_precision_samples:
  - 0.9055674010897892
  - 0.9027137200093175
  - 0.9053109713487073
  - 0.9101273148148148
  - 0.9082918739635159
  train_average_precision_samples_oob:
  - 0.8026474769012081
  - 0.817208245981831
  - 0.8036047053342651
  - 0.8096527777777778
  - 0.8123904288083392
  train_average_precision_weighted:
  - 0.8952930054251456
  - 0.8887772928968058
  - 0.8898262628320179
  - 0.8898331726544725
  - 0.888106914539817
  train_average_precision_weighted_oob:
  - 0.7441972971798836
  - 0.7572161321209128
  - 0.745682690452147
  - 0.7511159460778005
  - 0.7381703478417142
  train_f1_macro:
  - 0.7082444918265813
  - 0.7260656883298392
  - 0.7176799440950384
  - 0.7256944444444445
  - 0.7206823027718551
  train_f1_macro_oob:
  - 0.6847903340440654
  - 0.6928721174004192
  - 0.6900768693221523
  - 0.6930555555555555
  - 0.685501066098081
  train_f1_micro:
  - 0.7082444918265813
  - 0.7260656883298393
  - 0.7176799440950384
  - 0.7256944444444444
  - 0.720682302771855
  train_f1_micro_oob:
  - 0.6847903340440654
  - 0.6928721174004193
  - 0.6900768693221523
  - 0.6930555555555555
  - 0.685501066098081
  train_f1_samples:
  - 0.7082444918265813
  - 0.7260656883298392
  - 0.7176799440950384
  - 0.7256944444444443
  - 0.720682302771855
  train_f1_samples_oob:
  - 0.6847903340440654
  - 0.6928721174004193
  - 0.6900768693221523
  - 0.6930555555555554
  - 0.685501066098081
  train_f1_weighted:
  - 0.6980085095756737
  - 0.7167238421955403
  - 0.7109085341436412
  - 0.7191535285285285
  - 0.7144277002603879
  train_f1_weighted_oob:
  - 0.6720235694116291
  - 0.679493043643987
  - 0.6776835559324429
  - 0.6807197822822824
  - 0.6725538704414079
  train_jaccard_macro:
  - 0.5509137869651258
  - 0.5722634135630035
  - 0.5608562588504368
  - 0.5707897038068644
  - 0.5644467888185217
  train_jaccard_macro_oob:
  - 0.5240213721859911
  - 0.5335339092292734
  - 0.5299580660651776
  - 0.5334731365362202
  - 0.5248650349317859
  train_jaccard_micro:
  - 0.5482806052269601
  - 0.5699396599012616
  - 0.5596730245231608
  - 0.5694822888283378
  - 0.5633333333333334
  train_jaccard_micro_oob:
  - 0.5206700891650905
  - 0.5300721732157178
  - 0.5268071485729527
  - 0.5302869287991498
  - 0.5214922952149229
  train_jaccard_samples:
  - 0.5626459539039496
  - 0.5868024358590397
  - 0.575371867824698
  - 0.586061507936508
  - 0.579957356076759
  train_jaccard_samples_oob:
  - 0.5317291095542694
  - 0.5413796545872016
  - 0.537885594489368
  - 0.541765873015873
  - 0.5326429079094324
  train_jaccard_weighted:
  - 0.5390315780333108
  - 0.5613076311376378
  - 0.5528519356886713
  - 0.5628871139056189
  - 0.5569307656011426
  train_jaccard_weighted_oob:
  - 0.5101371783509072
  - 0.5188012046205391
  - 0.5163582456161342
  - 0.5198260029287184
  - 0.5107732946234362
  train_label_ranking_average_precision_score:
  - 0.9055674010897886
  - 0.9027137200093167
  - 0.9053109713487064
  - 0.9101273148148146
  - 0.9082918739635153
  train_label_ranking_average_precision_score_oob:
  - 0.8026474769012074
  - 0.8172082459818298
  - 0.8036047053342643
  - 0.8096527777777769
  - 0.8123904288083381
  train_matthews_corrcoef_macro:
  - 0.19310349884155045
  - 0.215721079173663
  - 0.1866105011816341
  - 0.2117796329105346
  - 0.22836681763548064
  train_matthews_corrcoef_macro_oob:
  - 0.013212541504291504
  - 0.011170308299594317
  - 0.023315734531913646
  - 0.031055294106651782
  - 0.011180234414086896
  train_matthews_corrcoef_micro:
  - 0.23000100312182725
  - 0.2795889593600158
  - 0.25564834185030255
  - 0.28110764651295234
  - 0.28315988819585114
  train_matthews_corrcoef_micro_oob:
  - 0.02776750075974716
  - 0.028057667230427345
  - 0.0482183118772567
  - 0.05585650255741131
  - 0.027813253091857428
  train_matthews_corrcoef_samples:
  - 0.08919853261602666
  - 0.13944084500129095
  - 0.12062722588486838
  - 0.1409785039907957
  - 0.13535241584752433
  train_matthews_corrcoef_samples_oob:
  - 0.0013485192580675392
  - 0.0013259025828798237
  - 0.00397770774863947
  - 0.005270462766947299
  - 0.0013485192580675392
  train_matthews_corrcoef_weighted:
  - 0.19637788070007137
  - 0.22749662186049685
  - 0.2028977000010007
  - 0.22628277635189287
  - 0.24291797960227557
  train_matthews_corrcoef_weighted_oob:
  - 0.010623597560883033
  - 0.011576501328670472
  - 0.028707259114140262
  - 0.03240932466772345
  - 0.011432609908761543
  train_ndgc:
  - 0.939944635665891
  - 0.9369962356042142
  - 0.9375666852554999
  - 0.9420529968840279
  - 0.9419945507166745
  train_ndgc_oob:
  - 0.867110258913307
  - 0.8764305273856212
  - 0.8659343442995852
  - 0.8713031228405209
  - 0.8726097236953119
  train_neg_coverage_error:
  - -2.388059701492537
  - -2.360587002096436
  - -2.3039832285115303
  - -2.310416666666667
  - -2.3582089552238807
  train_neg_coverage_error_oob:
  - -2.816631130063966
  - -2.7232704402515724
  - -2.7735849056603774
  - -2.7333333333333334
  - -2.7547974413646057
  train_neg_hamming_loss_macro:
  - -0.2917555081734186
  - -0.27393431167016075
  - -0.28232005590496156
  - -0.2743055555555556
  - -0.279317697228145
  train_neg_hamming_loss_macro_oob:
  - -0.3152096659559346
  - -0.30712788259958074
  - -0.30992313067784766
  - -0.30694444444444446
  - -0.31449893390191896
  train_neg_hamming_loss_micro:
  - -0.2917555081734186
  - -0.27393431167016075
  - -0.28232005590496156
  - -0.2743055555555556
  - -0.279317697228145
  train_neg_hamming_loss_micro_oob:
  - -0.31520966595593464
  - -0.30712788259958074
  - -0.30992313067784766
  - -0.30694444444444446
  - -0.31449893390191896
  train_neg_hamming_loss_samples:
  - -0.29175550817341855
  - -0.27393431167016075
  - -0.28232005590496156
  - -0.2743055555555555
  - -0.279317697228145
  train_neg_hamming_loss_samples_oob:
  - -0.31520966595593464
  - -0.30712788259958074
  - -0.3099231306778476
  - -0.3069444444444444
  - -0.31449893390191896
  train_neg_hamming_loss_weighted:
  - -0.30199149042432627
  - -0.2832761578044597
  - -0.28909146585635875
  - -0.28084647147147146
  - -0.2855722997396121
  train_neg_hamming_loss_weighted_oob:
  - -0.3279764305883709
  - -0.32050695635601295
  - -0.32231644406755705
  - -0.31928021771771775
  - -0.3274461295585921
  train_neg_label_ranking_loss:
  - -0.07697820421701018
  - -0.08269275564873049
  - -0.07360237596086652
  - -0.07328124999999999
  - -0.0740108978914949
  train_neg_label_ranking_loss_oob:
  - -0.16234304667140487
  - -0.15245166550197994
  - -0.16331236897274634
  - -0.15333333333333332
  - -0.15297322909263206
  train_precision_macro:
  - 0.7082444918265813
  - 0.7260656883298392
  - 0.7176799440950384
  - 0.7256944444444445
  - 0.7206823027718551
  train_precision_macro_oob:
  - 0.6847903340440654
  - 0.6928721174004192
  - 0.6900768693221523
  - 0.6930555555555555
  - 0.685501066098081
  train_precision_micro:
  - 0.7082444918265813
  - 0.7260656883298393
  - 0.7176799440950384
  - 0.7256944444444444
  - 0.720682302771855
  train_precision_micro_oob:
  - 0.6847903340440654
  - 0.6928721174004193
  - 0.6900768693221523
  - 0.6930555555555555
  - 0.685501066098081
  train_precision_samples:
  - 0.7082444918265813
  - 0.7260656883298392
  - 0.7176799440950384
  - 0.7256944444444443
  - 0.720682302771855
  train_precision_samples_oob:
  - 0.6847903340440654
  - 0.6928721174004193
  - 0.6900768693221523
  - 0.6930555555555554
  - 0.685501066098081
  train_precision_weighted:
  - 0.6980085095756737
  - 0.7167238421955403
  - 0.7109085341436412
  - 0.7191535285285285
  - 0.7144277002603879
  train_precision_weighted_oob:
  - 0.6720235694116291
  - 0.679493043643987
  - 0.6776835559324429
  - 0.6807197822822824
  - 0.6725538704414079
  train_recall_macro:
  - 0.7082444918265813
  - 0.7260656883298392
  - 0.7176799440950384
  - 0.7256944444444445
  - 0.7206823027718551
  train_recall_macro_oob:
  - 0.6847903340440654
  - 0.6928721174004192
  - 0.6900768693221523
  - 0.6930555555555555
  - 0.685501066098081
  train_recall_micro:
  - 0.7082444918265813
  - 0.7260656883298393
  - 0.7176799440950384
  - 0.7256944444444444
  - 0.720682302771855
  train_recall_micro_oob:
  - 0.6847903340440654
  - 0.6928721174004193
  - 0.6900768693221523
  - 0.6930555555555555
  - 0.685501066098081
  train_recall_samples:
  - 0.7082444918265813
  - 0.7260656883298392
  - 0.7176799440950384
  - 0.7256944444444443
  - 0.720682302771855
  train_recall_samples_oob:
  - 0.6847903340440654
  - 0.6928721174004193
  - 0.6900768693221523
  - 0.6930555555555554
  - 0.685501066098081
  train_recall_weighted:
  - 0.6980085095756737
  - 0.7167238421955403
  - 0.7109085341436412
  - 0.7191535285285285
  - 0.7144277002603879
  train_recall_weighted_oob:
  - 0.6720235694116291
  - 0.679493043643987
  - 0.6776835559324429
  - 0.6807197822822824
  - 0.6725538704414079
  train_roc_auc_macro:
  - 0.9275455928761823
  - 0.9260614760679972
  - 0.9261244880045526
  - 0.9251072360735663
  - 0.9251447893172074
  train_roc_auc_macro_oob:
  - 0.8478957062110525
  - 0.857549028313843
  - 0.8491963230019981
  - 0.8521005222138492
  - 0.8466736576857011
  train_roc_auc_micro:
  - 0.9325259839278531
  - 0.9304639482616273
  - 0.934285616610069
  - 0.9316257145699915
  - 0.9337170883171136
  train_roc_auc_micro_oob:
  - 0.8594610966106293
  - 0.8675018346940647
  - 0.8624729357066344
  - 0.8660865308079163
  - 0.8630406835701507
  train_roc_auc_samples:
  - 0.9230217957829898
  - 0.9173072443512695
  - 0.9263976240391336
  - 0.9267187499999999
  - 0.925989102108505
  train_roc_auc_samples_oob:
  - 0.837656953328595
  - 0.84754833449802
  - 0.8366876310272537
  - 0.8466666666666666
  - 0.8470267709073679
  train_roc_auc_weighted:
  - 0.9274182608513175
  - 0.92591209554153
  - 0.925226754341968
  - 0.9242976865980308
  - 0.9251945267395048
  train_roc_auc_weighted_oob:
  - 0.847678521802771
  - 0.8580993554997149
  - 0.8503787137648081
  - 0.8545067687453722
  - 0.8496875743421348
start: 2023-12-22 03:34:23.763986
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
