active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZAcAAmJmZmZnJvwCYmZmZmcm/AJqZmZmZ6T8AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:13:48.777408
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__1
  params: {}
hash: fc06efe59353a823e940e1bd15788878d248ca533be3988da12a61109936f150
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fc06efe_20231221T201337559292_embedding__1_GrampositivePseAAC.yml
results:
  fit_time:
  - 3.045992851257324
  - 3.122558116912842
  - 2.886141061782837
  - 2.8820292949676514
  - 3.042310953140259
  score_time:
  - 1.5099456310272217
  - 1.4841885566711426
  - 1.4522814750671387
  - 1.4652926921844482
  - 1.6548137664794922
  test_average_precision_macro:
  - 0.4499629552669222
  - 0.3559478397150352
  - 0.40576806654940406
  - 0.42014744360322787
  - 0.379238634607201
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5302968195040223
  - 0.4539604535231472
  - 0.5386177442547627
  - 0.5314945854544005
  - 0.5131850693300979
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7138364779874213
  - 0.672275641025641
  - 0.7363782051282051
  - 0.698220064724919
  - 0.71078431372549
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5248929560035119
  - 0.4407695026752817
  - 0.5363162955614815
  - 0.5011681183667763
  - 0.4816381520168259
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.676931292274831
  - 0.6751831501831502
  - 0.6682234432234432
  - 0.6709397681214063
  - 0.6689291101055806
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6203929674207407
  - 0.6173036657549128
  - 0.6193471865911176
  - 0.622188162313386
  - 0.6150606469002695
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6
  - 0.5969289827255279
  - 0.5969289827255279
  - 0.6
  - 0.59375
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5999999999999999
  - 0.5974358974358972
  - 0.5974358974358972
  - 0.6
  - 0.5947712418300652
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5184281303170373
  - 0.5162064290091075
  - 0.5081101940770957
  - 0.5112473507464561
  - 0.5101466929297118
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7138364779874211
  - 0.6722756410256413
  - 0.736378205128205
  - 0.6982200647249194
  - 0.7107843137254902
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7864624558302694
  - 0.755597747460689
  - 0.8042571348494494
  - 0.7750207089383447
  - 0.785003133613583
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7735849056603774
  - -1.8846153846153846
  - -1.7019230769230769
  - -1.796116504854369
  - -1.7745098039215685
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25
  - -0.25240384615384615
  - -0.25240384615384615
  - -0.25
  - -0.2549019607843137
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25
  - -0.25240384615384615
  - -0.25240384615384615
  - -0.25
  - -0.2549019607843137
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25
  - -0.25240384615384615
  - -0.25240384615384615
  - -0.25
  - -0.2549019607843137
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3230687077251691
  - -0.32481684981684983
  - -0.3317765567765568
  - -0.3290602318785937
  - -0.3310708898944193
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2578616352201258
  - -0.2932692307692308
  - -0.22916666666666666
  - -0.26537216828478966
  - -0.25081699346405223
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.676931292274831
  - 0.6751831501831502
  - 0.6682234432234432
  - 0.6709397681214063
  - 0.6689291101055806
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.75
  - 0.7475961538461539
  - 0.7475961538461539
  - 0.75
  - 0.7450980392156863
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.676931292274831
  - 0.6751831501831502
  - 0.6682234432234432
  - 0.6709397681214063
  - 0.6689291101055806
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7300973781368312
  - 0.5843078452504
  - 0.685806521588883
  - 0.6864673820558509
  - 0.6465467333237971
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7713005814643409
  - 0.7287092328892972
  - 0.7851477568519369
  - 0.7623401514437428
  - 0.7656566295546559
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7421383647798743
  - 0.7067307692307693
  - 0.7708333333333334
  - 0.7346278317152104
  - 0.7491830065359477
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7065889734637667
  - 0.5887214952757841
  - 0.7042021644446628
  - 0.6593718341895981
  - 0.6579915694088286
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.753316589143329
  - 0.768531693386008
  - 0.767728358094652
  - 0.7934715342807811
  - 0.7517024111027999
  train_average_precision_macro_oob:
  - 0.3799720245164335
  - 0.39607267955789344
  - 0.38825923061911205
  - 0.3974899227107575
  - 0.39842018821880876
  train_average_precision_micro:
  - 0.8156258513192725
  - 0.8164591847507213
  - 0.8173630966898268
  - 0.8127982434614944
  - 0.807678043185006
  train_average_precision_micro_oob:
  - 0.5026365054868548
  - 0.5304760683684933
  - 0.5094832688436103
  - 0.5338720187707089
  - 0.5294237575291604
  train_average_precision_samples:
  - 0.8496771589991928
  - 0.8508032128514056
  - 0.8427710843373494
  - 0.849959935897436
  - 0.8363309352517986
  train_average_precision_samples_oob:
  - 0.710855528652139
  - 0.72429718875502
  - 0.7026104417670683
  - 0.7189503205128205
  - 0.7094324540367706
  train_average_precision_weighted:
  - 0.8172630292349267
  - 0.8176426538494784
  - 0.821674066142922
  - 0.8183556692907094
  - 0.8022464508745996
  train_average_precision_weighted_oob:
  - 0.49436070314973074
  - 0.5155406764359673
  - 0.5003868281686736
  - 0.5116067511747254
  - 0.5049126324805258
  train_f1_macro:
  - 0.7506053268765134
  - 0.7602409638554217
  - 0.7512048192771086
  - 0.7608173076923077
  - 0.7655875299760192
  train_f1_macro_oob:
  - 0.7475786924939467
  - 0.7481927710843375
  - 0.7481927710843375
  - 0.7475961538461539
  - 0.748800959232614
  train_f1_micro:
  - 0.7506053268765133
  - 0.7602409638554217
  - 0.7512048192771085
  - 0.7608173076923077
  - 0.7655875299760192
  train_f1_micro_oob:
  - 0.7475786924939467
  - 0.7481927710843373
  - 0.7481927710843373
  - 0.7475961538461539
  - 0.7488009592326139
  train_f1_samples:
  - 0.7506053268765133
  - 0.7602409638554217
  - 0.7512048192771085
  - 0.7608173076923077
  - 0.7655875299760192
  train_f1_samples_oob:
  - 0.7475786924939467
  - 0.7481927710843373
  - 0.7481927710843373
  - 0.7475961538461539
  - 0.7488009592326139
  train_f1_weighted:
  - 0.6752544695478484
  - 0.6886723929209663
  - 0.6774254914394421
  - 0.6915178571428572
  - 0.6975612827160707
  train_f1_weighted_oob:
  - 0.6709054064254649
  - 0.6713552775696086
  - 0.6731077419726753
  - 0.6724130036630037
  - 0.672893665974142
  train_jaccard_macro:
  - 0.6217401951849275
  - 0.6325060007352092
  - 0.6220061033389406
  - 0.6325409384743709
  - 0.638177991750178
  train_jaccard_macro_oob:
  - 0.618459744826195
  - 0.619244360566291
  - 0.618733163939055
  - 0.6180321779805635
  - 0.6197881516913804
  train_jaccard_micro:
  - 0.6007751937984496
  - 0.6132167152575316
  - 0.6015436565364206
  - 0.6139670223084384
  - 0.6202039825157843
  train_jaccard_micro_oob:
  - 0.596906718221363
  - 0.5976900866217517
  - 0.5976900866217517
  - 0.5969289827255279
  - 0.5984666986104457
  train_jaccard_samples:
  - 0.6022598870056496
  - 0.6173493975903612
  - 0.60289156626506
  - 0.6182692307692306
  - 0.6255795363709031
  train_jaccard_samples_oob:
  - 0.5974172719935429
  - 0.5980722891566264
  - 0.5980722891566264
  - 0.5974358974358972
  - 0.5987210231814547
  train_jaccard_weighted:
  - 0.5162156922750498
  - 0.5310630784551704
  - 0.5187941071973965
  - 0.534187353614682
  - 0.5405105124268512
  train_jaccard_weighted_oob:
  - 0.5115215864439471
  - 0.5120917738276484
  - 0.5141218848353318
  - 0.513320132953196
  - 0.513587978469636
  train_label_ranking_average_precision_score:
  - 0.8496771589991927
  - 0.8508032128514053
  - 0.842771084337349
  - 0.8499599358974359
  - 0.8363309352517986
  train_label_ranking_average_precision_score_oob:
  - 0.710855528652139
  - 0.7242971887550198
  - 0.7026104417670687
  - 0.7189503205128204
  - 0.7094324540367709
  train_matthews_corrcoef_macro:
  - 0.05129754528323236
  - 0.10350157542737434
  - 0.05136786761591401
  - 0.10873278976182588
  - 0.12246283610598767
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.09482080846418146
  - 0.19035563206505524
  - 0.09474551486054339
  - 0.19920962089820682
  - 0.22559595032197824
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.012106537530266344
  - 0.04819277108433735
  - 0.012048192771084338
  - 0.05186863045478275
  - 0.0671462829736211
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.07390627831270223
  - 0.14911646043131987
  - 0.07383183708814137
  - 0.15671727491569484
  - 0.17841270849965876
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8881197443682746
  - 0.8889095244559879
  - 0.8829997365730282
  - 0.8885899098618548
  - 0.878371717461961
  train_ndgc_oob:
  - 0.784857335166526
  - 0.7947225309870526
  - 0.778427021866025
  - 0.7907143409506383
  - 0.7837451397280253
  train_neg_coverage_error:
  - -1.4116222760290558
  - -1.4
  - -1.4144578313253011
  - -1.3990384615384615
  - -1.419664268585132
  train_neg_coverage_error_oob:
  - -1.765133171912833
  - -1.730120481927711
  - -1.8024096385542168
  - -1.7596153846153846
  - -1.7673860911270982
  train_neg_hamming_loss_macro:
  - -0.24939467312348668
  - -0.2397590361445783
  - -0.24879518072289156
  - -0.2391826923076923
  - -0.23441247002398083
  train_neg_hamming_loss_macro_oob:
  - -0.2524213075060533
  - -0.25180722891566265
  - -0.25180722891566265
  - -0.25240384615384615
  - -0.25119904076738614
  train_neg_hamming_loss_micro:
  - -0.24939467312348668
  - -0.2397590361445783
  - -0.24879518072289156
  - -0.23918269230769232
  - -0.23441247002398083
  train_neg_hamming_loss_micro_oob:
  - -0.2524213075060533
  - -0.25180722891566265
  - -0.25180722891566265
  - -0.25240384615384615
  - -0.2511990407673861
  train_neg_hamming_loss_samples:
  - -0.24939467312348668
  - -0.2397590361445783
  - -0.24879518072289156
  - -0.23918269230769232
  - -0.23441247002398083
  train_neg_hamming_loss_samples_oob:
  - -0.2524213075060533
  - -0.25180722891566265
  - -0.25180722891566265
  - -0.25240384615384615
  - -0.2511990407673861
  train_neg_hamming_loss_weighted:
  - -0.32474553045215154
  - -0.3113276070790339
  - -0.32257450856055797
  - -0.30848214285714287
  - -0.3024387172839294
  train_neg_hamming_loss_weighted_oob:
  - -0.329094593574535
  - -0.32864472243039144
  - -0.32689225802732463
  - -0.32758699633699634
  - -0.3271063340258581
  train_neg_label_ranking_loss:
  - -0.13357546408393867
  - -0.13072289156626507
  - -0.1355421686746988
  - -0.12920673076923078
  - -0.13788968824940048
  train_neg_label_ranking_loss_oob:
  - -0.2516142050040355
  - -0.24096385542168675
  - -0.2646586345381526
  - -0.2502003205128205
  - -0.25359712230215825
  train_precision_macro:
  - 0.7506053268765134
  - 0.7602409638554217
  - 0.7512048192771086
  - 0.7608173076923077
  - 0.7655875299760192
  train_precision_macro_oob:
  - 0.7475786924939467
  - 0.7481927710843375
  - 0.7481927710843375
  - 0.7475961538461539
  - 0.748800959232614
  train_precision_micro:
  - 0.7506053268765133
  - 0.7602409638554217
  - 0.7512048192771085
  - 0.7608173076923077
  - 0.7655875299760192
  train_precision_micro_oob:
  - 0.7475786924939467
  - 0.7481927710843373
  - 0.7481927710843373
  - 0.7475961538461539
  - 0.7488009592326139
  train_precision_samples:
  - 0.7506053268765133
  - 0.7602409638554217
  - 0.7512048192771085
  - 0.7608173076923077
  - 0.7655875299760192
  train_precision_samples_oob:
  - 0.7475786924939467
  - 0.7481927710843373
  - 0.7481927710843373
  - 0.7475961538461539
  - 0.7488009592326139
  train_precision_weighted:
  - 0.6752544695478484
  - 0.6886723929209663
  - 0.6774254914394421
  - 0.6915178571428572
  - 0.6975612827160707
  train_precision_weighted_oob:
  - 0.6709054064254649
  - 0.6713552775696086
  - 0.6731077419726753
  - 0.6724130036630037
  - 0.672893665974142
  train_recall_macro:
  - 0.7506053268765134
  - 0.7602409638554217
  - 0.7512048192771086
  - 0.7608173076923077
  - 0.7655875299760192
  train_recall_macro_oob:
  - 0.7475786924939467
  - 0.7481927710843375
  - 0.7481927710843375
  - 0.7475961538461539
  - 0.748800959232614
  train_recall_micro:
  - 0.7506053268765133
  - 0.7602409638554217
  - 0.7512048192771085
  - 0.7608173076923077
  - 0.7655875299760192
  train_recall_micro_oob:
  - 0.7475786924939467
  - 0.7481927710843373
  - 0.7481927710843373
  - 0.7475961538461539
  - 0.7488009592326139
  train_recall_samples:
  - 0.7506053268765133
  - 0.7602409638554217
  - 0.7512048192771085
  - 0.7608173076923077
  - 0.7655875299760192
  train_recall_samples_oob:
  - 0.7475786924939467
  - 0.7481927710843373
  - 0.7481927710843373
  - 0.7475961538461539
  - 0.7488009592326139
  train_recall_weighted:
  - 0.6752544695478484
  - 0.6886723929209663
  - 0.6774254914394421
  - 0.6915178571428572
  - 0.6975612827160707
  train_recall_weighted_oob:
  - 0.6709054064254649
  - 0.6713552775696086
  - 0.6731077419726753
  - 0.6724130036630037
  - 0.672893665974142
  train_roc_auc_macro:
  - 0.846295396249964
  - 0.8404861057458181
  - 0.8574827041814432
  - 0.8807941111904131
  - 0.8460748620572938
  train_roc_auc_macro_oob:
  - 0.6380631349461813
  - 0.6193893167438432
  - 0.6449623689950973
  - 0.6397198683673639
  - 0.6970020738351176
  train_roc_auc_micro:
  - 0.8932106136952785
  - 0.8924947414649932
  - 0.8947214324788695
  - 0.8962907671107028
  - 0.8917358230259625
  train_roc_auc_micro_oob:
  - 0.7675045388790181
  - 0.7733301743599227
  - 0.7591802849239921
  - 0.7731396417087735
  - 0.7769041008463095
  train_roc_auc_samples:
  - 0.8664245359160613
  - 0.869277108433735
  - 0.8644578313253012
  - 0.8707932692307693
  - 0.8621103117505995
  train_roc_auc_samples_oob:
  - 0.7483857949959646
  - 0.7590361445783133
  - 0.7353413654618473
  - 0.7497996794871795
  - 0.7464028776978417
  train_roc_auc_weighted:
  - 0.8559658940414958
  - 0.8545439164984471
  - 0.8605682485595777
  - 0.8599233208479963
  - 0.8442849485096305
  train_roc_auc_weighted_oob:
  - 0.6705490515773062
  - 0.6757496635963153
  - 0.6641981885466001
  - 0.6782392281053478
  - 0.6808260240851873
start: 2023-12-21 20:13:37.559292
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
