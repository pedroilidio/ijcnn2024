active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+amZmZmZkBQDQzMzMzM/M/MzMzMzMzE8A0MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAFEAAAAAAAAAQwAAAAAAAAPA/AAAAAAAAAAAAAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:11:23.176315
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__7
  params: {}
hash: e9e9c1ba25cf0eb3820dfb71609484dd91d49dc9b39f6cf9c4029deddd4def6c
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e9e9c1b_20231221T221019873989_embedding_proba__7_CHD_49.yml
results:
  fit_time:
  - 40.47862792015076
  - 39.9256055355072
  - 42.29656434059143
  - 43.605427265167236
  - 40.958491802215576
  score_time:
  - 6.223932504653931
  - 6.148560047149658
  - 6.39236044883728
  - 6.430202960968018
  - 6.292742729187012
  test_average_precision_macro:
  - 0.5459904970386232
  - 0.5237076274704943
  - 0.532905571410501
  - 0.461659530826586
  - 0.5124773801801202
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7077783561875923
  - 0.6881814648828628
  - 0.6716763581083562
  - 0.5985722115822372
  - 0.6673176056244519
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8011399371069181
  - 0.78243961352657
  - 0.8007702020202019
  - 0.756519019019019
  - 0.7831858407079646
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6734692900022347
  - 0.6487150210997634
  - 0.6540941386467413
  - 0.5578480800707842
  - 0.6367148433091685
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7059748427672957
  - 0.7289855072463768
  - 0.7106060606060606
  - 0.6546546546546547
  - 0.6976401179941002
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7059748427672956
  - 0.7289855072463768
  - 0.7106060606060606
  - 0.6546546546546547
  - 0.6976401179941003
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7059748427672956
  - 0.7289855072463769
  - 0.7106060606060607
  - 0.6546546546546547
  - 0.6976401179941003
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6709250524109014
  - 0.6748009797917943
  - 0.6553806617410858
  - 0.6110699740836728
  - 0.6427262847383947
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5666315249618877
  - 0.593239887281178
  - 0.5681534233547657
  - 0.5043064435459087
  - 0.5560853421864783
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5455650060753341
  - 0.5735461801596351
  - 0.5511163337250293
  - 0.48660714285714285
  - 0.535673839184598
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5936330964632853
  - 0.6138829286655374
  - 0.5999724517906335
  - 0.5294996294996296
  - 0.5802053403823315
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5142773269822736
  - 0.5126322919572653
  - 0.4885201380351617
  - 0.44613143745720085
  - 0.47686942089231554
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.82000786163522
  - 0.78243961352657
  - 0.8007702020202022
  - 0.7655280280280281
  - 0.7831858407079646
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.16428331219907372
  - 0.19034497334264588
  - 0.13867294111973427
  - 0.05802531956677857
  - 0.132111488945977
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.40523248122039557
  - 0.4539047785422082
  - 0.4111404511739182
  - 0.3008668209794394
  - 0.38652150219136955
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4021344078044419
  - 0.4803692570761874
  - 0.4310586292045589
  - 0.32038879311206053
  - 0.4108169379725715
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.20128824819382585
  - 0.18996841923835892
  - 0.1254130461994001
  - 0.04910272910529743
  - 0.1339708080632322
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8653016570906067
  - 0.8504813976487983
  - 0.8679437827284584
  - 0.8359694840649518
  - 0.8554597446554881
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7169811320754715
  - -3.4521739130434783
  - -3.6
  - -3.90990990990991
  - -3.566371681415929
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2940251572327044
  - -0.27101449275362316
  - -0.28939393939393937
  - -0.3453453453453454
  - -0.30235988200589975
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2940251572327044
  - -0.2710144927536232
  - -0.28939393939393937
  - -0.34534534534534533
  - -0.3023598820058997
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2940251572327044
  - -0.2710144927536232
  - -0.28939393939393937
  - -0.3453453453453454
  - -0.3023598820058997
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32907494758909855
  - -0.3251990202082058
  - -0.3446193382589142
  - -0.3889300259163273
  - -0.35727371526160534
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20277777777777778
  - -0.1953623188405797
  - -0.20270202020202022
  - -0.2570820820820821
  - -0.2087512291052114
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7059748427672957
  - 0.7289855072463768
  - 0.7106060606060606
  - 0.6546546546546547
  - 0.6976401179941002
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7059748427672956
  - 0.7289855072463768
  - 0.7106060606060606
  - 0.6546546546546547
  - 0.6976401179941003
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7059748427672956
  - 0.7289855072463769
  - 0.7106060606060607
  - 0.6546546546546547
  - 0.6976401179941003
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6709250524109014
  - 0.6748009797917943
  - 0.6553806617410858
  - 0.6110699740836728
  - 0.6427262847383947
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7059748427672957
  - 0.7289855072463768
  - 0.7106060606060606
  - 0.6546546546546547
  - 0.6976401179941002
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7059748427672956
  - 0.7289855072463768
  - 0.7106060606060606
  - 0.6546546546546547
  - 0.6976401179941003
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7059748427672956
  - 0.7289855072463769
  - 0.7106060606060607
  - 0.6546546546546547
  - 0.6976401179941003
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6709250524109014
  - 0.6748009797917943
  - 0.6553806617410858
  - 0.6110699740836728
  - 0.6427262847383947
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.561396356827216
  - 0.6485478287362022
  - 0.5807741021209297
  - 0.5145699513655959
  - 0.5469071601975711
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7870170817369093
  - 0.7969367931728302
  - 0.780675033507981
  - 0.7148652113398286
  - 0.7698406321146378
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.8046376811594202
  - 0.7972979797979799
  - .nan
  - 0.7912487708947886
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5934169193746699
  - 0.6190614065331757
  - 0.5981041700203138
  - 0.5096706161448461
  - 0.5941242362129956
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9981634634027533
  - 0.997902058524391
  - 0.9985886041994197
  - 0.9986723452718697
  - 0.9986351140656082
  train_average_precision_macro_oob:
  - 0.8662303384056237
  - 0.8648870989517672
  - 0.8676075824576194
  - 0.8364594075229222
  - 0.8805628068082259
  train_average_precision_micro:
  - 0.9950811197463295
  - 0.9958187969370705
  - 0.995725055679235
  - 0.9961131013737836
  - 0.9959344687052868
  train_average_precision_micro_oob:
  - 0.9812330130177634
  - 0.9803686677647346
  - 0.9800477896190005
  - 0.9838621066212402
  - 0.9843238840555474
  train_average_precision_samples:
  - 0.9912892848304875
  - 0.9865624999999999
  - 0.9839700374531836
  - 0.9882507507507509
  - 0.9856711915535445
  train_average_precision_samples_oob:
  - 0.9702517941103688
  - 0.9689962121212121
  - 0.9639825218476903
  - 0.9632100850850851
  - 0.9691647812971341
  train_average_precision_weighted:
  - 0.9982464402229149
  - 0.9985989491403077
  - 0.9986911493079055
  - 0.9986825236356139
  - 0.9986377370293876
  train_average_precision_weighted_oob:
  - 0.9796407612881189
  - 0.9787451734893463
  - 0.9787291532651407
  - 0.9820646340639099
  - 0.9824971927137295
  train_f1_macro:
  - 0.9706755753526354
  - 0.9708333333333332
  - 0.9734082397003744
  - 0.9718468468468467
  - 0.9698340874811464
  train_f1_macro_oob:
  - 0.9472902746844841
  - 0.9575757575757576
  - 0.9558052434456928
  - 0.9594594594594595
  - 0.9532428355957768
  train_f1_micro:
  - 0.9706755753526355
  - 0.9708333333333333
  - 0.9734082397003745
  - 0.9718468468468469
  - 0.9698340874811463
  train_f1_micro_oob:
  - 0.947290274684484
  - 0.9575757575757575
  - 0.9558052434456928
  - 0.9594594594594594
  - 0.9532428355957768
  train_f1_samples:
  - 0.9706755753526356
  - 0.9708333333333333
  - 0.9734082397003745
  - 0.9718468468468469
  - 0.9698340874811462
  train_f1_samples_oob:
  - 0.9472902746844841
  - 0.9575757575757575
  - 0.955805243445693
  - 0.9594594594594595
  - 0.9532428355957767
  train_f1_weighted:
  - 0.9704880309000575
  - 0.9718047196705735
  - 0.973481581443561
  - 0.9682847321005216
  - 0.9691956589489795
  train_f1_weighted_oob:
  - 0.9404056411294718
  - 0.9555709534368071
  - 0.9526623052776717
  - 0.9538999525841632
  - 0.9476560928173831
  train_jaccard_macro:
  - 0.9432647685366023
  - 0.9436117762451836
  - 0.9483731209652099
  - 0.9455422372659964
  - 0.942073590278295
  train_jaccard_macro_oob:
  - 0.9004860117762922
  - 0.9188602233359734
  - 0.9156271981537426
  - 0.9225723114312722
  - 0.9113865513256979
  train_jaccard_micro:
  - 0.9430219978362784
  - 0.9433198380566802
  - 0.948194089748267
  - 0.9452354874041621
  - 0.9414348462664714
  train_jaccard_micro_oob:
  - 0.8998589562764457
  - 0.9186046511627907
  - 0.9153515064562411
  - 0.922077922077922
  - 0.9106628242074928
  train_jaccard_samples:
  - 0.9507901156008061
  - 0.9515151515151514
  - 0.9552166934189407
  - 0.9527027027027027
  - 0.9494182288299935
  train_jaccard_samples_oob:
  - 0.9141478417647683
  - 0.9297077922077922
  - 0.9272338148742643
  - 0.933075933075933
  - 0.9230230553759966
  train_jaccard_weighted:
  - 0.942921634800639
  - 0.9454894688938129
  - 0.9485317809409386
  - 0.9388025028374754
  - 0.9410565472046445
  train_jaccard_weighted_oob:
  - 0.8879712373342964
  - 0.9151839488658973
  - 0.909821029417093
  - 0.9121697535820297
  - 0.9011910182919234
  train_label_ranking_average_precision_score:
  - 0.9935164563226921
  - 0.9933806818181818
  - 0.9907116104868914
  - 0.9927552552552554
  - 0.9924585218702866
  train_label_ranking_average_precision_score_oob:
  - 0.9724789656025735
  - 0.9758143939393936
  - 0.9707240948813978
  - 0.9677145895895891
  - 0.975952111613876
  train_matthews_corrcoef_macro:
  - 0.7796178775924346
  - 0.7812716262688699
  - 0.7856675773720366
  - 0.7783360604809754
  - 0.7792872938873964
  train_matthews_corrcoef_macro_oob:
  - 0.7261703676227586
  - 0.7517181086918897
  - 0.7463298639777926
  - 0.7505063714575702
  - 0.7402209615164016
  train_matthews_corrcoef_micro:
  - 0.9399952976652055
  - 0.9406795092139959
  - 0.9457834538856532
  - 0.9425784929549653
  - 0.9385782485098126
  train_matthews_corrcoef_micro_oob:
  - 0.8921841002320973
  - 0.9137477311618726
  - 0.9100817140145725
  - 0.9173168138658815
  - 0.904906656414067
  train_matthews_corrcoef_samples:
  - 0.9392310342676607
  - 0.9344479023512491
  - 0.9407940182687369
  - 0.9411853767149402
  - 0.9358150029007865
  train_matthews_corrcoef_samples_oob:
  - 0.88851333144668
  - 0.9080962993682399
  - 0.9068306884833202
  - 0.9146687221190131
  - 0.9009983372091085
  train_matthews_corrcoef_weighted:
  - 0.9237826962131581
  - 0.9243680977999906
  - 0.9282587787463803
  - 0.9226717458536198
  - 0.9210382335600391
  train_matthews_corrcoef_weighted_oob:
  - 0.8533899262205749
  - 0.8872735711061199
  - 0.8806281996806373
  - 0.8895731169180775
  - 0.8684131649133923
  train_ndgc:
  - 0.9936957384322556
  - 0.9893764771466049
  - 0.9876008309967768
  - 0.9910604055720378
  - 0.9887246524354597
  train_ndgc_oob:
  - 0.9806478895544933
  - 0.9788209711610423
  - 0.9755999144369587
  - 0.9752184443996474
  - 0.9792155897118144
  train_neg_coverage_error:
  - -2.596881959910913
  - -2.665909090909091
  - -2.642696629213483
  - -2.630630630630631
  - -2.6493212669683257
  train_neg_coverage_error_oob:
  - -2.7238307349665924
  - -2.7795454545454548
  - -2.7707865168539327
  - -2.7432432432432434
  - -2.766968325791855
  train_neg_hamming_loss_macro:
  - -0.029324424647364514
  - -0.029166666666666664
  - -0.02659176029962547
  - -0.028153153153153154
  - -0.030165912518853696
  train_neg_hamming_loss_macro_oob:
  - -0.05270972531551596
  - -0.04242424242424243
  - -0.04419475655430712
  - -0.04054054054054054
  - -0.04675716440422323
  train_neg_hamming_loss_micro:
  - -0.029324424647364514
  - -0.029166666666666667
  - -0.02659176029962547
  - -0.028153153153153154
  - -0.030165912518853696
  train_neg_hamming_loss_micro_oob:
  - -0.05270972531551596
  - -0.04242424242424243
  - -0.044194756554307116
  - -0.04054054054054054
  - -0.04675716440422323
  train_neg_hamming_loss_samples:
  - -0.029324424647364518
  - -0.029166666666666664
  - -0.026591760299625466
  - -0.02815315315315315
  - -0.030165912518853692
  train_neg_hamming_loss_samples_oob:
  - -0.05270972531551596
  - -0.04242424242424242
  - -0.04419475655430711
  - -0.04054054054054054
  - -0.04675716440422323
  train_neg_hamming_loss_weighted:
  - -0.029511969099942373
  - -0.02819528032942667
  - -0.026518418556438918
  - -0.03171526789947842
  - -0.030804341051020364
  train_neg_hamming_loss_weighted_oob:
  - -0.05959435887052814
  - -0.0444290465631929
  - -0.04733769472232817
  - -0.04610004741583689
  - -0.052343907182616854
  train_neg_label_ranking_loss:
  - -0.007720861172976986
  - -0.008175505050505051
  - -0.008820224719101124
  - -0.009290540540540541
  - -0.007290095525389642
  train_neg_label_ranking_loss_oob:
  - -0.02777159119029943
  - -0.026792929292929292
  - -0.02949438202247191
  - -0.02862862862862863
  - -0.025006284565108092
  train_precision_macro:
  - 0.9706755753526354
  - 0.9708333333333332
  - 0.9734082397003744
  - 0.9718468468468467
  - 0.9698340874811464
  train_precision_macro_oob:
  - 0.9472902746844841
  - 0.9575757575757576
  - 0.9558052434456928
  - 0.9594594594594595
  - 0.9532428355957768
  train_precision_micro:
  - 0.9706755753526355
  - 0.9708333333333333
  - 0.9734082397003745
  - 0.9718468468468469
  - 0.9698340874811463
  train_precision_micro_oob:
  - 0.947290274684484
  - 0.9575757575757575
  - 0.9558052434456928
  - 0.9594594594594594
  - 0.9532428355957768
  train_precision_samples:
  - 0.9706755753526356
  - 0.9708333333333333
  - 0.9734082397003745
  - 0.9718468468468469
  - 0.9698340874811462
  train_precision_samples_oob:
  - 0.9472902746844841
  - 0.9575757575757575
  - 0.955805243445693
  - 0.9594594594594595
  - 0.9532428355957767
  train_precision_weighted:
  - 0.9704880309000575
  - 0.9718047196705735
  - 0.973481581443561
  - 0.9682847321005216
  - 0.9691956589489795
  train_precision_weighted_oob:
  - 0.9404056411294718
  - 0.9555709534368071
  - 0.9526623052776717
  - 0.9538999525841632
  - 0.9476560928173831
  train_recall_macro:
  - 0.9706755753526354
  - 0.9708333333333332
  - 0.9734082397003744
  - 0.9718468468468467
  - 0.9698340874811464
  train_recall_macro_oob:
  - 0.9472902746844841
  - 0.9575757575757576
  - 0.9558052434456928
  - 0.9594594594594595
  - 0.9532428355957768
  train_recall_micro:
  - 0.9706755753526355
  - 0.9708333333333333
  - 0.9734082397003745
  - 0.9718468468468469
  - 0.9698340874811463
  train_recall_micro_oob:
  - 0.947290274684484
  - 0.9575757575757575
  - 0.9558052434456928
  - 0.9594594594594594
  - 0.9532428355957768
  train_recall_samples:
  - 0.9706755753526356
  - 0.9708333333333333
  - 0.9734082397003745
  - 0.9718468468468469
  - 0.9698340874811462
  train_recall_samples_oob:
  - 0.9472902746844841
  - 0.9575757575757575
  - 0.955805243445693
  - 0.9594594594594595
  - 0.9532428355957767
  train_recall_weighted:
  - 0.9704880309000575
  - 0.9718047196705735
  - 0.973481581443561
  - 0.9682847321005216
  - 0.9691956589489795
  train_recall_weighted_oob:
  - 0.9404056411294718
  - 0.9555709534368071
  - 0.9526623052776717
  - 0.9538999525841632
  - 0.9476560928173831
  train_roc_auc_macro:
  - 0.9985288318908941
  - 0.9988111260204842
  - 0.998899415701079
  - 0.9988935441924056
  - 0.9987610528407088
  train_roc_auc_macro_oob:
  - 0.9675895367767188
  - 0.9677563836639861
  - 0.9768204000717918
  - 0.9645736252748605
  - 0.9754117443030196
  train_roc_auc_micro:
  - 0.9957633092713738
  - 0.9963992045847306
  - 0.9963925409798076
  - 0.9965102224064097
  - 0.9965068487199019
  train_roc_auc_micro_oob:
  - 0.9832122715993684
  - 0.9836935199110703
  - 0.9846060004726404
  - 0.9857450384491413
  - 0.9852158020200031
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9983411242764366
  - 0.9987011844856655
  - 0.9987652162338305
  - 0.9987886288866272
  - 0.9985398341027469
  train_roc_auc_weighted_oob:
  - 0.986428917345499
  - 0.9850319276850064
  - 0.9860603125456443
  - 0.9870005510031425
  - 0.9883908139566483
start: 2023-12-21 22:10:19.873989
wrapper: null
