active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/wMzMzMzMBMBAMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:26:33.711107
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__2
  params: {}
hash: ba5ef1587a2e77d7cf4df7c9b0e25b746f502789f7078d4d2b30d58f0587d97b
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ba5ef15_20231221T102621126095_embedding_weak__2_VirusPseAAC.yml
results:
  fit_time:
  - 6.971678256988525
  - 7.110196352005005
  - 6.923429489135742
  - 6.830338716506958
  - 7.426597356796265
  score_time:
  - 1.3947436809539795
  - 1.322281837463379
  - 1.4366559982299805
  - 1.3371896743774414
  - 1.381211757659912
  test_average_precision_macro:
  - 0.4615776028629675
  - 0.3558523207883628
  - 0.4349747334509266
  - 0.29311083485283174
  - 0.5351777595922983
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4182481971045471
  - 0.4288745500188971
  - 0.42041057641982427
  - 0.39319083211424466
  - 0.5880088620074271
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6794715447154471
  - 0.6434959349593495
  - 0.6493386243386243
  - 0.6346590909090909
  - 0.7277777777777777
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4446311404533546
  - 0.42641216309884783
  - 0.41487606708466823
  - 0.40132893688923565
  - 0.5956778022866662
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7845528455284553
  - 0.7926829268292682
  - 0.7857142857142857
  - 0.8030303030303031
  - 0.7905982905982906
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7845528455284553
  - 0.7926829268292683
  - 0.7857142857142857
  - 0.803030303030303
  - 0.7905982905982906
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7845528455284553
  - 0.7926829268292683
  - 0.7857142857142859
  - 0.8030303030303032
  - 0.7905982905982906
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6600298656047785
  - 0.6829268292682926
  - 0.6507936507936508
  - 0.6845454545454546
  - 0.6732026143790849
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6754332024725939
  - 0.6834756142739389
  - 0.6791311181832725
  - 0.6978601276576204
  - 0.6791197159177873
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6454849498327759
  - 0.6565656565656566
  - 0.6470588235294118
  - 0.6708860759493671
  - 0.6537102473498233
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6591173054587689
  - 0.6736353077816493
  - 0.6604308390022676
  - 0.681818181818182
  - 0.6611721611721614
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5169477110501919
  - 0.542132360432156
  - 0.5048878587933429
  - 0.5394255100947483
  - 0.5273926556132689
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6794715447154471
  - 0.6434959349593495
  - 0.6493386243386243
  - 0.6346590909090909
  - 0.7277777777777776
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.020877072063747892
  - 0.03662105772636048
  - -0.02010659020096987
  - 0.011019310710745365
  - 0.05159374727809756
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.07606160425461284
  - 0.1904259697900732
  - 0.06272619459659753
  - 0.12657551823221716
  - 0.16995141943856684
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.04673726258577654
  - 0.1381685625382281
  - 0.040089815094837195
  - 0.07346489845531082
  - 0.05294643754018851
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.04314438600265038
  - 0.07324211545272094
  - -0.042508733861698796
  - 0.022479393849920547
  - 0.10662316437997191
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7616538719622863
  - 0.7343512898820265
  - 0.7407753396252891
  - 0.7272998214972148
  - 0.7986568496537054
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.1463414634146343
  - -2.4634146341463414
  - -2.2857142857142856
  - -2.3181818181818183
  - -2.358974358974359
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21544715447154472
  - -0.20731707317073175
  - -0.21428571428571427
  - -0.19696969696969693
  - -0.2094017094017094
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21544715447154472
  - -0.2073170731707317
  - -0.21428571428571427
  - -0.19696969696969696
  - -0.2094017094017094
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2154471544715447
  - -0.20731707317073167
  - -0.21428571428571427
  - -0.19696969696969696
  - -0.20940170940170938
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33997013439522156
  - -0.3170731707317073
  - -0.34920634920634913
  - -0.31545454545454543
  - -0.326797385620915
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19417344173441736
  - -0.2408536585365854
  - -0.21541005291005288
  - -0.23806818181818182
  - -0.20512820512820512
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7845528455284553
  - 0.7926829268292682
  - 0.7857142857142857
  - 0.8030303030303031
  - 0.7905982905982906
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7845528455284553
  - 0.7926829268292683
  - 0.7857142857142857
  - 0.803030303030303
  - 0.7905982905982906
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7845528455284553
  - 0.7926829268292683
  - 0.7857142857142859
  - 0.8030303030303032
  - 0.7905982905982906
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6600298656047785
  - 0.6829268292682926
  - 0.6507936507936508
  - 0.6845454545454546
  - 0.6732026143790849
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7845528455284553
  - 0.7926829268292682
  - 0.7857142857142857
  - 0.8030303030303031
  - 0.7905982905982906
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7845528455284553
  - 0.7926829268292683
  - 0.7857142857142857
  - 0.803030303030303
  - 0.7905982905982906
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7845528455284553
  - 0.7926829268292683
  - 0.7857142857142859
  - 0.8030303030303032
  - 0.7905982905982906
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6600298656047785
  - 0.6829268292682926
  - 0.6507936507936508
  - 0.6845454545454546
  - 0.6732026143790849
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7160014806338335
  - 0.5297234451646217
  - 0.6297948155870535
  - 0.4788467370617963
  - 0.7098029784304294
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.800269346317207
  - 0.7645047762694822
  - 0.7876304750756025
  - 0.7517757009345795
  - 0.8132433301189329
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8058265582655827
  - 0.7591463414634146
  - 0.7845899470899472
  - 0.7619318181818181
  - 0.7948717948717949
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6393125554350044
  - 0.5332219696406547
  - 0.5784099955771782
  - 0.5224704355518308
  - 0.6947797300738477
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.942205838972157
  - 0.9473869228103324
  - 0.956705352516071
  - 0.972743807263484
  - 0.9213488811132966
  train_average_precision_macro_oob:
  - 0.3556376869972174
  - 0.42690482283026904
  - 0.3861817572787177
  - 0.410923827959095
  - 0.40360812022629583
  train_average_precision_micro:
  - 0.8926703848145194
  - 0.9035922548781572
  - 0.8999666921953082
  - 0.901968322185711
  - 0.9063902667316824
  train_average_precision_micro_oob:
  - 0.5547312945593361
  - 0.6187814583171121
  - 0.5452724682069818
  - 0.534721336571351
  - 0.5781506506476647
  train_average_precision_samples:
  - 0.8820281124497993
  - 0.8992971887550201
  - 0.8964646464646466
  - 0.8936605316973415
  - 0.8985119047619047
  train_average_precision_samples_oob:
  - 0.7077141900937082
  - 0.7488286479250335
  - 0.7086868686868687
  - 0.7273858214042263
  - 0.709755291005291
  train_average_precision_weighted:
  - 0.9819548795032058
  - 0.9714508613550865
  - 0.9835134747810658
  - 0.9887371500136836
  - 0.9731456237047476
  train_average_precision_weighted_oob:
  - 0.5112553212778262
  - 0.5930857532935364
  - 0.5161991516905469
  - 0.5174405662094479
  - 0.5563748065640266
  train_f1_macro:
  - 0.9257028112449798
  - 0.9277108433734939
  - 0.9252525252525253
  - 0.927402862985685
  - 0.9246031746031748
  train_f1_macro_oob:
  - 0.8142570281124497
  - 0.8343373493975902
  - 0.8131313131313131
  - 0.8098159509202453
  - 0.8174603174603176
  train_f1_micro:
  - 0.9257028112449799
  - 0.927710843373494
  - 0.9252525252525252
  - 0.9274028629856851
  - 0.9246031746031746
  train_f1_micro_oob:
  - 0.8142570281124498
  - 0.8343373493975904
  - 0.8131313131313131
  - 0.8098159509202454
  - 0.8174603174603174
  train_f1_samples:
  - 0.92570281124498
  - 0.927710843373494
  - 0.9252525252525252
  - 0.927402862985685
  - 0.9246031746031749
  train_f1_samples_oob:
  - 0.8142570281124496
  - 0.8343373493975904
  - 0.813131313131313
  - 0.8098159509202454
  - 0.8174603174603173
  train_f1_weighted:
  - 0.9437652086177222
  - 0.9470718695678236
  - 0.9443992160410071
  - 0.950039482475855
  - 0.9401800521203505
  train_f1_weighted_oob:
  - 0.7161552614398481
  - 0.7560091110711503
  - 0.716538519523594
  - 0.7107453076596004
  - 0.7223999052357262
  train_jaccard_macro:
  - 0.8655868433228077
  - 0.8690289845813101
  - 0.8645691228992801
  - 0.8688043780651205
  - 0.8633814181119476
  train_jaccard_macro_oob:
  - 0.7062942027903757
  - 0.729123637874263
  - 0.7043878838726724
  - 0.7003689058631343
  - 0.7100813695716245
  train_jaccard_micro:
  - 0.8616822429906542
  - 0.8651685393258427
  - 0.8609022556390977
  - 0.8646329837940896
  - 0.8597785977859779
  train_jaccard_micro_oob:
  - 0.6867061812023709
  - 0.7157622739018088
  - 0.6851063829787234
  - 0.6804123711340206
  - 0.6912751677852349
  train_jaccard_samples:
  - 0.8776534710269649
  - 0.8803786574870913
  - 0.8757575757575757
  - 0.8802220274612913
  - 0.8745748299319727
  train_jaccard_samples_oob:
  - 0.700229489386116
  - 0.72877223178428
  - 0.6976911976911977
  - 0.6932515337423313
  - 0.7036564625850341
  train_jaccard_weighted:
  - 0.897395194237845
  - 0.9033446257934283
  - 0.8984480446782017
  - 0.9091231155048072
  - 0.89070698858625
  train_jaccard_weighted_oob:
  - 0.5721073375958085
  - 0.6169794034367454
  - 0.5728885177613092
  - 0.5662880544738371
  - 0.5790915411027743
  train_label_ranking_average_precision_score:
  - 0.8820281124497993
  - 0.8992971887550201
  - 0.8964646464646464
  - 0.8936605316973415
  - 0.8985119047619047
  train_label_ranking_average_precision_score_oob:
  - 0.707714190093708
  - 0.7488286479250333
  - 0.7086868686868687
  - 0.7273858214042263
  - 0.709755291005291
  train_matthews_corrcoef_macro:
  - 0.3148602023970836
  - 0.31677826725179353
  - 0.3146894466163328
  - 0.3208432976187301
  - 0.3111396174516597
  train_matthews_corrcoef_macro_oob:
  - 0.07989680331148057
  - 0.13108933673642184
  - 0.07344340376553585
  - 0.07329400368539596
  - 0.0812230347080517
  train_matthews_corrcoef_micro:
  - 0.7617846019874902
  - 0.7660303756960815
  - 0.759431825037182
  - 0.7702250525262396
  - 0.7538993925220151
  train_matthews_corrcoef_micro_oob:
  - 0.2611644775993213
  - 0.37886042904188966
  - 0.25072847068846116
  - 0.24690287356106788
  - 0.2557404806566202
  train_matthews_corrcoef_samples:
  - 0.6486409778297331
  - 0.6627347267045537
  - 0.6386758127328621
  - 0.6600092582878665
  - 0.6430579796119223
  train_matthews_corrcoef_samples_oob:
  - 0.13774042809679127
  - 0.21288743002290986
  - 0.13440627711293734
  - 0.12614894270041951
  - 0.12538637538135328
  train_matthews_corrcoef_weighted:
  - 0.6423140960933373
  - 0.6481132153848949
  - 0.6390833085110021
  - 0.6529895566106744
  - 0.6318665913021427
  train_matthews_corrcoef_weighted_oob:
  - 0.1624091877644495
  - 0.2683289929871864
  - 0.14885375151840355
  - 0.14939195875702116
  - 0.16462749600825383
  train_ndgc:
  - 0.9145111883769463
  - 0.9271626094628863
  - 0.9249632503025486
  - 0.9239619225463761
  - 0.925737073762164
  train_ndgc_oob:
  - 0.782221212024007
  - 0.8133804873395964
  - 0.7829221679646535
  - 0.7974346262281907
  - 0.7838169546756438
  train_neg_coverage_error:
  - -1.5903614457831325
  - -1.5240963855421688
  - -1.5272727272727273
  - -1.5828220858895705
  - -1.5178571428571428
  train_neg_coverage_error_oob:
  - -2.3132530120481927
  - -2.144578313253012
  - -2.242424242424242
  - -2.208588957055215
  - -2.1904761904761907
  train_neg_hamming_loss_macro:
  - -0.07429718875502007
  - -0.07228915662650603
  - -0.07474747474747474
  - -0.07259713701431493
  - -0.07539682539682539
  train_neg_hamming_loss_macro_oob:
  - -0.1857429718875502
  - -0.16566265060240964
  - -0.18686868686868685
  - -0.1901840490797546
  - -0.18253968253968256
  train_neg_hamming_loss_micro:
  - -0.07429718875502007
  - -0.07228915662650602
  - -0.07474747474747474
  - -0.07259713701431493
  - -0.07539682539682539
  train_neg_hamming_loss_micro_oob:
  - -0.1857429718875502
  - -0.16566265060240964
  - -0.18686868686868688
  - -0.1901840490797546
  - -0.18253968253968253
  train_neg_hamming_loss_samples:
  - -0.07429718875502007
  - -0.07228915662650602
  - -0.07474747474747476
  - -0.07259713701431492
  - -0.07539682539682539
  train_neg_hamming_loss_samples_oob:
  - -0.18574297188755018
  - -0.16566265060240964
  - -0.18686868686868688
  - -0.1901840490797546
  - -0.18253968253968256
  train_neg_hamming_loss_weighted:
  - -0.056234791382277875
  - -0.052928130432176465
  - -0.055600783958992914
  - -0.04996051752414505
  - -0.05981994787964937
  train_neg_hamming_loss_weighted_oob:
  - -0.2838447385601519
  - -0.2439908889288497
  - -0.28346148047640585
  - -0.2892546923403997
  - -0.2776000947642739
  train_neg_label_ranking_loss:
  - -0.06889223560910308
  - -0.059939759036144576
  - -0.05863636363636364
  - -0.06264485344239946
  - -0.062119708994709
  train_neg_label_ranking_loss_oob:
  - -0.21676706827309236
  - -0.18596050870147254
  - -0.20491582491582494
  - -0.19376278118609408
  - -0.19966931216931216
  train_precision_macro:
  - 0.9257028112449798
  - 0.9277108433734939
  - 0.9252525252525253
  - 0.927402862985685
  - 0.9246031746031748
  train_precision_macro_oob:
  - 0.8142570281124497
  - 0.8343373493975902
  - 0.8131313131313131
  - 0.8098159509202453
  - 0.8174603174603176
  train_precision_micro:
  - 0.9257028112449799
  - 0.927710843373494
  - 0.9252525252525252
  - 0.9274028629856851
  - 0.9246031746031746
  train_precision_micro_oob:
  - 0.8142570281124498
  - 0.8343373493975904
  - 0.8131313131313131
  - 0.8098159509202454
  - 0.8174603174603174
  train_precision_samples:
  - 0.92570281124498
  - 0.927710843373494
  - 0.9252525252525252
  - 0.927402862985685
  - 0.9246031746031749
  train_precision_samples_oob:
  - 0.8142570281124496
  - 0.8343373493975904
  - 0.813131313131313
  - 0.8098159509202454
  - 0.8174603174603173
  train_precision_weighted:
  - 0.9437652086177222
  - 0.9470718695678236
  - 0.9443992160410071
  - 0.950039482475855
  - 0.9401800521203505
  train_precision_weighted_oob:
  - 0.7161552614398481
  - 0.7560091110711503
  - 0.716538519523594
  - 0.7107453076596004
  - 0.7223999052357262
  train_recall_macro:
  - 0.9257028112449798
  - 0.9277108433734939
  - 0.9252525252525253
  - 0.927402862985685
  - 0.9246031746031748
  train_recall_macro_oob:
  - 0.8142570281124497
  - 0.8343373493975902
  - 0.8131313131313131
  - 0.8098159509202453
  - 0.8174603174603176
  train_recall_micro:
  - 0.9257028112449799
  - 0.927710843373494
  - 0.9252525252525252
  - 0.9274028629856851
  - 0.9246031746031746
  train_recall_micro_oob:
  - 0.8142570281124498
  - 0.8343373493975904
  - 0.8131313131313131
  - 0.8098159509202454
  - 0.8174603174603174
  train_recall_samples:
  - 0.92570281124498
  - 0.927710843373494
  - 0.9252525252525252
  - 0.927402862985685
  - 0.9246031746031749
  train_recall_samples_oob:
  - 0.8142570281124496
  - 0.8343373493975904
  - 0.813131313131313
  - 0.8098159509202454
  - 0.8174603174603173
  train_recall_weighted:
  - 0.9437652086177222
  - 0.9470718695678236
  - 0.9443992160410071
  - 0.950039482475855
  - 0.9401800521203505
  train_recall_weighted_oob:
  - 0.7161552614398481
  - 0.7560091110711503
  - 0.716538519523594
  - 0.7107453076596004
  - 0.7223999052357262
  train_roc_auc_macro:
  - 0.9967461776377218
  - 0.9941742271686302
  - 0.9967221224598566
  - 0.9973200218879942
  - 0.9954243770756624
  train_roc_auc_macro_oob:
  - 0.6507169841024607
  - 0.7108291168132586
  - 0.70563221496772
  - 0.7111576893358954
  - 0.7019165501581309
  train_roc_auc_micro:
  - 0.9573795339764813
  - 0.9647235520510655
  - 0.9609998171373803
  - 0.9614677962641625
  - 0.960963460269902
  train_roc_auc_micro_oob:
  - 0.8019865945247516
  - 0.8267154792077349
  - 0.8151448082780016
  - 0.8166658160661426
  - 0.8147182304092919
  train_roc_auc_samples:
  - 0.9311077643908968
  - 0.9400602409638555
  - 0.9413636363636363
  - 0.9373551465576005
  - 0.9378802910052909
  train_roc_auc_samples_oob:
  - 0.7832329317269076
  - 0.8140394912985275
  - 0.795084175084175
  - 0.8062372188139061
  - 0.800330687830688
  train_roc_auc_weighted:
  - 0.9975007330518415
  - 0.9937420222121714
  - 0.9969623357555084
  - 0.9971643351097657
  - 0.9982496953180814
  train_roc_auc_weighted_oob:
  - 0.6898379547091191
  - 0.756289233845204
  - 0.7214341341205496
  - 0.7152414524425851
  - 0.7255586686880435
start: 2023-12-21 10:26:21.126095
wrapper: null
