active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/gJmZmZmZ+b9AMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:13:34.908836
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__2
  params: {}
hash: b6e309a476ed779fafaca71ed36335480f28cf9ec7f261190e4b4b6e5318fa52
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b6e309a_20231221T071322414943_embedding_weak__2_VirusGO.yml
results:
  fit_time:
  - 7.039316654205322
  - 6.979799747467041
  - 7.079476356506348
  - 7.3593361377716064
  - 7.357411861419678
  score_time:
  - 1.291550874710083
  - 1.334552526473999
  - 1.3153457641601562
  - 1.2367353439331055
  - 1.3062386512756348
  test_average_precision_macro:
  - 0.9635289400131111
  - 0.9896634158785435
  - 0.9405576656054712
  - 0.859832788324255
  - 0.9751527571813039
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9312124983318202
  - 0.9113448485723044
  - 0.9026017184193802
  - 0.8348075409240265
  - 0.9376350348754033
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9603174603174602
  - 0.9520325203252032
  - 0.9484126984126983
  - 0.8980620155038758
  - 0.9431623931623931
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9688570402361153
  - 0.9830747504129858
  - 0.9440938559541727
  - 0.8671762351202557
  - 0.9800338468720823
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9325396825396824
  - 0.9227642276422764
  - 0.9365079365079366
  - 0.9147286821705425
  - 0.9273504273504275
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9325396825396826
  - 0.9227642276422764
  - 0.9365079365079365
  - 0.9147286821705426
  - 0.9273504273504274
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9325396825396827
  - 0.9227642276422765
  - 0.9365079365079367
  - 0.9147286821705427
  - 0.9273504273504275
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9290382819794584
  - 0.928780487804878
  - 0.9435107376283847
  - 0.8944186046511627
  - 0.9287179487179488
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8740447957839264
  - 0.8573760864458538
  - 0.8814443729509454
  - 0.8445030788925331
  - 0.8657719525700239
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8736059479553904
  - 0.8566037735849057
  - 0.8805970149253731
  - 0.8428571428571429
  - 0.8645418326693227
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8894557823129252
  - 0.8745644599303137
  - 0.8928571428571429
  - 0.8665559246954595
  - 0.8840048840048842
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8681495259500375
  - 0.8676814658210007
  - 0.8940882085591536
  - 0.8095426513049084
  - 0.8674903978607893
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9603174603174602
  - 0.9520325203252032
  - 0.9484126984126983
  - 0.898062015503876
  - 0.9431623931623931
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5583349670975805
  - 0.3946336167878857
  - 0.5038348388629698
  - 0.4380253785208834
  - 0.40430952785385976
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7813602312794163
  - 0.7482740966206982
  - 0.7948323447868619
  - 0.71345246728631
  - 0.7744716731827489
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7027359777158894
  - 0.6804235755146593
  - 0.7305748215433622
  - 0.7065074913519698
  - 0.7072086879508765
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7405593957755852
  - 0.6642234721445874
  - 0.742719859852682
  - 0.6430806974940925
  - 0.6927901056854212
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9717264297586323
  - 0.9685094468698986
  - 0.9629390429389052
  - 0.9247335222426266
  - 0.9617797667756767
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3095238095238095
  - -1.4634146341463414
  - -1.3333333333333333
  - -1.5116279069767442
  - -1.5384615384615385
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.06746031746031746
  - -0.0772357723577236
  - -0.06349206349206349
  - -0.08527131782945736
  - -0.07264957264957266
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.06746031746031746
  - -0.07723577235772358
  - -0.06349206349206349
  - -0.08527131782945736
  - -0.07264957264957266
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.06746031746031746
  - -0.07723577235772357
  - -0.06349206349206347
  - -0.08527131782945735
  - -0.07264957264957263
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07096171802054155
  - -0.07121951219512196
  - -0.05648926237161531
  - -0.1055813953488372
  - -0.07128205128205128
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.017261904761904763
  - -0.03780487804878049
  - -0.022023809523809525
  - -0.06679586563307494
  - -0.041025641025641026
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9325396825396824
  - 0.9227642276422764
  - 0.9365079365079366
  - 0.9147286821705425
  - 0.9273504273504275
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9325396825396826
  - 0.9227642276422764
  - 0.9365079365079365
  - 0.9147286821705426
  - 0.9273504273504274
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9325396825396827
  - 0.9227642276422765
  - 0.9365079365079367
  - 0.9147286821705427
  - 0.9273504273504275
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9290382819794584
  - 0.928780487804878
  - 0.9435107376283847
  - 0.8944186046511627
  - 0.9287179487179488
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9325396825396824
  - 0.9227642276422764
  - 0.9365079365079366
  - 0.9147286821705425
  - 0.9273504273504275
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9325396825396826
  - 0.9227642276422764
  - 0.9365079365079365
  - 0.9147286821705426
  - 0.9273504273504274
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9325396825396827
  - 0.9227642276422765
  - 0.9365079365079367
  - 0.9147286821705427
  - 0.9273504273504275
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9290382819794584
  - 0.928780487804878
  - 0.9435107376283847
  - 0.8944186046511627
  - 0.9287179487179488
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9838660512938119
  - 0.9947531512605042
  - 0.9815281902234579
  - 0.9446868490986139
  - 0.9928255477275084
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9766852014437616
  - 0.9691836734693878
  - 0.9750268266510583
  - 0.9445192307692307
  - 0.9779347826086957
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9827380952380952
  - 0.9621951219512196
  - 0.9779761904761906
  - 0.9332041343669251
  - 0.9589743589743589
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9805125558995529
  - 0.9904617647058822
  - 0.9772725932478253
  - 0.9302564102564103
  - 0.9911948051948052
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9498469189858169
  - 0.9601992756955213
  - 0.969041057046545
  - 0.9839149525771053
  - 0.9462511406092863
  train_average_precision_macro_oob:
  - 0.9032212026878681
  - 0.9193171785721231
  - 0.9324703943040745
  - 0.9536040177660814
  - 0.9189050630425873
  train_average_precision_micro:
  - 0.8790078741662031
  - 0.8973914461434931
  - 0.9207236095268088
  - 0.9351577324280403
  - 0.8894464126351662
  train_average_precision_micro_oob:
  - 0.8668388165510948
  - 0.8638021311744997
  - 0.8805110002804755
  - 0.911525943434846
  - 0.8690601269468078
  train_average_precision_samples:
  - 0.9535353535353535
  - 0.945983935742972
  - 0.9515151515151515
  - 0.9674796747967479
  - 0.9563492063492065
  train_average_precision_samples_oob:
  - 0.9267003367003366
  - 0.8983935742971887
  - 0.9165656565656567
  - 0.9456300813008129
  - 0.9298611111111111
  train_average_precision_weighted:
  - 0.9236114365506897
  - 0.9451485401199766
  - 0.9612962486978001
  - 0.9719907968477404
  - 0.9299138511015658
  train_average_precision_weighted_oob:
  - 0.9010388160085081
  - 0.9205357553710795
  - 0.9329372948687953
  - 0.9535821303847175
  - 0.9174704898640639
  train_f1_macro:
  - 0.9414141414141414
  - 0.9267068273092369
  - 0.9313131313131314
  - 0.9349593495934959
  - 0.935515873015873
  train_f1_macro_oob:
  - 0.9252525252525253
  - 0.9166666666666666
  - 0.9212121212121214
  - 0.9247967479674797
  - 0.9265873015873017
  train_f1_micro:
  - 0.9414141414141414
  - 0.9267068273092369
  - 0.9313131313131313
  - 0.9349593495934959
  - 0.935515873015873
  train_f1_micro_oob:
  - 0.9252525252525252
  - 0.9166666666666666
  - 0.9212121212121213
  - 0.9247967479674797
  - 0.9265873015873016
  train_f1_samples:
  - 0.9414141414141415
  - 0.9267068273092368
  - 0.9313131313131314
  - 0.934959349593496
  - 0.9355158730158731
  train_f1_samples_oob:
  - 0.9252525252525253
  - 0.9166666666666667
  - 0.9212121212121213
  - 0.9247967479674798
  - 0.9265873015873017
  train_f1_weighted:
  - 0.9380069350218604
  - 0.9296194679708936
  - 0.9293230815618875
  - 0.9392356918618691
  - 0.9358203677510608
  train_f1_weighted_oob:
  - 0.9266998341625207
  - 0.918048431349159
  - 0.9172621739785918
  - 0.9289120985269258
  - 0.9251826968411127
  train_jaccard_macro:
  - 0.8895759757859484
  - 0.8641830836647549
  - 0.8719737567691744
  - 0.8783845284275791
  - 0.8792596332553703
  train_jaccard_macro_oob:
  - 0.8616361188891634
  - 0.8474066823418535
  - 0.8545742894808059
  - 0.8611001781397944
  - 0.8637493867633591
  train_jaccard_micro:
  - 0.8893129770992366
  - 0.8634237605238541
  - 0.8714555765595463
  - 0.8778625954198473
  - 0.8788443616029823
  train_jaccard_micro_oob:
  - 0.8609022556390977
  - 0.8461538461538461
  - 0.8539325842696629
  - 0.8601134215500945
  - 0.8632162661737524
  train_jaccard_samples:
  - 0.9054834054834054
  - 0.8802352266207686
  - 0.8894660894660894
  - 0.8935830429732868
  - 0.8948412698412699
  train_jaccard_samples_oob:
  - 0.8786435786435787
  - 0.863453815261044
  - 0.8737373737373737
  - 0.8765969802555168
  - 0.8796768707482993
  train_jaccard_weighted:
  - 0.8834084784525146
  - 0.8688319525858602
  - 0.8681392079528234
  - 0.8857390554341444
  - 0.8795532531286113
  train_jaccard_weighted_oob:
  - 0.8637467232415935
  - 0.8491969781491673
  - 0.8473201307728522
  - 0.8680601742868517
  - 0.8610290371060353
  train_label_ranking_average_precision_score:
  - 0.9535353535353535
  - 0.9459839357429717
  - 0.9515151515151513
  - 0.9674796747967479
  - 0.9563492063492062
  train_label_ranking_average_precision_score_oob:
  - 0.9267003367003366
  - 0.8983935742971889
  - 0.9165656565656567
  - 0.945630081300813
  - 0.9298611111111111
  train_matthews_corrcoef_macro:
  - 0.6007805356072803
  - 0.39783921140401796
  - 0.48782625156501846
  - 0.49810817604436136
  - 0.5090444923354277
  train_matthews_corrcoef_macro_oob:
  - 0.4327996391677021
  - 0.3513513046815972
  - 0.42438295501281503
  - 0.4816852111928512
  - 0.4451965785051198
  train_matthews_corrcoef_micro:
  - 0.8123076546148963
  - 0.7615953914439498
  - 0.7780276706979729
  - 0.7920348497338028
  - 0.7906190918618798
  train_matthews_corrcoef_micro_oob:
  - 0.7568744879286428
  - 0.7263395318010943
  - 0.7428748092286418
  - 0.7575596895096026
  - 0.7589619641852213
  train_matthews_corrcoef_samples:
  - 0.7870224110615635
  - 0.6918300407294615
  - 0.7328601328268957
  - 0.7250860831314451
  - 0.7513898933030471
  train_matthews_corrcoef_samples_oob:
  - 0.6932956773399431
  - 0.6338032001750418
  - 0.6794444094201207
  - 0.6663515981800202
  - 0.6997375679801067
  train_matthews_corrcoef_weighted:
  - 0.7808338346914934
  - 0.67820805007264
  - 0.7178073749986733
  - 0.734882791646255
  - 0.7338123933370779
  train_matthews_corrcoef_weighted_oob:
  - 0.6885525805837451
  - 0.634127893002952
  - 0.6693849640309509
  - 0.7082772028461967
  - 0.6879466047824931
  train_ndgc:
  - 0.9670836113246178
  - 0.9619052321956094
  - 0.96496594444222
  - 0.9766809185514923
  - 0.9692432380424675
  train_ndgc_oob:
  - 0.9482114233970961
  - 0.9269531795425922
  - 0.9407324238846584
  - 0.9630346813160195
  - 0.9503746310474028
  train_neg_coverage_error:
  - -1.3454545454545455
  - -1.3795180722891567
  - -1.3454545454545455
  - -1.3170731707317074
  - -1.3273809523809523
  train_neg_coverage_error_oob:
  - -1.490909090909091
  - -1.5542168674698795
  - -1.509090909090909
  - -1.4573170731707317
  - -1.4583333333333333
  train_neg_hamming_loss_macro:
  - -0.05858585858585858
  - -0.07329317269076306
  - -0.0686868686868687
  - -0.06504065040650407
  - -0.06448412698412699
  train_neg_hamming_loss_macro_oob:
  - -0.07474747474747474
  - -0.08333333333333333
  - -0.07878787878787878
  - -0.07520325203252032
  - -0.07341269841269842
  train_neg_hamming_loss_micro:
  - -0.05858585858585859
  - -0.07329317269076305
  - -0.06868686868686869
  - -0.06504065040650407
  - -0.06448412698412699
  train_neg_hamming_loss_micro_oob:
  - -0.07474747474747474
  - -0.08333333333333333
  - -0.07878787878787878
  - -0.07520325203252033
  - -0.07341269841269842
  train_neg_hamming_loss_samples:
  - -0.05858585858585858
  - -0.07329317269076306
  - -0.06868686868686869
  - -0.06504065040650404
  - -0.06448412698412698
  train_neg_hamming_loss_samples_oob:
  - -0.07474747474747474
  - -0.08333333333333333
  - -0.07878787878787878
  - -0.07520325203252032
  - -0.0734126984126984
  train_neg_hamming_loss_weighted:
  - -0.061993064978139605
  - -0.07038053202910653
  - -0.07067691843811247
  - -0.06076430813813089
  - -0.06417963224893918
  train_neg_hamming_loss_weighted_oob:
  - -0.07330016583747927
  - -0.08195156865084098
  - -0.08273782602140813
  - -0.07108790147307413
  - -0.07481730315888732
  train_neg_label_ranking_loss:
  - -0.022946127946127947
  - -0.028229585006693446
  - -0.02393939393939394
  - -0.015701219512195122
  - -0.021792328042328044
  train_neg_label_ranking_loss_oob:
  - -0.049141414141414146
  - -0.060826639892904946
  - -0.05149831649831651
  - -0.035975609756097565
  - -0.04426256613756614
  train_precision_macro:
  - 0.9414141414141414
  - 0.9267068273092369
  - 0.9313131313131314
  - 0.9349593495934959
  - 0.935515873015873
  train_precision_macro_oob:
  - 0.9252525252525253
  - 0.9166666666666666
  - 0.9212121212121214
  - 0.9247967479674797
  - 0.9265873015873017
  train_precision_micro:
  - 0.9414141414141414
  - 0.9267068273092369
  - 0.9313131313131313
  - 0.9349593495934959
  - 0.935515873015873
  train_precision_micro_oob:
  - 0.9252525252525252
  - 0.9166666666666666
  - 0.9212121212121213
  - 0.9247967479674797
  - 0.9265873015873016
  train_precision_samples:
  - 0.9414141414141415
  - 0.9267068273092368
  - 0.9313131313131314
  - 0.934959349593496
  - 0.9355158730158731
  train_precision_samples_oob:
  - 0.9252525252525253
  - 0.9166666666666667
  - 0.9212121212121213
  - 0.9247967479674798
  - 0.9265873015873017
  train_precision_weighted:
  - 0.9380069350218604
  - 0.9296194679708936
  - 0.9293230815618875
  - 0.9392356918618691
  - 0.9358203677510608
  train_precision_weighted_oob:
  - 0.9266998341625207
  - 0.918048431349159
  - 0.9172621739785918
  - 0.9289120985269258
  - 0.9251826968411127
  train_recall_macro:
  - 0.9414141414141414
  - 0.9267068273092369
  - 0.9313131313131314
  - 0.9349593495934959
  - 0.935515873015873
  train_recall_macro_oob:
  - 0.9252525252525253
  - 0.9166666666666666
  - 0.9212121212121214
  - 0.9247967479674797
  - 0.9265873015873017
  train_recall_micro:
  - 0.9414141414141414
  - 0.9267068273092369
  - 0.9313131313131313
  - 0.9349593495934959
  - 0.935515873015873
  train_recall_micro_oob:
  - 0.9252525252525252
  - 0.9166666666666666
  - 0.9212121212121213
  - 0.9247967479674797
  - 0.9265873015873016
  train_recall_samples:
  - 0.9414141414141415
  - 0.9267068273092368
  - 0.9313131313131314
  - 0.934959349593496
  - 0.9355158730158731
  train_recall_samples_oob:
  - 0.9252525252525253
  - 0.9166666666666667
  - 0.9212121212121213
  - 0.9247967479674798
  - 0.9265873015873017
  train_recall_weighted:
  - 0.9380069350218604
  - 0.9296194679708936
  - 0.9293230815618875
  - 0.9392356918618691
  - 0.9358203677510608
  train_recall_weighted_oob:
  - 0.9266998341625207
  - 0.918048431349159
  - 0.9172621739785918
  - 0.9289120985269258
  - 0.9251826968411127
  train_roc_auc_macro:
  - 0.9828065123949089
  - 0.9866433111706221
  - 0.9881774363032121
  - 0.9928439620236901
  - 0.9852155337315202
  train_roc_auc_macro_oob:
  - 0.9645130171723902
  - 0.9682868948861597
  - 0.9717025016319374
  - 0.9840271024788905
  - 0.9714200987315854
  train_roc_auc_micro:
  - 0.9756319795193865
  - 0.9741501857994364
  - 0.9794405664957847
  - 0.9838729077511332
  - 0.9755331302361006
  train_roc_auc_micro_oob:
  - 0.9609115386313049
  - 0.9578646781554729
  - 0.9604512292781971
  - 0.9725570383125268
  - 0.9638233054074637
  train_roc_auc_samples:
  - 0.9770538720538722
  - 0.9717704149933067
  - 0.9760606060606062
  - 0.984298780487805
  - 0.978207671957672
  train_roc_auc_samples_oob:
  - 0.9508585858585857
  - 0.939173360107095
  - 0.9485016835016836
  - 0.9640243902439024
  - 0.9557374338624339
  train_roc_auc_weighted:
  - 0.9700151294986156
  - 0.9771664730248535
  - 0.9806582050786554
  - 0.9861821375592146
  - 0.9751499839746484
  train_roc_auc_weighted_oob:
  - 0.9587642548232618
  - 0.9637202380952381
  - 0.9652509050821205
  - 0.9791550782260832
  - 0.967002335718033
start: 2023-12-21 07:13:22.414943
wrapper: null
