active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmFsCAMzMzMzMDQIDMzMzMzATAwJmZmZmZHUAAmZmZmZn5vw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 16:00:18.504179
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__9
  params: {}
hash: 6d43716d1506af0145f5d7ed1d33be25af9c9e0d962b30c85f2ee72b766d9815
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6d43716_20231222T152641830741_embedding_proba__9_scene.yml
results:
  fit_time:
  - 1898.5802247524261
  - 1799.2592358589172
  - 1762.2282893657684
  - 1855.3629055023193
  - 1837.0669870376587
  score_time:
  - 21.805846691131592
  - 18.132222414016724
  - 19.251636505126953
  - 21.137709379196167
  - 22.646329879760742
  test_average_precision_macro:
  - 0.8352129405641401
  - 0.824611794762442
  - 0.8748499479129186
  - 0.8163516195806823
  - 0.8433781074664477
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8307935015698896
  - 0.8146967523224324
  - 0.8720422336655942
  - 0.8100439617549238
  - 0.8439383624463127
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8766598220396987
  - 0.8779053583855254
  - 0.9001721763085399
  - 0.8784458509142054
  - 0.8817805383022774
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8245467166973028
  - 0.8121607699043287
  - 0.8649091423763919
  - 0.8021979493217358
  - 0.8332186103373532
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.921286789869952
  - 0.9154488517745304
  - 0.931473829201102
  - 0.9177215189873418
  - 0.9240855762594893
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.921286789869952
  - 0.9154488517745303
  - 0.9314738292011019
  - 0.9177215189873418
  - 0.9240855762594893
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.921286789869952
  - 0.9154488517745304
  - 0.931473829201102
  - 0.9177215189873418
  - 0.9240855762594894
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9171905845417139
  - 0.9106899851802797
  - 0.9273868023868024
  - 0.9125353324321003
  - 0.9197552370540343
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8568237485937934
  - 0.8467846515431843
  - 0.8736907654072511
  - 0.8519228836545288
  - 0.8611343347711666
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8540609137055838
  - 0.8440808469682387
  - 0.8717370286819207
  - 0.847953216374269
  - 0.8588838999358563
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8759655813043903
  - 0.867531563773735
  - 0.8914797323888233
  - 0.8714587100663049
  - 0.8801143645864142
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8499520637448896
  - 0.8389091459731184
  - 0.8666783553488646
  - 0.8432101203194475
  - 0.8537999925535353
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8766598220396985
  - 0.8779053583855253
  - 0.9001721763085397
  - 0.8784458509142051
  - 0.8817805383022771
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.720598932082794
  - 0.7061393103185839
  - 0.7608189396583809
  - 0.717159430430165
  - 0.734878457011047
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7142888576619415
  - 0.6972271430093827
  - 0.7535989194695146
  - 0.7075025485966924
  - 0.7263647875512929
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6786069120589471
  - 0.6717613068079545
  - 0.7220608741038381
  - 0.68261618480779
  - 0.6949147905442559
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7083918422853873
  - 0.6921958639736325
  - 0.7489727727005712
  - 0.7019095088198567
  - 0.7221208952404696
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9091560902165433
  - 0.910516188285374
  - 0.926619376126221
  - 0.9100596674248673
  - 0.9126571232366876
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4147843942505134
  - -1.4342379958246347
  - -1.353305785123967
  - -1.4367088607594938
  - -1.4409937888198758
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07871321013004792
  - -0.08455114822546972
  - -0.06852617079889807
  - -0.08227848101265822
  - -0.0759144237405107
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07871321013004791
  - -0.08455114822546973
  - -0.06852617079889807
  - -0.08227848101265822
  - -0.0759144237405107
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07871321013004791
  - -0.08455114822546973
  - -0.06852617079889807
  - -0.08227848101265822
  - -0.07591442374051069
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0828094154582861
  - -0.08931001481972033
  - -0.07261319761319762
  - -0.08746466756789972
  - -0.08024476294596554
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06842915811088296
  - -0.06790187891440501
  - -0.05459710743801654
  - -0.06914556962025316
  - -0.07179089026915113
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.921286789869952
  - 0.9154488517745304
  - 0.931473829201102
  - 0.9177215189873418
  - 0.9240855762594893
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.921286789869952
  - 0.9154488517745303
  - 0.9314738292011019
  - 0.9177215189873418
  - 0.9240855762594893
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.921286789869952
  - 0.9154488517745304
  - 0.931473829201102
  - 0.9177215189873418
  - 0.9240855762594894
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9171905845417139
  - 0.9106899851802797
  - 0.9273868023868024
  - 0.9125353324321003
  - 0.9197552370540343
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.921286789869952
  - 0.9154488517745304
  - 0.931473829201102
  - 0.9177215189873418
  - 0.9240855762594893
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.921286789869952
  - 0.9154488517745303
  - 0.9314738292011019
  - 0.9177215189873418
  - 0.9240855762594893
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.921286789869952
  - 0.9154488517745304
  - 0.931473829201102
  - 0.9177215189873418
  - 0.9240855762594894
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9171905845417139
  - 0.9106899851802797
  - 0.9273868023868024
  - 0.9125353324321003
  - 0.9197552370540343
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9445333934133914
  - 0.9350410843539677
  - 0.9552155173504931
  - 0.9366312594431921
  - 0.9458800021876254
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9490159579593856
  - 0.9406426718552662
  - 0.9593130131688388
  - 0.9422861597335412
  - 0.9496034450684294
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9315708418891171
  - 0.9320981210855951
  - 0.9454028925619834
  - 0.9308544303797469
  - 0.9282091097308488
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.939237075485889
  - 0.92823292981202
  - 0.9509008029266443
  - 0.9303581265035624
  - 0.9409511558512899
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.997291532963418
  - 0.997561206841334
  - 0.9972032854549332
  - 0.9973628289777304
  - 0.997531595038256
  train_average_precision_macro_oob:
  - 0.9732052655426596
  - 0.9760959272464907
  - 0.9723430748935157
  - 0.976613463413389
  - 0.9749230785208661
  train_average_precision_micro:
  - 0.9972823541313551
  - 0.9975781310148111
  - 0.9973668113638111
  - 0.9975482276263402
  - 0.9976319449483598
  train_average_precision_micro_oob:
  - 0.9731882072754588
  - 0.9758947813997364
  - 0.9722131940912702
  - 0.9761168246043364
  - 0.9749340448850734
  train_average_precision_samples:
  - 0.990234375
  - 0.9921766943291839
  - 0.9899029294505114
  - 0.9907311605449216
  - 0.9913374913374914
  train_average_precision_samples_oob:
  - 0.9695920138888888
  - 0.9699775242047027
  - 0.968322066215982
  - 0.9692533195378513
  - 0.9724012474012473
  train_average_precision_weighted:
  - 0.9971883977800261
  - 0.9974867229025692
  - 0.997121547295435
  - 0.9973220096415516
  - 0.9974462914947224
  train_average_precision_weighted_oob:
  - 0.9719929926001314
  - 0.9753575721195755
  - 0.9715266031279179
  - 0.9762694845768753
  - 0.974083750927495
  train_f1_macro:
  - 0.9827256944444445
  - 0.9831431535269709
  - 0.9828393135725427
  - 0.9836178651491637
  - 0.9831947331947332
  train_f1_macro_oob:
  - 0.9657986111111111
  - 0.9648167358229599
  - 0.9635985439417577
  - 0.964476633902397
  - 0.967082467082467
  train_f1_micro:
  - 0.9827256944444445
  - 0.9831431535269709
  - 0.982839313572543
  - 0.9836178651491636
  - 0.9831947331947332
  train_f1_micro_oob:
  - 0.9657986111111111
  - 0.9648167358229599
  - 0.9635985439417577
  - 0.964476633902397
  - 0.967082467082467
  train_f1_samples:
  - 0.9827256944444446
  - 0.9831431535269709
  - 0.982839313572543
  - 0.9836178651491636
  - 0.9831947331947333
  train_f1_samples_oob:
  - 0.9657986111111112
  - 0.9648167358229599
  - 0.9635985439417578
  - 0.964476633902397
  - 0.9670824670824671
  train_f1_weighted:
  - 0.9822145621673923
  - 0.9827972884579884
  - 0.982535653627403
  - 0.9834449217881145
  - 0.9828482328482328
  train_f1_weighted_oob:
  - 0.96507947306886
  - 0.9639946688122507
  - 0.9625748551954658
  - 0.9639660511182587
  - 0.9665288707841899
  train_jaccard_macro:
  - 0.9661059002889344
  - 0.9668970168158039
  - 0.9663246525119141
  - 0.9677919378170383
  - 0.9669901097951973
  train_jaccard_macro_oob:
  - 0.933981961526012
  - 0.9321471426656855
  - 0.9299330322252509
  - 0.9314945065309431
  - 0.9363512527639971
  train_jaccard_micro:
  - 0.9660380578547658
  - 0.9668451925529201
  - 0.9662576687116564
  - 0.9677638276213099
  - 0.9669449650707105
  train_jaccard_micro_oob:
  - 0.933859325163673
  - 0.9320250521920668
  - 0.9297541394882087
  - 0.9313905079100749
  - 0.9362629989936263
  train_jaccard_samples:
  - 0.9711185515873016
  - 0.9717200158071527
  - 0.9712007527920165
  - 0.9723844012514472
  - 0.9718220968220969
  train_jaccard_samples_oob:
  - 0.9436631944444444
  - 0.942217447144833
  - 0.9404947626476486
  - 0.9414923755327274
  - 0.9455994455994455
  train_jaccard_weighted:
  - 0.9651165797712499
  - 0.9662260249139172
  - 0.9657336326406468
  - 0.9674554906541071
  - 0.9663172889493087
  train_jaccard_weighted_oob:
  - 0.9326334174060182
  - 0.9306111613993916
  - 0.9280266945862544
  - 0.9305375865454035
  - 0.9353094346670573
  train_label_ranking_average_precision_score:
  - 0.9902343749999999
  - 0.9921766943291839
  - 0.9899029294505113
  - 0.9907311605449214
  - 0.9913374913374913
  train_label_ranking_average_precision_score_oob:
  - 0.9695920138888887
  - 0.9699775242047026
  - 0.9683220662159818
  - 0.9692533195378512
  - 0.9724012474012472
  train_matthews_corrcoef_macro:
  - 0.9413342675623273
  - 0.9422525069758345
  - 0.941215731389408
  - 0.9434691774347012
  - 0.9425685522431732
  train_matthews_corrcoef_macro_oob:
  - 0.8813986338321165
  - 0.877746085802979
  - 0.8740504964100416
  - 0.8754896710361098
  - 0.8854834948773876
  train_matthews_corrcoef_micro:
  - 0.9406621356141737
  - 0.9419544500270393
  - 0.9409979812230728
  - 0.9435749656579832
  - 0.942230944102632
  train_matthews_corrcoef_micro_oob:
  - 0.8807837878828176
  - 0.8768506629043823
  - 0.8726656331279232
  - 0.875462761251417
  - 0.8852452441646239
  train_matthews_corrcoef_samples:
  - 0.9292331652716637
  - 0.929165098924011
  - 0.9270531481769666
  - 0.928092665287769
  - 0.93129754024634
  train_matthews_corrcoef_samples_oob:
  - 0.8532900493628028
  - 0.8466473054335654
  - 0.8447607633847526
  - 0.8442690954911429
  - 0.8568877254223045
  train_matthews_corrcoef_weighted:
  - 0.9402001569568315
  - 0.9416229726161621
  - 0.9406725467210686
  - 0.9433852651426891
  - 0.941920881383735
  train_matthews_corrcoef_weighted_oob:
  - 0.8801772313525497
  - 0.8761839433449237
  - 0.8718417979306333
  - 0.8749762115382455
  - 0.8847247217980572
  train_ndgc:
  - 0.9928366349533781
  - 0.9942619510242591
  - 0.9925877998494468
  - 0.9931989393946051
  - 0.9936420655849482
  train_ndgc_oob:
  - 0.9779166215795719
  - 0.9781700535449547
  - 0.977002775803484
  - 0.9776383780692168
  - 0.9800723930193699
  train_neg_coverage_error:
  - -1.096875
  - -1.0897302904564314
  - -1.0962038481539262
  - -1.090532850491464
  - -1.0935550935550935
  train_neg_coverage_error_oob:
  - -1.1739583333333334
  - -1.1670124481327802
  - -1.1773270930837234
  - -1.1691670977754784
  - -1.1658004158004158
  train_neg_hamming_loss_macro:
  - -0.017274305555555553
  - -0.016856846473029045
  - -0.0171606864274571
  - -0.016382134850836352
  - -0.016805266805266807
  train_neg_hamming_loss_macro_oob:
  - -0.034201388888888885
  - -0.03518326417704011
  - -0.03640145605824233
  - -0.03552336609760303
  - -0.03291753291753292
  train_neg_hamming_loss_micro:
  - -0.017274305555555557
  - -0.016856846473029045
  - -0.0171606864274571
  - -0.016382134850836352
  - -0.016805266805266804
  train_neg_hamming_loss_micro_oob:
  - -0.03420138888888889
  - -0.03518326417704011
  - -0.036401456058242326
  - -0.03552336609760304
  - -0.03291753291753292
  train_neg_hamming_loss_samples:
  - -0.017274305555555553
  - -0.016856846473029045
  - -0.0171606864274571
  - -0.01638213485083635
  - -0.016805266805266804
  train_neg_hamming_loss_samples_oob:
  - -0.034201388888888885
  - -0.03518326417704012
  - -0.036401456058242326
  - -0.03552336609760303
  - -0.03291753291753292
  train_neg_hamming_loss_weighted:
  - -0.017785437832607644
  - -0.017202711542011445
  - -0.017464346372597042
  - -0.01655507821188561
  - -0.017151767151767153
  train_neg_hamming_loss_weighted_oob:
  - -0.03492052693114014
  - -0.036005331187749304
  - -0.03742514480453432
  - -0.03603394888174123
  - -0.03347112921581007
  train_neg_label_ranking_loss:
  - -0.004010416666666667
  - -0.0033713692946058093
  - -0.00421216848673947
  - -0.0038799793067770304
  - -0.0036642411642411644
  train_neg_label_ranking_loss_oob:
  - -0.018190104166666665
  - -0.017699688796680497
  - -0.019123764950598025
  - -0.01828763579927574
  - -0.01670997920997921
  train_precision_macro:
  - 0.9827256944444445
  - 0.9831431535269709
  - 0.9828393135725427
  - 0.9836178651491637
  - 0.9831947331947332
  train_precision_macro_oob:
  - 0.9657986111111111
  - 0.9648167358229599
  - 0.9635985439417577
  - 0.964476633902397
  - 0.967082467082467
  train_precision_micro:
  - 0.9827256944444445
  - 0.9831431535269709
  - 0.982839313572543
  - 0.9836178651491636
  - 0.9831947331947332
  train_precision_micro_oob:
  - 0.9657986111111111
  - 0.9648167358229599
  - 0.9635985439417577
  - 0.964476633902397
  - 0.967082467082467
  train_precision_samples:
  - 0.9827256944444446
  - 0.9831431535269709
  - 0.982839313572543
  - 0.9836178651491636
  - 0.9831947331947333
  train_precision_samples_oob:
  - 0.9657986111111112
  - 0.9648167358229599
  - 0.9635985439417578
  - 0.964476633902397
  - 0.9670824670824671
  train_precision_weighted:
  - 0.9822145621673923
  - 0.9827972884579884
  - 0.982535653627403
  - 0.9834449217881145
  - 0.9828482328482328
  train_precision_weighted_oob:
  - 0.96507947306886
  - 0.9639946688122507
  - 0.9625748551954658
  - 0.9639660511182587
  - 0.9665288707841899
  train_recall_macro:
  - 0.9827256944444445
  - 0.9831431535269709
  - 0.9828393135725427
  - 0.9836178651491637
  - 0.9831947331947332
  train_recall_macro_oob:
  - 0.9657986111111111
  - 0.9648167358229599
  - 0.9635985439417577
  - 0.964476633902397
  - 0.967082467082467
  train_recall_micro:
  - 0.9827256944444445
  - 0.9831431535269709
  - 0.982839313572543
  - 0.9836178651491636
  - 0.9831947331947332
  train_recall_micro_oob:
  - 0.9657986111111111
  - 0.9648167358229599
  - 0.9635985439417577
  - 0.964476633902397
  - 0.967082467082467
  train_recall_samples:
  - 0.9827256944444446
  - 0.9831431535269709
  - 0.982839313572543
  - 0.9836178651491636
  - 0.9831947331947333
  train_recall_samples_oob:
  - 0.9657986111111112
  - 0.9648167358229599
  - 0.9635985439417578
  - 0.964476633902397
  - 0.9670824670824671
  train_recall_weighted:
  - 0.9822145621673923
  - 0.9827972884579884
  - 0.982535653627403
  - 0.9834449217881145
  - 0.9828482328482328
  train_recall_weighted_oob:
  - 0.96507947306886
  - 0.9639946688122507
  - 0.9625748551954658
  - 0.9639660511182587
  - 0.9665288707841899
  train_roc_auc_macro:
  - 0.9993780604774448
  - 0.9994481772076865
  - 0.9993663173779029
  - 0.9994059826161793
  - 0.999437365202028
  train_roc_auc_macro_oob:
  - 0.9899872903223739
  - 0.9919857602157736
  - 0.9902071927382958
  - 0.9918092119811469
  - 0.9915355732314749
  train_roc_auc_micro:
  - 0.9994052514845554
  - 0.9994725643896978
  - 0.999426916592126
  - 0.9994623018045972
  - 0.9994878132519249
  train_roc_auc_micro_oob:
  - 0.9906548073167833
  - 0.9921788659269062
  - 0.9905611083705883
  - 0.9917964139256987
  - 0.9916642206351709
  train_roc_auc_samples:
  - 0.9959895833333333
  - 0.9966286307053942
  - 0.9957878315132604
  - 0.9961200206932229
  - 0.9963357588357589
  train_roc_auc_samples_oob:
  - 0.9818098958333332
  - 0.9823003112033195
  - 0.980876235049402
  - 0.9817123642007243
  - 0.9832900207900207
  train_roc_auc_weighted:
  - 0.9993463948994483
  - 0.9994249160260417
  - 0.9993412140021347
  - 0.9993909222552511
  - 0.9994124249662695
  train_roc_auc_weighted_oob:
  - 0.989419741512995
  - 0.9916635245903397
  - 0.9897502368735527
  - 0.9914717710267368
  - 0.9911801823917957
start: 2023-12-22 15:26:41.830741
wrapper: null
