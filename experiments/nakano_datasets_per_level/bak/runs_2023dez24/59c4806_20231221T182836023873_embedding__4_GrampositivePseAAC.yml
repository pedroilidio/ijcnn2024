active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AMzMzMzPzvwAzMzMzM/O/AJqZmZmZ6T+AZmZmZmYGQA==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 18:29:03.559531
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__4
  params: {}
hash: 59c480607c78ffcc6cd2252cac5fa38da0c40d2aaca75a0ef38a7bf9fe5fbbf9
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/59c4806_20231221T182836023873_embedding__4_GrampositivePseAAC.yml
results:
  fit_time:
  - 13.087352514266968
  - 13.803393840789795
  - 13.159029483795166
  - 14.030452728271484
  - 13.191524028778076
  score_time:
  - 3.301316738128662
  - 3.589271068572998
  - 3.301189661026001
  - 3.6792988777160645
  - 3.362027645111084
  test_average_precision_macro:
  - 0.3992474734807877
  - 0.4716993805007392
  - 0.3915024662862915
  - 0.4087137529578046
  - 0.39064601922277264
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5016731420910918
  - 0.5273312121242408
  - 0.5310958365283068
  - 0.5470059282673178
  - 0.5196487464801299
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7095238095238093
  - 0.7253968253968255
  - 0.719047619047619
  - 0.7111650485436892
  - 0.7409240924092408
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5085472610763436
  - 0.5113446581788085
  - 0.49587064920728186
  - 0.5321182144147236
  - 0.4950438214432098
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7666666666666666
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.766990291262136
  - 0.7623762376237624
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7666666666666667
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.7669902912621359
  - 0.7623762376237624
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7666666666666667
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.7669902912621359
  - 0.7623762376237624
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7014965986394558
  - 0.702785265049416
  - 0.7243537414965987
  - 0.6938013442867811
  - 0.6885513794097857
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6386598088905158
  - 0.642813843816106
  - 0.6596071413118565
  - 0.641652242918771
  - 0.6361944899072559
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6216216216216216
  - 0.6247582205029013
  - 0.6438356164383562
  - 0.6220472440944882
  - 0.616
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6507936507936506
  - 0.6546031746031745
  - 0.6723809523809523
  - 0.6543689320388345
  - 0.6435643564356435
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5454224674408161
  - 0.548903910272564
  - 0.5740721123695308
  - 0.5373464534829002
  - 0.5313895836312692
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7095238095238096
  - 0.7253968253968252
  - 0.7190476190476189
  - 0.7111650485436892
  - 0.7409240924092408
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1148472016500384
  - 0.12912699008544148
  - 0.16106632703755558
  - 0.12156591175475388
  - 0.1103336798768032
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.26222222222222225
  - 0.28059534566850675
  - 0.3231853071329436
  - 0.28024879801349295
  - 0.25478763471698257
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1873015873015873
  - 0.20232397081767894
  - 0.22857142857142856
  - 0.20948883756494782
  - 0.1773335010150788
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1648317266732687
  - 0.17923616111448978
  - 0.22559491203683946
  - 0.17500085088527165
  - 0.1574272275188162
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7836336056477026
  - 0.7959373198325347
  - 0.7902117243551827
  - 0.7847294468024226
  - 0.8074009005217884
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7523809523809524
  - -1.7428571428571429
  - -1.7714285714285714
  - -1.766990291262136
  - -1.702970297029703
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.23333333333333334
  - -0.23095238095238096
  - -0.21666666666666667
  - -0.23300970873786406
  - -0.2376237623762376
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.23333333333333334
  - -0.23095238095238096
  - -0.21666666666666667
  - -0.23300970873786409
  - -0.2376237623762376
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.23333333333333334
  - -0.23095238095238096
  - -0.21666666666666667
  - -0.23300970873786409
  - -0.2376237623762376
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2985034013605442
  - -0.297214734950584
  - -0.27564625850340135
  - -0.3061986557132188
  - -0.3114486205902144
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2507936507936508
  - -0.24285714285714285
  - -0.2571428571428571
  - -0.2524271844660194
  - -0.22854785478547854
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7666666666666666
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.766990291262136
  - 0.7623762376237624
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7666666666666667
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.7669902912621359
  - 0.7623762376237624
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7666666666666667
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.7669902912621359
  - 0.7623762376237624
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7014965986394558
  - 0.702785265049416
  - 0.7243537414965987
  - 0.6938013442867811
  - 0.6885513794097857
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7666666666666666
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.766990291262136
  - 0.7623762376237624
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7666666666666667
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.7669902912621359
  - 0.7623762376237624
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7666666666666667
  - 0.7690476190476191
  - 0.7833333333333333
  - 0.7669902912621359
  - 0.7623762376237624
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7014965986394558
  - 0.702785265049416
  - 0.7243537414965987
  - 0.6938013442867811
  - 0.6885513794097857
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6668804330778004
  - 0.7421391105947328
  - 0.6946607703453272
  - 0.6280811467562746
  - 0.6679780947855862
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7667120181405895
  - 0.7789027761086408
  - 0.7679213907785336
  - 0.7714473026973027
  - 0.77231235686869
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7492063492063491
  - 0.7571428571428571
  - 0.7428571428571429
  - 0.7475728155339806
  - 0.7714521452145215
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6821611880935147
  - 0.6899447239198314
  - 0.6782296086751534
  - 0.652659378083923
  - 0.6598192145348872
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9991786753299567
  - 0.9990123913273681
  - 0.9994974944738448
  - 0.9994791300796431
  - 0.9997369745996503
  train_average_precision_macro_oob:
  - 0.6072324488615214
  - 0.5634347396192801
  - 0.5773258044667183
  - 0.6092228208448112
  - 0.5831316041610612
  train_average_precision_micro:
  - 0.9802770654328182
  - 0.9783902456005753
  - 0.9798269083407478
  - 0.9801476740464691
  - 0.9807457061610381
  train_average_precision_micro_oob:
  - 0.7119199327331632
  - 0.6837618822168641
  - 0.6899349044772525
  - 0.7039922996868037
  - 0.706728470708841
  train_average_precision_samples:
  - 0.9774557165861514
  - 0.9758454106280193
  - 0.976046698872786
  - 0.9759615384615384
  - 0.9736842105263158
  train_average_precision_samples_oob:
  - 0.779790660225443
  - 0.773953301127214
  - 0.7868357487922706
  - 0.7736378205128205
  - 0.7765151515151516
  train_average_precision_weighted:
  - 0.9989770411441458
  - 0.9989581612020426
  - 0.9993801818707402
  - 0.999337183450064
  - 0.9996518044700132
  train_average_precision_weighted_oob:
  - 0.7565433395734471
  - 0.7181701808681057
  - 0.732461527537525
  - 0.7451881341516285
  - 0.7388043692148064
  train_f1_macro:
  - 0.9408212560386473
  - 0.9341787439613526
  - 0.9402173913043478
  - 0.938701923076923
  - 0.9383971291866028
  train_f1_macro_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_f1_micro:
  - 0.9408212560386473
  - 0.9341787439613527
  - 0.9402173913043478
  - 0.9387019230769231
  - 0.9383971291866029
  train_f1_micro_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_f1_samples:
  - 0.9408212560386473
  - 0.9341787439613527
  - 0.9402173913043478
  - 0.9387019230769231
  - 0.9383971291866029
  train_f1_samples_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_f1_weighted:
  - 0.9421445577051986
  - 0.9342670790903508
  - 0.9408212560386473
  - 0.9405636129979806
  - 0.9390236956026429
  train_f1_weighted_oob:
  - 0.7554839007928252
  - 0.7506864073958225
  - 0.7342243949795436
  - 0.7522604185790343
  - 0.763209159261791
  train_jaccard_macro:
  - 0.890948484180603
  - 0.8796483100718536
  - 0.88949929253784
  - 0.8874548733235199
  - 0.8864907467438317
  train_jaccard_macro_oob:
  - 0.684122081052419
  - 0.6803740365538965
  - 0.6670685671903945
  - 0.6805603218370831
  - 0.6885280251734157
  train_jaccard_micro:
  - 0.8882554161915621
  - 0.8764872521246458
  - 0.8871794871794871
  - 0.8844847112117781
  - 0.8839436619718309
  train_jaccard_micro_oob:
  - 0.6727272727272727
  - 0.6685138539042821
  - 0.6535197204193709
  - 0.6690070210631895
  - 0.6778725539387858
  train_jaccard_samples:
  - 0.9059581320450886
  - 0.8950080515297906
  - 0.9046698872785829
  - 0.9019230769230769
  - 0.9014354066985645
  train_jaccard_samples_oob:
  - 0.6914653784219
  - 0.6863123993558775
  - 0.669565217391304
  - 0.687179487179487
  - 0.6966507177033491
  train_jaccard_weighted:
  - 0.8935000210297063
  - 0.8798160841466502
  - 0.8905613132154726
  - 0.8909993777335242
  - 0.8879237374416594
  train_jaccard_weighted_oob:
  - 0.6090717821629996
  - 0.6031217170463633
  - 0.5830055963747622
  - 0.6053146398929133
  - 0.6190679778470142
  train_label_ranking_average_precision_score:
  - 0.9774557165861513
  - 0.9758454106280192
  - 0.9760466988727856
  - 0.9759615384615382
  - 0.9736842105263155
  train_label_ranking_average_precision_score_oob:
  - 0.7797906602254427
  - 0.7739533011272139
  - 0.7868357487922704
  - 0.7736378205128202
  - 0.7765151515151512
  train_matthews_corrcoef_macro:
  - 0.6180867542695727
  - 0.5998902066669523
  - 0.6169763078681576
  - 0.6131868937423207
  - 0.6150187604122948
  train_matthews_corrcoef_macro_oob:
  - 0.22277849388475018
  - 0.21420784294470466
  - 0.18755526863130245
  - 0.21554899130507904
  - 0.22610663588369476
  train_matthews_corrcoef_micro:
  - 0.8422556665961707
  - 0.8239446494436363
  - 0.8406240663967415
  - 0.8362256744781051
  - 0.8350981137584265
  train_matthews_corrcoef_micro_oob:
  - 0.41184425686452153
  - 0.3977689729316486
  - 0.35231772582974624
  - 0.39871597400060765
  - 0.4231353215815462
  train_matthews_corrcoef_samples:
  - 0.770905073764201
  - 0.7419195665178243
  - 0.7674687217574127
  - 0.7589712759797328
  - 0.7563509582257877
  train_matthews_corrcoef_samples_oob:
  - 0.24433502545502234
  - 0.22984227183183395
  - 0.19038977585759886
  - 0.2327436711659758
  - 0.25395861372818007
  train_matthews_corrcoef_weighted:
  - 0.8230590683136597
  - 0.8023855984471345
  - 0.8205551018090499
  - 0.8159648578018865
  - 0.8151276860998177
  train_matthews_corrcoef_weighted_oob:
  - 0.3283337471454244
  - 0.31456611330256
  - 0.2752399552570388
  - 0.3134407617022764
  - 0.3346702486002792
  train_ndgc:
  - 0.9831009182067357
  - 0.9817522040207419
  - 0.982041996254187
  - 0.9819802407153572
  - 0.9803005733127547
  train_ndgc_oob:
  - 0.836533661306122
  - 0.8318604906540965
  - 0.8415948637996629
  - 0.8319964286109693
  - 0.8336177618587074
  train_neg_coverage_error:
  - -1.0893719806763285
  - -1.0942028985507246
  - -1.0942028985507246
  - -1.0913461538461537
  - -1.0933014354066986
  train_neg_coverage_error_oob:
  - -1.570048309178744
  - -1.5845410628019323
  - -1.5579710144927537
  - -1.5793269230769231
  - -1.5933014354066986
  train_neg_hamming_loss_macro:
  - -0.059178743961352656
  - -0.06582125603864734
  - -0.059782608695652176
  - -0.06129807692307692
  - -0.06160287081339713
  train_neg_hamming_loss_macro_oob:
  - -0.19565217391304346
  - -0.19867149758454106
  - -0.20954106280193235
  - -0.1983173076923077
  - -0.19198564593301434
  train_neg_hamming_loss_micro:
  - -0.059178743961352656
  - -0.06582125603864734
  - -0.059782608695652176
  - -0.06129807692307692
  - -0.06160287081339713
  train_neg_hamming_loss_micro_oob:
  - -0.1956521739130435
  - -0.19867149758454106
  - -0.20954106280193235
  - -0.19831730769230768
  - -0.19198564593301434
  train_neg_hamming_loss_samples:
  - -0.059178743961352656
  - -0.06582125603864734
  - -0.059782608695652176
  - -0.06129807692307692
  - -0.06160287081339713
  train_neg_hamming_loss_samples_oob:
  - -0.1956521739130435
  - -0.19867149758454106
  - -0.20954106280193235
  - -0.19831730769230768
  - -0.19198564593301434
  train_neg_hamming_loss_weighted:
  - -0.05785544229480156
  - -0.06573292090964909
  - -0.059178743961352656
  - -0.05943638700201946
  - -0.06097630439735703
  train_neg_hamming_loss_weighted_oob:
  - -0.2445160992071747
  - -0.24931359260417754
  - -0.2657756050204563
  - -0.24773958142096567
  - -0.23679084073820916
  train_neg_label_ranking_loss:
  - -0.026368760064412237
  - -0.028985507246376812
  - -0.02797906602254428
  - -0.02784455128205128
  - -0.02930622009569378
  train_neg_label_ranking_loss_oob:
  - -0.1859903381642512
  - -0.1926328502415459
  - -0.1825684380032206
  - -0.18990384615384615
  - -0.19577352472089313
  train_precision_macro:
  - 0.9408212560386473
  - 0.9341787439613526
  - 0.9402173913043478
  - 0.938701923076923
  - 0.9383971291866028
  train_precision_macro_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_precision_micro:
  - 0.9408212560386473
  - 0.9341787439613527
  - 0.9402173913043478
  - 0.9387019230769231
  - 0.9383971291866029
  train_precision_micro_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_precision_samples:
  - 0.9408212560386473
  - 0.9341787439613527
  - 0.9402173913043478
  - 0.9387019230769231
  - 0.9383971291866029
  train_precision_samples_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_precision_weighted:
  - 0.9421445577051986
  - 0.9342670790903508
  - 0.9408212560386473
  - 0.9405636129979806
  - 0.9390236956026429
  train_precision_weighted_oob:
  - 0.7554839007928252
  - 0.7506864073958225
  - 0.7342243949795436
  - 0.7522604185790343
  - 0.763209159261791
  train_recall_macro:
  - 0.9408212560386473
  - 0.9341787439613526
  - 0.9402173913043478
  - 0.938701923076923
  - 0.9383971291866028
  train_recall_macro_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_recall_micro:
  - 0.9408212560386473
  - 0.9341787439613527
  - 0.9402173913043478
  - 0.9387019230769231
  - 0.9383971291866029
  train_recall_micro_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_recall_samples:
  - 0.9408212560386473
  - 0.9341787439613527
  - 0.9402173913043478
  - 0.9387019230769231
  - 0.9383971291866029
  train_recall_samples_oob:
  - 0.8043478260869565
  - 0.8013285024154589
  - 0.7904589371980676
  - 0.8016826923076923
  - 0.8080143540669856
  train_recall_weighted:
  - 0.9421445577051986
  - 0.9342670790903508
  - 0.9408212560386473
  - 0.9405636129979806
  - 0.9390236956026429
  train_recall_weighted_oob:
  - 0.7554839007928252
  - 0.7506864073958225
  - 0.7342243949795436
  - 0.7522604185790343
  - 0.763209159261791
  train_roc_auc_macro:
  - 0.9996291085500078
  - 0.9995574196803756
  - 0.9997699693043761
  - 0.9997618326931189
  - 0.9998646244294886
  train_roc_auc_macro_oob:
  - 0.8245879737449986
  - 0.7744932299124463
  - 0.801681433252955
  - 0.8267111812489961
  - 0.8209894994232245
  train_roc_auc_micro:
  - 0.9857135679557242
  - 0.9829443950892555
  - 0.9849908402965116
  - 0.9859677372976392
  - 0.9861212536132664
  train_roc_auc_micro_oob:
  - 0.8643204427576504
  - 0.8484795698550118
  - 0.8557211430691576
  - 0.8595316828171875
  - 0.8553153050357523
  train_roc_auc_samples:
  - 0.9736312399355879
  - 0.9710144927536232
  - 0.9720209339774558
  - 0.9721554487179488
  - 0.9706937799043063
  train_roc_auc_samples_oob:
  - 0.8140096618357487
  - 0.8073671497584541
  - 0.8174315619967795
  - 0.8100961538461539
  - 0.804226475279107
  train_roc_auc_weighted:
  - 0.9995290686545178
  - 0.9995273654494125
  - 0.9997098628462568
  - 0.9996930852114447
  - 0.9998207885304659
  train_roc_auc_weighted_oob:
  - 0.8539924699970625
  - 0.8192356283131184
  - 0.8346574317615673
  - 0.84845302493252
  - 0.8389574630182832
start: 2023-12-21 18:28:36.023873
wrapper: null
