active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AMzMzMzPjvwAzMzMzM+O/gGZmZmZm9j+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:48:52.003943
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__3
  params: {}
hash: f4ae186526a4b5a418e5cb2b6bce4f6ee435fbbba82b2df153d989d300abf9dc
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f4ae186_20231221T064840063260_embedding__3_VirusGO.yml
results:
  fit_time:
  - 5.874308347702026
  - 6.034149646759033
  - 6.013911485671997
  - 6.128509521484375
  - 6.166576385498047
  score_time:
  - 1.7022218704223633
  - 1.6058738231658936
  - 1.5577518939971924
  - 1.560499906539917
  - 1.5322418212890625
  test_average_precision_macro:
  - 0.9361451688578709
  - 0.9723634849067375
  - 0.9097596519919263
  - 0.9531444786521276
  - 0.9311294022252864
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8904260225873527
  - 0.9677115415131876
  - 0.7877780067508109
  - 0.9329408301133504
  - 0.9481728635046709
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9244186046511628
  - 0.986111111111111
  - 0.8452380952380952
  - 0.93
  - 0.9645833333333332
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9255716219889238
  - 0.9852795544837069
  - 0.8868116324194193
  - 0.9632566261460417
  - 0.9651299529099567
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8914728682170542
  - 0.9563492063492064
  - 0.884920634920635
  - 0.9375
  - 0.9250000000000002
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8914728682170543
  - 0.9563492063492064
  - 0.8849206349206349
  - 0.9375
  - 0.925
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8914728682170543
  - 0.9563492063492065
  - 0.8849206349206349
  - 0.9375
  - 0.925
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8667262969588551
  - 0.9603174603174602
  - 0.8514285714285714
  - 0.9416666666666668
  - 0.9323529411764707
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8062423811132017
  - 0.9168193563542401
  - 0.7983258585365175
  - 0.8840049469658092
  - 0.8630867818270714
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8041958041958042
  - 0.9163498098859315
  - 0.7935943060498221
  - 0.8823529411764706
  - 0.8604651162790697
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8300110741971208
  - 0.9285714285714286
  - 0.8140589569160998
  - 0.9
  - 0.8767857142857143
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7660389133831382
  - 0.9240448258232116
  - 0.7446479358044877
  - 0.8910971803768173
  - 0.8759578515458475
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9244186046511628
  - 0.986111111111111
  - 0.8452380952380952
  - 0.93
  - 0.9645833333333332
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.31435405436948516
  - 0.6684474453383921
  - 0.22443466386050667
  - 0.4314435813595172
  - 0.47240835404089726
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6326179148405396
  - 0.8613238886090844
  - 0.6032602364147907
  - 0.7968798037362896
  - 0.7654489066438335
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5643002573038918
  - 0.8308896808595482
  - 0.5181494680992472
  - 0.72
  - 0.6740531164891828
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5323740092126615
  - 0.8351167933993269
  - 0.473308941145135
  - 0.7152114474342843
  - 0.7012092355763537
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9475725029872349
  - 0.9932537355627243
  - 0.8856567185784566
  - 0.9502036267227375
  - 0.9764698902907287
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4651162790697674
  - -1.3095238095238095
  - -1.619047619047619
  - -1.475
  - -1.4
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10852713178294575
  - -0.04365079365079364
  - -0.11507936507936507
  - -0.0625
  - -0.07500000000000001
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10852713178294573
  - -0.04365079365079365
  - -0.11507936507936507
  - -0.0625
  - -0.075
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.10852713178294575
  - -0.04365079365079365
  - -0.11507936507936507
  - -0.0625
  - -0.075
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1332737030411449
  - -0.03968253968253968
  - -0.14857142857142858
  - -0.05833333333333333
  - -0.06764705882352941
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.042118863049095616
  - -0.011904761904761904
  - -0.08392857142857144
  - -0.05062500000000001
  - -0.019375
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8914728682170542
  - 0.9563492063492064
  - 0.884920634920635
  - 0.9375
  - 0.9250000000000002
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8914728682170543
  - 0.9563492063492064
  - 0.8849206349206349
  - 0.9375
  - 0.925
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8914728682170543
  - 0.9563492063492065
  - 0.8849206349206349
  - 0.9375
  - 0.925
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8667262969588551
  - 0.9603174603174602
  - 0.8514285714285714
  - 0.9416666666666668
  - 0.9323529411764707
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8914728682170542
  - 0.9563492063492064
  - 0.884920634920635
  - 0.9375
  - 0.9250000000000002
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8914728682170543
  - 0.9563492063492064
  - 0.8849206349206349
  - 0.9375
  - 0.925
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8914728682170543
  - 0.9563492063492065
  - 0.8849206349206349
  - 0.9375
  - 0.925
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8667262969588551
  - 0.9603174603174602
  - 0.8514285714285714
  - 0.9416666666666668
  - 0.9323529411764707
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9747524479877421
  - 0.9915402476780186
  - 0.9628926346367007
  - 0.9690234412001515
  - 0.97788789428815
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9674197162061239
  - 0.9863427958247976
  - 0.9511881188118811
  - 0.9715711805555556
  - 0.9770723104056437
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9578811369509043
  - 0.9880952380952381
  - 0.9160714285714284
  - 0.9493749999999999
  - 0.9806250000000001
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9563428665351742
  - 0.9948194014447884
  - 0.9385017543859648
  - 0.976729746850431
  - 0.9876385336743393
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9908290482463543
  - 0.9856762765789364
  - 0.9876121240868526
  - 0.9899996230203866
  - 0.9819058973589643
  train_average_precision_macro_oob:
  - 0.9553003422444156
  - 0.9190962963452983
  - 0.9438324803880941
  - 0.9399126018175935
  - 0.9334345466261125
  train_average_precision_micro:
  - 0.9649091779193748
  - 0.958265053101023
  - 0.9656946471432016
  - 0.9601529175984203
  - 0.9550529773643088
  train_average_precision_micro_oob:
  - 0.9212072567762692
  - 0.8941743620727893
  - 0.9324961861136096
  - 0.9073955226421807
  - 0.8910068471573575
  train_average_precision_samples:
  - 0.9888211382113822
  - 0.9762626262626263
  - 0.9818181818181818
  - 0.9790419161676647
  - 0.9710578842315368
  train_average_precision_samples_oob:
  - 0.9332317073170731
  - 0.9206060606060606
  - 0.9463636363636362
  - 0.9267465069860279
  - 0.91437125748503
  train_average_precision_weighted:
  - 0.9919246212291094
  - 0.9845911766284838
  - 0.9893612988199306
  - 0.9873226967728428
  - 0.9809202563409299
  train_average_precision_weighted_oob:
  - 0.9615627463270299
  - 0.9242432612721906
  - 0.9585827122925975
  - 0.9417477644947315
  - 0.9290805773412651
  train_f1_macro:
  - 0.9420731707317073
  - 0.9373737373737373
  - 0.9404040404040405
  - 0.9371257485029939
  - 0.9271457085828344
  train_f1_macro_oob:
  - 0.9197154471544716
  - 0.907070707070707
  - 0.9272727272727272
  - 0.9121756487025948
  - 0.9121756487025948
  train_f1_micro:
  - 0.9420731707317073
  - 0.9373737373737374
  - 0.9404040404040404
  - 0.937125748502994
  - 0.9271457085828343
  train_f1_micro_oob:
  - 0.9197154471544715
  - 0.907070707070707
  - 0.9272727272727272
  - 0.9121756487025948
  - 0.9121756487025948
  train_f1_samples:
  - 0.9420731707317073
  - 0.9373737373737375
  - 0.9404040404040405
  - 0.937125748502994
  - 0.9271457085828342
  train_f1_samples_oob:
  - 0.9197154471544714
  - 0.9070707070707071
  - 0.9272727272727272
  - 0.9121756487025947
  - 0.9121756487025947
  train_f1_weighted:
  - 0.9516463414634146
  - 0.9314940449268808
  - 0.9456345634563456
  - 0.9333979100622286
  - 0.9240623231149641
  train_f1_weighted_oob:
  - 0.9164939024390243
  - 0.8961254334388663
  - 0.9329732973297329
  - 0.8989961253962663
  - 0.9015997855036195
  train_jaccard_macro:
  - 0.891396599043658
  - 0.8825141926437096
  - 0.8880649494873882
  - 0.8819838836374464
  - 0.8647268174247184
  train_jaccard_macro_oob:
  - 0.8524507329645076
  - 0.8311381298615327
  - 0.8651838934672101
  - 0.8399137584270759
  - 0.839431576541671
  train_jaccard_micro:
  - 0.8904899135446686
  - 0.8821292775665399
  - 0.8875119161105816
  - 0.8816901408450705
  - 0.8641860465116279
  train_jaccard_micro_oob:
  - 0.8513640639698965
  - 0.8299445471349353
  - 0.864406779661017
  - 0.8385321100917431
  - 0.8385321100917431
  train_jaccard_samples:
  - 0.90534262485482
  - 0.8991341991341991
  - 0.9037518037518036
  - 0.8976333048189337
  - 0.8820929569432563
  train_jaccard_samples_oob:
  - 0.8694831591173053
  - 0.8515151515151516
  - 0.8823953823953824
  - 0.8584260051325918
  - 0.860136869118905
  train_jaccard_weighted:
  - 0.9084081826670062
  - 0.8719451405613847
  - 0.8971800254753208
  - 0.8754153271537604
  - 0.8589854801814519
  train_jaccard_weighted_oob:
  - 0.8468287802735233
  - 0.81218548591488
  - 0.8748899926512143
  - 0.8177737476239348
  - 0.8210401640124255
  train_label_ranking_average_precision_score:
  - 0.9888211382113818
  - 0.9762626262626262
  - 0.9818181818181817
  - 0.9790419161676647
  - 0.9710578842315367
  train_label_ranking_average_precision_score_oob:
  - 0.9332317073170733
  - 0.9206060606060604
  - 0.9463636363636364
  - 0.9267465069860279
  - 0.91437125748503
  train_matthews_corrcoef_macro:
  - 0.5102711731203693
  - 0.5773133467640156
  - 0.5215095155047719
  - 0.5840341574672776
  - 0.46380717428829416
  train_matthews_corrcoef_macro_oob:
  - 0.3847120996135016
  - 0.3741769777867692
  - 0.4036365071652976
  - 0.46942271619954096
  - 0.3946203215236109
  train_matthews_corrcoef_micro:
  - 0.8152241473778417
  - 0.7982728314466974
  - 0.8094306835852355
  - 0.7978943387774041
  - 0.7607754371296709
  train_matthews_corrcoef_micro_oob:
  - 0.737596674445101
  - 0.6923023736878152
  - 0.7650954584644736
  - 0.711345967815905
  - 0.7075024616625049
  train_matthews_corrcoef_samples:
  - 0.7473582380332681
  - 0.7540169753430757
  - 0.7502078515480138
  - 0.7510553430726006
  - 0.6969429124814618
  train_matthews_corrcoef_samples_oob:
  - 0.6675470243638709
  - 0.6078819592208431
  - 0.6839425652814491
  - 0.6376961464888693
  - 0.6307989011392369
  train_matthews_corrcoef_weighted:
  - 0.7624238357678059
  - 0.7600408632334655
  - 0.7542492786468976
  - 0.7624763037803927
  - 0.6968970992085074
  train_matthews_corrcoef_weighted_oob:
  - 0.6494505083035862
  - 0.6091875358353733
  - 0.6815511078566721
  - 0.6544075338268177
  - 0.6279820521405483
  train_ndgc:
  - 0.992433916874662
  - 0.982647673982129
  - 0.9875196525074887
  - 0.9854175572761017
  - 0.9793098256818762
  train_ndgc_oob:
  - 0.9528821744310184
  - 0.9428150368603052
  - 0.9627999576904754
  - 0.9485454837484067
  - 0.9388380533246933
  train_neg_coverage_error:
  - -1.2621951219512195
  - -1.2787878787878788
  - -1.284848484848485
  - -1.281437125748503
  - -1.281437125748503
  train_neg_coverage_error_oob:
  - -1.4695121951219512
  - -1.4727272727272727
  - -1.4424242424242424
  - -1.467065868263473
  - -1.4850299401197604
  train_neg_hamming_loss_macro:
  - -0.057926829268292686
  - -0.06262626262626263
  - -0.0595959595959596
  - -0.06287425149700598
  - -0.07285429141716566
  train_neg_hamming_loss_macro_oob:
  - -0.08028455284552845
  - -0.09292929292929293
  - -0.07272727272727272
  - -0.08782435129740519
  - -0.08782435129740519
  train_neg_hamming_loss_micro:
  - -0.057926829268292686
  - -0.06262626262626263
  - -0.0595959595959596
  - -0.06287425149700598
  - -0.07285429141716566
  train_neg_hamming_loss_micro_oob:
  - -0.08028455284552846
  - -0.09292929292929293
  - -0.07272727272727272
  - -0.08782435129740519
  - -0.08782435129740519
  train_neg_hamming_loss_samples:
  - -0.057926829268292686
  - -0.06262626262626261
  - -0.05959595959595959
  - -0.06287425149700598
  - -0.07285429141716568
  train_neg_hamming_loss_samples_oob:
  - -0.08028455284552845
  - -0.09292929292929292
  - -0.07272727272727272
  - -0.08782435129740519
  - -0.08782435129740519
  train_neg_hamming_loss_weighted:
  - -0.04835365853658536
  - -0.06850595507311924
  - -0.05436543654365436
  - -0.06660208993777152
  - -0.07593767688503589
  train_neg_hamming_loss_weighted_oob:
  - -0.08350609756097561
  - -0.10387456656113372
  - -0.06702670267026702
  - -0.1010038746037337
  - -0.09840021449638038
  train_neg_label_ranking_loss:
  - -0.007164634146341464
  - -0.01196969696969697
  - -0.010303030303030303
  - -0.010479041916167664
  - -0.014221556886227544
  train_neg_label_ranking_loss_oob:
  - -0.04420731707317073
  - -0.04710437710437711
  - -0.03680134680134681
  - -0.04204923486360612
  - -0.05066533599467732
  train_precision_macro:
  - 0.9420731707317073
  - 0.9373737373737373
  - 0.9404040404040405
  - 0.9371257485029939
  - 0.9271457085828344
  train_precision_macro_oob:
  - 0.9197154471544716
  - 0.907070707070707
  - 0.9272727272727272
  - 0.9121756487025948
  - 0.9121756487025948
  train_precision_micro:
  - 0.9420731707317073
  - 0.9373737373737374
  - 0.9404040404040404
  - 0.937125748502994
  - 0.9271457085828343
  train_precision_micro_oob:
  - 0.9197154471544715
  - 0.907070707070707
  - 0.9272727272727272
  - 0.9121756487025948
  - 0.9121756487025948
  train_precision_samples:
  - 0.9420731707317073
  - 0.9373737373737375
  - 0.9404040404040405
  - 0.937125748502994
  - 0.9271457085828342
  train_precision_samples_oob:
  - 0.9197154471544714
  - 0.9070707070707071
  - 0.9272727272727272
  - 0.9121756487025947
  - 0.9121756487025947
  train_precision_weighted:
  - 0.9516463414634146
  - 0.9314940449268808
  - 0.9456345634563456
  - 0.9333979100622286
  - 0.9240623231149641
  train_precision_weighted_oob:
  - 0.9164939024390243
  - 0.8961254334388663
  - 0.9329732973297329
  - 0.8989961253962663
  - 0.9015997855036195
  train_recall_macro:
  - 0.9420731707317073
  - 0.9373737373737373
  - 0.9404040404040405
  - 0.9371257485029939
  - 0.9271457085828344
  train_recall_macro_oob:
  - 0.9197154471544716
  - 0.907070707070707
  - 0.9272727272727272
  - 0.9121756487025948
  - 0.9121756487025948
  train_recall_micro:
  - 0.9420731707317073
  - 0.9373737373737374
  - 0.9404040404040404
  - 0.937125748502994
  - 0.9271457085828343
  train_recall_micro_oob:
  - 0.9197154471544715
  - 0.907070707070707
  - 0.9272727272727272
  - 0.9121756487025948
  - 0.9121756487025948
  train_recall_samples:
  - 0.9420731707317073
  - 0.9373737373737375
  - 0.9404040404040405
  - 0.937125748502994
  - 0.9271457085828342
  train_recall_samples_oob:
  - 0.9197154471544714
  - 0.9070707070707071
  - 0.9272727272727272
  - 0.9121756487025947
  - 0.9121756487025947
  train_recall_weighted:
  - 0.9516463414634146
  - 0.9314940449268808
  - 0.9456345634563456
  - 0.9333979100622286
  - 0.9240623231149641
  train_recall_weighted_oob:
  - 0.9164939024390243
  - 0.8961254334388663
  - 0.9329732973297329
  - 0.8989961253962663
  - 0.9015997855036195
  train_roc_auc_macro:
  - 0.9967909463735002
  - 0.9943590124162265
  - 0.9956370592930596
  - 0.9956501932724519
  - 0.9933424862096897
  train_roc_auc_macro_oob:
  - 0.9811282262235027
  - 0.9666957403468891
  - 0.9752327908497627
  - 0.9792910663181059
  - 0.9713102557550478
  train_roc_auc_micro:
  - 0.9877901785714285
  - 0.9878932334525092
  - 0.9880069859777856
  - 0.9878525971792225
  - 0.9871802038496655
  train_roc_auc_micro_oob:
  - 0.9713329081632653
  - 0.9658740517942607
  - 0.972288535960195
  - 0.9704653791341098
  - 0.9669691492599425
  train_roc_auc_samples:
  - 0.9928353658536585
  - 0.988030303030303
  - 0.9896969696969697
  - 0.9895209580838323
  - 0.9857784431137725
  train_roc_auc_samples_oob:
  - 0.9557926829268293
  - 0.9528956228956228
  - 0.9631986531986534
  - 0.957950765136394
  - 0.9493346640053227
  train_roc_auc_weighted:
  - 0.9958580049770689
  - 0.9916830159231035
  - 0.9946509934598147
  - 0.9922494902393416
  - 0.9902439993303279
  train_roc_auc_weighted_oob:
  - 0.9798038237758862
  - 0.9624117416085334
  - 0.9777433409312091
  - 0.9688161687999037
  - 0.9641043993556928
start: 2023-12-21 06:48:40.063260
wrapper: null
