active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmFkAANDMzMzPjPwAzMzMzMwPAADMzMzMzA8AAZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:22:03.698982
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__6
  params: {}
hash: 45ca32bdb9a71062818e2f26692ad0e2fd7f3ae86bcef002f4a77602da3fe08c
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/45ca32b_20231222T092027125752_embedding_proba__6_PlantGO.yml
results:
  fit_time:
  - 46.1320698261261
  - 49.72045421600342
  - 47.89668250083923
  - 50.67504572868347
  - 52.38516926765442
  score_time:
  - 8.972970485687256
  - 9.689385175704956
  - 9.446964263916016
  - 9.784097671508789
  - 9.71306037902832
  test_average_precision_macro:
  - 0.6990565920427055
  - 0.6949236170946037
  - 0.7030243052715291
  - 0.7137310374075936
  - 0.8065635350698702
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7881352445073749
  - 0.761781318843009
  - 0.8070163357189573
  - 0.7868787636898421
  - 0.8120412530563066
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8596115288220549
  - 0.854989824989825
  - 0.8702441077441078
  - 0.8891454224787558
  - 0.8982797518330513
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8029610612812789
  - 0.7930020239979008
  - 0.8124225119120233
  - 0.795742700591161
  - 0.8534907530449625
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.910964912280702
  - 0.917094017094017
  - 0.9141414141414143
  - 0.9208754208754208
  - 0.9217428087986465
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9109649122807018
  - 0.917094017094017
  - 0.9141414141414141
  - 0.9208754208754208
  - 0.9217428087986463
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9109649122807016
  - 0.9170940170940169
  - 0.9141414141414141
  - 0.9208754208754207
  - 0.9217428087986462
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8367161923948628
  - 0.8544078144078143
  - 0.8463645892891174
  - 0.8638507718696398
  - 0.8690738435015803
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8457199119547566
  - 0.8540376593790874
  - 0.8500075010714206
  - 0.8595284385719587
  - 0.8605867502839155
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8364881192106323
  - 0.8468823993685872
  - 0.8418604651162791
  - 0.8533541341653667
  - 0.8548450372695174
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8381492192018506
  - 0.8488362919132149
  - 0.843245643245643
  - 0.8555888555888554
  - 0.8574217660512076
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7289234460762087
  - 0.7522321651907918
  - 0.7418613946974256
  - 0.7661768527562163
  - 0.7730459195710478
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8596115288220548
  - 0.854989824989825
  - 0.8702441077441079
  - 0.8891454224787558
  - 0.8982797518330513
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03337258267999708
  - 0.05050201007063296
  - 0.03809808189164813
  - 0.09120669920860962
  - 0.06788951424220932
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.16292825478516215
  - 0.2632908044424779
  - 0.18490239680253465
  - 0.3218658509191283
  - 0.3412340170636278
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.04114832535885168
  - 0.08671328671328672
  - 0.044995408631772274
  - 0.1258034894398531
  - 0.14628518689432396
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.08751805204309702
  - 0.1440469247512492
  - 0.1046695939988873
  - 0.21531650495487936
  - 0.19303568629500192
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8968393565478583
  - 0.8928959887950191
  - 0.9049135496811641
  - 0.9168885112816254
  - 0.9246320097890642
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6368421052631579
  - -1.7025641025641025
  - -1.5656565656565657
  - -1.5606060606060606
  - -1.4213197969543148
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08903508771929824
  - -0.08290598290598292
  - -0.08585858585858587
  - -0.07912457912457914
  - -0.07825719120135365
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08903508771929824
  - -0.0829059829059829
  - -0.08585858585858586
  - -0.07912457912457913
  - -0.07825719120135363
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08903508771929827
  - -0.08290598290598292
  - -0.08585858585858586
  - -0.07912457912457913
  - -0.07825719120135365
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.16328380760513722
  - -0.14559218559218562
  - -0.1536354107108824
  - -0.1361492281303602
  - -0.13092615649841968
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04402002480949849
  - -0.05235172235172235
  - -0.040880182294323705
  - -0.04393939393939394
  - -0.03027226580526073
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.910964912280702
  - 0.917094017094017
  - 0.9141414141414143
  - 0.9208754208754208
  - 0.9217428087986465
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9109649122807018
  - 0.917094017094017
  - 0.9141414141414141
  - 0.9208754208754208
  - 0.9217428087986463
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9109649122807016
  - 0.9170940170940169
  - 0.9141414141414141
  - 0.9208754208754207
  - 0.9217428087986462
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8367161923948628
  - 0.8544078144078143
  - 0.8463645892891174
  - 0.8638507718696398
  - 0.8690738435015803
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.910964912280702
  - 0.917094017094017
  - 0.9141414141414143
  - 0.9208754208754208
  - 0.9217428087986465
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9109649122807018
  - 0.917094017094017
  - 0.9141414141414141
  - 0.9208754208754208
  - 0.9217428087986463
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9109649122807016
  - 0.9170940170940169
  - 0.9141414141414141
  - 0.9208754208754207
  - 0.9217428087986462
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8367161923948628
  - 0.8544078144078143
  - 0.8463645892891174
  - 0.8638507718696398
  - 0.8690738435015803
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9530666512507987
  - 0.9541963769844267
  - 0.960145325230195
  - 0.9695210242453816
  - 0.977336036788245
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9640062471265297
  - 0.9548155600268277
  - 0.965503260907474
  - 0.9668666951487461
  - 0.975913147927334
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9559799751905015
  - 0.9476482776482777
  - 0.9591198177056762
  - 0.9560606060606059
  - 0.9697277341947393
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.958379497280219
  - 0.9566720794094251
  - 0.9692078829222235
  - 0.9675840851086346
  - 0.9740504482348712
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8737701917469405
  - 0.8626169835138587
  - 0.8671221539140204
  - 0.8605624882168238
  - 0.8539383457524666
  train_average_precision_macro_oob:
  - 0.7936664918563889
  - 0.7718053873257116
  - 0.783113890239477
  - 0.7915977415662505
  - 0.7540621230748212
  train_average_precision_micro:
  - 0.914881962644169
  - 0.900074946595404
  - 0.8912070043634435
  - 0.8947687749938716
  - 0.8989061673506015
  train_average_precision_micro_oob:
  - 0.8698095611081341
  - 0.847451127452118
  - 0.8361906340406154
  - 0.8351317853020781
  - 0.8389851218046349
  train_average_precision_samples:
  - 0.9329108708550332
  - 0.9208807192523667
  - 0.9216285103785103
  - 0.9176846764346763
  - 0.9240513789809564
  train_average_precision_samples_oob:
  - 0.913355683374719
  - 0.8893505848486691
  - 0.888305352055352
  - 0.8911884874384874
  - 0.8856279088673454
  train_average_precision_weighted:
  - 0.9157635650559536
  - 0.9124847135342363
  - 0.9063389917522574
  - 0.9021004073571964
  - 0.904144400304224
  train_average_precision_weighted_oob:
  - 0.8693731930107591
  - 0.8689347966716704
  - 0.8551298143660001
  - 0.8578261911399551
  - 0.8506411864634862
  train_f1_macro:
  - 0.931577834179357
  - 0.9328437633035335
  - 0.928525641025641
  - 0.9319444444444444
  - 0.930004268032437
  train_f1_macro_oob:
  - 0.9176184433164128
  - 0.92039165602384
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616732
  train_f1_micro:
  - 0.931577834179357
  - 0.9328437633035335
  - 0.9285256410256411
  - 0.9319444444444445
  - 0.9300042680324371
  train_f1_micro_oob:
  - 0.9176184433164128
  - 0.9203916560238399
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616731
  train_f1_samples:
  - 0.9315778341793569
  - 0.9328437633035334
  - 0.9285256410256411
  - 0.9319444444444444
  - 0.930004268032437
  train_f1_samples_oob:
  - 0.9176184433164127
  - 0.9203916560238399
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616731
  train_f1_weighted:
  - 0.8835862404147317
  - 0.8909897451011509
  - 0.8820558445113607
  - 0.8880296255741095
  - 0.8859083542558055
  train_f1_weighted_oob:
  - 0.8536529022812639
  - 0.8641804015809321
  - 0.8591173160568181
  - 0.8567676491164035
  - 0.86236278883264
  train_jaccard_macro:
  - 0.876167661568545
  - 0.8775730561822223
  - 0.8708149079565297
  - 0.8762254334425351
  - 0.8730465964619901
  train_jaccard_macro_oob:
  - 0.8550194271641366
  - 0.8585872959373901
  - 0.8555120375486398
  - 0.854661170578046
  - 0.8573615364674408
  train_jaccard_micro:
  - 0.8719192319113135
  - 0.8741398224793059
  - 0.8665868979958121
  - 0.8725617685305592
  - 0.8691663342640606
  train_jaccard_micro_oob:
  - 0.8477772349780166
  - 0.8525236593059937
  - 0.8488888888888889
  - 0.8477938999111637
  - 0.8510764368951215
  train_jaccard_samples:
  - 0.874926089139287
  - 0.877473229197367
  - 0.8696421527190757
  - 0.8758636235559312
  - 0.8722910891924974
  train_jaccard_samples_oob:
  - 0.8496569420427289
  - 0.8549001445553169
  - 0.8510453648915187
  - 0.849884474499859
  - 0.8533410251720109
  train_jaccard_weighted:
  - 0.7965829444598082
  - 0.8065822536686581
  - 0.7926371504094483
  - 0.8021044360439411
  - 0.7984748602510209
  train_jaccard_weighted_oob:
  - 0.7520846456935936
  - 0.7660704785419902
  - 0.7586959063535265
  - 0.7554970142122064
  - 0.7634060859688209
  train_label_ranking_average_precision_score:
  - 0.9329108708550337
  - 0.920880719252367
  - 0.9216285103785112
  - 0.9176846764346769
  - 0.9240513789809568
  train_label_ranking_average_precision_score_oob:
  - 0.9133556833747192
  - 0.8893505848486694
  - 0.8883053520553525
  - 0.8911884874384884
  - 0.8856279088673459
  train_matthews_corrcoef_macro:
  - 0.19131576573018996
  - 0.17482894675392455
  - 0.15013838328832355
  - 0.17229597735469981
  - 0.15669369650526596
  train_matthews_corrcoef_macro_oob:
  - 0.08481414775640905
  - 0.08347601351511098
  - 0.0603812159553519
  - 0.06704970458310656
  - 0.08260255612931093
  train_matthews_corrcoef_micro:
  - 0.4677435425520512
  - 0.48532651584579567
  - 0.4370939633941294
  - 0.4766531834574065
  - 0.4535037918024002
  train_matthews_corrcoef_micro_oob:
  - 0.26853986170384375
  - 0.32402058045446336
  - 0.2904414989700393
  - 0.2789046928995101
  - 0.310710204142244
  train_matthews_corrcoef_samples:
  - 0.24633629179815814
  - 0.2700265812715298
  - 0.22123100056771053
  - 0.259838062975786
  - 0.2367867432984445
  train_matthews_corrcoef_samples_oob:
  - 0.0892266034249072
  - 0.1281105536383485
  - 0.10466200466200466
  - 0.09696969696969696
  - 0.11703133494204349
  train_matthews_corrcoef_weighted:
  - 0.3887879250779102
  - 0.39185365301486275
  - 0.346234051772552
  - 0.38591171345430186
  - 0.36035118535643806
  train_matthews_corrcoef_weighted_oob:
  - 0.19867110393886667
  - 0.21534311565520142
  - 0.17129739530886845
  - 0.17807412559387528
  - 0.21143874488313347
  train_ndgc:
  - 0.9507546903976102
  - 0.9413812008036908
  - 0.9421644307081021
  - 0.9391092254752902
  - 0.9442967704790852
  train_ndgc_oob:
  - 0.9362043236538808
  - 0.9178794765501253
  - 0.9172226824517995
  - 0.9197337302320017
  - 0.9154822623014517
  train_neg_coverage_error:
  - -1.3299492385786802
  - -1.3614303959131546
  - -1.3564102564102565
  - -1.4115384615384616
  - -1.380281690140845
  train_neg_coverage_error_oob:
  - -1.4124365482233503
  - -1.4891443167305236
  - -1.5192307692307692
  - -1.528205128205128
  - -1.5416133162612036
  train_neg_hamming_loss_macro:
  - -0.06842216582064296
  - -0.06715623669646659
  - -0.07147435897435898
  - -0.06805555555555558
  - -0.06999573196756295
  train_neg_hamming_loss_macro_oob:
  - -0.08238155668358714
  - -0.07960834397616008
  - -0.08173076923076923
  - -0.08237179487179487
  - -0.08045241143832695
  train_neg_hamming_loss_micro:
  - -0.06842216582064298
  - -0.06715623669646659
  - -0.07147435897435897
  - -0.06805555555555555
  - -0.06999573196756295
  train_neg_hamming_loss_micro_oob:
  - -0.08238155668358714
  - -0.07960834397616007
  - -0.08173076923076923
  - -0.08237179487179487
  - -0.08045241143832693
  train_neg_hamming_loss_samples:
  - -0.06842216582064298
  - -0.06715623669646659
  - -0.07147435897435897
  - -0.06805555555555555
  - -0.06999573196756295
  train_neg_hamming_loss_samples_oob:
  - -0.08238155668358713
  - -0.07960834397616007
  - -0.08173076923076923
  - -0.08237179487179487
  - -0.08045241143832693
  train_neg_hamming_loss_weighted:
  - -0.11641375958526838
  - -0.10901025489884907
  - -0.11794415548863947
  - -0.11197037442589045
  - -0.11409164574419449
  train_neg_hamming_loss_weighted_oob:
  - -0.14634709771873614
  - -0.13581959841906793
  - -0.14088268394318215
  - -0.14323235088359643
  - -0.13763721116736002
  train_neg_label_ranking_loss:
  - -0.021338170196038213
  - -0.02435960283980718
  - -0.023450099283432616
  - -0.028098722265388933
  - -0.025039770302254294
  train_neg_label_ranking_loss_oob:
  - -0.028571672734109283
  - -0.035358910518552916
  - -0.03757014590347924
  - -0.037655184321850985
  - -0.0391335463038408
  train_precision_macro:
  - 0.931577834179357
  - 0.9328437633035335
  - 0.928525641025641
  - 0.9319444444444444
  - 0.930004268032437
  train_precision_macro_oob:
  - 0.9176184433164128
  - 0.92039165602384
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616732
  train_precision_micro:
  - 0.931577834179357
  - 0.9328437633035335
  - 0.9285256410256411
  - 0.9319444444444445
  - 0.9300042680324371
  train_precision_micro_oob:
  - 0.9176184433164128
  - 0.9203916560238399
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616731
  train_precision_samples:
  - 0.9315778341793569
  - 0.9328437633035334
  - 0.9285256410256411
  - 0.9319444444444444
  - 0.930004268032437
  train_precision_samples_oob:
  - 0.9176184433164127
  - 0.9203916560238399
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616731
  train_precision_weighted:
  - 0.8835862404147317
  - 0.8909897451011509
  - 0.8820558445113607
  - 0.8880296255741095
  - 0.8859083542558055
  train_precision_weighted_oob:
  - 0.8536529022812639
  - 0.8641804015809321
  - 0.8591173160568181
  - 0.8567676491164035
  - 0.86236278883264
  train_recall_macro:
  - 0.931577834179357
  - 0.9328437633035335
  - 0.928525641025641
  - 0.9319444444444444
  - 0.930004268032437
  train_recall_macro_oob:
  - 0.9176184433164128
  - 0.92039165602384
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616732
  train_recall_micro:
  - 0.931577834179357
  - 0.9328437633035335
  - 0.9285256410256411
  - 0.9319444444444445
  - 0.9300042680324371
  train_recall_micro_oob:
  - 0.9176184433164128
  - 0.9203916560238399
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616731
  train_recall_samples:
  - 0.9315778341793569
  - 0.9328437633035334
  - 0.9285256410256411
  - 0.9319444444444444
  - 0.930004268032437
  train_recall_samples_oob:
  - 0.9176184433164127
  - 0.9203916560238399
  - 0.9182692307692307
  - 0.9176282051282051
  - 0.9195475885616731
  train_recall_weighted:
  - 0.8835862404147317
  - 0.8909897451011509
  - 0.8820558445113607
  - 0.8880296255741095
  - 0.8859083542558055
  train_recall_weighted_oob:
  - 0.8536529022812639
  - 0.8641804015809321
  - 0.8591173160568181
  - 0.8567676491164035
  - 0.86236278883264
  train_roc_auc_macro:
  - 0.9815563093712765
  - 0.9825729940097633
  - 0.9812463572127553
  - 0.9764532471828659
  - 0.9813286465976345
  train_roc_auc_macro_oob:
  - 0.9716802480935671
  - 0.9724996285813835
  - 0.9669122650925952
  - 0.9647312348743435
  - 0.9691829820290971
  train_roc_auc_micro:
  - 0.9841923322981962
  - 0.9821508124936424
  - 0.9802281557880681
  - 0.9792846795419001
  - 0.9815048010785059
  train_roc_auc_micro_oob:
  - 0.9765342405197102
  - 0.9728692239185839
  - 0.9687062272078549
  - 0.9693301973263715
  - 0.9697985256358636
  train_roc_auc_samples:
  - 0.9786618298039618
  - 0.9756403971601928
  - 0.9765499007165673
  - 0.971901277734611
  - 0.9749602296977457
  train_roc_auc_samples_oob:
  - 0.9714283272658907
  - 0.964641089481447
  - 0.9624298540965208
  - 0.962344815678149
  - 0.9608664536961592
  train_roc_auc_weighted:
  - 0.9813059253795862
  - 0.981533357975104
  - 0.979748653974587
  - 0.977407736492091
  - 0.9805886405753043
  train_roc_auc_weighted_oob:
  - 0.9728600765006914
  - 0.9741409458969144
  - 0.969816531439121
  - 0.9687256094426032
  - 0.971497605727763
start: 2023-12-22 09:20:27.125752
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
