active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMDAzMzMzMwEwKCZmZmZmRVAgJmZmZmZ+b9AMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:20:24.163174
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__7
  params: {}
hash: 4d68e9249369e34542dc0c29f3d022d778bef3285b2198251f3a67b5db82ce2c
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4d68e92_20231221T071701963635_embedding_weak__7_VirusGO.yml
results:
  fit_time:
  - 186.85505032539368
  - 190.85088658332825
  - 189.6275064945221
  - 189.95827269554138
  - 193.1449272632599
  score_time:
  - 3.025768518447876
  - 3.0723419189453125
  - 3.305184841156006
  - 3.0981247425079346
  - 3.2442665100097656
  test_average_precision_macro:
  - 0.9766605494979198
  - 0.9093679562547812
  - 0.9209530217315685
  - 0.9134649430867919
  - 0.9374849392618999
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8914910348524226
  - 0.8645902291910734
  - 0.9357794027576061
  - 0.8562059530038717
  - 0.9316097741580698
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9574074074074073
  - 0.9371212121212121
  - 0.9555555555555555
  - 0.9282945736434108
  - 0.9153846153846155
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9568224995560636
  - 0.9093990745864703
  - 0.9576592541778616
  - 0.8972470862470863
  - 0.9608462566844921
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9259259259259259
  - 0.9318181818181818
  - 0.9212962962962964
  - 0.9379844961240309
  - 0.9316239316239315
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9259259259259259
  - 0.9318181818181818
  - 0.9212962962962963
  - 0.937984496124031
  - 0.9316239316239316
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.925925925925926
  - 0.931818181818182
  - 0.9212962962962964
  - 0.937984496124031
  - 0.9316239316239316
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.922004357298475
  - 0.9217657342657343
  - 0.9291383219954649
  - 0.9283720930232557
  - 0.9271794871794872
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8630427702996092
  - 0.87348990989139
  - 0.8563409563409564
  - 0.8875708056608679
  - 0.8733213137779218
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8620689655172413
  - 0.8723404255319149
  - 0.8540772532188842
  - 0.8832116788321168
  - 0.872
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8830687830687831
  - 0.8879870129870131
  - 0.873015873015873
  - 0.898671096345515
  - 0.8882783882783883
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8566090265893591
  - 0.8558526451449672
  - 0.8696253553396411
  - 0.8725877900567341
  - 0.8655890122356372
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9574074074074073
  - 0.9371212121212121
  - 0.9555555555555555
  - 0.928294573643411
  - 0.9153846153846152
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4659624524186825
  - 0.5039552056116025
  - 0.38691761599303104
  - 0.5964706056440671
  - 0.5121232869840463
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.746746562969779
  - 0.7752053897041836
  - 0.7675740216102552
  - 0.7963625935781755
  - 0.789083748442037
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7158576524915081
  - 0.7407893907318648
  - 0.7060897622431627
  - 0.7576702820496444
  - 0.689293731590607
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6867975335562937
  - 0.7078974940688673
  - 0.6836736579852271
  - 0.7673147251045905
  - 0.7200944209491018
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9699788506617839
  - 0.9556751764234512
  - 0.974612505425474
  - 0.946910358555886
  - 0.9401311798080467
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.2666666666666666
  - -1.4318181818181819
  - -1.6666666666666667
  - -1.3255813953488371
  - -1.641025641025641
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.07407407407407407
  - -0.06818181818181818
  - -0.0787037037037037
  - -0.06201550387596899
  - -0.06837606837606837
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.07407407407407407
  - -0.06818181818181818
  - -0.0787037037037037
  - -0.06201550387596899
  - -0.06837606837606838
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.07407407407407407
  - -0.06818181818181818
  - -0.0787037037037037
  - -0.06201550387596899
  - -0.06837606837606836
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.07799564270152505
  - -0.07823426573426574
  - -0.07086167800453515
  - -0.07162790697674418
  - -0.07282051282051281
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.023024691358024693
  - -0.04318181818181818
  - -0.04027777777777777
  - -0.03372093023255814
  - -0.0641025641025641
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9259259259259259
  - 0.9318181818181818
  - 0.9212962962962964
  - 0.9379844961240309
  - 0.9316239316239315
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9259259259259259
  - 0.9318181818181818
  - 0.9212962962962963
  - 0.937984496124031
  - 0.9316239316239316
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.925925925925926
  - 0.931818181818182
  - 0.9212962962962964
  - 0.937984496124031
  - 0.9316239316239316
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.922004357298475
  - 0.9217657342657343
  - 0.9291383219954649
  - 0.9283720930232557
  - 0.9271794871794872
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9259259259259259
  - 0.9318181818181818
  - 0.9212962962962964
  - 0.9379844961240309
  - 0.9316239316239315
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9259259259259259
  - 0.9318181818181818
  - 0.9212962962962963
  - 0.937984496124031
  - 0.9316239316239316
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.925925925925926
  - 0.931818181818182
  - 0.9212962962962964
  - 0.937984496124031
  - 0.9316239316239316
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.922004357298475
  - 0.9217657342657343
  - 0.9291383219954649
  - 0.9283720930232557
  - 0.9271794871794872
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9906199321833996
  - 0.9682701036254958
  - 0.9871094197913083
  - 0.9685681965093731
  - 0.9816137566137567
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9750201450443191
  - 0.96072206095791
  - 0.9706709030917756
  - 0.9712500000000001
  - 0.9697826086956521
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9769753086419753
  - 0.9568181818181817
  - 0.9597222222222221
  - 0.9662790697674418
  - 0.9358974358974359
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9819770013268466
  - 0.9635012601358756
  - 0.9909953455066236
  - 0.9523076923076923
  - 0.9822857142857141
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.967665147526337
  - 0.9699002456580424
  - 0.9645461797302769
  - 0.9790009185476517
  - 0.9727532799476788
  train_average_precision_macro_oob:
  - 0.8993632041179067
  - 0.9193845905759295
  - 0.9479574086616115
  - 0.9403487416687968
  - 0.9474960291395585
  train_average_precision_micro:
  - 0.9105924362681345
  - 0.9224323601538748
  - 0.9112574957352689
  - 0.9406142654533118
  - 0.9207395435185768
  train_average_precision_micro_oob:
  - 0.8674447188466106
  - 0.8974512136041023
  - 0.9004528703135988
  - 0.9097616776094035
  - 0.9039654763376482
  train_average_precision_samples:
  - 0.9542181069958848
  - 0.9688139059304703
  - 0.9512670565302145
  - 0.9715447154471544
  - 0.9538690476190477
  train_average_precision_samples_oob:
  - 0.9103909465020575
  - 0.9331629175187457
  - 0.9438596491228071
  - 0.9447154471544715
  - 0.933234126984127
  train_average_precision_weighted:
  - 0.9563212907340793
  - 0.9537671588452794
  - 0.9498934250560296
  - 0.9738495800245247
  - 0.9620234427936695
  train_average_precision_weighted_oob:
  - 0.9065950675189848
  - 0.9294378639130544
  - 0.9433575004731768
  - 0.9510528875132852
  - 0.9507890052455041
  train_f1_macro:
  - 0.9320987654320988
  - 0.9396728016359918
  - 0.942495126705653
  - 0.9380081300813008
  - 0.943452380952381
  train_f1_macro_oob:
  - 0.9156378600823046
  - 0.9355828220858896
  - 0.9298245614035087
  - 0.9237804878048781
  - 0.9325396825396824
  train_f1_micro:
  - 0.9320987654320988
  - 0.9396728016359919
  - 0.942495126705653
  - 0.9380081300813008
  - 0.9434523809523809
  train_f1_micro_oob:
  - 0.9156378600823045
  - 0.9355828220858896
  - 0.9298245614035088
  - 0.9237804878048781
  - 0.9325396825396826
  train_f1_samples:
  - 0.9320987654320988
  - 0.939672801635992
  - 0.9424951267056529
  - 0.9380081300813007
  - 0.9434523809523809
  train_f1_samples_oob:
  - 0.9156378600823046
  - 0.9355828220858896
  - 0.9298245614035088
  - 0.9237804878048781
  - 0.9325396825396827
  train_f1_weighted:
  - 0.9365825195012593
  - 0.9401533742331288
  - 0.9361910523435024
  - 0.941016662641874
  - 0.9408003300330032
  train_f1_weighted_oob:
  - 0.9195074012652785
  - 0.9369018404907976
  - 0.9238037622792613
  - 0.9237503018594542
  - 0.930869872701556
  train_jaccard_macro:
  - 0.8736075706309169
  - 0.8867984743390851
  - 0.891522800343349
  - 0.88371679254982
  - 0.8932939908103809
  train_jaccard_macro_oob:
  - 0.8460093075874836
  - 0.8795358733922737
  - 0.8691923690677849
  - 0.8590942424856455
  - 0.8741298317103308
  train_jaccard_micro:
  - 0.8728323699421965
  - 0.8862102217936355
  - 0.8912442396313364
  - 0.8832535885167464
  - 0.8929577464788733
  train_jaccard_micro_oob:
  - 0.8444022770398482
  - 0.8789625360230547
  - 0.8688524590163934
  - 0.8583569405099151
  - 0.8736059479553904
  train_jaccard_samples:
  - 0.8884479717813052
  - 0.9024247735904178
  - 0.9067112225006961
  - 0.8988095238095236
  - 0.909155328798186
  train_jaccard_samples_oob:
  - 0.8624338624338624
  - 0.8955594507741748
  - 0.886104149262044
  - 0.8768873403019743
  - 0.8908730158730158
  train_jaccard_weighted:
  - 0.8812735139061014
  - 0.8873228740419876
  - 0.8802703999781873
  - 0.8889563452338493
  - 0.8886153959126835
  train_jaccard_weighted_oob:
  - 0.8521319478179075
  - 0.8815484875672197
  - 0.8585626162967097
  - 0.8588594817284007
  - 0.8710069136630589
  train_label_ranking_average_precision_score:
  - 0.9542181069958846
  - 0.9688139059304701
  - 0.9512670565302142
  - 0.9715447154471544
  - 0.9538690476190474
  train_label_ranking_average_precision_score_oob:
  - 0.9103909465020579
  - 0.9331629175187457
  - 0.9438596491228071
  - 0.9447154471544715
  - 0.933234126984127
  train_matthews_corrcoef_macro:
  - 0.47843228937863547
  - 0.5274319598817808
  - 0.614890673271812
  - 0.552647122597423
  - 0.6095197528878823
  train_matthews_corrcoef_macro_oob:
  - 0.3473947885724739
  - 0.5094782771607634
  - 0.5438942952650797
  - 0.40101641580750425
  - 0.5435955256194686
  train_matthews_corrcoef_micro:
  - 0.783802797138702
  - 0.8075808505307476
  - 0.8133227056725653
  - 0.8022514591025032
  - 0.8174185191038261
  train_matthews_corrcoef_micro_oob:
  - 0.7273947542156872
  - 0.7936120282694068
  - 0.7691700871641505
  - 0.7540837291769188
  - 0.7798067796433513
  train_matthews_corrcoef_samples:
  - 0.7205934288815486
  - 0.766794185158039
  - 0.7887964887520829
  - 0.7567136984321844
  - 0.8016452100816986
  train_matthews_corrcoef_samples_oob:
  - 0.639375775907551
  - 0.7436277989512696
  - 0.7200907384710857
  - 0.6933537471165089
  - 0.7383567842957839
  train_matthews_corrcoef_weighted:
  - 0.7273930975983073
  - 0.752394787639787
  - 0.7803120605248968
  - 0.7634785439242985
  - 0.7887274271600613
  train_matthews_corrcoef_weighted_oob:
  - 0.6346979587191864
  - 0.7379902432129393
  - 0.7289020269791504
  - 0.667275806362374
  - 0.7435070218563274
  train_ndgc:
  - 0.9674830718434829
  - 0.9782326431763579
  - 0.9646856676249912
  - 0.9794208542666166
  - 0.9666239051211182
  train_ndgc_oob:
  - 0.9364176057181715
  - 0.9526011093295849
  - 0.9607305547804695
  - 0.9618187601844408
  - 0.9528130041526424
  train_neg_coverage_error:
  - -1.3580246913580247
  - -1.3251533742331287
  - -1.304093567251462
  - -1.3048780487804879
  - -1.3154761904761905
  train_neg_coverage_error_oob:
  - -1.5432098765432098
  - -1.460122699386503
  - -1.409356725146199
  - -1.451219512195122
  - -1.4166666666666667
  train_neg_hamming_loss_macro:
  - -0.06790123456790124
  - -0.060327198364008176
  - -0.057504873294346975
  - -0.061991869918699184
  - -0.05654761904761905
  train_neg_hamming_loss_macro_oob:
  - -0.08436213991769548
  - -0.06441717791411043
  - -0.07017543859649122
  - -0.07621951219512195
  - -0.06746031746031746
  train_neg_hamming_loss_micro:
  - -0.06790123456790123
  - -0.06032719836400818
  - -0.057504873294346975
  - -0.061991869918699184
  - -0.05654761904761905
  train_neg_hamming_loss_micro_oob:
  - -0.08436213991769548
  - -0.06441717791411043
  - -0.07017543859649122
  - -0.07621951219512195
  - -0.06746031746031746
  train_neg_hamming_loss_samples:
  - -0.06790123456790123
  - -0.06032719836400817
  - -0.05750487329434697
  - -0.061991869918699184
  - -0.05654761904761905
  train_neg_hamming_loss_samples_oob:
  - -0.08436213991769546
  - -0.06441717791411042
  - -0.07017543859649122
  - -0.07621951219512195
  - -0.06746031746031746
  train_neg_hamming_loss_weighted:
  - -0.06341748049874087
  - -0.05984662576687117
  - -0.06380894765649757
  - -0.05898333735812605
  - -0.059199669966996694
  train_neg_hamming_loss_weighted_oob:
  - -0.08049259873472146
  - -0.06309815950920244
  - -0.07619623772073862
  - -0.07624969814054575
  - -0.06913012729844413
  train_neg_label_ranking_loss:
  - -0.02145061728395062
  - -0.017092706203135653
  - -0.022076023391812867
  - -0.013719512195121951
  - -0.021577380952380952
  train_neg_label_ranking_loss_oob:
  - -0.0537037037037037
  - -0.04176891615541922
  - -0.038661468486029894
  - -0.0369579945799458
  - -0.03726851851851852
  train_precision_macro:
  - 0.9320987654320988
  - 0.9396728016359918
  - 0.942495126705653
  - 0.9380081300813008
  - 0.943452380952381
  train_precision_macro_oob:
  - 0.9156378600823046
  - 0.9355828220858896
  - 0.9298245614035087
  - 0.9237804878048781
  - 0.9325396825396824
  train_precision_micro:
  - 0.9320987654320988
  - 0.9396728016359919
  - 0.942495126705653
  - 0.9380081300813008
  - 0.9434523809523809
  train_precision_micro_oob:
  - 0.9156378600823045
  - 0.9355828220858896
  - 0.9298245614035088
  - 0.9237804878048781
  - 0.9325396825396826
  train_precision_samples:
  - 0.9320987654320988
  - 0.939672801635992
  - 0.9424951267056529
  - 0.9380081300813007
  - 0.9434523809523809
  train_precision_samples_oob:
  - 0.9156378600823046
  - 0.9355828220858896
  - 0.9298245614035088
  - 0.9237804878048781
  - 0.9325396825396827
  train_precision_weighted:
  - 0.9365825195012593
  - 0.9401533742331288
  - 0.9361910523435024
  - 0.941016662641874
  - 0.9408003300330032
  train_precision_weighted_oob:
  - 0.9195074012652785
  - 0.9369018404907976
  - 0.9238037622792613
  - 0.9237503018594542
  - 0.930869872701556
  train_recall_macro:
  - 0.9320987654320988
  - 0.9396728016359918
  - 0.942495126705653
  - 0.9380081300813008
  - 0.943452380952381
  train_recall_macro_oob:
  - 0.9156378600823046
  - 0.9355828220858896
  - 0.9298245614035087
  - 0.9237804878048781
  - 0.9325396825396824
  train_recall_micro:
  - 0.9320987654320988
  - 0.9396728016359919
  - 0.942495126705653
  - 0.9380081300813008
  - 0.9434523809523809
  train_recall_micro_oob:
  - 0.9156378600823045
  - 0.9355828220858896
  - 0.9298245614035088
  - 0.9237804878048781
  - 0.9325396825396826
  train_recall_samples:
  - 0.9320987654320988
  - 0.939672801635992
  - 0.9424951267056529
  - 0.9380081300813007
  - 0.9434523809523809
  train_recall_samples_oob:
  - 0.9156378600823046
  - 0.9355828220858896
  - 0.9298245614035088
  - 0.9237804878048781
  - 0.9325396825396827
  train_recall_weighted:
  - 0.9365825195012593
  - 0.9401533742331288
  - 0.9361910523435024
  - 0.941016662641874
  - 0.9408003300330032
  train_recall_weighted_oob:
  - 0.9195074012652785
  - 0.9369018404907976
  - 0.9238037622792613
  - 0.9237503018594542
  - 0.930869872701556
  train_roc_auc_macro:
  - 0.9879806815124708
  - 0.9897648851477773
  - 0.9869752211242129
  - 0.9919159157621111
  - 0.9901369723482475
  train_roc_auc_macro_oob:
  - 0.9698548416171074
  - 0.9747182267845771
  - 0.9744058631003988
  - 0.9798448233774741
  - 0.9824681627744839
  train_roc_auc_micro:
  - 0.9785927689696783
  - 0.98146529562982
  - 0.9809569698747224
  - 0.9848509787040085
  - 0.9820222096651352
  train_roc_auc_micro_oob:
  - 0.9595021003929768
  - 0.9681812339331619
  - 0.9696472714866313
  - 0.969309462915601
  - 0.9704812913053091
  train_roc_auc_samples:
  - 0.9785493827160496
  - 0.9829072937968645
  - 0.9779239766081873
  - 0.9862804878048781
  - 0.9784226190476191
  train_roc_auc_samples_oob:
  - 0.9462962962962964
  - 0.9582310838445808
  - 0.9613385315139701
  - 0.963042005420054
  - 0.9627314814814815
  train_roc_auc_weighted:
  - 0.9801207990769879
  - 0.9808764607091089
  - 0.9781340134297628
  - 0.9869963139128359
  - 0.9825029109853874
  train_roc_auc_weighted_oob:
  - 0.9648553139648629
  - 0.9709809515027473
  - 0.9699080617305212
  - 0.9795895123899119
  - 0.9763109295252034
start: 2023-12-21 07:17:01.963635
wrapper: null
