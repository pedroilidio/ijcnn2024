active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvyAzMzMzM/O/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b80MzMzMzPzP6CZmZmZmck/zMzMzMzM/L80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAwAAAAAAAAABAAAAAAAAA8D8AAAAAAADwvw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:08:43.391861
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__4
  params: {}
hash: 297b563179aaffe9b52221c481ca7feee979f9303da8f33edc62bb215754cc31
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/297b563_20231221T220813959557_embedding_proba__4_CHD_49.yml
results:
  fit_time:
  - 13.967145681381226
  - 13.366992473602295
  - 14.702323913574219
  - 14.756434202194214
  - 14.947597742080688
  score_time:
  - 4.117393255233765
  - 3.941117286682129
  - 4.153384685516357
  - 4.134757995605469
  - 4.1472930908203125
  test_average_precision_macro:
  - 0.4926803608613408
  - 0.5138339470235489
  - 0.5291916295779604
  - 0.5521983258891656
  - 0.5056800494339645
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6632848857120422
  - 0.6714760242041099
  - 0.6872602953088507
  - 0.7099288169602294
  - 0.6542053437971881
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7811186186186186
  - 0.7813053097345132
  - 0.7850535168195718
  - 0.81260101010101
  - 0.7754216269841271
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.609283570868157
  - 0.6347876626894827
  - 0.6540191975671885
  - 0.6734298134288912
  - 0.6243236821119887
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6891891891891891
  - 0.7153392330383482
  - 0.6972477064220183
  - 0.7212121212121212
  - 0.6964285714285715
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6891891891891891
  - 0.7153392330383481
  - 0.6972477064220184
  - 0.7212121212121212
  - 0.6964285714285714
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6891891891891894
  - 0.7153392330383481
  - 0.6972477064220184
  - 0.7212121212121213
  - 0.6964285714285714
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6422226422226422
  - 0.6655241181602892
  - 0.6511221865972509
  - 0.6821012897137465
  - 0.6468498490945674
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5453964540373101
  - 0.576765523223906
  - 0.5535228640189819
  - 0.5785412820261157
  - 0.5543594012584961
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5257731958762887
  - 0.5568312284730195
  - 0.5352112676056338
  - 0.5639810426540285
  - 0.5342465753424658
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.565988065988066
  - 0.5923380454353906
  - 0.5756265141586243
  - 0.6052971271153088
  - 0.5874342918985775
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.47871803363639437
  - 0.5033767639477962
  - 0.4861780462025142
  - 0.5213177078000536
  - 0.48176418432446727
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7901276276276274
  - 0.7813053097345131
  - 0.8034021406727831
  - 0.8126010101010103
  - 0.7754216269841268
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.10481026461717115
  - 0.15536250944620603
  - 0.10836449551848532
  - 0.16244083074897517
  - 0.13483273223754938
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.367154872046062
  - 0.4258894068023446
  - 0.3907619517291613
  - 0.43821767602617995
  - 0.38041033899176596
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3776585496927591
  - 0.45495738912528677
  - 0.40282364731969866
  - 0.457786928146956
  - 0.3927200151984657
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.10468803442533896
  - 0.15256284161624328
  - 0.09905067779323201
  - 0.15875954623243826
  - 0.14847366886234944
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8525542855659829
  - 0.8562947364858123
  - 0.8575846005909079
  - 0.8764093537490276
  - 0.8511329889424195
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.675675675675676
  - -3.601769911504425
  - -3.7889908256880735
  - -3.5727272727272728
  - -3.705357142857143
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.31081081081081086
  - -0.28466076696165193
  - -0.30275229357798167
  - -0.27878787878787875
  - -0.3035714285714286
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3108108108108108
  - -0.28466076696165193
  - -0.30275229357798167
  - -0.2787878787878788
  - -0.30357142857142855
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3108108108108108
  - -0.2846607669616519
  - -0.30275229357798167
  - -0.27878787878787875
  - -0.30357142857142855
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.35777735777735775
  - -0.33447588183971083
  - -0.34887781340274915
  - -0.31789871028625355
  - -0.3531501509054326
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21534034034034036
  - -0.2053834808259587
  - -0.20575942915392453
  - -0.18156565656565657
  - -0.23003472222222218
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6891891891891891
  - 0.7153392330383482
  - 0.6972477064220183
  - 0.7212121212121212
  - 0.6964285714285715
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6891891891891891
  - 0.7153392330383481
  - 0.6972477064220184
  - 0.7212121212121212
  - 0.6964285714285714
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6891891891891894
  - 0.7153392330383481
  - 0.6972477064220184
  - 0.7212121212121213
  - 0.6964285714285714
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6422226422226422
  - 0.6655241181602892
  - 0.6511221865972509
  - 0.6821012897137465
  - 0.6468498490945674
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6891891891891891
  - 0.7153392330383482
  - 0.6972477064220183
  - 0.7212121212121212
  - 0.6964285714285715
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6891891891891891
  - 0.7153392330383481
  - 0.6972477064220184
  - 0.7212121212121212
  - 0.6964285714285714
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6891891891891894
  - 0.7153392330383481
  - 0.6972477064220184
  - 0.7212121212121213
  - 0.6964285714285714
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6422226422226422
  - 0.6655241181602892
  - 0.6511221865972509
  - 0.6821012897137465
  - 0.6468498490945674
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5771288724368947
  - 0.5713279554115434
  - 0.5737844468018168
  - 0.5830453053196232
  - 0.5425740060920746
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7696632315053369
  - 0.7805551583613355
  - 0.7695975731146609
  - 0.7932642535371528
  - 0.76367612893858
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7946165191740413
  - .nan
  - 0.8184343434343434
  - 0.7699652777777778
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5807315396829064
  - 0.5861562649414335
  - 0.5771946409732547
  - 0.6209180351591678
  - 0.5684408227275416
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9971479391464895
  - 0.9971454594382833
  - 0.9973434574565392
  - 0.9974019665987234
  - 0.9971679025246093
  train_average_precision_macro_oob:
  - 0.906630412027594
  - 0.8986652621043598
  - 0.8952323159413215
  - 0.8464702196963315
  - 0.9180090096055986
  train_average_precision_micro:
  - 0.9934364641314193
  - 0.9928156237726743
  - 0.9932035547873901
  - 0.9934956472796332
  - 0.993040210646233
  train_average_precision_micro_oob:
  - 0.9692288804169115
  - 0.9712833575986907
  - 0.9685956354062779
  - 0.9706873009208813
  - 0.9706836159791089
  train_average_precision_samples:
  - 0.9841591591591592
  - 0.9795625942684766
  - 0.9865595416043846
  - 0.9804463171036204
  - 0.982364559819413
  train_average_precision_samples_oob:
  - 0.9452546296296297
  - 0.9457924836601307
  - 0.9593672147483806
  - 0.9534925093632958
  - 0.9563957863054927
  train_average_precision_weighted:
  - 0.9971360113504972
  - 0.9972562518892333
  - 0.9974362030191543
  - 0.9975295237115949
  - 0.9972587946760781
  train_average_precision_weighted_oob:
  - 0.9741913441452303
  - 0.9736814626690822
  - 0.9733094847397133
  - 0.9708796796968074
  - 0.9749375509167875
  train_f1_macro:
  - 0.9635885885885886
  - 0.9622926093514329
  - 0.9652466367713005
  - 0.9689138576779026
  - 0.9620015048908953
  train_f1_macro_oob:
  - 0.9391891891891891
  - 0.9328808446455507
  - 0.9402092675635277
  - 0.9370786516853933
  - 0.9360421369450714
  train_f1_micro:
  - 0.9635885885885885
  - 0.9622926093514329
  - 0.9652466367713004
  - 0.9689138576779026
  - 0.9620015048908954
  train_f1_micro_oob:
  - 0.9391891891891891
  - 0.9328808446455505
  - 0.9402092675635276
  - 0.9370786516853933
  - 0.9360421369450714
  train_f1_samples:
  - 0.9635885885885885
  - 0.962292609351433
  - 0.9652466367713004
  - 0.9689138576779026
  - 0.9620015048908954
  train_f1_samples_oob:
  - 0.9391891891891891
  - 0.9328808446455504
  - 0.9402092675635276
  - 0.9370786516853933
  - 0.9360421369450717
  train_f1_weighted:
  - 0.9607270883448895
  - 0.9604900121399403
  - 0.9623149684764741
  - 0.9669350319974046
  - 0.9596451970646762
  train_f1_weighted_oob:
  - 0.9330927786425169
  - 0.9257532281205163
  - 0.9326589221190401
  - 0.9272503858366017
  - 0.9278891152342675
  train_jaccard_macro:
  - 0.9299978361442505
  - 0.9276121309909374
  - 0.9331637190809351
  - 0.9400939542307952
  - 0.9271259849323402
  train_jaccard_macro_oob:
  - 0.8858851503433477
  - 0.8750553391218103
  - 0.8877575467254512
  - 0.882500486493948
  - 0.8803522120246043
  train_jaccard_micro:
  - 0.9297356030423759
  - 0.9273255813953488
  - 0.9328277356446371
  - 0.9397021431166
  - 0.9267850670532801
  train_jaccard_micro_oob:
  - 0.8853503184713376
  - 0.8742049469964664
  - 0.8871650211565585
  - 0.8816067653276956
  - 0.8797736916548797
  train_jaccard_samples:
  - 0.9391355641355641
  - 0.9376212023270847
  - 0.941383728379244
  - 0.9485286249331193
  - 0.936740836289369
  train_jaccard_samples_oob:
  - 0.901008151008151
  - 0.8923400129282482
  - 0.904121289771514
  - 0.8997003745318353
  - 0.8959475438030742
  train_jaccard_weighted:
  - 0.9247193633857893
  - 0.9243694700325488
  - 0.9277676857260082
  - 0.9364869087964701
  - 0.9228547577769617
  train_jaccard_weighted_oob:
  - 0.8747701636772396
  - 0.8623187192635972
  - 0.8741730823094942
  - 0.8647943238732552
  - 0.8657145844375439
  train_label_ranking_average_precision_score:
  - 0.9886636636636638
  - 0.9863499245852188
  - 0.9888016940707524
  - 0.9871878901373283
  - 0.9891365688487583
  train_label_ranking_average_precision_score_oob:
  - 0.9497591341341342
  - 0.9525798139768726
  - 0.961609367214748
  - 0.9602340823970031
  - 0.9631677953348378
  train_matthews_corrcoef_macro:
  - 0.7630291699546335
  - 0.7618631196757258
  - 0.7668497729254421
  - 0.773623754883579
  - 0.760431311703257
  train_matthews_corrcoef_macro_oob:
  - 0.7076725731606087
  - 0.6965807600257783
  - 0.7101729185202355
  - 0.7010329872568025
  - 0.7010176409965841
  train_matthews_corrcoef_micro:
  - 0.9257371604224666
  - 0.9232013121802951
  - 0.9290534344677586
  - 0.9365768191647175
  - 0.9226365661064458
  train_matthews_corrcoef_micro_oob:
  - 0.8761177969606133
  - 0.8635038226280005
  - 0.8781503659215218
  - 0.8717467896693698
  - 0.8699070040577958
  train_matthews_corrcoef_samples:
  - 0.917830290672816
  - 0.9170175849265937
  - 0.928310303392749
  - 0.9307752569564356
  - 0.9202059378424409
  train_matthews_corrcoef_samples_oob:
  - 0.8673336767847574
  - 0.8544574392389296
  - 0.8767322651243629
  - 0.864113339009335
  - 0.8683519030863098
  train_matthews_corrcoef_weighted:
  - 0.9022614582727893
  - 0.9004119883785817
  - 0.9042980409941062
  - 0.9168151324139449
  - 0.8973763338431875
  train_matthews_corrcoef_weighted_oob:
  - 0.8380503445736888
  - 0.8216301176747443
  - 0.8357899349016917
  - 0.8235963866214183
  - 0.8222794010310692
  train_ndgc:
  - 0.9887334367632536
  - 0.9844523159995912
  - 0.9913179735476436
  - 0.9856026781684945
  - 0.9874020259285547
  train_ndgc_oob:
  - 0.9634923611768086
  - 0.9642354195935882
  - 0.9748565294783558
  - 0.9685006216083857
  - 0.9714897519324341
  train_neg_coverage_error:
  - -2.6666666666666665
  - -2.678733031674208
  - -2.6502242152466366
  - -2.6584269662921347
  - -2.674943566591422
  train_neg_coverage_error_oob:
  - -2.8671171171171173
  - -2.8868778280542986
  - -2.8228699551569507
  - -2.8
  - -2.8284424379232505
  train_neg_hamming_loss_macro:
  - -0.036411411411411417
  - -0.037707390648567124
  - -0.03475336322869955
  - -0.031086142322097384
  - -0.037998495109104594
  train_neg_hamming_loss_macro_oob:
  - -0.06081081081081081
  - -0.06711915535444947
  - -0.05979073243647235
  - -0.06292134831460673
  - -0.06395786305492852
  train_neg_hamming_loss_micro:
  - -0.03641141141141141
  - -0.03770739064856712
  - -0.034753363228699555
  - -0.031086142322097377
  - -0.03799849510910459
  train_neg_hamming_loss_micro_oob:
  - -0.060810810810810814
  - -0.06711915535444947
  - -0.059790732436472344
  - -0.06292134831460675
  - -0.06395786305492852
  train_neg_hamming_loss_samples:
  - -0.0364114114114114
  - -0.03770739064856712
  - -0.034753363228699555
  - -0.031086142322097377
  - -0.03799849510910459
  train_neg_hamming_loss_samples_oob:
  - -0.060810810810810814
  - -0.06711915535444947
  - -0.059790732436472344
  - -0.06292134831460675
  - -0.06395786305492851
  train_neg_hamming_loss_weighted:
  - -0.03927291165511061
  - -0.03950998786005959
  - -0.03768503152352593
  - -0.03306496800259518
  - -0.04035480293532378
  train_neg_hamming_loss_weighted_oob:
  - -0.06690722135748313
  - -0.07424677187948349
  - -0.06734107788095996
  - -0.0727496141633981
  - -0.07211088476573255
  train_neg_label_ranking_loss:
  - -0.0119994994994995
  - -0.012317747611865259
  - -0.012400348779272544
  - -0.013807740324594258
  - -0.010791321795836467
  train_neg_label_ranking_loss_oob:
  - -0.046859359359359365
  - -0.045720211161387636
  - -0.0408383158943697
  - -0.03848314606741573
  - -0.036004514672686234
  train_precision_macro:
  - 0.9635885885885886
  - 0.9622926093514329
  - 0.9652466367713005
  - 0.9689138576779026
  - 0.9620015048908953
  train_precision_macro_oob:
  - 0.9391891891891891
  - 0.9328808446455507
  - 0.9402092675635277
  - 0.9370786516853933
  - 0.9360421369450714
  train_precision_micro:
  - 0.9635885885885885
  - 0.9622926093514329
  - 0.9652466367713004
  - 0.9689138576779026
  - 0.9620015048908954
  train_precision_micro_oob:
  - 0.9391891891891891
  - 0.9328808446455505
  - 0.9402092675635276
  - 0.9370786516853933
  - 0.9360421369450714
  train_precision_samples:
  - 0.9635885885885885
  - 0.962292609351433
  - 0.9652466367713004
  - 0.9689138576779026
  - 0.9620015048908954
  train_precision_samples_oob:
  - 0.9391891891891891
  - 0.9328808446455504
  - 0.9402092675635276
  - 0.9370786516853933
  - 0.9360421369450717
  train_precision_weighted:
  - 0.9607270883448895
  - 0.9604900121399403
  - 0.9623149684764741
  - 0.9669350319974046
  - 0.9596451970646762
  train_precision_weighted_oob:
  - 0.9330927786425169
  - 0.9257532281205163
  - 0.9326589221190401
  - 0.9272503858366017
  - 0.9278891152342675
  train_recall_macro:
  - 0.9635885885885886
  - 0.9622926093514329
  - 0.9652466367713005
  - 0.9689138576779026
  - 0.9620015048908953
  train_recall_macro_oob:
  - 0.9391891891891891
  - 0.9328808446455507
  - 0.9402092675635277
  - 0.9370786516853933
  - 0.9360421369450714
  train_recall_micro:
  - 0.9635885885885885
  - 0.9622926093514329
  - 0.9652466367713004
  - 0.9689138576779026
  - 0.9620015048908954
  train_recall_micro_oob:
  - 0.9391891891891891
  - 0.9328808446455505
  - 0.9402092675635276
  - 0.9370786516853933
  - 0.9360421369450714
  train_recall_samples:
  - 0.9635885885885885
  - 0.962292609351433
  - 0.9652466367713004
  - 0.9689138576779026
  - 0.9620015048908954
  train_recall_samples_oob:
  - 0.9391891891891891
  - 0.9328808446455504
  - 0.9402092675635276
  - 0.9370786516853933
  - 0.9360421369450717
  train_recall_weighted:
  - 0.9607270883448895
  - 0.9604900121399403
  - 0.9623149684764741
  - 0.9669350319974046
  - 0.9596451970646762
  train_recall_weighted_oob:
  - 0.9330927786425169
  - 0.9257532281205163
  - 0.9326589221190401
  - 0.9272503858366017
  - 0.9278891152342675
  train_roc_auc_macro:
  - 0.9974334698476404
  - 0.9976302629745545
  - 0.9976975473719175
  - 0.9978806169741802
  - 0.9974910134852907
  train_roc_auc_macro_oob:
  - 0.976112094263264
  - 0.9617034828940066
  - 0.9713186647630101
  - 0.9570649014639919
  - 0.9661444036294555
  train_roc_auc_micro:
  - 0.9942036458369261
  - 0.9935404542590258
  - 0.9940121640046136
  - 0.9941149710575636
  - 0.9937729307520133
  train_roc_auc_micro_oob:
  - 0.9754096852890387
  - 0.9740500361405591
  - 0.9747679941833755
  - 0.9773147217108666
  - 0.9751580635484689
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9970814620816699
  - 0.9973736616483567
  - 0.9974289035927681
  - 0.9976558616193868
  - 0.9971561701000667
  train_roc_auc_weighted_oob:
  - 0.9766551287675752
  - 0.9770305280087246
  - 0.9753224268652023
  - 0.9791367013001011
  - 0.9776831037027728
start: 2023-12-21 22:08:13.959557
wrapper: null
