active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZ+T8gMzMzMzMLwACZmZmZmdm/wJmZmZmZ+T+AMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:47:19.828811
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__2
  params: {}
hash: ab65f6269d1e6ace9cae88841ebca0b0a6c8cb710b1621e38049f98f15ae3f2f
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ab65f62_20231222T024657088076_embedding_proba_weak__2_emotions.yml
results:
  fit_time:
  - 9.420692205429077
  - 9.1813805103302
  - 9.609354972839355
  - 10.075751543045044
  - 10.058154821395874
  score_time:
  - 2.6198933124542236
  - 2.72379469871521
  - 2.9194834232330322
  - 3.0929667949676514
  - 2.9757540225982666
  test_average_precision_macro:
  - 0.7187929796876656
  - 0.711487386044715
  - 0.7465177763322054
  - 0.7116697829932047
  - 0.7278940910472276
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6738875565868968
  - 0.682325706433848
  - 0.740999853308238
  - 0.6954862405302855
  - 0.6883513749111869
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7716524216524216
  - 0.8000683060109289
  - 0.8095238095238096
  - 0.7954653371320037
  - 0.8030838041431262
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7099357983140245
  - 0.7058813070661561
  - 0.7552250238918962
  - 0.7080387726988366
  - 0.7172108269315322
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8162393162393161
  - 0.819672131147541
  - 0.8095238095238094
  - 0.784900284900285
  - 0.8079096045197741
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8162393162393162
  - 0.819672131147541
  - 0.8095238095238095
  - 0.7849002849002849
  - 0.807909604519774
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8162393162393163
  - 0.8196721311475409
  - 0.8095238095238095
  - 0.7849002849002849
  - 0.807909604519774
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8071484071484073
  - 0.8172721902230099
  - 0.8122870769929593
  - 0.7773892773892772
  - 0.802776937046005
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6932838720393483
  - 0.6978432083611056
  - 0.6833233503767561
  - 0.6518370727393206
  - 0.6816026068092547
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6895306859205776
  - 0.6944444444444444
  - 0.68
  - 0.6459554513481829
  - 0.6777251184834123
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7236874236874234
  - 0.7298985167837626
  - 0.7196514969624211
  - 0.6807525807525807
  - 0.7125907990314768
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6803742621092064
  - 0.6938867419861332
  - 0.6870418002254357
  - 0.6412139665334377
  - 0.6741932370232633
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7716524216524213
  - 0.8000683060109286
  - 0.8095238095238095
  - 0.7954653371320036
  - 0.8030838041431261
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5725909588837061
  - 0.572912669205868
  - 0.5448429149726309
  - 0.5026919980215784
  - 0.5506026234795975
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5746055562336038
  - 0.5825501124840052
  - 0.5588604676762545
  - 0.5154028007695265
  - 0.5626516586841905
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5637740744217498
  - 0.5789447399869055
  - 0.5721479189791541
  - 0.5142375408864597
  - 0.5800684716512254
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.563182387596928
  - 0.5786669285544381
  - 0.5602026173188452
  - 0.4983559613659751
  - 0.5500238944483626
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8398676018110414
  - 0.8612549603707074
  - 0.8690839767927505
  - 0.8588985951650534
  - 0.8629001851218264
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8034188034188032
  - -2.6311475409836067
  - -2.6638655462184873
  - -2.7777777777777777
  - -2.669491525423729
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18376068376068377
  - -0.180327868852459
  - -0.19047619047619047
  - -0.21509971509971512
  - -0.192090395480226
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18376068376068377
  - -0.18032786885245902
  - -0.19047619047619047
  - -0.2150997150997151
  - -0.192090395480226
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18376068376068372
  - -0.18032786885245902
  - -0.1904761904761905
  - -0.21509971509971507
  - -0.19209039548022597
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.19285159285159284
  - -0.1827278097769901
  - -0.18771292300704065
  - -0.22261072261072262
  - -0.1972230629539952
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17872744539411206
  - -0.14945355191256832
  - -0.151844070961718
  - -0.1689221272554606
  - -0.15054143126177025
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8162393162393161
  - 0.819672131147541
  - 0.8095238095238094
  - 0.784900284900285
  - 0.8079096045197741
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8162393162393162
  - 0.819672131147541
  - 0.8095238095238095
  - 0.7849002849002849
  - 0.807909604519774
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8162393162393163
  - 0.8196721311475409
  - 0.8095238095238095
  - 0.7849002849002849
  - 0.807909604519774
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8071484071484073
  - 0.8172721902230099
  - 0.8122870769929593
  - 0.7773892773892772
  - 0.802776937046005
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8162393162393161
  - 0.819672131147541
  - 0.8095238095238094
  - 0.784900284900285
  - 0.8079096045197741
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8162393162393162
  - 0.819672131147541
  - 0.8095238095238095
  - 0.7849002849002849
  - 0.807909604519774
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8162393162393163
  - 0.8196721311475409
  - 0.8095238095238095
  - 0.7849002849002849
  - 0.807909604519774
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8071484071484073
  - 0.8172721902230099
  - 0.8122870769929593
  - 0.7773892773892772
  - 0.802776937046005
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8462107658304548
  - 0.847852847158356
  - 0.8659085197070814
  - 0.844741825241888
  - 0.8504295632481166
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8611750282912108
  - 0.8691308956014839
  - 0.8785797993115068
  - 0.8610524330441343
  - 0.8696133412042502
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8212725546058879
  - 0.8505464480874317
  - 0.848155929038282
  - 0.8310778727445394
  - 0.8494585687382298
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8403278400198899
  - 0.8454725479639988
  - 0.8712042181832851
  - 0.8420524622551301
  - 0.8437047076919065
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8403768007913827
  - 0.8434432848350485
  - 0.8359987780772621
  - 0.8335291248373661
  - 0.8360547391583131
  train_average_precision_macro_oob:
  - 0.8080169464522297
  - 0.811278347722835
  - 0.801812948618962
  - 0.794523368978241
  - 0.7963913304375957
  train_average_precision_micro:
  - 0.7886990758664866
  - 0.7848586445530942
  - 0.7698318731350905
  - 0.7703993985170514
  - 0.7869131415930347
  train_average_precision_micro_oob:
  - 0.7637415889246859
  - 0.7607156477178076
  - 0.742019090752379
  - 0.7427980725993536
  - 0.7556262934642045
  train_average_precision_samples:
  - 0.8824929971988795
  - 0.878001887237556
  - 0.8741209563994375
  - 0.8710667600373482
  - 0.8780233918128656
  train_average_precision_samples_oob:
  - 0.8544876283846872
  - 0.8484076433121018
  - 0.8483766994842944
  - 0.840108543417367
  - 0.8536140350877194
  train_average_precision_weighted:
  - 0.8262190533999275
  - 0.8292461628315803
  - 0.8202451797316835
  - 0.8184807089453545
  - 0.8231021774468512
  train_average_precision_weighted_oob:
  - 0.7973538641237622
  - 0.8002749988836051
  - 0.7884229907038146
  - 0.7830346396775631
  - 0.7856094889931537
  train_f1_macro:
  - 0.9033613445378151
  - 0.8991507430997876
  - 0.8913502109704642
  - 0.8949579831932771
  - 0.8971929824561403
  train_f1_macro_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490858
  - 0.8602941176470588
  - 0.8592982456140351
  train_f1_micro:
  - 0.9033613445378151
  - 0.8991507430997877
  - 0.8913502109704642
  - 0.8949579831932774
  - 0.8971929824561403
  train_f1_micro_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490858
  - 0.8602941176470589
  - 0.8592982456140351
  train_f1_samples:
  - 0.9033613445378151
  - 0.8991507430997877
  - 0.8913502109704642
  - 0.8949579831932774
  - 0.8971929824561403
  train_f1_samples_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490857
  - 0.8602941176470589
  - 0.859298245614035
  train_f1_weighted:
  - 0.8968340714664245
  - 0.8923883193627697
  - 0.8834257222047605
  - 0.889559202059202
  - 0.8915051202667303
  train_f1_weighted_oob:
  - 0.858510296010296
  - 0.8507402241999876
  - 0.8509967521025612
  - 0.8556878832614128
  - 0.8548844963086449
  train_jaccard_macro:
  - 0.826026995732264
  - 0.8188990565821069
  - 0.806895988309544
  - 0.8118210969842625
  - 0.8156616111244922
  train_jaccard_macro_oob:
  - 0.7598187339745627
  - 0.7503723189687813
  - 0.7543170189053598
  - 0.7565801138769479
  - 0.7550041201198519
  train_jaccard_micro:
  - 0.8237547892720306
  - 0.8167791706846673
  - 0.8039961941008563
  - 0.8098859315589354
  - 0.813553929366847
  train_jaccard_micro_oob:
  - 0.7580794090489381
  - 0.7482214661305289
  - 0.7512315270935961
  - 0.7548387096774194
  - 0.7533066748692709
  train_jaccard_samples:
  - 0.8448879551820727
  - 0.8393489030431704
  - 0.8276974080771549
  - 0.8326830732292916
  - 0.8362907268170425
  train_jaccard_samples_oob:
  - 0.7860044017607042
  - 0.7773228187240926
  - 0.77861161342174
  - 0.7841036414565825
  - 0.7807418546365913
  train_jaccard_weighted:
  - 0.8153276457887003
  - 0.8079539592833146
  - 0.7942656774500558
  - 0.8029951776681221
  - 0.8063073959903722
  train_jaccard_weighted_oob:
  - 0.753651579326974
  - 0.7422493715735438
  - 0.7436397195707943
  - 0.7493759806243473
  - 0.7481025717537784
  train_label_ranking_average_precision_score:
  - 0.8824929971988787
  - 0.8780018872375553
  - 0.8741209563994358
  - 0.8710667600373473
  - 0.8780233918128646
  train_label_ranking_average_precision_score_oob:
  - 0.8544876283846863
  - 0.8484076433121007
  - 0.848376699484293
  - 0.840108543417366
  - 0.8536140350877179
  train_matthews_corrcoef_macro:
  - 0.7852433979025983
  - 0.7763634947895656
  - 0.7621494677409267
  - 0.7654249015182281
  - 0.772174582404847
  train_matthews_corrcoef_macro_oob:
  - 0.6813280580021642
  - 0.668032338884061
  - 0.678532364919903
  - 0.6800485777589574
  - 0.6788631782366882
  train_matthews_corrcoef_micro:
  - 0.7830226955849842
  - 0.7734575619359338
  - 0.7583018293382843
  - 0.764378987110645
  - 0.7693305379633184
  train_matthews_corrcoef_micro_oob:
  - 0.6844270795792498
  - 0.6692426311494011
  - 0.6774370522597042
  - 0.6810604139305332
  - 0.6794189178288177
  train_matthews_corrcoef_samples:
  - 0.7929515591701186
  - 0.7813935798530053
  - 0.7681479885741636
  - 0.7749695123528145
  - 0.7741776690703223
  train_matthews_corrcoef_samples_oob:
  - 0.6956876171857269
  - 0.6756766312843734
  - 0.6880088386467268
  - 0.6866322713965698
  - 0.6870087330137573
  train_matthews_corrcoef_weighted:
  - 0.7767320499906993
  - 0.7676303426863661
  - 0.7515199775114482
  - 0.7594227094354568
  - 0.7656722613442801
  train_matthews_corrcoef_weighted_oob:
  - 0.6808443462481198
  - 0.6646886576756588
  - 0.6717785942612128
  - 0.6776846491317692
  - 0.6769794931025982
  train_ndgc:
  - 0.9150361519068737
  - 0.9124614750827938
  - 0.9106914916803421
  - 0.9087294380098698
  - 0.9136202984641485
  train_ndgc_oob:
  - 0.897641026057951
  - 0.8941086916372961
  - 0.8945531616546459
  - 0.8881393849921062
  - 0.8977701413389539
  train_neg_coverage_error:
  - -2.1848739495798317
  - -2.2356687898089174
  - -2.242616033755274
  - -2.258403361344538
  - -2.225263157894737
  train_neg_coverage_error_oob:
  - -2.3970588235294117
  - -2.447983014861996
  - -2.4472573839662446
  - -2.466386554621849
  - -2.3957894736842107
  train_neg_hamming_loss_macro:
  - -0.09663865546218488
  - -0.1008492569002123
  - -0.10864978902953587
  - -0.10504201680672269
  - -0.10280701754385964
  train_neg_hamming_loss_macro_oob:
  - -0.1376050420168067
  - -0.14401981599433827
  - -0.1420534458509142
  - -0.13970588235294118
  - -0.1407017543859649
  train_neg_hamming_loss_micro:
  - -0.09663865546218488
  - -0.10084925690021232
  - -0.10864978902953587
  - -0.10504201680672269
  - -0.10280701754385965
  train_neg_hamming_loss_micro_oob:
  - -0.13760504201680673
  - -0.14401981599433827
  - -0.1420534458509142
  - -0.13970588235294118
  - -0.1407017543859649
  train_neg_hamming_loss_samples:
  - -0.09663865546218488
  - -0.10084925690021232
  - -0.10864978902953587
  - -0.10504201680672269
  - -0.10280701754385964
  train_neg_hamming_loss_samples_oob:
  - -0.13760504201680673
  - -0.1440198159943383
  - -0.1420534458509142
  - -0.13970588235294118
  - -0.14070175438596494
  train_neg_hamming_loss_weighted:
  - -0.10316592853357559
  - -0.10761168063723024
  - -0.11657427779523959
  - -0.11044079794079793
  - -0.10849487973326982
  train_neg_hamming_loss_weighted_oob:
  - -0.14148970398970398
  - -0.14925977580001248
  - -0.14900324789743885
  - -0.14431211673858735
  - -0.14511550369135506
  train_neg_label_ranking_loss:
  - -0.06683006535947712
  - -0.07113706062750648
  - -0.07410337552742616
  - -0.07613795518207284
  - -0.07060818713450293
  train_neg_label_ranking_loss_oob:
  - -0.09981325863678805
  - -0.10493630573248407
  - -0.10722573839662448
  - -0.11140873015873015
  - -0.09842690058479532
  train_precision_macro:
  - 0.9033613445378151
  - 0.8991507430997876
  - 0.8913502109704642
  - 0.8949579831932771
  - 0.8971929824561403
  train_precision_macro_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490858
  - 0.8602941176470588
  - 0.8592982456140351
  train_precision_micro:
  - 0.9033613445378151
  - 0.8991507430997877
  - 0.8913502109704642
  - 0.8949579831932774
  - 0.8971929824561403
  train_precision_micro_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490858
  - 0.8602941176470589
  - 0.8592982456140351
  train_precision_samples:
  - 0.9033613445378151
  - 0.8991507430997877
  - 0.8913502109704642
  - 0.8949579831932774
  - 0.8971929824561403
  train_precision_samples_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490857
  - 0.8602941176470589
  - 0.859298245614035
  train_precision_weighted:
  - 0.8968340714664245
  - 0.8923883193627697
  - 0.8834257222047605
  - 0.889559202059202
  - 0.8915051202667303
  train_precision_weighted_oob:
  - 0.858510296010296
  - 0.8507402241999876
  - 0.8509967521025612
  - 0.8556878832614128
  - 0.8548844963086449
  train_recall_macro:
  - 0.9033613445378151
  - 0.8991507430997876
  - 0.8913502109704642
  - 0.8949579831932771
  - 0.8971929824561403
  train_recall_macro_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490858
  - 0.8602941176470588
  - 0.8592982456140351
  train_recall_micro:
  - 0.9033613445378151
  - 0.8991507430997877
  - 0.8913502109704642
  - 0.8949579831932774
  - 0.8971929824561403
  train_recall_micro_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490858
  - 0.8602941176470589
  - 0.8592982456140351
  train_recall_samples:
  - 0.9033613445378151
  - 0.8991507430997877
  - 0.8913502109704642
  - 0.8949579831932774
  - 0.8971929824561403
  train_recall_samples_oob:
  - 0.8623949579831933
  - 0.8559801840056617
  - 0.8579465541490857
  - 0.8602941176470589
  - 0.859298245614035
  train_recall_weighted:
  - 0.8968340714664245
  - 0.8923883193627697
  - 0.8834257222047605
  - 0.889559202059202
  - 0.8915051202667303
  train_recall_weighted_oob:
  - 0.858510296010296
  - 0.8507402241999876
  - 0.8509967521025612
  - 0.8556878832614128
  - 0.8548844963086449
  train_roc_auc_macro:
  - 0.9440826539916505
  - 0.9425312299894327
  - 0.937202393092121
  - 0.9392029892987716
  - 0.9412539088205415
  train_roc_auc_macro_oob:
  - 0.9183684901130688
  - 0.9154470241177074
  - 0.9104907491428221
  - 0.9109695262226182
  - 0.9158526020886572
  train_roc_auc_micro:
  - 0.9435597945506483
  - 0.9416624002234065
  - 0.9366176155242024
  - 0.9376333269244853
  - 0.9408461952744163
  train_roc_auc_micro_oob:
  - 0.9211517157401302
  - 0.9176491121919433
  - 0.9124515502758839
  - 0.9139108620815938
  - 0.9172522244675317
  train_roc_auc_samples:
  - 0.9331699346405228
  - 0.9288629393724935
  - 0.9258966244725738
  - 0.9238620448179271
  - 0.9293918128654971
  train_roc_auc_samples_oob:
  - 0.900186741363212
  - 0.895063694267516
  - 0.8927742616033755
  - 0.8885912698412698
  - 0.9015730994152047
  train_roc_auc_weighted:
  - 0.9362346868010402
  - 0.9341115401004608
  - 0.9276326222218495
  - 0.9310611056577202
  - 0.9337379348747672
  train_roc_auc_weighted_oob:
  - 0.9122479305904058
  - 0.9089354653107405
  - 0.9024613831556327
  - 0.9047067886326233
  - 0.9097929180927762
start: 2023-12-22 02:46:57.088076
wrapper: null
