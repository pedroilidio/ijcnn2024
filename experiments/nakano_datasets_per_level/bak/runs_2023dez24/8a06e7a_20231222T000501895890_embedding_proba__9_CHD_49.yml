active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT/MzMzMzMz8v6CZmZmZmck/NDMzMzMz8z+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACMAAAAAAAAAIQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:07:14.520840
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__9
  params: {}
hash: 8a06e7a5c857eb499593d2934caffe52365f035b2ce9a63c8bffaa566863aae6
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8a06e7a_20231222T000501895890_embedding_proba__9_CHD_49.yml
results:
  fit_time:
  - 104.42691469192505
  - 104.88324975967407
  - 103.8052887916565
  - 106.33210706710815
  - 105.98431205749512
  score_time:
  - 8.246368408203125
  - 8.649372577667236
  - 8.575998067855835
  - 8.321037530899048
  - 8.653748512268066
  test_average_precision_macro:
  - 0.4899251643492662
  - 0.49395186897062243
  - 0.5337747209717386
  - 0.5002207910678318
  - 0.4770652252013125
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6153913842181518
  - 0.6225387114942238
  - 0.6184129394391848
  - 0.6126585328561387
  - 0.5930957953198197
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7682870370370369
  - 0.7602109053497942
  - 0.7601476476476476
  - 0.7218527013251782
  - 0.7491764995083579
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6080529371123915
  - 0.6170786264954157
  - 0.6352668596455566
  - 0.6201266941056264
  - 0.6047673109940206
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6257309941520468
  - 0.5864197530864198
  - 0.6171171171171171
  - 0.6009174311926606
  - 0.6179941002949852
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6257309941520468
  - 0.5864197530864198
  - 0.6171171171171171
  - 0.6009174311926605
  - 0.6179941002949852
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6257309941520469
  - 0.5864197530864198
  - 0.6171171171171168
  - 0.6009174311926605
  - 0.6179941002949852
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5318173482486704
  - 0.4789824426502627
  - 0.5142695142695142
  - 0.4945083344101305
  - 0.5207933659261093
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.48423484371246334
  - 0.44889228263179093
  - 0.47895088657472557
  - 0.46324055326362834
  - 0.4774083526411081
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4553191489361702
  - 0.4148471615720524
  - 0.44625407166123776
  - 0.42950819672131146
  - 0.4471718249733191
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4835497835497835
  - 0.43342953342953344
  - 0.4758589758589759
  - 0.4532149807379166
  - 0.4695360686511129
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3694831142169254
  - 0.3278357857404234
  - 0.3568150409024319
  - 0.33699651914555245
  - 0.36044437316991335
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7682870370370372
  - 0.7602109053497945
  - 0.7781656656656655
  - 0.731027013251784
  - 0.7491764995083581
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05458148667094375
  - 0.03939497369862491
  - 0.09845709989728078
  - 0.0197353791244549
  - 0.08909474767973447
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.19821793643893149
  - 0.1418201528806691
  - 0.19952065775170685
  - 0.15715001028655703
  - 0.18849014058719707
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1691606498603058
  - 0.10583630498374597
  - 0.15828095270063544
  - 0.1213676009718439
  - 0.12748665982099142
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.05485065585887978
  - 0.019240770567266568
  - 0.09210737798369295
  - 0.011604424426123913
  - 0.10799859676145178
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8456472955817876
  - 0.8449715615820024
  - 0.8324032611649099
  - 0.8117482820478729
  - 0.8318575046896196
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6666666666666665
  - -3.935185185185185
  - -3.684684684684685
  - -3.963302752293578
  - -3.938053097345133
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.37426900584795325
  - -0.41358024691358025
  - -0.3828828828828828
  - -0.39908256880733944
  - -0.3820058997050147
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3742690058479532
  - -0.41358024691358025
  - -0.38288288288288286
  - -0.39908256880733944
  - -0.38200589970501475
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.37426900584795325
  - -0.41358024691358025
  - -0.3828828828828828
  - -0.3990825688073394
  - -0.38200589970501475
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.46818265175132956
  - -0.5210175573497373
  - -0.4857304857304858
  - -0.5054916655898695
  - -0.47920663407389075
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2330896686159844
  - -0.24542181069958846
  - -0.23726226226226224
  - -0.28374108053007135
  - -0.26656833824975423
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6257309941520468
  - 0.5864197530864198
  - 0.6171171171171171
  - 0.6009174311926606
  - 0.6179941002949852
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6257309941520468
  - 0.5864197530864198
  - 0.6171171171171171
  - 0.6009174311926605
  - 0.6179941002949852
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6257309941520469
  - 0.5864197530864198
  - 0.6171171171171168
  - 0.6009174311926605
  - 0.6179941002949852
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5318173482486704
  - 0.4789824426502627
  - 0.5142695142695142
  - 0.4945083344101305
  - 0.5207933659261093
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6257309941520468
  - 0.5864197530864198
  - 0.6171171171171171
  - 0.6009174311926606
  - 0.6179941002949852
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6257309941520468
  - 0.5864197530864198
  - 0.6171171171171171
  - 0.6009174311926605
  - 0.6179941002949852
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6257309941520469
  - 0.5864197530864198
  - 0.6171171171171168
  - 0.6009174311926605
  - 0.6179941002949852
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5318173482486704
  - 0.4789824426502627
  - 0.5142695142695142
  - 0.4945083344101305
  - 0.5207933659261093
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.525264667192994
  - 0.5226627851757096
  - 0.5423116402581433
  - 0.5361669709858671
  - 0.5023644107565386
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7061497819008417
  - 0.7071931836801573
  - 0.6965218991534781
  - 0.6990959269128283
  - 0.6937259169402026
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7669103313840155
  - 0.7545781893004114
  - .nan
  - .nan
  - 0.7334316617502459
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5327343556187636
  - 0.5431352674129181
  - 0.5391897990054478
  - 0.5226078024950419
  - 0.5421745463763791
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.816488736452861
  - 0.8174564120032527
  - 0.8002815860240499
  - 0.7972313906408098
  - 0.8054176340106389
  train_average_precision_macro_oob:
  - 0.7264025021149808
  - 0.7218289557811843
  - 0.7113429799614353
  - 0.7145390192655879
  - 0.7146895453217724
  train_average_precision_micro:
  - 0.8662761482242896
  - 0.8661368160176414
  - 0.8574998882647796
  - 0.8535529186231192
  - 0.8677556288838723
  train_average_precision_micro_oob:
  - 0.8630170442893605
  - 0.8609054858252041
  - 0.8547007565544805
  - 0.8490475661824857
  - 0.8625057397515085
  train_average_precision_samples:
  - 0.875485008818342
  - 0.8743046234153616
  - 0.8886229979979979
  - 0.8716809915296462
  - 0.8879964806435394
  train_average_precision_samples_oob:
  - 0.8756172839506173
  - 0.8664342530449912
  - 0.8768893893893893
  - 0.8703357000498255
  - 0.8776458019105078
  train_average_precision_weighted:
  - 0.8694635275419555
  - 0.8706024554292617
  - 0.8598722432971161
  - 0.8626552178311243
  - 0.8661702552787137
  train_average_precision_weighted_oob:
  - 0.8620148960112277
  - 0.8615971101004685
  - 0.8533814752767733
  - 0.8525713248824497
  - 0.8580542933258715
  train_f1_macro:
  - 0.7747543461829176
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741405
  - 0.7760180995475112
  train_f1_macro_oob:
  - 0.7694633408919124
  - 0.7777777777777777
  - 0.7665165165165164
  - 0.7690582959641256
  - 0.7703619909502262
  train_f1_micro:
  - 0.7747543461829176
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741405
  - 0.7760180995475113
  train_f1_micro_oob:
  - 0.7694633408919124
  - 0.7777777777777778
  - 0.7665165165165165
  - 0.7690582959641256
  - 0.7703619909502263
  train_f1_samples:
  - 0.7747543461829175
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741404
  - 0.7760180995475113
  train_f1_samples_oob:
  - 0.7694633408919124
  - 0.7777777777777777
  - 0.7665165165165166
  - 0.7690582959641256
  - 0.7703619909502263
  train_f1_weighted:
  - 0.7156264543663171
  - 0.72058302555581
  - 0.7160334418187821
  - 0.7179204231183887
  - 0.7151729801868392
  train_f1_weighted_oob:
  - 0.7097545277208408
  - 0.7176882531741697
  - 0.7068573809411506
  - 0.7097154731957313
  - 0.7089798867593756
  train_jaccard_macro:
  - 0.6462966108327929
  - 0.6541495449987709
  - 0.648752129214746
  - 0.6497888130628786
  - 0.6486800981628894
  train_jaccard_macro_oob:
  - 0.6395196277338003
  - 0.6507301875332928
  - 0.6356277291490693
  - 0.6388172504110906
  - 0.6413133201214196
  train_jaccard_micro:
  - 0.6323257248611968
  - 0.6398654845612962
  - 0.6343558282208589
  - 0.6356968215158925
  - 0.634011090573013
  train_jaccard_micro_oob:
  - 0.6253071253071253
  - 0.6363636363636364
  - 0.6214242239805234
  - 0.6247723132969034
  - 0.6264949402023919
  train_jaccard_samples:
  - 0.6580282906813518
  - 0.6642271226163843
  - 0.6614435864435864
  - 0.6617232543241512
  - 0.6606981254040077
  train_jaccard_samples_oob:
  - 0.6511175898931
  - 0.6614466815809097
  - 0.648048048048048
  - 0.6505658765748452
  - 0.6532320620555914
  train_jaccard_weighted:
  - 0.5632464819582749
  - 0.5693549575887906
  - 0.5642986336460342
  - 0.5665782066118805
  - 0.5634409434229258
  train_jaccard_weighted_oob:
  - 0.5560915943441863
  - 0.5657587297816478
  - 0.5522528285533848
  - 0.556014559140737
  - 0.5557222135763396
  train_label_ranking_average_precision_score:
  - 0.8822877299067766
  - 0.881016032811334
  - 0.8908752502502494
  - 0.8761652964623803
  - 0.8947838109602815
  train_label_ranking_average_precision_score_oob:
  - 0.8824200050390522
  - 0.8731456624409639
  - 0.8791416416416408
  - 0.8748200049825595
  - 0.8844331322272492
  train_matthews_corrcoef_macro:
  - 0.4530829459501835
  - 0.45988886787702327
  - 0.45510085855295834
  - 0.45686105374397684
  - 0.45613327026828454
  train_matthews_corrcoef_macro_oob:
  - 0.44318553606732825
  - 0.45355547484342934
  - 0.43357343597335807
  - 0.4394233694711071
  - 0.4446741739380575
  train_matthews_corrcoef_micro:
  - 0.5858339819049678
  - 0.5915461040801078
  - 0.5859991615711969
  - 0.5865922512796059
  - 0.5866812382145239
  train_matthews_corrcoef_micro_oob:
  - 0.5763952286976575
  - 0.5857948802882446
  - 0.5673317844648796
  - 0.5711970867784624
  - 0.5754883752594108
  train_matthews_corrcoef_samples:
  - 0.5090139995488222
  - 0.5100623362775115
  - 0.5169119291405058
  - 0.5215677512706147
  - 0.5290922528905824
  train_matthews_corrcoef_samples_oob:
  - 0.4986925208606686
  - 0.5026954349607172
  - 0.498162122360386
  - 0.5064962820459982
  - 0.5159538568479975
  train_matthews_corrcoef_weighted:
  - 0.520554429047412
  - 0.5279449167045048
  - 0.520912049381991
  - 0.5223362664419103
  - 0.5198021255349478
  train_matthews_corrcoef_weighted_oob:
  - 0.5111696043451944
  - 0.5210888486923528
  - 0.5022528246796771
  - 0.505576945092822
  - 0.5083493935645207
  train_ndgc:
  - 0.9229653436183908
  - 0.9210146165401285
  - 0.9301458773739837
  - 0.9220039132555746
  - 0.9317001146438292
  train_ndgc_oob:
  - 0.9242179038659761
  - 0.9153485248220177
  - 0.9226279267699019
  - 0.920809169675208
  - 0.9250003266699631
  train_neg_coverage_error:
  - -3.3741496598639458
  - -3.2639821029082774
  - -3.225225225225225
  - -3.399103139013453
  - -3.2941176470588234
  train_neg_coverage_error_oob:
  - -3.4263038548752833
  - -3.3131991051454137
  - -3.2995495495495497
  - -3.4237668161434978
  - -3.3597285067873304
  train_neg_hamming_loss_macro:
  - -0.2252456538170824
  - -0.21961222967934377
  - -0.22372372372372373
  - -0.22272047832585948
  - -0.22398190045248867
  train_neg_hamming_loss_macro_oob:
  - -0.23053665910808765
  - -0.22222222222222224
  - -0.2334834834834835
  - -0.23094170403587444
  - -0.22963800904977374
  train_neg_hamming_loss_micro:
  - -0.2252456538170824
  - -0.21961222967934377
  - -0.22372372372372373
  - -0.2227204783258595
  - -0.2239819004524887
  train_neg_hamming_loss_micro_oob:
  - -0.23053665910808768
  - -0.2222222222222222
  - -0.2334834834834835
  - -0.23094170403587444
  - -0.22963800904977374
  train_neg_hamming_loss_samples:
  - -0.22524565381708242
  - -0.21961222967934374
  - -0.2237237237237237
  - -0.22272047832585948
  - -0.2239819004524887
  train_neg_hamming_loss_samples_oob:
  - -0.23053665910808765
  - -0.22222222222222224
  - -0.23348348348348347
  - -0.23094170403587444
  - -0.22963800904977372
  train_neg_hamming_loss_weighted:
  - -0.28437354563368283
  - -0.27941697444419
  - -0.28396655818121785
  - -0.2820795768816112
  - -0.28482701981316083
  train_neg_hamming_loss_weighted_oob:
  - -0.29024547227915914
  - -0.2823117468258302
  - -0.2931426190588495
  - -0.2902845268042687
  - -0.29102011324062443
  train_neg_label_ranking_loss:
  - -0.1246031746031746
  - -0.12010937111608253
  - -0.11026026026026026
  - -0.13584329845540608
  - -0.11432880844645552
  train_neg_label_ranking_loss_oob:
  - -0.13138070042831948
  - -0.12831220482227196
  - -0.12050175175175176
  - -0.13746885899352268
  - -0.12859477124183005
  train_precision_macro:
  - 0.7747543461829176
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741405
  - 0.7760180995475112
  train_precision_macro_oob:
  - 0.7694633408919124
  - 0.7777777777777777
  - 0.7665165165165164
  - 0.7690582959641256
  - 0.7703619909502262
  train_precision_micro:
  - 0.7747543461829176
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741405
  - 0.7760180995475113
  train_precision_micro_oob:
  - 0.7694633408919124
  - 0.7777777777777778
  - 0.7665165165165165
  - 0.7690582959641256
  - 0.7703619909502263
  train_precision_samples:
  - 0.7747543461829175
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741404
  - 0.7760180995475113
  train_precision_samples_oob:
  - 0.7694633408919124
  - 0.7777777777777777
  - 0.7665165165165166
  - 0.7690582959641256
  - 0.7703619909502263
  train_precision_weighted:
  - 0.7156264543663171
  - 0.72058302555581
  - 0.7160334418187821
  - 0.7179204231183887
  - 0.7151729801868392
  train_precision_weighted_oob:
  - 0.7097545277208408
  - 0.7176882531741697
  - 0.7068573809411506
  - 0.7097154731957313
  - 0.7089798867593756
  train_recall_macro:
  - 0.7747543461829176
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741405
  - 0.7760180995475112
  train_recall_macro_oob:
  - 0.7694633408919124
  - 0.7777777777777777
  - 0.7665165165165164
  - 0.7690582959641256
  - 0.7703619909502262
  train_recall_micro:
  - 0.7747543461829176
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741405
  - 0.7760180995475113
  train_recall_micro_oob:
  - 0.7694633408919124
  - 0.7777777777777778
  - 0.7665165165165165
  - 0.7690582959641256
  - 0.7703619909502263
  train_recall_samples:
  - 0.7747543461829175
  - 0.7803877703206562
  - 0.7762762762762763
  - 0.7772795216741404
  - 0.7760180995475113
  train_recall_samples_oob:
  - 0.7694633408919124
  - 0.7777777777777777
  - 0.7665165165165166
  - 0.7690582959641256
  - 0.7703619909502263
  train_recall_weighted:
  - 0.7156264543663171
  - 0.72058302555581
  - 0.7160334418187821
  - 0.7179204231183887
  - 0.7151729801868392
  train_recall_weighted_oob:
  - 0.7097545277208408
  - 0.7176882531741697
  - 0.7068573809411506
  - 0.7097154731957313
  - 0.7089798867593756
  train_roc_auc_macro:
  - 0.8156707747936792
  - 0.8152607338064746
  - 0.7789103793664554
  - 0.7829334477503475
  - 0.7852080109819606
  train_roc_auc_macro_oob:
  - 0.7745818536423114
  - 0.7747772756901137
  - 0.7269692188015867
  - 0.7705988316203288
  - 0.7415085782768346
  train_roc_auc_micro:
  - 0.8691396419854013
  - 0.8701640121495534
  - 0.856573934197426
  - 0.8524083541602058
  - 0.8709666859032746
  train_roc_auc_micro_oob:
  - 0.8648563257682651
  - 0.8641509155085308
  - 0.8533824472818325
  - 0.8478351834284985
  - 0.8637184826719879
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.799373246416457
  - 0.8064461836438043
  - 0.7791454486172641
  - 0.7900793036606077
  - 0.7973799583575559
  train_roc_auc_weighted_oob:
  - 0.7946796463000219
  - 0.8007631286626082
  - 0.7769236990986782
  - 0.784554868217254
  - 0.7926593374029128
start: 2023-12-22 00:05:01.895890
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
