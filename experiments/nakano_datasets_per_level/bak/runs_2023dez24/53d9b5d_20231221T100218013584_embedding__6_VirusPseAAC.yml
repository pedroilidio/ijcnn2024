active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:02:46.156968
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__6
  params: {}
hash: 53d9b5d29df122d780e9c02c8caa15716057b6c0b00b27118286722b7c5bfa88
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/53d9b5d_20231221T100218013584_embedding__6_VirusPseAAC.yml
results:
  fit_time:
  - 18.645558834075928
  - 18.460751056671143
  - 18.486407995224
  - 18.62280583381653
  - 18.19774079322815
  score_time:
  - 2.71293044090271
  - 2.7127466201782227
  - 2.711554765701294
  - 2.644070625305176
  - 2.6662280559539795
  test_average_precision_macro:
  - 0.4487391205266868
  - 0.34987217191948844
  - 0.4394240518469131
  - 0.4562694288164664
  - 0.2427822468518058
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4831828183764595
  - 0.37394039988593775
  - 0.4895303722626394
  - 0.4343175213662579
  - 0.4470640900154353
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6934108527131783
  - 0.6192460317460318
  - 0.6798780487804879
  - 0.6481029810298103
  - 0.7024999999999999
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5132531768383369
  - 0.3799357247341364
  - 0.5071177480939967
  - 0.45592687766549334
  - 0.3834757971900403
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8062015503875969
  - 0.7777777777777778
  - 0.8048780487804877
  - 0.7845528455284553
  - 0.7916666666666666
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8062015503875969
  - 0.7777777777777778
  - 0.8048780487804879
  - 0.7845528455284553
  - 0.7916666666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8062015503875969
  - 0.7777777777777777
  - 0.804878048780488
  - 0.7845528455284553
  - 0.7916666666666666
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7054263565891472
  - 0.6512605042016807
  - 0.686411149825784
  - 0.6641651031894935
  - 0.6612244897959183
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6977590472023878
  - 0.6679064044042317
  - 0.6989826404275954
  - 0.6733690486797945
  - 0.6852028692171043
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6753246753246753
  - 0.6363636363636364
  - 0.673469387755102
  - 0.6454849498327759
  - 0.6551724137931034
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6877076411960134
  - 0.6473922902494331
  - 0.6811846689895471
  - 0.6602787456445993
  - 0.6690476190476191
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.563338981624912
  - 0.5076702366881584
  - 0.5405891213477467
  - 0.5189336030404594
  - 0.5156738450956474
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6934108527131783
  - 0.6192460317460318
  - 0.6798780487804877
  - 0.6481029810298102
  - 0.7025
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05313077318854589
  - -0.030696702026808038
  - 0.029910267198938887
  - 0.0016555745831435046
  - 0.009317444419187429
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1842901284250471
  - 0.037406461766785505
  - 0.15950669112709465
  - 0.09103766182265442
  - 0.13613589538085213
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.11238268679148083
  - 0.021814946809924712
  - 0.06499783083091101
  - 0.05365853658536586
  - 0.08290569415042096
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1062615463770918
  - -0.05987520582569209
  - 0.06226218886309727
  - 0.0026839001665970564
  - 0.019395496546063623
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7743374071198182
  - 0.7147900790979317
  - 0.7614806612634305
  - 0.7413045140902843
  - 0.7773207234946691
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.186046511627907
  - -2.4523809523809526
  - -2.317073170731707
  - -2.341463414634146
  - -2.25
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1937984496124031
  - -0.22222222222222224
  - -0.19512195121951223
  - -0.21544715447154472
  - -0.20833333333333334
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1937984496124031
  - -0.2222222222222222
  - -0.1951219512195122
  - -0.21544715447154472
  - -0.20833333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19379844961240308
  - -0.22222222222222218
  - -0.19512195121951217
  - -0.21544715447154472
  - -0.20833333333333331
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29457364341085274
  - -0.3487394957983193
  - -0.31358885017421606
  - -0.3358348968105066
  - -0.3387755102040816
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19302325581395346
  - -0.25357142857142856
  - -0.2225609756097561
  - -0.2099593495934959
  - -0.210625
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8062015503875969
  - 0.7777777777777778
  - 0.8048780487804877
  - 0.7845528455284553
  - 0.7916666666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8062015503875969
  - 0.7777777777777778
  - 0.8048780487804879
  - 0.7845528455284553
  - 0.7916666666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8062015503875969
  - 0.7777777777777777
  - 0.804878048780488
  - 0.7845528455284553
  - 0.7916666666666666
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7054263565891472
  - 0.6512605042016807
  - 0.686411149825784
  - 0.6641651031894935
  - 0.6612244897959183
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8062015503875969
  - 0.7777777777777778
  - 0.8048780487804877
  - 0.7845528455284553
  - 0.7916666666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8062015503875969
  - 0.7777777777777778
  - 0.8048780487804879
  - 0.7845528455284553
  - 0.7916666666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8062015503875969
  - 0.7777777777777777
  - 0.804878048780488
  - 0.7845528455284553
  - 0.7916666666666666
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7054263565891472
  - 0.6512605042016807
  - 0.686411149825784
  - 0.6641651031894935
  - 0.6612244897959183
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7392578461445032
  - 0.6000890887169082
  - 0.7000637191813662
  - 0.5898172560576652
  - 0.46270087838182467
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8138675760159136
  - 0.7585601404741001
  - 0.8065886252978348
  - 0.7772601110229976
  - 0.7724115824340206
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8069767441860463
  - 0.7464285714285714
  - 0.7774390243902439
  - 0.7900406504065041
  - 0.7893749999999999
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.698582038610733
  - 0.5490629855180938
  - 0.6650657946576315
  - 0.5523197799412632
  - 0.5166901766280648
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9914021164021163
  - 0.9016966947831212
  - 0.9604325353060701
  - 0.9369051264550006
  - 0.930344604672752
  train_average_precision_macro_oob:
  - 0.43602967905475243
  - 0.4090386242959867
  - 0.42387633412699205
  - 0.4042933247956952
  - 0.47774875222594376
  train_average_precision_micro:
  - 0.9082288461374843
  - 0.9102820065279305
  - 0.9134730768444757
  - 0.9085368396895948
  - 0.9182256300678439
  train_average_precision_micro_oob:
  - 0.6279339925116729
  - 0.618458780679044
  - 0.5962963094844013
  - 0.5944542672478494
  - 0.6748182546173608
  train_average_precision_samples:
  - 0.8927845528455284
  - 0.9035353535353536
  - 0.9013052208835342
  - 0.8977911646586344
  - 0.9033932135728542
  train_average_precision_samples_oob:
  - 0.7319444444444445
  - 0.7457407407407408
  - 0.7441599732262383
  - 0.7218875502008033
  - 0.7708915502328676
  train_average_precision_weighted:
  - 0.9984600805496329
  - 0.9718585884624884
  - 0.9897833161837492
  - 0.9791886670476067
  - 0.9774698414514867
  train_average_precision_weighted_oob:
  - 0.6087258467590937
  - 0.5781166968534528
  - 0.5695793778264262
  - 0.5707362862709777
  - 0.6504996224416074
  train_f1_macro:
  - 0.9278455284552845
  - 0.9232323232323232
  - 0.928714859437751
  - 0.9257028112449799
  - 0.9231536926147705
  train_f1_macro_oob:
  - 0.8180894308943089
  - 0.8303030303030302
  - 0.8152610441767069
  - 0.820281124497992
  - 0.8423153692614771
  train_f1_micro:
  - 0.9278455284552846
  - 0.9232323232323232
  - 0.928714859437751
  - 0.9257028112449799
  - 0.9231536926147704
  train_f1_micro_oob:
  - 0.818089430894309
  - 0.8303030303030303
  - 0.8152610441767069
  - 0.820281124497992
  - 0.8423153692614771
  train_f1_samples:
  - 0.9278455284552847
  - 0.9232323232323231
  - 0.9287148594377511
  - 0.9257028112449799
  - 0.9231536926147705
  train_f1_samples_oob:
  - 0.8180894308943089
  - 0.8303030303030303
  - 0.8152610441767068
  - 0.8202811244979917
  - 0.8423153692614768
  train_f1_weighted:
  - 0.9484589248877563
  - 0.9383687622493593
  - 0.9516885275090511
  - 0.942710843373494
  - 0.9398542815846139
  train_f1_weighted_oob:
  - 0.7240322776362093
  - 0.7481984019297452
  - 0.721585850792332
  - 0.7276204819277109
  - 0.7753458600041296
  train_jaccard_macro:
  - 0.8694840025747843
  - 0.8606932108404223
  - 0.8714331958854543
  - 0.8651541012946621
  - 0.8607032571031531
  train_jaccard_macro_oob:
  - 0.7103221845783869
  - 0.7243396945080577
  - 0.706544982186503
  - 0.7131138279948114
  - 0.7386739080570588
  train_jaccard_micro:
  - 0.8654028436018958
  - 0.8574108818011257
  - 0.8669165885660731
  - 0.8616822429906542
  - 0.8572752548656163
  train_jaccard_micro_oob:
  - 0.6921754084264833
  - 0.7098445595854922
  - 0.688135593220339
  - 0.6953191489361702
  - 0.7275862068965517
  train_jaccard_samples:
  - 0.8809523809523809
  - 0.8734487734487733
  - 0.8816695352839929
  - 0.8769363166953528
  - 0.8721129170230967
  train_jaccard_samples_oob:
  - 0.7047038327526133
  - 0.7261183261183262
  - 0.7005163511187609
  - 0.7061101549053357
  - 0.7429426860564586
  train_jaccard_weighted:
  - 0.9060723790860213
  - 0.8870033096670744
  - 0.912618146356381
  - 0.8949593881380818
  - 0.8899508910221593
  train_jaccard_weighted_oob:
  - 0.5805100188611557
  - 0.6079739694407149
  - 0.5782303990133549
  - 0.5847169194173574
  - 0.6417661088164782
  train_label_ranking_average_precision_score:
  - 0.8927845528455283
  - 0.9035353535353534
  - 0.9013052208835342
  - 0.8977911646586345
  - 0.9033932135728543
  train_label_ranking_average_precision_score_oob:
  - 0.7319444444444443
  - 0.7457407407407406
  - 0.7441599732262382
  - 0.7218875502008033
  - 0.7708915502328676
  train_matthews_corrcoef_macro:
  - 0.3188965560057359
  - 0.3089692261970663
  - 0.3230625053031825
  - 0.31294648880080184
  - 0.3110714484067676
  train_matthews_corrcoef_macro_oob:
  - 0.0970469897082848
  - 0.11995929344619506
  - 0.08686424083765588
  - 0.09455397634638257
  - 0.15468239609659687
  train_matthews_corrcoef_micro:
  - 0.770061823035751
  - 0.7531603102511603
  - 0.7725358976714438
  - 0.7592191996409523
  - 0.752416984060496
  train_matthews_corrcoef_micro_oob:
  - 0.29229826965464567
  - 0.359657583565404
  - 0.2681548337451512
  - 0.2858575054878387
  - 0.4268328603630615
  train_matthews_corrcoef_samples:
  - 0.654369500224725
  - 0.6536450790507294
  - 0.6628236307013385
  - 0.6373176698325425
  - 0.6462940549155928
  train_matthews_corrcoef_samples_oob:
  - 0.13595955241525018
  - 0.22167900438566465
  - 0.12969772366346208
  - 0.13471251602511072
  - 0.2592341304688807
  train_matthews_corrcoef_weighted:
  - 0.6523496783499529
  - 0.631892618562937
  - 0.6543558061062897
  - 0.6385341242908145
  - 0.6300762601578566
  train_matthews_corrcoef_weighted_oob:
  - 0.199160691192935
  - 0.2450819151175573
  - 0.17532304064313192
  - 0.19309748649304967
  - 0.3119796939552111
  train_ndgc:
  - 0.9214164945944615
  - 0.9302437282532043
  - 0.9286788831270772
  - 0.9253023142132122
  - 0.9301312647368067
  train_ndgc_oob:
  - 0.7997357767873354
  - 0.8114541499820151
  - 0.8098838834266324
  - 0.7921871657010664
  - 0.8301433747465173
  train_neg_coverage_error:
  - -1.5609756097560976
  - -1.5212121212121212
  - -1.536144578313253
  - -1.5301204819277108
  - -1.5029940119760479
  train_neg_coverage_error_oob:
  - -2.2560975609756095
  - -2.1575757575757577
  - -2.1626506024096384
  - -2.253012048192771
  - -2.0778443113772456
  train_neg_hamming_loss_macro:
  - -0.07215447154471545
  - -0.07676767676767676
  - -0.071285140562249
  - -0.0742971887550201
  - -0.07684630738522956
  train_neg_hamming_loss_macro_oob:
  - -0.18191056910569106
  - -0.1696969696969697
  - -0.18473895582329317
  - -0.17971887550200805
  - -0.15768463073852296
  train_neg_hamming_loss_micro:
  - -0.07215447154471545
  - -0.07676767676767676
  - -0.071285140562249
  - -0.07429718875502007
  - -0.07684630738522955
  train_neg_hamming_loss_micro_oob:
  - -0.18191056910569106
  - -0.1696969696969697
  - -0.18473895582329317
  - -0.17971887550200802
  - -0.15768463073852296
  train_neg_hamming_loss_samples:
  - -0.07215447154471544
  - -0.07676767676767676
  - -0.071285140562249
  - -0.07429718875502007
  - -0.07684630738522953
  train_neg_hamming_loss_samples_oob:
  - -0.18191056910569106
  - -0.1696969696969697
  - -0.18473895582329317
  - -0.17971887550200802
  - -0.15768463073852293
  train_neg_hamming_loss_weighted:
  - -0.05154107511224366
  - -0.06163123775064073
  - -0.04831147249094901
  - -0.05728915662650603
  - -0.060145718415385976
  train_neg_hamming_loss_weighted_oob:
  - -0.2759677223637908
  - -0.2518015980702548
  - -0.2784141492076681
  - -0.27237951807228916
  - -0.2246541399958703
  train_neg_label_ranking_loss:
  - -0.06531165311653117
  - -0.05666666666666668
  - -0.057446452476572964
  - -0.06325301204819277
  - -0.053509647371922826
  train_neg_label_ranking_loss_oob:
  - -0.20645325203252032
  - -0.18526936026936025
  - -0.1874665327978581
  - -0.20978915662650605
  - -0.17025948103792415
  train_precision_macro:
  - 0.9278455284552845
  - 0.9232323232323232
  - 0.928714859437751
  - 0.9257028112449799
  - 0.9231536926147705
  train_precision_macro_oob:
  - 0.8180894308943089
  - 0.8303030303030302
  - 0.8152610441767069
  - 0.820281124497992
  - 0.8423153692614771
  train_precision_micro:
  - 0.9278455284552846
  - 0.9232323232323232
  - 0.928714859437751
  - 0.9257028112449799
  - 0.9231536926147704
  train_precision_micro_oob:
  - 0.818089430894309
  - 0.8303030303030303
  - 0.8152610441767069
  - 0.820281124497992
  - 0.8423153692614771
  train_precision_samples:
  - 0.9278455284552847
  - 0.9232323232323231
  - 0.9287148594377511
  - 0.9257028112449799
  - 0.9231536926147705
  train_precision_samples_oob:
  - 0.8180894308943089
  - 0.8303030303030303
  - 0.8152610441767068
  - 0.8202811244979917
  - 0.8423153692614768
  train_precision_weighted:
  - 0.9484589248877563
  - 0.9383687622493593
  - 0.9516885275090511
  - 0.942710843373494
  - 0.9398542815846139
  train_precision_weighted_oob:
  - 0.7240322776362093
  - 0.7481984019297452
  - 0.721585850792332
  - 0.7276204819277109
  - 0.7753458600041296
  train_recall_macro:
  - 0.9278455284552845
  - 0.9232323232323232
  - 0.928714859437751
  - 0.9257028112449799
  - 0.9231536926147705
  train_recall_macro_oob:
  - 0.8180894308943089
  - 0.8303030303030302
  - 0.8152610441767069
  - 0.820281124497992
  - 0.8423153692614771
  train_recall_micro:
  - 0.9278455284552846
  - 0.9232323232323232
  - 0.928714859437751
  - 0.9257028112449799
  - 0.9231536926147704
  train_recall_micro_oob:
  - 0.818089430894309
  - 0.8303030303030303
  - 0.8152610441767069
  - 0.820281124497992
  - 0.8423153692614771
  train_recall_samples:
  - 0.9278455284552847
  - 0.9232323232323231
  - 0.9287148594377511
  - 0.9257028112449799
  - 0.9231536926147705
  train_recall_samples_oob:
  - 0.8180894308943089
  - 0.8303030303030303
  - 0.8152610441767068
  - 0.8202811244979917
  - 0.8423153692614768
  train_recall_weighted:
  - 0.9484589248877563
  - 0.9383687622493593
  - 0.9516885275090511
  - 0.942710843373494
  - 0.9398542815846139
  train_recall_weighted_oob:
  - 0.7240322776362093
  - 0.7481984019297452
  - 0.721585850792332
  - 0.7276204819277109
  - 0.7753458600041296
  train_roc_auc_macro:
  - 0.999648382559775
  - 0.9953441101178478
  - 0.9979285527103924
  - 0.9959375
  - 0.9955389252295759
  train_roc_auc_macro_oob:
  - 0.6794041509698073
  - 0.7131154137982557
  - 0.7442066233836266
  - 0.7242124456375519
  - 0.7533017625590711
  train_roc_auc_micro:
  - 0.9618256101357834
  - 0.9648840714047001
  - 0.9652501257928053
  - 0.9631846733668341
  - 0.967588796340253
  train_roc_auc_micro_oob:
  - 0.8169179644561357
  - 0.8244771074916923
  - 0.8268097080985718
  - 0.8180087939698492
  - 0.8392571995782905
  train_roc_auc_samples:
  - 0.9346883468834688
  - 0.9433333333333332
  - 0.9425535475234269
  - 0.9367469879518072
  - 0.946490352628077
  train_roc_auc_samples_oob:
  - 0.7935467479674796
  - 0.8147306397306396
  - 0.8125334672021419
  - 0.790210843373494
  - 0.8297405189620758
  train_roc_auc_weighted:
  - 0.9999370237420492
  - 0.9983362111291503
  - 0.9993589862750566
  - 0.9985187500000001
  - 0.9983080571232832
  train_roc_auc_weighted_oob:
  - 0.7546882303485924
  - 0.7446833559788134
  - 0.761627152578354
  - 0.7486601426637509
  - 0.7940128418911345
start: 2023-12-21 10:02:18.013584
wrapper: null
