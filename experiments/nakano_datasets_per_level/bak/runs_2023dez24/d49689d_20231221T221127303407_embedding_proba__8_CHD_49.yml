active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAAAAwAAAAAAAAABAAAAAAAAAAEAAAAAAAADwvw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:12:53.716982
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__8
  params: {}
hash: d49689d977f79c21114510e13c514e0c90a802a98fd1f7d32d86ebccedc09626
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d49689d_20231221T221127303407_embedding_proba__8_CHD_49.yml
results:
  fit_time:
  - 61.154388666152954
  - 61.17966341972351
  - 63.192110776901245
  - 62.665854930877686
  - 63.73323130607605
  score_time:
  - 6.756532430648804
  - 6.6802709102630615
  - 7.003678321838379
  - 6.957234859466553
  - 7.2284533977508545
  test_average_precision_macro:
  - 0.44828937987254186
  - 0.48372436562317467
  - 0.543729053199154
  - 0.53471395383097
  - 0.5123695018644804
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6061851400182305
  - 0.6173135106246506
  - 0.7072216364397421
  - 0.6898606205799152
  - 0.6546541552452608
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7893725198412699
  - 0.772357423795477
  - 0.7950305810397552
  - 0.8047782874617737
  - 0.7863839285714285
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5665460587904836
  - 0.590444433632863
  - 0.6708761448257136
  - 0.6593916665787306
  - 0.6274830314920053
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6666666666666666
  - 0.691740412979351
  - 0.7201834862385321
  - 0.7171253822629969
  - 0.71875
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6666666666666666
  - 0.6917404129793511
  - 0.7201834862385321
  - 0.7171253822629969
  - 0.71875
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6666666666666666
  - 0.691740412979351
  - 0.720183486238532
  - 0.7171253822629969
  - 0.71875
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6177145337301587
  - 0.6374165502251203
  - 0.6791228462743342
  - 0.6756498470948011
  - 0.6631350603621732
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5218740699936797
  - 0.5493312235819757
  - 0.5799481010345725
  - 0.5758028562924484
  - 0.577597582348577
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5
  - 0.5287485907553551
  - 0.5627240143369175
  - 0.5589988081048868
  - 0.5609756097560976
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5424435683364255
  - 0.5762977435543807
  - 0.6087056674212636
  - 0.6000079431272092
  - 0.6092880333951763
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.45343178995192457
  - 0.47245753273871766
  - 0.5184033815206107
  - 0.5134345277631396
  - 0.4988811710501836
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7893725198412697
  - 0.7723574237954767
  - 0.7950305810397552
  - 0.8323012232415906
  - 0.7863839285714288
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07208005478787503
  - 0.10910947578442502
  - 0.16192135337885202
  - 0.17837788189641335
  - 0.17980974593481933
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3251992020205422
  - 0.37678653428906284
  - 0.4334739853221493
  - 0.42433626774666255
  - 0.4302175877120505
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3612670286196618
  - 0.41964407184154606
  - 0.45379881474651323
  - 0.44046787617267114
  - 0.4385445867285238
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.07048709401197575
  - 0.0916119962158906
  - 0.1652515749574433
  - 0.20027803838061853
  - 0.1647103632059704
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8648657669966392
  - 0.8464805970687015
  - 0.8657919100456872
  - 0.8624115612492327
  - 0.8558865803470178
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6964285714285716
  - -3.6548672566371683
  - -3.7247706422018347
  - -3.596330275229358
  - -3.5625
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3333333333333333
  - -0.308259587020649
  - -0.27981651376146793
  - -0.2828746177370031
  - -0.28125
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3333333333333333
  - -0.308259587020649
  - -0.2798165137614679
  - -0.28287461773700306
  - -0.28125
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3333333333333333
  - -0.308259587020649
  - -0.2798165137614679
  - -0.28287461773700306
  - -0.28124999999999994
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3822854662698412
  - -0.3625834497748797
  - -0.3208771537256657
  - -0.3243501529051988
  - -0.336864939637827
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22621527777777778
  - -0.22731071779744344
  - -0.2091743119266055
  - -0.1865698267074414
  - -0.2021577380952381
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6666666666666666
  - 0.691740412979351
  - 0.7201834862385321
  - 0.7171253822629969
  - 0.71875
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6666666666666666
  - 0.6917404129793511
  - 0.7201834862385321
  - 0.7171253822629969
  - 0.71875
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6666666666666666
  - 0.691740412979351
  - 0.720183486238532
  - 0.7171253822629969
  - 0.71875
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6177145337301587
  - 0.6374165502251203
  - 0.6791228462743342
  - 0.6756498470948011
  - 0.6631350603621732
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6666666666666666
  - 0.691740412979351
  - 0.7201834862385321
  - 0.7171253822629969
  - 0.71875
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6666666666666666
  - 0.6917404129793511
  - 0.7201834862385321
  - 0.7171253822629969
  - 0.71875
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6666666666666666
  - 0.691740412979351
  - 0.720183486238532
  - 0.7171253822629969
  - 0.71875
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6177145337301587
  - 0.6374165502251203
  - 0.6791228462743342
  - 0.6756498470948011
  - 0.6631350603621732
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.515959129210723
  - 0.5229368597885365
  - 0.6353292563639296
  - 0.5768603748855623
  - 0.5973165920812431
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7247992621527779
  - 0.7454935047542519
  - 0.7900293366499254
  - 0.7841719793564056
  - 0.7729326992885147
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7737847222222223
  - 0.7726892822025566
  - 0.7908256880733945
  - .nan
  - 0.7978422619047619
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5239008200274964
  - 0.5269144912970368
  - 0.6282238765149881
  - 0.6123335906635204
  - 0.5841804511043461
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9951067566578518
  - 0.9988653917486303
  - 0.9984941388286258
  - 0.9948437545118264
  - 0.9975914857072388
  train_average_precision_macro_oob:
  - 0.8557441284368013
  - 0.8524463308566258
  - 0.8758222051669075
  - 0.8605106181967367
  - 0.8497129934862334
  train_average_precision_micro:
  - 0.9957738316215552
  - 0.99623277480306
  - 0.9963106694126266
  - 0.996473186355072
  - 0.9957981729845359
  train_average_precision_micro_oob:
  - 0.9809324284033648
  - 0.9839983807896366
  - 0.984434289153678
  - 0.9872153669493994
  - 0.9805706093526402
  train_average_precision_samples:
  - 0.9869293955354903
  - 0.9874057315233786
  - 0.9871917040358744
  - 0.9919656203288489
  - 0.9872930775018811
  train_average_precision_samples_oob:
  - 0.9653686982693754
  - 0.9713203871292106
  - 0.9713097907324364
  - 0.9803437967115096
  - 0.9631960120391272
  train_average_precision_weighted:
  - 0.9982525260249052
  - 0.9988510026430435
  - 0.9985494798165758
  - 0.9984311681752427
  - 0.998512529132711
  train_average_precision_weighted_oob:
  - 0.9780843752145894
  - 0.9813966874910339
  - 0.9812032237635736
  - 0.9834702155029105
  - 0.9784434110732817
  train_f1_macro:
  - 0.9676448457486831
  - 0.9736048265460031
  - 0.9738415545590433
  - 0.976083707025411
  - 0.9721595184349135
  train_f1_macro_oob:
  - 0.9533483822422874
  - 0.9600301659125189
  - 0.9588938714499253
  - 0.9570254110612856
  - 0.9563581640331077
  train_f1_micro:
  - 0.9676448457486833
  - 0.973604826546003
  - 0.9738415545590433
  - 0.976083707025411
  - 0.9721595184349134
  train_f1_micro_oob:
  - 0.9533483822422875
  - 0.9600301659125189
  - 0.9588938714499252
  - 0.9570254110612855
  - 0.9563581640331076
  train_f1_samples:
  - 0.9676448457486833
  - 0.9736048265460031
  - 0.9738415545590434
  - 0.9760837070254111
  - 0.9721595184349135
  train_f1_samples_oob:
  - 0.9533483822422874
  - 0.9600301659125189
  - 0.9588938714499253
  - 0.9570254110612855
  - 0.9563581640331077
  train_f1_weighted:
  - 0.9642003030829215
  - 0.9731504968696618
  - 0.9745530381655473
  - 0.9762672865251341
  - 0.9732973627704675
  train_f1_weighted_oob:
  - 0.9468342041705473
  - 0.9556249432909772
  - 0.9548240546732725
  - 0.9536144908902756
  - 0.9542948380144879
  train_jaccard_macro:
  - 0.9376572974654578
  - 0.9486393089152362
  - 0.9494135874628502
  - 0.9534905548405962
  - 0.9459887211795038
  train_jaccard_macro_oob:
  - 0.9114566269839585
  - 0.9233600760027912
  - 0.9216001454004393
  - 0.9181134853071904
  - 0.9166669433388638
  train_jaccard_micro:
  - 0.9373177842565598
  - 0.9485672299779574
  - 0.9490167516387472
  - 0.9532846715328467
  - 0.9458272327964861
  train_jaccard_micro_oob:
  - 0.9108554996405464
  - 0.9231327048585932
  - 0.9210337401292176
  - 0.9175922608384092
  - 0.916366258111031
  train_jaccard_samples:
  - 0.9456626894550145
  - 0.9552359405300581
  - 0.9557975656630364
  - 0.9594811018577833
  - 0.95286466731162
  train_jaccard_samples_oob:
  - 0.9231968182306783
  - 0.9330963154492566
  - 0.9320414264360453
  - 0.9289985052316889
  - 0.9280877136407609
  train_jaccard_weighted:
  - 0.9312629699213436
  - 0.9477630646737499
  - 0.9508695385284975
  - 0.953901352780804
  - 0.9481966556696764
  train_jaccard_weighted_oob:
  - 0.8994998660336044
  - 0.9152000994550114
  - 0.9141722515012476
  - 0.9119017163392191
  - 0.9128970801518784
  train_label_ranking_average_precision_score:
  - 0.9937014045648358
  - 0.9941930618401207
  - 0.9939181614349776
  - 0.9919656203288492
  - 0.9940650865312265
  train_label_ranking_average_precision_score_oob:
  - 0.9721407072987209
  - 0.9781077174459525
  - 0.9780362481315396
  - 0.9803437967115095
  - 0.9699680210684724
  train_matthews_corrcoef_macro:
  - 0.7715546154085535
  - 0.784954383813449
  - 0.7873811500207357
  - 0.79166757090937
  - 0.7830537085316825
  train_matthews_corrcoef_macro_oob:
  - 0.740252323742442
  - 0.753324569177685
  - 0.7538127144367316
  - 0.750280062320424
  - 0.7486888663470769
  train_matthews_corrcoef_micro:
  - 0.9341632741357183
  - 0.9462420658559212
  - 0.9465460607666139
  - 0.9511305335757851
  - 0.9432559828977201
  train_matthews_corrcoef_micro_oob:
  - 0.904951327105788
  - 0.9187475614679407
  - 0.9161597963356474
  - 0.9121783548581105
  - 0.9110667558898863
  train_matthews_corrcoef_samples:
  - 0.9287362506773337
  - 0.9424302828724123
  - 0.9407337581172309
  - 0.9519511803288507
  - 0.9383699490291366
  train_matthews_corrcoef_samples_oob:
  - 0.898841454560122
  - 0.9159968581522155
  - 0.9066152017083093
  - 0.9111367219703159
  - 0.905970326304884
  train_matthews_corrcoef_weighted:
  - 0.909245148380473
  - 0.9274880656522447
  - 0.9340613931406124
  - 0.9369363999103025
  - 0.9301921123629501
  train_matthews_corrcoef_weighted_oob:
  - 0.8702037197701986
  - 0.8852416471040586
  - 0.8887019887411668
  - 0.8868822748327893
  - 0.8881076766175608
  train_ndgc:
  - 0.9893850184911639
  - 0.9901004576561325
  - 0.9894171929126286
  - 0.9950409968324736
  - 0.9896648288031015
  train_ndgc_oob:
  - 0.9762088203793637
  - 0.9803902186906612
  - 0.979604392419329
  - 0.9889278488799012
  - 0.9747531280520082
  train_neg_coverage_error:
  - -2.6230248306997743
  - -2.6470588235294117
  - -2.6121076233183858
  - -2.6210762331838566
  - -2.63431151241535
  train_neg_coverage_error_oob:
  - -2.7584650112866815
  - -2.751131221719457
  - -2.710762331838565
  - -2.726457399103139
  - -2.769751693002257
  train_neg_hamming_loss_macro:
  - -0.032355154251316784
  - -0.026395173453996983
  - -0.026158445440956652
  - -0.023916292974588933
  - -0.027840481565086533
  train_neg_hamming_loss_macro_oob:
  - -0.046651617757712566
  - -0.03996983408748115
  - -0.041106128550074734
  - -0.042974588938714496
  - -0.043641835966892396
  train_neg_hamming_loss_micro:
  - -0.03235515425131678
  - -0.026395173453996983
  - -0.026158445440956652
  - -0.02391629297458894
  - -0.02784048156508653
  train_neg_hamming_loss_micro_oob:
  - -0.046651617757712566
  - -0.03996983408748114
  - -0.04110612855007474
  - -0.042974588938714496
  - -0.0436418359668924
  train_neg_hamming_loss_samples:
  - -0.03235515425131678
  - -0.026395173453996987
  - -0.026158445440956652
  - -0.023916292974588936
  - -0.02784048156508653
  train_neg_hamming_loss_samples_oob:
  - -0.04665161775771256
  - -0.03996983408748114
  - -0.041106128550074734
  - -0.042974588938714496
  - -0.043641835966892396
  train_neg_hamming_loss_weighted:
  - -0.03579969691707841
  - -0.026849503130338046
  - -0.02544696183445278
  - -0.02373271347486594
  - -0.026702637229532568
  train_neg_hamming_loss_weighted_oob:
  - -0.05316579582945271
  - -0.04437505670902255
  - -0.04517594532672763
  - -0.04638550910972435
  - -0.04570516198551215
  train_neg_label_ranking_loss:
  - -0.006439678956608979
  - -0.006667923579688285
  - -0.007181116093672147
  - -0.008009466865969107
  - -0.006471030850263356
  train_neg_label_ranking_loss_oob:
  - -0.027921996488587907
  - -0.023755656108597284
  - -0.023094170403587445
  - -0.022851270553064275
  - -0.028273137697516926
  train_precision_macro:
  - 0.9676448457486831
  - 0.9736048265460031
  - 0.9738415545590433
  - 0.976083707025411
  - 0.9721595184349135
  train_precision_macro_oob:
  - 0.9533483822422874
  - 0.9600301659125189
  - 0.9588938714499253
  - 0.9570254110612856
  - 0.9563581640331077
  train_precision_micro:
  - 0.9676448457486833
  - 0.973604826546003
  - 0.9738415545590433
  - 0.976083707025411
  - 0.9721595184349134
  train_precision_micro_oob:
  - 0.9533483822422875
  - 0.9600301659125189
  - 0.9588938714499252
  - 0.9570254110612855
  - 0.9563581640331076
  train_precision_samples:
  - 0.9676448457486833
  - 0.9736048265460031
  - 0.9738415545590434
  - 0.9760837070254111
  - 0.9721595184349135
  train_precision_samples_oob:
  - 0.9533483822422874
  - 0.9600301659125189
  - 0.9588938714499253
  - 0.9570254110612855
  - 0.9563581640331077
  train_precision_weighted:
  - 0.9642003030829215
  - 0.9731504968696618
  - 0.9745530381655473
  - 0.9762672865251341
  - 0.9732973627704675
  train_precision_weighted_oob:
  - 0.9468342041705473
  - 0.9556249432909772
  - 0.9548240546732725
  - 0.9536144908902756
  - 0.9542948380144879
  train_recall_macro:
  - 0.9676448457486831
  - 0.9736048265460031
  - 0.9738415545590433
  - 0.976083707025411
  - 0.9721595184349135
  train_recall_macro_oob:
  - 0.9533483822422874
  - 0.9600301659125189
  - 0.9588938714499253
  - 0.9570254110612856
  - 0.9563581640331077
  train_recall_micro:
  - 0.9676448457486833
  - 0.973604826546003
  - 0.9738415545590433
  - 0.976083707025411
  - 0.9721595184349134
  train_recall_micro_oob:
  - 0.9533483822422875
  - 0.9600301659125189
  - 0.9588938714499252
  - 0.9570254110612855
  - 0.9563581640331076
  train_recall_samples:
  - 0.9676448457486833
  - 0.9736048265460031
  - 0.9738415545590434
  - 0.9760837070254111
  - 0.9721595184349135
  train_recall_samples_oob:
  - 0.9533483822422874
  - 0.9600301659125189
  - 0.9588938714499253
  - 0.9570254110612855
  - 0.9563581640331077
  train_recall_weighted:
  - 0.9642003030829215
  - 0.9731504968696618
  - 0.9745530381655473
  - 0.9762672865251341
  - 0.9732973627704675
  train_recall_weighted_oob:
  - 0.9468342041705473
  - 0.9556249432909772
  - 0.9548240546732725
  - 0.9536144908902756
  - 0.9542948380144879
  train_roc_auc_macro:
  - 0.9983840260600116
  - 0.9989363431170627
  - 0.9987582025124021
  - 0.9987346137482326
  - 0.9987383145961982
  train_roc_auc_macro_oob:
  - 0.9705339528499758
  - 0.9707917006554135
  - 0.9741390044023018
  - 0.9795326929403988
  - 0.9688591405910802
  train_roc_auc_micro:
  - 0.9964616377677805
  - 0.9967342221655799
  - 0.9969035850073731
  - 0.9969913409045262
  - 0.9964663566928952
  train_roc_auc_micro_oob:
  - 0.9849412476559107
  - 0.9857701877206753
  - 0.9863336746539494
  - 0.9872104885975642
  - 0.9846326464683758
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - 0.991990533134031
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - 0.9771487294469359
  - .nan
  train_roc_auc_weighted:
  - 0.9981000115706834
  - 0.9986963846342323
  - 0.9986352901238782
  - 0.9987552659193842
  - 0.9986035893496804
  train_roc_auc_weighted_oob:
  - 0.9830912267220162
  - 0.9874061651186486
  - 0.9899013942275495
  - 0.9914179014924911
  - 0.98546018928691
start: 2023-12-21 22:11:27.303407
wrapper: null
