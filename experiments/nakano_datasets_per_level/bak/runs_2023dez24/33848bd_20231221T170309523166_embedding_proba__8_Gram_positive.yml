active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmpmZmZnpPwCamZmZmek/ADMzMzMz878AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:04:25.852399
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__8
  params: {}
hash: 33848bde29a110ef8eb64bdbf861f51f3ce1f8ae740e25c633c9fd95e06fb207
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/33848bd_20231221T170309523166_embedding_proba__8_Gram_positive.yml
results:
  fit_time:
  - 54.31645083427429
  - 54.24199724197388
  - 53.59041976928711
  - 54.56607460975647
  - 55.39713096618652
  score_time:
  - 6.206876516342163
  - 6.224681377410889
  - 6.765653371810913
  - 6.880038499832153
  - 6.847874164581299
  test_average_precision_macro:
  - 0.9080134797597946
  - 0.9028408011005347
  - 0.8576378810182537
  - 0.8792672919792807
  - 0.8949138190510556
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9768627827114656
  - 0.9786548985149944
  - 0.9762241720617482
  - 0.9720607939707229
  - 0.9382007571977435
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9652103559870551
  - 0.9603559870550161
  - 0.9724919093851133
  - 0.9603174603174605
  - 0.9682539682539681
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9748322679170119
  - 0.9750266022517957
  - 0.9727880593293757
  - 0.9631730781362781
  - 0.9386372845004586
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8373786407766991
  - 0.8446601941747574
  - 0.8155339805825244
  - 0.8119047619047619
  - 0.7880952380952382
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.837378640776699
  - 0.8446601941747572
  - 0.8155339805825242
  - 0.8119047619047619
  - 0.7880952380952381
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.837378640776699
  - 0.8446601941747572
  - 0.8155339805825242
  - 0.8119047619047619
  - 0.7880952380952381
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7987055016181229
  - 0.8045307443365696
  - 0.7643510227165614
  - 0.7619047619047619
  - 0.7273469387755102
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7276584046558559
  - 0.7392267212859323
  - 0.6999268959510401
  - 0.6945567904243746
  - 0.6655402650356779
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7202505219206681
  - 0.7310924369747899
  - 0.6885245901639344
  - 0.6833667334669339
  - 0.650294695481336
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7423948220064722
  - 0.7540453074433655
  - 0.7048543689320385
  - 0.6990476190476188
  - 0.6634920634920634
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6666539136561227
  - 0.674856879084316
  - 0.6209681292141507
  - 0.6188636306749499
  - 0.5770981991165477
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.965210355987055
  - 0.9603559870550161
  - 0.9724919093851132
  - 0.9603174603174602
  - 0.9682539682539681
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3872440998105454
  - 0.4056558285474512
  - 0.3192185948027567
  - 0.3238295357166408
  - 0.24596075602660772
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5450427101568145
  - 0.5684332998495706
  - 0.45868247229386294
  - 0.44493768456628635
  - 0.33565855667130945
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.36893203883495146
  - 0.39805825242718446
  - 0.2621359223300971
  - 0.24761904761904763
  - 0.1650793650793651
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5084926985176951
  - 0.5339288615105066
  - 0.4245170216970425
  - 0.4154766187085686
  - 0.3102212744775948
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9740142312503667
  - 0.9711831464387897
  - 0.9795416433079066
  - 0.9703340202898345
  - 0.976416371564627
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.116504854368932
  - -1.1262135922330097
  - -1.0679611650485437
  - -1.1142857142857143
  - -1.0761904761904761
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.16262135922330098
  - -0.15533980582524273
  - -0.18446601941747573
  - -0.1880952380952381
  - -0.21190476190476187
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.16262135922330098
  - -0.1553398058252427
  - -0.18446601941747573
  - -0.1880952380952381
  - -0.2119047619047619
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.16262135922330098
  - -0.1553398058252427
  - -0.18446601941747573
  - -0.1880952380952381
  - -0.2119047619047619
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.20129449838187702
  - -0.19546925566343043
  - -0.23564897728343853
  - -0.23809523809523808
  - -0.2726530612244898
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.032362459546925564
  - -0.03398058252427184
  - -0.022653721682847894
  - -0.0380952380952381
  - -0.025396825396825397
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8373786407766991
  - 0.8446601941747574
  - 0.8155339805825244
  - 0.8119047619047619
  - 0.7880952380952382
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.837378640776699
  - 0.8446601941747572
  - 0.8155339805825242
  - 0.8119047619047619
  - 0.7880952380952381
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.837378640776699
  - 0.8446601941747572
  - 0.8155339805825242
  - 0.8119047619047619
  - 0.7880952380952381
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7987055016181229
  - 0.8045307443365696
  - 0.7643510227165614
  - 0.7619047619047619
  - 0.7273469387755102
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8373786407766991
  - 0.8446601941747574
  - 0.8155339805825244
  - 0.8119047619047619
  - 0.7880952380952382
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.837378640776699
  - 0.8446601941747572
  - 0.8155339805825242
  - 0.8119047619047619
  - 0.7880952380952381
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.837378640776699
  - 0.8446601941747572
  - 0.8155339805825242
  - 0.8119047619047619
  - 0.7880952380952381
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7987055016181229
  - 0.8045307443365696
  - 0.7643510227165614
  - 0.7619047619047619
  - 0.7273469387755102
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9856778588361905
  - 0.9889452527543173
  - 0.9913814576463497
  - 0.9831217990577056
  - 0.9823222231888463
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9884287265394758
  - 0.9903831239336125
  - 0.9928676909542212
  - 0.9868178382464097
  - 0.985668934240363
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9676375404530745
  - 0.9660194174757282
  - 0.9773462783171522
  - 0.9619047619047619
  - 0.9746031746031746
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9927822379368343
  - 0.9912808738459654
  - 0.9948716465817001
  - 0.9846863002626793
  - 0.9836284952630551
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9396458773385781
  - 0.9626063124154599
  - 0.9217145381850148
  - 0.9679789689001282
  - 0.9134699532080709
  train_average_precision_macro_oob:
  - 0.8696455349945932
  - 0.9249965164722859
  - 0.9013643313458105
  - 0.9206696228637294
  - 0.8625194555684725
  train_average_precision_micro:
  - 0.9854378730090473
  - 0.9882066496040026
  - 0.9858762086464239
  - 0.988438043470577
  - 0.9860152753943366
  train_average_precision_micro_oob:
  - 0.9764653030230015
  - 0.98151557129139
  - 0.9782219318422944
  - 0.9812343007144778
  - 0.9798636405301099
  train_average_precision_samples:
  - 0.9753605769230769
  - 0.9807692307692307
  - 0.9759615384615384
  - 0.977254428341385
  - 0.978462157809984
  train_average_precision_samples_oob:
  - 0.9603365384615384
  - 0.9725560897435899
  - 0.9681490384615384
  - 0.9677938808373592
  - 0.9631642512077294
  train_average_precision_weighted:
  - 0.9835011795679565
  - 0.9862301695900564
  - 0.9802836222085417
  - 0.9870988571724719
  - 0.9808440056573908
  train_average_precision_weighted_oob:
  - 0.9697577540560901
  - 0.9764273456435171
  - 0.9726646005641248
  - 0.9782108873565241
  - 0.9713054027741953
  train_f1_macro:
  - 0.853966346153846
  - 0.8521634615384617
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280192
  train_f1_macro_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391304
  train_f1_micro:
  - 0.8539663461538461
  - 0.8521634615384616
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280193
  train_f1_micro_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391305
  train_f1_samples:
  - 0.8539663461538461
  - 0.8521634615384616
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280193
  train_f1_samples_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391305
  train_f1_weighted:
  - 0.8166463470739787
  - 0.815087872653662
  - 0.7979223901098902
  - 0.8159975036405244
  - 0.8105309386773918
  train_f1_weighted_oob:
  - 0.7970877806404123
  - 0.7968174917188076
  - 0.7798706501831503
  - 0.7941196865681992
  - 0.7929986362480642
  train_jaccard_macro:
  - 0.7517099703345528
  - 0.7489198120340979
  - 0.7336079969197951
  - 0.7496363662043614
  - 0.7478659550906039
  train_jaccard_macro_oob:
  - 0.727791461457895
  - 0.7306717571764806
  - 0.7116128355309075
  - 0.7260102014495855
  - 0.7282528406844188
  train_jaccard_micro:
  - 0.7451494493969586
  - 0.7424083769633508
  - 0.7252462415759461
  - 0.7431578947368421
  - 0.7404098791382029
  train_jaccard_micro_oob:
  - 0.7198966408268734
  - 0.722567287784679
  - 0.7023017902813299
  - 0.7178423236514523
  - 0.719626168224299
  train_jaccard_samples:
  - 0.7666666666666665
  - 0.7641025641025642
  - 0.7464743589743589
  - 0.7652173913043477
  - 0.7623188405797099
  train_jaccard_samples_oob:
  - 0.7400641025641025
  - 0.7429487179487178
  - 0.721474358974359
  - 0.7384863123993557
  - 0.7400966183574877
  train_jaccard_weighted:
  - 0.6918268603569842
  - 0.6897096722004522
  - 0.6666254671366971
  - 0.6907347401091969
  - 0.6838354870114407
  train_jaccard_weighted_oob:
  - 0.6642480246830471
  - 0.6647270947774614
  - 0.6415370252849032
  - 0.6602906195689552
  - 0.6594461091401772
  train_label_ranking_average_precision_score:
  - 0.9753605769230769
  - 0.9807692307692306
  - 0.9759615384615383
  - 0.9772544283413848
  - 0.978462157809984
  train_label_ranking_average_precision_score_oob:
  - 0.9603365384615384
  - 0.9725560897435895
  - 0.9681490384615382
  - 0.967793880837359
  - 0.9631642512077293
  train_matthews_corrcoef_macro:
  - 0.43136793937230644
  - 0.42759664437711153
  - 0.40573627363356335
  - 0.42487827378099174
  - 0.42945871945251896
  train_matthews_corrcoef_macro_oob:
  - 0.37767105065594836
  - 0.395325959783567
  - 0.35701214671675513
  - 0.38055049457753143
  - 0.391886317847503
  train_matthews_corrcoef_micro:
  - 0.5918921167237524
  - 0.5862065843183484
  - 0.5515777947682482
  - 0.5896885617087736
  - 0.5839921505944433
  train_matthews_corrcoef_micro_oob:
  - 0.5374483788863601
  - 0.5434424658971153
  - 0.49891459667859683
  - 0.5351310313350748
  - 0.5391410106178314
  train_matthews_corrcoef_samples:
  - 0.4196570919932443
  - 0.41346153846153844
  - 0.37259615384615385
  - 0.4192689620028735
  - 0.41202258519127927
  train_matthews_corrcoef_samples_oob:
  - 0.35336538461538464
  - 0.3605769230769231
  - 0.31009615384615385
  - 0.3526570048309179
  - 0.35646702963572374
  train_matthews_corrcoef_weighted:
  - 0.5591554697026766
  - 0.5529912984879544
  - 0.5190678166808286
  - 0.5554793461033727
  - 0.5512923118962196
  train_matthews_corrcoef_weighted_oob:
  - 0.5008561679989801
  - 0.5106944162236584
  - 0.46577833259797574
  - 0.5004994993499257
  - 0.5067929347014835
  train_ndgc:
  - 0.9816608265561524
  - 0.9856724060055047
  - 0.9821236536359994
  - 0.9831535087324076
  - 0.9842321047644478
  train_ndgc_oob:
  - 0.9705868294391865
  - 0.9794775969376961
  - 0.9764483527285017
  - 0.9763003537487525
  - 0.9728259728590057
  train_neg_coverage_error:
  - -1.0673076923076923
  - -1.0552884615384615
  - -1.0697115384615385
  - -1.0603864734299517
  - -1.0579710144927537
  train_neg_coverage_error_oob:
  - -1.1129807692307692
  - -1.0841346153846154
  - -1.09375
  - -1.0845410628019323
  - -1.0990338164251208
  train_neg_hamming_loss_macro:
  - -0.14603365384615385
  - -0.14783653846153846
  - -0.15925480769230768
  - -0.1473429951690821
  - -0.14915458937198067
  train_neg_hamming_loss_macro_oob:
  - -0.16286057692307693
  - -0.1610576923076923
  - -0.1748798076923077
  - -0.1642512077294686
  - -0.16304347826086957
  train_neg_hamming_loss_micro:
  - -0.14603365384615385
  - -0.14783653846153846
  - -0.15925480769230768
  - -0.1473429951690821
  - -0.14915458937198067
  train_neg_hamming_loss_micro_oob:
  - -0.16286057692307693
  - -0.16105769230769232
  - -0.17487980769230768
  - -0.1642512077294686
  - -0.16304347826086957
  train_neg_hamming_loss_samples:
  - -0.14603365384615385
  - -0.14783653846153846
  - -0.15925480769230768
  - -0.1473429951690821
  - -0.14915458937198067
  train_neg_hamming_loss_samples_oob:
  - -0.16286057692307693
  - -0.16105769230769232
  - -0.17487980769230768
  - -0.1642512077294686
  - -0.16304347826086957
  train_neg_hamming_loss_weighted:
  - -0.18335365292602135
  - -0.18491212734633786
  - -0.20207760989010987
  - -0.18400249635947577
  - -0.18946906132260824
  train_neg_hamming_loss_weighted_oob:
  - -0.2029122193595878
  - -0.2031825082811925
  - -0.22012934981684984
  - -0.20588031343180083
  - -0.2070013637519358
  train_neg_label_ranking_loss:
  - -0.020833333333333332
  - -0.016826923076923076
  - -0.02003205128205128
  - -0.016908212560386472
  - -0.01570048309178744
  train_neg_label_ranking_loss_oob:
  - -0.03565705128205128
  - -0.026442307692307692
  - -0.027644230769230768
  - -0.024557165861513686
  - -0.029388083735909818
  train_precision_macro:
  - 0.853966346153846
  - 0.8521634615384617
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280192
  train_precision_macro_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391304
  train_precision_micro:
  - 0.8539663461538461
  - 0.8521634615384616
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280193
  train_precision_micro_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391305
  train_precision_samples:
  - 0.8539663461538461
  - 0.8521634615384616
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280193
  train_precision_samples_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391305
  train_precision_weighted:
  - 0.8166463470739787
  - 0.815087872653662
  - 0.7979223901098902
  - 0.8159975036405244
  - 0.8105309386773918
  train_precision_weighted_oob:
  - 0.7970877806404123
  - 0.7968174917188076
  - 0.7798706501831503
  - 0.7941196865681992
  - 0.7929986362480642
  train_recall_macro:
  - 0.853966346153846
  - 0.8521634615384617
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280192
  train_recall_macro_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391304
  train_recall_micro:
  - 0.8539663461538461
  - 0.8521634615384616
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280193
  train_recall_micro_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391305
  train_recall_samples:
  - 0.8539663461538461
  - 0.8521634615384616
  - 0.8407451923076923
  - 0.8526570048309179
  - 0.8508454106280193
  train_recall_samples_oob:
  - 0.8371394230769231
  - 0.8389423076923077
  - 0.8251201923076923
  - 0.8357487922705314
  - 0.8369565217391305
  train_recall_weighted:
  - 0.8166463470739787
  - 0.815087872653662
  - 0.7979223901098902
  - 0.8159975036405244
  - 0.8105309386773918
  train_recall_weighted_oob:
  - 0.7970877806404123
  - 0.7968174917188076
  - 0.7798706501831503
  - 0.7941196865681992
  - 0.7929986362480642
  train_roc_auc_macro:
  - 0.9938518728561796
  - 0.9939853375547241
  - 0.9920827386644072
  - 0.995122546160055
  - 0.9922500019485399
  train_roc_auc_macro_oob:
  - 0.9827787383653896
  - 0.9900418945482993
  - 0.9873224012085827
  - 0.9870709991128449
  - 0.9870552442821962
  train_roc_auc_micro:
  - 0.9944857035336041
  - 0.995630035251561
  - 0.9942447557801255
  - 0.9958800658571088
  - 0.9943862998662761
  train_roc_auc_micro_oob:
  - 0.988458761817721
  - 0.9922930410807407
  - 0.990292451385699
  - 0.9914509434108107
  - 0.9908770126226124
  train_roc_auc_samples:
  - 0.9791666666666666
  - 0.9831730769230769
  - 0.9799679487179487
  - 0.9830917874396136
  - 0.9842995169082126
  train_roc_auc_samples_oob:
  - 0.9643429487179488
  - 0.9735576923076923
  - 0.9723557692307693
  - 0.9754428341384863
  - 0.9706119162640902
  train_roc_auc_weighted:
  - 0.9952051451057247
  - 0.9959938669821992
  - 0.9947895243139339
  - 0.9951558425588258
  - 0.995484066011133
  train_roc_auc_weighted_oob:
  - 0.990463682159926
  - 0.9923558628315452
  - 0.9905836011841108
  - 0.9926599865266433
  - 0.992289404619081
start: 2023-12-21 17:03:09.523166
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
