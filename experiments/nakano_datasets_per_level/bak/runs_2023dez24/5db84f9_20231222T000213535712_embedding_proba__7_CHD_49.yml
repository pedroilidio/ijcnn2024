active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b80MzMzMzPzPzQzMzMzM/M/zMzMzMzM/L+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAADwvwAAAAAAABBAAAAAAAAACMAAAAAAAADwvw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:03:22.352515
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__7
  params: {}
hash: 5db84f9197778960673c3d5e0cd7c94d70866068d8c217edab4c4063e12f1296
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5db84f9_20231222T000213535712_embedding_proba__7_CHD_49.yml
results:
  fit_time:
  - 43.066904067993164
  - 44.076927185058594
  - 46.17873406410217
  - 43.3552668094635
  - 46.500690937042236
  score_time:
  - 6.691457271575928
  - 6.978964328765869
  - 6.688056945800781
  - 6.407668113708496
  - 7.020857810974121
  test_average_precision_macro:
  - 0.4941827276498952
  - 0.5074233260879965
  - 0.5120800556221997
  - 0.4947819047717248
  - 0.5012634205251524
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6185574022236621
  - 0.6304567431810529
  - 0.6490670911254476
  - 0.6062674893994513
  - 0.6254598503865237
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7579292929292929
  - 0.7630208333333334
  - 0.7770768431983385
  - 0.7499025341130605
  - 0.7389012896825397
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6103863572223494
  - 0.6382727604550853
  - 0.6405671775291536
  - 0.6101696939013244
  - 0.6140369066244478
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.609090909090909
  - 0.6264880952380952
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6090909090909091
  - 0.6264880952380952
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6090909090909091
  - 0.6264880952380951
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5027654164017801
  - 0.5285087719298246
  - 0.5153584733023986
  - 0.5078006434772051
  - 0.5239760239760239
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.47115564042900676
  - 0.4870265999034651
  - 0.47803154464314535
  - 0.47232693674824505
  - 0.48010545113640446
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.43790849673202614
  - 0.4561213434452871
  - 0.44594594594594594
  - 0.44
  - 0.44983818770226536
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.46134592680047243
  - 0.4833874458874459
  - 0.47611360602014813
  - 0.4590681248575985
  - 0.4705434446505875
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3487548742200185
  - 0.3667522146999346
  - 0.3548995217170507
  - 0.35466545115437115
  - 0.36310897184305335
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7670202020202023
  - 0.7630208333333331
  - 0.7957684319833854
  - 0.7499025341130606
  - 0.7389012896825397
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0846377826545721
  - 0.09535160001733288
  - 0.11986741331408836
  - 0.07695027207493083
  - 0.08095328331932258
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.18536036003504497
  - 0.21282109531207677
  - 0.23586737991043544
  - 0.16689815293607127
  - 0.20348338725861323
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.1499418372846304
  - 0.17633576981346602
  - 0.1746054216064336
  - 0.11554486601180272
  - 0.15269716305562703
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06626217535514844
  - 0.11202144657954573
  - 0.12976911362307197
  - 0.0697209900492413
  - 0.08340910989599681
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8403028019636501
  - 0.839483150130226
  - 0.8486218679589185
  - 0.8398704188764436
  - 0.8244563896335793
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.909090909090909
  - -3.7232142857142856
  - -3.7757009345794392
  - -3.8947368421052633
  - -3.857142857142857
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.39090909090909093
  - -0.3735119047619047
  - -0.38317757009345793
  - -0.38888888888888884
  - -0.37946428571428575
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.39090909090909093
  - -0.37351190476190477
  - -0.38317757009345793
  - -0.3888888888888889
  - -0.3794642857142857
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.39090909090909093
  - -0.3735119047619047
  - -0.38317757009345793
  - -0.3888888888888889
  - -0.3794642857142857
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.49723458359821987
  - -0.47149122807017546
  - -0.48464152669760147
  - -0.4921993565227949
  - -0.4760239760239761
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2459848484848485
  - -0.23881448412698414
  - -0.21420041536863968
  - -0.25872319688109163
  - -0.2544394841269841
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.609090909090909
  - 0.6264880952380952
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6090909090909091
  - 0.6264880952380952
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6090909090909091
  - 0.6264880952380951
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5027654164017801
  - 0.5285087719298246
  - 0.5153584733023986
  - 0.5078006434772051
  - 0.5239760239760239
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.609090909090909
  - 0.6264880952380952
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6090909090909091
  - 0.6264880952380952
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6090909090909091
  - 0.6264880952380951
  - 0.616822429906542
  - 0.6111111111111112
  - 0.6205357142857143
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5027654164017801
  - 0.5285087719298246
  - 0.5153584733023986
  - 0.5078006434772051
  - 0.5239760239760239
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5108506166248391
  - 0.570920425575643
  - 0.5905392568544622
  - 0.5256294195855755
  - 0.5617864333184395
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.712772521596051
  - 0.7196246430028559
  - 0.7351496817788952
  - 0.7056896325171915
  - 0.7227888691619262
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7611855158730158
  - .nan
  - 0.7412768031189084
  - 0.7455605158730159
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5190070082158699
  - 0.5732703345297049
  - 0.5522557942270306
  - 0.5456784273677595
  - 0.5428241371243911
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8075789858111332
  - 0.8058415970350774
  - 0.7997892605634288
  - 0.8159625057925428
  - 0.8176123620109287
  train_average_precision_macro_oob:
  - 0.7210796556940734
  - 0.7224466744309024
  - 0.7260126470668135
  - 0.7217564085702688
  - 0.7266949954167298
  train_average_precision_micro:
  - 0.8717616730315484
  - 0.8687957014934754
  - 0.8610396364111451
  - 0.8766682905262343
  - 0.8806338364167724
  train_average_precision_micro_oob:
  - 0.8676666435566058
  - 0.8629062271274675
  - 0.8551754933335842
  - 0.8703641205096688
  - 0.8757275429062105
  train_average_precision_samples:
  - 0.8842540574282147
  - 0.8817093052420366
  - 0.8822854662698412
  - 0.8801310153691105
  - 0.8991221469776773
  train_average_precision_samples_oob:
  - 0.8771878901373283
  - 0.877636694256333
  - 0.8716703869047618
  - 0.8705536659108088
  - 0.8902997241033358
  train_average_precision_weighted:
  - 0.8704996528156871
  - 0.871584281550631
  - 0.8628870375830394
  - 0.8776228872550411
  - 0.8769825511434008
  train_average_precision_weighted_oob:
  - 0.8631821341975288
  - 0.861305516013658
  - 0.8528363657618524
  - 0.86695559884974
  - 0.8674468271618015
  train_f1_macro:
  - 0.7786516853932586
  - 0.7757712565838976
  - 0.7749255952380953
  - 0.7762660619803476
  - 0.7750188111361926
  train_f1_macro_oob:
  - 0.7734082397003745
  - 0.7644845748683221
  - 0.7674851190476191
  - 0.7675736961451247
  - 0.7610985703536493
  train_f1_micro:
  - 0.7786516853932585
  - 0.7757712565838977
  - 0.7749255952380952
  - 0.7762660619803476
  - 0.7750188111361926
  train_f1_micro_oob:
  - 0.7734082397003745
  - 0.764484574868322
  - 0.7674851190476191
  - 0.7675736961451247
  - 0.7610985703536494
  train_f1_samples:
  - 0.7786516853932585
  - 0.7757712565838976
  - 0.7749255952380951
  - 0.7762660619803476
  - 0.7750188111361928
  train_f1_samples_oob:
  - 0.7734082397003744
  - 0.7644845748683221
  - 0.7674851190476192
  - 0.7675736961451247
  - 0.7610985703536493
  train_f1_weighted:
  - 0.7189344471243407
  - 0.7161522550731028
  - 0.7156549956369983
  - 0.7156724457061915
  - 0.7152663696279925
  train_f1_weighted_oob:
  - 0.713447849873522
  - 0.7047160026844
  - 0.708547587883321
  - 0.7076536067912146
  - 0.6997821453756121
  train_jaccard_macro:
  - 0.651751716082036
  - 0.6478210727282437
  - 0.6466402085077564
  - 0.6488796303597604
  - 0.6468490277067681
  train_jaccard_macro_oob:
  - 0.644862084185688
  - 0.6329877930484893
  - 0.6366388060423741
  - 0.6371313528453729
  - 0.6291037291857292
  train_jaccard_micro:
  - 0.6375344986200552
  - 0.633681622618316
  - 0.6325539022168236
  - 0.634342186534898
  - 0.6326781326781327
  train_jaccard_micro_oob:
  - 0.6305343511450382
  - 0.6187576126674786
  - 0.6226984606097193
  - 0.6228150873965042
  - 0.6143334345581537
  train_jaccard_samples:
  - 0.6640449438202247
  - 0.6611630656777384
  - 0.6586628401360545
  - 0.6604038440773135
  - 0.6610770719122865
  train_jaccard_samples_oob:
  - 0.657378277153558
  - 0.6450069869934429
  - 0.6489583333333334
  - 0.6491955512363676
  - 0.6425454154573794
  train_jaccard_weighted:
  - 0.5675322956997287
  - 0.5644673208048253
  - 0.5636434013534282
  - 0.5633275889813438
  - 0.5630445756732968
  train_jaccard_weighted_oob:
  - 0.5605244847135844
  - 0.5499382263736403
  - 0.5542937320674677
  - 0.5526942748165204
  - 0.5439303264694485
  train_label_ranking_average_precision_score:
  - 0.8887484394506854
  - 0.8884813142713813
  - 0.8845176091269831
  - 0.8869337364575454
  - 0.9058941560070221
  train_label_ranking_average_precision_score_oob:
  - 0.8816822721597991
  - 0.8844087032856777
  - 0.8739025297619039
  - 0.8773563869992431
  - 0.8970717331326808
  train_matthews_corrcoef_macro:
  - 0.4590776055025049
  - 0.45521676782344267
  - 0.4514578640450306
  - 0.4540733412128322
  - 0.4529442289393009
  train_matthews_corrcoef_macro_oob:
  - 0.44943801677740386
  - 0.432459994255819
  - 0.43575219320608305
  - 0.4355376930522203
  - 0.4282319115655975
  train_matthews_corrcoef_micro:
  - 0.5907333372652699
  - 0.5864126640137414
  - 0.5812325461805548
  - 0.5870321400407619
  - 0.5848429945872903
  train_matthews_corrcoef_micro_oob:
  - 0.5813142598924869
  - 0.5656067709494178
  - 0.5671483178066278
  - 0.5709043446419163
  - 0.5598063688088097
  train_matthews_corrcoef_samples:
  - 0.5127855405989609
  - 0.5254431593844311
  - 0.5136602421789952
  - 0.5164717755441303
  - 0.5299379589566655
  train_matthews_corrcoef_samples_oob:
  - 0.5041468666197183
  - 0.5058161506905658
  - 0.5019205636441788
  - 0.5023450017191351
  - 0.5022426202894665
  train_matthews_corrcoef_weighted:
  - 0.526585543206168
  - 0.519918901778877
  - 0.5167276791131095
  - 0.5212956658965078
  - 0.5198998408559463
  train_matthews_corrcoef_weighted_oob:
  - 0.51723230040137
  - 0.49861491915194806
  - 0.5027753009421201
  - 0.5052038786718047
  - 0.4950434308588447
  train_ndgc:
  - 0.9288456315400933
  - 0.9251197302940669
  - 0.9295318240126681
  - 0.924626767250441
  - 0.9376683271039564
  train_ndgc_oob:
  - 0.923994352374579
  - 0.9231512367358053
  - 0.9224458550040314
  - 0.9187353794649996
  - 0.9318010309033504
  train_neg_coverage_error:
  - -3.2606741573033706
  - -3.270880361173815
  - -3.3035714285714284
  - -3.272108843537415
  - -3.1738148984198644
  train_neg_coverage_error_oob:
  - -3.3348314606741574
  - -3.327313769751693
  - -3.3839285714285716
  - -3.369614512471655
  - -3.2528216704288937
  train_neg_hamming_loss_macro:
  - -0.22134831460674156
  - -0.22422874341610233
  - -0.22507440476190477
  - -0.22373393801965227
  - -0.22498118886380736
  train_neg_hamming_loss_macro_oob:
  - -0.22659176029962547
  - -0.23551542513167792
  - -0.23251488095238093
  - -0.23242630385487528
  - -0.2389014296463506
  train_neg_hamming_loss_micro:
  - -0.22134831460674156
  - -0.22422874341610233
  - -0.22507440476190477
  - -0.2237339380196523
  - -0.22498118886380739
  train_neg_hamming_loss_micro_oob:
  - -0.22659176029962547
  - -0.23551542513167795
  - -0.23251488095238096
  - -0.23242630385487528
  - -0.23890142964635064
  train_neg_hamming_loss_samples:
  - -0.22134831460674156
  - -0.22422874341610233
  - -0.22507440476190474
  - -0.22373393801965227
  - -0.22498118886380736
  train_neg_hamming_loss_samples_oob:
  - -0.2265917602996255
  - -0.23551542513167797
  - -0.23251488095238093
  - -0.23242630385487528
  - -0.23890142964635067
  train_neg_hamming_loss_weighted:
  - -0.2810655528756594
  - -0.28384774492689735
  - -0.28434500436300175
  - -0.2843275542938085
  - -0.28473363037200744
  train_neg_hamming_loss_weighted_oob:
  - -0.28655215012647806
  - -0.2952839973156
  - -0.29145241211667916
  - -0.29234639320878536
  - -0.3002178546243879
  train_neg_label_ranking_loss:
  - -0.11307740324594256
  - -0.11867945823927765
  - -0.12050471230158731
  - -0.11904132023179642
  - -0.09515299724103335
  train_neg_label_ranking_loss_oob:
  - -0.12281523096129839
  - -0.12488086280411337
  - -0.13351934523809525
  - -0.13281683043587805
  - -0.10783170303486331
  train_precision_macro:
  - 0.7786516853932586
  - 0.7757712565838976
  - 0.7749255952380953
  - 0.7762660619803476
  - 0.7750188111361926
  train_precision_macro_oob:
  - 0.7734082397003745
  - 0.7644845748683221
  - 0.7674851190476191
  - 0.7675736961451247
  - 0.7610985703536493
  train_precision_micro:
  - 0.7786516853932585
  - 0.7757712565838977
  - 0.7749255952380952
  - 0.7762660619803476
  - 0.7750188111361926
  train_precision_micro_oob:
  - 0.7734082397003745
  - 0.764484574868322
  - 0.7674851190476191
  - 0.7675736961451247
  - 0.7610985703536494
  train_precision_samples:
  - 0.7786516853932585
  - 0.7757712565838976
  - 0.7749255952380951
  - 0.7762660619803476
  - 0.7750188111361928
  train_precision_samples_oob:
  - 0.7734082397003744
  - 0.7644845748683221
  - 0.7674851190476192
  - 0.7675736961451247
  - 0.7610985703536493
  train_precision_weighted:
  - 0.7189344471243407
  - 0.7161522550731028
  - 0.7156549956369983
  - 0.7156724457061915
  - 0.7152663696279925
  train_precision_weighted_oob:
  - 0.713447849873522
  - 0.7047160026844
  - 0.708547587883321
  - 0.7076536067912146
  - 0.6997821453756121
  train_recall_macro:
  - 0.7786516853932586
  - 0.7757712565838976
  - 0.7749255952380953
  - 0.7762660619803476
  - 0.7750188111361926
  train_recall_macro_oob:
  - 0.7734082397003745
  - 0.7644845748683221
  - 0.7674851190476191
  - 0.7675736961451247
  - 0.7610985703536493
  train_recall_micro:
  - 0.7786516853932585
  - 0.7757712565838977
  - 0.7749255952380952
  - 0.7762660619803476
  - 0.7750188111361926
  train_recall_micro_oob:
  - 0.7734082397003745
  - 0.764484574868322
  - 0.7674851190476191
  - 0.7675736961451247
  - 0.7610985703536494
  train_recall_samples:
  - 0.7786516853932585
  - 0.7757712565838976
  - 0.7749255952380951
  - 0.7762660619803476
  - 0.7750188111361928
  train_recall_samples_oob:
  - 0.7734082397003744
  - 0.7644845748683221
  - 0.7674851190476192
  - 0.7675736961451247
  - 0.7610985703536493
  train_recall_weighted:
  - 0.7189344471243407
  - 0.7161522550731028
  - 0.7156549956369983
  - 0.7156724457061915
  - 0.7152663696279925
  train_recall_weighted_oob:
  - 0.713447849873522
  - 0.7047160026844
  - 0.708547587883321
  - 0.7076536067912146
  - 0.6997821453756121
  train_roc_auc_macro:
  - 0.7905423786233136
  - 0.7878140660203825
  - 0.78909284185508
  - 0.807941566942118
  - 0.8115699741494075
  train_roc_auc_macro_oob:
  - 0.7556507860872844
  - 0.7702906855547029
  - 0.7663572680478774
  - 0.7738214448832954
  - 0.7853822102719018
  train_roc_auc_micro:
  - 0.8790397846211633
  - 0.8719598849933387
  - 0.8612234400146678
  - 0.8823979337912101
  - 0.8854400398903017
  train_roc_auc_micro_oob:
  - 0.8725053020204936
  - 0.8657978659259588
  - 0.8566185208575251
  - 0.8755676165895098
  - 0.8797236996408025
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8019247948932734
  - 0.806718485737092
  - 0.7884808591603955
  - 0.8171532343436295
  - 0.8117930876151713
  train_roc_auc_weighted_oob:
  - 0.7958143820394807
  - 0.8002289803137044
  - 0.7819875384631215
  - 0.8096268312318367
  - 0.8082125118697757
start: 2023-12-22 00:02:13.535712
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
