active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b+gmZmZmZkRQICZmZmZmfm/wMzMzMzMBMCAZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:30:00.795891
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__6
  params: {}
hash: 6d2c96dcf9e591e9779e47233a7b471f5814d86cdaf3e38f4de1c5c5c89f9d1e
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6d2c96d_20231221T102822288094_embedding_weak__6_VirusPseAAC.yml
results:
  fit_time:
  - 86.76428580284119
  - 86.16238856315613
  - 89.6992723941803
  - 89.52417707443237
  - 88.6593074798584
  score_time:
  - 2.557572841644287
  - 3.2873034477233887
  - 3.0196409225463867
  - 3.076195240020752
  - 3.0569522380828857
  test_average_precision_macro:
  - 0.3765803082410671
  - 0.4321311039956157
  - 0.32972714308318674
  - 0.3798227892381363
  - 0.35824681904809935
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4279741866274825
  - 0.4568041972613719
  - 0.40242883696913495
  - 0.43886234296818427
  - 0.4513605007652176
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6682170542635658
  - 0.6648648648648647
  - 0.6343023255813953
  - 0.6842803030303031
  - 0.7184722222222222
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.41852489746884064
  - 0.46123993429434945
  - 0.44339239275854186
  - 0.44640731370293996
  - 0.4231084166571352
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8062015503875969
  - 0.7747747747747747
  - 0.7790697674418604
  - 0.7954545454545455
  - 0.775
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8062015503875969
  - 0.7747747747747747
  - 0.7790697674418605
  - 0.7954545454545454
  - 0.775
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8062015503875969
  - 0.7747747747747749
  - 0.7790697674418603
  - 0.7954545454545456
  - 0.775
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7054263565891472
  - 0.649200220628792
  - 0.6283815851922164
  - 0.6680035650623887
  - 0.6475961538461539
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.696941005195603
  - 0.6628913722911606
  - 0.6778768631888603
  - 0.6906969204944132
  - 0.663082624819571
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6753246753246753
  - 0.6323529411764706
  - 0.638095238095238
  - 0.660377358490566
  - 0.6326530612244898
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6904761904761906
  - 0.6428571428571429
  - 0.6696566998892581
  - 0.6747835497835498
  - 0.648809523809524
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5617028976113424
  - 0.5070477406851189
  - 0.48959433139694913
  - 0.5232010063707834
  - 0.5024024518285682
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6682170542635658
  - 0.6648648648648648
  - 0.6343023255813952
  - 0.6842803030303028
  - 0.7184722222222222
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.04238419280014102
  - 0.010753440920602856
  - 0.013790514017405026
  - 0.007139738027196509
  - -0.006492079169822952
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1842901284250471
  - 0.1596364303564792
  - 0.2533646190743734
  - 0.12857712448463476
  - 0.11137400585004201
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.11627906976744186
  - 0.09667664117931517
  - 0.25261110837600886
  - 0.08445972195492814
  - 0.07036895158665706
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.08476838560028202
  - 0.01813967995065278
  - 0.02870678428112883
  - 0.01700555784659532
  - -0.01311596279506529
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7512372094766487
  - 0.7558140546902805
  - 0.7265060599386579
  - 0.764129406434349
  - 0.7916352592283855
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2790697674418605
  - -2.4864864864864864
  - -2.2790697674418605
  - -2.1136363636363638
  - -2.275
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19379844961240308
  - -0.22522522522522526
  - -0.2209302325581395
  - -0.2045454545454545
  - -0.225
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1937984496124031
  - -0.22522522522522523
  - -0.22093023255813954
  - -0.20454545454545456
  - -0.225
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1937984496124031
  - -0.2252252252252252
  - -0.22093023255813954
  - -0.2045454545454545
  - -0.225
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29457364341085274
  - -0.35079977937120793
  - -0.3716184148077836
  - -0.3319964349376114
  - -0.35240384615384607
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22325581395348837
  - -0.21516516516516518
  - -0.2337209302325581
  - -0.1965909090909091
  - -0.19618055555555552
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8062015503875969
  - 0.7747747747747747
  - 0.7790697674418604
  - 0.7954545454545455
  - 0.775
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8062015503875969
  - 0.7747747747747747
  - 0.7790697674418605
  - 0.7954545454545454
  - 0.775
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8062015503875969
  - 0.7747747747747749
  - 0.7790697674418603
  - 0.7954545454545456
  - 0.775
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7054263565891472
  - 0.649200220628792
  - 0.6283815851922164
  - 0.6680035650623887
  - 0.6475961538461539
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8062015503875969
  - 0.7747747747747747
  - 0.7790697674418604
  - 0.7954545454545455
  - 0.775
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8062015503875969
  - 0.7747747747747747
  - 0.7790697674418605
  - 0.7954545454545454
  - 0.775
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8062015503875969
  - 0.7747747747747749
  - 0.7790697674418603
  - 0.7954545454545456
  - 0.775
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7054263565891472
  - 0.649200220628792
  - 0.6283815851922164
  - 0.6680035650623887
  - 0.6475961538461539
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6519929005581803
  - 0.5946184192151933
  - 0.6453755791991087
  - 0.6481318673293137
  - 0.5607526533774178
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7805247702945913
  - 0.7838858086587236
  - 0.7770725515086417
  - 0.793335174445365
  - 0.7718903436988542
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7767441860465116
  - 0.7848348348348348
  - 0.766279069767442
  - 0.803409090909091
  - 0.8038194444444444
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6012499642341824
  - 0.5774888924987674
  - 0.6144865430579716
  - 0.6050858954643724
  - 0.5462990559529461
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9040674139671934
  - 0.9171554994166224
  - 0.8906716136052916
  - 0.9478337931991367
  - 0.9571781733175899
  train_average_precision_macro_oob:
  - 0.4107525396388973
  - 0.42863641603917485
  - 0.3902827238358438
  - 0.42499729742871356
  - 0.4345755023278248
  train_average_precision_micro:
  - 0.8710321551159775
  - 0.9139617893011269
  - 0.6847681212514012
  - 0.8601527015546734
  - 0.8451000603684762
  train_average_precision_micro_oob:
  - 0.5998487514852908
  - 0.6039559243409407
  - 0.4965338469196023
  - 0.5915649451498636
  - 0.6063712841940248
  train_average_precision_samples:
  - 0.8841463414634146
  - 0.9112745098039217
  - 0.8175813008130081
  - 0.8773006134969326
  - 0.8872255489021955
  train_average_precision_samples_oob:
  - 0.7392615176151761
  - 0.7265032679738562
  - 0.7000846883468835
  - 0.7347477845944104
  - 0.72624750499002
  train_average_precision_weighted:
  - 0.9491131562809214
  - 0.972334236607099
  - 0.8759923593674037
  - 0.9563017607454469
  - 0.9552470430869897
  train_average_precision_weighted_oob:
  - 0.569089389451407
  - 0.5946903908066533
  - 0.5072059817427143
  - 0.5685009870113988
  - 0.5944815431437732
  train_f1_macro:
  - 0.9227642276422764
  - 0.9205882352941178
  - 0.8922764227642276
  - 0.9202453987730062
  - 0.9201596806387227
  train_f1_macro_oob:
  - 0.8292682926829267
  - 0.8264705882352943
  - 0.8018292682926829
  - 0.8404907975460122
  - 0.8393213572854292
  train_f1_micro:
  - 0.9227642276422764
  - 0.9205882352941176
  - 0.8922764227642277
  - 0.9202453987730062
  - 0.9201596806387226
  train_f1_micro_oob:
  - 0.8292682926829268
  - 0.8264705882352941
  - 0.801829268292683
  - 0.8404907975460123
  - 0.8393213572854291
  train_f1_samples:
  - 0.9227642276422765
  - 0.9205882352941176
  - 0.8922764227642275
  - 0.9202453987730062
  - 0.9201596806387227
  train_f1_samples_oob:
  - 0.8292682926829268
  - 0.8264705882352941
  - 0.801829268292683
  - 0.8404907975460121
  - 0.8393213572854289
  train_f1_weighted:
  - 0.9382053148889697
  - 0.9309475514343669
  - 0.8775982217950257
  - 0.9354149497909228
  - 0.9307185628742515
  train_f1_weighted_oob:
  - 0.7462989928406747
  - 0.7392350043465662
  - 0.6970443349753694
  - 0.7735250129719501
  - 0.766437125748503
  train_jaccard_macro:
  - 0.8600329353561449
  - 0.8556609634617142
  - 0.8114866991205356
  - 0.8554029216404083
  - 0.8547910854988104
  train_jaccard_macro_oob:
  - 0.7231395440366432
  - 0.7205000532535312
  - 0.691434375386692
  - 0.7354201421295063
  - 0.7362137796876581
  train_jaccard_micro:
  - 0.8566037735849057
  - 0.8528610354223434
  - 0.8055045871559633
  - 0.8522727272727273
  - 0.8521256931608133
  train_jaccard_micro_oob:
  - 0.7083333333333334
  - 0.7042606516290727
  - 0.6692111959287532
  - 0.7248677248677249
  - 0.7231298366294067
  train_jaccard_samples:
  - 0.8723867595818814
  - 0.8694677871148461
  - 0.8326074332171892
  - 0.8685363716038562
  - 0.8691189050470486
  train_jaccard_samples_oob:
  - 0.7244483159117306
  - 0.7161064425770309
  - 0.6983159117305459
  - 0.7456909144025708
  - 0.7389506700883945
  train_jaccard_weighted:
  - 0.886993651243214
  - 0.873235863545315
  - 0.7907236020846983
  - 0.8817532474563706
  - 0.8726769124346581
  train_jaccard_weighted_oob:
  - 0.6060440483003325
  - 0.5978900177707199
  - 0.5525491731711039
  - 0.63811035971279
  - 0.6315728472599784
  train_label_ranking_average_precision_score:
  - 0.8841463414634148
  - 0.9112745098039216
  - 0.8175813008130078
  - 0.8773006134969326
  - 0.8872255489021957
  train_label_ranking_average_precision_score_oob:
  - 0.739261517615176
  - 0.7265032679738561
  - 0.7000846883468834
  - 0.7347477845944101
  - 0.7262475049900199
  train_matthews_corrcoef_macro:
  - 0.30828051330872214
  - 0.3014322809548714
  - 0.26415975935202113
  - 0.30632888764388516
  - 0.3010918318572071
  train_matthews_corrcoef_macro_oob:
  - 0.11510675802899868
  - 0.10268244461464533
  - 0.09072319667537561
  - 0.14217918493137807
  - 0.1293769959982853
  train_matthews_corrcoef_micro:
  - 0.7507774396636883
  - 0.7387969193078457
  - 0.6526338847575311
  - 0.7435084077203105
  - 0.7354493880768067
  train_matthews_corrcoef_micro_oob:
  - 0.35993333307627534
  - 0.3167515962742777
  - 0.3357611062874638
  - 0.423318286651964
  - 0.395633017556637
  train_matthews_corrcoef_samples:
  - 0.6405269522255463
  - 0.6313209136490399
  - 0.6037106391741274
  - 0.6462031114779385
  - 0.6386013183532311
  train_matthews_corrcoef_samples_oob:
  - 0.23326549481597486
  - 0.16642411640178284
  - 0.3180383896045104
  - 0.3159929929556403
  - 0.26608790407128186
  train_matthews_corrcoef_weighted:
  - 0.630930527044261
  - 0.6146262483802376
  - 0.5326740431220706
  - 0.622112787236254
  - 0.6141116668817603
  train_matthews_corrcoef_weighted_oob:
  - 0.2344186989130974
  - 0.21000160046720212
  - 0.18884275074929516
  - 0.2889715287521504
  - 0.2651727892815933
  train_ndgc:
  - 0.9158220715817481
  - 0.9358186310108089
  - 0.8653478675057144
  - 0.911074767009626
  - 0.9176824251935484
  train_ndgc_oob:
  - 0.8068056321132201
  - 0.7954983997797145
  - 0.7775408268424341
  - 0.8026233080013414
  - 0.7959087799110945
  train_neg_coverage_error:
  - -1.579268292682927
  - -1.4705882352941178
  - -1.7195121951219512
  - -1.607361963190184
  - -1.5389221556886228
  train_neg_coverage_error_oob:
  - -2.1951219512195124
  - -2.164705882352941
  - -2.2621951219512195
  - -2.2392638036809815
  - -2.1736526946107784
  train_neg_hamming_loss_macro:
  - -0.0772357723577236
  - -0.07941176470588235
  - -0.10772357723577236
  - -0.07975460122699386
  - -0.07984031936127745
  train_neg_hamming_loss_macro_oob:
  - -0.17073170731707318
  - -0.17352941176470585
  - -0.19817073170731705
  - -0.15950920245398773
  - -0.16067864271457086
  train_neg_hamming_loss_micro:
  - -0.07723577235772358
  - -0.07941176470588235
  - -0.10772357723577236
  - -0.07975460122699386
  - -0.07984031936127745
  train_neg_hamming_loss_micro_oob:
  - -0.17073170731707318
  - -0.17352941176470588
  - -0.19817073170731708
  - -0.15950920245398773
  - -0.16067864271457086
  train_neg_hamming_loss_samples:
  - -0.07723577235772357
  - -0.07941176470588235
  - -0.10772357723577235
  - -0.07975460122699386
  - -0.07984031936127743
  train_neg_hamming_loss_samples_oob:
  - -0.17073170731707318
  - -0.1735294117647059
  - -0.19817073170731708
  - -0.1595092024539877
  - -0.16067864271457083
  train_neg_hamming_loss_weighted:
  - -0.06179468511103021
  - -0.06905244856563315
  - -0.12240177820497417
  - -0.06458505020907732
  - -0.0692814371257485
  train_neg_hamming_loss_weighted_oob:
  - -0.2537010071593253
  - -0.26076499565343375
  - -0.30295566502463056
  - -0.2264749870280499
  - -0.23356287425149702
  train_neg_label_ranking_loss:
  - -0.06759823848238483
  - -0.0511764705882353
  - -0.09679878048780488
  - -0.07131901840490798
  - -0.0658682634730539
  train_neg_label_ranking_loss_oob:
  - -0.19112466124661248
  - -0.1972549019607843
  - -0.2030149051490515
  - -0.19981254260395365
  - -0.19512641383898868
  train_precision_macro:
  - 0.9227642276422764
  - 0.9205882352941178
  - 0.8922764227642276
  - 0.9202453987730062
  - 0.9201596806387227
  train_precision_macro_oob:
  - 0.8292682926829267
  - 0.8264705882352943
  - 0.8018292682926829
  - 0.8404907975460122
  - 0.8393213572854292
  train_precision_micro:
  - 0.9227642276422764
  - 0.9205882352941176
  - 0.8922764227642277
  - 0.9202453987730062
  - 0.9201596806387226
  train_precision_micro_oob:
  - 0.8292682926829268
  - 0.8264705882352941
  - 0.801829268292683
  - 0.8404907975460123
  - 0.8393213572854291
  train_precision_samples:
  - 0.9227642276422765
  - 0.9205882352941176
  - 0.8922764227642275
  - 0.9202453987730062
  - 0.9201596806387227
  train_precision_samples_oob:
  - 0.8292682926829268
  - 0.8264705882352941
  - 0.801829268292683
  - 0.8404907975460121
  - 0.8393213572854289
  train_precision_weighted:
  - 0.9382053148889697
  - 0.9309475514343669
  - 0.8775982217950257
  - 0.9354149497909228
  - 0.9307185628742515
  train_precision_weighted_oob:
  - 0.7462989928406747
  - 0.7392350043465662
  - 0.6970443349753694
  - 0.7735250129719501
  - 0.766437125748503
  train_recall_macro:
  - 0.9227642276422764
  - 0.9205882352941178
  - 0.8922764227642276
  - 0.9202453987730062
  - 0.9201596806387227
  train_recall_macro_oob:
  - 0.8292682926829267
  - 0.8264705882352943
  - 0.8018292682926829
  - 0.8404907975460122
  - 0.8393213572854292
  train_recall_micro:
  - 0.9227642276422764
  - 0.9205882352941176
  - 0.8922764227642277
  - 0.9202453987730062
  - 0.9201596806387226
  train_recall_micro_oob:
  - 0.8292682926829268
  - 0.8264705882352941
  - 0.801829268292683
  - 0.8404907975460123
  - 0.8393213572854291
  train_recall_samples:
  - 0.9227642276422765
  - 0.9205882352941176
  - 0.8922764227642275
  - 0.9202453987730062
  - 0.9201596806387227
  train_recall_samples_oob:
  - 0.8292682926829268
  - 0.8264705882352941
  - 0.801829268292683
  - 0.8404907975460121
  - 0.8393213572854289
  train_recall_weighted:
  - 0.9382053148889697
  - 0.9309475514343669
  - 0.8775982217950257
  - 0.9354149497909228
  - 0.9307185628742515
  train_recall_weighted_oob:
  - 0.7462989928406747
  - 0.7392350043465662
  - 0.6970443349753694
  - 0.7735250129719501
  - 0.766437125748503
  train_roc_auc_macro:
  - 0.9908207882197525
  - 0.9952092514291486
  - 0.9650487326195053
  - 0.9928506796136691
  - 0.9912796435943765
  train_roc_auc_macro_oob:
  - 0.6945949833781299
  - 0.7555189676191273
  - 0.6940361518881216
  - 0.7020057840951028
  - 0.7194067970024061
  train_roc_auc_micro:
  - 0.9557703182681738
  - 0.9675793332569596
  - 0.9260957595100383
  - 0.9542058049520736
  - 0.9554862842892768
  train_roc_auc_micro_oob:
  - 0.8192371475953565
  - 0.8282313642968688
  - 0.8037062500394214
  - 0.8164198313452046
  - 0.826920199501247
  train_roc_auc_samples:
  - 0.9324017615176152
  - 0.9488235294117646
  - 0.9032012195121951
  - 0.928680981595092
  - 0.9341317365269461
  train_roc_auc_samples_oob:
  - 0.8088753387533876
  - 0.8027450980392157
  - 0.7969850948509485
  - 0.8001874573960465
  - 0.8048735861610113
  train_roc_auc_weighted:
  - 0.9893230107132736
  - 0.9968572334507624
  - 0.9336881601034716
  - 0.988546281322049
  - 0.9842389021430629
  train_roc_auc_weighted_oob:
  - 0.7355299187496614
  - 0.7786425364313712
  - 0.7098124601784013
  - 0.7430803855065112
  - 0.7731945863270353
start: 2023-12-21 10:28:22.288094
wrapper: null
