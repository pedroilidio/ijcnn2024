active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z80MzMzMzPzP8zMzMzMzPy/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAEMAAAAAAAAAQQAAAAAAAAAAAAAAAAAAA8L8AAAAAAADwPw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:15:06.267831
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__9
  params: {}
hash: 8939cbf09211390d18ac224a1a4a4cc98728b56dae732966992fb6bd8eabdf22
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8939cbf_20231221T221257993175_embedding_proba__9_CHD_49.yml
results:
  fit_time:
  - 97.10705327987671
  - 98.92217779159546
  - 98.95949387550354
  - 103.33062100410461
  - 103.5975501537323
  score_time:
  - 7.50906777381897
  - 7.6656272411346436
  - 7.860994577407837
  - 7.985786199569702
  - 8.091257333755493
  test_average_precision_macro:
  - 0.4885105951950332
  - 0.5001013496440407
  - 0.5244756465580868
  - 0.5825043879736826
  - 0.5414991076618481
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.613637533633403
  - 0.6500104860126822
  - 0.6873682320071295
  - 0.7203843215074123
  - 0.6671811640013818
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7626570048309178
  - 0.7993380062305296
  - 0.8091091091091089
  - 0.8121899801587301
  - 0.7841161616161615
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5899653570607972
  - 0.6194756258466083
  - 0.6490067595684302
  - 0.7039765092792893
  - 0.6505272902972788
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6898550724637681
  - 0.6993769470404985
  - 0.7132132132132133
  - 0.7589285714285715
  - 0.7045454545454546
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6898550724637681
  - 0.6993769470404985
  - 0.7132132132132132
  - 0.7589285714285714
  - 0.7045454545454546
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6898550724637681
  - 0.6993769470404986
  - 0.7132132132132133
  - 0.7589285714285714
  - 0.7045454545454546
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6336880510793553
  - 0.6558068100124175
  - 0.6747621747621748
  - 0.7126311188811189
  - 0.6633522727272728
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5496904048227385
  - 0.5580478907368378
  - 0.5699543854294961
  - 0.6253150558474406
  - 0.5607499745259249
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5265486725663717
  - 0.5377245508982036
  - 0.5542590431738623
  - 0.6115107913669064
  - 0.543859649122807
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5724788255223037
  - 0.5741028441963022
  - 0.5960609960609959
  - 0.6552837043908472
  - 0.5894018103109012
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.47006249183573245
  - 0.49240268544507887
  - 0.5140248508965591
  - 0.5564487140086772
  - 0.5004952825856024
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7626570048309177
  - 0.8273753894080993
  - 0.809109109109109
  - 0.8121899801587302
  - 0.7841161616161613
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1254561646095142
  - 0.11859884107166381
  - 0.1690211094129411
  - 0.26908874363376883
  - 0.14673189481851967
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.37729300255549403
  - 0.3897895512410924
  - 0.41719454287228136
  - 0.5105031927810546
  - 0.3978017543215741
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3977513077696194
  - 0.4110015140112344
  - 0.44466600178623733
  - 0.5357241546172729
  - 0.41427447017945646
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1268583531311101
  - 0.12763021981335518
  - 0.18593030803089444
  - 0.27688618283992533
  - 0.15448226174964969
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8406039586574446
  - 0.865145006077214
  - 0.8752405220095802
  - 0.8716813941821336
  - 0.8564842271097912
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.608695652173913
  - -3.710280373831776
  - -3.6036036036036037
  - -3.455357142857143
  - -3.690909090909091
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.31014492753623185
  - -0.30062305295950154
  - -0.28678678678678676
  - -0.2410714285714286
  - -0.29545454545454547
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3101449275362319
  - -0.30062305295950154
  - -0.28678678678678676
  - -0.24107142857142858
  - -0.29545454545454547
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3101449275362318
  - -0.30062305295950154
  - -0.28678678678678676
  - -0.24107142857142858
  - -0.29545454545454547
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3663119489206445
  - -0.3441931899875825
  - -0.32523782523782524
  - -0.2873688811188811
  - -0.3366477272727273
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23268115942028983
  - -0.19055036344755968
  - -0.19719719719719717
  - -0.1736111111111111
  - -0.22136363636363635
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6898550724637681
  - 0.6993769470404985
  - 0.7132132132132133
  - 0.7589285714285715
  - 0.7045454545454546
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6898550724637681
  - 0.6993769470404985
  - 0.7132132132132132
  - 0.7589285714285714
  - 0.7045454545454546
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6898550724637681
  - 0.6993769470404986
  - 0.7132132132132133
  - 0.7589285714285714
  - 0.7045454545454546
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6336880510793553
  - 0.6558068100124175
  - 0.6747621747621748
  - 0.7126311188811189
  - 0.6633522727272728
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6898550724637681
  - 0.6993769470404985
  - 0.7132132132132133
  - 0.7589285714285715
  - 0.7045454545454546
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6898550724637681
  - 0.6993769470404985
  - 0.7132132132132132
  - 0.7589285714285714
  - 0.7045454545454546
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6898550724637681
  - 0.6993769470404986
  - 0.7132132132132133
  - 0.7589285714285714
  - 0.7045454545454546
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6336880510793553
  - 0.6558068100124175
  - 0.6747621747621748
  - 0.7126311188811189
  - 0.6633522727272728
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6064739908872092
  - 0.6138664458664125
  - 0.5797046674661983
  - 0.6348259971295468
  - 0.6147944742945032
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7443830921553694
  - 0.7615797124224092
  - 0.7792694147957305
  - 0.8221267074894019
  - 0.7691438918757467
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7673188405797102
  - .nan
  - 0.8028028028028028
  - 0.8263888888888887
  - 0.7786363636363636
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5503390735479318
  - 0.5654959279723628
  - 0.6248614541429213
  - 0.6700745959209934
  - 0.577205119766546
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9962391013074017
  - 0.9988356126106476
  - 0.9991471528459778
  - 0.9990790074945771
  - 0.9990048082015967
  train_average_precision_macro_oob:
  - 0.874080341406381
  - 0.8606778622623955
  - 0.8518733464553674
  - 0.8574678918206774
  - 0.8556232937080672
  train_average_precision_micro:
  - 0.9962947295364829
  - 0.9962656281072185
  - 0.9969230561363736
  - 0.9971277261267114
  - 0.9962359093557064
  train_average_precision_micro_oob:
  - 0.9837153394642395
  - 0.9843621477012475
  - 0.9880027356977056
  - 0.9875681241214944
  - 0.9838564072758901
  train_average_precision_samples:
  - 0.9877493686868687
  - 0.9938089037698413
  - 0.9873873873873873
  - 0.9871331828442437
  - 0.9842446941323345
  train_average_precision_samples_oob:
  - 0.9684690656565657
  - 0.9743024553571428
  - 0.9677427427427426
  - 0.9731753197893153
  - 0.9656803995006242
  train_average_precision_weighted:
  - 0.9986790205467837
  - 0.9987668389773763
  - 0.9990782927843805
  - 0.9991453267189011
  - 0.9990108315621526
  train_average_precision_weighted_oob:
  - 0.9824729128249543
  - 0.9818868989029285
  - 0.9852542727374288
  - 0.9837314457765699
  - 0.9817453280988325
  train_f1_macro:
  - 0.9731060606060606
  - 0.9739583333333335
  - 0.9744744744744746
  - 0.9759217456734387
  - 0.9726591760299624
  train_f1_macro_oob:
  - 0.9602272727272726
  - 0.9553571428571429
  - 0.9617117117117119
  - 0.9589917231000754
  - 0.9644194756554308
  train_f1_micro:
  - 0.9731060606060606
  - 0.9739583333333334
  - 0.9744744744744744
  - 0.9759217456734387
  - 0.9726591760299625
  train_f1_micro_oob:
  - 0.9602272727272727
  - 0.9553571428571429
  - 0.9617117117117117
  - 0.9589917231000753
  - 0.9644194756554307
  train_f1_samples:
  - 0.9731060606060608
  - 0.9739583333333334
  - 0.9744744744744746
  - 0.9759217456734388
  - 0.9726591760299627
  train_f1_samples_oob:
  - 0.9602272727272727
  - 0.9553571428571429
  - 0.9617117117117117
  - 0.9589917231000753
  - 0.9644194756554307
  train_f1_weighted:
  - 0.9735007139457402
  - 0.9735376153079033
  - 0.9732952848136094
  - 0.9758744716138972
  - 0.9718118959691995
  train_f1_weighted_oob:
  - 0.9580378391242266
  - 0.9509727156569434
  - 0.9573428140182066
  - 0.955779056803722
  - 0.9612673843010923
  train_jaccard_macro:
  - 0.9478665230741475
  - 0.94932459569995
  - 0.9503658502542788
  - 0.9533561204980426
  - 0.9471615500779849
  train_jaccard_macro_oob:
  - 0.9238498859486767
  - 0.9149900555509604
  - 0.9266292017285848
  - 0.9216493940452816
  - 0.931575980369451
  train_jaccard_micro:
  - 0.9476208041313169
  - 0.949238578680203
  - 0.9502196193265008
  - 0.9529757531227039
  - 0.946773605541378
  train_jaccard_micro_oob:
  - 0.9234972677595629
  - 0.9145299145299145
  - 0.9262472885032538
  - 0.9212143115287315
  - 0.9312839059674503
  train_jaccard_samples:
  - 0.9548160173160173
  - 0.9559948979591836
  - 0.9562419562419562
  - 0.9593679458239278
  - 0.9540395933654361
  train_jaccard_samples_oob:
  - 0.9333874458874458
  - 0.9269238945578231
  - 0.9359716859716859
  - 0.9321724174997313
  - 0.9403959336543605
  train_jaccard_weighted:
  - 0.9486585875756697
  - 0.9485016937269093
  - 0.9481420572446897
  - 0.9533772635970204
  - 0.9457104818408824
  train_jaccard_weighted_oob:
  - 0.9198659476529356
  - 0.9068775265581653
  - 0.9184855175978516
  - 0.9157018710270228
  - 0.9257381121392005
  train_label_ranking_average_precision_score:
  - 0.9945675505050506
  - 0.9938089037698413
  - 0.9941441441441441
  - 0.9939051918735892
  - 0.9909862671660424
  train_label_ranking_average_precision_score_oob:
  - 0.9752872474747473
  - 0.9743024553571429
  - 0.9744994994994992
  - 0.9799473288186605
  - 0.9724219725343318
  train_matthews_corrcoef_macro:
  - 0.786186575693708
  - 0.7866664930115337
  - 0.7863230828483632
  - 0.79120146504249
  - 0.7837306728506223
  train_matthews_corrcoef_macro_oob:
  - 0.7578393466337571
  - 0.7464942574903239
  - 0.7580449286879097
  - 0.7530892924767473
  - 0.7649939806878319
  train_matthews_corrcoef_micro:
  - 0.945240175098025
  - 0.9467309841297613
  - 0.9479459386110586
  - 0.9510150791823099
  - 0.9442760962498606
  train_matthews_corrcoef_micro_oob:
  - 0.9190256905730072
  - 0.9087334732210157
  - 0.9219382516983158
  - 0.9165278622955849
  - 0.9274452787796391
  train_matthews_corrcoef_samples:
  - 0.9402858134201364
  - 0.9474253675192138
  - 0.9427287144098359
  - 0.9455204802477978
  - 0.9388365067096435
  train_matthews_corrcoef_samples_oob:
  - 0.9135336955458846
  - 0.9108850602298206
  - 0.9189658164508242
  - 0.911855943486824
  - 0.9238178073958618
  train_matthews_corrcoef_weighted:
  - 0.9298654844624133
  - 0.927980620708981
  - 0.9312206026630906
  - 0.935794521285767
  - 0.9283450563619023
  train_matthews_corrcoef_weighted_oob:
  - 0.8951523223696404
  - 0.8784341633609891
  - 0.8949249743261494
  - 0.8889976342494087
  - 0.9034733673480613
  train_ndgc:
  - 0.9901064987892483
  - 0.9961657174216326
  - 0.9893560040478653
  - 0.9893420381704826
  - 0.9875010981045506
  train_ndgc_oob:
  - 0.978373679535579
  - 0.9854805539416837
  - 0.9783463059690607
  - 0.9816210991381285
  - 0.9758348768324205
  train_neg_coverage_error:
  - -2.647727272727273
  - -2.595982142857143
  - -2.623873873873874
  - -2.63431151241535
  - -2.6292134831460676
  train_neg_coverage_error_oob:
  - -2.768181818181818
  - -2.7433035714285716
  - -2.7522522522522523
  - -2.72686230248307
  - -2.7325842696629215
  train_neg_hamming_loss_macro:
  - -0.02689393939393939
  - -0.026041666666666668
  - -0.025525525525525523
  - -0.024078254326561327
  - -0.02734082397003745
  train_neg_hamming_loss_macro_oob:
  - -0.03977272727272727
  - -0.044642857142857144
  - -0.038288288288288286
  - -0.041008276899924756
  - -0.035580524344569285
  train_neg_hamming_loss_micro:
  - -0.026893939393939394
  - -0.026041666666666668
  - -0.025525525525525526
  - -0.024078254326561323
  - -0.027340823970037453
  train_neg_hamming_loss_micro_oob:
  - -0.03977272727272727
  - -0.044642857142857144
  - -0.038288288288288286
  - -0.041008276899924756
  - -0.035580524344569285
  train_neg_hamming_loss_samples:
  - -0.02689393939393939
  - -0.026041666666666664
  - -0.025525525525525523
  - -0.024078254326561323
  - -0.027340823970037446
  train_neg_hamming_loss_samples_oob:
  - -0.03977272727272727
  - -0.044642857142857144
  - -0.038288288288288286
  - -0.041008276899924756
  - -0.035580524344569285
  train_neg_hamming_loss_weighted:
  - -0.026499286054259875
  - -0.026462384692096736
  - -0.02670471518639058
  - -0.024125528386103
  - -0.02818810403080066
  train_neg_hamming_loss_weighted_oob:
  - -0.04196216087577344
  - -0.049027284343056594
  - -0.042657185981793314
  - -0.044220943196277965
  - -0.03873261569890783
  train_neg_label_ranking_loss:
  - -0.006565656565656566
  - -0.006318204365079365
  - -0.006944444444444445
  - -0.006972661148733384
  - -0.009069912609238453
  train_neg_label_ranking_loss_oob:
  - -0.02527777777777778
  - -0.02722594246031746
  - -0.02539414414414414
  - -0.021087283671933785
  - -0.026953807740324593
  train_precision_macro:
  - 0.9731060606060606
  - 0.9739583333333335
  - 0.9744744744744746
  - 0.9759217456734387
  - 0.9726591760299624
  train_precision_macro_oob:
  - 0.9602272727272726
  - 0.9553571428571429
  - 0.9617117117117119
  - 0.9589917231000754
  - 0.9644194756554308
  train_precision_micro:
  - 0.9731060606060606
  - 0.9739583333333334
  - 0.9744744744744744
  - 0.9759217456734387
  - 0.9726591760299625
  train_precision_micro_oob:
  - 0.9602272727272727
  - 0.9553571428571429
  - 0.9617117117117117
  - 0.9589917231000753
  - 0.9644194756554307
  train_precision_samples:
  - 0.9731060606060608
  - 0.9739583333333334
  - 0.9744744744744746
  - 0.9759217456734388
  - 0.9726591760299627
  train_precision_samples_oob:
  - 0.9602272727272727
  - 0.9553571428571429
  - 0.9617117117117117
  - 0.9589917231000753
  - 0.9644194756554307
  train_precision_weighted:
  - 0.9735007139457402
  - 0.9735376153079033
  - 0.9732952848136094
  - 0.9758744716138972
  - 0.9718118959691995
  train_precision_weighted_oob:
  - 0.9580378391242266
  - 0.9509727156569434
  - 0.9573428140182066
  - 0.955779056803722
  - 0.9612673843010923
  train_recall_macro:
  - 0.9731060606060606
  - 0.9739583333333335
  - 0.9744744744744746
  - 0.9759217456734387
  - 0.9726591760299624
  train_recall_macro_oob:
  - 0.9602272727272726
  - 0.9553571428571429
  - 0.9617117117117119
  - 0.9589917231000754
  - 0.9644194756554308
  train_recall_micro:
  - 0.9731060606060606
  - 0.9739583333333334
  - 0.9744744744744744
  - 0.9759217456734387
  - 0.9726591760299625
  train_recall_micro_oob:
  - 0.9602272727272727
  - 0.9553571428571429
  - 0.9617117117117117
  - 0.9589917231000753
  - 0.9644194756554307
  train_recall_samples:
  - 0.9731060606060608
  - 0.9739583333333334
  - 0.9744744744744746
  - 0.9759217456734388
  - 0.9726591760299627
  train_recall_samples_oob:
  - 0.9602272727272727
  - 0.9553571428571429
  - 0.9617117117117117
  - 0.9589917231000753
  - 0.9644194756554307
  train_recall_weighted:
  - 0.9735007139457402
  - 0.9735376153079033
  - 0.9732952848136094
  - 0.9758744716138972
  - 0.9718118959691995
  train_recall_weighted_oob:
  - 0.9580378391242266
  - 0.9509727156569434
  - 0.9573428140182066
  - 0.955779056803722
  - 0.9612673843010923
  train_roc_auc_macro:
  - 0.9988587222433812
  - 0.9988533516698709
  - 0.9991306643050307
  - 0.9993263497165095
  - 0.9990967501391953
  train_roc_auc_macro_oob:
  - 0.9733467050045496
  - 0.9702819022239909
  - 0.9753640772969366
  - 0.9718155854949014
  - 0.9776636505254972
  train_roc_auc_micro:
  - 0.9968153591679108
  - 0.996892422297825
  - 0.9974011685256847
  - 0.9975916922906451
  - 0.9968090968664363
  train_roc_auc_micro_oob:
  - 0.9865050662218391
  - 0.9854006378697234
  - 0.9881181493974575
  - 0.9882083529552987
  - 0.9868892575314594
  train_roc_auc_samples:
  - .nan
  - 0.9936817956349205
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - 0.9727740575396826
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.998798500843811
  - 0.9985936052810189
  - 0.9989317736956178
  - 0.9993018072496754
  - 0.9989153333536702
  train_roc_auc_weighted_oob:
  - 0.987242087126207
  - 0.9871373168221245
  - 0.9910343694612872
  - 0.992273455034937
  - 0.9889584846791446
start: 2023-12-21 22:12:57.993175
wrapper: null
