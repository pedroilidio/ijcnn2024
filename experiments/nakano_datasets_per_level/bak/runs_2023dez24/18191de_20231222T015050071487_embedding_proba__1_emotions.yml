active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+gmZmZmZn5P0AzMzMzM+M/QDMzMzMz4z8wMzMzMzMLwA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+YmZmZmZkRwKCZmZmZmfk/QDMzMzMz4z+gmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMBEBAZmZmZmb2v0BmZmZmZva/IDMzMzMzA8DgzMzMzMwEQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:51:03.645494
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__1
  params: {}
hash: 18191de512c9f4794ea460fbe53ae41d02a55e71460d3e7c4f5aa176da1daf78
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/18191de_20231222T015050071487_embedding_proba__1_emotions.yml
results:
  fit_time:
  - 3.6724042892456055
  - 3.602191209793091
  - 3.6231374740600586
  - 3.3545384407043457
  - 3.8774871826171875
  score_time:
  - 1.8450639247894287
  - 1.9929063320159912
  - 1.8183770179748535
  - 1.9322726726531982
  - 1.8940575122833252
  test_average_precision_macro:
  - 0.7457501129589085
  - 0.750958430834927
  - 0.7368482272992013
  - 0.7744751896131757
  - 0.754129142388411
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7586528194298067
  - 0.7633143750636744
  - 0.740838801520707
  - 0.7778358854894809
  - 0.7692470547313839
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8055076628352491
  - 0.8176388888888888
  - 0.8074537037037037
  - 0.835032139577594
  - 0.8096503831417625
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7528327294864817
  - 0.7475612453482745
  - 0.7361074974910543
  - 0.7754829146647814
  - 0.763332975788432
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.814655172413793
  - 0.8180555555555555
  - 0.8166666666666665
  - 0.8347107438016529
  - 0.8132183908045977
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8146551724137931
  - 0.8180555555555555
  - 0.8166666666666667
  - 0.8347107438016529
  - 0.8132183908045977
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8146551724137931
  - 0.8180555555555556
  - 0.8166666666666667
  - 0.834710743801653
  - 0.8132183908045977
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8122257053291537
  - 0.8116071428571429
  - 0.8046423135464231
  - 0.8313975132156951
  - 0.8135920828823255
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6896407976900135
  - 0.6959105804269056
  - 0.6956329343008987
  - 0.7185339294199339
  - 0.6869014229085669
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6872727272727273
  - 0.6921269095182139
  - 0.6901408450704225
  - 0.7163120567375887
  - 0.6852300242130751
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7215517241379309
  - 0.7212301587301586
  - 0.7208333333333333
  - 0.7445887445887444
  - 0.7177750410509028
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6858679051207888
  - 0.6861006992920131
  - 0.6787957301255944
  - 0.7134212885045319
  - 0.6872642538718867
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.805507662835249
  - 0.8176388888888889
  - 0.8074537037037035
  - 0.835032139577594
  - 0.8096503831417623
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5428249688471395
  - 0.5548538986587822
  - 0.5535287420863947
  - 0.5890311404795058
  - 0.5452024982496882
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5614624115766567
  - 0.562586680188014
  - 0.5549453588339989
  - 0.6012029746972696
  - 0.5540412115624727
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5590235161669492
  - 0.5396796356484881
  - 0.5535245538755004
  - 0.5996911078541395
  - 0.5404198445006246
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5474067975003449
  - 0.5505845369088844
  - 0.5398096786267194
  - 0.5913864182032601
  - 0.554448463877286
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.869260522179693
  - 0.8736063907116859
  - 0.8681107823231161
  - 0.8847874104196365
  - 0.8708639461248128
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8189655172413794
  - -2.591666666666667
  - -2.658333333333333
  - -2.446280991735537
  - -2.810344827586207
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18534482758620688
  - -0.18194444444444444
  - -0.18333333333333332
  - -0.1652892561983471
  - -0.1867816091954023
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1853448275862069
  - -0.18194444444444444
  - -0.18333333333333332
  - -0.1652892561983471
  - -0.1867816091954023
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1853448275862069
  - -0.18194444444444444
  - -0.18333333333333332
  - -0.16528925619834708
  - -0.18678160919540232
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1877742946708464
  - -0.18839285714285717
  - -0.19535768645357685
  - -0.16860248678430495
  - -0.18640791711767435
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15969827586206894
  - -0.1354861111111111
  - -0.15576388888888892
  - -0.11056014692378327
  - -0.1633860153256705
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.814655172413793
  - 0.8180555555555555
  - 0.8166666666666665
  - 0.8347107438016529
  - 0.8132183908045977
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8146551724137931
  - 0.8180555555555555
  - 0.8166666666666667
  - 0.8347107438016529
  - 0.8132183908045977
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8146551724137931
  - 0.8180555555555556
  - 0.8166666666666667
  - 0.834710743801653
  - 0.8132183908045977
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8122257053291537
  - 0.8116071428571429
  - 0.8046423135464231
  - 0.8313975132156951
  - 0.8135920828823255
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.814655172413793
  - 0.8180555555555555
  - 0.8166666666666665
  - 0.8347107438016529
  - 0.8132183908045977
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8146551724137931
  - 0.8180555555555555
  - 0.8166666666666667
  - 0.8347107438016529
  - 0.8132183908045977
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8146551724137931
  - 0.8180555555555556
  - 0.8166666666666667
  - 0.834710743801653
  - 0.8132183908045977
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8122257053291537
  - 0.8116071428571429
  - 0.8046423135464231
  - 0.8313975132156951
  - 0.8135920828823255
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8584047008725174
  - 0.8589638331925356
  - 0.8502082987170344
  - 0.8811157110394356
  - 0.854663931882382
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8710752482811306
  - 0.8765751008064516
  - 0.872164347104877
  - 0.8961997711997712
  - 0.8686847618957327
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.840301724137931
  - 0.8645138888888889
  - 0.8442361111111112
  - 0.8894398530762168
  - 0.8366139846743295
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8603300622049292
  - 0.8551362007303379
  - 0.8456073701735164
  - 0.8789995731492597
  - 0.8588999989897247
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9764648399641994
  - 0.9759728252207474
  - 0.973009162947123
  - 0.9733996131571537
  - 0.975082309323588
  train_average_precision_macro_oob:
  - 0.8456757279069772
  - 0.8486249850084393
  - 0.8428860569753004
  - 0.8401309909797173
  - 0.8501359363922765
  train_average_precision_micro:
  - 0.9729150852343913
  - 0.9723707960076705
  - 0.9673059106812506
  - 0.9697961509718169
  - 0.9704199038525552
  train_average_precision_micro_oob:
  - 0.8544841045005105
  - 0.8559059564630113
  - 0.8442967849533806
  - 0.8460292812168252
  - 0.8550636022667288
  train_average_precision_samples:
  - 0.9707197763801537
  - 0.9692858820765797
  - 0.9632957481794692
  - 0.9668196798493408
  - 0.9661891451199627
  train_average_precision_samples_oob:
  - 0.8822734684369904
  - 0.879574817946911
  - 0.8753993422598073
  - 0.870915725047081
  - 0.8847309573724668
  train_average_precision_weighted:
  - 0.977406162237704
  - 0.9772425425470765
  - 0.9743104957724076
  - 0.9745403546005675
  - 0.9764599269248568
  train_average_precision_weighted_oob:
  - 0.8477571292132586
  - 0.8532678382283345
  - 0.8456968882019799
  - 0.8437678600161236
  - 0.8533310140161958
  train_f1_macro:
  - 0.9343116701607269
  - 0.9341085271317828
  - 0.9263565891472868
  - 0.9279661016949153
  - 0.9346610761705101
  train_f1_macro_oob:
  - 0.8626834381551363
  - 0.8558844256518675
  - 0.8541226215644819
  - 0.8492231638418078
  - 0.8584905660377359
  train_f1_micro:
  - 0.9343116701607268
  - 0.9341085271317829
  - 0.9263565891472868
  - 0.9279661016949152
  - 0.9346610761705101
  train_f1_micro_oob:
  - 0.8626834381551363
  - 0.8558844256518675
  - 0.854122621564482
  - 0.849223163841808
  - 0.8584905660377359
  train_f1_samples:
  - 0.9343116701607267
  - 0.934108527131783
  - 0.9263565891472867
  - 0.9279661016949152
  - 0.9346610761705102
  train_f1_samples_oob:
  - 0.8626834381551363
  - 0.8558844256518676
  - 0.854122621564482
  - 0.849223163841808
  - 0.8584905660377359
  train_f1_weighted:
  - 0.9339953160707878
  - 0.9347143964107028
  - 0.9251362078683082
  - 0.9280187091096912
  - 0.9352284167762261
  train_f1_weighted_oob:
  - 0.860929325551967
  - 0.8545865898807076
  - 0.8525459159042752
  - 0.8473643685197231
  - 0.8557154532210497
  train_jaccard_macro:
  - 0.8772632123637297
  - 0.876928062652091
  - 0.8634450101364566
  - 0.8663292511483481
  - 0.877752102426251
  train_jaccard_macro_oob:
  - 0.7603131586229371
  - 0.7499693879608395
  - 0.7469077782245668
  - 0.7404475009031413
  - 0.7543341636621269
  train_jaccard_micro:
  - 0.8767213114754099
  - 0.8763636363636363
  - 0.8628158844765343
  - 0.8656126482213439
  - 0.8773368317481142
  train_jaccard_micro_oob:
  - 0.7585253456221198
  - 0.748075146288882
  - 0.7453874538745388
  - 0.7379564283522553
  - 0.7520661157024794
  train_jaccard_samples:
  - 0.8928321852850153
  - 0.8924494110540621
  - 0.879965770663445
  - 0.8829196933010491
  - 0.893351302785265
  train_jaccard_samples_oob:
  - 0.7849156434062093
  - 0.7747105607570723
  - 0.7724957213329307
  - 0.7654560129136401
  - 0.7779974044124986
  train_jaccard_weighted:
  - 0.8766526284688999
  - 0.8779398542778805
  - 0.8612961144638913
  - 0.8663502911471352
  - 0.878726453166838
  train_jaccard_weighted_oob:
  - 0.7573521658921698
  - 0.7477329904995087
  - 0.7442962279364307
  - 0.737268674950863
  - 0.7497206194436927
  train_label_ranking_average_precision_score:
  - 0.9707197763801534
  - 0.9692858820765795
  - 0.9632957481794687
  - 0.9668196798493406
  - 0.9661891451199625
  train_label_ranking_average_precision_score_oob:
  - 0.8822734684369896
  - 0.8795748179469102
  - 0.8753993422598066
  - 0.8709157250470798
  - 0.8847309573724661
  train_matthews_corrcoef_macro:
  - 0.8417925174866974
  - 0.8401075472764578
  - 0.8252973646398276
  - 0.8263025300603237
  - 0.8411688503526328
  train_matthews_corrcoef_macro_oob:
  - 0.6627220496395632
  - 0.6435064074633848
  - 0.6449126962813746
  - 0.6289952806277993
  - 0.6533147200220727
  train_matthews_corrcoef_micro:
  - 0.8445401916460867
  - 0.8444983899879458
  - 0.8264314460466298
  - 0.8301653958239555
  - 0.8450465853628464
  train_matthews_corrcoef_micro_oob:
  - 0.6697761886597877
  - 0.653561754364907
  - 0.6520958999827031
  - 0.6387355350182915
  - 0.6600266608490051
  train_matthews_corrcoef_samples:
  - 0.8392594634694115
  - 0.8321012942640662
  - 0.8241206161649854
  - 0.8243825404150006
  - 0.8428838633150965
  train_matthews_corrcoef_samples_oob:
  - 0.6524254705717081
  - 0.6363393809586443
  - 0.640765489604945
  - 0.6212589127473565
  - 0.6527764290797642
  train_matthews_corrcoef_weighted:
  - 0.84370233614379
  - 0.8442911521579521
  - 0.8259575245745298
  - 0.8292634402683814
  - 0.8452843461001984
  train_matthews_corrcoef_weighted_oob:
  - 0.6652185036015851
  - 0.6480424702215064
  - 0.6493513959284865
  - 0.632319550230949
  - 0.6543070160636846
  train_ndgc:
  - 0.9805109644613692
  - 0.9797013642122038
  - 0.9758408513188945
  - 0.9779171869417849
  - 0.9775150916126065
  train_ndgc_oob:
  - 0.9200323660358979
  - 0.9179238540984446
  - 0.9156647850863013
  - 0.9127285379050136
  - 0.923017880880039
  train_neg_coverage_error:
  - -1.9727463312368974
  - -1.9915433403805496
  - -2.025369978858351
  - -2.0063559322033897
  - -1.9916142557651992
  train_neg_coverage_error_oob:
  - -2.368972746331237
  - -2.3742071881606766
  - -2.4143763213530653
  - -2.4279661016949152
  - -2.368972746331237
  train_neg_hamming_loss_macro:
  - -0.06568832983927324
  - -0.06589147286821706
  - -0.07364341085271318
  - -0.07203389830508473
  - -0.06533892382948987
  train_neg_hamming_loss_macro_oob:
  - -0.13731656184486374
  - -0.1441155743481325
  - -0.14587737843551796
  - -0.1507768361581921
  - -0.14150943396226415
  train_neg_hamming_loss_micro:
  - -0.06568832983927324
  - -0.06589147286821706
  - -0.07364341085271318
  - -0.07203389830508475
  - -0.06533892382948987
  train_neg_hamming_loss_micro_oob:
  - -0.13731656184486374
  - -0.1441155743481325
  - -0.14587737843551796
  - -0.1507768361581921
  - -0.14150943396226415
  train_neg_hamming_loss_samples:
  - -0.06568832983927324
  - -0.06589147286821705
  - -0.07364341085271317
  - -0.07203389830508475
  - -0.06533892382948986
  train_neg_hamming_loss_samples_oob:
  - -0.13731656184486374
  - -0.14411557434813246
  - -0.14587737843551796
  - -0.1507768361581921
  - -0.14150943396226415
  train_neg_hamming_loss_weighted:
  - -0.06600468392921223
  - -0.06528560358929716
  - -0.0748637921316918
  - -0.07198129089030876
  - -0.06477158322377383
  train_neg_hamming_loss_weighted_oob:
  - -0.13907067444803292
  - -0.14541341011929249
  - -0.1474540840957248
  - -0.152635631480277
  - -0.1442845467789504
  train_neg_label_ranking_loss:
  - -0.01807593757279292
  - -0.01985553206483439
  - -0.02366102889358703
  - -0.02143361581920904
  - -0.0221232238527836
  train_neg_label_ranking_loss_oob:
  - -0.0858956440717447
  - -0.08768498942917546
  - -0.09146112285647168
  - -0.09515065913370999
  - -0.08461448870253903
  train_precision_macro:
  - 0.9343116701607269
  - 0.9341085271317828
  - 0.9263565891472868
  - 0.9279661016949153
  - 0.9346610761705101
  train_precision_macro_oob:
  - 0.8626834381551363
  - 0.8558844256518675
  - 0.8541226215644819
  - 0.8492231638418078
  - 0.8584905660377359
  train_precision_micro:
  - 0.9343116701607268
  - 0.9341085271317829
  - 0.9263565891472868
  - 0.9279661016949152
  - 0.9346610761705101
  train_precision_micro_oob:
  - 0.8626834381551363
  - 0.8558844256518675
  - 0.854122621564482
  - 0.849223163841808
  - 0.8584905660377359
  train_precision_samples:
  - 0.9343116701607267
  - 0.934108527131783
  - 0.9263565891472867
  - 0.9279661016949152
  - 0.9346610761705102
  train_precision_samples_oob:
  - 0.8626834381551363
  - 0.8558844256518676
  - 0.854122621564482
  - 0.849223163841808
  - 0.8584905660377359
  train_precision_weighted:
  - 0.9339953160707878
  - 0.9347143964107028
  - 0.9251362078683082
  - 0.9280187091096912
  - 0.9352284167762261
  train_precision_weighted_oob:
  - 0.860929325551967
  - 0.8545865898807076
  - 0.8525459159042752
  - 0.8473643685197231
  - 0.8557154532210497
  train_recall_macro:
  - 0.9343116701607269
  - 0.9341085271317828
  - 0.9263565891472868
  - 0.9279661016949153
  - 0.9346610761705101
  train_recall_macro_oob:
  - 0.8626834381551363
  - 0.8558844256518675
  - 0.8541226215644819
  - 0.8492231638418078
  - 0.8584905660377359
  train_recall_micro:
  - 0.9343116701607268
  - 0.9341085271317829
  - 0.9263565891472868
  - 0.9279661016949152
  - 0.9346610761705101
  train_recall_micro_oob:
  - 0.8626834381551363
  - 0.8558844256518675
  - 0.854122621564482
  - 0.849223163841808
  - 0.8584905660377359
  train_recall_samples:
  - 0.9343116701607267
  - 0.934108527131783
  - 0.9263565891472867
  - 0.9279661016949152
  - 0.9346610761705102
  train_recall_samples_oob:
  - 0.8626834381551363
  - 0.8558844256518676
  - 0.854122621564482
  - 0.849223163841808
  - 0.8584905660377359
  train_recall_weighted:
  - 0.9339953160707878
  - 0.9347143964107028
  - 0.9251362078683082
  - 0.9280187091096912
  - 0.9352284167762261
  train_recall_weighted_oob:
  - 0.860929325551967
  - 0.8545865898807076
  - 0.8525459159042752
  - 0.8473643685197231
  - 0.8557154532210497
  train_roc_auc_macro:
  - 0.9888553343945462
  - 0.9881619173460306
  - 0.9867249831924408
  - 0.9873329801618066
  - 0.9882457899438664
  train_roc_auc_macro_oob:
  - 0.9251559007001298
  - 0.9255658206197159
  - 0.9179650460959442
  - 0.9231370333842773
  - 0.9248550966838279
  train_roc_auc_micro:
  - 0.9866285358306635
  - 0.9858064672999347
  - 0.9832535042919534
  - 0.9847623996900511
  - 0.9849500898753747
  train_roc_auc_micro_oob:
  - 0.9293803682101553
  - 0.9273262411019049
  - 0.9221082485263995
  - 0.9247214289194249
  - 0.9277059060552284
  train_roc_auc_samples:
  - 0.981924062427207
  - 0.9801444679351656
  - 0.976338971106413
  - 0.9785663841807909
  - 0.9778767761472164
  train_roc_auc_samples_oob:
  - 0.9141043559282553
  - 0.9123150105708244
  - 0.9085388771435282
  - 0.9048493408662901
  - 0.915385511297461
  train_roc_auc_weighted:
  - 0.9888124272025719
  - 0.9883108331016941
  - 0.9868668071721203
  - 0.9873068237272729
  - 0.9885403192590131
  train_roc_auc_weighted_oob:
  - 0.9248477183210533
  - 0.926064899405777
  - 0.9177140460345884
  - 0.9225843743395059
  - 0.924964463712387
start: 2023-12-22 01:50:50.071487
wrapper: null
