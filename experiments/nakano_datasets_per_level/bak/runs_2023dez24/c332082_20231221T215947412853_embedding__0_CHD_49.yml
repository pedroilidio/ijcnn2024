active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAAAIwAAAAAAAAPA/AAAAAAAA8D8AAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 21:59:55.658288
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__0
  params: {}
hash: c332082972b6895229dc561d414471b35afa1e4e568520fc4a813db7d334c2cb
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c332082_20231221T215947412853_embedding__0_CHD_49.yml
results:
  fit_time:
  - 1.3660192489624023
  - 1.3550231456756592
  - 1.2788317203521729
  - 1.3061027526855469
  - 1.333669900894165
  score_time:
  - 1.0116093158721924
  - 1.0608034133911133
  - 1.0673179626464844
  - 1.0749881267547607
  - 1.0770275592803955
  test_average_precision_macro:
  - 0.5084470411572843
  - 0.5911606279670915
  - 0.5434465469826836
  - 0.5673178339294186
  - 0.5391090225353742
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6866366065768622
  - 0.688189001410344
  - 0.7184460904015569
  - 0.7258332413200196
  - 0.719925369901363
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7805681818181819
  - 0.7891569200779727
  - 0.8101262626262625
  - 0.8075631313131313
  - 0.7805930930930929
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6349999639157086
  - 0.6785665211201488
  - 0.6737673254293883
  - 0.6967795095046907
  - 0.6620705688213049
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6909090909090909
  - 0.7309941520467836
  - 0.712121212121212
  - 0.7212121212121212
  - 0.7177177177177176
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6909090909090909
  - 0.7309941520467836
  - 0.7121212121212122
  - 0.7212121212121212
  - 0.7177177177177178
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6909090909090909
  - 0.7309941520467838
  - 0.712121212121212
  - 0.7212121212121213
  - 0.7177177177177178
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6477668672790625
  - 0.6895779658937553
  - 0.6703030303030304
  - 0.6843205574912892
  - 0.6812003641271933
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5486010284094747
  - 0.591663217184503
  - 0.5719272556653688
  - 0.5810057739998743
  - 0.5770465560487817
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5277777777777778
  - 0.576036866359447
  - 0.5529411764705883
  - 0.5639810426540285
  - 0.5597189695550351
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5594372294372295
  - 0.608813700918964
  - 0.5897874852420307
  - 0.6031719795356159
  - 0.5961389961389961
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4857754137628084
  - 0.5295337328684766
  - 0.5102240360991784
  - 0.5248626031688534
  - 0.5224878974363037
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7805681818181817
  - 0.7891569200779726
  - 0.8101262626262625
  - 0.8166540404040405
  - 0.798611111111111
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03244999046854737
  - 0.169777852913094
  - 0.11786316919309221
  - 0.12436358409903796
  - 0.12400081554984498
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.36604227922525345
  - 0.44946203233496734
  - 0.4084906493531998
  - 0.4303438639443483
  - 0.4222080228386354
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3765719665607056
  - 0.4637640805669045
  - 0.42959014958350067
  - 0.44587513882987206
  - 0.4254279704507398
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.030662014490304444
  - 0.18512040879047997
  - 0.11714019656019545
  - 0.13396520882824037
  - 0.13042255818203166
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8620036122312945
  - 0.8598526533022682
  - 0.8807676187937807
  - 0.8753093118557872
  - 0.8483502456455514
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8454545454545452
  - -3.56140350877193
  - -3.672727272727273
  - -3.6545454545454548
  - -3.7027027027027026
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3090909090909091
  - -0.26900584795321636
  - -0.2878787878787879
  - -0.27878787878787875
  - -0.2822822822822823
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3090909090909091
  - -0.26900584795321636
  - -0.2878787878787879
  - -0.2787878787878788
  - -0.2822822822822823
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3090909090909091
  - -0.26900584795321636
  - -0.2878787878787879
  - -0.27878787878787875
  - -0.28228228228228225
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3522331327209376
  - -0.31042203410624464
  - -0.32969696969696966
  - -0.3156794425087108
  - -0.3187996358728066
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22719696969696968
  - -0.18781676413255363
  - -0.19118686868686868
  - -0.18396464646464647
  - -0.19984984984984983
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6909090909090909
  - 0.7309941520467836
  - 0.712121212121212
  - 0.7212121212121212
  - 0.7177177177177176
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6909090909090909
  - 0.7309941520467836
  - 0.7121212121212122
  - 0.7212121212121212
  - 0.7177177177177178
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6909090909090909
  - 0.7309941520467838
  - 0.712121212121212
  - 0.7212121212121213
  - 0.7177177177177178
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6477668672790625
  - 0.6895779658937553
  - 0.6703030303030304
  - 0.6843205574912892
  - 0.6812003641271933
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6909090909090909
  - 0.7309941520467836
  - 0.712121212121212
  - 0.7212121212121212
  - 0.7177177177177176
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6909090909090909
  - 0.7309941520467836
  - 0.7121212121212122
  - 0.7212121212121212
  - 0.7177177177177178
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6909090909090909
  - 0.7309941520467838
  - 0.712121212121212
  - 0.7212121212121213
  - 0.7177177177177178
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6477668672790625
  - 0.6895779658937553
  - 0.6703030303030304
  - 0.6843205574912892
  - 0.6812003641271933
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5856471255169353
  - 0.6251382263087257
  - 0.5961949892486608
  - 0.6118656038683593
  - 0.6159071385604734
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7702496940710502
  - 0.8072442632744141
  - 0.7926923976608187
  - 0.8058869137140243
  - 0.7972750590679671
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7728030303030303
  - 0.8121832358674462
  - 0.8088131313131313
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5696550467778771
  - 0.6337229533569655
  - 0.6236969693195025
  - 0.6424429025334356
  - 0.6198343591365139
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9474473282355733
  - 0.946656707043382
  - 0.9397008784275195
  - 0.9471671016758992
  - 0.9445233658314351
  train_average_precision_macro_oob:
  - 0.5432146169634305
  - 0.5126960446622705
  - 0.5117990285265654
  - 0.5131865408268235
  - 0.5183634667979448
  train_average_precision_micro:
  - 0.8864103887849555
  - 0.8783756668055833
  - 0.8783262922986459
  - 0.880423284535019
  - 0.8805824051432625
  train_average_precision_micro_oob:
  - 0.7077282765408697
  - 0.70629304728196
  - 0.6905828118504131
  - 0.6943202160203109
  - 0.688679679924459
  train_average_precision_samples:
  - 0.8639263420724095
  - 0.8567271352985638
  - 0.8606429463171036
  - 0.8654026217228463
  - 0.8718249499499499
  train_average_precision_samples_oob:
  - 0.8016104868913857
  - 0.7881991685563113
  - 0.7877902621722846
  - 0.793205368289638
  - 0.7924643393393392
  train_average_precision_weighted:
  - 0.94954118386115
  - 0.9481814905264306
  - 0.9418824694785157
  - 0.9491403160947136
  - 0.9459485063550205
  train_average_precision_weighted_oob:
  - 0.6656107388111203
  - 0.6439208685196848
  - 0.6323681119825012
  - 0.6357794589686091
  - 0.6361617709634751
  train_f1_macro:
  - 0.8329588014981274
  - 0.81859410430839
  - 0.8250936329588016
  - 0.8299625468164793
  - 0.8273273273273273
  train_f1_macro_oob:
  - 0.7217228464419475
  - 0.7078609221466364
  - 0.7142322097378276
  - 0.7134831460674157
  - 0.7105855855855857
  train_f1_micro:
  - 0.8329588014981273
  - 0.81859410430839
  - 0.8250936329588014
  - 0.8299625468164794
  - 0.8273273273273273
  train_f1_micro_oob:
  - 0.7217228464419476
  - 0.7078609221466364
  - 0.7142322097378278
  - 0.7134831460674157
  - 0.7105855855855856
  train_f1_samples:
  - 0.8329588014981274
  - 0.81859410430839
  - 0.8250936329588016
  - 0.8299625468164795
  - 0.8273273273273274
  train_f1_samples_oob:
  - 0.7217228464419476
  - 0.7078609221466363
  - 0.7142322097378276
  - 0.7134831460674157
  - 0.7105855855855856
  train_f1_weighted:
  - 0.8012815857906874
  - 0.7879561364976474
  - 0.7954213728044826
  - 0.7983141160885139
  - 0.7975707148196232
  train_f1_weighted_oob:
  - 0.6813365389333204
  - 0.6683406346831927
  - 0.6734657092757853
  - 0.6731426328443159
  - 0.6696604901845077
  train_jaccard_macro:
  - 0.7202187383561838
  - 0.6999017205103386
  - 0.7091628823819117
  - 0.7161888229892622
  - 0.7120897500062598
  train_jaccard_macro_oob:
  - 0.5832277353351425
  - 0.5664464587786174
  - 0.5731498472362211
  - 0.5728563417802356
  - 0.5692847247395713
  train_jaccard_micro:
  - 0.7137355584082157
  - 0.6928982725527831
  - 0.7022633088938476
  - 0.7093469910371318
  - 0.70550576184379
  train_jaccard_micro_oob:
  - 0.564605918546733
  - 0.5478210002924832
  - 0.5554908243518788
  - 0.5545851528384279
  - 0.5510917030567686
  train_jaccard_samples:
  - 0.7430925628678436
  - 0.7235935644098909
  - 0.7337827715355805
  - 0.7406634563937934
  - 0.7383643383643382
  train_jaccard_samples_oob:
  - 0.6004844593608638
  - 0.5841083330879249
  - 0.5909431392577461
  - 0.5888622987499392
  - 0.5885281385281387
  train_jaccard_weighted:
  - 0.6704228022312174
  - 0.6514818566276958
  - 0.6621247981548892
  - 0.6664699098758451
  - 0.6646781414805946
  train_jaccard_weighted_oob:
  - 0.523189107287938
  - 0.5076808505902428
  - 0.512683463329066
  - 0.5127805935229002
  - 0.5083686150991265
  train_label_ranking_average_precision_score:
  - 0.8706679151061166
  - 0.8635298563869988
  - 0.867384519350811
  - 0.8698970037453175
  - 0.874077202202202
  train_label_ranking_average_precision_score_oob:
  - 0.8083520599250924
  - 0.7950018896447459
  - 0.7945318352059915
  - 0.7976997503121086
  - 0.7947165915915901
  train_matthews_corrcoef_macro:
  - 0.4069851003481051
  - 0.3772246991851474
  - 0.3884653209709968
  - 0.40092907685135337
  - 0.4120295812012979
  train_matthews_corrcoef_macro_oob:
  - 0.14650608395791243
  - 0.08474859822391988
  - 0.11240710121461302
  - 0.11191541070770387
  - 0.09914020469005051
  train_matthews_corrcoef_micro:
  - 0.6582859966891329
  - 0.6297687084337927
  - 0.6422646899605654
  - 0.6519838172194807
  - 0.6469096793738162
  train_matthews_corrcoef_micro_oob:
  - 0.4311559565962542
  - 0.40176158151445057
  - 0.4151778190489744
  - 0.41090209032742236
  - 0.40733992942167957
  train_matthews_corrcoef_samples:
  - 0.6528325189141361
  - 0.6235592315942425
  - 0.6353853839422663
  - 0.6485609690216251
  - 0.6456174348361216
  train_matthews_corrcoef_samples_oob:
  - 0.45121395077182525
  - 0.4102654770615625
  - 0.4289913872865321
  - 0.4267189820794259
  - 0.41974605871706167
  train_matthews_corrcoef_weighted:
  - 0.4251847569867989
  - 0.3967143666662093
  - 0.41222574162361586
  - 0.4203759575587937
  - 0.4512488575786966
  train_matthews_corrcoef_weighted_oob:
  - 0.14944792983185684
  - 0.08864256328744043
  - 0.11521765634718181
  - 0.11712638222114242
  - 0.10475490925382884
  train_ndgc:
  - 0.9087573796319227
  - 0.9052183517935963
  - 0.9073166921681438
  - 0.9109093679488252
  - 0.9158322723814757
  train_ndgc_oob:
  - 0.8685438323994927
  - 0.8615569240901515
  - 0.8599944184225674
  - 0.8640871591194411
  - 0.8647749948675619
  train_neg_coverage_error:
  - -3.2112359550561798
  - -3.2947845804988662
  - -3.262921348314607
  - -3.2202247191011235
  - -3.2094594594594597
  train_neg_coverage_error_oob:
  - -3.5977528089887643
  - -3.743764172335601
  - -3.7168539325842698
  - -3.6674157303370785
  - -3.6981981981981984
  train_neg_hamming_loss_macro:
  - -0.16704119850187263
  - -0.18140589569161
  - -0.17490636704119847
  - -0.1700374531835206
  - -0.17267267267267264
  train_neg_hamming_loss_macro_oob:
  - -0.27827715355805244
  - -0.2921390778533635
  - -0.28576779026217225
  - -0.28651685393258425
  - -0.2894144144144144
  train_neg_hamming_loss_micro:
  - -0.16704119850187266
  - -0.18140589569160998
  - -0.1749063670411985
  - -0.1700374531835206
  - -0.17267267267267267
  train_neg_hamming_loss_micro_oob:
  - -0.27827715355805244
  - -0.29213907785336357
  - -0.2857677902621723
  - -0.28651685393258425
  - -0.2894144144144144
  train_neg_hamming_loss_samples:
  - -0.16704119850187263
  - -0.18140589569160998
  - -0.1749063670411985
  - -0.17003745318352056
  - -0.17267267267267264
  train_neg_hamming_loss_samples_oob:
  - -0.2782771535580524
  - -0.2921390778533635
  - -0.28576779026217225
  - -0.28651685393258425
  - -0.2894144144144144
  train_neg_hamming_loss_weighted:
  - -0.1987184142093126
  - -0.21204386350235266
  - -0.2045786271955174
  - -0.2016858839114862
  - -0.20242928518037687
  train_neg_hamming_loss_weighted_oob:
  - -0.3186634610666797
  - -0.3316593653168074
  - -0.32653429072421464
  - -0.32685736715568425
  - -0.3303395098154923
  train_neg_label_ranking_loss:
  - -0.11060549313358303
  - -0.1176177878558831
  - -0.11417602996254682
  - -0.11256554307116105
  - -0.10832707707707707
  train_neg_label_ranking_loss_oob:
  - -0.18677902621722844
  - -0.20488158226253464
  - -0.20272159800249687
  - -0.19847066167290886
  - -0.20106356356356353
  train_precision_macro:
  - 0.8329588014981274
  - 0.81859410430839
  - 0.8250936329588016
  - 0.8299625468164793
  - 0.8273273273273273
  train_precision_macro_oob:
  - 0.7217228464419475
  - 0.7078609221466364
  - 0.7142322097378276
  - 0.7134831460674157
  - 0.7105855855855857
  train_precision_micro:
  - 0.8329588014981273
  - 0.81859410430839
  - 0.8250936329588014
  - 0.8299625468164794
  - 0.8273273273273273
  train_precision_micro_oob:
  - 0.7217228464419476
  - 0.7078609221466364
  - 0.7142322097378278
  - 0.7134831460674157
  - 0.7105855855855856
  train_precision_samples:
  - 0.8329588014981274
  - 0.81859410430839
  - 0.8250936329588016
  - 0.8299625468164795
  - 0.8273273273273274
  train_precision_samples_oob:
  - 0.7217228464419476
  - 0.7078609221466363
  - 0.7142322097378276
  - 0.7134831460674157
  - 0.7105855855855856
  train_precision_weighted:
  - 0.8012815857906874
  - 0.7879561364976474
  - 0.7954213728044826
  - 0.7983141160885139
  - 0.7975707148196232
  train_precision_weighted_oob:
  - 0.6813365389333204
  - 0.6683406346831927
  - 0.6734657092757853
  - 0.6731426328443159
  - 0.6696604901845077
  train_recall_macro:
  - 0.8329588014981274
  - 0.81859410430839
  - 0.8250936329588016
  - 0.8299625468164793
  - 0.8273273273273273
  train_recall_macro_oob:
  - 0.7217228464419475
  - 0.7078609221466364
  - 0.7142322097378276
  - 0.7134831460674157
  - 0.7105855855855857
  train_recall_micro:
  - 0.8329588014981273
  - 0.81859410430839
  - 0.8250936329588014
  - 0.8299625468164794
  - 0.8273273273273273
  train_recall_micro_oob:
  - 0.7217228464419476
  - 0.7078609221466364
  - 0.7142322097378278
  - 0.7134831460674157
  - 0.7105855855855856
  train_recall_samples:
  - 0.8329588014981274
  - 0.81859410430839
  - 0.8250936329588016
  - 0.8299625468164795
  - 0.8273273273273274
  train_recall_samples_oob:
  - 0.7217228464419476
  - 0.7078609221466363
  - 0.7142322097378276
  - 0.7134831460674157
  - 0.7105855855855856
  train_recall_weighted:
  - 0.8012815857906874
  - 0.7879561364976474
  - 0.7954213728044826
  - 0.7983141160885139
  - 0.7975707148196232
  train_recall_weighted_oob:
  - 0.6813365389333204
  - 0.6683406346831927
  - 0.6734657092757853
  - 0.6731426328443159
  - 0.6696604901845077
  train_roc_auc_macro:
  - 0.9533831681722059
  - 0.9524092374132671
  - 0.9466140193566308
  - 0.953872486735592
  - 0.9508190081741964
  train_roc_auc_macro_oob:
  - 0.5847647234707296
  - 0.5670915609861656
  - 0.5856443115929252
  - 0.5925364065915933
  - 0.5913303599170828
  train_roc_auc_micro:
  - 0.9123267234590879
  - 0.9053728912158232
  - 0.905121757005772
  - 0.908193571479705
  - 0.9082276606938029
  train_roc_auc_micro_oob:
  - 0.8034132722456868
  - 0.7869319371727748
  - 0.7910561738321041
  - 0.7900070155343976
  - 0.7921477874147265
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9483676856428275
  - 0.9469271025992233
  - 0.9416012012548596
  - 0.9488435155227765
  - 0.9458919643502783
  train_roc_auc_weighted_oob:
  - 0.6162145961976657
  - 0.600177568085657
  - 0.5907636918616798
  - 0.5917907632941544
  - 0.5956954609076431
start: 2023-12-21 21:59:47.412853
wrapper: null
