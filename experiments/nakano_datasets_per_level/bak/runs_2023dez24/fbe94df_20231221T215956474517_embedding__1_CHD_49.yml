active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAIQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:00:07.872437
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__1
  params: {}
hash: fbe94dff88e3681dfc3a1d48bf9bb13cf1809ac92e875ec4d2e823ea2dad06bf
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fbe94df_20231221T215956474517_embedding__1_CHD_49.yml
results:
  fit_time:
  - 3.0445234775543213
  - 3.157632350921631
  - 3.061201572418213
  - 3.3566067218780518
  - 3.421380043029785
  score_time:
  - 1.4387750625610352
  - 1.4421544075012207
  - 1.545027494430542
  - 1.5441722869873047
  - 1.4823906421661377
  test_average_precision_macro:
  - 0.5361255469675532
  - 0.5664374227032025
  - 0.5305317343744806
  - 0.5390040845932796
  - 0.5810279273605746
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7028124273169403
  - 0.6904081898501285
  - 0.6808947067762223
  - 0.7043029765666897
  - 0.7406243327419115
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7968501984126982
  - 0.7831331331331332
  - 0.782669616519174
  - 0.7801426426426427
  - 0.8001671810699589
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6617752198587399
  - 0.6412956641980846
  - 0.6461501954749314
  - 0.6497490263302906
  - 0.7195953261360878
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925926
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925926
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925927
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6582651289682541
  - 0.6468405024743054
  - 0.6729351032448379
  - 0.666289983363154
  - 0.6817738791423001
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.56067992865449
  - 0.5507904512029136
  - 0.5693734254605588
  - 0.5658061682863644
  - 0.5768035377335473
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5395189003436426
  - 0.5257731958762887
  - 0.5532646048109966
  - 0.5470383275261324
  - 0.5595667870036101
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5670106679035251
  - 0.5616473616473617
  - 0.5860092709650231
  - 0.5772629772629773
  - 0.5945767195767195
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.49799655857589925
  - 0.48913350172740705
  - 0.510991805718697
  - 0.5048531694797233
  - 0.5220676791802593
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7968501984126986
  - 0.8011511511511514
  - 0.7826696165191744
  - 0.7801426426426428
  - 0.809426440329218
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07698444081160356
  - 0.04552577324237026
  - 0.10277493144431789
  - 0.08019159580306108
  - 0.08382599402010293
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.384123318695726
  - 0.3621669872480749
  - 0.40828181094147464
  - 0.39693216081159555
  - 0.42148400320170276
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.41174297570593116
  - 0.3863371016044442
  - 0.4180789763138376
  - 0.4028539904705773
  - 0.41962807294841015
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.07843598141666376
  - 0.04770018822597697
  - 0.11543964705735393
  - 0.09020530323987748
  - 0.0972034213969074
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8685629294960991
  - 0.8534800582463654
  - 0.8556527001569616
  - 0.8568198754175163
  - 0.8718325518265784
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.7589285714285716
  - -3.6486486486486487
  - -3.7610619469026547
  - -3.8378378378378377
  - -3.7222222222222223
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29910714285714285
  - -0.3108108108108108
  - -0.2876106194690265
  - -0.29279279279279274
  - -0.28240740740740744
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.29910714285714285
  - -0.3108108108108108
  - -0.28761061946902655
  - -0.2927927927927928
  - -0.2824074074074074
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29910714285714285
  - -0.31081081081081086
  - -0.28761061946902655
  - -0.2927927927927928
  - -0.2824074074074074
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34173487103174605
  - -0.35315949752569475
  - -0.3270648967551622
  - -0.3337100166368459
  - -0.31822612085769986
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20029761904761906
  - -0.20585585585585583
  - -0.21172566371681417
  - -0.21784284284284283
  - -0.1958590534979424
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925926
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925926
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925927
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6582651289682541
  - 0.6468405024743054
  - 0.6729351032448379
  - 0.666289983363154
  - 0.6817738791423001
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925926
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925926
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7008928571428571
  - 0.6891891891891891
  - 0.7123893805309734
  - 0.7072072072072072
  - 0.7175925925925927
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6582651289682541
  - 0.6468405024743054
  - 0.6729351032448379
  - 0.666289983363154
  - 0.6817738791423001
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5913425362976152
  - 0.5933227637853248
  - 0.5901062926127448
  - 0.6704913969153855
  - 0.6165369656219394
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.791259765625
  - 0.7900136420617948
  - 0.7884081196581197
  - 0.7884585329079827
  - 0.7994393697742979
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7997023809523809
  - .nan
  - 0.788274336283186
  - 0.7821571571571573
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.615152972235039
  - 0.5882469835330553
  - 0.5920460856034404
  - 0.620314445149944
  - 0.6589398490697136
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9987969185856252
  - 0.9982563157472707
  - 0.9991319797073616
  - 0.9983232090104304
  - 0.9996518552783131
  train_average_precision_macro_oob:
  - 0.550137900425106
  - 0.5358673735769311
  - 0.5285659605666525
  - 0.5263478251634737
  - 0.5043086224489929
  train_average_precision_micro:
  - 0.947571638241072
  - 0.9455063531322603
  - 0.9469970044581676
  - 0.9428125181355096
  - 0.9410735624740549
  train_average_precision_micro_oob:
  - 0.7110293351133024
  - 0.706331034960181
  - 0.7095501090674935
  - 0.6936415897365343
  - 0.6841850527109795
  train_average_precision_samples:
  - 0.9193566591422121
  - 0.9169137887887888
  - 0.9092917295123177
  - 0.9066910660660661
  - 0.9069910514541386
  train_average_precision_samples_oob:
  - 0.788196012039127
  - 0.7946102352352351
  - 0.787889643036702
  - 0.7885541791791791
  - 0.7790983097191151
  train_average_precision_weighted:
  - 0.9989964449877909
  - 0.9983413886909959
  - 0.9992213448502761
  - 0.9984246876694993
  - 0.9996273730133437
  train_average_precision_weighted_oob:
  - 0.6769533784042414
  - 0.6597766238832262
  - 0.6575184111374559
  - 0.6499585453649297
  - 0.6265423749369827
  train_f1_macro:
  - 0.9048156508653123
  - 0.9016516516516516
  - 0.9049773755656109
  - 0.9084084084084084
  - 0.9052945563012678
  train_f1_macro_oob:
  - 0.7103085026335592
  - 0.7184684684684685
  - 0.7107843137254903
  - 0.7072072072072073
  - 0.7039522744220731
  train_f1_micro:
  - 0.9048156508653122
  - 0.9016516516516516
  - 0.9049773755656109
  - 0.9084084084084084
  - 0.9052945563012678
  train_f1_micro_oob:
  - 0.710308502633559
  - 0.7184684684684685
  - 0.7107843137254902
  - 0.7072072072072072
  - 0.7039522744220731
  train_f1_samples:
  - 0.9048156508653123
  - 0.9016516516516517
  - 0.9049773755656109
  - 0.9084084084084085
  - 0.9052945563012679
  train_f1_samples_oob:
  - 0.7103085026335589
  - 0.7184684684684685
  - 0.7107843137254901
  - 0.7072072072072072
  - 0.7039522744220731
  train_f1_weighted:
  - 0.8798145984940567
  - 0.8753943403333647
  - 0.8791748409961079
  - 0.8822062236909398
  - 0.8793331109849837
  train_f1_weighted_oob:
  - 0.6707781496156214
  - 0.6803135888501743
  - 0.6728811347024016
  - 0.6678763916755183
  - 0.6632495236089087
  train_jaccard_macro:
  - 0.8341971830435634
  - 0.8289559806478687
  - 0.833724376992496
  - 0.8401742278268284
  - 0.8351250191877685
  train_jaccard_macro_oob:
  - 0.5689298319331174
  - 0.5774202656610475
  - 0.5695684061304177
  - 0.5654201385637716
  - 0.5627589900823136
  train_jaccard_micro:
  - 0.8261765716248711
  - 0.820915926179084
  - 0.8264462809917356
  - 0.8321870701513068
  - 0.8269754768392371
  train_jaccard_micro_oob:
  - 0.5507584597432905
  - 0.5606326889279437
  - 0.5513307984790875
  - 0.5470383275261324
  - 0.5431530494821634
  train_jaccard_samples:
  - 0.8474363108674621
  - 0.8433290433290433
  - 0.8489980607627666
  - 0.8524453024453024
  - 0.8488015340364332
  train_jaccard_samples_oob:
  - 0.5866924647963023
  - 0.5901446901446901
  - 0.5842833636951285
  - 0.5806101556101558
  - 0.5739436551517088
  train_jaccard_weighted:
  - 0.7952358291146606
  - 0.7879404971582746
  - 0.7931410559947625
  - 0.7992298807859424
  - 0.7947829679019724
  train_jaccard_weighted_oob:
  - 0.5099884575103488
  - 0.5197759584541485
  - 0.5120831338911128
  - 0.5067234955609611
  - 0.5024130919554719
  train_label_ranking_average_precision_score:
  - 0.9261286681715573
  - 0.9191660410410405
  - 0.916079059829059
  - 0.9134478228228223
  - 0.911465324384787
  train_label_ranking_average_precision_score_oob:
  - 0.7949680210684714
  - 0.7968624874874862
  - 0.794676973353443
  - 0.7953109359359344
  - 0.7835725826497626
  train_matthews_corrcoef_macro:
  - 0.5597073517660115
  - 0.5545314089164491
  - 0.5589807899284841
  - 0.5679245104081369
  - 0.5621902091365513
  train_matthews_corrcoef_macro_oob:
  - 0.0907269121226862
  - 0.11554465463654041
  - 0.07137583931805865
  - 0.07940914070678784
  - 0.07313567154723706
  train_matthews_corrcoef_micro:
  - 0.8067370110727146
  - 0.8006152448617724
  - 0.8070620686431622
  - 0.8143914479240358
  - 0.8076058396911677
  train_matthews_corrcoef_micro_oob:
  - 0.4050334550891205
  - 0.4211852181056993
  - 0.40559884920238864
  - 0.39725807663191953
  - 0.38889683248432183
  train_matthews_corrcoef_samples:
  - 0.7984330563542466
  - 0.7959412396055848
  - 0.8003071937917695
  - 0.8115896799094524
  - 0.7975271023282856
  train_matthews_corrcoef_samples_oob:
  - 0.41841242253019245
  - 0.4309420924791345
  - 0.41461778400043736
  - 0.4094561494061504
  - 0.40182779988111844
  train_matthews_corrcoef_weighted:
  - 0.590631069885658
  - 0.5838782365782994
  - 0.5880808241011213
  - 0.5957225614236406
  - 0.59245350318716
  train_matthews_corrcoef_weighted_oob:
  - 0.09984447037904672
  - 0.12692057536813872
  - 0.08658563184931792
  - 0.08868829531423054
  - 0.08170394773670218
  train_ndgc:
  - 0.945521777708216
  - 0.9459293352728877
  - 0.937593095800885
  - 0.935880458230103
  - 0.9368911223123608
  train_ndgc_oob:
  - 0.8599069327101881
  - 0.8662716145758895
  - 0.8608310017377799
  - 0.86115449191322
  - 0.8547300950709262
  train_neg_coverage_error:
  - -2.925507900677201
  - -2.970720720720721
  - -2.9524886877828056
  - -2.9594594594594597
  - -2.9395973154362416
  train_neg_coverage_error_oob:
  - -3.704288939051919
  - -3.704954954954955
  - -3.733031674208145
  - -3.7027027027027026
  - -3.762863534675615
  train_neg_hamming_loss_macro:
  - -0.09518434913468772
  - -0.09834834834834834
  - -0.09502262443438914
  - -0.09159159159159158
  - -0.0947054436987323
  train_neg_hamming_loss_macro_oob:
  - -0.2896914973664409
  - -0.28153153153153154
  - -0.28921568627450983
  - -0.2927927927927928
  - -0.29604772557792686
  train_neg_hamming_loss_micro:
  - -0.09518434913468773
  - -0.09834834834834835
  - -0.09502262443438914
  - -0.0915915915915916
  - -0.0947054436987323
  train_neg_hamming_loss_micro_oob:
  - -0.28969149736644095
  - -0.28153153153153154
  - -0.28921568627450983
  - -0.2927927927927928
  - -0.2960477255779269
  train_neg_hamming_loss_samples:
  - -0.09518434913468773
  - -0.09834834834834834
  - -0.09502262443438914
  - -0.09159159159159158
  - -0.09470544369873228
  train_neg_hamming_loss_samples_oob:
  - -0.2896914973664409
  - -0.28153153153153154
  - -0.2892156862745098
  - -0.2927927927927928
  - -0.29604772557792697
  train_neg_hamming_loss_weighted:
  - -0.12018540150594324
  - -0.12460565966663527
  - -0.12082515900389203
  - -0.11779377630906014
  - -0.12066688901501632
  train_neg_hamming_loss_weighted_oob:
  - -0.3292218503843786
  - -0.31968641114982577
  - -0.3271188652975983
  - -0.3321236083244817
  - -0.3367504763910912
  train_neg_label_ranking_loss:
  - -0.056050915475294706
  - -0.06321321321321322
  - -0.06258798391151332
  - -0.06482107107107107
  - -0.0635098185433756
  train_neg_label_ranking_loss_oob:
  - -0.2030724855781289
  - -0.19587087087087088
  - -0.20286576168929107
  - -0.20274024024024026
  - -0.21442331593338307
  train_precision_macro:
  - 0.9048156508653123
  - 0.9016516516516516
  - 0.9049773755656109
  - 0.9084084084084084
  - 0.9052945563012678
  train_precision_macro_oob:
  - 0.7103085026335592
  - 0.7184684684684685
  - 0.7107843137254903
  - 0.7072072072072073
  - 0.7039522744220731
  train_precision_micro:
  - 0.9048156508653122
  - 0.9016516516516516
  - 0.9049773755656109
  - 0.9084084084084084
  - 0.9052945563012678
  train_precision_micro_oob:
  - 0.710308502633559
  - 0.7184684684684685
  - 0.7107843137254902
  - 0.7072072072072072
  - 0.7039522744220731
  train_precision_samples:
  - 0.9048156508653123
  - 0.9016516516516517
  - 0.9049773755656109
  - 0.9084084084084085
  - 0.9052945563012679
  train_precision_samples_oob:
  - 0.7103085026335589
  - 0.7184684684684685
  - 0.7107843137254901
  - 0.7072072072072072
  - 0.7039522744220731
  train_precision_weighted:
  - 0.8798145984940567
  - 0.8753943403333647
  - 0.8791748409961079
  - 0.8822062236909398
  - 0.8793331109849837
  train_precision_weighted_oob:
  - 0.6707781496156214
  - 0.6803135888501743
  - 0.6728811347024016
  - 0.6678763916755183
  - 0.6632495236089087
  train_recall_macro:
  - 0.9048156508653123
  - 0.9016516516516516
  - 0.9049773755656109
  - 0.9084084084084084
  - 0.9052945563012678
  train_recall_macro_oob:
  - 0.7103085026335592
  - 0.7184684684684685
  - 0.7107843137254903
  - 0.7072072072072073
  - 0.7039522744220731
  train_recall_micro:
  - 0.9048156508653122
  - 0.9016516516516516
  - 0.9049773755656109
  - 0.9084084084084084
  - 0.9052945563012678
  train_recall_micro_oob:
  - 0.710308502633559
  - 0.7184684684684685
  - 0.7107843137254902
  - 0.7072072072072072
  - 0.7039522744220731
  train_recall_samples:
  - 0.9048156508653123
  - 0.9016516516516517
  - 0.9049773755656109
  - 0.9084084084084085
  - 0.9052945563012679
  train_recall_samples_oob:
  - 0.7103085026335589
  - 0.7184684684684685
  - 0.7107843137254901
  - 0.7072072072072072
  - 0.7039522744220731
  train_recall_weighted:
  - 0.8798145984940567
  - 0.8753943403333647
  - 0.8791748409961079
  - 0.8822062236909398
  - 0.8793331109849837
  train_recall_weighted_oob:
  - 0.6707781496156214
  - 0.6803135888501743
  - 0.6728811347024016
  - 0.6678763916755183
  - 0.6632495236089087
  train_roc_auc_macro:
  - 0.9991659517397279
  - 0.9985865472397383
  - 0.9993505856395615
  - 0.9986260532551084
  - 0.9996434071072683
  train_roc_auc_macro_oob:
  - 0.6080379911265759
  - 0.5830243125092176
  - 0.606147387194643
  - 0.5798593571646419
  - 0.5614770921617896
  train_roc_auc_micro:
  - 0.9595664820648309
  - 0.9576405679718312
  - 0.9596945660440355
  - 0.9572078274893561
  - 0.9564321598050715
  train_roc_auc_micro_oob:
  - 0.7978303895576022
  - 0.7963465198164986
  - 0.7971633803861919
  - 0.7937329488775365
  - 0.7855694929983047
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9992184645853824
  - 0.9984539280010115
  - 0.9993528752037327
  - 0.9984797151669654
  - 0.9995497337994796
  train_roc_auc_weighted_oob:
  - 0.6306221618998987
  - 0.6199339479530549
  - 0.6354012282887405
  - 0.6081058895249674
  - 0.5907902851260967
start: 2023-12-21 21:59:56.474517
wrapper: null
