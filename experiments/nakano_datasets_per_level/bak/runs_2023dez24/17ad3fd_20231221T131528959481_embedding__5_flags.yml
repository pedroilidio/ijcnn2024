active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMEMCYmZmZmZkBwKCZmZmZmek/MDMzMzMz8780MzMzMzMbQA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz8z/QzMzMzMz8v9DMzMzMzPy/MDMzMzMz8z8wMzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZAUCgmZmZmZkBQDAzMzMzMxPAYGZmZmZmBsCgmZmZmZkJQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b+amZmZmZkVQJiZmZmZmfm/zMzMzMzMDMBoZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv8zMzMzMzPy/oJmZmZmZyT+amZmZmZkBQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzM/D8AmZmZmZnJv5CZmZmZmQHAyMzMzMzMEMA4MzMzMzMTQA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 13:15:48.715001
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__5
  params: {}
hash: 17ad3fd962ac9d68083ab0b672b47347db3408e613bcc3e6e2e1f44a33e13186
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/17ad3fd_20231221T131528959481_embedding__5_flags.yml
results:
  fit_time:
  - 12.320512771606445
  - 12.004242181777954
  - 12.414084196090698
  - 12.579845905303955
  - 12.617031574249268
  score_time:
  - 2.31827974319458
  - 2.390673875808716
  - 2.246434450149536
  - 2.387335777282715
  - 2.239611864089966
  test_average_precision_macro:
  - 0.8079755353820783
  - 0.7787967471172437
  - 0.7548797206241105
  - 0.6804529758985784
  - 0.7864344059406518
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8595135658686655
  - 0.8147370913076164
  - 0.7706802359656866
  - 0.7358940848665698
  - 0.8501899117190846
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8409341484341485
  - 0.8404253154253153
  - 0.8161749903213319
  - 0.8008600959763751
  - 0.8590534547152193
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8713620495936423
  - 0.8437080654796776
  - 0.7950984800367866
  - 0.7367023135103419
  - 0.8423945825919925
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7722007722007722
  - 0.7728937728937728
  - 0.7317073170731706
  - 0.7275747508305647
  - 0.7689075630252101
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7722007722007722
  - 0.7728937728937729
  - 0.7317073170731707
  - 0.7275747508305648
  - 0.7689075630252101
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7722007722007722
  - 0.7728937728937729
  - 0.7317073170731707
  - 0.7275747508305649
  - 0.7689075630252101
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7647647647647647
  - 0.7489564698867025
  - 0.7362369337979093
  - 0.7119986518368723
  - 0.7700304259634889
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6374586424402491
  - 0.6359027743063211
  - 0.5846153943427986
  - 0.5776706053651816
  - 0.6325967604163092
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6289308176100629
  - 0.6298507462686567
  - 0.5769230769230769
  - 0.5718015665796344
  - 0.6245733788395904
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6474610974610976
  - 0.6511525511525512
  - 0.6111480660261148
  - 0.6124302054534612
  - 0.6491978609625669
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6272746464826267
  - 0.6032822509581522
  - 0.5900285449140726
  - 0.5553539344601485
  - 0.63261957953428
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8409341484341483
  - 0.8404253154253153
  - 0.8161749903213317
  - 0.800860095976375
  - 0.8590534547152193
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.23097927315179284
  - 0.2627376388273173
  - 0.16567603685641846
  - 0.17679188313025876
  - 0.16917676153126537
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5471923536439666
  - 0.5441028199997026
  - 0.4630151720461437
  - 0.4544387274128862
  - 0.5379861113112693
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.509760734094022
  - 0.49058406440398256
  - 0.419257102410247
  - 0.4332221127730889
  - 0.5160328791921519
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.22808474339311072
  - 0.23754450755340717
  - 0.15470666913960762
  - 0.1521773215520986
  - 0.16858724031226363
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9106757325376282
  - 0.9117535016585291
  - 0.8853493223809323
  - 0.8741709309759347
  - 0.9191254664783494
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.891891891891892
  - -4.538461538461538
  - -4.609756097560975
  - -4.627906976744186
  - -4.470588235294118
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2277992277992278
  - -0.22710622710622713
  - -0.26829268292682923
  - -0.2724252491694352
  - -0.23109243697478993
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2277992277992278
  - -0.2271062271062271
  - -0.2682926829268293
  - -0.2724252491694352
  - -0.23109243697478993
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.22779922779922776
  - -0.22710622710622713
  - -0.26829268292682923
  - -0.2724252491694352
  - -0.2310924369747899
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.23523523523523526
  - -0.2510435301132975
  - -0.2637630662020906
  - -0.2880013481631277
  - -0.2299695740365112
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17792792792792791
  - -0.17307692307692304
  - -0.21422764227642277
  - -0.2178294573643411
  - -0.1544117647058824
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7722007722007722
  - 0.7728937728937728
  - 0.7317073170731706
  - 0.7275747508305647
  - 0.7689075630252101
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7722007722007722
  - 0.7728937728937729
  - 0.7317073170731707
  - 0.7275747508305648
  - 0.7689075630252101
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7722007722007722
  - 0.7728937728937729
  - 0.7317073170731707
  - 0.7275747508305649
  - 0.7689075630252101
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7647647647647647
  - 0.7489564698867025
  - 0.7362369337979093
  - 0.7119986518368723
  - 0.7700304259634889
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7722007722007722
  - 0.7728937728937728
  - 0.7317073170731706
  - 0.7275747508305647
  - 0.7689075630252101
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7722007722007722
  - 0.7728937728937729
  - 0.7317073170731707
  - 0.7275747508305648
  - 0.7689075630252101
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7722007722007722
  - 0.7728937728937729
  - 0.7317073170731707
  - 0.7275747508305649
  - 0.7689075630252101
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7647647647647647
  - 0.7489564698867025
  - 0.7362369337979093
  - 0.7119986518368723
  - 0.7700304259634889
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8144182701885189
  - 0.7804798091828525
  - 0.7366646095800978
  - 0.680853986009626
  - 0.8018636339613449
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8492234169653524
  - 0.8417312661498708
  - 0.8085034013605443
  - 0.7872766070952254
  - 0.8611503674392311
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.8269230769230769
  - .nan
  - 0.7821705426356589
  - 0.8455882352941176
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8051517885406775
  - 0.7653567732497101
  - 0.7036459834035834
  - 0.6490249038773461
  - 0.7550948786077278
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9586426377157585
  - 0.956764046849982
  - 0.9583154613531872
  - 0.9631520825102758
  - 0.9592628345052948
  train_average_precision_macro_oob:
  - 0.7580968397146889
  - 0.7612584511036077
  - 0.7708492579069833
  - 0.7794763618273367
  - 0.7635267905633659
  train_average_precision_micro:
  - 0.9464378331980312
  - 0.9512927532569874
  - 0.957207412839242
  - 0.9569499009302455
  - 0.952308368718385
  train_average_precision_micro_oob:
  - 0.8146541909636099
  - 0.8305003996727307
  - 0.8455544194392131
  - 0.849780917617443
  - 0.8200229984660369
  train_average_precision_samples:
  - 0.9213595693054292
  - 0.9241321044546851
  - 0.9377010063284573
  - 0.9420679596341848
  - 0.9314149305555555
  train_average_precision_samples_oob:
  - 0.8412271256698008
  - 0.8410962621607784
  - 0.855019711588339
  - 0.8615870387890254
  - 0.8421175595238095
  train_average_precision_weighted:
  - 0.9845650127229775
  - 0.9811058875518385
  - 0.9829265641555073
  - 0.9837103717803442
  - 0.9820539405392243
  train_average_precision_weighted_oob:
  - 0.8231043502139144
  - 0.8283343804675772
  - 0.8513048513737088
  - 0.8519670219278344
  - 0.8281643518553341
  train_f1_macro:
  - 0.8817106460418563
  - 0.8811059907834101
  - 0.8832866479925302
  - 0.880794701986755
  - 0.8651785714285715
  train_f1_macro_oob:
  - 0.7743403093721565
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.772942289498581
  - 0.7598214285714286
  train_f1_micro:
  - 0.8817106460418562
  - 0.8811059907834101
  - 0.8832866479925303
  - 0.8807947019867549
  - 0.8651785714285715
  train_f1_micro_oob:
  - 0.7743403093721565
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.7729422894985809
  - 0.7598214285714285
  train_f1_samples:
  - 0.8817106460418561
  - 0.88110599078341
  - 0.8832866479925303
  - 0.8807947019867549
  - 0.8651785714285716
  train_f1_samples_oob:
  - 0.7743403093721564
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.7729422894985809
  - 0.7598214285714284
  train_f1_weighted:
  - 0.8679957618345898
  - 0.8640404902737973
  - 0.8767254649607591
  - 0.8723637289862455
  - 0.8541282287822879
  train_f1_weighted_oob:
  - 0.7663772210787837
  - 0.7609000548813953
  - 0.776869306281071
  - 0.7671166581762607
  - 0.7511992619926201
  train_jaccard_macro:
  - 0.7960966569778256
  - 0.7928599974982145
  - 0.7945590640216277
  - 0.7910917821187556
  - 0.767520798799728
  train_jaccard_macro_oob:
  - 0.6337536702319977
  - 0.6285158133337514
  - 0.6496469247497155
  - 0.6335598532204304
  - 0.6147784541116118
  train_jaccard_micro:
  - 0.7884458909682669
  - 0.7874794069192751
  - 0.7909698996655519
  - 0.7869822485207101
  - 0.7623918174665618
  train_jaccard_micro_oob:
  - 0.6317743132887899
  - 0.6254681647940075
  - 0.6476923076923077
  - 0.6299151888974557
  - 0.6126709863210943
  train_jaccard_samples:
  - 0.812536189924725
  - 0.8099315738025417
  - 0.8114379084967319
  - 0.8088333667803866
  - 0.7873295454545455
  train_jaccard_samples_oob:
  - 0.6654581087702106
  - 0.6604995363059879
  - 0.6795867168416189
  - 0.6602214194929427
  - 0.6442645202020202
  train_jaccard_weighted:
  - 0.7761149131448132
  - 0.7672659780202219
  - 0.7848083145871008
  - 0.7786479339017721
  - 0.7517979839619369
  train_jaccard_weighted_oob:
  - 0.6220770912375159
  - 0.6158173706883034
  - 0.6360977059674168
  - 0.6250511358982631
  - 0.6025101655963074
  train_label_ranking_average_precision_score:
  - 0.9213595693054287
  - 0.9241321044546851
  - 0.9377010063284572
  - 0.9420679596341849
  - 0.9314149305555557
  train_label_ranking_average_precision_score_oob:
  - 0.8412271256698005
  - 0.8410962621607782
  - 0.8550197115883392
  - 0.8615870387890258
  - 0.8421175595238093
  train_matthews_corrcoef_macro:
  - 0.5298804971689759
  - 0.5290925326365585
  - 0.5752877933481828
  - 0.5943150165065039
  - 0.5336261560478367
  train_matthews_corrcoef_macro_oob:
  - 0.2488360603424283
  - 0.25184844844652493
  - 0.29349273528848746
  - 0.25931390946681854
  - 0.20219331212856453
  train_matthews_corrcoef_micro:
  - 0.7634098266741737
  - 0.763303912635487
  - 0.7664285553053239
  - 0.7624876758385698
  - 0.7305729250704888
  train_matthews_corrcoef_micro_oob:
  - 0.5471967907577865
  - 0.5388849600848622
  - 0.5718799324227364
  - 0.5458852129074963
  - 0.5199697599498103
  train_matthews_corrcoef_samples:
  - 0.7590600941182384
  - 0.7502488627132651
  - 0.7560832791552232
  - 0.7486256534884941
  - 0.714388304377988
  train_matthews_corrcoef_samples_oob:
  - 0.5221193285883008
  - 0.5010534061316603
  - 0.5496064422616487
  - 0.5167883042020777
  - 0.4965465136630994
  train_matthews_corrcoef_weighted:
  - 0.5146587609965292
  - 0.5000304662192714
  - 0.6057675308309991
  - 0.5796358085809727
  - 0.5418274794077745
  train_matthews_corrcoef_weighted_oob:
  - 0.25361004364430967
  - 0.22651088563965813
  - 0.29262261214531804
  - 0.262971226791523
  - 0.20134873022359578
  train_ndgc:
  - 0.9571710894143292
  - 0.9585762829429075
  - 0.9671973825507156
  - 0.9704892618055007
  - 0.9645218747226719
  train_ndgc_oob:
  - 0.9051863893200619
  - 0.9070237907139898
  - 0.9171511676635364
  - 0.9219244903984783
  - 0.9081980071687366
  train_neg_coverage_error:
  - -3.949044585987261
  - -4.070967741935484
  - -3.973856209150327
  - -3.986754966887417
  - -4.01875
  train_neg_coverage_error_oob:
  - -4.484076433121019
  - -4.606451612903226
  - -4.522875816993464
  - -4.509933774834437
  - -4.6
  train_neg_hamming_loss_macro:
  - -0.11828935395814376
  - -0.11889400921658987
  - -0.11671335200746967
  - -0.11920529801324505
  - -0.1348214285714286
  train_neg_hamming_loss_macro_oob:
  - -0.22565969062784347
  - -0.23041474654377878
  - -0.2138188608776844
  - -0.22705771050141912
  - -0.24017857142857144
  train_neg_hamming_loss_micro:
  - -0.11828935395814377
  - -0.11889400921658987
  - -0.11671335200746966
  - -0.11920529801324503
  - -0.13482142857142856
  train_neg_hamming_loss_micro_oob:
  - -0.2256596906278435
  - -0.2304147465437788
  - -0.2138188608776844
  - -0.22705771050141912
  - -0.24017857142857144
  train_neg_hamming_loss_samples:
  - -0.11828935395814376
  - -0.11889400921658985
  - -0.11671335200746963
  - -0.11920529801324503
  - -0.13482142857142856
  train_neg_hamming_loss_samples_oob:
  - -0.2256596906278434
  - -0.23041474654377878
  - -0.21381886087768437
  - -0.22705771050141907
  - -0.2401785714285714
  train_neg_hamming_loss_weighted:
  - -0.13200423816541024
  - -0.13595950972620283
  - -0.12327453503924093
  - -0.12763627101375447
  - -0.1458717712177122
  train_neg_hamming_loss_weighted_oob:
  - -0.2336227789212164
  - -0.23909994511860477
  - -0.223130693718929
  - -0.2328833418237392
  - -0.24880073800738006
  train_neg_label_ranking_loss:
  - -0.0816348195329087
  - -0.08064516129032258
  - -0.06633986928104574
  - -0.06688741721854304
  - -0.0753125
  train_neg_label_ranking_loss_oob:
  - -0.17292993630573247
  - -0.18225806451612903
  - -0.16176470588235295
  - -0.1565121412803532
  - -0.18041666666666667
  train_precision_macro:
  - 0.8817106460418563
  - 0.8811059907834101
  - 0.8832866479925302
  - 0.880794701986755
  - 0.8651785714285715
  train_precision_macro_oob:
  - 0.7743403093721565
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.772942289498581
  - 0.7598214285714286
  train_precision_micro:
  - 0.8817106460418562
  - 0.8811059907834101
  - 0.8832866479925303
  - 0.8807947019867549
  - 0.8651785714285715
  train_precision_micro_oob:
  - 0.7743403093721565
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.7729422894985809
  - 0.7598214285714285
  train_precision_samples:
  - 0.8817106460418561
  - 0.88110599078341
  - 0.8832866479925303
  - 0.8807947019867549
  - 0.8651785714285716
  train_precision_samples_oob:
  - 0.7743403093721564
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.7729422894985809
  - 0.7598214285714284
  train_precision_weighted:
  - 0.8679957618345898
  - 0.8640404902737973
  - 0.8767254649607591
  - 0.8723637289862455
  - 0.8541282287822879
  train_precision_weighted_oob:
  - 0.7663772210787837
  - 0.7609000548813953
  - 0.776869306281071
  - 0.7671166581762607
  - 0.7511992619926201
  train_recall_macro:
  - 0.8817106460418563
  - 0.8811059907834101
  - 0.8832866479925302
  - 0.880794701986755
  - 0.8651785714285715
  train_recall_macro_oob:
  - 0.7743403093721565
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.772942289498581
  - 0.7598214285714286
  train_recall_micro:
  - 0.8817106460418562
  - 0.8811059907834101
  - 0.8832866479925303
  - 0.8807947019867549
  - 0.8651785714285715
  train_recall_micro_oob:
  - 0.7743403093721565
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.7729422894985809
  - 0.7598214285714285
  train_recall_samples:
  - 0.8817106460418561
  - 0.88110599078341
  - 0.8832866479925303
  - 0.8807947019867549
  - 0.8651785714285716
  train_recall_samples_oob:
  - 0.7743403093721564
  - 0.7695852534562212
  - 0.7861811391223156
  - 0.7729422894985809
  - 0.7598214285714284
  train_recall_weighted:
  - 0.8679957618345898
  - 0.8640404902737973
  - 0.8767254649607591
  - 0.8723637289862455
  - 0.8541282287822879
  train_recall_weighted_oob:
  - 0.7663772210787837
  - 0.7609000548813953
  - 0.776869306281071
  - 0.7671166581762607
  - 0.7511992619926201
  train_roc_auc_macro:
  - 0.9896329173060818
  - 0.983695365079508
  - 0.9852541588403402
  - 0.9840069107177012
  - 0.98447261196355
  train_roc_auc_macro_oob:
  - 0.7911638287139289
  - 0.7950498204335446
  - 0.8120139827706984
  - 0.8286605035179208
  - 0.7985583102829509
  train_roc_auc_micro:
  - 0.9488693700871043
  - 0.9510342576600345
  - 0.9563036299021832
  - 0.956669889700616
  - 0.9514198342675468
  train_roc_auc_micro_oob:
  - 0.844613076269386
  - 0.847931484679931
  - 0.8584380040076242
  - 0.8621472568399944
  - 0.8442204318236954
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.993030583469504
  - 0.9878529942179718
  - 0.9882541871060894
  - 0.9874251333757124
  - 0.9879744494242391
  train_roc_auc_weighted_oob:
  - 0.770802088364635
  - 0.7825832171629581
  - 0.8079604725995602
  - 0.8253606042838046
  - 0.786449438299544
start: 2023-12-21 13:15:28.959481
wrapper: null
