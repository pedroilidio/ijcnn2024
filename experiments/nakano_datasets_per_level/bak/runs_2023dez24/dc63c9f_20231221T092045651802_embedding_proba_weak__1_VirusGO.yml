active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+AmZmZmZn5v6CZmZmZmRFAADMzMzMz47/AzMzMzMwMwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:20:54.339030
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__1
  params: {}
hash: dc63c9fff051b29370bf5ee43bf1c7bd43c548528818c844ed8e04fd68fdafb7
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/dc63c9f_20231221T092045651802_embedding_proba_weak__1_VirusGO.yml
results:
  fit_time:
  - 3.9990627765655518
  - 3.9671378135681152
  - 3.9349255561828613
  - 3.994471311569214
  - 3.9582417011260986
  score_time:
  - 1.1431403160095215
  - 1.079406976699829
  - 1.1012003421783447
  - 1.0686047077178955
  - 1.1216132640838623
  test_average_precision_macro:
  - 0.9414849116555356
  - 0.9594978005599607
  - 0.95174159905318
  - 0.8574557825468406
  - 0.9865965852305241
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8765412055406324
  - 0.9115788839233683
  - 0.9321536896485698
  - 0.7994592153458067
  - 0.9373131082038202
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.93
  - 0.9213178294573644
  - 0.9707207207207207
  - 0.8817460317460317
  - 0.9666666666666667
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9316781955488554
  - 0.958361347418441
  - 0.9670175546075905
  - 0.8376690599474449
  - 0.9724376427996339
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7999999999999999
  - 0.8023255813953488
  - 0.7972972972972974
  - 0.8174603174603176
  - 0.8296296296296296
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8
  - 0.8023255813953488
  - 0.7972972972972973
  - 0.8174603174603174
  - 0.8296296296296296
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8
  - 0.802325581395349
  - 0.7972972972972971
  - 0.8174603174603176
  - 0.8296296296296298
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7
  - 0.6976744186046511
  - 0.6773303916161059
  - 0.7103984450923225
  - 0.7457264957264956
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6880405756852191
  - 0.6928920409771474
  - 0.6889522297098242
  - 0.7132318497826372
  - 0.7249487511987448
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6666666666666666
  - 0.6699029126213593
  - 0.6629213483146067
  - 0.6912751677852349
  - 0.7088607594936709
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6779761904761905
  - 0.674418604651163
  - 0.6769626769626772
  - 0.7001133786848074
  - 0.7190476190476192
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5551903192155261
  - 0.553604969174431
  - 0.5325188026724416
  - 0.5666443643831717
  - 0.6078882100321151
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.93
  - 0.9213178294573642
  - 0.9707207207207207
  - 0.8817460317460317
  - 0.9666666666666667
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05520113053073003
  - 0.0
  - 0.0664770029347888
  - 0.056056066166359365
  - 0.10639664049258568
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.21658694143873736
  - 0.0
  - 0.2545228399440285
  - 0.22341428217597578
  - 0.30867413283221556
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.075
  - 0.0
  - 0.10810810810810811
  - 0.07142857142857142
  - 0.13333333333333333
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11040226106146006
  - 0.0
  - 0.1302406588110148
  - 0.11668813773405419
  - 0.21225181859062958
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9501248418348011
  - 0.9434300075218105
  - 0.98236720668124
  - 0.9127957316091362
  - 0.9753953169047639
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.475
  - -1.4186046511627908
  - -1.4594594594594594
  - -1.5952380952380953
  - -1.2222222222222223
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20000000000000004
  - -0.19767441860465115
  - -0.20270270270270271
  - -0.18253968253968256
  - -0.17037037037037037
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2
  - -0.19767441860465115
  - -0.20270270270270271
  - -0.18253968253968253
  - -0.17037037037037037
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2
  - -0.19767441860465115
  - -0.20270270270270271
  - -0.18253968253968256
  - -0.17037037037037037
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3
  - -0.3023255813953488
  - -0.3226696083838941
  - -0.28960155490767736
  - -0.2542735042735043
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.034375
  - -0.042441860465116284
  - -0.018918918918918916
  - -0.08333333333333333
  - -0.013333333333333336
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7999999999999999
  - 0.8023255813953488
  - 0.7972972972972974
  - 0.8174603174603176
  - 0.8296296296296296
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8
  - 0.8023255813953488
  - 0.7972972972972973
  - 0.8174603174603174
  - 0.8296296296296296
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8
  - 0.802325581395349
  - 0.7972972972972971
  - 0.8174603174603176
  - 0.8296296296296298
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7
  - 0.6976744186046511
  - 0.6773303916161059
  - 0.7103984450923225
  - 0.7457264957264956
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7999999999999999
  - 0.8023255813953488
  - 0.7972972972972974
  - 0.8174603174603176
  - 0.8296296296296296
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8
  - 0.8023255813953488
  - 0.7972972972972973
  - 0.8174603174603174
  - 0.8296296296296296
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8
  - 0.802325581395349
  - 0.7972972972972971
  - 0.8174603174603176
  - 0.8296296296296298
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7
  - 0.6976744186046511
  - 0.6773303916161059
  - 0.7103984450923225
  - 0.7457264957264956
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9719736297022102
  - 0.9872393401805167
  - 0.9871933621933623
  - 0.9405970263349004
  - 0.9924266002697375
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9678908600477227
  - 0.9760348583877996
  - 0.9744013212221304
  - 0.9487282597768171
  - 0.9857092448835568
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.965625
  - 0.9575581395348837
  - 0.981081081081081
  - 0.9166666666666666
  - 0.9866666666666666
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9589210519517424
  - 0.982570806100218
  - 0.9878964572842123
  - 0.9125862274734454
  - 0.9844322344322344
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9509852146036032
  - 0.9576714540425041
  - 0.974104527140454
  - 0.9455059783035645
  - 0.9474559217985782
  train_average_precision_macro_oob:
  - 0.8886915817227045
  - 0.919798616170805
  - 0.9260120197400138
  - 0.9085047572649426
  - 0.892033385237642
  train_average_precision_micro:
  - 0.9370014872701604
  - 0.9366807299707649
  - 0.9443796884287537
  - 0.9094805704194582
  - 0.9358986596625588
  train_average_precision_micro_oob:
  - 0.8874076470306713
  - 0.8856692700312944
  - 0.8982683180277726
  - 0.8584651174111968
  - 0.8802295640968325
  train_average_precision_samples:
  - 0.9510978043912175
  - 0.9615853658536585
  - 0.9649019607843137
  - 0.9767676767676767
  - 0.9634773662551439
  train_average_precision_samples_oob:
  - 0.9040918163672655
  - 0.9204268292682927
  - 0.9409803921568626
  - 0.9338383838383839
  - 0.9119341563786009
  train_average_precision_weighted:
  - 0.9603783962987449
  - 0.9650037601194855
  - 0.9671096148867523
  - 0.9412846152075564
  - 0.9537965885140419
  train_average_precision_weighted_oob:
  - 0.9125428194961904
  - 0.9292977397699215
  - 0.9229449128914546
  - 0.9032018668747667
  - 0.9055224057561773
  train_f1_macro:
  - 0.8223552894211577
  - 0.8079268292682927
  - 0.8215686274509805
  - 0.8151515151515153
  - 0.8065843621399177
  train_f1_macro_oob:
  - 0.8183632734530938
  - 0.8028455284552846
  - 0.8166666666666668
  - 0.8111111111111112
  - 0.7993827160493826
  train_f1_micro:
  - 0.8223552894211577
  - 0.8079268292682927
  - 0.8215686274509804
  - 0.8151515151515152
  - 0.8065843621399177
  train_f1_micro_oob:
  - 0.8183632734530938
  - 0.8028455284552846
  - 0.8166666666666667
  - 0.8111111111111111
  - 0.7993827160493827
  train_f1_samples:
  - 0.8223552894211575
  - 0.8079268292682925
  - 0.8215686274509804
  - 0.815151515151515
  - 0.8065843621399175
  train_f1_samples_oob:
  - 0.8183632734530938
  - 0.8028455284552845
  - 0.8166666666666665
  - 0.811111111111111
  - 0.7993827160493825
  train_f1_weighted:
  - 0.730092054696577
  - 0.7024329571653926
  - 0.7321645899739205
  - 0.7213613972234661
  - 0.7016666666666667
  train_f1_weighted_oob:
  - 0.7219292757768044
  - 0.6922703555393763
  - 0.7222254419008983
  - 0.7132706374085683
  - 0.6870679012345678
  train_jaccard_macro:
  - 0.7164072962205571
  - 0.6999330492184302
  - 0.7146627178783027
  - 0.707021429763948
  - 0.6977873897432331
  train_jaccard_macro_oob:
  - 0.711987685506276
  - 0.6943611857698545
  - 0.7093235606452422
  - 0.7024595380645243
  - 0.6902418493531332
  train_jaccard_micro:
  - 0.6983050847457627
  - 0.6777493606138107
  - 0.697171381031614
  - 0.6879795396419437
  - 0.6758620689655173
  train_jaccard_micro_oob:
  - 0.6925675675675675
  - 0.6706281833616299
  - 0.6901408450704225
  - 0.6822429906542056
  - 0.6658097686375322
  train_jaccard_samples:
  - 0.7105788423153694
  - 0.6877177700348434
  - 0.7068627450980394
  - 0.6992784992784994
  - 0.6860670194003528
  train_jaccard_samples_oob:
  - 0.703735386370117
  - 0.6790069686411151
  - 0.6997198879551821
  - 0.6932178932178932
  - 0.6737213403880071
  train_jaccard_weighted:
  - 0.589104844956062
  - 0.5584004094964707
  - 0.5910596451257664
  - 0.5794995660356501
  - 0.5568743602033345
  train_jaccard_weighted_oob:
  - 0.5800835369736927
  - 0.5472566825993193
  - 0.5802388902826355
  - 0.5703762247990707
  - 0.5415853264294874
  train_label_ranking_average_precision_score:
  - 0.9510978043912175
  - 0.9615853658536585
  - 0.9649019607843136
  - 0.9767676767676767
  - 0.9634773662551439
  train_label_ranking_average_precision_score_oob:
  - 0.9040918163672654
  - 0.9204268292682927
  - 0.9409803921568628
  - 0.9338383838383839
  - 0.9119341563786009
  train_matthews_corrcoef_macro:
  - 0.10368956578625262
  - 0.05634638319527057
  - 0.09934257131405626
  - 0.09204170484161252
  - 0.07253713114632743
  train_matthews_corrcoef_macro_oob:
  - 0.09014751486889028
  - 0.042344441506595366
  - 0.0790111256802813
  - 0.07671079080298726
  - 0.03541671909276991
  train_matthews_corrcoef_micro:
  - 0.3059784226303097
  - 0.2193008640849173
  - 0.29086395999252446
  - 0.2827277766391323
  - 0.21965882636488795
  train_matthews_corrcoef_micro_oob:
  - 0.27753532655815066
  - 0.16706465972363854
  - 0.2532539012846341
  - 0.2492176611851978
  - 0.14127503301526537
  train_matthews_corrcoef_samples:
  - 0.1377245508982036
  - 0.07317073170731707
  - 0.11488130663608649
  - 0.11675703675192335
  - 0.07407407407407407
  train_matthews_corrcoef_samples_oob:
  - 0.11377245508982035
  - 0.042682926829268296
  - 0.08823529411764706
  - 0.09959063958808288
  - 0.030864197530864196
  train_matthews_corrcoef_weighted:
  - 0.21013144721171576
  - 0.11269276639054114
  - 0.20058904548549472
  - 0.184176817364196
  - 0.14709762536399015
  train_matthews_corrcoef_weighted_oob:
  - 0.18222937979273865
  - 0.08468888301319073
  - 0.1592591411361374
  - 0.15325440045737573
  - 0.07118760537646752
  train_ndgc:
  - 0.964369223894364
  - 0.9728834509620902
  - 0.9750424452272851
  - 0.984117883214553
  - 0.9742097971738163
  train_ndgc_oob:
  - 0.9310767893333489
  - 0.9421891940457825
  - 0.9584450297672644
  - 0.9529316392457718
  - 0.9372706341483346
  train_neg_coverage_error:
  - -1.347305389221557
  - -1.3475609756097562
  - -1.3
  - -1.303030303030303
  - -1.3641975308641976
  train_neg_coverage_error_oob:
  - -1.532934131736527
  - -1.4634146341463414
  - -1.411764705882353
  - -1.4242424242424243
  - -1.5432098765432098
  train_neg_hamming_loss_macro:
  - -0.17764471057884235
  - -0.19207317073170735
  - -0.17843137254901956
  - -0.18484848484848485
  - -0.1934156378600823
  train_neg_hamming_loss_macro_oob:
  - -0.1816367265469062
  - -0.19715447154471546
  - -0.18333333333333335
  - -0.18888888888888888
  - -0.2006172839506173
  train_neg_hamming_loss_micro:
  - -0.17764471057884232
  - -0.19207317073170732
  - -0.1784313725490196
  - -0.18484848484848485
  - -0.1934156378600823
  train_neg_hamming_loss_micro_oob:
  - -0.18163672654690619
  - -0.19715447154471544
  - -0.18333333333333332
  - -0.18888888888888888
  - -0.2006172839506173
  train_neg_hamming_loss_samples:
  - -0.1776447105788423
  - -0.19207317073170732
  - -0.1784313725490196
  - -0.18484848484848485
  - -0.19341563786008228
  train_neg_hamming_loss_samples_oob:
  - -0.18163672654690619
  - -0.1971544715447154
  - -0.18333333333333332
  - -0.18888888888888888
  - -0.2006172839506173
  train_neg_hamming_loss_weighted:
  - -0.269907945303423
  - -0.29756704283460744
  - -0.26783541002607936
  - -0.27863860277653385
  - -0.29833333333333334
  train_neg_hamming_loss_weighted_oob:
  - -0.2780707242231954
  - -0.30772964446062373
  - -0.27777455809910173
  - -0.28672936259143156
  - -0.3129320987654321
  train_neg_label_ranking_loss:
  - -0.0279940119760479
  - -0.021951219512195124
  - -0.018823529411764708
  - -0.011818181818181818
  - -0.023456790123456788
  train_neg_label_ranking_loss_oob:
  - -0.059564204923486366
  - -0.04542682926829268
  - -0.03733660130718954
  - -0.0343939393939394
  - -0.0546124828532236
  train_precision_macro:
  - 0.8223552894211577
  - 0.8079268292682927
  - 0.8215686274509805
  - 0.8151515151515153
  - 0.8065843621399177
  train_precision_macro_oob:
  - 0.8183632734530938
  - 0.8028455284552846
  - 0.8166666666666668
  - 0.8111111111111112
  - 0.7993827160493826
  train_precision_micro:
  - 0.8223552894211577
  - 0.8079268292682927
  - 0.8215686274509804
  - 0.8151515151515152
  - 0.8065843621399177
  train_precision_micro_oob:
  - 0.8183632734530938
  - 0.8028455284552846
  - 0.8166666666666667
  - 0.8111111111111111
  - 0.7993827160493827
  train_precision_samples:
  - 0.8223552894211575
  - 0.8079268292682925
  - 0.8215686274509804
  - 0.815151515151515
  - 0.8065843621399175
  train_precision_samples_oob:
  - 0.8183632734530938
  - 0.8028455284552845
  - 0.8166666666666665
  - 0.811111111111111
  - 0.7993827160493825
  train_precision_weighted:
  - 0.730092054696577
  - 0.7024329571653926
  - 0.7321645899739205
  - 0.7213613972234661
  - 0.7016666666666667
  train_precision_weighted_oob:
  - 0.7219292757768044
  - 0.6922703555393763
  - 0.7222254419008983
  - 0.7132706374085683
  - 0.6870679012345678
  train_recall_macro:
  - 0.8223552894211577
  - 0.8079268292682927
  - 0.8215686274509805
  - 0.8151515151515153
  - 0.8065843621399177
  train_recall_macro_oob:
  - 0.8183632734530938
  - 0.8028455284552846
  - 0.8166666666666668
  - 0.8111111111111112
  - 0.7993827160493826
  train_recall_micro:
  - 0.8223552894211577
  - 0.8079268292682927
  - 0.8215686274509804
  - 0.8151515151515152
  - 0.8065843621399177
  train_recall_micro_oob:
  - 0.8183632734530938
  - 0.8028455284552846
  - 0.8166666666666667
  - 0.8111111111111111
  - 0.7993827160493827
  train_recall_samples:
  - 0.8223552894211575
  - 0.8079268292682925
  - 0.8215686274509804
  - 0.815151515151515
  - 0.8065843621399175
  train_recall_samples_oob:
  - 0.8183632734530938
  - 0.8028455284552845
  - 0.8166666666666665
  - 0.811111111111111
  - 0.7993827160493825
  train_recall_weighted:
  - 0.730092054696577
  - 0.7024329571653926
  - 0.7321645899739205
  - 0.7213613972234661
  - 0.7016666666666667
  train_recall_weighted_oob:
  - 0.7219292757768044
  - 0.6922703555393763
  - 0.7222254419008983
  - 0.7132706374085683
  - 0.6870679012345678
  train_roc_auc_macro:
  - 0.979025478248372
  - 0.9857498884516662
  - 0.9903702883834814
  - 0.9738092029758442
  - 0.9753012183726811
  train_roc_auc_macro_oob:
  - 0.9631503654699124
  - 0.9654752043719724
  - 0.9692438785393338
  - 0.9626624613195568
  - 0.960588205311006
  train_roc_auc_micro:
  - 0.9787330513475071
  - 0.9800423171498827
  - 0.9856919765331533
  - 0.9768497943803556
  - 0.9772538860103627
  train_roc_auc_micro_oob:
  - 0.9598573921901106
  - 0.9635729398982101
  - 0.9693520087307282
  - 0.9628632770200487
  - 0.9602331606217617
  train_roc_auc_samples:
  - 0.9720059880239522
  - 0.9780487804878049
  - 0.9811764705882353
  - 0.9881818181818183
  - 0.9765432098765432
  train_roc_auc_samples_oob:
  - 0.9404357950765138
  - 0.9545731707317073
  - 0.9626633986928104
  - 0.9656060606060606
  - 0.9453875171467764
  train_roc_auc_weighted:
  - 0.9794363960597907
  - 0.9817792214273656
  - 0.9835170584192966
  - 0.9686671942345835
  - 0.9740571076379245
  train_roc_auc_weighted_oob:
  - 0.9599510515542643
  - 0.9616213943559402
  - 0.9610839845037997
  - 0.9555722930474891
  - 0.9546557755169419
start: 2023-12-21 09:20:45.651802
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
