active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L80MzMzMzPzP6CZmZmZmck/NDMzMzMz8z+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACMAAAAAAAAAAAAAAAAAAAPA/AAAAAAAACEAAAAAAAADwvw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:08:23.989777
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__5
  params: {}
hash: fbdcc04077fd37b94c725dcda3aacbd16572fc2880c9bbd781ce4b6c91ec61d0
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fbdcc04_20231221T230709265204_embedding_proba_weak__5_CHD_49.yml
results:
  fit_time:
  - 55.926647663116455
  - 56.3059778213501
  - 55.32734775543213
  - 56.10537338256836
  - 57.047218799591064
  score_time:
  - 5.2760231494903564
  - 5.002022981643677
  - 5.095277786254883
  - 5.174806833267212
  - 5.2478461265563965
  test_average_precision_macro:
  - 0.5172335496652658
  - 0.5512638790628929
  - 0.49728978930874207
  - 0.5075129850900436
  - 0.5686338480105131
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.664107457952653
  - 0.7106592146837684
  - 0.6626931405723125
  - 0.6556100495601198
  - 0.6578810576871437
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7890107212475632
  - 0.7792667667667665
  - 0.7917045454545454
  - 0.7769032921810698
  - 0.7508308531746032
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6301781689122684
  - 0.6838411883874937
  - 0.6173135501058157
  - 0.6311604839248661
  - 0.6589559432134224
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6988304093567251
  - 0.7177177177177176
  - 0.6999999999999998
  - 0.6975308641975309
  - 0.7023809523809524
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6988304093567251
  - 0.7177177177177178
  - 0.7
  - 0.6975308641975309
  - 0.7023809523809523
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.698830409356725
  - 0.7177177177177178
  - 0.7000000000000002
  - 0.697530864197531
  - 0.7023809523809523
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6600423472474289
  - 0.671488389798249
  - 0.6586316122901489
  - 0.6566876063342495
  - 0.6645585317460319
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5580186872075701
  - 0.5818069916496013
  - 0.5598819350016876
  - 0.5578444183036528
  - 0.5601671610445716
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5370786516853933
  - 0.5597189695550351
  - 0.5384615384615384
  - 0.5355450236966824
  - 0.5412844036697247
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5822548796233006
  - 0.6027534027534025
  - 0.5774144037780402
  - 0.5804834054834056
  - 0.5858147804576376
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5015473442056685
  - 0.5136899809276899
  - 0.49872154903874594
  - 0.4963480306950191
  - 0.504187467674065
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7890107212475634
  - 0.7882757757757755
  - 0.7917045454545456
  - 0.7954218106995886
  - 0.7508308531746032
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.14503205594516724
  - 0.18793454111137675
  - 0.15220145715913072
  - 0.11637155641107866
  - 0.14660311120464406
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4269092398441413
  - 0.45960296248034976
  - 0.4208285220816148
  - 0.4123607909742046
  - 0.43655408989493827
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4598586397694616
  - 0.4766054472924908
  - 0.43688687206758464
  - 0.4308130978501101
  - 0.4511141392327728
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1435507505759299
  - 0.2013765845314611
  - 0.16682537520317617
  - 0.11117486560347577
  - 0.14518028167926664
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8563589064285335
  - 0.8506567516758956
  - 0.8626979828607416
  - 0.8473617785447438
  - 0.8280373605020045
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.587719298245614
  - -3.6126126126126126
  - -3.6818181818181817
  - -3.6574074074074074
  - -3.7142857142857144
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3011695906432748
  - -0.2822822822822823
  - -0.30000000000000004
  - -0.30246913580246915
  - -0.2976190476190476
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.30116959064327486
  - -0.2822822822822823
  - -0.3
  - -0.30246913580246915
  - -0.2976190476190476
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3011695906432748
  - -0.28228228228228225
  - -0.3
  - -0.3024691358024691
  - -0.2976190476190476
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3399576527525711
  - -0.328511610201751
  - -0.3413683877098511
  - -0.3433123936657506
  - -0.33544146825396826
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19444444444444445
  - -0.20503003003003004
  - -0.21101010101010098
  - -0.20771604938271604
  - -0.23504464285714288
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6988304093567251
  - 0.7177177177177176
  - 0.6999999999999998
  - 0.6975308641975309
  - 0.7023809523809524
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6988304093567251
  - 0.7177177177177178
  - 0.7
  - 0.6975308641975309
  - 0.7023809523809523
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.698830409356725
  - 0.7177177177177178
  - 0.7000000000000002
  - 0.697530864197531
  - 0.7023809523809523
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6600423472474289
  - 0.671488389798249
  - 0.6586316122901489
  - 0.6566876063342495
  - 0.6645585317460319
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6988304093567251
  - 0.7177177177177176
  - 0.6999999999999998
  - 0.6975308641975309
  - 0.7023809523809524
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6988304093567251
  - 0.7177177177177178
  - 0.7
  - 0.6975308641975309
  - 0.7023809523809523
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.698830409356725
  - 0.7177177177177178
  - 0.7000000000000002
  - 0.697530864197531
  - 0.7023809523809523
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6600423472474289
  - 0.671488389798249
  - 0.6586316122901489
  - 0.6566876063342495
  - 0.6645585317460319
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6071500829410907
  - 0.5519086684773596
  - 0.5432681191742522
  - 0.5748486166707758
  - 0.593846650024647
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.785699282338526
  - 0.7935900744782833
  - 0.7771622871341697
  - 0.766319763783339
  - 0.7694227430555556
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8055555555555555
  - .nan
  - 0.7889898989898989
  - .nan
  - 0.7649553571428571
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6184605266993919
  - 0.6172856376391589
  - 0.5828888157220923
  - 0.5460483926546297
  - 0.6162892166849272
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8360039912760356
  - 0.8510989592472785
  - 0.8605476218076276
  - 0.8268889273623534
  - 0.8232400019997593
  train_average_precision_macro_oob:
  - 0.6690076398421718
  - 0.7775203362767708
  - 0.7309795110564492
  - 0.6834819508369367
  - 0.7220763798374153
  train_average_precision_micro:
  - 0.8079884517613443
  - 0.8267808069090792
  - 0.8430835257614651
  - 0.8050992920373687
  - 0.7823896110592337
  train_average_precision_micro_oob:
  - 0.7920317040675511
  - 0.809578703890385
  - 0.8320799989112565
  - 0.7943287109799146
  - 0.769477533671967
  train_average_precision_samples:
  - 0.869693247669438
  - 0.8709522022022023
  - 0.9014263420724095
  - 0.8766902808849119
  - 0.839334085778781
  train_average_precision_samples_oob:
  - 0.8583364827412445
  - 0.8634697197197196
  - 0.8912234706616728
  - 0.8710756897837435
  - 0.8322767745171809
  train_average_precision_weighted:
  - 0.8035488463277086
  - 0.8250326968388189
  - 0.837103528927638
  - 0.7966169649655664
  - 0.7929737617763981
  train_average_precision_weighted_oob:
  - 0.7834085628464648
  - 0.8039111599984101
  - 0.8177133562482021
  - 0.7758512791421222
  - 0.774882681478788
  train_f1_macro:
  - 0.8480725623582765
  - 0.8506006006006007
  - 0.8700374531835205
  - 0.8508575689783743
  - 0.8446200150489088
  train_f1_macro_oob:
  - 0.8227513227513227
  - 0.8288288288288289
  - 0.849063670411985
  - 0.8329604772557793
  - 0.828066215199398
  train_f1_micro:
  - 0.8480725623582767
  - 0.8506006006006006
  - 0.8700374531835205
  - 0.8508575689783744
  - 0.8446200150489089
  train_f1_micro_oob:
  - 0.8227513227513228
  - 0.8288288288288288
  - 0.849063670411985
  - 0.8329604772557793
  - 0.828066215199398
  train_f1_samples:
  - 0.8480725623582767
  - 0.8506006006006006
  - 0.8700374531835207
  - 0.8508575689783743
  - 0.844620015048909
  train_f1_samples_oob:
  - 0.8227513227513227
  - 0.8288288288288288
  - 0.8490636704119849
  - 0.8329604772557794
  - 0.828066215199398
  train_f1_weighted:
  - 0.8154627875668655
  - 0.8193725083968987
  - 0.8444983072469456
  - 0.8228573431229957
  - 0.8131363557435791
  train_f1_weighted_oob:
  - 0.7856825158551455
  - 0.7921257494428225
  - 0.8163230459741918
  - 0.7969209681407624
  - 0.7926960173009835
  train_jaccard_macro:
  - 0.7446026869465595
  - 0.7478827943981056
  - 0.7746716166560392
  - 0.7456506802967263
  - 0.7382000982933344
  train_jaccard_macro_oob:
  - 0.70961289538546
  - 0.7181282995321681
  - 0.7441435965260208
  - 0.7206360282200631
  - 0.7153002964539751
  train_jaccard_micro:
  - 0.7362204724409449
  - 0.7400391900718485
  - 0.7699701690420948
  - 0.7404282933160286
  - 0.7310322370563335
  train_jaccard_micro_oob:
  - 0.698876404494382
  - 0.7076923076923077
  - 0.7377155873739017
  - 0.7137380191693291
  - 0.7065810593900481
  train_jaccard_samples:
  - 0.770287913145056
  - 0.7708835458835459
  - 0.7977207062600321
  - 0.7710256931733441
  - 0.7634770797299014
  train_jaccard_samples_oob:
  - 0.7364382405198732
  - 0.7414755664755664
  - 0.7697718760640108
  - 0.74719583175959
  - 0.7417206570705442
  train_jaccard_weighted:
  - 0.6924285714247079
  - 0.6979928362066926
  - 0.7327080860810692
  - 0.7005257043398428
  - 0.6879260209657039
  train_jaccard_weighted_oob:
  - 0.6517850441221141
  - 0.6610694455156817
  - 0.6923024154204607
  - 0.664528881627885
  - 0.6599821599667357
  train_label_ranking_average_precision_score:
  - 0.8764959687578732
  - 0.875456706706706
  - 0.9081679151061166
  - 0.8789274173502357
  - 0.8461060948081264
  train_label_ranking_average_precision_score_oob:
  - 0.8651392038296797
  - 0.8679742242242237
  - 0.8979650436953801
  - 0.8733128262490675
  - 0.8390487835465257
  train_matthews_corrcoef_macro:
  - 0.5057319870166527
  - 0.5187654735600353
  - 0.5620643402240032
  - 0.5187729008341083
  - 0.5003385167292603
  train_matthews_corrcoef_macro_oob:
  - 0.43323032634196695
  - 0.4575176144597404
  - 0.49140233176791165
  - 0.4516474997582729
  - 0.44375084377466756
  train_matthews_corrcoef_micro:
  - 0.7193324764839287
  - 0.7222741774074266
  - 0.7572399345438916
  - 0.7206429759074505
  - 0.714150594595919
  train_matthews_corrcoef_micro_oob:
  - 0.6687462254581383
  - 0.6824633197098207
  - 0.7164867706347449
  - 0.6864364132996905
  - 0.6815043100022922
  train_matthews_corrcoef_samples:
  - 0.7247958776536202
  - 0.7307162310338643
  - 0.7613535661482703
  - 0.7282493017581899
  - 0.7228408326206232
  train_matthews_corrcoef_samples_oob:
  - 0.6756575392321073
  - 0.6918218551296255
  - 0.7227296575918322
  - 0.6947205282892396
  - 0.6922356547759131
  train_matthews_corrcoef_weighted:
  - 0.5609811831646719
  - 0.57647881248382
  - 0.6377200533001898
  - 0.5852129001205033
  - 0.5560286573552125
  train_matthews_corrcoef_weighted_oob:
  - 0.46646823350659333
  - 0.49137166650607783
  - 0.5336843809667052
  - 0.4796870413642906
  - 0.4764411250659864
  train_ndgc:
  - 0.9127901120077644
  - 0.9133490053252176
  - 0.9354521398671963
  - 0.9184230192354437
  - 0.8880170995282024
  train_ndgc_oob:
  - 0.9046070192741046
  - 0.9093588160804528
  - 0.9289435944242302
  - 0.9150372817915562
  - 0.8841119839914056
  train_neg_coverage_error:
  - -3.1859410430839
  - -3.150900900900901
  - -3.047191011235955
  - -3.1140939597315436
  - -3.2031602708803613
  train_neg_coverage_error_oob:
  - -3.253968253968254
  - -3.234234234234234
  - -3.114606741573034
  - -3.1812080536912752
  - -3.295711060948081
  train_neg_hamming_loss_macro:
  - -0.15192743764172334
  - -0.14939939939939942
  - -0.1299625468164794
  - -0.14914243102162564
  - -0.15537998495109104
  train_neg_hamming_loss_macro_oob:
  - -0.1772486772486772
  - -0.17117117117117117
  - -0.15093632958801498
  - -0.16703952274422074
  - -0.17193378480060195
  train_neg_hamming_loss_micro:
  - -0.15192743764172337
  - -0.1493993993993994
  - -0.1299625468164794
  - -0.14914243102162567
  - -0.15537998495109104
  train_neg_hamming_loss_micro_oob:
  - -0.17724867724867724
  - -0.17117117117117117
  - -0.15093632958801498
  - -0.16703952274422074
  - -0.17193378480060195
  train_neg_hamming_loss_samples:
  - -0.15192743764172337
  - -0.14939939939939936
  - -0.1299625468164794
  - -0.14914243102162567
  - -0.15537998495109107
  train_neg_hamming_loss_samples_oob:
  - -0.17724867724867724
  - -0.17117117117117117
  - -0.150936329588015
  - -0.1670395227442207
  - -0.17193378480060192
  train_neg_hamming_loss_weighted:
  - -0.18453721243313437
  - -0.18062749160310135
  - -0.1555016927530543
  - -0.17714265687700423
  - -0.1868636442564208
  train_neg_hamming_loss_weighted_oob:
  - -0.2143174841448547
  - -0.20787425055717737
  - -0.18367695402580833
  - -0.2030790318592376
  - -0.20730398269901656
  train_neg_label_ranking_loss:
  - -0.10904509952128999
  - -0.10429804804804806
  - -0.0836267166042447
  - -0.10332463335819042
  - -0.12333207925758716
  train_neg_label_ranking_loss_oob:
  - -0.12285840262030738
  - -0.11671046046046046
  - -0.095980024968789
  - -0.11296296296296296
  - -0.13701404564835715
  train_precision_macro:
  - 0.8480725623582765
  - 0.8506006006006007
  - 0.8700374531835205
  - 0.8508575689783743
  - 0.8446200150489088
  train_precision_macro_oob:
  - 0.8227513227513227
  - 0.8288288288288289
  - 0.849063670411985
  - 0.8329604772557793
  - 0.828066215199398
  train_precision_micro:
  - 0.8480725623582767
  - 0.8506006006006006
  - 0.8700374531835205
  - 0.8508575689783744
  - 0.8446200150489089
  train_precision_micro_oob:
  - 0.8227513227513228
  - 0.8288288288288288
  - 0.849063670411985
  - 0.8329604772557793
  - 0.828066215199398
  train_precision_samples:
  - 0.8480725623582767
  - 0.8506006006006006
  - 0.8700374531835207
  - 0.8508575689783743
  - 0.844620015048909
  train_precision_samples_oob:
  - 0.8227513227513227
  - 0.8288288288288288
  - 0.8490636704119849
  - 0.8329604772557794
  - 0.828066215199398
  train_precision_weighted:
  - 0.8154627875668655
  - 0.8193725083968987
  - 0.8444983072469456
  - 0.8228573431229957
  - 0.8131363557435791
  train_precision_weighted_oob:
  - 0.7856825158551455
  - 0.7921257494428225
  - 0.8163230459741918
  - 0.7969209681407624
  - 0.7926960173009835
  train_recall_macro:
  - 0.8480725623582765
  - 0.8506006006006007
  - 0.8700374531835205
  - 0.8508575689783743
  - 0.8446200150489088
  train_recall_macro_oob:
  - 0.8227513227513227
  - 0.8288288288288289
  - 0.849063670411985
  - 0.8329604772557793
  - 0.828066215199398
  train_recall_micro:
  - 0.8480725623582767
  - 0.8506006006006006
  - 0.8700374531835205
  - 0.8508575689783744
  - 0.8446200150489089
  train_recall_micro_oob:
  - 0.8227513227513228
  - 0.8288288288288288
  - 0.849063670411985
  - 0.8329604772557793
  - 0.828066215199398
  train_recall_samples:
  - 0.8480725623582767
  - 0.8506006006006006
  - 0.8700374531835207
  - 0.8508575689783743
  - 0.844620015048909
  train_recall_samples_oob:
  - 0.8227513227513227
  - 0.8288288288288288
  - 0.8490636704119849
  - 0.8329604772557794
  - 0.828066215199398
  train_recall_weighted:
  - 0.8154627875668655
  - 0.8193725083968987
  - 0.8444983072469456
  - 0.8228573431229957
  - 0.8131363557435791
  train_recall_weighted_oob:
  - 0.7856825158551455
  - 0.7921257494428225
  - 0.8163230459741918
  - 0.7969209681407624
  - 0.7926960173009835
  train_roc_auc_macro:
  - 0.8579740935247572
  - 0.8670588074418847
  - 0.8820088637934647
  - 0.8675333709511074
  - 0.8502390038110973
  train_roc_auc_macro_oob:
  - 0.8035058278224163
  - 0.8505531631756374
  - 0.8459334522481453
  - 0.8219077217422552
  - 0.8279549344605589
  train_roc_auc_micro:
  - 0.8979385386779446
  - 0.9030584336186369
  - 0.9172828405755602
  - 0.9035603153597361
  - 0.8877712446074402
  train_roc_auc_micro_oob:
  - 0.8840459300592465
  - 0.8894233863182959
  - 0.9036603908654879
  - 0.8899749463074332
  - 0.8754913349530258
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8059938731397019
  - 0.8182780661811007
  - 0.8393237910320506
  - 0.8217273902986357
  - 0.7994972512408893
  train_roc_auc_weighted_oob:
  - 0.7849124744976363
  - 0.8061201336193274
  - 0.8261696415405089
  - 0.8026618502957941
  - 0.7834633918400752
start: 2023-12-21 23:07:09.265204
wrapper: null
