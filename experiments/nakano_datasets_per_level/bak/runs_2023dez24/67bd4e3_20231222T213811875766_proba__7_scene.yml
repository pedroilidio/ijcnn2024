active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzC0AAmZmZmZn5v4DMzMzMzATAgDMzMzMzA0AAmZmZmZn5vw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 21:39:04.353447
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba__7
  params: {}
hash: 67bd4e33975d691a4a9b46384a562be2e1263dede1036e8bbf51515c3237d3f8
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/67bd4e3_20231222T213811875766_proba__7_scene.yml
results:
  fit_time:
  - 17.312698125839233
  - 17.26481533050537
  - 17.38175654411316
  - 17.56178116798401
  - 17.21890902519226
  score_time:
  - 5.686968088150024
  - 5.801262617111206
  - 5.61417818069458
  - 5.6502203941345215
  - 5.6894800662994385
  test_average_precision_macro:
  - 0.8357444914956483
  - 0.8548865876637315
  - 0.8313754149820752
  - 0.8649035936425093
  - 0.8306819007741318
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8347033304668432
  - 0.8529295135697695
  - 0.8272530277516073
  - 0.8660148999949678
  - 0.8264852056882924
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8944560669456066
  - 0.8893719806763285
  - 0.8852617079889807
  - 0.894276270006959
  - 0.8738095238095237
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8264975154659758
  - 0.8444704030371613
  - 0.8172618634428411
  - 0.8537710388774471
  - 0.8187213918553835
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8643654114365411
  - 0.8709454796411319
  - 0.8712121212121212
  - 0.8663883089770356
  - 0.8674948240165632
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8643654114365411
  - 0.8709454796411318
  - 0.8712121212121212
  - 0.8663883089770354
  - 0.8674948240165632
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8643654114365412
  - 0.8709454796411319
  - 0.8712121212121212
  - 0.8663883089770356
  - 0.8674948240165632
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.861265103631346
  - 0.8670062592356766
  - 0.8674728647473504
  - 0.8626562739297604
  - 0.864032131221211
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7623658716769718
  - 0.772950717232184
  - 0.7736795150088586
  - 0.7659773820642842
  - 0.7672431123697395
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7611298741172858
  - 0.7713936430317848
  - 0.7718120805369127
  - 0.7642725598526704
  - 0.7659963436928702
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7728631201434547
  - 0.7832988267770875
  - 0.7836481700118062
  - 0.7754249925439902
  - 0.7774327122153208
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7576693311599261
  - 0.766962906642466
  - 0.7680333018510577
  - 0.7603039141453216
  - 0.7619532955973646
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8944560669456066
  - 0.8893719806763282
  - 0.8852617079889806
  - 0.8942762700069586
  - 0.8738095238095237
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.45700959152051096
  - 0.48809389658586094
  - 0.4799469119003905
  - 0.4675276279937224
  - 0.4691685404715697
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.45706778319671654
  - 0.4873766900645976
  - 0.4854850084569692
  - 0.4704978074215931
  - 0.46724849190673085
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2727134118250427
  - 0.29508430439272293
  - 0.30032440258754217
  - 0.2733289255121853
  - 0.27535141447660877
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4501607966570045
  - 0.4771488490836049
  - 0.46956679399859336
  - 0.4576372821522545
  - 0.45983167880908005
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9225431928276275
  - 0.9181660296475016
  - 0.9157767253054064
  - 0.9221277373692901
  - 0.9070667528826488
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3598326359832635
  - -1.4057971014492754
  - -1.3946280991735538
  - -1.4112734864300627
  - -1.4182194616977226
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.13563458856345886
  - -0.1290545203588682
  - -0.12878787878787878
  - -0.13361169102296452
  - -0.13250517598343683
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.13563458856345886
  - -0.1290545203588682
  - -0.12878787878787878
  - -0.1336116910229645
  - -0.13250517598343686
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.13563458856345884
  - -0.12905452035886816
  - -0.12878787878787878
  - -0.1336116910229645
  - -0.13250517598343686
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.13873489636865405
  - -0.13299374076432358
  - -0.13252713525264959
  - -0.13734372607023965
  - -0.1359678687787889
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.054131799163179915
  - -0.065527950310559
  - -0.0625
  - -0.06367432150313153
  - -0.06785714285714285
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8643654114365411
  - 0.8709454796411319
  - 0.8712121212121212
  - 0.8663883089770356
  - 0.8674948240165632
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8643654114365411
  - 0.8709454796411318
  - 0.8712121212121212
  - 0.8663883089770354
  - 0.8674948240165632
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8643654114365412
  - 0.8709454796411319
  - 0.8712121212121212
  - 0.8663883089770356
  - 0.8674948240165632
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.861265103631346
  - 0.8670062592356766
  - 0.8674728647473504
  - 0.8626562739297604
  - 0.864032131221211
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8643654114365411
  - 0.8709454796411319
  - 0.8712121212121212
  - 0.8663883089770356
  - 0.8674948240165632
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8643654114365411
  - 0.8709454796411318
  - 0.8712121212121212
  - 0.8663883089770354
  - 0.8674948240165632
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8643654114365412
  - 0.8709454796411319
  - 0.8712121212121212
  - 0.8663883089770356
  - 0.8674948240165632
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.861265103631346
  - 0.8670062592356766
  - 0.8674728647473504
  - 0.8626562739297604
  - 0.864032131221211
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9467909745072484
  - 0.9466165607205731
  - 0.9434263225600809
  - 0.9522627576630273
  - 0.9423552537504297
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.953756868759086
  - 0.9528878281235149
  - 0.949109416820155
  - 0.9564858637439283
  - 0.9483838738861877
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9458682008368201
  - 0.9344720496894411
  - 0.9375
  - 0.9363256784968684
  - 0.9321428571428572
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9419985205151951
  - 0.9417874235175184
  - 0.9379864260904652
  - 0.9475957114351081
  - 0.9373583221034045
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.935739126274037
  - 0.9435409696378355
  - 0.9443080160952899
  - 0.9430846702689334
  - 0.9408150099564742
  train_average_precision_macro_oob:
  - 0.9285792220369496
  - 0.9381305300208158
  - 0.9365173635979124
  - 0.9380852564788618
  - 0.9337351327715441
  train_average_precision_micro:
  - 0.9360764269055417
  - 0.9427709630667733
  - 0.9434330367711514
  - 0.942993988442708
  - 0.941516729934843
  train_average_precision_micro_oob:
  - 0.9287596220087972
  - 0.9379321941307647
  - 0.9358873533277211
  - 0.9381582913085894
  - 0.9339769816669121
  train_average_precision_samples:
  - 0.9336702954898911
  - 0.944871794871795
  - 0.9476339053562143
  - 0.942436030428769
  - 0.9410343035343035
  train_average_precision_samples_oob:
  - 0.9282702609296699
  - 0.9417706167706168
  - 0.9377231755936905
  - 0.9385200553250346
  - 0.9332640332640332
  train_average_precision_weighted:
  - 0.930777567615384
  - 0.9392574038347122
  - 0.9396221294581381
  - 0.9384176640797095
  - 0.9360053749609101
  train_average_precision_weighted_oob:
  - 0.9232158195631942
  - 0.9335836063472299
  - 0.9315391915005042
  - 0.9334380384685378
  - 0.9287788506448977
  train_f1_macro:
  - 0.907033005011232
  - 0.9057519057519058
  - 0.9067429363841221
  - 0.9077627939142462
  - 0.9063582813582814
  train_f1_macro_oob:
  - 0.8974425436322792
  - 0.8972626472626474
  - 0.8982492633038657
  - 0.8991182572614108
  - 0.8981288981288982
  train_f1_micro:
  - 0.9070330050112321
  - 0.9057519057519058
  - 0.9067429363841221
  - 0.9077627939142462
  - 0.9063582813582813
  train_f1_micro_oob:
  - 0.8974425436322793
  - 0.8972626472626473
  - 0.8982492633038655
  - 0.8991182572614108
  - 0.8981288981288982
  train_f1_samples:
  - 0.9070330050112322
  - 0.9057519057519058
  - 0.9067429363841222
  - 0.9077627939142462
  - 0.9063582813582814
  train_f1_samples_oob:
  - 0.8974425436322794
  - 0.8972626472626474
  - 0.8982492633038656
  - 0.8991182572614108
  - 0.8981288981288982
  train_f1_weighted:
  - 0.9058142892810839
  - 0.9043774655476783
  - 0.9055010556321672
  - 0.906473390384766
  - 0.9049512203209642
  train_f1_weighted_oob:
  - 0.8963930359483121
  - 0.8961428881641648
  - 0.8971804713581194
  - 0.8979774042601883
  - 0.896876874643912
  train_jaccard_macro:
  - 0.8300392439000056
  - 0.8279428147949224
  - 0.8295629184943304
  - 0.8312842968156261
  - 0.8289601512300787
  train_jaccard_macro_oob:
  - 0.8140915435511115
  - 0.8138033325040633
  - 0.8154281236259809
  - 0.8168658013941235
  - 0.8152561699719302
  train_jaccard_micro:
  - 0.8298814229249012
  - 0.8277390753641545
  - 0.829395909307119
  - 0.8311040759794223
  - 0.8287524752475247
  train_jaccard_micro_oob:
  - 0.8139644228508738
  - 0.813668499607227
  - 0.8152926368785399
  - 0.8167255594817432
  - 0.8150943396226416
  train_jaccard_samples:
  - 0.8420597891826506
  - 0.8402509652509651
  - 0.8418022435183121
  - 0.8433980438648487
  - 0.8412904662904661
  train_jaccard_samples_oob:
  - 0.826248487990323
  - 0.8265518265518264
  - 0.8281331253250129
  - 0.8295050385299347
  - 0.8280368280368279
  train_jaccard_weighted:
  - 0.8280158946373646
  - 0.8256657975152113
  - 0.8275021562927749
  - 0.8291376169410553
  - 0.826627951358558
  train_jaccard_weighted_oob:
  - 0.812383446095166
  - 0.8119784844926083
  - 0.813687059422974
  - 0.8149994913211147
  - 0.8132117550012353
  train_label_ranking_average_precision_score:
  - 0.9336702954898904
  - 0.944871794871795
  - 0.9476339053562138
  - 0.942436030428769
  - 0.9410343035343034
  train_label_ranking_average_precision_score_oob:
  - 0.928270260929669
  - 0.9417706167706166
  - 0.93772317559369
  - 0.938520055325034
  - 0.9332640332640328
  train_matthews_corrcoef_macro:
  - 0.6558012002944825
  - 0.6520265091385888
  - 0.655842353577367
  - 0.6592867066504576
  - 0.6547770271855627
  train_matthews_corrcoef_macro_oob:
  - 0.6131081859029203
  - 0.6140207350451617
  - 0.6181068279577394
  - 0.6212308307864779
  - 0.6185634030267154
  train_matthews_corrcoef_micro:
  - 0.6564408440864934
  - 0.6519827424433038
  - 0.6563140097758288
  - 0.6595048875576047
  - 0.6546936754321124
  train_matthews_corrcoef_micro_oob:
  - 0.6154061167720977
  - 0.6156759827516354
  - 0.620177561030147
  - 0.6227219467492141
  - 0.6196406503516724
  train_matthews_corrcoef_samples:
  - 0.48812671983550754
  - 0.4889064900306463
  - 0.4900734272626939
  - 0.49595743455309255
  - 0.49047614952714536
  train_matthews_corrcoef_samples_oob:
  - 0.43939680796407155
  - 0.44433697649396614
  - 0.44830298767853544
  - 0.4527925372935293
  - 0.44910948300718484
  train_matthews_corrcoef_weighted:
  - 0.6557530346388327
  - 0.6512943592259426
  - 0.6556329285511905
  - 0.6588176472361488
  - 0.6539991433675971
  train_matthews_corrcoef_weighted_oob:
  - 0.6144644359536968
  - 0.6148934863327564
  - 0.6192624422830532
  - 0.6219519019628725
  - 0.6189143337375539
  train_ndgc:
  - 0.951366746782184
  - 0.9595645128069948
  - 0.961545824530621
  - 0.9579068748395815
  - 0.956757232348555
  train_ndgc_oob:
  - 0.9472136190403483
  - 0.9573180866814901
  - 0.9542777364348807
  - 0.9550096528562737
  - 0.9510366201448812
  train_neg_coverage_error:
  - -1.2555728356661482
  - -1.2297297297297298
  - -1.2256890275611025
  - -1.2349585062240664
  - -1.2432432432432432
  train_neg_coverage_error_oob:
  - -1.2809745982374288
  - -1.2453222453222452
  - -1.2563702548101925
  - -1.2510373443983402
  - -1.272869022869023
  train_neg_hamming_loss_macro:
  - -0.09296699498876793
  - -0.09424809424809426
  - -0.09325706361587797
  - -0.09223720608575381
  - -0.09364171864171865
  train_neg_hamming_loss_macro_oob:
  - -0.10255745636772075
  - -0.10273735273735274
  - -0.1017507366961345
  - -0.1008817427385892
  - -0.10187110187110186
  train_neg_hamming_loss_micro:
  - -0.09296699498876793
  - -0.09424809424809424
  - -0.09325706361587797
  - -0.09223720608575381
  - -0.09364171864171864
  train_neg_hamming_loss_micro_oob:
  - -0.10255745636772075
  - -0.10273735273735274
  - -0.1017507366961345
  - -0.10088174273858921
  - -0.10187110187110188
  train_neg_hamming_loss_samples:
  - -0.09296699498876794
  - -0.09424809424809426
  - -0.09325706361587796
  - -0.0922372060857538
  - -0.09364171864171864
  train_neg_hamming_loss_samples_oob:
  - -0.10255745636772075
  - -0.10273735273735275
  - -0.1017507366961345
  - -0.10088174273858921
  - -0.10187110187110188
  train_neg_hamming_loss_weighted:
  - -0.0941857107189161
  - -0.09562253445232169
  - -0.09449894436783274
  - -0.09352660961523405
  - -0.09504877967903584
  train_neg_hamming_loss_weighted_oob:
  - -0.10360696405168791
  - -0.10385711183583524
  - -0.1028195286418807
  - -0.10202259573981176
  - -0.10312312535608816
  train_neg_label_ranking_loss:
  - -0.035147744945567654
  - -0.029729729729729728
  - -0.02891315652626105
  - -0.03088692946058091
  - -0.032185550935550936
  train_neg_label_ranking_loss_oob:
  - -0.04027993779160187
  - -0.0326533264033264
  - -0.034841393655746226
  - -0.033908195020746885
  - -0.03770790020790021
  train_precision_macro:
  - 0.907033005011232
  - 0.9057519057519058
  - 0.9067429363841221
  - 0.9077627939142462
  - 0.9063582813582814
  train_precision_macro_oob:
  - 0.8974425436322792
  - 0.8972626472626474
  - 0.8982492633038657
  - 0.8991182572614108
  - 0.8981288981288982
  train_precision_micro:
  - 0.9070330050112321
  - 0.9057519057519058
  - 0.9067429363841221
  - 0.9077627939142462
  - 0.9063582813582813
  train_precision_micro_oob:
  - 0.8974425436322793
  - 0.8972626472626473
  - 0.8982492633038655
  - 0.8991182572614108
  - 0.8981288981288982
  train_precision_samples:
  - 0.9070330050112322
  - 0.9057519057519058
  - 0.9067429363841222
  - 0.9077627939142462
  - 0.9063582813582814
  train_precision_samples_oob:
  - 0.8974425436322794
  - 0.8972626472626474
  - 0.8982492633038656
  - 0.8991182572614108
  - 0.8981288981288982
  train_precision_weighted:
  - 0.9058142892810839
  - 0.9043774655476783
  - 0.9055010556321672
  - 0.906473390384766
  - 0.9049512203209642
  train_precision_weighted_oob:
  - 0.8963930359483121
  - 0.8961428881641648
  - 0.8971804713581194
  - 0.8979774042601883
  - 0.896876874643912
  train_recall_macro:
  - 0.907033005011232
  - 0.9057519057519058
  - 0.9067429363841221
  - 0.9077627939142462
  - 0.9063582813582814
  train_recall_macro_oob:
  - 0.8974425436322792
  - 0.8972626472626474
  - 0.8982492633038657
  - 0.8991182572614108
  - 0.8981288981288982
  train_recall_micro:
  - 0.9070330050112321
  - 0.9057519057519058
  - 0.9067429363841221
  - 0.9077627939142462
  - 0.9063582813582813
  train_recall_micro_oob:
  - 0.8974425436322793
  - 0.8972626472626473
  - 0.8982492633038655
  - 0.8991182572614108
  - 0.8981288981288982
  train_recall_samples:
  - 0.9070330050112322
  - 0.9057519057519058
  - 0.9067429363841222
  - 0.9077627939142462
  - 0.9063582813582814
  train_recall_samples_oob:
  - 0.8974425436322794
  - 0.8972626472626474
  - 0.8982492633038656
  - 0.8991182572614108
  - 0.8981288981288982
  train_recall_weighted:
  - 0.9058142892810839
  - 0.9043774655476783
  - 0.9055010556321672
  - 0.906473390384766
  - 0.9049512203209642
  train_recall_weighted_oob:
  - 0.8963930359483121
  - 0.8961428881641648
  - 0.8971804713581194
  - 0.8979774042601883
  - 0.896876874643912
  train_roc_auc_macro:
  - 0.9767474952715461
  - 0.9787627992168874
  - 0.9793503648491194
  - 0.9783800344766598
  - 0.9774281116215846
  train_roc_auc_macro_oob:
  - 0.972795008372906
  - 0.975727431734671
  - 0.9756378412154926
  - 0.9761144542055354
  - 0.9738273565527802
  train_roc_auc_micro:
  - 0.9794263604662188
  - 0.9809861194686689
  - 0.981501749390828
  - 0.9809044621229237
  - 0.9804691698410126
  train_roc_auc_micro_oob:
  - 0.9757160905399866
  - 0.9782180555090617
  - 0.9779099324140776
  - 0.9787683082986656
  - 0.976871750466428
  train_roc_auc_samples:
  - 0.9648522550544324
  - 0.9702702702702704
  - 0.971086843473739
  - 0.9691130705394191
  - 0.9678144490644491
  train_roc_auc_samples_oob:
  - 0.9597200622083981
  - 0.9673466735966736
  - 0.9651586063442538
  - 0.9660918049792531
  - 0.9622920997920997
  train_roc_auc_weighted:
  - 0.9744030836769018
  - 0.9765321509385974
  - 0.9771819371097228
  - 0.9760086660495135
  - 0.9750305896478049
  train_roc_auc_weighted_oob:
  - 0.9701021480287866
  - 0.9732794718827767
  - 0.9732105752676827
  - 0.9736339819268736
  - 0.9711980204398202
start: 2023-12-22 21:38:11.875766
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
