active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAAAAAA8L8AAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:51:35.858511
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__2
  params: {}
hash: 8d0cd8fa86095bf0905a2ef28f773366facb503cf42497f0a1c3461c4990116e
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8d0cd8f_20231221T235118698899_embedding__2_CHD_49.yml
results:
  fit_time:
  - 5.763137340545654
  - 5.7147791385650635
  - 6.40699315071106
  - 6.2916035652160645
  - 6.897172212600708
  score_time:
  - 2.094562292098999
  - 2.133925437927246
  - 2.3134098052978516
  - 2.29239559173584
  - 2.2292516231536865
  test_average_precision_macro:
  - 0.4952273184097111
  - 0.5033046296087093
  - 0.5558662871045543
  - 0.5363932161663959
  - 0.5238009210888248
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6677850692325732
  - 0.672995094091365
  - 0.7108927933338982
  - 0.7028628349047035
  - 0.6899588889963646
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7801926926926928
  - 0.7960085085085084
  - 0.7980838477366254
  - 0.7735863095238095
  - 0.7826941986234022
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5976897799307125
  - 0.6149853812624524
  - 0.6753800821291899
  - 0.6557853082635721
  - 0.6520387818468547
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555555
  - 0.5729166666666666
  - 0.5781710914454277
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555556
  - 0.5729166666666666
  - 0.5781710914454278
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555556
  - 0.5729166666666667
  - 0.5781710914454277
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.44699752016825184
  - 0.44811126916390076
  - 0.4269260549748355
  - 0.4520594823295172
  - 0.45120366359304415
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4378612090881655
  - 0.4416673089278355
  - 0.42777934627606934
  - 0.44100559001243783
  - 0.448740179354397
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.39769150052465896
  - 0.40063091482649843
  - 0.38461538461538464
  - 0.40145985401459855
  - 0.4066390041493776
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.41565851565851575
  - 0.4180180180180181
  - 0.4021604938271605
  - 0.4183286951144094
  - 0.42671723556679314
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.30447538239471017
  - 0.3047353412423214
  - 0.288082970831537
  - 0.3088649599708772
  - 0.3068327216703456
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7892017017017015
  - 0.7960085085085087
  - 0.816602366255144
  - 0.7735863095238094
  - 0.7826941986234025
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - -0.030143306044180102
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - -0.035053808282979694
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - -0.00414086662499961
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - -0.052934586223926036
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8545621753843912
  - 0.8692364792924041
  - 0.8652372896518554
  - 0.8532361693048305
  - 0.8587126688743253
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.828828828828829
  - -3.6666666666666665
  - -3.759259259259259
  - -3.75
  - -3.7168141592920354
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.4309309309309309
  - -0.42792792792792794
  - -0.4444444444444444
  - -0.4270833333333333
  - -0.4218289085545723
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.43093093093093093
  - -0.42792792792792794
  - -0.4444444444444444
  - -0.4270833333333333
  - -0.4218289085545723
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4309309309309309
  - -0.427927927927928
  - -0.4444444444444444
  - -0.42708333333333337
  - -0.4218289085545722
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5530024798317481
  - -0.5518887308360994
  - -0.5730739450251645
  - -0.5479405176704828
  - -0.5487963364069558
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21989489489489492
  - -0.20220220220220222
  - -0.1909722222222222
  - -0.22043650793650796
  - -0.20857915437561458
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555555
  - 0.5729166666666666
  - 0.5781710914454277
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555556
  - 0.5729166666666666
  - 0.5781710914454278
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555556
  - 0.5729166666666667
  - 0.5781710914454277
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.44699752016825184
  - 0.44811126916390076
  - 0.4269260549748355
  - 0.4520594823295172
  - 0.45120366359304415
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555555
  - 0.5729166666666666
  - 0.5781710914454277
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555556
  - 0.5729166666666666
  - 0.5781710914454278
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5690690690690691
  - 0.5720720720720721
  - 0.5555555555555556
  - 0.5729166666666667
  - 0.5781710914454277
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.44699752016825184
  - 0.44811126916390076
  - 0.4269260549748355
  - 0.4520594823295172
  - 0.45120366359304415
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.548271362823267
  - 0.5738200176245457
  - 0.6043949277222341
  - 0.6197596185648009
  - 0.593124004180195
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7693821076921663
  - 0.7810839434544367
  - 0.7987394674105032
  - 0.7810127155074891
  - 0.7849025974025974
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7977977977977978
  - .nan
  - 0.7795634920634921
  - 0.7914208456243854
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5334372940467704
  - 0.5610017027637165
  - 0.6057228975872478
  - 0.59500810241376
  - 0.5914841280225895
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.807932607520518
  - 0.8236460775633563
  - 0.8175373292207645
  - 0.816223971759367
  - 0.8106417792438075
  train_average_precision_macro_oob:
  - 0.5213476694761364
  - 0.5660501992311381
  - 0.5409245968254214
  - 0.5382808209826446
  - 0.5357264233813047
  train_average_precision_micro:
  - 0.8876261567301089
  - 0.893248852779758
  - 0.8893387480495156
  - 0.8911162777690633
  - 0.8884208550884652
  train_average_precision_micro_oob:
  - 0.7135275570971764
  - 0.7264870713630321
  - 0.7142444059839521
  - 0.7232668433003456
  - 0.7206594044479588
  train_average_precision_samples:
  - 0.8844406906906905
  - 0.9024242992992992
  - 0.8885098185433756
  - 0.897435415099072
  - 0.8945292860734038
  train_average_precision_samples_oob:
  - 0.7849537037037039
  - 0.7962556306306305
  - 0.7875559284116331
  - 0.7902840481565085
  - 0.7837732528909
  train_average_precision_weighted:
  - 0.8748011980967851
  - 0.8820401398319186
  - 0.8778804929904895
  - 0.8792707783845437
  - 0.8766292535536122
  train_average_precision_weighted_oob:
  - 0.6543477928012268
  - 0.6969555099111877
  - 0.669027557297126
  - 0.6725094514252973
  - 0.6718885222621779
  train_f1_macro:
  - 0.6392642642642642
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355153
  - 0.63763197586727
  train_f1_macro_oob:
  - 0.5705705705705706
  - 0.5705705705705706
  - 0.5734526472781506
  - 0.5696012039127164
  - 0.5678733031674208
  train_f1_micro:
  - 0.6392642642642643
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355154
  - 0.6376319758672699
  train_f1_micro_oob:
  - 0.5705705705705706
  - 0.5705705705705706
  - 0.5734526472781506
  - 0.5696012039127163
  - 0.5678733031674208
  train_f1_samples:
  - 0.6392642642642643
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355154
  - 0.63763197586727
  train_f1_samples_oob:
  - 0.5705705705705705
  - 0.5705705705705705
  - 0.5734526472781506
  - 0.5696012039127164
  - 0.5678733031674208
  train_f1_weighted:
  - 0.5641665683150399
  - 0.5790880243800907
  - 0.5641530631185095
  - 0.5711691819373663
  - 0.5630720270387656
  train_f1_weighted_oob:
  - 0.44610920964632755
  - 0.44703378182018116
  - 0.45032287056846715
  - 0.44482537679773676
  - 0.44435494697274797
  train_jaccard_macro:
  - 0.49578988290746717
  - 0.5045152001189469
  - 0.49596683055677465
  - 0.5000603262009827
  - 0.49325200725123414
  train_jaccard_macro_oob:
  - 0.4403440330752699
  - 0.43992080702671577
  - 0.4425569562047706
  - 0.439557126929883
  - 0.43734505494675985
  train_jaccard_micro:
  - 0.46979310344827585
  - 0.48123436196830693
  - 0.47039473684210525
  - 0.4750277469478357
  - 0.4680321062828674
  train_jaccard_micro_oob:
  - 0.39915966386554624
  - 0.39915966386554624
  - 0.40198640878201775
  - 0.398211467648606
  - 0.39652448657187994
  train_jaccard_samples:
  - 0.49174271674271675
  - 0.5051382551382552
  - 0.4936198030157762
  - 0.4970224658712243
  - 0.4892382127676245
  train_jaccard_samples_oob:
  - 0.41712881712881716
  - 0.4173218673218674
  - 0.42034825726100894
  - 0.41638181231860694
  - 0.4139311668723434
  train_jaccard_weighted:
  - 0.3984112796971918
  - 0.4113596162194092
  - 0.3983163013416601
  - 0.4046039274039901
  - 0.3971744225318548
  train_jaccard_weighted_oob:
  - 0.3031096067499652
  - 0.30389850970945415
  - 0.30672711753821347
  - 0.3020039407899155
  - 0.3020601346258228
  train_label_ranking_average_precision_score:
  - 0.8889451951951943
  - 0.9091810560560551
  - 0.8907469550086988
  - 0.9042074241284166
  - 0.901316616390145
  train_label_ranking_average_precision_score_oob:
  - 0.7894582082082068
  - 0.8030123873873867
  - 0.7897930648769566
  - 0.7970560571858527
  - 0.7905605832076404
  train_matthews_corrcoef_macro:
  - 0.10307743618854902
  - 0.1312565206176526
  - 0.10248387108263846
  - 0.11177180741917177
  - 0.10513772320230126
  train_matthews_corrcoef_macro_oob:
  - 0.004434467425221287
  - 0.012605191466842608
  - 0.00448163227477722
  - 0.004446062844890154
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.31373228650914026
  - 0.3398872910812907
  - 0.30983486127038296
  - 0.32701222945284514
  - 0.3139217932486989
  train_matthews_corrcoef_micro_oob:
  - 0.022319813447223766
  - 0.03861439826388825
  - 0.022376171573999678
  - 0.022300825707042927
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.199128047443118
  - 0.23212695001638914
  - 0.19646771746570374
  - 0.21058422170591154
  - 0.19708930376696746
  train_matthews_corrcoef_samples_oob:
  - 0.0010072378277026079
  - 0.003143911922410973
  - 0.0022371364653243847
  - 0.000713832428931914
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.17043721954120356
  - 0.20644302059803948
  - 0.1690870252274265
  - 0.18291461178469778
  - 0.17225014151190196
  train_matthews_corrcoef_weighted_oob:
  - 0.007854235754016394
  - 0.02006970160867345
  - 0.007937773146941662
  - 0.007851475172373706
  - 0.0
  train_ndgc:
  - 0.9263515840718665
  - 0.9377731122642946
  - 0.9299022112192248
  - 0.9362357904709622
  - 0.9356327704370985
  train_ndgc_oob:
  - 0.8597463291172549
  - 0.8650789349955987
  - 0.8617648823780532
  - 0.8635754527737787
  - 0.8588768038318809
  train_neg_coverage_error:
  - -3.2927927927927927
  - -3.1824324324324325
  - -3.2550335570469797
  - -3.2460496613995486
  - -3.3076923076923075
  train_neg_coverage_error_oob:
  - -3.7882882882882885
  - -3.68018018018018
  - -3.7583892617449663
  - -3.760722347629797
  - -3.8122171945701355
  train_neg_hamming_loss_macro:
  - -0.3607357357357357
  - -0.3502252252252252
  - -0.360178970917226
  - -0.35590669676448455
  - -0.36236802413273
  train_neg_hamming_loss_macro_oob:
  - -0.4294294294294294
  - -0.42942942942942947
  - -0.42654735272184935
  - -0.43039879608728365
  - -0.4321266968325792
  train_neg_hamming_loss_micro:
  - -0.36073573573573575
  - -0.3502252252252252
  - -0.36017897091722595
  - -0.35590669676448455
  - -0.36236802413273
  train_neg_hamming_loss_micro_oob:
  - -0.4294294294294294
  - -0.4294294294294294
  - -0.42654735272184935
  - -0.43039879608728365
  - -0.4321266968325792
  train_neg_hamming_loss_samples:
  - -0.3607357357357357
  - -0.3502252252252252
  - -0.36017897091722595
  - -0.35590669676448455
  - -0.36236802413273
  train_neg_hamming_loss_samples_oob:
  - -0.4294294294294294
  - -0.42942942942942947
  - -0.42654735272184935
  - -0.43039879608728365
  - -0.4321266968325792
  train_neg_hamming_loss_weighted:
  - -0.4358334316849601
  - -0.4209119756199094
  - -0.43584693688149034
  - -0.4288308180626337
  - -0.4369279729612345
  train_neg_hamming_loss_weighted_oob:
  - -0.5538907903536724
  - -0.5529662181798188
  - -0.5496771294315328
  - -0.5551746232022633
  - -0.555645053027252
  train_neg_label_ranking_loss:
  - -0.11343218218218218
  - -0.09625875875875876
  - -0.11013547104151131
  - -0.10094055680963131
  - -0.10637883358471593
  train_neg_label_ranking_loss_oob:
  - -0.2103666166166166
  - -0.1929804804804805
  - -0.20824633358190406
  - -0.20197516930022572
  - -0.2128519356460533
  train_precision_macro:
  - 0.6392642642642642
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355153
  - 0.63763197586727
  train_precision_macro_oob:
  - 0.5705705705705706
  - 0.5705705705705706
  - 0.5734526472781506
  - 0.5696012039127164
  - 0.5678733031674208
  train_precision_micro:
  - 0.6392642642642643
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355154
  - 0.6376319758672699
  train_precision_micro_oob:
  - 0.5705705705705706
  - 0.5705705705705706
  - 0.5734526472781506
  - 0.5696012039127163
  - 0.5678733031674208
  train_precision_samples:
  - 0.6392642642642643
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355154
  - 0.63763197586727
  train_precision_samples_oob:
  - 0.5705705705705705
  - 0.5705705705705705
  - 0.5734526472781506
  - 0.5696012039127164
  - 0.5678733031674208
  train_precision_weighted:
  - 0.5641665683150399
  - 0.5790880243800907
  - 0.5641530631185095
  - 0.5711691819373663
  - 0.5630720270387656
  train_precision_weighted_oob:
  - 0.44610920964632755
  - 0.44703378182018116
  - 0.45032287056846715
  - 0.44482537679773676
  - 0.44435494697274797
  train_recall_macro:
  - 0.6392642642642642
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355153
  - 0.63763197586727
  train_recall_macro_oob:
  - 0.5705705705705706
  - 0.5705705705705706
  - 0.5734526472781506
  - 0.5696012039127164
  - 0.5678733031674208
  train_recall_micro:
  - 0.6392642642642643
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355154
  - 0.6376319758672699
  train_recall_micro_oob:
  - 0.5705705705705706
  - 0.5705705705705706
  - 0.5734526472781506
  - 0.5696012039127163
  - 0.5678733031674208
  train_recall_samples:
  - 0.6392642642642643
  - 0.6497747747747747
  - 0.639821029082774
  - 0.6440933032355154
  - 0.63763197586727
  train_recall_samples_oob:
  - 0.5705705705705705
  - 0.5705705705705705
  - 0.5734526472781506
  - 0.5696012039127164
  - 0.5678733031674208
  train_recall_weighted:
  - 0.5641665683150399
  - 0.5790880243800907
  - 0.5641530631185095
  - 0.5711691819373663
  - 0.5630720270387656
  train_recall_weighted_oob:
  - 0.44610920964632755
  - 0.44703378182018116
  - 0.45032287056846715
  - 0.44482537679773676
  - 0.44435494697274797
  train_roc_auc_macro:
  - 0.7950227496960678
  - 0.8248109153906601
  - 0.814855240305265
  - 0.8175733089665741
  - 0.78774638740753
  train_roc_auc_macro_oob:
  - 0.5731034570377104
  - 0.6268115242219235
  - 0.6185917754084366
  - 0.6078735871946805
  - 0.5665799503245197
  train_roc_auc_micro:
  - 0.892317400266206
  - 0.9000306896728102
  - 0.894892505959264
  - 0.8968228771318154
  - 0.8918554983092644
  train_roc_auc_micro_oob:
  - 0.7848245369425415
  - 0.8049113821329783
  - 0.7907879297559756
  - 0.7933392404113405
  - 0.7858067439375714
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8128958061045395
  - 0.8221212005610274
  - 0.8207746331020157
  - 0.8169405558341857
  - 0.8103623920088144
  train_roc_auc_weighted_oob:
  - 0.6093774864016509
  - 0.6513749315311949
  - 0.6325596995928238
  - 0.6418757410572573
  - 0.6258621894139734
start: 2023-12-21 23:51:18.698899
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
