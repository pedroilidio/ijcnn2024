active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZm9r+gmZmZmZn5P0AzMzMzM+M/oJmZmZmZ+T8wMzMzMzMDwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b+QmZmZmZkRwODMzMzMzARA4MzMzMzMBEAAmZmZmZnZvw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:51:53.855068
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__3
  params: {}
hash: 51e9591aef85d475d42b7c93f45105923953397027b4b550d05a1ea6c2a7e367
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/51e9591_20231222T015127468234_embedding_proba__3_emotions.yml
results:
  fit_time:
  - 10.34841513633728
  - 10.389128923416138
  - 10.921400547027588
  - 10.860913753509521
  - 11.519194841384888
  score_time:
  - 3.7279467582702637
  - 3.784233570098877
  - 3.590482234954834
  - 3.6445882320404053
  - 4.028070688247681
  test_average_precision_macro:
  - 0.7594353598002717
  - 0.7371862234272396
  - 0.7209532709782379
  - 0.7477271361818634
  - 0.7750335299108692
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7621620246268919
  - 0.7500585993087507
  - 0.7365004140318017
  - 0.7633322194488585
  - 0.7846128371735842
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8012371615312791
  - 0.8033875338753387
  - 0.8252634099616857
  - 0.7799808429118774
  - 0.8434173669467785
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7615666403451617
  - 0.7345050768651562
  - 0.7238061841983086
  - 0.7533128419139066
  - 0.7721930679389912
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8165266106442576
  - 0.804878048780488
  - 0.8275862068965517
  - 0.8017241379310344
  - 0.8319327731092435
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8165266106442577
  - 0.8048780487804879
  - 0.8275862068965517
  - 0.8017241379310345
  - 0.8319327731092437
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8165266106442579
  - 0.804878048780488
  - 0.8275862068965518
  - 0.8017241379310345
  - 0.8319327731092437
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8101365546218487
  - 0.7950925210609572
  - 0.8290684974254954
  - 0.8002214489085732
  - 0.8258178271308524
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6927102092177151
  - 0.678411458201781
  - 0.7080945006324771
  - 0.6729280105511659
  - 0.7163169608852237
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6899408284023668
  - 0.673469387755102
  - 0.7058823529411765
  - 0.6690647482014388
  - 0.7122302158273381
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7281312525010004
  - 0.7077429345722028
  - 0.7350164203612478
  - 0.6985632183908046
  - 0.7439775910364146
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6836673574924139
  - 0.6646280860317394
  - 0.7100250561288509
  - 0.670256861124805
  - 0.7069524389004122
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8012371615312791
  - 0.8033875338753382
  - 0.8252634099616858
  - 0.7799808429118771
  - 0.8434173669467784
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.554146939992387
  - 0.5263428291456921
  - 0.5754930997608524
  - 0.5194378442275206
  - 0.5978320404784278
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5618244478356271
  - 0.5302542276692367
  - 0.5929802578241556
  - 0.5285830683730611
  - 0.6028266046734245
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5603112899341118
  - 0.5374525536669476
  - 0.5948461154563751
  - 0.49872132346256987
  - 0.6107910004511916
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5508559544586059
  - 0.5142398962116421
  - 0.5868112914763691
  - 0.5240408717825342
  - 0.592227472034641
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8610139912509903
  - 0.8645512522647031
  - 0.8798198395345049
  - 0.8460444783696675
  - 0.894949912255559
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.7815126050420167
  - -2.6260162601626016
  - -2.6724137931034484
  - -2.7758620689655173
  - -2.5798319327731094
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1834733893557423
  - -0.19512195121951217
  - -0.1724137931034483
  - -0.19827586206896552
  - -0.1680672268907563
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.18347338935574228
  - -0.1951219512195122
  - -0.1724137931034483
  - -0.19827586206896552
  - -0.16806722689075632
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18347338935574226
  - -0.19512195121951217
  - -0.17241379310344823
  - -0.19827586206896552
  - -0.16806722689075626
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.18986344537815128
  - -0.20490747893904276
  - -0.1709315025745046
  - -0.19977855109142678
  - -0.17418217286914767
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.173062558356676
  - -0.15182926829268292
  - -0.1391522988505747
  - -0.16314655172413794
  - -0.12530345471521942
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8165266106442576
  - 0.804878048780488
  - 0.8275862068965517
  - 0.8017241379310344
  - 0.8319327731092435
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8165266106442577
  - 0.8048780487804879
  - 0.8275862068965517
  - 0.8017241379310345
  - 0.8319327731092437
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8165266106442579
  - 0.804878048780488
  - 0.8275862068965518
  - 0.8017241379310345
  - 0.8319327731092437
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8101365546218487
  - 0.7950925210609572
  - 0.8290684974254954
  - 0.8002214489085732
  - 0.8258178271308524
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8165266106442576
  - 0.804878048780488
  - 0.8275862068965517
  - 0.8017241379310344
  - 0.8319327731092435
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8165266106442577
  - 0.8048780487804879
  - 0.8275862068965517
  - 0.8017241379310345
  - 0.8319327731092437
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8165266106442579
  - 0.804878048780488
  - 0.8275862068965518
  - 0.8017241379310345
  - 0.8319327731092437
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8101365546218487
  - 0.7950925210609572
  - 0.8290684974254954
  - 0.8002214489085732
  - 0.8258178271308524
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8556137955014292
  - 0.8563397131187305
  - 0.8502734530069359
  - 0.8571280027167568
  - 0.8756206276335737
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8674471574344024
  - 0.8731281234410146
  - 0.8707311264586807
  - 0.8761467889908258
  - 0.8937864431486879
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8269374416433241
  - 0.8481707317073169
  - 0.8608477011494253
  - 0.836853448275862
  - 0.8746965452847806
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.853951444470174
  - 0.8530544425838681
  - 0.8506993849359249
  - 0.859905321038216
  - 0.8719262113308399
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9868485997224775
  - 0.9834243948334128
  - 0.9863385543485715
  - 0.9839974115460257
  - 0.9841907338602036
  train_average_precision_macro_oob:
  - 0.9260335085256033
  - 0.9125131603185492
  - 0.9243296990320716
  - 0.9187623508781281
  - 0.9209559968288499
  train_average_precision_micro:
  - 0.9844932732812254
  - 0.9833772699324912
  - 0.9865935442580839
  - 0.98361227883326
  - 0.9827747064503776
  train_average_precision_micro_oob:
  - 0.927073336667851
  - 0.923288834384767
  - 0.9341132579595208
  - 0.9253053281152073
  - 0.9247401878956202
  train_average_precision_samples:
  - 0.979957805907173
  - 0.9799054373522459
  - 0.9864896342883764
  - 0.9794665734917307
  - 0.979746835443038
  train_average_precision_samples_oob:
  - 0.9319385841537742
  - 0.9268085106382979
  - 0.9356860004658746
  - 0.9312136035406475
  - 0.923441162681669
  train_average_precision_weighted:
  - 0.98734338277116
  - 0.9841587341203275
  - 0.987070340019844
  - 0.9848613456324308
  - 0.984911235772441
  train_average_precision_weighted_oob:
  - 0.9287119866084086
  - 0.917217413676281
  - 0.9285184547576453
  - 0.9222942844901045
  - 0.9247113761006202
  train_f1_macro:
  - 0.9549929676511955
  - 0.9503546099290779
  - 0.9598183088749126
  - 0.9535290006988122
  - 0.9549929676511955
  train_f1_macro_oob:
  - 0.9011954992967652
  - 0.897517730496454
  - 0.9091544374563242
  - 0.9011180992313069
  - 0.8980309423347399
  train_f1_micro:
  - 0.9549929676511955
  - 0.950354609929078
  - 0.9598183088749126
  - 0.953529000698812
  - 0.9549929676511955
  train_f1_micro_oob:
  - 0.9011954992967651
  - 0.8975177304964539
  - 0.9091544374563243
  - 0.9011180992313068
  - 0.8980309423347398
  train_f1_samples:
  - 0.9549929676511955
  - 0.950354609929078
  - 0.9598183088749127
  - 0.9535290006988121
  - 0.9549929676511956
  train_f1_samples_oob:
  - 0.901195499296765
  - 0.897517730496454
  - 0.9091544374563244
  - 0.9011180992313067
  - 0.8980309423347398
  train_f1_weighted:
  - 0.9538227657177768
  - 0.9508551416440788
  - 0.960661689108223
  - 0.9541116057757992
  - 0.954877618038452
  train_f1_weighted_oob:
  - 0.9000658686064494
  - 0.8971839094245483
  - 0.9096594414073302
  - 0.9013473723882883
  - 0.8981136758500868
  train_jaccard_macro:
  - 0.9141334316755348
  - 0.9056995920917227
  - 0.9228540277874117
  - 0.9114265882259298
  - 0.9139806110993819
  train_jaccard_macro_oob:
  - 0.8215273986305925
  - 0.8156680817022094
  - 0.8346052082708552
  - 0.8213150950141341
  - 0.8163872303569343
  train_jaccard_micro:
  - 0.9138627187079408
  - 0.9054054054054054
  - 0.9227410144440712
  - 0.9111853088480801
  - 0.9138627187079408
  train_jaccard_micro_oob:
  - 0.82016
  - 0.8140881312319074
  - 0.8334401024983985
  - 0.8200317965023848
  - 0.8149329929802169
  train_jaccard_samples:
  - 0.925557564798071
  - 0.9181357649442756
  - 0.9334830787660977
  - 0.9230308475591494
  - 0.9255073337351819
  train_jaccard_samples_oob:
  - 0.8412698412698412
  - 0.836595744680851
  - 0.8540181691125087
  - 0.8425376859339122
  - 0.8372011251758087
  train_jaccard_weighted:
  - 0.9119803540622908
  - 0.9065941399353162
  - 0.9244212954827785
  - 0.9124784343017389
  - 0.9137571374589311
  train_jaccard_weighted_oob:
  - 0.8195122943717137
  - 0.8149783701349523
  - 0.8353646550140875
  - 0.8215852465523725
  - 0.816391863641139
  train_label_ranking_average_precision_score:
  - 0.9799578059071729
  - 0.9799054373522456
  - 0.9864896342883763
  - 0.9794665734917304
  - 0.9797468354430378
  train_label_ranking_average_precision_score_oob:
  - 0.9319385841537736
  - 0.9268085106382971
  - 0.935686000465874
  - 0.9312136035406472
  - 0.9234411626816684
  train_matthews_corrcoef_macro:
  - 0.8927430113377278
  - 0.8805742107193545
  - 0.9020780997907804
  - 0.8872920504060477
  - 0.8915527046622745
  train_matthews_corrcoef_macro_oob:
  - 0.7601842082283189
  - 0.7515233511019256
  - 0.7768593189444473
  - 0.7589873915083604
  - 0.7503012052190424
  train_matthews_corrcoef_micro:
  - 0.8940691009469752
  - 0.8838568603743263
  - 0.905399377929966
  - 0.8906501204341308
  - 0.8940825121484512
  train_matthews_corrcoef_micro_oob:
  - 0.7657649818152374
  - 0.7580864056145405
  - 0.783920264333529
  - 0.7659875377277221
  - 0.7581737813965199
  train_matthews_corrcoef_samples:
  - 0.8901780573000851
  - 0.8759906755439014
  - 0.9049601385058644
  - 0.8937118723534434
  - 0.8898482451100994
  train_matthews_corrcoef_samples_oob:
  - 0.7687191800182971
  - 0.7562241463683878
  - 0.7775770736096406
  - 0.7728993165414836
  - 0.7557876985915399
  train_matthews_corrcoef_weighted:
  - 0.8920543629096357
  - 0.8835055805067048
  - 0.9054704541101295
  - 0.8903947394738132
  - 0.8931895093740847
  train_matthews_corrcoef_weighted_oob:
  - 0.7622165551239587
  - 0.7551707270033345
  - 0.7816523654483104
  - 0.7636714849639368
  - 0.7551570582747588
  train_ndgc:
  - 0.9861810754854939
  - 0.9867782977285612
  - 0.9913371728261654
  - 0.9868966228820907
  - 0.9869206800713775
  train_ndgc_oob:
  - 0.9541718806443745
  - 0.95173299490443
  - 0.9576526923207395
  - 0.9543897518946268
  - 0.9478264075364893
  train_neg_coverage_error:
  - -1.9324894514767932
  - -1.9638297872340424
  - -1.920335429769392
  - -1.9580712788259957
  - -1.959915611814346
  train_neg_coverage_error_oob:
  - -2.160337552742616
  - -2.2127659574468086
  - -2.150943396226415
  - -2.1635220125786163
  - -2.1666666666666665
  train_neg_hamming_loss_macro:
  - -0.045007032348804495
  - -0.04964539007092198
  - -0.040181691125087356
  - -0.046470999301187976
  - -0.04500703234880451
  train_neg_hamming_loss_macro_oob:
  - -0.09880450070323488
  - -0.1024822695035461
  - -0.09084556254367575
  - -0.09888190076869323
  - -0.10196905766526021
  train_neg_hamming_loss_micro:
  - -0.0450070323488045
  - -0.04964539007092199
  - -0.04018169112508735
  - -0.04647099930118798
  - -0.0450070323488045
  train_neg_hamming_loss_micro_oob:
  - -0.09880450070323488
  - -0.1024822695035461
  - -0.09084556254367575
  - -0.09888190076869321
  - -0.1019690576652602
  train_neg_hamming_loss_samples:
  - -0.0450070323488045
  - -0.04964539007092198
  - -0.04018169112508735
  - -0.04647099930118798
  - -0.0450070323488045
  train_neg_hamming_loss_samples_oob:
  - -0.09880450070323488
  - -0.1024822695035461
  - -0.09084556254367575
  - -0.09888190076869321
  - -0.1019690576652602
  train_neg_hamming_loss_weighted:
  - -0.04617723428222311
  - -0.04914485835592123
  - -0.039338310891777105
  - -0.04588839422420088
  - -0.045122381961548004
  train_neg_hamming_loss_weighted_oob:
  - -0.0999341313935506
  - -0.10281609057545156
  - -0.0903405585926698
  - -0.09865262761171179
  - -0.10188632414991312
  train_neg_label_ranking_loss:
  - -0.011433427097984061
  - -0.012488179669030732
  - -0.009521313766596786
  - -0.014267412066154204
  - -0.014703469292076886
  train_neg_label_ranking_loss_oob:
  - -0.048740037505860284
  - -0.05213356973995271
  - -0.04624970882832518
  - -0.04841020265548568
  - -0.05029301453352086
  train_precision_macro:
  - 0.9549929676511955
  - 0.9503546099290779
  - 0.9598183088749126
  - 0.9535290006988122
  - 0.9549929676511955
  train_precision_macro_oob:
  - 0.9011954992967652
  - 0.897517730496454
  - 0.9091544374563242
  - 0.9011180992313069
  - 0.8980309423347399
  train_precision_micro:
  - 0.9549929676511955
  - 0.950354609929078
  - 0.9598183088749126
  - 0.953529000698812
  - 0.9549929676511955
  train_precision_micro_oob:
  - 0.9011954992967651
  - 0.8975177304964539
  - 0.9091544374563243
  - 0.9011180992313068
  - 0.8980309423347398
  train_precision_samples:
  - 0.9549929676511955
  - 0.950354609929078
  - 0.9598183088749127
  - 0.9535290006988121
  - 0.9549929676511956
  train_precision_samples_oob:
  - 0.901195499296765
  - 0.897517730496454
  - 0.9091544374563244
  - 0.9011180992313067
  - 0.8980309423347398
  train_precision_weighted:
  - 0.9538227657177768
  - 0.9508551416440788
  - 0.960661689108223
  - 0.9541116057757992
  - 0.954877618038452
  train_precision_weighted_oob:
  - 0.9000658686064494
  - 0.8971839094245483
  - 0.9096594414073302
  - 0.9013473723882883
  - 0.8981136758500868
  train_recall_macro:
  - 0.9549929676511955
  - 0.9503546099290779
  - 0.9598183088749126
  - 0.9535290006988122
  - 0.9549929676511955
  train_recall_macro_oob:
  - 0.9011954992967652
  - 0.897517730496454
  - 0.9091544374563242
  - 0.9011180992313069
  - 0.8980309423347399
  train_recall_micro:
  - 0.9549929676511955
  - 0.950354609929078
  - 0.9598183088749126
  - 0.953529000698812
  - 0.9549929676511955
  train_recall_micro_oob:
  - 0.9011954992967651
  - 0.8975177304964539
  - 0.9091544374563243
  - 0.9011180992313068
  - 0.8980309423347398
  train_recall_samples:
  - 0.9549929676511955
  - 0.950354609929078
  - 0.9598183088749127
  - 0.9535290006988121
  - 0.9549929676511956
  train_recall_samples_oob:
  - 0.901195499296765
  - 0.897517730496454
  - 0.9091544374563244
  - 0.9011180992313067
  - 0.8980309423347398
  train_recall_weighted:
  - 0.9538227657177768
  - 0.9508551416440788
  - 0.960661689108223
  - 0.9541116057757992
  - 0.954877618038452
  train_recall_weighted_oob:
  - 0.9000658686064494
  - 0.8971839094245483
  - 0.9096594414073302
  - 0.9013473723882883
  - 0.8981136758500868
  train_roc_auc_macro:
  - 0.9935695771961918
  - 0.9921748076576967
  - 0.9935792964283362
  - 0.992385955420921
  - 0.9921874957298261
  train_roc_auc_macro_oob:
  - 0.9608245504752552
  - 0.9601308143095189
  - 0.9642699445977659
  - 0.9607852218272424
  - 0.9599171683571361
  train_roc_auc_micro:
  - 0.9921403176655277
  - 0.9916521392231643
  - 0.993241334037361
  - 0.9917114889349774
  - 0.9911816649736818
  train_roc_auc_micro_oob:
  - 0.961955743835996
  - 0.9604956575143286
  - 0.9654976952606567
  - 0.9610097545411034
  - 0.9607621894911811
  train_roc_auc_samples:
  - 0.988566572902016
  - 0.9875118203309693
  - 0.9904786862334033
  - 0.9857325879338458
  - 0.9852965307079231
  train_roc_auc_samples_oob:
  - 0.9512599624941398
  - 0.9478664302600474
  - 0.9537502911716748
  - 0.9515897973445144
  - 0.9497069854664792
  train_roc_auc_weighted:
  - 0.9934814264584205
  - 0.9921833801464683
  - 0.9937123893317042
  - 0.9925001644298096
  - 0.9921597589826568
  train_roc_auc_weighted_oob:
  - 0.9610846914446117
  - 0.9611230799452617
  - 0.9653363734568016
  - 0.9614381190227572
  - 0.9605858829644839
start: 2023-12-22 01:51:27.468234
wrapper: null
