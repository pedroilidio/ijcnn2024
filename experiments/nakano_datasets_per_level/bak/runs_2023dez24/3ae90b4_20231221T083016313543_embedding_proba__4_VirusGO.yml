active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b9gZmZmZmYWwKCZmZmZmRFAwMzMzMzMBMCgmZmZmZkVQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:30:34.602577
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__4
  params: {}
hash: 3ae90b4b09108fa0653f0da08efb17ffbfcd2016a9c5542ab3a00e25d12a38d8
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3ae90b4_20231221T083016313543_embedding_proba__4_VirusGO.yml
results:
  fit_time:
  - 9.39138650894165
  - 9.401441097259521
  - 9.474535942077637
  - 9.472526550292969
  - 9.711469173431396
  score_time:
  - 2.9511375427246094
  - 2.804013967514038
  - 2.8484914302825928
  - 2.7664575576782227
  - 2.86193585395813
  test_average_precision_macro:
  - 0.8298906200191635
  - 0.9362987894808633
  - 0.9775152892821294
  - 0.9604284618603504
  - 0.8527018230078415
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7750927673961252
  - 0.908305612248224
  - 0.9434639523063708
  - 0.9415493358299523
  - 0.8035310925119741
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8930232558139535
  - 0.9556737588652482
  - 0.9468468468468468
  - 0.9678030303030302
  - 0.9097222222222222
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8260226692699527
  - 0.9210930721948751
  - 0.967755426390196
  - 0.9633405838514199
  - 0.8216400646996621
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8062015503875969
  - 0.8262411347517732
  - 0.7882882882882881
  - 0.8143939393939393
  - 0.7731481481481483
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8062015503875969
  - 0.8262411347517731
  - 0.7882882882882883
  - 0.8143939393939394
  - 0.7731481481481481
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8062015503875972
  - 0.8262411347517734
  - 0.7882882882882883
  - 0.8143939393939396
  - 0.7731481481481481
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7054263565891472
  - 0.7250730079265749
  - 0.6773303916161059
  - 0.7196969696969697
  - 0.6305555555555555
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6969410051956032
  - 0.7243603459902479
  - 0.6749121650137075
  - 0.7064222790565502
  - 0.6630300630300631
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6753246753246753
  - 0.7039274924471299
  - 0.6505576208178439
  - 0.6869009584664537
  - 0.630188679245283
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6838316722037653
  - 0.7082066869300914
  - 0.6602316602316604
  - 0.6915584415584417
  - 0.6415343915343916
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5617028976113424
  - 0.5826374395073933
  - 0.5320706153320538
  - 0.5772127776941979
  - 0.48340243540243544
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8930232558139535
  - 0.9556737588652483
  - 0.9468468468468468
  - 0.9678030303030302
  - 0.9097222222222222
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03968337294064481
  - 0.04459849843997146
  - 0.04564354645876384
  - 0.06406221326384731
  - 0.02978290575576482
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12773374539027066
  - 0.17986923354612536
  - 0.17915489095645087
  - 0.17855378705596012
  - 0.12426528262196276
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.04186046511627907
  - 0.0425531914893617
  - 0.05405405405405406
  - 0.037101262091674456
  - 0.027777777777777776
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.07936674588128963
  - 0.09444387904935132
  - 0.08942409102125161
  - 0.12812442652769462
  - 0.06075712774176023
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9227686615082177
  - 0.9671337427821317
  - 0.9638609447404679
  - 0.9768483431998418
  - 0.9349127050913045
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6046511627906976
  - -1.1914893617021276
  - -1.5135135135135136
  - -1.2727272727272727
  - -1.6388888888888888
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19379844961240308
  - -0.17375886524822692
  - -0.21171171171171174
  - -0.18560606060606058
  - -0.22685185185185186
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1937984496124031
  - -0.17375886524822695
  - -0.21171171171171171
  - -0.1856060606060606
  - -0.22685185185185186
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19379844961240308
  - -0.17375886524822695
  - -0.21171171171171171
  - -0.18560606060606058
  - -0.22685185185185183
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2945736434108527
  - -0.27492699207342514
  - -0.3226696083838941
  - -0.2803030303030303
  - -0.3694444444444444
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07583979328165374
  - -0.022340425531914895
  - -0.02972972972972973
  - -0.021022727272727273
  - -0.04861111111111111
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8062015503875969
  - 0.8262411347517732
  - 0.7882882882882881
  - 0.8143939393939393
  - 0.7731481481481483
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8062015503875969
  - 0.8262411347517731
  - 0.7882882882882883
  - 0.8143939393939394
  - 0.7731481481481481
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8062015503875972
  - 0.8262411347517734
  - 0.7882882882882883
  - 0.8143939393939396
  - 0.7731481481481481
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7054263565891472
  - 0.7250730079265749
  - 0.6773303916161059
  - 0.7196969696969697
  - 0.6305555555555555
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8062015503875969
  - 0.8262411347517732
  - 0.7882882882882881
  - 0.8143939393939393
  - 0.7731481481481483
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8062015503875969
  - 0.8262411347517731
  - 0.7882882882882883
  - 0.8143939393939394
  - 0.7731481481481481
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8062015503875972
  - 0.8262411347517734
  - 0.7882882882882883
  - 0.8143939393939396
  - 0.7731481481481481
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7054263565891472
  - 0.7250730079265749
  - 0.6773303916161059
  - 0.7196969696969697
  - 0.6305555555555555
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9275988173046997
  - 0.9803953734215775
  - 0.988851752822341
  - 0.9840413943355119
  - 0.9392139045758005
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9440181869849389
  - 0.9844665138782785
  - 0.9854901498171523
  - 0.9815888796833288
  - 0.9531325301204818
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9241602067183462
  - 0.9776595744680852
  - 0.9702702702702702
  - 0.9789772727272728
  - 0.9513888888888888
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9302832244008714
  - 0.9679742493094539
  - 0.9796536796536798
  - 0.9808278867102397
  - 0.9103779239766081
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9579986315757001
  - 0.9436731830605316
  - 0.9637448967130648
  - 0.9470279660861349
  - 0.96873014567147
  train_average_precision_macro_oob:
  - 0.9275601399193002
  - 0.8921386334230611
  - 0.9089016165898892
  - 0.8861681489585261
  - 0.9179870370039406
  train_average_precision_micro:
  - 0.959535338895216
  - 0.939905696285849
  - 0.9469187550788938
  - 0.9292235188525344
  - 0.9580647962137064
  train_average_precision_micro_oob:
  - 0.9189470448354492
  - 0.8903624158695133
  - 0.8926332578144732
  - 0.8615438300543113
  - 0.9106638817747995
  train_average_precision_samples:
  - 0.9689024390243901
  - 0.9640625
  - 0.9604901960784312
  - 0.9657464212678936
  - 0.9605263157894737
  train_average_precision_samples_oob:
  - 0.9630081300813008
  - 0.9375
  - 0.9420588235294118
  - 0.9485685071574642
  - 0.9391812865497078
  train_average_precision_weighted:
  - 0.9675925416537345
  - 0.9500299102441443
  - 0.9597651916916496
  - 0.9423309778942831
  - 0.9682636507547109
  train_average_precision_weighted_oob:
  - 0.9350499969667868
  - 0.9024813720898809
  - 0.9090582378762299
  - 0.874186093732474
  - 0.9251753239025445
  train_f1_macro:
  - 0.8180894308943089
  - 0.8156249999999999
  - 0.8225490196078432
  - 0.8179959100204498
  - 0.8265107212475633
  train_f1_macro_oob:
  - 0.7997967479674797
  - 0.7979166666666666
  - 0.8058823529411766
  - 0.8016359918200409
  - 0.8118908382066277
  train_f1_micro:
  - 0.818089430894309
  - 0.815625
  - 0.8225490196078431
  - 0.8179959100204499
  - 0.8265107212475633
  train_f1_micro_oob:
  - 0.7997967479674797
  - 0.7979166666666667
  - 0.8058823529411765
  - 0.8016359918200409
  - 0.8118908382066277
  train_f1_samples:
  - 0.8180894308943089
  - 0.815625
  - 0.822549019607843
  - 0.8179959100204498
  - 0.8265107212475632
  train_f1_samples_oob:
  - 0.7997967479674795
  - 0.7979166666666666
  - 0.8058823529411763
  - 0.8016359918200409
  - 0.8118908382066276
  train_f1_weighted:
  - 0.7237592525178984
  - 0.7250310945273633
  - 0.7311214140828745
  - 0.7240179470744438
  - 0.7420531526836894
  train_f1_weighted_oob:
  - 0.6863548113093072
  - 0.6888681592039801
  - 0.6971022891915386
  - 0.69038244361017
  - 0.7126107347576864
  train_jaccard_macro:
  - 0.7103221845783869
  - 0.7062521478652122
  - 0.7160223332032226
  - 0.7100845773006346
  - 0.7199708057056742
  train_jaccard_macro_oob:
  - 0.6910465854254393
  - 0.687311365096056
  - 0.6981496012342902
  - 0.6928908245399428
  - 0.7038721105082146
  train_jaccard_micro:
  - 0.6921754084264833
  - 0.6886543535620053
  - 0.6985845129059117
  - 0.6920415224913494
  - 0.7043189368770764
  train_jaccard_micro_oob:
  - 0.6663844199830652
  - 0.6637781629116117
  - 0.6748768472906403
  - 0.6689419795221843
  - 0.6833470057424118
  train_jaccard_samples:
  - 0.70267131242741
  - 0.6991071428571429
  - 0.7084033613445377
  - 0.7020157756354075
  - 0.7145641882483988
  train_jaccard_samples_oob:
  - 0.6726190476190477
  - 0.6709821428571429
  - 0.6802521008403362
  - 0.6774758983347942
  - 0.6899192425508215
  train_jaccard_weighted:
  - 0.580210659563068
  - 0.5820114380789969
  - 0.5886257693907714
  - 0.5805277183967541
  - 0.6014747571496616
  train_jaccard_weighted_oob:
  - 0.5408078356677856
  - 0.5433178317521297
  - 0.5521414668056605
  - 0.5452037684399906
  - 0.569059228759438
  train_label_ranking_average_precision_score:
  - 0.9689024390243903
  - 0.9640625
  - 0.9604901960784313
  - 0.9657464212678936
  - 0.9605263157894737
  train_label_ranking_average_precision_score_oob:
  - 0.9630081300813007
  - 0.9375
  - 0.9420588235294116
  - 0.9485685071574641
  - 0.9391812865497076
  train_matthews_corrcoef_macro:
  - 0.10555719501836591
  - 0.1069040688796739
  - 0.10558374121289897
  - 0.10784464922547603
  - 0.1126948053798592
  train_matthews_corrcoef_macro_oob:
  - 0.04374160400157975
  - 0.04983217211406541
  - 0.04662443444133782
  - 0.0460282052894802
  - 0.06730520257305576
  train_matthews_corrcoef_micro:
  - 0.2984741036996809
  - 0.3111648669684846
  - 0.2978578697000749
  - 0.30512283641130433
  - 0.31257891634134194
  train_matthews_corrcoef_micro_oob:
  - 0.1260955644732816
  - 0.1624731686892406
  - 0.14080399929021134
  - 0.16170862856041612
  - 0.18999785561882773
  train_matthews_corrcoef_samples:
  - 0.12294071744005108
  - 0.12932562367689426
  - 0.1186016332951081
  - 0.12306530218570189
  - 0.13390272863216976
  train_matthews_corrcoef_samples_oob:
  - 0.01990799429309361
  - 0.037264235376052376
  - 0.020763659577262963
  - 0.048250988123112584
  - 0.04833281324015995
  train_matthews_corrcoef_weighted:
  - 0.2157519627415731
  - 0.21787652393015125
  - 0.21559621084994368
  - 0.2200874676840203
  - 0.2274302095840565
  train_matthews_corrcoef_weighted_oob:
  - 0.08940496112238937
  - 0.10170970651947231
  - 0.09553615850963294
  - 0.09239382526147001
  - 0.13603324157293079
  train_ndgc:
  - 0.9789891031204587
  - 0.9749356770071591
  - 0.9712828220442763
  - 0.9759258296878506
  - 0.9713415605164915
  train_ndgc_oob:
  - 0.975233954751777
  - 0.9558830824593063
  - 0.9581432456201782
  - 0.9635989964385552
  - 0.9563072429340327
  train_neg_coverage_error:
  - -1.3475609756097562
  - -1.38125
  - -1.3058823529411765
  - -1.3312883435582823
  - -1.286549707602339
  train_neg_coverage_error_oob:
  - -1.3902439024390243
  - -1.45625
  - -1.3764705882352941
  - -1.3987730061349692
  - -1.391812865497076
  train_neg_hamming_loss_macro:
  - -0.18191056910569106
  - -0.18437500000000004
  - -0.17745098039215687
  - -0.1820040899795501
  - -0.1734892787524366
  train_neg_hamming_loss_macro_oob:
  - -0.20020325203252032
  - -0.2020833333333333
  - -0.1941176470588235
  - -0.1983640081799591
  - -0.1881091617933723
  train_neg_hamming_loss_micro:
  - -0.18191056910569106
  - -0.184375
  - -0.17745098039215687
  - -0.18200408997955012
  - -0.17348927875243664
  train_neg_hamming_loss_micro_oob:
  - -0.20020325203252032
  - -0.20208333333333334
  - -0.19411764705882353
  - -0.1983640081799591
  - -0.1881091617933723
  train_neg_hamming_loss_samples:
  - -0.18191056910569103
  - -0.184375
  - -0.17745098039215684
  - -0.1820040899795501
  - -0.17348927875243664
  train_neg_hamming_loss_samples_oob:
  - -0.2002032520325203
  - -0.2020833333333333
  - -0.19411764705882353
  - -0.19836400817995908
  - -0.18810916179337234
  train_neg_hamming_loss_weighted:
  - -0.2762407474821017
  - -0.27496890547263686
  - -0.2688785859171255
  - -0.2759820529255563
  - -0.25794684731631057
  train_neg_hamming_loss_weighted_oob:
  - -0.31364518869069286
  - -0.3111318407960199
  - -0.30289771080846134
  - -0.30961755638982996
  - -0.2873892652423137
  train_neg_label_ranking_loss:
  - -0.019664634146341464
  - -0.021944444444444444
  - -0.02161764705882353
  - -0.01739945466939332
  - -0.020029239766081872
  train_neg_label_ranking_loss_oob:
  - -0.02682926829268293
  - -0.035538194444444435
  - -0.03447712418300654
  - -0.029652351738241305
  - -0.03874269005847953
  train_precision_macro:
  - 0.8180894308943089
  - 0.8156249999999999
  - 0.8225490196078432
  - 0.8179959100204498
  - 0.8265107212475633
  train_precision_macro_oob:
  - 0.7997967479674797
  - 0.7979166666666666
  - 0.8058823529411766
  - 0.8016359918200409
  - 0.8118908382066277
  train_precision_micro:
  - 0.818089430894309
  - 0.815625
  - 0.8225490196078431
  - 0.8179959100204499
  - 0.8265107212475633
  train_precision_micro_oob:
  - 0.7997967479674797
  - 0.7979166666666667
  - 0.8058823529411765
  - 0.8016359918200409
  - 0.8118908382066277
  train_precision_samples:
  - 0.8180894308943089
  - 0.815625
  - 0.822549019607843
  - 0.8179959100204498
  - 0.8265107212475632
  train_precision_samples_oob:
  - 0.7997967479674795
  - 0.7979166666666666
  - 0.8058823529411763
  - 0.8016359918200409
  - 0.8118908382066276
  train_precision_weighted:
  - 0.7237592525178984
  - 0.7250310945273633
  - 0.7311214140828745
  - 0.7240179470744438
  - 0.7420531526836894
  train_precision_weighted_oob:
  - 0.6863548113093072
  - 0.6888681592039801
  - 0.6971022891915386
  - 0.69038244361017
  - 0.7126107347576864
  train_recall_macro:
  - 0.8180894308943089
  - 0.8156249999999999
  - 0.8225490196078432
  - 0.8179959100204498
  - 0.8265107212475633
  train_recall_macro_oob:
  - 0.7997967479674797
  - 0.7979166666666666
  - 0.8058823529411766
  - 0.8016359918200409
  - 0.8118908382066277
  train_recall_micro:
  - 0.818089430894309
  - 0.815625
  - 0.8225490196078431
  - 0.8179959100204499
  - 0.8265107212475633
  train_recall_micro_oob:
  - 0.7997967479674797
  - 0.7979166666666667
  - 0.8058823529411765
  - 0.8016359918200409
  - 0.8118908382066277
  train_recall_samples:
  - 0.8180894308943089
  - 0.815625
  - 0.822549019607843
  - 0.8179959100204498
  - 0.8265107212475632
  train_recall_samples_oob:
  - 0.7997967479674795
  - 0.7979166666666666
  - 0.8058823529411763
  - 0.8016359918200409
  - 0.8118908382066276
  train_recall_weighted:
  - 0.7237592525178984
  - 0.7250310945273633
  - 0.7311214140828745
  - 0.7240179470744438
  - 0.7420531526836894
  train_recall_weighted_oob:
  - 0.6863548113093072
  - 0.6888681592039801
  - 0.6971022891915386
  - 0.69038244361017
  - 0.7126107347576864
  train_roc_auc_macro:
  - 0.9854656941667551
  - 0.9773734750874835
  - 0.9833011392922725
  - 0.9748832464272001
  - 0.98813022358902
  train_roc_auc_macro_oob:
  - 0.9713782930101119
  - 0.965104391649867
  - 0.970205703151349
  - 0.9583282366709088
  - 0.9699217494773881
  train_roc_auc_micro:
  - 0.9844487651144025
  - 0.9806861607640324
  - 0.9845222519008026
  - 0.9805925328313387
  - 0.9891557723733538
  train_roc_auc_micro_oob:
  - 0.9722968808575259
  - 0.9706146474478726
  - 0.9719929334161387
  - 0.9675176242340422
  - 0.9754938479284821
  train_roc_auc_samples:
  - 0.9803353658536585
  - 0.9780555555555557
  - 0.9783823529411766
  - 0.9826005453306067
  - 0.9799707602339183
  train_roc_auc_samples_oob:
  - 0.9731707317073172
  - 0.9644618055555556
  - 0.9655228758169936
  - 0.9703476482617588
  - 0.9612573099415205
  train_roc_auc_weighted:
  - 0.9858544128931773
  - 0.9750829991510166
  - 0.9784218254458764
  - 0.9685437788426844
  - 0.9854946285936432
  train_roc_auc_weighted_oob:
  - 0.9691071008276074
  - 0.9600070212023086
  - 0.9659719523208368
  - 0.9459231208113242
  - 0.9679546402129632
start: 2023-12-21 08:30:16.313543
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
