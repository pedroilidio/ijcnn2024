active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b80MzMzMzPzPzQzMzMzM/M/zMzMzMzM/L+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA/AAAAAAAAAEAAAAAAAAAIwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:51:17.406951
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__1
  params: {}
hash: 68c75989789dca6a92d1cba7915a38123231e6e74501d8d244417c99eabe2e32
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/68c7598_20231221T235105293588_embedding__1_CHD_49.yml
results:
  fit_time:
  - 3.014763593673706
  - 3.444490909576416
  - 3.39823579788208
  - 3.073646306991577
  - 3.5619044303894043
  score_time:
  - 1.4832775592803955
  - 1.650244951248169
  - 1.7086710929870605
  - 1.4569642543792725
  - 1.671687364578247
  test_average_precision_macro:
  - 0.46283848442001013
  - 0.5205206219169966
  - 0.5712368422488757
  - 0.5525630933271589
  - 0.5055019998809176
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6801869122634066
  - 0.6990867602206621
  - 0.7245086522745655
  - 0.7126749361260551
  - 0.6847897218909809
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7659284284284287
  - 0.781031031031031
  - 0.7870833333333334
  - 0.7829892966360857
  - 0.7824439571150097
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5847464627143312
  - 0.6435291589033774
  - 0.7029201087667042
  - 0.6590257719282054
  - 0.6300858698249533
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5675675675675677
  - 0.5705705705705705
  - 0.5681818181818181
  - 0.5596330275229359
  - 0.5833333333333334
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5675675675675675
  - 0.5705705705705706
  - 0.5681818181818182
  - 0.5596330275229358
  - 0.5833333333333334
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5675675675675675
  - 0.5705705705705705
  - 0.5681818181818182
  - 0.5596330275229358
  - 0.5833333333333335
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.44675925925925924
  - 0.4421974421974422
  - 0.43964912280701757
  - 0.43851936799184504
  - 0.46072637734687594
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.4361134528293085
  - 0.44200112909840267
  - 0.43985075276638397
  - 0.4282603603774513
  - 0.45185406085325125
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.39622641509433965
  - 0.39915966386554624
  - 0.3968253968253968
  - 0.3885350318471338
  - 0.4117647058823529
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.41132561132561146
  - 0.4152295152295153
  - 0.415930735930736
  - 0.4107073354779777
  - 0.429030910609858
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3039876403322239
  - 0.2993959720995239
  - 0.2971877304357424
  - 0.29832543164287084
  - 0.31555025395219727
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7659284284284287
  - 0.79004004004004
  - 0.7961742424242425
  - 0.7921636085626912
  - 0.7824439571150097
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.852154925381646
  - 0.8588332948802596
  - 0.8584927724124364
  - 0.8515274552395622
  - 0.8563291311148841
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.945945945945946
  - -3.765765765765766
  - -3.690909090909091
  - -3.8440366972477062
  - -3.6842105263157894
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.43243243243243246
  - -0.42942942942942947
  - -0.4318181818181818
  - -0.44036697247706424
  - -0.4166666666666667
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.43243243243243246
  - -0.4294294294294294
  - -0.4318181818181818
  - -0.44036697247706424
  - -0.4166666666666667
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.43243243243243246
  - -0.4294294294294294
  - -0.43181818181818177
  - -0.44036697247706424
  - -0.41666666666666674
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5532407407407408
  - -0.5578025578025578
  - -0.5603508771929824
  - -0.561480632008155
  - -0.5392736226531241
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23648648648648646
  - -0.21296296296296294
  - -0.1944949494949495
  - -0.2195718654434251
  - -0.21379142300194934
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5675675675675677
  - 0.5705705705705705
  - 0.5681818181818181
  - 0.5596330275229359
  - 0.5833333333333334
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5675675675675675
  - 0.5705705705705706
  - 0.5681818181818182
  - 0.5596330275229358
  - 0.5833333333333334
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5675675675675675
  - 0.5705705705705705
  - 0.5681818181818182
  - 0.5596330275229358
  - 0.5833333333333335
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.44675925925925924
  - 0.4421974421974422
  - 0.43964912280701757
  - 0.43851936799184504
  - 0.46072637734687594
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5675675675675677
  - 0.5705705705705705
  - 0.5681818181818181
  - 0.5596330275229359
  - 0.5833333333333334
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5675675675675675
  - 0.5705705705705706
  - 0.5681818181818182
  - 0.5596330275229358
  - 0.5833333333333334
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5675675675675675
  - 0.5705705705705705
  - 0.5681818181818182
  - 0.5596330275229358
  - 0.5833333333333335
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.44675925925925924
  - 0.4421974421974422
  - 0.43964912280701757
  - 0.43851936799184504
  - 0.46072637734687594
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5488983293889472
  - 0.6260813733336947
  - 0.623329751039802
  - 0.6328290791872809
  - 0.5971942149024417
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7599022633744855
  - 0.7857931542142069
  - 0.8008795321637426
  - 0.7858796296296297
  - 0.7823066438024887
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7635135135135136
  - .nan
  - .nan
  - .nan
  - 0.7862085769980508
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5373135651770099
  - 0.5966327011460976
  - 0.6528041282397755
  - 0.6043576872540287
  - 0.5918214394204667
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8172899162416623
  - 0.813606611357461
  - 0.820929849023845
  - 0.8190798021102709
  - 0.8231715836674008
  train_average_precision_macro_oob:
  - 0.5011531847335604
  - 0.506166739162211
  - 0.49930919089198517
  - 0.49235513976641343
  - 0.5031030941359754
  train_average_precision_micro:
  - 0.88960045781368
  - 0.8848677493572529
  - 0.887293420665519
  - 0.888749037654161
  - 0.8886122564139529
  train_average_precision_micro_oob:
  - 0.6901370666345609
  - 0.6829753287464255
  - 0.6898015315294204
  - 0.6813407552208486
  - 0.6895083871852573
  train_average_precision_samples:
  - 0.8877033283283283
  - 0.8871652902902902
  - 0.8833895131086142
  - 0.8856315396113602
  - 0.8926713277903754
  train_average_precision_samples_oob:
  - 0.7821634134134133
  - 0.7804648398398397
  - 0.7855867665418227
  - 0.780957274539113
  - 0.7872260015117157
  train_average_precision_weighted:
  - 0.8802797745208892
  - 0.8779656680132379
  - 0.8782214860645099
  - 0.8784151560645753
  - 0.878890114780906
  train_average_precision_weighted_oob:
  - 0.6252745036641457
  - 0.6290437587862462
  - 0.6201036814949297
  - 0.6151474196428001
  - 0.6260089049420792
  train_f1_macro:
  - 0.628003003003003
  - 0.631006006006006
  - 0.6280898876404494
  - 0.6278026905829596
  - 0.626228269085412
  train_f1_macro_oob:
  - 0.5716966966966966
  - 0.5690690690690691
  - 0.5707865168539326
  - 0.5728699551569507
  - 0.5668934240362812
  train_f1_micro:
  - 0.628003003003003
  - 0.631006006006006
  - 0.6280898876404495
  - 0.6278026905829597
  - 0.626228269085412
  train_f1_micro_oob:
  - 0.5716966966966966
  - 0.5690690690690691
  - 0.5707865168539326
  - 0.5728699551569507
  - 0.5668934240362812
  train_f1_samples:
  - 0.6280030030030029
  - 0.6310060060060059
  - 0.6280898876404495
  - 0.6278026905829597
  - 0.626228269085412
  train_f1_samples_oob:
  - 0.5716966966966968
  - 0.569069069069069
  - 0.5707865168539327
  - 0.5728699551569507
  - 0.5668934240362812
  train_f1_weighted:
  - 0.5446434196434197
  - 0.5511276983790073
  - 0.5465748459586808
  - 0.5424715419110038
  - 0.5437590322382949
  train_f1_weighted_oob:
  - 0.4475051975051975
  - 0.44531311416128166
  - 0.44778856420755664
  - 0.4481561039857004
  - 0.44255249324373747
  train_jaccard_macro:
  - 0.485294797817099
  - 0.48730752106890024
  - 0.48469608847196227
  - 0.4853312881109911
  - 0.4829663232590747
  train_jaccard_macro_oob:
  - 0.44126524656465366
  - 0.4385874814672972
  - 0.4399021603491488
  - 0.4427137769934682
  - 0.4367762927532895
  train_jaccard_micro:
  - 0.45772913816689464
  - 0.46092678914176033
  - 0.45782145782145783
  - 0.45751633986928103
  - 0.45584594222833563
  train_jaccard_micro_oob:
  - 0.4002628120893561
  - 0.39769150052465896
  - 0.39937106918238996
  - 0.401413982717989
  - 0.39556962025316456
  train_jaccard_samples:
  - 0.4797307047307048
  - 0.48287215787215787
  - 0.4797645799892991
  - 0.479745889387145
  - 0.47664399092970516
  train_jaccard_samples_oob:
  - 0.418994968994969
  - 0.4161850161850162
  - 0.4170582226762003
  - 0.4184390348067478
  - 0.413682009600377
  train_jaccard_weighted:
  - 0.38002086107040267
  - 0.38622703345132886
  - 0.3820685133143293
  - 0.3776694420958859
  - 0.3790083612046888
  train_jaccard_weighted_oob:
  - 0.304098909166341
  - 0.303084424203668
  - 0.30488904138379475
  - 0.30457792040137227
  - 0.30028340410630444
  train_label_ranking_average_precision_score:
  - 0.8944600850850848
  - 0.8916697947947938
  - 0.8878838951310855
  - 0.8901158445440948
  - 0.8994740488788104
  train_label_ranking_average_precision_score_oob:
  - 0.788920170170169
  - 0.7849693443443428
  - 0.7900811485642933
  - 0.7854415794718473
  - 0.79402872260015
  train_matthews_corrcoef_macro:
  - 0.09009493137476154
  - 0.10581515828796782
  - 0.09066134847077023
  - 0.09016757564430768
  - 0.09355517360375698
  train_matthews_corrcoef_macro_oob:
  - 0.007698119788106528
  - -0.019896453642712513
  - 0.006367873198197934
  - 0.004466036536824136
  - 0.004413916677081175
  train_matthews_corrcoef_micro:
  - 0.284532015870345
  - 0.29381944448823566
  - 0.2850842894964765
  - 0.2800004267880762
  - 0.28808620522708495
  train_matthews_corrcoef_micro_oob:
  - 0.03870320870132441
  - -0.02381592178196986
  - 0.022304575173704332
  - 0.022374558642633605
  - 0.022228301011499713
  train_matthews_corrcoef_samples:
  - 0.16521160277151073
  - 0.17745637022247668
  - 0.17156537682757717
  - 0.16865666741387145
  - 0.17294975511883554
  train_matthews_corrcoef_samples_oob:
  - 0.0031439119224109724
  - -0.0017194625259387294
  - 0.0010049743719100178
  - 0.0014180617310172105
  - 0.0010140897857141902
  train_matthews_corrcoef_weighted:
  - 0.14935021219910855
  - 0.16845997111461714
  - 0.14994360346424482
  - 0.1486519796753731
  - 0.15351733657765212
  train_matthews_corrcoef_weighted_oob:
  - 0.013646666897097936
  - -0.03510526113923621
  - 0.008993857524917746
  - 0.007917064769824603
  - 0.007781115537103868
  train_ndgc:
  - 0.9269593845124757
  - 0.9277491865720855
  - 0.9249159390462769
  - 0.9287325852473189
  - 0.9314834273037206
  train_ndgc_oob:
  - 0.8558932852136723
  - 0.8567067910489727
  - 0.8601157260204139
  - 0.8577826123479397
  - 0.8611435551286587
  train_neg_coverage_error:
  - -3.2274774774774775
  - -3.274774774774775
  - -3.2651685393258427
  - -3.2847533632286994
  - -3.2789115646258504
  train_neg_coverage_error_oob:
  - -3.7882882882882885
  - -3.828828828828829
  - -3.7775280898876407
  - -3.795964125560538
  - -3.7913832199546484
  train_neg_hamming_loss_macro:
  - -0.37199699699699695
  - -0.36899399399399396
  - -0.37191011235955057
  - -0.3721973094170404
  - -0.37377173091458804
  train_neg_hamming_loss_macro_oob:
  - -0.4283033033033033
  - -0.4309309309309309
  - -0.42921348314606744
  - -0.4271300448430493
  - -0.43310657596371877
  train_neg_hamming_loss_micro:
  - -0.371996996996997
  - -0.368993993993994
  - -0.37191011235955057
  - -0.3721973094170404
  - -0.37377173091458804
  train_neg_hamming_loss_micro_oob:
  - -0.4283033033033033
  - -0.43093093093093093
  - -0.42921348314606744
  - -0.42713004484304934
  - -0.4331065759637188
  train_neg_hamming_loss_samples:
  - -0.37199699699699695
  - -0.36899399399399396
  - -0.37191011235955057
  - -0.3721973094170404
  - -0.37377173091458804
  train_neg_hamming_loss_samples_oob:
  - -0.42830330330330335
  - -0.4309309309309309
  - -0.42921348314606744
  - -0.42713004484304934
  - -0.4331065759637188
  train_neg_hamming_loss_weighted:
  - -0.4553565803565804
  - -0.4488723016209927
  - -0.4534251540413193
  - -0.45752845808899617
  - -0.45624096776170514
  train_neg_hamming_loss_weighted_oob:
  - -0.5524948024948025
  - -0.5546868858387183
  - -0.5522114357924434
  - -0.5518438960142996
  - -0.5574475067562625
  train_neg_label_ranking_loss:
  - -0.10444194194194194
  - -0.10961586586586587
  - -0.11083645443196005
  - -0.10993398106626805
  - -0.10664525069286973
  train_neg_label_ranking_loss_oob:
  - -0.21339464464464467
  - -0.2177677677677678
  - -0.21176654182272162
  - -0.2133906327852516
  - -0.2096875787351978
  train_precision_macro:
  - 0.628003003003003
  - 0.631006006006006
  - 0.6280898876404494
  - 0.6278026905829596
  - 0.626228269085412
  train_precision_macro_oob:
  - 0.5716966966966966
  - 0.5690690690690691
  - 0.5707865168539326
  - 0.5728699551569507
  - 0.5668934240362812
  train_precision_micro:
  - 0.628003003003003
  - 0.631006006006006
  - 0.6280898876404495
  - 0.6278026905829597
  - 0.626228269085412
  train_precision_micro_oob:
  - 0.5716966966966966
  - 0.5690690690690691
  - 0.5707865168539326
  - 0.5728699551569507
  - 0.5668934240362812
  train_precision_samples:
  - 0.6280030030030029
  - 0.6310060060060059
  - 0.6280898876404495
  - 0.6278026905829597
  - 0.626228269085412
  train_precision_samples_oob:
  - 0.5716966966966968
  - 0.569069069069069
  - 0.5707865168539327
  - 0.5728699551569507
  - 0.5668934240362812
  train_precision_weighted:
  - 0.5446434196434197
  - 0.5511276983790073
  - 0.5465748459586808
  - 0.5424715419110038
  - 0.5437590322382949
  train_precision_weighted_oob:
  - 0.4475051975051975
  - 0.44531311416128166
  - 0.44778856420755664
  - 0.4481561039857004
  - 0.44255249324373747
  train_recall_macro:
  - 0.628003003003003
  - 0.631006006006006
  - 0.6280898876404494
  - 0.6278026905829596
  - 0.626228269085412
  train_recall_macro_oob:
  - 0.5716966966966966
  - 0.5690690690690691
  - 0.5707865168539326
  - 0.5728699551569507
  - 0.5668934240362812
  train_recall_micro:
  - 0.628003003003003
  - 0.631006006006006
  - 0.6280898876404495
  - 0.6278026905829597
  - 0.626228269085412
  train_recall_micro_oob:
  - 0.5716966966966966
  - 0.5690690690690691
  - 0.5707865168539326
  - 0.5728699551569507
  - 0.5668934240362812
  train_recall_samples:
  - 0.6280030030030029
  - 0.6310060060060059
  - 0.6280898876404495
  - 0.6278026905829597
  - 0.626228269085412
  train_recall_samples_oob:
  - 0.5716966966966968
  - 0.569069069069069
  - 0.5707865168539327
  - 0.5728699551569507
  - 0.5668934240362812
  train_recall_weighted:
  - 0.5446434196434197
  - 0.5511276983790073
  - 0.5465748459586808
  - 0.5424715419110038
  - 0.5437590322382949
  train_recall_weighted_oob:
  - 0.4475051975051975
  - 0.44531311416128166
  - 0.44778856420755664
  - 0.4481561039857004
  - 0.44255249324373747
  train_roc_auc_macro:
  - 0.8082145043081614
  - 0.7938769624572296
  - 0.825763353246316
  - 0.8078764510460105
  - 0.8256601750101549
  train_roc_auc_macro_oob:
  - 0.568698255971387
  - 0.5517069664710922
  - 0.5752905630700899
  - 0.5438725675591045
  - 0.554671296668016
  train_roc_auc_micro:
  - 0.8970414864740521
  - 0.8927629930077005
  - 0.8950269079576685
  - 0.8959875796527232
  - 0.8946086114951379
  train_roc_auc_micro_oob:
  - 0.782001058152374
  - 0.7790947259988917
  - 0.7776786169178096
  - 0.779112613887418
  - 0.7803795962783675
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8164781073354378
  - 0.8081777283454813
  - 0.8152295230286485
  - 0.819676677497706
  - 0.8125107246129568
  train_roc_auc_weighted_oob:
  - 0.5805393569290535
  - 0.5614734288093178
  - 0.5730883282105308
  - 0.5652812566311207
  - 0.5660484378457243
start: 2023-12-21 23:51:05.293588
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
