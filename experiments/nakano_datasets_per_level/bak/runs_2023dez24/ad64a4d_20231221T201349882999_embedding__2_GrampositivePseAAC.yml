active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T+AmZmZmZkBwADNzMzMzPw/ADMzMzMz878AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 20:14:05.523842
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__2
  params: {}
hash: ad64a4dab401d7f18cbbf7768f340e8abcb49778f3c9c4d0fc2189d6a0d656af
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/ad64a4d_20231221T201349882999_embedding__2_GrampositivePseAAC.yml
results:
  fit_time:
  - 5.499070882797241
  - 5.926978588104248
  - 5.613771200180054
  - 5.817367076873779
  - 5.468629598617554
  score_time:
  - 2.0805892944335938
  - 2.3313679695129395
  - 2.0916197299957275
  - 2.2852628231048584
  - 2.118673086166382
  test_average_precision_macro:
  - 0.36805329238677226
  - 0.4743761620340252
  - 0.39166127307805354
  - 0.39723354464657135
  - 0.4136448870823772
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5067627447720595
  - 0.5505596663804782
  - 0.5283016060446885
  - 0.4511441459562243
  - 0.5295740972503249
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6949838187702265
  - 0.7185534591194968
  - 0.7336601307189541
  - 0.715079365079365
  - 0.7087378640776698
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.48774160187401616
  - 0.5657841528359052
  - 0.502088114615157
  - 0.45923229505681573
  - 0.5227142837349686
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7475728155339807
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339807
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7475728155339806
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339806
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7475728155339806
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339806
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6663554891710232
  - 0.676931292274831
  - 0.672134238310709
  - 0.6713832199546486
  - 0.6734503360716952
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6197216872176006
  - 0.6203929674207407
  - 0.614350235264661
  - 0.6221001221001221
  - 0.6176475169245657
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5968992248062015
  - 0.6
  - 0.59375
  - 0.6
  - 0.5968992248062015
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5974110032362459
  - 0.5999999999999999
  - 0.5947712418300652
  - 0.5999999999999999
  - 0.5974110032362459
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5064871621764286
  - 0.5184281303170373
  - 0.5129336924232528
  - 0.5115995115995116
  - 0.5147040675680669
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6949838187702267
  - 0.7185534591194968
  - 0.7336601307189542
  - 0.7150793650793652
  - 0.7087378640776699
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7734306998524071
  - 0.7899442506078971
  - 0.8018111873250662
  - 0.7880346790061881
  - 0.783997925869507
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7864077669902914
  - -1.7641509433962264
  - -1.7352941176470589
  - -1.7142857142857142
  - -1.7475728155339805
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2524271844660194
  - -0.25
  - -0.2549019607843137
  - -0.25
  - -0.2524271844660194
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2524271844660194
  - -0.25
  - -0.2549019607843137
  - -0.25
  - -0.2524271844660194
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2524271844660194
  - -0.25
  - -0.2549019607843137
  - -0.25
  - -0.2524271844660194
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.33364451082897684
  - -0.3230687077251691
  - -0.32786576168929105
  - -0.32861678004535144
  - -0.3265496639283047
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2580906148867314
  - -0.25471698113207547
  - -0.23774509803921567
  - -0.23809523809523808
  - -0.244336569579288
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7475728155339807
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339807
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7475728155339806
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339806
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7475728155339806
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339806
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6663554891710232
  - 0.676931292274831
  - 0.672134238310709
  - 0.6713832199546486
  - 0.6734503360716952
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7475728155339807
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339807
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7475728155339806
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339806
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7475728155339806
  - 0.75
  - 0.7450980392156863
  - 0.75
  - 0.7475728155339806
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6663554891710232
  - 0.676931292274831
  - 0.672134238310709
  - 0.6713832199546486
  - 0.6734503360716952
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5970831066396263
  - 0.745573438246582
  - 0.6287250367040272
  - 0.6719692488106354
  - 0.6414394490921825
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7544642857142857
  - 0.7780052213124481
  - 0.7730895748987854
  - 0.7543461829176114
  - 0.7744755244755245
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7419093851132685
  - 0.7452830188679245
  - 0.7622549019607843
  - 0.7619047619047619
  - 0.755663430420712
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6271694316144898
  - 0.7029900692486816
  - 0.6620988444672835
  - 0.6409745009114757
  - 0.6994089347736095
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7852753536175121
  - 0.7568434696273982
  - 0.7528932403385712
  - 0.7529188065712094
  - 0.7632295385791227
  train_average_precision_macro_oob:
  - 0.4421698298128397
  - 0.4813269759408792
  - 0.44779598506517226
  - 0.4734456561049435
  - 0.454017690922862
  train_average_precision_micro:
  - 0.8146950407436532
  - 0.8188028713749591
  - 0.807588239900005
  - 0.8150202476469032
  - 0.8115703412984681
  train_average_precision_micro_oob:
  - 0.5671022155381972
  - 0.6241023505706502
  - 0.5847862034538841
  - 0.6119682854826757
  - 0.59539312615597
  train_average_precision_samples:
  - 0.8431490384615384
  - 0.8444309927360775
  - 0.8437250199840127
  - 0.8476247987117551
  - 0.8459535256410255
  train_average_precision_samples_oob:
  - 0.7303685897435899
  - 0.7465698143664247
  - 0.726219024780176
  - 0.7377214170692431
  - 0.7391826923076923
  train_average_precision_weighted:
  - 0.8180701415837883
  - 0.8210652739324947
  - 0.8061602558109806
  - 0.8133919735601199
  - 0.8098859528808221
  train_average_precision_weighted_oob:
  - 0.5652384556929219
  - 0.6235301416686106
  - 0.5730801021500413
  - 0.6175626152956631
  - 0.5876830112376856
  train_f1_macro:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801932
  - 0.7602163461538461
  train_f1_macro_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7481971153846154
  train_f1_micro:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801933
  - 0.7602163461538461
  train_f1_micro_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7481971153846154
  train_f1_samples:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801933
  - 0.7602163461538461
  train_f1_samples_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7481971153846154
  train_f1_weighted:
  - 0.6938739214246374
  - 0.7005185198088503
  - 0.7070734820258352
  - 0.6884924762499133
  - 0.689513723150358
  train_f1_weighted_oob:
  - 0.6735416284193133
  - 0.6709054064254649
  - 0.6721152910607076
  - 0.6723181471465224
  - 0.6717975491096017
  train_jaccard_macro:
  - 0.6327718920703153
  - 0.6402951427006729
  - 0.6456208450629918
  - 0.6297313702060242
  - 0.6321931699669338
  train_jaccard_macro_oob:
  - 0.6186451939602398
  - 0.618459744826195
  - 0.6199603680221331
  - 0.618032789892615
  - 0.6191545003244906
  train_jaccard_micro:
  - 0.6147501213003397
  - 0.6227897838899804
  - 0.62890625
  - 0.6108949416342413
  - 0.6131846825012118
  train_jaccard_micro_oob:
  - 0.5976956313010081
  - 0.596906718221363
  - 0.5984666986104457
  - 0.5969141755062681
  - 0.5976956313010081
  train_jaccard_samples:
  - 0.6189102564102562
  - 0.6293785310734462
  - 0.6361310951239009
  - 0.6148148148148147
  - 0.6173076923076922
  train_jaccard_samples_oob:
  - 0.598076923076923
  - 0.5974172719935429
  - 0.5987210231814547
  - 0.5974235104669885
  - 0.598076923076923
  train_jaccard_weighted:
  - 0.5361830321934984
  - 0.5437694197849157
  - 0.5511419293307758
  - 0.5305915440937456
  - 0.5316106226475128
  train_jaccard_weighted_oob:
  - 0.5144973681388095
  - 0.5115215864439471
  - 0.512902401286592
  - 0.5132480859756687
  - 0.5124747290215935
  train_label_ranking_average_precision_score:
  - 0.8431490384615382
  - 0.844430992736077
  - 0.8437250199840127
  - 0.847624798711755
  - 0.8459535256410253
  train_label_ranking_average_precision_score_oob:
  - 0.7303685897435894
  - 0.7465698143664239
  - 0.7262190247801759
  - 0.7377214170692428
  - 0.7391826923076918
  train_matthews_corrcoef_macro:
  - 0.10001945672999667
  - 0.13271579373449577
  - 0.14351738449488818
  - 0.0966001256869003
  - 0.10278986033031715
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.19952734710247289
  - 0.24569651525695965
  - 0.26714433499574686
  - 0.18040621100021365
  - 0.1901261068843447
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.05186863045478275
  - 0.07990314769975787
  - 0.09352517985611511
  - 0.043478260869565216
  - 0.04807692307692308
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.1495401764182012
  - 0.1942984542059221
  - 0.21129688483724787
  - 0.1415358021883237
  - 0.14984684947738544
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8831022142326952
  - 0.8842778454841395
  - 0.8837729375481247
  - 0.8867944347883907
  - 0.8851913254019946
  train_ndgc_oob:
  - 0.7991135321682349
  - 0.8116077627776345
  - 0.7964203879808521
  - 0.8049652471951881
  - 0.8058833347834096
  train_neg_coverage_error:
  - -1.4182692307692308
  - -1.4092009685230025
  - -1.410071942446043
  - -1.4202898550724639
  - -1.4110576923076923
  train_neg_coverage_error_oob:
  - -1.7259615384615385
  - -1.6707021791767553
  - -1.709832134292566
  - -1.6980676328502415
  - -1.6899038461538463
  train_neg_hamming_loss_macro:
  - -0.23858173076923078
  - -0.2324455205811138
  - -0.2278177458033573
  - -0.24154589371980673
  - -0.23978365384615385
  train_neg_hamming_loss_macro_oob:
  - -0.2518028846153846
  - -0.2524213075060533
  - -0.25119904076738614
  - -0.2524154589371981
  - -0.2518028846153846
  train_neg_hamming_loss_micro:
  - -0.23858173076923078
  - -0.2324455205811138
  - -0.2278177458033573
  - -0.24154589371980675
  - -0.23978365384615385
  train_neg_hamming_loss_micro_oob:
  - -0.25180288461538464
  - -0.2524213075060533
  - -0.2511990407673861
  - -0.2524154589371981
  - -0.25180288461538464
  train_neg_hamming_loss_samples:
  - -0.23858173076923078
  - -0.2324455205811138
  - -0.2278177458033573
  - -0.24154589371980675
  - -0.23978365384615385
  train_neg_hamming_loss_samples_oob:
  - -0.25180288461538464
  - -0.2524213075060533
  - -0.2511990407673861
  - -0.2524154589371981
  - -0.25180288461538464
  train_neg_hamming_loss_weighted:
  - -0.3061260785753626
  - -0.29948148019114973
  - -0.2929265179741648
  - -0.31150752375008667
  - -0.31048627684964203
  train_neg_hamming_loss_weighted_oob:
  - -0.3264583715806866
  - -0.329094593574535
  - -0.3278847089392925
  - -0.32768185285347756
  - -0.3282024508903984
  train_neg_label_ranking_loss:
  - -0.13701923076923078
  - -0.13297013720742532
  - -0.13469224620303757
  - -0.1360708534621578
  - -0.1346153846153846
  train_neg_label_ranking_loss_oob:
  - -0.23958333333333331
  - -0.2195318805488297
  - -0.23441247002398083
  - -0.2286634460547504
  - -0.22716346153846154
  train_precision_macro:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801932
  - 0.7602163461538461
  train_precision_macro_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7481971153846154
  train_precision_micro:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801933
  - 0.7602163461538461
  train_precision_micro_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7481971153846154
  train_precision_samples:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801933
  - 0.7602163461538461
  train_precision_samples_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7481971153846154
  train_precision_weighted:
  - 0.6938739214246374
  - 0.7005185198088503
  - 0.7070734820258352
  - 0.6884924762499133
  - 0.689513723150358
  train_precision_weighted_oob:
  - 0.6735416284193133
  - 0.6709054064254649
  - 0.6721152910607076
  - 0.6723181471465224
  - 0.6717975491096017
  train_recall_macro:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801932
  - 0.7602163461538461
  train_recall_macro_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.748800959232614
  - 0.7475845410628019
  - 0.7481971153846154
  train_recall_micro:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801933
  - 0.7602163461538461
  train_recall_micro_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7481971153846154
  train_recall_samples:
  - 0.7614182692307693
  - 0.7675544794188862
  - 0.7721822541966427
  - 0.7584541062801933
  - 0.7602163461538461
  train_recall_samples_oob:
  - 0.7481971153846154
  - 0.7475786924939467
  - 0.7488009592326139
  - 0.7475845410628019
  - 0.7481971153846154
  train_recall_weighted:
  - 0.6938739214246374
  - 0.7005185198088503
  - 0.7070734820258352
  - 0.6884924762499133
  - 0.689513723150358
  train_recall_weighted_oob:
  - 0.6735416284193133
  - 0.6709054064254649
  - 0.6721152910607076
  - 0.6723181471465224
  - 0.6717975491096017
  train_roc_auc_macro:
  - 0.8628444779805753
  - 0.8492016490787637
  - 0.8526369267586389
  - 0.839629755208835
  - 0.859425143288474
  train_roc_auc_macro_oob:
  - 0.7044725389595166
  - 0.7166912546985356
  - 0.7374917445278477
  - 0.6532922329878049
  - 0.6890356284621525
  train_roc_auc_micro:
  - 0.8931055966107868
  - 0.8973543432460509
  - 0.8897944130961093
  - 0.8894149384328791
  - 0.8878319962427275
  train_roc_auc_micro_oob:
  - 0.7847044502592709
  - 0.8068524937135313
  - 0.7932092690859132
  - 0.8001329509704647
  - 0.7928017559498136
  train_roc_auc_samples:
  - 0.8629807692307693
  - 0.8670298627925748
  - 0.8653077537969626
  - 0.8639291465378423
  - 0.8653846153846154
  train_roc_auc_samples_oob:
  - 0.7604166666666666
  - 0.7804681194511703
  - 0.7655875299760192
  - 0.7713365539452497
  - 0.7728365384615384
  train_roc_auc_weighted:
  - 0.8537077750090769
  - 0.8640477054327149
  - 0.8484632284519046
  - 0.8550317547420035
  - 0.8518178579242869
  train_roc_auc_weighted_oob:
  - 0.7108616999203115
  - 0.748160018098136
  - 0.7266259461145677
  - 0.7311525770122752
  - 0.7213912619418722
start: 2023-12-21 20:13:49.882999
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
