active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T9AMzMzMzPjP0AzMzMzM+M/QDMzMzMz4z8wMzMzMzMLwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMz4z8gMzMzMzMLwCAzMzMzMwvAcGZmZmZmHkBAZmZmZmb2vw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:27:55.919854
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__9
  params: {}
hash: b58d6be85a70e7e05905b172f9dd1cb5a63dbc338b3c750441c504890856ab2a
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b58d6be_20231222T030642830357_embedding_proba_weak__9_emotions.yml
results:
  fit_time:
  - 1214.0941770076752
  - 1225.4554319381714
  - 1242.2637989521027
  - 1241.842978477478
  - 1249.1490712165833
  score_time:
  - 7.069302797317505
  - 8.118838548660278
  - 7.85190224647522
  - 7.284023284912109
  - 7.846871852874756
  test_average_precision_macro:
  - 0.6771881479292726
  - 0.6875536935990775
  - 0.64515235948052
  - 0.7313988976157381
  - 0.6648936831652233
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6443918986060032
  - 0.6942334225516971
  - 0.6457271425295252
  - 0.7274576528538478
  - 0.6307748968173483
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7916431261770244
  - 0.7827641165755919
  - 0.7828096539162112
  - 0.8141141141141139
  - 0.7717824074074074
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6693932173562585
  - 0.6969893883801268
  - 0.6514113941319067
  - 0.7300292949694803
  - 0.6579492409718019
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.786723163841808
  - 0.773224043715847
  - 0.7691256830601093
  - 0.8123123123123124
  - 0.7805555555555556
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.786723163841808
  - 0.773224043715847
  - 0.7691256830601093
  - 0.8123123123123123
  - 0.7805555555555556
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.786723163841808
  - 0.7732240437158471
  - 0.7691256830601092
  - 0.8123123123123123
  - 0.7805555555555556
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7824219648746069
  - 0.772079456505686
  - 0.7729767821378237
  - 0.809049959049959
  - 0.7773809523809524
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6522304373719924
  - 0.6334195999034168
  - 0.6279007923135667
  - 0.6865044877358416
  - 0.6450175053412321
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6484284051222352
  - 0.6302895322939867
  - 0.6248612652608213
  - 0.683944374209861
  - 0.6400911161731208
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6851896690879741
  - 0.6757682208501881
  - 0.6653786104605777
  - 0.7263835263835262
  - 0.6810822510822508
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6459054412098285
  - 0.6314777681071005
  - 0.6328750223105541
  - 0.6814268266126491
  - 0.6403252555852522
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7916431261770243
  - 0.782764116575592
  - 0.782809653916211
  - 0.8141141141141139
  - 0.7717824074074071
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5287899335343204
  - 0.5067058780539052
  - 0.47500424733947927
  - 0.580486387732752
  - 0.5115268103501386
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5379446376252189
  - 0.5185687166706886
  - 0.491901326946691
  - 0.5896554032225396
  - 0.5237127090977901
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5435021806927323
  - 0.5145815388949494
  - 0.4906131975069084
  - 0.5920414938322481
  - 0.5337441259710549
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5266052269704947
  - 0.5116412504162567
  - 0.4930606689188652
  - 0.5806928736734742
  - 0.513720041265117
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8554606675659644
  - 0.8486824692562324
  - 0.8482040722321399
  - 0.8726496220048608
  - 0.8433420235995349
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.7542372881355934
  - -2.7049180327868854
  - -2.7459016393442623
  - -2.7477477477477477
  - -2.875
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21327683615819212
  - -0.226775956284153
  - -0.23087431693989072
  - -0.1876876876876877
  - -0.21944444444444444
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2132768361581921
  - -0.226775956284153
  - -0.23087431693989072
  - -0.18768768768768768
  - -0.21944444444444444
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21327683615819207
  - -0.22677595628415298
  - -0.23087431693989072
  - -0.1876876876876877
  - -0.21944444444444444
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21757803512539303
  - -0.227920543494314
  - -0.22702321786217639
  - -0.19095004095004098
  - -0.22261904761904758
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.17292843691148777
  - -0.1701047358834244
  - -0.17463570127504555
  - -0.14336836836836836
  - -0.18337962962962964
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.786723163841808
  - 0.773224043715847
  - 0.7691256830601093
  - 0.8123123123123124
  - 0.7805555555555556
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.786723163841808
  - 0.773224043715847
  - 0.7691256830601093
  - 0.8123123123123123
  - 0.7805555555555556
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.786723163841808
  - 0.7732240437158471
  - 0.7691256830601092
  - 0.8123123123123123
  - 0.7805555555555556
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7824219648746069
  - 0.772079456505686
  - 0.7729767821378237
  - 0.809049959049959
  - 0.7773809523809524
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.786723163841808
  - 0.773224043715847
  - 0.7691256830601093
  - 0.8123123123123124
  - 0.7805555555555556
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.786723163841808
  - 0.773224043715847
  - 0.7691256830601093
  - 0.8123123123123123
  - 0.7805555555555556
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.786723163841808
  - 0.7732240437158471
  - 0.7691256830601092
  - 0.8123123123123123
  - 0.7805555555555556
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7824219648746069
  - 0.772079456505686
  - 0.7729767821378237
  - 0.809049959049959
  - 0.7773809523809524
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8349010345504047
  - 0.8456118570359402
  - 0.8096518587884513
  - 0.8632996181710971
  - 0.8150032988688215
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8516078679141852
  - 0.8576929871047518
  - 0.8335001018320921
  - 0.8777924989808399
  - 0.836468533986175
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8270715630885123
  - 0.8298952641165755
  - 0.8253642987249544
  - 0.8566316316316316
  - 0.8166203703703704
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8286412284005943
  - 0.8480941535074581
  - 0.8141632522864742
  - 0.8610501598771263
  - 0.8105300209137551
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7842766772241966
  - 0.7969283071927219
  - 0.8052798187673268
  - 0.8074970385157835
  - 0.8064571491274904
  train_average_precision_macro_oob:
  - 0.7708598555266266
  - 0.7829089932406291
  - 0.7864465230148442
  - 0.7879858601555019
  - 0.7934888806608912
  train_average_precision_micro:
  - 0.7571455308565169
  - 0.7476032165389294
  - 0.7543733964234982
  - 0.7514267729904619
  - 0.7635897295906641
  train_average_precision_micro_oob:
  - 0.7461176821946414
  - 0.7347000138429028
  - 0.7416015945265112
  - 0.7405415951156646
  - 0.7539669090070448
  train_average_precision_samples:
  - 0.8610526315789474
  - 0.8638829912715263
  - 0.8601085161594716
  - 0.8619986168741356
  - 0.8687455954897817
  train_average_precision_samples_oob:
  - 0.8548070175438597
  - 0.8521703231894315
  - 0.8506723283793347
  - 0.851239050253573
  - 0.8574583039699318
  train_average_precision_weighted:
  - 0.7778978250988514
  - 0.7857179775918797
  - 0.7933203466947705
  - 0.7958020870632251
  - 0.7965385446669232
  train_average_precision_weighted_oob:
  - 0.7659099529528862
  - 0.7708242877932039
  - 0.7757380442318014
  - 0.7773780635980523
  - 0.78462793150565
  train_f1_macro:
  - 0.8782456140350877
  - 0.878273177636235
  - 0.8821656050955414
  - 0.8831258644536654
  - 0.8858350951374208
  train_f1_macro_oob:
  - 0.86140350877193
  - 0.8630573248407644
  - 0.8711960368011323
  - 0.8737897648686029
  - 0.8745595489781536
  train_f1_micro:
  - 0.8782456140350877
  - 0.8782731776362349
  - 0.8821656050955414
  - 0.8831258644536653
  - 0.8858350951374208
  train_f1_micro_oob:
  - 0.8614035087719298
  - 0.8630573248407644
  - 0.8711960368011323
  - 0.873789764868603
  - 0.8745595489781536
  train_f1_samples:
  - 0.8782456140350876
  - 0.878273177636235
  - 0.8821656050955414
  - 0.8831258644536654
  - 0.8858350951374208
  train_f1_samples_oob:
  - 0.8614035087719297
  - 0.8630573248407644
  - 0.8711960368011324
  - 0.8737897648686029
  - 0.8745595489781536
  train_f1_weighted:
  - 0.8733068296445737
  - 0.8728702678609942
  - 0.8747729051623236
  - 0.8774181339015364
  - 0.8803440061989993
  train_f1_weighted_oob:
  - 0.8573073043375068
  - 0.8586840352163639
  - 0.8645808649111848
  - 0.8687221973010355
  - 0.8695818545339749
  train_jaccard_macro:
  - 0.7850752621338568
  - 0.7860023193590743
  - 0.7918783667737368
  - 0.7931387111018487
  - 0.797885706593353
  train_jaccard_macro_oob:
  - 0.7593096076323972
  - 0.7627927043966732
  - 0.7743432549336305
  - 0.7783445903355218
  - 0.7800341469504888
  train_jaccard_micro:
  - 0.7829214888958399
  - 0.7829652996845425
  - 0.7891737891737892
  - 0.7907120743034056
  - 0.7950664136622391
  train_jaccard_micro_oob:
  - 0.7565485362095532
  - 0.7591036414565826
  - 0.7717868338557994
  - 0.775867362603623
  - 0.7770820288040076
  train_jaccard_samples:
  - 0.8063258145363407
  - 0.805803255484784
  - 0.8124254372662014
  - 0.8151155898043864
  - 0.8174468941910801
  train_jaccard_samples_oob:
  - 0.7837894736842105
  - 0.7842887473460721
  - 0.7964917601860276
  - 0.8020450503852994
  - 0.8010872848082149
  train_jaccard_weighted:
  - 0.7770766907008212
  - 0.7772401131808152
  - 0.780232470474142
  - 0.7839827013469742
  - 0.7889696473268325
  train_jaccard_weighted_oob:
  - 0.7527065399858422
  - 0.7556650454299604
  - 0.7640111248665729
  - 0.7702627626857834
  - 0.7720125019527428
  train_label_ranking_average_precision_score:
  - 0.8610526315789464
  - 0.863882991271525
  - 0.8601085161594706
  - 0.8619986168741343
  - 0.8687455954897805
  train_label_ranking_average_precision_score_oob:
  - 0.8548070175438587
  - 0.8521703231894304
  - 0.8506723283793336
  - 0.8512390502535716
  - 0.8574583039699308
  train_matthews_corrcoef_macro:
  - 0.7493459503439519
  - 0.7501738379564676
  - 0.7509019043105657
  - 0.7522213121646586
  - 0.7590156892178884
  train_matthews_corrcoef_macro_oob:
  - 0.7065501914527594
  - 0.7143265438755294
  - 0.7248423849749049
  - 0.7283553806060552
  - 0.7327935281176522
  train_matthews_corrcoef_micro:
  - 0.7491263240457015
  - 0.7493545019549679
  - 0.7507647473971771
  - 0.7523520837876697
  - 0.7581716261391888
  train_matthews_corrcoef_micro_oob:
  - 0.7083190412613638
  - 0.7149461795351526
  - 0.7259643520010746
  - 0.7293310158540973
  - 0.7331066049891948
  train_matthews_corrcoef_samples:
  - 0.7564862701039323
  - 0.7566437772706827
  - 0.7602647887370598
  - 0.7637465541069839
  - 0.7684495029232548
  train_matthews_corrcoef_samples_oob:
  - 0.7127993490305795
  - 0.7220467586091557
  - 0.7348807420108324
  - 0.7404294071951043
  - 0.7435070747496412
  train_matthews_corrcoef_weighted:
  - 0.7431541451878829
  - 0.7427036160712939
  - 0.7405287557299962
  - 0.7452105899093809
  - 0.7521012835257187
  train_matthews_corrcoef_weighted_oob:
  - 0.7031946488174298
  - 0.7093921259700675
  - 0.7165075514515538
  - 0.7231964175373643
  - 0.7272725749519213
  train_ndgc:
  - 0.9030697592816004
  - 0.9049703930773486
  - 0.9016015839694802
  - 0.903381282634815
  - 0.9085116906379637
  train_ndgc_oob:
  - 0.899150924161646
  - 0.8964316039107667
  - 0.8958381419606697
  - 0.8966249727665313
  - 0.9012019043217496
  train_neg_coverage_error:
  - -2.309473684210526
  - -2.3121019108280256
  - -2.305732484076433
  - -2.2863070539419086
  - -2.281183932346723
  train_neg_coverage_error_oob:
  - -2.3789473684210525
  - -2.394904458598726
  - -2.403397027600849
  - -2.367219917012448
  - -2.382663847780127
  train_neg_hamming_loss_macro:
  - -0.12175438596491227
  - -0.12172682236376503
  - -0.11783439490445859
  - -0.1168741355463347
  - -0.11416490486257928
  train_neg_hamming_loss_macro_oob:
  - -0.13859649122807016
  - -0.13694267515923567
  - -0.12880396319886764
  - -0.12621023513139695
  - -0.12544045102184637
  train_neg_hamming_loss_micro:
  - -0.12175438596491228
  - -0.12172682236376504
  - -0.1178343949044586
  - -0.11687413554633472
  - -0.11416490486257928
  train_neg_hamming_loss_micro_oob:
  - -0.13859649122807016
  - -0.13694267515923567
  - -0.12880396319886767
  - -0.12621023513139695
  - -0.12544045102184637
  train_neg_hamming_loss_samples:
  - -0.12175438596491227
  - -0.12172682236376503
  - -0.11783439490445859
  - -0.11687413554633472
  - -0.11416490486257928
  train_neg_hamming_loss_samples_oob:
  - -0.1385964912280702
  - -0.13694267515923567
  - -0.12880396319886767
  - -0.12621023513139695
  - -0.12544045102184637
  train_neg_hamming_loss_weighted:
  - -0.12669317035542632
  - -0.1271297321390059
  - -0.12522709483767655
  - -0.12258186609846361
  - -0.11965599380100064
  train_neg_hamming_loss_weighted_oob:
  - -0.14269269566249335
  - -0.14131596478363598
  - -0.13541913508881534
  - -0.13127780269896452
  - -0.1304181454660251
  train_neg_label_ranking_loss:
  - -0.08430409356725146
  - -0.0832271762208068
  - -0.08324486907289454
  - -0.08592669432918396
  - -0.07902865867982148
  train_neg_label_ranking_loss_oob:
  - -0.09464912280701755
  - -0.0975583864118896
  - -0.09824251002594953
  - -0.09826532964499769
  - -0.09476156918017384
  train_precision_macro:
  - 0.8782456140350877
  - 0.878273177636235
  - 0.8821656050955414
  - 0.8831258644536654
  - 0.8858350951374208
  train_precision_macro_oob:
  - 0.86140350877193
  - 0.8630573248407644
  - 0.8711960368011323
  - 0.8737897648686029
  - 0.8745595489781536
  train_precision_micro:
  - 0.8782456140350877
  - 0.8782731776362349
  - 0.8821656050955414
  - 0.8831258644536653
  - 0.8858350951374208
  train_precision_micro_oob:
  - 0.8614035087719298
  - 0.8630573248407644
  - 0.8711960368011323
  - 0.873789764868603
  - 0.8745595489781536
  train_precision_samples:
  - 0.8782456140350876
  - 0.878273177636235
  - 0.8821656050955414
  - 0.8831258644536654
  - 0.8858350951374208
  train_precision_samples_oob:
  - 0.8614035087719297
  - 0.8630573248407644
  - 0.8711960368011324
  - 0.8737897648686029
  - 0.8745595489781536
  train_precision_weighted:
  - 0.8733068296445737
  - 0.8728702678609942
  - 0.8747729051623236
  - 0.8774181339015364
  - 0.8803440061989993
  train_precision_weighted_oob:
  - 0.8573073043375068
  - 0.8586840352163639
  - 0.8645808649111848
  - 0.8687221973010355
  - 0.8695818545339749
  train_recall_macro:
  - 0.8782456140350877
  - 0.878273177636235
  - 0.8821656050955414
  - 0.8831258644536654
  - 0.8858350951374208
  train_recall_macro_oob:
  - 0.86140350877193
  - 0.8630573248407644
  - 0.8711960368011323
  - 0.8737897648686029
  - 0.8745595489781536
  train_recall_micro:
  - 0.8782456140350877
  - 0.8782731776362349
  - 0.8821656050955414
  - 0.8831258644536653
  - 0.8858350951374208
  train_recall_micro_oob:
  - 0.8614035087719298
  - 0.8630573248407644
  - 0.8711960368011323
  - 0.873789764868603
  - 0.8745595489781536
  train_recall_samples:
  - 0.8782456140350876
  - 0.878273177636235
  - 0.8821656050955414
  - 0.8831258644536654
  - 0.8858350951374208
  train_recall_samples_oob:
  - 0.8614035087719297
  - 0.8630573248407644
  - 0.8711960368011324
  - 0.8737897648686029
  - 0.8745595489781536
  train_recall_weighted:
  - 0.8733068296445737
  - 0.8728702678609942
  - 0.8747729051623236
  - 0.8774181339015364
  - 0.8803440061989993
  train_recall_weighted_oob:
  - 0.8573073043375068
  - 0.8586840352163639
  - 0.8645808649111848
  - 0.8687221973010355
  - 0.8695818545339749
  train_roc_auc_macro:
  - 0.9226303709955977
  - 0.9228307571688014
  - 0.9271476907566117
  - 0.9290314833359311
  - 0.9333800486903917
  train_roc_auc_macro_oob:
  - 0.9128830765693565
  - 0.9120089145601846
  - 0.9147870762029463
  - 0.9166940403898446
  - 0.9238873002745454
  train_roc_auc_micro:
  - 0.9253592820045704
  - 0.9238655139512695
  - 0.9277484122558787
  - 0.9274126296955638
  - 0.9313341469175656
  train_roc_auc_micro_oob:
  - 0.9155785642044107
  - 0.9136103418584627
  - 0.9160302414161811
  - 0.9157543584003166
  - 0.9217714445828722
  train_roc_auc_samples:
  - 0.9156959064327485
  - 0.9167728237791931
  - 0.9167551309271055
  - 0.9140733056708161
  - 0.9209713413201784
  train_roc_auc_samples_oob:
  - 0.9053508771929824
  - 0.9024416135881105
  - 0.9017574899740505
  - 0.9018643384047949
  - 0.9052384308198262
  train_roc_auc_weighted:
  - 0.9173839235749442
  - 0.9155400518466333
  - 0.9189514160328688
  - 0.9218819699662686
  - 0.9270866402196767
  train_roc_auc_weighted_oob:
  - 0.907754470314163
  - 0.9044535271338408
  - 0.9065852011859137
  - 0.9098220164325623
  - 0.9178575159692678
start: 2023-12-22 03:06:42.830357
wrapper: null
